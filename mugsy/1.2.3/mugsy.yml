!Command
positional: []
named:
- !Flag
  description: '- Detect and report duplications. 0 - Skip. Default is 0.'
  synonyms:
  - -duplications
  args: !SimpleFlagArg
    name: '1'
  optional: true
- !Flag
  description: debug level. > 2 verbose
  synonyms:
  - -debug
  args: !EmptyFlagArg {}
  optional: true
command:
- mugsy
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    mugsy - a multiple whole genome aligner\n\n\e[1mUSAGE\e\
  [0m\n    mugsy [-p output prefix] multifasta_genome1.fsa multifasta_genome2.fsa\
  \ ...\n    multifasta_genomeN.fsa\n\n\e[1mSYNOPSIS\e[0m\n    Mugsy is multiple whole\
  \ genome aligner. Mugsy uses Nucmer for pairwise\n    alignment, a custom graph\
  \ based segmentation procedure for identifying\n    LCBs (synchain-mugsy), and a\
  \ segment-based progressive multiple alignment\n    strategy from Seqan::TCoffee.\
  \ Mugsy accepts draft genomes in the form of\n    multi-FASTA files. Mugsy does\
  \ not require a reference genome and is robust\n    in the presence of large scale\
  \ genome flux and genome rearrangments. Mugsy\n    performs best on closely related\
  \ genomes and has been used to align\n    several dozens bacterial genomes.\n\n\
  \    Mugsy outputs a series of alignments in MAF format.\n\n    See http://mugsy.sf.net\
  \ for more information\n\n\e[1mINPUT\e[0m\n    Input is one or more (multi)FASTA\
  \ files, one per genome. Each file should\n    contain all the sequences for a single\
  \ organism/species. The filename is\n    used as the genome name.\n\n    Limitations\
  \ on FASTA input: input FASTA headers must not contain ':' or\n    '-' ambiguity\
  \ characters are converted to N in output\n\n    Common options:\n\n        -p|prefix\
  \       prefix for output files\n\n        --directory directory used to store output\
  \ and temporary\n          files. Must be a absolute path\n\n        -d|--distance\
  \   maximum distance along a single sequence (bp) for\n         chaining anchors\
  \ into locally colinear blocks (LCBs).  This is\n         used by the segmentation\
  \ step synchain-mugsy. Default is 1000bp.\n\n        -c|--minlength minimum span\
  \ of an aligned region in a colinear\n         block (bp). This is used by the segmentation\
  \ step\n         synchain-mugsy. Default is 30bp.\n\n        -duplications 1 - Detect\
  \ and report duplications. 0 - Skip. Default is 0.\n\n    Other options:\n\n   \
  \     -nucmeropts options passed through to the Nucmer\n         package. Eg. -nucmeropts\
  \ \"-l 15\" sets the minimum MUM length in\n         NUCmer to 15. See the Nucmer\
  \ documentation at\n         http://mummer.sf.net for more information.  Default\
  \ is -l 15.\n\n        -allownestedlcbs. Default=false. Places each multi-genome\
  \ anchor\n         in exactly one LCB; the longest spanning LCB\n\n        -plot\
  \ output genome dot plots in GNUplot format. Overlays LCBS\n         onto pairwise\
  \ plots from mummerplot. Display of draft genomes in\n         these plots is not\
  \ supported.\n\n        -fullsearch Run a complete all pairs Nucmer search with\
  \ each\n         sequence as a reference and query (n^2-1 total searches). Default\n\
  \         is one direction only (n^2-1/2 searches).\n\n        -refine run an second\
  \ iteration of Mugsy on each LCB to refine the\n         alignment using either\
  \ Mugsy (--refine mugsy), FSA (--refine\n         fsa), Pecan (--refine pecan),\
  \ MLAGAN (--refine mlagan). Requires\n         necessary tools are in your path:\
  \  \n         fsa: fsa\n         pecan: muscle,exonerate, in the path. classpath\
  \ set for bp.pecan.Pecan.\n         mlagan: mlagan.sh\n\n\n        -debug      \
  \     debug level. > 2 verbose\n\n\e[1mOUTPUT\e[0m\n    Primary output is MAF format.\n\
  \n    Utilities for parsing MAF are available at the UCSC genome browser and in\n\
  \    the multiz,TBA toolkit. GMAJ is a popular visualization tool for MAF.\n\n\e\
  [1mMORE INFO\e[0m\n    This script is a wrapper that invokes an all-against-all\
  \ Nucmer search and\n    the mugsy aligner. The two primary components of the aligner\
  \ can also be\n    run independently\n\n    1) mugsyWGA\n\n    Generates a whole\
  \ genome alignment (WGA) from a library of pairwise\n    alignments in XMFA format.\
  \ Implemented with the refined segment graph and\n    progressive consistency-based\
  \ alignment procedure described in\n    Seqan::TCoffee (Rausch et al 2008). Invokes\
  \ synchain-mugsy to segment the\n    input genomes into alignable regions.\n\n \
  \   2) synchain-mugsy\n\n    Derives a segmentation of genome anchors that fulfill\
  \ --distance and\n    --minlength criteria. Anchors can be any oriented features\
  \ that span two\n    or more of the input genomes. The output is a set of locally\
  \ colinear\n    blocks (LCBs)\n\n\e[1mUsing Mugsy with other aligners\e[0m\n   \
  \ Mugsy supports realignment of LCBs using FSA,Pecan, MLAGAN. For FSA, make\n  \
  \  sure FSA is in your PATH and run with --refine fsa\n\n\e[1mFor more information\e\
  [0m\n    http://www.sf.net/mugsy.\n\n    AUTHOR: Sam Angiuoli angiuoli@cs.umd.edu\
  \ 2009\n\n"
generated_using:
- --help
