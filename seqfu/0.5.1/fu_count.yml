!Command
command:
- fu-count
positional:
- !Positional
  description: The table "key" is the absolute path of each input file, but the printed
  position: 0
  name: options.
  optional: false
- !Positional
  description: "*-s, --sortby*\nSort by field: 'order' (default, that is the order\
    \ of the input\nfiles as supplied by the user), 'count' (number of sequences),\n\
    'name' (filename). By default will be descending for numeric fields,\nascending\
    \ for 'path'. See \"-r, --reverse\".\n*-r, --reverse*\nReverse the sorting order."
  position: 0
  name: SORTING
  optional: false
- !Positional
  description: "*-f, --fastx*\nForce FASTX reader also for files ending by .fastq\
    \ or .fq (by\ndefault would use getFastqRead() )\n*-v, --verbose*\nIncrease verbosity\n\
    *-h, --help*\nDisplay this help page"
  position: 1
  name: OTHER
  optional: false
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    fu-count - A FASTA/FASTQ sequence counter\n\nSYNOPSIS\n    \
  \  fqc [options] [FILE1 FILE2 FILE3...]\n\nDESCRIPTION\n    This program parses\
  \ a list of FASTA/FASTQ files printing the number of\n    sequences found in each\
  \ file. Reads both uncompressed and GZipped files.\n    Default output is the filename,\
  \ tab, sequence count. Can be changed with\n    options.\n\n    The table \"key\"\
  \ is the absolute path of each input file, but the printed\n    name can be changed\
  \ with options.\n\nPARAMETERS\n  FILE NAME\n    *-a, --abspath*\n        Print the\
  \ absolute path of the filename (the absolute path is always\n        the table\
  \ key, but if relative paths are supplied, they will be\n        printed).\n\n \
  \   *-b, --basename*\n        Print the filename without the path.\n\n    *-d, --thousandsep*\n\
  \        Print reads number with a \",\" used as thousand separator\n\n  OUTPUT\
  \ FORMAT\n    Default output format is the filename and reads counts, tab separated.\n\
  \    Options formatting either filename (\"-a\", \"-b\") and reads counts (\"-d\"\
  )\n    will still work.\n\n    *-t, --tsv* and *-c, --csv*\n        Print a tabular\
  \ output either tab separated (with \"-t\") or comma\n        separated (with \"\
  -c\").\n\n    *-j, --json*\n        Print full output in JSON format.\n\n    *-p,\
  \ --pretty*\n        Same as JSON but in \"pretty\" format.\n\n    *-x, --screen*\n\
  \        This feature requires Term::ASCIITable. Print an ASCII-art table\n    \
  \    like:\n\n          .---------------------------------------------------.\n\
  \          | # | Name                     | Seqs | Gz | Parser |\n          +---+--------------------------+------+----+--------+\n\
  \          | 1 | data/comments.fasta      |    3 |  0 | FASTX  |\n          | 2\
  \ | data/comments.fastq      |    3 |  0 | FASTQ  |\n          | 3 | data/compressed.fasta.gz\
  \ |    3 |  1 | FASTX  |\n          | 4 | data/compressed.fastq.gz |    3 |  1 |\
  \ FASTQ  |\n          '---+--------------------------+------+----+--------'\n\n\
  \  SORTING\n    *-s, --sortby*\n        Sort by field: 'order' (default, that is\
  \ the order of the input\n        files as supplied by the user), 'count' (number\
  \ of sequences),\n        'name' (filename). By default will be descending for numeric\
  \ fields,\n        ascending for 'path'. See \"-r, --reverse\".\n\n    *-r, --reverse*\n\
  \        Reverse the sorting order.\n\n  OTHER\n    *-f, --fastx*\n        Force\
  \ FASTX reader also for files ending by .fastq or .fq (by\n        default would\
  \ use getFastqRead() )\n\n    *-v, --verbose*\n        Increase verbosity\n\n  \
  \  *-h, --help*\n        Display this help page\n\nAUTHOR\n    Andrea Telatin <andrea@telatin.com>\n\
  \nCOPYRIGHT AND LICENSE\n    This software is Copyright (c) 2019 by Andrea Telatin.\n\
  \n    This is free software, licensed under:\n\n      The MIT (X11) License\n\n"
generated_using:
- --help
