!Command
command:
- meryl-lookup
positional:
- !Positional
  description: If the lookup table requires more memory than allowed, the program
  position: 0
  name: speed.
  optional: false
named:
- !Flag
  description: '[<input2.fasta>] \'
  synonyms:
  - -sequence
  args: !SimpleFlagArg
    name: input1.fasta
  optional: true
- !Flag
  description: <output1>      [<output2>]
  synonyms:
  - -output
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <input1.meryl> [<input2.meryl>] [...] \
  synonyms:
  - -mers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <input1name>   [<input2name>]   [...]
  synonyms:
  - -labels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: m    Ignore kmers with value below m
  synonyms:
  - -min
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: m    Ignore kmers with value above m
  synonyms:
  - -max
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Number of threads to use when constructing lookup table.
  synonyms:
  - -threads
  args: !SimpleFlagArg
    name: t
  optional: true
- !Flag
  description: Don't use more than m GB memory
  synonyms:
  - -memory
  args: !SimpleFlagArg
    name: m
  optional: true
- !Flag
  description: "Report a tab-delimited line for each sequence showing the number of\
    \ kmers\nin the sequence, in the database, and in both.\noutput:  seqName <tab>\
    \ mersInSeq <tab> mersInDB <tab> mersInBoth\nseqName    - name of the sequence\n\
    mersInSeq  - number of mers in the sequence\nmersInDB   - number of mers in the\
    \ meryl database\nmersInBoth - number of mers in the sequence that are\nalso in\
    \ the database"
  synonyms:
  - -existence
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Report a tab-delimited line reporting each kmer in the input sequences,\
    \ in\norder, annotated with the value of the kmer in the input database.  If the\
    \ kmer\ndoes not exist in the database its value will be reported as zero.\noutput:\
    \  seqName <tab> seqId <tab> seqPos <tab> exists <tab> fwd-mer <tab> fwd-val <tab>\
    \ rev-mer <tab> rev-val\nseqName    - name of the sequence this kmer is from\n\
    seqId      - numeric version of the seqName (0-based)\nseqPos     - start position\
    \ (0-based) of the kmer in the sequence\nexists     - 'T' if the kmer exists in\
    \ the database, 'F' if it does not\nfwd-mer    - forward mer sequence\nfwd-val\
    \    - value of the forward mer in the database\nrev-mer    - reverse mer sequence\n\
    rev-val    - value of the reverse mer in the database"
  synonyms:
  - -dump
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "/ -exclude\nExtract sequences containing (-include) or not containing\
    \ (-exclude) kmers in\nany input database.  Output sequences are written in the\
    \ same format as the input\nsequences, with the number of kmers found added to\
    \ the name.\nIf two input files are supplied, the corresponding sequences are\
    \ treated as a pair.\noutput:  sequence given format (fasta or fastq) with the\
    \ number of overlapping kmers appended\nif pairs of sequences are given, R1 will\
    \ be stdout and R2 be named as <output.r2>\n<output.r2> will be automatically\
    \ compressed if ends with .gz, .bz2, or xs\nseqName    - name of the sequence\
    \ this kmer is from\nmersInBoth - number of mers in both sequence and in the database"
  synonyms:
  - -include
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Extract sequences *NOT containing* kmers in <input.meryl>.\noutput:\
    \  sequence given format (fasta or fastq) without reads containing kmers\nif pairs\
    \ of sequences are given, R1 will be stdout and R2 be named as <output.r2>\n<output.r2>\
    \ will be automatically compressed if ends with .gz, .bz2, or xs\nseqName    -\
    \ name of the sequence this kmer is from"
  synonyms:
  - -exclude
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: meryl-lookup <report-type> \\\n         -sequence <input1.fasta>\
  \ [<input2.fasta>] \\\n         -output   <output1>      [<output2>]\n         -mers\
  \     <input1.meryl> [<input2.meryl>] [...] \\\n         -labels   <input1name>\
  \   [<input2name>]   [...]\n  Query the kmers in meryl database(s) <input.meryl>\
  \ with the sequences\n  in <input.fasta>.\n\n  Multiple databases are supported.\n\
  \n  Up to two inptu sequences are supported (only for -include / -exclude).\n\n\
  \  Input files can be FASTA or FASTQ; uncompressed, gz, bz2 or xz compressed\n\n\
  \  Output from each input is sent to the associated output file.  Files will be\n\
  \  compressed if the appropriate extension is supplied (gz, bz2 or xz).\n\n  Each\
  \ input database can be filtered by value.  More advanced filtering\n  requires\
  \ a new database to be constructed using meryl.\n    -min   m    Ignore kmers with\
  \ value below m\n    -max   m    Ignore kmers with value above m\n    -threads t\
  \  Number of threads to use when constructing lookup table.\n\n  Memory usage can\
  \ be limited, within reason, by sacrificing kmer lookup\n  speed.  If the lookup\
  \ table requires more memory than allowed, the program\n  exits with an error.\n\
  \    -memory m   Don't use more than m GB memory\n\n  Exactly one report type must\
  \ be specified.\n\n  -existence    Report a tab-delimited line for each sequence\
  \ showing the number of kmers\n    in the sequence, in the database, and in both.\n\
  \n    output:  seqName <tab> mersInSeq <tab> mersInDB <tab> mersInBoth\n      seqName\
  \    - name of the sequence\n      mersInSeq  - number of mers in the sequence\n\
  \      mersInDB   - number of mers in the meryl database\n      mersInBoth - number\
  \ of mers in the sequence that are\n                   also in the database\n\n\n\
  \  -dump\n    Report a tab-delimited line reporting each kmer in the input sequences,\
  \ in\n    order, annotated with the value of the kmer in the input database.  If\
  \ the kmer\n    does not exist in the database its value will be reported as zero.\n\
  \n    output:  seqName <tab> seqId <tab> seqPos <tab> exists <tab> fwd-mer <tab>\
  \ fwd-val <tab> rev-mer <tab> rev-val\n      seqName    - name of the sequence this\
  \ kmer is from\n      seqId      - numeric version of the seqName (0-based)\n  \
  \    seqPos     - start position (0-based) of the kmer in the sequence\n      exists\
  \     - 'T' if the kmer exists in the database, 'F' if it does not\n      fwd-mer\
  \    - forward mer sequence\n      fwd-val    - value of the forward mer in the\
  \ database\n      rev-mer    - reverse mer sequence\n      rev-val    - value of\
  \ the reverse mer in the database\n\n  -include / -exclude\n    Extract sequences\
  \ containing (-include) or not containing (-exclude) kmers in\n    any input database.\
  \  Output sequences are written in the same format as the input\n    sequences,\
  \ with the number of kmers found added to the name.\n\n    If two input files are\
  \ supplied, the corresponding sequences are treated as a pair.\n\n\n\n    output:\
  \  sequence given format (fasta or fastq) with the number of overlapping kmers appended\n\
  \             if pairs of sequences are given, R1 will be stdout and R2 be named\
  \ as <output.r2>\n              <output.r2> will be automatically compressed if\
  \ ends with .gz, .bz2, or xs\n      seqName    - name of the sequence this kmer\
  \ is from\n      mersInBoth - number of mers in both sequence and in the database\n\
  \n  -exclude       Extract sequences *NOT containing* kmers in <input.meryl>.\n\n\
  \     output:  sequence given format (fasta or fastq) without reads containing kmers\n\
  \              if pairs of sequences are given, R1 will be stdout and R2 be named\
  \ as <output.r2>\n              <output.r2> will be automatically compressed if\
  \ ends with .gz, .bz2, or xs\n         seqName    - name of the sequence this kmer\
  \ is from\n\nUnknown option '--help'.\nNo input sequences (-sequence) supplied.\n\
  No query meryl database (-mers) supplied.\nNo report-type (-existence, etc) supplied.\n"
generated_using:
- --help
