!Command
positional:
- !Positional
  description: ''
  position: 0
  name: v
  optional: false
- !Positional
  description: ''
  position: 1
  name: input.cns
  optional: true
named:
- !Flag
  description: ''
  synonyms:
  - -S
  args: !SimpleFlagArg
    name: seqStore
  optional: true
- !Flag
  description: ''
  synonyms:
  - -T
  args: !SimpleFlagArg
    name: tigStore
  optional: true
command:
- tgStoreLoad
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: tgStoreLoad -S <seqStore> -T <tigStore> <v> [input.cns]\n\n  -S\
  \ <seqStore>         Path to the sequence store\n  -T <tigStore> <v>     Path to\
  \ the tigStore and version to add tigs to\n\n  -L <file-of-files>    Load the tig(s)\
  \ from files listed in 'file-of-files'\n                        (WARNING: program\
  \ will succeed if this file is empty)\n\n  -n                    Don't load into\
  \ store, just report what would have happened\n\n  -dump                 Dump the\
  \ cns files as ASCII, don't load into store\n  -test                 Test the cns\
  \ files for various errors, don't load into store\n\n  The primary operation is\
  \ to replace tigs in the store with ones in a set of input files.\n  The input files\
  \ can be either supplied directly on the command line or listed in\n  a text file\
  \ (-L).\n\n  A new store is created if one doesn't exist, otherwise, whatever tigs\
  \ are there are\n  replaced with those in the -R file.  If version 'v' doesn't exist,\
  \ it is created.\n\n  Even if -n is supplied, a new store is created if one doesn't\
  \ exist.\n\n  To add a new tig, give it a tig id of -1.  New tigs must be added\
  \ to the latest version.\n  To delete a tig, remove all children, and set the number\
  \ of them to zero.\n\nERROR:  Unknown option '--help'.\nERROR:  no sequence store\
  \ (-S) supplied.\nERROR:  no tig store (-T) supplied.\nERROR:  no input tig files\
  \ supplied on command line or via -L option.\n"
generated_using:
- --help
