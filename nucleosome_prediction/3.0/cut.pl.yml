!Command
positional: []
named: []
command:
- cut.pl.bak
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\nsyntax: EXE_BASE_DIR/lib/cut.pl [OPTIONS] TAB_FILE\n\nTAB_FILE is any\
  \ tab-delim_inited file.  Can also be passed into standard\n   input.\n\nOPTIONS\
  \ are:\n\n-q: Quiet mode: turn verbosity off (default verbose)\n-h NUM: Set the\
  \ number of row headers to NUM (default 0).\n-d DELIM: Change the input and output\
  \ delimiter to DELIM (default <tab>).\n-di DELIM: Change the input delimiter to\
  \ DELIM (default <tab>).\n-do DELIM: Change the output delimiter to DELIM (default\
  \ <tab>).\n-s:        Suppress blanks\n-i:        Invert. Use the complement of\
  \ the fields specified in -f.\n-t:        Tight.  Tell the script to expect different\
  \ number of columns in\n           each row so that it needs to recompute the column\
  \ boundaries for\n           each row.  Note this option slows the script down somewhat.\n\
  -f RANGES: specify column ranges to include.  RANGES are comma-\n           seperated\
  \ lists of single columns or a range of columns\n           for example:\n\n   \
  \                5-6,2,1-3\n\n           would select columns 1 through 6 except\
  \ column 4.  Note\n           that 2 is redundantly specified by no error results.\n\
  -n <str>:  specify columns by names (instead of by numbers with -f). Assumes\n \
  \          the first line is a header, and translates column names in <str>\n  \
  \         into their respective column numbers in the header. Supports\n       \
  \    multiple ranges. Column names are assumed to be unique and not to\n\t   contain\
  \ any commas.\n-file <str>: get column names (as in -n) from specified file. each\
  \ column name\n           should appear on a separate line.\n-0:        zero-based\
  \ column numbers.\n-e:        preserve empty values.\n-sk:       number of header\
  \ columns (default 0)\n\n"
generated_using:
- --help
