!Command
command:
- optimize_primers.py
positional: []
named:
- !Flag
  description: "Print information during execution -- useful for\ndebugging [default:\
    \ False]"
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Specify output directory for linkers summary.\n[default: .]"
  synonyms:
  - -o
  - --output_dir
  args: !SimpleFlagArg
    name: OUTPUT_DIR
  optional: true
- !Flag
  description: "Value to use from primer hits file to determine a\ngiven primer's\
    \ amplification success.  Valid choices\nare weighted_score, overall_mismatches,\
    \ tp_mismatches.\nGibbs energy scores not currently implemented\n[default: weighted_score]"
  synonyms:
  - -s
  - --score_type
  args: !SimpleFlagArg
    name: SCORE_TYPE
  optional: true
- !Flag
  description: "If primer has score at or below this parameter, the\nprimer amplification\
    \ is considered to be successful.\n[default: 2.0]"
  synonyms:
  - -t
  - --score_threshold
  args: !SimpleFlagArg
    name: SCORE_THRESHOLD
  optional: true
- !Flag
  description: "Target primer hits file to generate base frequencies\nwith. [REQUIRED]\n"
  synonyms:
  - -i
  - --hits_fp
  args: !SimpleFlagArg
    name: HITS_FP
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: optimize_primers.py [options] {-i/--hits_fp HITS_FP}\n\n[] indicates\
  \ optional input (order unimportant)\n{} indicates required input (order unimportant)\n\
  \n\n\nOptimize primers takes an input primer hits file (created by analyze_primers.py)\n\
  and generates an output file containing the base frequency for each position \n\
  in the primer.\n\nOnly primer hits that exceed a given score threshold will be considered\
  \ for\nthe base frequency output.\n\n\nExample usage: \nPrint help message and exit\n\
  \ optimize_primers.py -h\n\nStandard Example usage: \n optimize_primers.py [options]\
  \ {-i hits_filepath [required]}\n\nUse overall mismatches for scoring, set score\
  \ threshold to only consider primer hits that are equal to or less than two mismatches:\
  \ \n optimize_primers.py -i primer2r_hits.txt -s overall_mismatches -t 2\n\nOptions:\n\
  \  --version             show program's version number and exit\n  -h, --help  \
  \          show this help message and exit\n  -v, --verbose         Print information\
  \ during execution -- useful for\n                        debugging [default: False]\n\
  \  -o OUTPUT_DIR, --output_dir=OUTPUT_DIR\n                        Specify output\
  \ directory for linkers summary.\n                        [default: .]\n  -s SCORE_TYPE,\
  \ --score_type=SCORE_TYPE\n                        Value to use from primer hits\
  \ file to determine a\n                        given primer's amplification success.\
  \  Valid choices\n                        are weighted_score, overall_mismatches,\
  \ tp_mismatches.\n                        Gibbs energy scores not currently implemented\n\
  \                        [default: weighted_score]\n  -t SCORE_THRESHOLD, --score_threshold=SCORE_THRESHOLD\n\
  \                        If primer has score at or below this parameter, the\n \
  \                       primer amplification is considered to be successful.\n \
  \                       [default: 2.0]\n\n  REQUIRED options:\n    The following\
  \ options must be provided under all circumstances.\n\n    -i HITS_FP, --hits_fp=HITS_FP\n\
  \                        Target primer hits file to generate base frequencies\n\
  \                        with. [REQUIRED]\n"
generated_using:
- --help
