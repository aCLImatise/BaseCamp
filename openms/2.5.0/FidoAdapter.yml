!Command
positional: []
named:
- !Flag
  description: "*                 Input: identification results (valid formats: 'idXML')"
  synonyms:
  - -in
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "*                Output: identification results with scored/grouped\
    \ proteins (valid formats: 'idXML')"
  synonyms:
  - -out
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: '*    The Fido executable. Provide a full or relative path, or make
    sure it can be found in your PATH environment.'
  synonyms:
  - -fido_executable
  args: !SimpleFlagArg
    name: path
  optional: true
- !Flag
  description: '*  The FidoChooseParameters executable. Provide a full or relative
    path, or make sure it can be found in your PATH environment.'
  synonyms:
  - -fidocp_executable
  args: !SimpleFlagArg
    name: path
  optional: true
- !Flag
  description: Process multiple protein identification runs in the input separately,
    don't merge them. Merging results in loss of descriptive information of the single
    protein identification runs.
  synonyms:
  - -separate_runs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Post-process Fido output with greedy resolution of shared peptides
    based on the protein probabilities. Also adds the resolved ambiguity groups to
    output.
  synonyms:
  - -greedy_group_resolution
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Omit clean-up of peptide sequences (removal of non-letter characters,
    replacement of I with L)
  synonyms:
  - -no_cleanup
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Consider all PSMs of each peptide, instead of only the best one
  synonyms:
  - -all_PSMs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Perform inference on protein group level (instead of individual protein
    level). This will lead to higher probabilities for (bigger) protein groups.
  synonyms:
  - -group_level
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Binary logarithm of the max. number of connected states in a subgraph.\
    \ For a value N, subgraphs that are bigger than 2^N will be split up, sacrificing\
    \ accuracy for runtime. '0' uses the default (18). (default: '0' min: '0')"
  synonyms:
  - -log2_states
  args: !SimpleFlagArg
    name: number
  optional: true
- !Flag
  description: Use the given TOPP INI file
  synonyms:
  - -ini
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Sets the number of threads allowed to be used by the TOPP tool (default:\
    \ '1')"
  synonyms:
  - -threads
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: Writes the default configuration file
  synonyms:
  - -write_ini
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Shows all options (including advanced)
  synonyms:
  - --helphelp
  args: !EmptyFlagArg {}
  optional: true
command:
- FidoAdapter
parent:
subcommands: []
help_flag: !Flag
  description: Shows options
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nFidoAdapter -- Runs the protein inference engine Fido.\nFull documentation:\
  \ http://www.openms.de/documentation/TOPP_FidoAdapter.html\nVersion: 2.5.0-HEAD-HASH-NOTFOUND-HEAD-HASH-NOTFOUND\
  \ May 19 2020, 23:12:02, Revision: HEAD-HASH-NOTFOUND\nTo cite OpenMS:\n  Rost HL,\
  \ Sachsenberg T, Aiche S, Bielow C et al.. OpenMS: a flexible open-source software\
  \ platform for mass spectrometry data analysis. Nat Meth. 2016; 13, 9: 741-748.\
  \ doi:10.1038/nmeth.3959.\n\nUsage:\n  FidoAdapter <options>\n\nOptions (mandatory\
  \ options marked with '*'):\n  -in <file>*                 Input: identification\
  \ results (valid formats: 'idXML')\n  -out <file>*                Output: identification\
  \ results with scored/grouped proteins (valid formats: 'idXML')\n  -fido_executable\
  \ <path>*    The Fido executable. Provide a full or relative path, or make sure\
  \ it can be found in your PATH environment.\n  -fidocp_executable <path>*  The FidoChooseParameters\
  \ executable. Provide a full or relative path, or make sure it can be found in your\
  \ PATH environment.\n  -separate_runs              Process multiple protein identification\
  \ runs in the input separately, don't merge them. Merging results in loss of descriptive\
  \ information of the single protein identification runs.\n  -greedy_group_resolution\
  \    Post-process Fido output with greedy resolution of shared peptides based on\
  \ the protein probabilities. Also adds the resolved ambiguity groups to output.\n\
  \  -no_cleanup                 Omit clean-up of peptide sequences (removal of non-letter\
  \ characters, replacement of I with L)\n  -all_PSMs                   Consider all\
  \ PSMs of each peptide, instead of only the best one\n  -group_level           \
  \     Perform inference on protein group level (instead of individual protein level).\
  \ This will lead to higher probabilities for (bigger) protein groups.\n  -log2_states\
  \ <number>       Binary logarithm of the max. number of connected states in a subgraph.\
  \ For a value N, subgraphs that are bigger than 2^N will be split up, sacrificing\
  \ accuracy for runtime. '0' uses the default (18). (default: '0' min: '0')\n\nProbability\
  \ values for running Fido directly, i.e. without parameter estimation (in which\
  \ case other settings, except 'log2_states', are ignored):\n  -prob:protein <value>\
  \       Protein prior probability ('gamma' parameter) (default: '0.0' min: '0.0')\n\
  \  -prob:peptide <value>       Peptide emission probability ('alpha' parameter)\
  \ (default: '0.0' min: '0.0')\n  -prob:spurious <value>      Spurious peptide identification\
  \ probability ('beta' parameter) (default: '0.0' min: '0.0')\n\n               \
  \               \nCommon TOPP options:\n  -ini <file>                 Use the given\
  \ TOPP INI file\n  -threads <n>                Sets the number of threads allowed\
  \ to be used by the TOPP tool (default: '1')\n  -write_ini <file>           Writes\
  \ the default configuration file\n  --help                      Shows options\n\
  \  --helphelp                  Shows all options (including advanced)\n\n"
generated_using:
- --help
