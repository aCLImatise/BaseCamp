!Command
positional:
- !Positional
  description: ''
  position: 0
  name: arguments
  optional: true
named:
- !Flag
  description: "'\\n' (default is ','). If the switch r is"
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[value]                     given value, e.g. 3.5 (default 1.0).'
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[value:taxon_string]        most recent common ancestor of comma separated
    taxa. Separate clade with colon E.g. -V 3: Taxon_1,Taxon_2:Taxon_3,Taxon_4.'
  synonyms:
  - -V
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[value:cut off]             distance (cut off) from root with the
    given value (separated by colon), e.g. 2:40 (default 1.0:0.0).'
  synonyms:
  - -U
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', or --nni all.'
  synonyms:
  - --nni
  args: !SimpleFlagArg
    name: '4'
  optional: true
command:
- treebender
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Treebender 1.0 is a command line program for manipulating trees. The program\n\
  take a tree in newick or nexus format as indata through standard in or from a\n\
  file and process it according to given options.\n(c) Martin Ryberg 2016.\n\nUsage:\n\
  treebender [arguments] < file.tree\ntreebender [arguments] file.tree\n\nFor the\
  \ second alternative you need to be careful so treebender does not\ninterpret the\
  \ filename as an extra argument to a switch. If this happen\ntreebender will expect\
  \ input from standard in and it will appear as nothing is\nhappening. This can be\
  \ avoided by giving the filename after the switch --file/\n-f. When taxa should\
  \ be given as extra arguments they can be given in a text\nfollowing the format\
  \ for the argument. Newline and carriage returns will be\nignored. The file name\
  \ should be given behind the word file and colon, e.g.\n-d file:file_name.txt.\n\
  \nArguments:\n--branch_lengths / -a [r/n]       print branch lengths, the separator\
  \ can be\n                                  given as first argument after the switch,\
  \ e.g.\n                                   -a '\\n' (default is ','). If the switch\
  \ r is\n                                  given as second argument after a colon\
  \ (:),\n                                  e.g. -a '\\n:r', the value of the root\
  \ branch\n                                  will be printed as well, if n (default)\
  \ is\n                                  given it will not.  A separator between\
  \ output\n                                  from different trees can be given after\n\
  \                                  another colon.\n--change_names / -c [taxa]  \
  \      change the name of tips. Tip names to be\n                              \
  \    changed should be given pairwise with present\n                           \
  \       name first and new name second, separated by\n                         \
  \         '|'. Separate pairs should be separated by ','\n                     \
  \             e.g. -c 'taxon1|new1,taxon2|new2' (quotation\n                   \
  \               marks required). If several tips have the same\n               \
  \                   name all will be changed. Changes later in the\n           \
  \                       list will be effected by changes made earlier\n        \
  \                          in the list, e.g. -c 'taxon1|new1,new1|new2'\n      \
  \                            will change the name of taxon1 to new2.\n--clade_credibility\
  \               give the log of the product of the support of\n                \
  \                  all clades.\n--clear_internal_node_labels      delete the internal\
  \ node labels\n--cluster [method]                get clusters based on method, e.g.\
  \ --cluster\n                                  branch_length. Available methods:\n\
  \                                  branch_length - separate clusters by single\n\
  \                                     link clustering based on phylogenetic\n  \
  \                                   distance. Cut off should be given after\n  \
  \                                   colon, e.g. --cluster branch_length:0.03.\n\
  \                                  long_branch - returns taxa in clades on\n   \
  \                                  branches longer than cut off. Cut off\n     \
  \                                should be given after colon (:).\n            \
  \                      tip_name - cluster taxa based on taxon\n                \
  \                     annotation. Should be followed after a\n                 \
  \                    colon by a single character that\n                        \
  \             separates different parts of the tip name\n                      \
  \               (default ' ') and after another colon (:) a\n                  \
  \                   number giving which position in the name\n                 \
  \                    should be used for clustering, (default 1),\n             \
  \                        e.g. tip_name:\\|:5.\n--depth / -D                    \
  \  get the longest distance from the root to any\n                             \
  \     of the tips.\n--distances_to_root / -z [sep.]   output the number of nodes\
  \ and branch length\n                                  distance to the root for\
  \ each tip. The\n                                  separator between tip name and\
  \ value can be\n                                  specified, separated by colon,\
  \ e.g. -p \",:|\"\n                                  (default is newline and tab).\
  \ A separator\n                                  between output from different trees\
  \ can be\n                                  given after another colon\n--drop_tips\
  \ / -d [taxa]           drop the given tips from the tree, e.g. -d\n           \
  \                       taxon1,taxon2,taxon3.\n--get_tip_names / -t [sep.]     \
  \  get the names of the tips in the tree, a\n                                  separator\
  \ can be specified, e.g. -t \\\\n (each\n                                  name\
  \ on separate rows; ',' is the default\n                                  separator).\
  \  A separator between output from\n                                  different\
  \ trees can be given after another\n                                  colon\n--get_branch_numbers\
  \              assign branch numbers as node labels.\n--get_relaxed_outgroup [taxa]\
  \     get the taxa in the clade that include the\n                             \
  \     largest fraction of the difference between\n                             \
  \     number of taxa included in the given group and\n                         \
  \         number not included in the group divided by\n                        \
  \          the total number in the group. Taxa given as\n                      \
  \            comma separated string (see --drop_tips).\n--file / -f [file]     \
  \           give file name, e.g. -f file.tree.\n--format [newick/nexus]        \
  \   give format of input, e.g. --format nexus. If\n                            \
  \      no format is given and the input is a file\n                            \
  \      treebender will try to guess the format, if it\n                        \
  \          is through standard in it will assume newick\n                      \
  \            format.\n--help / -h                       print this help.\n--internal_node_stats\
  \ [val./par.] print stats about the values on the internal\n                   \
  \               nodes. Counts nodes with value above given\n                   \
  \               value, e.g. --internal_node_stats 1.96\n                       \
  \           (default: 1.0). If extra stats are given in\n                      \
  \            FigTree/treeanotator format the parameter to\n                    \
  \              summarize can be given behind colon, e.g.\n                     \
  \             --internal_node_stats 1.96:rate, or\n                            \
  \      --internal_node_stats :rate.\n--interval [integer-integer]      only print\
  \ the trees in the interval. Interval\n                                  given as\
  \ first tree to print - last tree to\n                                  print, e.g.\
  \ --interval 10-100, or just the\n                                  first tree to\
  \ print, e.g. --interval 1000.\n--inverse / -i                    inverse the string\
  \ of taxa, e.g. drop all tips\n                                  but the given.\
  \ E.g -d taxon1,taxon2,taxon3 -i\n--is_monophyletic [taxa]          test if the\
  \ given taxa form a monophyletic\n                                  group, e.g.\
  \ --is_monophyletic taxon1,taxon2.\n--ladderize / -l                  laddrize the\
  \ tree. If followed by l - left\n                                  ladderize, if\
  \ followed by r - right ladderize\n                                  (default),\
  \ e.g. -l r.\n--matrix_representation           present a fasta-formated matrix\
  \ with splits\n                                  of trees coded as characters. Intended\
  \ for\n                                  matrix representation parsimony.\n--mid_point_root\
  \ / -m             root the tree at the mid point.\n--multiply_branch_lengths /\
  \       multiply each branch in the tree with the\n   -u [value]               \
  \      given value, e.g. 3.5 (default 1.0).\n--multiply_branch_lengths_clade / multiply\
  \ branches in clades defined by the\n   -V [value:taxon_string]        most recent\
  \ common ancestor of comma separated\n                                  taxa. Separate\
  \ clade with colon E.g. -V 3:\n                                  Taxon_1,Taxon_2:Taxon_3,Taxon_4.\n\
  --multiply_branch_lengths_until / multiply branches in tree up until given\n   -U\
  \ [value:cut off]             distance (cut off) from root with the given\n    \
  \                              value (separated by colon), e.g. 2:40 (default\n\
  \                                  1.0:0.0).\n--n_supported [value]            \
  \ get the number of nodes with higher support\n                                \
  \  than given value. Should be followed by value,\n                            \
  \      e.g. --n_supported 70.0.\n--nni [node/all]                  perform nearest\
  \ neighbor interchange. If a\n                                  integer is given\
  \ as extra argument the\n                                  interchange will be done\
  \ on that branch (use\n                                  --get_branch_numbers to\
  \ get branch numbers).\n                                  If 0 or no extra argument\
  \ is given a branch\n                                  will be selected randomly.\
  \ If 'all' is given\n                                  NNI will be performed for\
  \ all branches, e.g.\n                                  --nni 4, or --nni all.\n\
  --no_branch_length / -0           do not print branch lengths. If there are no\n\
  \                                  branch lengths in input tree the default is to\n\
  \                                  print zero length branches in the out tree.\n\
  \                                  This argument override this and print no\n  \
  \                                branch lengths.\n--null_short_branches [value]\
  \     set branches with shorter than given value to 0\n--number_of_taxa / -n   \
  \          get the number of tips/taxa in the tree.\n--outgroup_root / -o [taxa]\t\
  \    root using most recent common ancestor of given\n                         \
  \         taxa, e.g. -o taxa1,taxa2.\n--output [newick/nexus]           give tree\
  \ format for output, nexus (nex or x\n                                  for short),\
  \ newick (new or w for short), or\n                                  svg e.g. --output\
  \ x. (default w). For svg\n                                  extra graphical commands\
  \ can be given after a\n                                  colon (:). Each command\
  \ should be separated by\n                                  &, and commands and\
  \ arguments should be\n                                  separated by colon. Possible\
  \ commands are:\n                                  'width' set width of figure;\
  \ 'height' set\n                                  hight of figure; 'offset' set\
  \ offset between\n                                  tips and tip label; 'strokewidth'\
  \ set the\n                                  width of the branches; 'fontsize' sets\
  \ the\n                                  size of the font used; 'font' sets which\
  \ font\n                                  to use; and 'tipcolor' sets the color\
  \ of the\n                                  tip labels given in parenthesis directly\n\
  \                                  behind the color. 'width' and 'height' are\n\
  \                                  mandatory if you want to set any other\n    \
  \                              parameter than tip color. E.g. --output 'svg:\n \
  \                                 width:300&height:400&tipcolor:red(taxon1,\n  \
  \                                taxon2,taxon3)green(taxon4)'.\n--patristic_distances\
  \ / -p [sep.] get the total patristic distance to all other\n                  \
  \                taxa in the tree for each taxon, the separator\n              \
  \                    between different taxa, and the separator\n               \
  \                   between taxon name and value can be specified\n            \
  \                      (separated by colon) e.g. -p \",: | \"\n                \
  \                  (default is new line and space). A separator\n              \
  \                    between output from different trees can be\n              \
  \                    given after another colon.\n--random_tree / -r            \
  \    get a random topology (no branch lengths) with\n                          \
  \        given number of taxa, e.g. -r 20 (default 0).\n                       \
  \           Number of random trees can be given behind a\n                     \
  \             colon (:), e.g. -r 20:100.\n--read_figtree_annotations        will\
  \ read annotations in FigTree/treeanotator\n                                  format\
  \ (e.g. [&rate=1.0,height=3.0]).\n--relaxed_outgroup_root [taxa]    will root on\
  \ the group defined as for\n                                  --get_relaxed_outgroup.\n\
  --set_branch_lengths / -b [value] set all branches in the tree to the given\n  \
  \                                value, e.g. 0.5 (default 1.0).\n--split [method:criterion]\
  \        splits tree based on the longest branch\n                             \
  \     (longest_branch/l) or the mid point\n                                  (mid_point/m)\
  \ until a stop criterion set by\n                                  --split_stop\
  \ is reached. Which derived tree to\n                                  split in\
  \ each iteration can be set after :.\n                                  Either the\
  \ tree with the longest branch (l;\n                                  default for\
  \ longest_branch split) or the tree\n                                  with most\
  \ tips (n; default for mid_point\n                                  split).\n--split_stop\
  \ [stop_crit.:integer] sets criterion for when to stop splitting\n             \
  \                     trees, either at a maximum number of trees\n             \
  \                     (max_tree_number/t) or when all trees have\n             \
  \                     fewer than a certain number of tips\n                    \
  \              (max_tree_size/s). The number should be given\n                 \
  \                 togather with the specific criterion after :.\n--rooted / -R \
  \                    sets if the tree should be considered as\n                \
  \                  rooted or not (only matters when splitting\n                \
  \                  trees).\n--sum_branch_length / -s          get the sum of the\
  \ branch lengths in the tree\n                                  (including root\
  \ branch if length for this is\n                                  given).\n--verbose\
  \ / -v                    get additional output.\n\n"
generated_using:
- --help
