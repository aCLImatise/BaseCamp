!Command
positional:
- !Positional
  description: ''
  position: 0
  name: Calibrate
  optional: false
- !Positional
  description: ''
  position: 1
  name: percentile
  optional: false
- !Positional
  description: ''
  position: 2
  name: ranks
  optional: false
- !Positional
  description: ''
  position: 3
  name: for
  optional: false
- !Positional
  description: ''
  position: 4
  name: models.
  optional: false
- !Positional
  description: ''
  position: 5
  name: Runs
  optional: false
- !Positional
  description: ''
  position: 6
  name: in-place.
  optional: false
named:
- !Flag
  description: Keras batch size for predictions
  synonyms:
  - --prediction-batch-size
  args: !SimpleFlagArg
    name: PREDICTION_BATCH_SIZE
  optional: true
- !Flag
  description: 'Number of alleles per work chunk. Default: 1.'
  synonyms:
  - --alleles-per-work-chunk
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: 'Keras verbosity. Default: 0'
  synonyms:
  - --verbosity
  args: !SimpleFlagArg
    name: VERBOSITY
  optional: true
- !Flag
  description: 'Number of local processes to parallelize training over. Set to 0 for
    serial run. Default: 0.'
  synonyms:
  - --num-jobs
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Keras backend. If not specified will use system default.
  synonyms:
  - --backend
  args: !ChoiceFlagArg
    choices: !!set
      tensorflow-cpu:
      tensorflow-gpu:
      tensorflow-default:
  optional: true
- !Flag
  description: Number of GPUs to attempt to parallelize across. Requires running in
    parallel.
  synonyms:
  - --gpus
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Maximum number of workers to assign to a GPU. Additional tasks will
    run on CPU.
  synonyms:
  - --max-workers-per-gpu
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Restart workers after N tasks. Workaround for tensorflow memory leaks.
    Requires Python >=3.2.
  synonyms:
  - --max-tasks-per-worker
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Write worker stdout and stderr logs to given directory.
  synonyms:
  - --worker-log-dir
  args: !SimpleFlagArg
    name: WORKER_LOG_DIR
  optional: true
- !Flag
  description: 'How many times to rerun failing jobs. Default: 3'
  synonyms:
  - --cluster-max-retries
  args: !SimpleFlagArg
    name: CLUSTER_MAX_RETRIES
  optional: true
command:
- mhcflurry-calibrate-percentile-ranks
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "To show stack trace, run:\nkill -s USR1 13343\nusage: \nCalibrate percentile\
  \ ranks for models. Runs in-place.\n\noptional arguments:\n  -h, --help        \
  \    show this help message and exit\n  --models-dir DIR      Directory to read\
  \ and write models\n  --allele ALLELE [ALLELE ...]\n                        Alleles\
  \ to calibrate percentile ranks for. If not\n                        specified all\
  \ alleles are used\n  --match-amino-acid-distribution-data MATCH_AMINO_ACID_DISTRIBUTION_DATA\n\
  \                        Sample random peptides from the amino acid\n          \
  \              distribution of the peptides listed in the supplied\n           \
  \             CSV file, which must have a 'peptide' column. If not\n           \
  \             specified a uniform distribution is used.\n  --num-peptides-per-length\
  \ N\n                        Number of peptides per length to use to calibrate\n\
  \                        percent ranks. Default: 100000.\n  --motif-summary    \
  \   Calculate motifs and length preferences for each\n                        allele\n\
  \  --summary-top-peptide-fraction X [X ...]\n                        The top X fraction\
  \ of predictions (i.e. tightest\n                        binders) to use to generate\
  \ motifs and length\n                        preferences. Default: [0.0001, 0.001,\
  \ 0.01, 0.1, 1.0]\n  --length-range LENGTH_RANGE LENGTH_RANGE\n                \
  \        Min and max peptide length to calibrate, inclusive.\n                 \
  \       Default: (8, 15)\n  --prediction-batch-size PREDICTION_BATCH_SIZE\n    \
  \                    Keras batch size for predictions\n  --alleles-per-work-chunk\
  \ N\n                        Number of alleles per work chunk. Default: 1.\n  --verbosity\
  \ VERBOSITY\n                        Keras verbosity. Default: 0\n\nLocal parallelism:\n\
  \  --num-jobs N          Number of local processes to parallelize training\n   \
  \                     over. Set to 0 for serial run. Default: 0.\n  --backend {tensorflow-gpu,tensorflow-cpu,tensorflow-default}\n\
  \                        Keras backend. If not specified will use system\n     \
  \                   default.\n  --gpus N              Number of GPUs to attempt\
  \ to parallelize across.\n                        Requires running in parallel.\n\
  \  --max-workers-per-gpu N\n                        Maximum number of workers to\
  \ assign to a GPU.\n                        Additional tasks will run on CPU.\n\
  \  --max-tasks-per-worker N\n                        Restart workers after N tasks.\
  \ Workaround for\n                        tensorflow memory leaks. Requires Python\
  \ >=3.2.\n  --worker-log-dir WORKER_LOG_DIR\n                        Write worker\
  \ stdout and stderr logs to given\n                        directory.\n\nCluster\
  \ parallelism:\n  --cluster-parallelism\n  --cluster-submit-command CLUSTER_SUBMIT_COMMAND\n\
  \                        Default: sh\n  --cluster-results-workdir CLUSTER_RESULTS_WORKDIR\n\
  \                        Default: ./cluster-workdir\n  --additional-complete-file\
  \ ADDITIONAL_COMPLETE_FILE\n                        Additional file to monitor for\
  \ job completion.\n                        Default: STDERR\n  --cluster-script-prefix-path\
  \ CLUSTER_SCRIPT_PREFIX_PATH\n  --cluster-max-retries CLUSTER_MAX_RETRIES\n    \
  \                    How many times to rerun failing jobs. Default: 3\n"
generated_using:
- --help
