!Command
positional: []
named:
- !Flag
  description: Enables verbose mode.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Planemo configuration YAML file.
  synonyms:
  - --config
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: Workspace for planemo.
  synonyms:
  - --directory
  args: !SimpleFlagArg
    name: TEXT
  optional: true
command:
- planemo
subcommands:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - brew
  subcommands:
  - !Command
    positional: []
    named: []
    command:
    - planemo
    - brew
    - OPTIONS
    subcommands:
    - !Command
      positional: []
      named:
      - !Flag
        description: Homebrew 'brew' executable to use.
        synonyms:
        - --brew
        args: !SimpleFlagArg
          name: FILE
        optional: true
      command:
      - planemo
      - brew
      - OPTIONS
      - TOOL_PATH
      subcommands: []
      help_flag: !Flag
        description: Show this message and exit.
        synonyms:
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TOOL_PATH
      optional: false
    named: []
    command:
    - planemo
    - brew
    - TOOL_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - brew_env
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: TOOL_PATH
      optional: false
    named: []
    command:
    - planemo
    - brew_env
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TOOL_PATH
      optional: false
    named: []
    command:
    - planemo
    - brew_env
    - TOOL_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTIONS
    optional: true
  named: []
  command:
  - planemo
  - brew_init
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Paths to exclude.
    synonyms:
    - --exclude
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: File of paths to exclude.
    synonyms:
    - --exclude_from
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Exclude paths unchanged in git commit range.
    synonyms:
    - --changed_in_commit_range
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Split output into chunks of this many item and print --chunk such
      group.
    synonyms:
    - --chunk_count
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: When output is split into --chunk_count groups, output the group
      0-indexedby this option.
    synonyms:
    - --chunk
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: File to output to, or - for standard output.
    synonyms:
    - --output
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - ci_find_repos
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Paths to exclude.
    synonyms:
    - --exclude
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: File of paths to exclude.
    synonyms:
    - --exclude_from
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Exclude paths unchanged in git commit range.
    synonyms:
    - --changed_in_commit_range
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Split output into chunks of this many item and print --chunk such
      group.
    synonyms:
    - --chunk_count
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: When output is split into --chunk_count groups, output the group
      0-indexedby this option.
    synonyms:
    - --chunk
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: File to output to, or - for standard output.
    synonyms:
    - --output
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - ci_find_tools
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - clone
  subcommands:
  - !Command
    positional: []
    named: []
    command:
    - planemo
    - clone
    - OPTIONS
    subcommands:
    - !Command
      positional: []
      named:
      - !Flag
        description: / --skip_fork
        synonyms:
        - --fork
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Create a named branch on result.
        synonyms:
        - --branch
        args: !SimpleFlagArg
          name: TEXT
        optional: true
      command:
      - planemo
      - clone
      - OPTIONS
      - TARGET
      subcommands: []
      help_flag: !Flag
        description: Show this message and exit.
        synonyms:
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: TARGET
        optional: false
      - !Positional
        description: ''
        position: 1
        name: PROJECT
        optional: false
      named: []
      command:
      - planemo
      - clone
      - OPTIONS
      - PROJECT
      subcommands: []
      help_flag:
      usage_flag:
      version_flag:
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TARGET
      optional: false
    - !Positional
      description: ''
      position: 2
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - clone
    - TARGET
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TARGET
      optional: false
    - !Positional
      description: ''
      position: 2
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - clone
    - PROJECT
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - conda_build
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - conda_env
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - conda_init
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for subdirectories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Install Conda dependencies globally instead of in requirement specific
      environments packaged for tools. If the Conda bin directory is on your PATH,
      tools may still use binaries but this is more designed for interactive testing
      and debugging.
    synonyms:
    - --global
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - conda_install
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: '[all|warn|error]'
    synonyms:
    - --report_level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[warn|error]'
    synonyms:
    - --fail_level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Recursively perform command for nested conda directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - conda_lint
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - conda_search
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - config_init
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - config_init
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - config_init
    - PROJECT
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - create_gist
  subcommands:
  - !Command
    positional: []
    named: []
    command:
    - planemo
    - create_gist
    - OPTIONS
    subcommands:
    - !Command
      positional: []
      named:
      - !Flag
        description: '[raw|html]  Link type to generate for the file.'
        synonyms:
        - --link_type
        args: !EmptyFlagArg {}
        optional: true
      command:
      - planemo
      - create_gist
      - OPTIONS
      - FILE_PATH
      subcommands: []
      help_flag: !Flag
        description: Show this message and exit.
        synonyms:
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: FILE_PATH
      optional: false
    named: []
    command:
    - planemo
    - create_gist
    - FILE_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - cwl_script
  subcommands:
  - !Command
    positional: []
    named: []
    command:
    - planemo
    - cwl_script
    - OPTIONS
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: JOB_PATH
        optional: false
      named: []
      command:
      - planemo
      - cwl_script
      - OPTIONS
      - TOOL_PATH
      subcommands: []
      help_flag:
      usage_flag:
      version_flag:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: TOOL_PATH
        optional: false
      - !Positional
        description: ''
        position: 1
        name: JOB_PATH
        optional: false
      named: []
      command:
      - planemo
      - cwl_script
      - OPTIONS
      - JOB_PATH
      subcommands: []
      help_flag:
      usage_flag:
      version_flag:
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TOOL_PATH
      optional: false
    - !Positional
      description: ''
      position: 2
      name: JOB_PATH
      optional: false
    named: []
    command:
    - planemo
    - cwl_script
    - TOOL_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TOOL_PATH
      optional: false
    - !Positional
      description: ''
      position: 2
      name: JOB_PATH
      optional: false
    named: []
    command:
    - planemo
    - cwl_script
    - JOB_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: all   all    ::1/128         trust
    position: 0
    name: host
    optional: false
  named:
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - database_create
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: all   all    ::1/128         trust
    position: 0
    name: host
    optional: false
  named:
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - database_delete
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: all   all    ::1/128         trust
    position: 0
    name: host
    optional: false
  named:
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - database_list
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Directory to cache downloaded files, default is $DOWNLOAD_CACHE
    synonyms:
    - --download_cache
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  command:
  - planemo
  - dependency_script
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - docker_build
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Treat the tool's Docker container identifier as a locally cached
      tag.
    synonyms:
    - --from_tag
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Shell to launch in container (defaults to /bin/bash).
    synonyms:
    - --shell
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - docker_shell
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTIONS
    optional: true
  named: []
  command:
  - planemo
  - docs
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: '[all|warn|error]'
    synonyms:
    - --report_level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Output an XUnit report, useful for CI testing
    synonyms:
    - --report_xunit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: '[warn|error]'
    synonyms:
    - --fail_level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Comma-separated list of lint tests to skip (e.g. passing --skip 'citations,xml_order'
      would skip linting of citations and best- practice XML ordering.
    synonyms:
    - -s
    - --skip
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_xsd                Include tool XSD validation in linting
      process.
    synonyms:
    - --xsd
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Recursively perform command for subdirectories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Check validity of URLs in XML files
    synonyms:
    - --urls
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Check validity of DOIs in XML files
    synonyms:
    - --doi
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Check tool requirements for availability in best practice Conda channels.
    synonyms:
    - --conda_requirements
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Check best practice BioContainer namespaces for a container definition
      applicable for this tool.
    synonyms:
    - --biocontainer
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - lint
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Paths to exclude.
    synonyms:
    - --exclude
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: File of paths to exclude.
    synonyms:
    - --exclude_from
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Exclude paths unchanged in git commit range.
    synonyms:
    - --changed_in_commit_range
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Split output into chunks of this many item and print --chunk such
      group.
    synonyms:
    - --chunk_count
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: When output is split into --chunk_count groups, output the group
      0-indexedby this option.
    synonyms:
    - --chunk
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: File to output to, or - for standard output.
    synonyms:
    - --output
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - list_repos
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - merge_test_reports
  subcommands:
  - !Command
    positional: []
    named: []
    command:
    - planemo
    - merge_test_reports
    - OPTIONS
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: FILE_PATH
        optional: false
      named: []
      command:
      - planemo
      - merge_test_reports
      - OPTIONS
      - INPUT_PATHS
      subcommands: []
      help_flag:
      usage_flag:
      version_flag:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: INPUT_PATHS
        optional: false
      - !Positional
        description: ''
        position: 1
        name: FILE_PATH
        optional: false
      named: []
      command:
      - planemo
      - merge_test_reports
      - OPTIONS
      - FILE_PATH
      subcommands: []
      help_flag:
      usage_flag:
      version_flag:
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: INPUT_PATHS
      optional: false
    - !Positional
      description: ''
      position: 2
      name: FILE_PATH
      optional: false
    named: []
    command:
    - planemo
    - merge_test_reports
    - INPUT_PATHS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: INPUT_PATHS
      optional: false
    - !Positional
      description: ''
      position: 2
      name: FILE_PATH
      optional: false
    named: []
    command:
    - planemo
    - merge_test_reports
    - FILE_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: '`` on the target tool(s).'
    synonyms:
    - --conda_requirements
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Recursively perform command for subdirectories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Install a specific version of Conda before running the command, by
      default the version that comes with the continuumio miniconda3 image will be
      used under Linux and under Mac OS X Conda will be upgraded to to work around
      a bug in 4.2.
    synonyms:
    - --mulled_conda_version
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Build a mulled image with the specified namespace - defaults to biocontainers.
      Galaxy currently only recognizes images with the namespace biocontainers.
    synonyms:
    - --mulled_namespace
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Mulled action to perform for targets - this defaults to 'build-and-test'.
    synonyms:
    - --mulled_command
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - mull
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Install a specific version of Conda before running the command, by
      default the version that comes with the continuumio miniconda3 image will be
      used under Linux and under Mac OS X Conda will be upgraded to to work around
      a bug in 4.2.
    synonyms:
    - --mulled_conda_version
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Build a mulled image with the specified namespace - defaults to biocontainers.
      Galaxy currently only recognizes images with the namespace biocontainers.
    synonyms:
    - --mulled_namespace
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Mulled action to perform for targets - this defaults to 'build-and-test'.
    synonyms:
    - --mulled_command
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - mulled_init
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Expand macros while normalizing tool XML - useful to see how macros
      are evaluated.
    synonyms:
    - --expand_macros
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Planemo will reorder top-level tool blocks according to tool development
      best practices as part of this command, this flag will disable that behavior.
    synonyms:
    - --skip_reorder
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Planemo will reindent the XML according to tool development best
      practices as part of this command, this flag will disable that behavior.
    synonyms:
    - --skip_reindent
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - normalize
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - open
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: PATH
      optional: false
    named: []
    command:
    - planemo
    - open
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: PATH
      optional: false
    named: []
    command:
    - planemo
    - open
    - PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - profile_create
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - profile_delete
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTIONS
    optional: true
  named: []
  command:
  - planemo
  - profile_list
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - project_init
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - project_init
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - project_init
    - PROJECT
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - pull_request
  subcommands:
  - !Command
    positional: []
    named: []
    command:
    - planemo
    - pull_request
    - OPTIONS
    subcommands:
    - !Command
      positional: []
      named:
      - !Flag
        description: Message describing the pull request to create.
        synonyms:
        - -m
        - --message
        args: !SimpleFlagArg
          name: TEXT
        optional: true
      command:
      - planemo
      - pull_request
      - OPTIONS
      - PROJECT
      subcommands: []
      help_flag: !Flag
        description: Show this message and exit.
        synonyms:
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - pull_request
    - PROJECT
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy for use with CWL tool. (this option is experimental
      and will be replaced when and if CWL support is merged into Galaxy).
    synonyms:
    - --cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with (must
      be branch of Galaxy with CWL support, this option is experimental and will be
      replaced with --galaxy_root when and if CWL support is merged into Galaxy.
    synonyms:
    - --cwl_galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Where to store outputs of a 'run' task.
    synonyms:
    - --output_directory
    - --outdir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Where to store JSON dictionary describing outputs of a 'run' task.
    synonyms:
    - --output_json
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: "[galaxy|docker_galaxy|cwltool|toil|external_galaxy] Select an engine\
      \ to run or test artifacts such as tools and workflows. Defaults to a local\
      \ Galaxy, but running Galaxy within a Docker container or the CWL reference\
      \ implementation 'cwltool' and 'toil' be selected."
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If cwltool engine is used, disable Docker container usage.
    synonyms:
    - --no-container
    - --no_container
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Remote Galaxy URL to use with external Galaxy engine.
    synonyms:
    - --galaxy_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Admin key to use with external Galaxy engine.
    synonyms:
    - --galaxy_admin_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: User key to use with external Galaxy engine.
    synonyms:
    - --galaxy_user_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - run
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy for use with CWL tool. (this option is experimental
      and will be replaced when and if CWL support is merged into Galaxy).
    synonyms:
    - --cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with (must
      be branch of Galaxy with CWL support, this option is experimental and will be
      replaced with --galaxy_root when and if CWL support is merged into Galaxy.
    synonyms:
    - --cwl_galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  command:
  - planemo
  - serve
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - share_test
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: FILE_PATH
      optional: false
    named: []
    command:
    - planemo
    - share_test
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: FILE_PATH
      optional: false
    named: []
    command:
    - planemo
    - share_test
    - FILE_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - shed_build
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: TOOL_PATH
      optional: false
    named: []
    command:
    - planemo
    - shed_build
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: TOOL_PATH
      optional: false
    named: []
    command:
    - planemo
    - shed_build
    - TOOL_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Commit message for tool shed upload.
    synonyms:
    - -m
    - --message
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Skip upload contents as part of operation, only update metadata.
    synonyms:
    - --skip_upload
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - shed_create
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Send diff output to specified file.
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Source Tool Shed to diff against (will ignore local project info
      specified). To compare the main Tool Shed against the test, set this to testtoolshed.
    synonyms:
    - --shed_target_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not attempt smart diff of XML to filter out attributes populated
      by the Tool Shed.
    synonyms:
    - --raw
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Output an XUnit report, useful for CI testing
    synonyms:
    - --report_xunit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  command:
  - planemo
  - shed_diff
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Destination pattern of tarball(s) to download - if this doesn't end
      in 'gz' it will be treated as a directory to extract tool contents into (defaults
      to shed_download.tar.gz). If multiple repositories are discovered in a .shed.yml
      file these will be created as shed_download_<name>.tar.gz by default for instance,
      simpler repositories will just be downloaded to the specified file.
    synonyms:
    - --destination
    args: !SimpleFlagArg
      name: PATH
    optional: true
  command:
  - planemo
  - shed_download
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Attempt to generate repository dependencies from specified workflow.
    synonyms:
    - --from_workflow
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Specify repository description for .shed.yml.
    synonyms:
    - --description
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Specify repository long_description for .shed.yml.
    synonyms:
    - --long_description
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Specify repository remote_repository_url for .shed.yml.
    synonyms:
    - --remote_repository_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Specify repository homepage_url for .shed.yml.
    synonyms:
    - --homepage_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[Assembly|ChIP-seq|Combinatorial Selections|Computational chemistry|Constructive
      Solid Geometry|Convert Formats|Data Export|Data Managers|Data Source|Entomology|Epigenetics|Fasta
      Manipulation|Fastq Manipulation|Flow Cytometry Analysis|Genome annotation|Genome
      editing|Genome-Wide Association Study|Genomic Interval Operations|Graphics|Imaging|Machine
      Learning|Metabolomics|Metagenomics|Micro-array Analysis|Molecular Dynamics|Next
      Gen Mappers|NLP|Ontology Manipulation|Phylogenetics|Proteomics|RNA|SAM|Sequence
      Analysis|Statistics|Systems Biology|Text Manipulation|Tool Dependency Packages|Tool
      Generators|Transcriptomics|Variant Analysis|Visualization|Web Services] Specify
      repository category for .shed.yml (may specify multiple).'
    synonyms:
    - --category
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Overwrite existing files if present.
    synonyms:
    - -f
    - --force
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - shed_init
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[all|warn|error]'
    synonyms:
    - --report_level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[warn|error]'
    synonyms:
    - --fail_level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Lint tools discovered in the process of linting repositories.
    synonyms:
    - --tools
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_xsd                Include tool XSD validation in linting
      process.
    synonyms:
    - --xsd
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure .shed.yml files contain enough metadata for each repository
      to allow automated creation and/or updates.
    synonyms:
    - --ensure_metadata
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Check validity of URLs in XML files
    synonyms:
    - --urls
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - shed_lint
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not install shed dependencies as part of repository installation.
    synonyms:
    - --skip_dependencies
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - shed_serve
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Update test-data directory with job outputs (normally written to
      directory --job_output_files if specified.)
    synonyms:
    - --update_test_data
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_paste_test_data_paths By default Planemo will use or not use
      Galaxy's path paste option to load test data into a history based on the engine
      type it is targeting. This can override the logic to explicitly enable or disable
      path pasting.
    synonyms:
    - --paste_test_data_paths
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Output test report (HTML - for humans) defaults to tool_test_output.html.
    synonyms:
    - --test_output
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (Basic text - for display in CI)
    synonyms:
    - --test_output_text
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (Markdown style - for humans & computers)
    synonyms:
    - --test_output_markdown
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (xunit style - for CI systems
    synonyms:
    - --test_output_xunit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (jUnit style - for CI systems
    synonyms:
    - --test_output_junit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (planemo json) defaults to tool_test_output.json.
    synonyms:
    - --test_output_json
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Write job outputs to specified directory.
    synonyms:
    - --job_output_files
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: "[none|minimal|compact] Summary style printed to planemo's standard\
      \ output (see output reports for more complete summary). Set to 'none' to disable\
      \ completely."
    synonyms:
    - --summary
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not install shed dependencies as part of repository installation.
    synonyms:
    - --skip_dependencies
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - shed_test
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Output an XUnit report, useful for CI testing
    synonyms:
    - --report_xunit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Commit message for tool shed upload.
    synonyms:
    - -m
    - --message
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: If a repository cannot be found for the specified user/repo name
      pair, then automatically create the repository in the toolshed.
    synonyms:
    - --force_repository_creation
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip uploading if the shed_diff detects there would be no 'difference'
      (only attributes populated by the shed would be updated.)
    synonyms:
    - --check_diff
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip upload contents as part of operation, only update metadata.
    synonyms:
    - --skip_upload
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip metadata update as part of operation, only upload new contents.
    synonyms:
    - --skip_metadata
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - shed_update
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Recursively perform command for nested repository directories.
    synonyms:
    - -r
    - --recursive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If multiple repositories are specified and an error occurs stop immediately
      instead of processing remaining repositories.
    synonyms:
    - --fail_fast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Tool Shed repository owner (username).
    synonyms:
    - --owner
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed repository name (defaults to the inferred tool directory
      name).
    synonyms:
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: E-mail for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key for Tool Shed access. An API key is required unless e-mail
      and password is specified. This key can be specified with either --shed_key
      or --shed_key_from_env.
    synonyms:
    - --shed_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Environment variable to read API key for Tool Shed access from.
    synonyms:
    - --shed_key_from_env
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Password for Tool Shed auth (required unless shed_key is specified).
    synonyms:
    - --shed_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Tool Shed to target (this can be 'toolshed', 'testtoolshed', 'local'
      (alias for http://localhost:9009/), an arbitrary url or mappings defined ~/.planemo.yml.
    synonyms:
    - -t
    - --shed_target
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Commit message for tool shed upload.
    synonyms:
    - -m
    - --message
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: If a repository cannot be found for the specified user/repo name
      pair, then automatically create the repository in the toolshed.
    synonyms:
    - --force_repository_creation
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip uploading if the shed_diff detects there would be no 'difference'
      (only attributes populated by the shed would be updated.)
    synonyms:
    - --check_diff
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Produce tar file for upload but do not publish to a tool shed.
    synonyms:
    - --tar_only
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Specify a pre-existing tar file instead of automatically building
      one as part of this command.
    synonyms:
    - --tar
    args: !SimpleFlagArg
      name: FILE
    optional: true
  command:
  - planemo
  - shed_upload
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTIONS
    optional: true
  named: []
  command:
  - planemo
  - syntax
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Re-run only failed tests. This command will read tool_test_output.json
      to determine which tests failed so this file must have been produced with the
      same set of tool ids previously.
    synonyms:
    - --failed
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Poll resources with an increasing interval between requests. Useful
      when testing against remote and/or production instances to limit generated traffic.
    synonyms:
    - --polling_backoff
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Name for history (if a history is generated as part of testing.)
    synonyms:
    - --history_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Update test-data directory with job outputs (normally written to
      directory --job_output_files if specified.)
    synonyms:
    - --update_test_data
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_paste_test_data_paths By default Planemo will use or not use
      Galaxy's path paste option to load test data into a history based on the engine
      type it is targeting. This can override the logic to explicitly enable or disable
      path pasting.
    synonyms:
    - --paste_test_data_paths
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Output test report (HTML - for humans) defaults to tool_test_output.html.
    synonyms:
    - --test_output
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (Basic text - for display in CI)
    synonyms:
    - --test_output_text
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (Markdown style - for humans & computers)
    synonyms:
    - --test_output_markdown
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (xunit style - for CI systems
    synonyms:
    - --test_output_xunit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (jUnit style - for CI systems
    synonyms:
    - --test_output_junit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (planemo json) defaults to tool_test_output.json.
    synonyms:
    - --test_output_json
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Write job outputs to specified directory.
    synonyms:
    - --job_output_files
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: "[none|minimal|compact] Summary style printed to planemo's standard\
      \ output (see output reports for more complete summary). Set to 'none' to disable\
      \ completely."
    synonyms:
    - --summary
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[galaxy|docker_galaxy|cwltool|toil|external_galaxy] Select an engine\
      \ to run or test artifacts such as tools and workflows. Defaults to a local\
      \ Galaxy, but running Galaxy within a Docker container or the CWL reference\
      \ implementation 'cwltool' and 'toil' be selected."
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If cwltool engine is used, disable Docker container usage.
    synonyms:
    - --no-container
    - --no_container
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Remote Galaxy URL to use with external Galaxy engine.
    synonyms:
    - --galaxy_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Admin key to use with external Galaxy engine.
    synonyms:
    - --galaxy_admin_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: User key to use with external Galaxy engine.
    synonyms:
    - --galaxy_user_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  command:
  - planemo
  - test
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Output test report (HTML - for humans) defaults to tool_test_output.html.
    synonyms:
    - --test_output
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (Basic text - for display in CI)
    synonyms:
    - --test_output_text
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (Markdown style - for humans & computers)
    synonyms:
    - --test_output_markdown
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (xunit style - for CI systems
    synonyms:
    - --test_output_xunit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Output test report (jUnit style - for CI systems
    synonyms:
    - --test_output_junit
    args: !SimpleFlagArg
      name: PATH
    optional: true
  command:
  - planemo
  - test_reports
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - tool_factory
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Short identifier for new tool (no whitespace)
    synonyms:
    - -i
    - --id
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Overwrite existing tool if present.
    synonyms:
    - -f
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Output path for new tool (default is <id>.xml)
    synonyms:
    - -t
    - --tool
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Name for new tool (user facing)
    synonyms:
    - -n
    - --name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Short description for new tool (user facing)
    synonyms:
    - -d
    - --description
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Command potentially including cheetah variables ()(e.g. 'seqtk seq
      -a $input > $output')
    synonyms:
    - -c
    - --command
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Example to command with paths to build Cheetah template from (e.g.
      'seqtk seq -a 2.fastq > 2.fasta'). Option cannot be used with --command, should
      be used --example_input and --example_output.
    synonyms:
    - --example_command
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: For use with --example_command, replace input file (e.g. 2.fastq
      with a data input parameter).
    synonyms:
    - --example_input
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: For use with --example_command, replace input file (e.g. 2.fastq
      with a tool output).
    synonyms:
    - --example_output
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Create a named output for use with command block for example specify
      --named_output=output1.bam and then use '-o $output1' in your command block.
    synonyms:
    - --named_output
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: An input description (e.g. input.fasta)
    synonyms:
    - --input
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: An output location (e.g. output.bam), the Galaxy datatype is inferred
      from the extension.
    synonyms:
    - --output
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Help text (reStructuredText)
    synonyms:
    - --help_text
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Auto populate help from supplied command.
    synonyms:
    - --help_from_command
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Supply a DOI (http://www.doi.org/) easing citation of the tool for
      Galxy users (e.g. 10.1101/014043).
    synonyms:
    - --doi
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Supply a URL for citation.
    synonyms:
    - --cite_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: For use with --example_commmand, generate a tool test case from the
      supplied example.
    synonyms:
    - --test_case
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Generate a macros.xml for reuse across many tools.
    synonyms:
    - --macros
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command to print version (e.g. 'seqtk --version')
    synonyms:
    - --version_command
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Add a tool requirement package (e.g. 'seqtk' or 'seqtk@1.68').
    synonyms:
    - --requirement
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Add a Docker image identifier for this tool.
    synonyms:
    - --container
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Build a CWL tool instead of a Galaxy tool.
    synonyms:
    - --cwl
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - tool_init
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Tool XML version.
    synonyms:
    - --version
    args: !SimpleFlagArg
      name: TEXT
    optional: true
- !Command
  positional: []
  named:
  - !Flag
    description: Name (directory name) of the topic to create or in which a tutorial
      should be created or updates [required]
    synonyms:
    - --topic_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Name (directory name) of the tutorial to modify [required]
    synonyms:
    - --tutorial_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Zenodo URL with the input data
    synonyms:
    - --zenodo_link
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: YAML file with the correspondance between Zenodo extension and Galaxy
      datatypes
    synonyms:
    - --datatypes
    args: !SimpleFlagArg
      name: PATH
    optional: true
  command:
  - planemo
  - training_fill_data_library
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Name (directory name) of the topic to create or in which a tutorial
      should be created or updates  [required]
    synonyms:
    - --topic_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Name (directory name) of the tutorial to modify  [required]
    synonyms:
    - --tutorial_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Workflow of the tutorial (locally)
    synonyms:
    - --workflow
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: URL of a Galaxy instance with the workflow
    synonyms:
    - --galaxy_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key on the Galaxy instance with the workflow
    synonyms:
    - --galaxy_api_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: ID of the workflow on the Galaxy instance
    synonyms:
    - --workflow_id
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - training_generate_from_wf
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Name (directory name) of the topic to create or in which a tutorial
      should be created or updates  [required]
    synonyms:
    - --topic_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Title of the topic to create
    synonyms:
    - --topic_title
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Summary of the topic
    synonyms:
    - --topic_summary
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[use|admin-dev|instructors] Target audience for the topic'
    synonyms:
    - --topic_target
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name (directory name) of the tutorial to create or to modify
    synonyms:
    - --tutorial_name
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Title of the tutorial
    synonyms:
    - --tutorial_title
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Add hands-on for the new tutorial
    synonyms:
    - --hands_on
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Add slides for the new tutorial
    synonyms:
    - --slides
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Workflow of the tutorial (locally)
    synonyms:
    - --workflow
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: URL of a Galaxy instance with the workflow
    synonyms:
    - --galaxy_url
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: API key on the Galaxy instance with the workflow
    synonyms:
    - --galaxy_api_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: ID of the workflow on the Galaxy instance
    synonyms:
    - --workflow_id
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Zenodo URL with the input data
    synonyms:
    - --zenodo_link
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: YAML file with the correspondance between Zenodo extension and Galaxy
      datatypes
    synonyms:
    - --datatypes
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - training_init
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTIONS
    optional: true
  named: []
  command:
  - planemo
  - travis_before_install
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - travis_init
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - travis_init
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: PROJECT
      optional: false
    named: []
    command:
    - planemo
    - travis_init
    - PROJECT
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named: []
  command:
  - planemo
  - virtualenv
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: VIRTUALENV_PATH
      optional: false
    named: []
    command:
    - planemo
    - virtualenv
    - OPTIONS
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: OPTIONS
      optional: true
    - !Positional
      description: ''
      position: 1
      name: VIRTUALENV_PATH
      optional: false
    named: []
    command:
    - planemo
    - virtualenv
    - VIRTUALENV_PATH
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
  help_flag:
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - workflow_convert
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
- !Command
  positional: []
  named:
  - !Flag
    description: Root of development galaxy directory to execute command with.
    synonyms:
    - --galaxy_root
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: '[2|2.7|3|3.5|3.6|3.7|3.8] Python version to start Galaxy under'
    synonyms:
    - --galaxy_python_version
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Extra tool sources to include in Galaxy's tool panel (file or directory).
      These will not be linted/tested/etc... but they will be available to workflows
      and for interactive use.
    synonyms:
    - --extra_tools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Download and configure a disposable copy of Galaxy from github.
    synonyms:
    - --install_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Branch of Galaxy to target (defaults to master) if a Galaxy root
      isn't specified.
    synonyms:
    - --galaxy_branch
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Git source of Galaxy to target (defaults to the official galaxyproject
      github source if a Galaxy root isn't specified.
    synonyms:
    - --galaxy_source
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Do not create or source a virtualenv environment for Galaxy, this
      should be used or instance to preserve an externally configured virtual environment
      or conda environment.
    synonyms:
    - --skip_venv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Skip caching of Galaxy source and dependencies obtained with --install_galaxy.
      Not caching this results in faster downloads (no git) - so is better on throw
      away instances such with TravisCI.
    synonyms:
    - --no_cache_galaxy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Do not cleanup temp files created for and by Galaxy.
    synonyms:
    - --no_cleanup
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: E-mail address to use when launching single- user Galaxy server.
    synonyms:
    - --galaxy_email
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker          Run Galaxy tools in Docker if enabled.
    synonyms:
    - --docker
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Command used to launch docker (defaults to docker).
    synonyms:
    - --docker_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_docker_sudo Flag to use sudo when running docker.
    synonyms:
    - --docker_sudo
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker host to target when executing docker commands (defaults to
      localhost).
    synonyms:
    - --docker_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: sudo command to use when --docker_sudo is enabled (defaults to sudo).
    synonyms:
    - --docker_sudo_cmd
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Test tools against mulled containers (forces --docker).
    synonyms:
    - --mulled_containers
    - --biocontainers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Job configuration file for Galaxy to target.
    synonyms:
    - --job_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Tool dependency dir for Galaxy to target.
    synonyms:
    - --tool_dependency_dir
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Port to serve Galaxy on (default is 9090).
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: Host to bind Galaxy to. Default is 127.0.0.1 that is restricted to
      localhost connections for security reasons set to 0.0.0.0 to bind Galaxy to
      all ports including potentially publicly accessible ones.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: '[galaxy|docker_galaxy|external_galaxy] Select an engine to serve
      artifacts such as tools and workflows. Defaults to a local Galaxy, but running
      Galaxy within a Docker container.'
    synonyms:
    - --engine
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Disable strict validation of CWL.
    synonyms:
    - --non_strict_cwl
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Docker image identifier for docker-galaxy- flavor used if engine
      type is specified as ``docker-galaxy``. Defaults to quay.io/bgruening/galaxy.
    synonyms:
    - --docker_galaxy_image
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Extra path to mount if --engine docker.
    synonyms:
    - --docker_extra_volume
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: test-data directory to for specified tool(s).
    synonyms:
    - --test_data
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: tool_data_table_conf.xml file to for specified tool(s).
    synonyms:
    - --tool_data_table
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Dependency resolver configuration for Galaxy to target.
    synonyms:
    - --dependency_resolvers_config_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Configure Galaxy to use plain brew dependency resolution.
    synonyms:
    - --brew_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use brewed Tool Shed dependency resolution.
    synonyms:
    - --shed_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy with no dependency resolvers.
    synonyms:
    - --no_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda prefix to use for conda dependency commands.
    synonyms:
    - --conda_prefix
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Location of conda executable.
    synonyms:
    - --conda_exec
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Enable more verbose conda logging.
    synonyms:
    - --conda_debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ensure conda is configured with specified comma separated list of
      channels.
    synonyms:
    - --conda_channels
    - --conda_ensure_channels
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use locally built packages while building Conda environments.
    synonyms:
    - --conda_use_local
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Configure Galaxy to use only conda for dependency resolution.
    synonyms:
    - --conda_dependency_resolution
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Conda dependency resolution for Galaxy will copy dependencies instead
      of attempting to link them.
    synonyms:
    - --conda_copy_dependencies
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_install Conda dependency resolution for Galaxy
      will attempt to install requested but missing packages.
    synonyms:
    - --conda_auto_install
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_conda_auto_init Conda dependency resolution for Galaxy will
      auto install conda itself using miniconda if not availabe on conda_prefix.
    synonyms:
    - --conda_auto_init
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name of profile (created with the profile_create command) to use
      with this command.
    synonyms:
    - --profile
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Use postgres database type.
    synonyms:
    - --postgres
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[postgres|postgres_docker|sqlite|auto] Type of database to use for\
      \ profile - 'auto', 'sqlite', 'postgres', and 'postgres_docker' are available\
      \ options. Use postgres to use an existing postgres server you user can access\
      \ without a password via the psql command. Use postgres_docker to have Planemo\
      \ manage a docker container running postgres. Data with postgres_docker is not\
      \ yet persisted past when you restart the docker container launched by Planemo\
      \ so be careful with this option."
    synonyms:
    - --database_type
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Name or or path to postgres client binary (psql).
    synonyms:
    - --postgres_psql_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres username for managed development databases.
    synonyms:
    - --postgres_database_user
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres host name for managed development databases.
    synonyms:
    - --postgres_database_host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Postgres port for managed development databases.
    synonyms:
    - --postgres_database_port
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location for files created by Galaxy (e.g. database/files).
    synonyms:
    - --file_path
    args: !SimpleFlagArg
      name: DIRECTORY
    optional: true
  - !Flag
    description: Database connection string to use for Galaxy.
    synonyms:
    - --database_connection
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools conf file for Galaxy.
    synonyms:
    - --shed_tool_conf
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Location of shed tools directory for Galaxy.
    synonyms:
    - --shed_tool_path
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: / --no_galaxy_single_user By default Planemo will configure Galaxy
      to run in single-user mode where there is just one user and this user is automatically
      logged it. Use --no_galaxy_single_user to prevent Galaxy from running this way.
    synonyms:
    - --galaxy_single_user
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Serve Galaxy process as a daemon.
    synonyms:
    - --daemon
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Location of pid file is executed with --daemon.
    synonyms:
    - --pid_file
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: When installing shed repositories for workflows, ignore dependency
      issues. These likely indicate a problem but in some cases may not prevent a
      workflow from successfully executing.
    synonyms:
    - --ignore_dependency_problems
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: / --no_shed_install By default Planemo will attempt to install repositories
      needed for workflow testing. This may not be appropriate for production servers
      and so this can disabled by calling planemo with --no_shed_install.
    synonyms:
    - --shed_install
    args: !EmptyFlagArg {}
    optional: true
  command:
  - planemo
  - workflow_edit
  subcommands: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show the version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
