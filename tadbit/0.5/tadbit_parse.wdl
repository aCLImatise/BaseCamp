version 1.0

task TadbitParse {
  input {
    File? workdir
    File? type
    Int? read
    Int? filter_chrom
    Boolean? skip
    Boolean? compress_input
    File? tmp_db
    Array[File] genome
    Array[Int] job_ids
    Boolean? nox
  }
  command <<<
    tadbit parse \
      ~{if defined(workdir) then ("--workdir " +  '"' + workdir + '"') else ""} \
      ~{if defined(type) then ("--type " +  '"' + type + '"') else ""} \
      ~{if defined(read) then ("--read " +  '"' + read + '"') else ""} \
      ~{if defined(filter_chrom) then ("--filter_chrom " +  '"' + filter_chrom + '"') else ""} \
      ~{if (skip) then "--skip" else ""} \
      ~{if (compress_input) then "--compress_input" else ""} \
      ~{if defined(tmp_db) then ("--tmpdb " +  '"' + tmp_db + '"') else ""} \
      ~{if defined(genome) then ("--genome " +  '"' + genome + '"') else ""} \
      ~{if defined(job_ids) then ("--jobids " +  '"' + job_ids + '"') else ""} \
      ~{if (nox) then "--noX" else ""}
  >>>
  parameter_meta {
    workdir: "path to working directory (generated with the tool tadbit mapper)"
    type: "[map]file type to be parser, MAP (GEM-mapper), SAM or BAM"
    read: "In case only one of the reads needs to be parsed"
    filter_chrom: "default: --filter_chrom\\n\\\"^(chr)?[A-Za-z]?[0-9]{0,3}[XVI]{0,3}(?:ito)?[A-Z-a-z]?(_dna)?$\\\",\\nregexp to consider only chromosome names passing"
    skip: "[DEBUG] in case already mapped."
    compress_input: "Compress input mapped files when parsing is done. This is done in\\nbackground, while next MAP file is processed, or while reads are\\nsorted."
    tmp_db: "if provided uses this directory to manipulate the database"
    genome: "paths to file(s) with FASTA files of the reference genome. If many,\\nfiles will be concatenated. I.e.: --genome chr_1.fa chr_2.fa In this\\nlast case, order is important or the rest of the analysis. Note: it\\ncan also be the path to a previously parsed genome in pickle format."
    job_ids: "Use as input data generated by a job with a given jobid(s). Use\\ntadbit describe to find out which. In this case one jobid can be\\npassed per read."
    nox: "no display server (X screen)"
  }
  output {
    File out_stdout = stdout()
  }
}