&id006 !Command
positional:
- !Positional
  description: Variants.
  position: 0
  name: vcf
  optional: false
- !Positional
  description: Table of discordant pair coordinates.
  position: 1
  name: disc
  optional: false
- !Positional
  description: Output table of PE counts.
  position: 2
  name: fout
  optional: false
named:
- !Flag
  description: Window outside breakpoint to query for discordant pairs. [500]
  synonyms:
  - -o
  - --window-out
  args: !SimpleFlagArg
    name: WINDOW_OUT
  optional: true
- !Flag
  description: Window inside breakpoint to query for discordant pairs. [50]
  synonyms:
  - -i
  - --window-in
  args: !SimpleFlagArg
    name: WINDOW_IN
  optional: true
- !Flag
  description: Number of background samples to sample for PE evidence. [160]
  synonyms:
  - -b
  - --background
  args: !SimpleFlagArg
    name: BACKGROUND
  optional: true
- !Flag
  description: Whitelist of samples to restrict testing to.
  synonyms:
  - -s
  - --samples
  args: !SimpleFlagArg
    name: SAMPLES
  optional: true
- !Flag
  description: Tabix index of discordant pair file. Required if discordant pair file
    is hosted remotely.
  synonyms:
  - --index
  args: !SimpleFlagArg
    name: INDEX
  optional: true
- !Flag
  description: Median coverage statistics for each library (optional). If provided,
    each sample's split counts will be normalized accordingly. Same format as RdTest,
    one column per sample.
  synonyms:
  - --medianfile
  args: !SimpleFlagArg
    name: MEDIANFILE
  optional: true
- !Flag
  description: Print progress log to stderr.
  synonyms:
  - --log
  args: !EmptyFlagArg {}
  optional: true
command:
- svtk
- pe-test
parent: &id001 !Command
  positional: []
  named: []
  command:
  - svtk
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: Raw VCF.
      position: 0
      name: vcf
      optional: false
    - !Positional
      description: Standardized VCF.
      position: 1
      name: fout
      optional: false
    - !Positional
      description: Source algorithm. [delly,lumpy,manta,wham,melt]
      position: 2
      name: source
      optional: false
    named:
    - !Flag
      description: If provided, variant names will be overwritten with this prefix.
      synonyms:
      - -p
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    - !Flag
      description: Include records where all samples are called 0/0 or ./.
      synonyms:
      - --include-reference-sites
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Path to python file with custom standardizer definition. (Not yet
        supported.)
      synonyms:
      - --standardizer
      args: !SimpleFlagArg
        name: STANDARDIZER
      optional: true
    - !Flag
      description: Reference fasta index (.fai). If provided, contigs in index will
        be used in VCF header. Otherwise all GRCh37 contigs will be used in header.
        Variants on contigs not in provided list will be removed.
      synonyms:
      - --contigs
      args: !SimpleFlagArg
        name: CONTIGS
      optional: true
    - !Flag
      description: Minimum SV size to report [50].
      synonyms:
      - --min-size
      args: !SimpleFlagArg
        name: MIN_SIZE
      optional: true
    - !Flag
      description: Call sites with null genotypes (./.). Generally useful when an
        algorithm has been run on a single sample and has only reported variant sites.
      synonyms:
      - --call-null-sites
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svtk
    - standardize
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk standardize [-h] [-p PREFIX] [--include-reference-sites]\n\
      \                        [--standardizer STANDARDIZER] [--contigs CONTIGS]\n\
      \                        [--min-size MIN_SIZE] [--call-null-sites]\n       \
      \                 vcf fout source\n\nStandardize a VCF of SV calls.\n\nEach\
      \ record corresponds to a single SV breakpoint and will have the following\n\
      INFO fields, with specified constraints:\n  SVTYPE:  SV type [DEL,DUP,INV,BND]\n\
      \  CHR2:    Secondary chromosome [Must be lexicographically greater than CHROM]\n\
      \  END:     SV end position (or position on CHR2 in translocations)\n  STRANDS:\
      \ Breakpoint strandedness [++,+-,-+,--]\n  SVLEN:   SV length (-1 if translocation)\n\
      \  ALGORITHMS:  Source algorithm\n\npositional arguments:\n  vcf           \
      \        Raw VCF.\n  fout                  Standardized VCF.\n  source     \
      \           Source algorithm. [delly,lumpy,manta,wham,melt]\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -p PREFIX, --prefix\
      \ PREFIX\n                        If provided, variant names will be overwritten\
      \ with\n                        this prefix.\n  --include-reference-sites\n\
      \                        Include records where all samples are called 0/0 or\n\
      \                        ./.\n  --standardizer STANDARDIZER\n              \
      \          Path to python file with custom standardizer\n                  \
      \      definition. (Not yet supported.)\n  --contigs CONTIGS     Reference fasta\
      \ index (.fai). If provided, contigs in\n                        index will\
      \ be used in VCF header. Otherwise all GRCh37\n                        contigs\
      \ will be used in header. Variants on contigs\n                        not in\
      \ provided list will be removed.\n  --min-size MIN_SIZE   Minimum SV size to\
      \ report [50].\n  --call-null-sites     Call sites with null genotypes (./.).\
      \ Generally useful\n                        when an algorithm has been run on\
      \ a single sample and\n                        has only reported variant sites.\n"
    generated_using: &id003
    - --help
  - &id002 !Command
    positional: []
    named:
    - !Flag
      description: Reference fasta index (.fai). If provided, contigs in index will
        be used in VCF header. Otherwise all GRCh37 contigs will be used in header.
      synonyms:
      - --contigs
      args: !SimpleFlagArg
        name: CONTIGS
      optional: true
    command:
    - svtk
    - rdtest2vcf
    parent: *id001
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: samples
        optional: false
      - !Positional
        description: ''
        position: 1
        name: fout
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --contigs
        args: !SimpleFlagArg
          name: CONTIGS
        optional: true
      command:
      - svtk
      - rdtest2vcf
      - bed
      parent: *id002
      subcommands: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: svtk rdtest2vcf [-h] [--contigs CONTIGS] bed samples fout\n\
        svtk rdtest2vcf: error: argument bed: can't open 'bed': [Errno 2] No such\
        \ file or directory: 'bed'\n"
      generated_using: *id003
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: svtk
        optional: false
      - !Positional
        description: ''
        position: 1
        name: rdtest2vcf
        optional: false
      - !Positional
        description: ''
        position: 2
        name: bed
        optional: false
      - !Positional
        description: ''
        position: 3
        name: samples
        optional: false
      - !Positional
        description: ''
        position: 4
        name: fout
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --contigs
        args: !SimpleFlagArg
          name: CONTIGS
        optional: true
      command:
      - svtk
      - rdtest2vcf
      - samples
      parent: *id002
      subcommands: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: svtk rdtest2vcf [-h] [--contigs CONTIGS] bed samples fout\n\
        svtk rdtest2vcf: error: argument bed: can't open 'samples': [Errno 2] No such\
        \ file or directory: 'samples'\n"
      generated_using: *id003
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: svtk
        optional: false
      - !Positional
        description: ''
        position: 1
        name: rdtest2vcf
        optional: false
      - !Positional
        description: ''
        position: 2
        name: bed
        optional: false
      - !Positional
        description: ''
        position: 3
        name: samples
        optional: false
      - !Positional
        description: ''
        position: 4
        name: fout
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --contigs
        args: !SimpleFlagArg
          name: CONTIGS
        optional: true
      command:
      - svtk
      - rdtest2vcf
      - fout
      parent: *id002
      subcommands: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: svtk rdtest2vcf [-h] [--contigs CONTIGS] bed samples fout\n\
        svtk rdtest2vcf: error: argument bed: can't open 'fout': [Errno 2] No such\
        \ file or directory: 'fout'\n"
      generated_using: *id003
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk rdtest2vcf [-h] [--contigs CONTIGS] bed samples fout\n\
      \nConvert an RdTest-formatted bed to the standard VCF format.\n\nEach record\
      \ corresponds to a single CNV interval and will have the following\nINFO fields,\
      \ with specified constraints:\n  SVTYPE:  SV type [DEL,DUP]\n  CHR2:    Secondary\
      \ chromosome; set to same as CHROM\n  END:     SV end position\n  STRANDS: Breakpoint\
      \ strandedness [DEL:+-,DUP:-+]\n  SVLEN:   SV length\n  ALGORITHMS:  Tagged\
      \ with \"depth\"\n\npositional arguments:\n  bed                RdTest-formatted\
      \ bed file. (chrom, start, end, name,\n                     samples, svtype)\n\
      \  samples            List of all samples present in variant callset.\n  fout\
      \               Standardized VCF. Will be compressed with bgzip and tabix\n\
      \                     indexed if filename ends with .gz\n\noptional arguments:\n\
      \  -h, --help         show this help message and exit\n  --contigs CONTIGS \
      \ Reference fasta index (.fai). If provided, contigs in\n                  \
      \   index will be used in VCF header. Otherwise all GRCh37\n               \
      \      contigs will be used in header.\n"
    generated_using: *id003
  - !Command
    positional:
    - !Positional
      description: VCF to convert.
      position: 0
      name: vcf
      optional: false
    - !Positional
      description: Converted bed. Specify `-` or `stdout` to write to stdout.
      position: 1
      name: bed
      optional: false
    named:
    - !Flag
      description: Don't include comma-delimited list of called samples for each variant.
      synonyms:
      - --no-samples
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: INFO field to include as column in output. May be specified more
        than once. To include all INFO fields, specify `--info ALL`. INFO fields are
        reported in the order in which they are requested. If ALL INFO fields are
        requested, they are reported in the order in which they appear in the VCF
        header.
      synonyms:
      - -i
      - --info
      args: !SimpleFlagArg
        name: INFO
      optional: true
    - !Flag
      description: Include FILTER status in output, with the same behavior an INFO
        field.
      synonyms:
      - --include-filters
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Report two entries in bed file for each BND.
      synonyms:
      - --split-bnd
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Report entries for each CPX rearrangement interval.
      synonyms:
      - --split-cpx
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress header.
      synonyms:
      - --no-header
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Do not sort start/end coordinates per record before writing to
        bed.
      synonyms:
      - --no-sort-coords
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Do not output unresolved variants.
      synonyms:
      - --no-unresolved
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Report all INS sinks as 1bp intervals.
      synonyms:
      - --simple-sinks
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svtk
    - vcf2bed
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk [-h] [--no-samples] [-i INFO] [--include-filters] [--split-bnd]\n\
      \            [--split-cpx] [--no-header] [--no-sort-coords] [--no-unresolved]\n\
      \            [--simple-sinks]\n            vcf bed\n\nConvert a VCF to a BED.\n\
      \npositional arguments:\n  vcf                   VCF to convert.\n  bed    \
      \               Converted bed. Specify `-` or `stdout` to write to\n       \
      \                 stdout.\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  --no-samples          Don't include comma-delimited\
      \ list of called samples\n                        for each variant.\n  -i INFO,\
      \ --info INFO  INFO field to include as column in output. May be\n         \
      \               specified more than once. To include all INFO fields,\n    \
      \                    specify `--info ALL`. INFO fields are reported in the\n\
      \                        order in which they are requested. If ALL INFO fields\n\
      \                        are requested, they are reported in the order in which\n\
      \                        they appear in the VCF header.\n  --include-filters\
      \     Include FILTER status in output, with the same\n                     \
      \   behavior an INFO field.\n  --split-bnd           Report two entries in bed\
      \ file for each BND.\n  --split-cpx           Report entries for each CPX rearrangement\
      \ interval.\n  --no-header           Suppress header.\n  --no-sort-coords  \
      \    Do not sort start/end coordinates per record before\n                 \
      \       writing to bed.\n  --no-unresolved       Do not output unresolved variants.\n\
      \  --simple-sinks        Report all INS sinks as 1bp intervals.\n"
    generated_using: *id003
  - &id004 !Command
    positional: []
    named:
    - !Flag
      description: Restrict clustering to genomic region.
      synonyms:
      - -r
      - --region
      args: !SimpleFlagArg
        name: REGION
      optional: true
    - !Flag
      description: Maximum clustering distance. Suggested to use max of median + 7*MAD
        over samples. [500]
      synonyms:
      - -d
      - --dist
      args: !SimpleFlagArg
        name: DIST
      optional: true
    - !Flag
      description: Minimum reciprocal overlap between variants. [0.1]
      synonyms:
      - -f
      - --frac
      args: !SimpleFlagArg
        name: FRAC
      optional: true
    - !Flag
      description: Tabix indexed bed of blacklisted regions. Any SV with a breakpoint
        falling inside one of these regions is filtered from output.
      synonyms:
      - -x
      - --blacklist
      args: !SimpleFlagArg
        name: BED.GZ
      optional: true
    - !Flag
      description: Minimum SV size to report for intrachromosomal events. [0]
      synonyms:
      - -z
      - --svsize
      args: !SimpleFlagArg
        name: SVSIZE
      optional: true
    - !Flag
      description: Prefix for merged variant IDs. [MERGED]
      synonyms:
      - -p
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    - !Flag
      description: Comma delimited list of svtypes to cluster [DEL,DUP,INV,BND]
      synonyms:
      - -t
      - --svtypes
      args: !SimpleFlagArg
        name: SVTYPES
      optional: true
    - !Flag
      description: Ignore svtypes when clustering.
      synonyms:
      - --ignore-svtypes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Minimum sample overlap for two variants to be clustered together.
      synonyms:
      - -o
      - --sample-overlap
      args: !SimpleFlagArg
        name: SAMPLE_OVERLAP
      optional: true
    - !Flag
      description: Include list of IDs of constituent records in each cluster.
      synonyms:
      - --preserve-ids
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: In a set of clustered variants, report best (highest GQ) non-reference
        genotype when available.
      synonyms:
      - --preserve-genotypes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Use header from clustering VCFs
      synonyms:
      - --preserve-header
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svtk
    - vcfcluster
    parent: *id001
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: svtk
        optional: false
      - !Positional
        description: ''
        position: 1
        name: vcfcluster
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - -r
        args: !SimpleFlagArg
          name: REGION
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -d
        args: !SimpleFlagArg
          name: DIST
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -f
        args: !SimpleFlagArg
          name: FRAC
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -x
        args: !SimpleFlagArg
          name: BED.GZ
        optional: true
      command:
      - svtk
      - vcfcluster
      - filelist
      parent: *id004
      subcommands: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: svtk vcfcluster [-h] [-r REGION] [-d DIST] [-f FRAC] [-x\
        \ BED.GZ]\n                       [-z SVSIZE] [-p PREFIX] [-t SVTYPES] [--ignore-svtypes]\n\
        \                       [-o SAMPLE_OVERLAP] [--preserve-ids]\n           \
        \            [--preserve-genotypes] [--preserve-header]\n                \
        \       filelist fout\nsvtk vcfcluster: error: argument filelist: can't open\
        \ 'filelist': [Errno 2] No such file or directory: 'filelist'\n"
      generated_using: *id003
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: svtk
        optional: false
      - !Positional
        description: ''
        position: 1
        name: vcfcluster
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - -r
        args: !SimpleFlagArg
          name: REGION
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -d
        args: !SimpleFlagArg
          name: DIST
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -f
        args: !SimpleFlagArg
          name: FRAC
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -x
        args: !SimpleFlagArg
          name: BED.GZ
        optional: true
      command:
      - svtk
      - vcfcluster
      - fout
      parent: *id004
      subcommands: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: svtk vcfcluster [-h] [-r REGION] [-d DIST] [-f FRAC] [-x\
        \ BED.GZ]\n                       [-z SVSIZE] [-p PREFIX] [-t SVTYPES] [--ignore-svtypes]\n\
        \                       [-o SAMPLE_OVERLAP] [--preserve-ids]\n           \
        \            [--preserve-genotypes] [--preserve-header]\n                \
        \       filelist fout\nsvtk vcfcluster: error: argument filelist: can't open\
        \ 'fout': [Errno 2] No such file or directory: 'fout'\n"
      generated_using: *id003
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk vcfcluster [-h] [-r REGION] [-d DIST] [-f FRAC] [-x BED.GZ]\n\
      \                       [-z SVSIZE] [-p PREFIX] [-t SVTYPES] [--ignore-svtypes]\n\
      \                       [-o SAMPLE_OVERLAP] [--preserve-ids]\n             \
      \          [--preserve-genotypes] [--preserve-header]\n                    \
      \   filelist fout\n\nIntersect SV called by PE/SR-based algorithms.\n\nPaired-end\
      \ and split-read callers provide a reasonably precise estimation of\nan SV breakpoint.\
      \ This program identifies variant calls that fall within\nthe expected margin\
      \ of error made by these programs and clusters them together.\nThe cluster distance\
      \ defaults to 500 bp but it is recommended to use the\nmaximum individual clustering\
      \ distance across the libraries being analyzed.\n(Generally median + 7 * MAD)\n\
      \npositional arguments:\n  filelist              List of paths to standardized\
      \ VCFS\n  fout                  Clustered VCF.\n\noptional arguments:\n  -h,\
      \ --help            show this help message and exit\n  -r REGION, --region REGION\n\
      \                        Restrict clustering to genomic region.\n  -d DIST,\
      \ --dist DIST  Maximum clustering distance. Suggested to use max of\n      \
      \                  median + 7*MAD over samples. [500]\n  -f FRAC, --frac FRAC\
      \  Minimum reciprocal overlap between variants. [0.1]\n  -x BED.GZ, --blacklist\
      \ BED.GZ\n                        Tabix indexed bed of blacklisted regions.\
      \ Any SV with\n                        a breakpoint falling inside one of these\
      \ regions is\n                        filtered from output.\n  -z SVSIZE, --svsize\
      \ SVSIZE\n                        Minimum SV size to report for intrachromosomal\
      \ events.\n                        [0]\n  -p PREFIX, --prefix PREFIX\n     \
      \                   Prefix for merged variant IDs. [MERGED]\n  -t SVTYPES, --svtypes\
      \ SVTYPES\n                        Comma delimited list of svtypes to cluster\n\
      \                        [DEL,DUP,INV,BND]\n  --ignore-svtypes      Ignore svtypes\
      \ when clustering.\n  -o SAMPLE_OVERLAP, --sample-overlap SAMPLE_OVERLAP\n \
      \                       Minimum sample overlap for two variants to be\n    \
      \                    clustered together.\n  --preserve-ids        Include list\
      \ of IDs of constituent records in each\n                        cluster.\n\
      \  --preserve-genotypes  In a set of clustered variants, report best (highest\n\
      \                        GQ) non-reference genotype when available.\n  --preserve-header\
      \     Use header from clustering VCFs\n"
    generated_using: *id003
  - !Command
    positional:
    - !Positional
      description: 'SV calls to cluster. Columns: #chr, start, end, name, sample,
        svtype'
      position: 0
      name: bed
      optional: false
    - !Positional
      description: Clustered bed.
      position: 1
      name: fout
      optional: false
    named:
    - !Flag
      description: Minimum reciprocal overlap fraction to link variants. [0.8]
      synonyms:
      - -f
      - --frac
      args: !SimpleFlagArg
        name: FRAC
      optional: true
    - !Flag
      description: Region to cluster (chrom:start-end). Requires tabixed bed.
      synonyms:
      - -r
      - --region
      args: !SimpleFlagArg
        name: REGION
      optional: true
    - !Flag
      description: Cluster ID prefix
      synonyms:
      - -p
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    - !Flag
      description: Report median of start and end positions in each cluster as final
        coordinates of cluster.
      synonyms:
      - -m
      - --merge-coordinates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Temporary directory [/tmp]
      synonyms:
      - -T
      - --tmpdir
      args: !SimpleFlagArg
        name: TMPDIR
      optional: true
    - !Flag
      description: Pre-computed self-intersection of bed.
      synonyms:
      - -s
      - --intersection
      args: !SimpleFlagArg
        name: INTERSECTION
      optional: true
    command:
    - svtk
    - bedcluster
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk bedcluster [-h] [-f FRAC] [-r REGION] [-p PREFIX] [-m]\
      \ [-T TMPDIR]\n                       [-s INTERSECTION]\n                  \
      \     bed [fout]\n\nCluster a bed of structural variants based on reciprocal\
      \ overlap.\n\nVariants are clustered with the single-linkage algorithm, using\
      \ a minimum\nreciprocal overlap to determine whether two variants are linked.\
      \ If multiple\nvariants from the same sample are clustered together, they are\
      \ merged into a\nsingle spanning variant. Cluster compactness, calculated as\
      \ the\nroot-mean-square standard deviation, is reported for each cluster. Optionally,\n\
      the median coordinates for each cluster are reported rather than the original\n\
      individual coordinates.\n\npositional arguments:\n  bed                   SV\
      \ calls to cluster. Columns: #chr, start, end, name,\n                     \
      \   sample, svtype\n  fout                  Clustered bed.\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -f FRAC, --frac\
      \ FRAC  Minimum reciprocal overlap fraction to link variants.\n            \
      \            [0.8]\n  -r REGION, --region REGION\n                        Region\
      \ to cluster (chrom:start-end). Requires tabixed\n                        bed.\n\
      \  -p PREFIX, --prefix PREFIX\n                        Cluster ID prefix\n \
      \ -m, --merge-coordinates\n                        Report median of start and\
      \ end positions in each\n                        cluster as final coordinates\
      \ of cluster.\n  -T TMPDIR, --tmpdir TMPDIR\n                        Temporary\
      \ directory [/tmp]\n  -s INTERSECTION, --intersection INTERSECTION\n       \
      \                 Pre-computed self-intersection of bed.\n"
    generated_using: *id003
  - &id005 !Command
    positional: []
    named:
    - !Flag
      description: Don't include header in output
      synonyms:
      - --no-header
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Sum variant counts across samples
      synonyms:
      - --total-obs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Sum variant counts across samples
      synonyms:
      - --total-variants
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svtk
    - count-svtypes
    parent: *id001
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: svtk
        optional: false
      - !Positional
        description: ''
        position: 1
        name: count-svtypes
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --no-header
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ''
        synonyms:
        - --total-obs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ''
        synonyms:
        - --total-variants
        args: !EmptyFlagArg {}
        optional: true
      command:
      - svtk
      - count-svtypes
      - fout
      parent: *id005
      subcommands: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: svtk count-svtypes [-h] [--no-header] [--total-obs] [--total-variants]\n\
        \                          vcf [fout]\nsvtk count-svtypes: error: unrecognized\
        \ arguments: --usage\n"
      generated_using: &id007
      - --usage
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk count-svtypes [-h] [--no-header] [--total-obs] [--total-variants]\n\
      \                          vcf [fout]\n\nCount the instances of each SVTYPE\
      \ observed in each sample in a VCF.\n\nA record is only counted towards a sample's\
      \ total if the sample received a\nnon-reference (0/0) or a non-null (./.) call.\
      \ Records without an annotated\nSVTYPE in the INFO field are counted as \"NO_SVTYPE\"\
      .\n\nCounts are reported in a three column table (sample, svtype, count).\n\n\
      positional arguments:\n  vcf\n  fout              Output file [stdout]\n\noptional\
      \ arguments:\n  -h, --help        show this help message and exit\n  --no-header\
      \       Don't include header in output\n  --total-obs       Sum variant counts\
      \ across samples\n  --total-variants  Sum variant counts across samples\n"
    generated_using: *id003
  - !Command
    positional:
    - !Positional
      description: Local or S3 path to bam
      position: 0
      name: bam
      optional: false
    - !Positional
      description: ID to append to each line of output files.
      position: 1
      name: sample
      optional: false
    - !Positional
      description: Output split counts.
      position: 2
      name: splitfile
      optional: false
    - !Positional
      description: Output discordant pairs.
      position: 3
      name: discfile
      optional: false
    named:
    - !Flag
      description: Directory of local BAM indexes if accessing a remote S3 bam.
      synonyms:
      - --index-dir
      args: !SimpleFlagArg
        name: INDEX_DIR
      optional: true
    - !Flag
      description: Tabix-formatted region to parse
      synonyms:
      - -r
      - --region
      args: !SimpleFlagArg
        name: REGION
      optional: true
    - !Flag
      description: bgzip and tabix index output
      synonyms:
      - -z
      - --bgzip
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svtk
    - collect-pesr
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk collect-pesr [-h] [--index-dir INDEX_DIR] [-r REGION]\
      \ [-z]\n                         bam sample splitfile discfile\n\nCollect split\
      \ read and discordant pair data from a bam alignment.\n\nSplit reads: The tool\
      \ counts the number of reads soft-clipped in each direction\n(30S121M = left-clipped,\
      \ 121M30S = right-clipped) at each position in the\ngenome.  The position of\
      \ a right-clipped read is shifted by the length of its\nalignment.\n\nDiscordant\
      \ pairs: The tool reduces discordant pairs to (chrA, posA, strandA,\nchrB, posB,\
      \ strandB).\n\nUnmapped reads, reads with unmapped mates, secondary and supplementary\n\
      alignments, and duplicates are excluded (SAM flag 3340).\n\nCollection can be\
      \ performed on an S3-hosted bam. The tool will attempt to find\na local copy\
      \ of the bam index in the working directory, or the directory\nspecified with\
      \ `--index-dir`, otherwise the index will be downloaded.\n\npositional arguments:\n\
      \  bam                   Local or S3 path to bam\n  sample                ID\
      \ to append to each line of output files.\n  splitfile             Output split\
      \ counts.\n  discfile              Output discordant pairs.\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --index-dir INDEX_DIR\n\
      \                        Directory of local BAM indexes if accessing a remote\n\
      \                        S3 bam.\n  -r REGION, --region REGION\n           \
      \             Tabix-formatted region to parse\n  -z, --bgzip           bgzip\
      \ and tabix index output\n"
    generated_using: *id003
  - !Command
    positional:
    - !Positional
      description: VCF of variant calls. Standardized to include CHR2, END, SVTYPE,
        STRANDS in INFO.
      position: 0
      name: vcf
      optional: false
    - !Positional
      description: 'Tabix indexed file of split counts. Columns: chrom,pos,clip,count,sample'
      position: 1
      name: countfile
      optional: false
    - !Positional
      description: Output table of most significant start/endpositions.
      position: 2
      name: fout
      optional: false
    named:
    - !Flag
      description: Window around variant start/end to consider for split read support.
        [100]
      synonyms:
      - -w
      - --window
      args: !SimpleFlagArg
        name: WINDOW
      optional: true
    - !Flag
      description: Number of background samples to choose for comparison in t-test.
        [160]
      synonyms:
      - -b
      - --background
      args: !SimpleFlagArg
        name: BACKGROUND
      optional: true
    - !Flag
      description: Whitelist of samples to restrict testing to.
      synonyms:
      - -s
      - --samples
      args: !SimpleFlagArg
        name: SAMPLES
      optional: true
    - !Flag
      description: Tabix index of discordant pair file. Required if discordant pair
        file is hosted remotely.
      synonyms:
      - --index
      args: !SimpleFlagArg
        name: INDEX
      optional: true
    - !Flag
      description: Median coverage statistics for each library (optional). If provided,
        each sample's split counts will be normalized accordingly. Same format as
        RdTest, one column per sample.
      synonyms:
      - --medianfile
      args: !SimpleFlagArg
        name: MEDIANFILE
      optional: true
    - !Flag
      description: Print progress log to stderr.
      synonyms:
      - --log
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svtk
    - sr-test
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk sr-test [-h] [-w WINDOW] [-b BACKGROUND] [-s SAMPLES]\n\
      \                    [--index INDEX] [--medianfile MEDIANFILE] [--log]\n   \
      \                 vcf countfile fout\n\nCalculate enrichment of clipped reads\
      \ at SV breakpoints.\n\npositional arguments:\n  vcf                   VCF of\
      \ variant calls. Standardized to include CHR2,\n                        END,\
      \ SVTYPE, STRANDS in INFO.\n  countfile             Tabix indexed file of split\
      \ counts. Columns:\n                        chrom,pos,clip,count,sample\n  fout\
      \                  Output table of most significant start/endpositions.\n\n\
      optional arguments:\n  -h, --help            show this help message and exit\n\
      \  -w WINDOW, --window WINDOW\n                        Window around variant\
      \ start/end to consider for split\n                        read support. [100]\n\
      \  -b BACKGROUND, --background BACKGROUND\n                        Number of\
      \ background samples to choose for comparison\n                        in t-test.\
      \ [160]\n  -s SAMPLES, --samples SAMPLES\n                        Whitelist\
      \ of samples to restrict testing to.\n  --index INDEX         Tabix index of\
      \ discordant pair file. Required if\n                        discordant pair\
      \ file is hosted remotely.\n  --medianfile MEDIANFILE\n                    \
      \    Median coverage statistics for each library\n                        (optional).\
      \ If provided, each sample's split counts\n                        will be normalized\
      \ accordingly. Same format as RdTest,\n                        one column per\
      \ sample.\n  --log                 Print progress log to stderr.\n"
    generated_using: *id003
  - *id006
  - !Command
    positional:
    - !Positional
      description: Filtered breakpoints and CNV intervals.
      position: 0
      name: raw
      optional: false
    - !Positional
      description: Resolved simple and complex variants.
      position: 1
      name: resolved
      optional: false
    named:
    - !Flag
      description: Scraped discordant pairs. Required to attempt to resolve single-ender
        inversions.
      synonyms:
      - --discfile
      args: !SimpleFlagArg
        name: DISCFILE
      optional: true
    - !Flag
      description: Tab-delimited list of discordant pair files and indices
      synonyms:
      - --discfile-list
      args: !SimpleFlagArg
        name: DISCFILE_LIST
      optional: true
    - !Flag
      description: Mobile element insertion bed. Required to classify inverted insertions.
      synonyms:
      - --mei-bed
      args: !SimpleFlagArg
        name: MEI_BED
      optional: true
    - !Flag
      description: Cytoband file. Required to correctly classify interchromosomal
        events.
      synonyms:
      - --cytobands
      args: !SimpleFlagArg
        name: CYTOBANDS
      optional: true
    - !Flag
      description: Minumum discordant pairs required during single-ender rescan.
      synonyms:
      - --min-rescan-pe-support
      args: !SimpleFlagArg
        name: MIN_RESCAN_PE_SUPPORT
      optional: true
    - !Flag
      description: Tabix indexed bed of blacklisted regions. Any anomalous pair falling
        inside one of these regions is excluded from PE rescanning.
      synonyms:
      - -x
      - --pe-blacklist
      args: !SimpleFlagArg
        name: BED.GZ
      optional: true
    - !Flag
      description: Unresolved complex breakpoints and CNV.
      synonyms:
      - -u
      - --unresolved
      args: !SimpleFlagArg
        name: UNRESOLVED
      optional: true
    - !Flag
      description: Variant prefix [CPX_]
      synonyms:
      - -p
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    - !Flag
      description: Disable progress logging to stderr.
      synonyms:
      - -q
      - --quiet
      args: !SimpleFlagArg
        name: QUIET
      optional: true
    command:
    - svtk
    - resolve
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk resolve [-h] (--discfile DISCFILE | --discfile-list DISCFILE_LIST)\n\
      \                    --mei-bed MEI_BED --cytobands CYTOBANDS\n             \
      \       [--min-rescan-pe-support MIN_RESCAN_PE_SUPPORT]\n                  \
      \  [-x BED.GZ] [-u UNRESOLVED] [-p PREFIX] [-q QUIET]\n                    raw\
      \ resolved\n\nResolve complex SV from inversion/translocation breakpoints and\
      \ CNV intervals.\n\npositional arguments:\n  raw                   Filtered\
      \ breakpoints and CNV intervals.\n  resolved              Resolved simple and\
      \ complex variants.\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --discfile DISCFILE   Scraped discordant pairs. Required\
      \ to attempt to\n                        resolve single-ender inversions.\n\
      \  --discfile-list DISCFILE_LIST\n                        Tab-delimited list\
      \ of discordant pair files and\n                        indices\n  --mei-bed\
      \ MEI_BED     Mobile element insertion bed. Required to classify\n         \
      \               inverted insertions.\n  --cytobands CYTOBANDS\n            \
      \            Cytoband file. Required to correctly classify\n               \
      \         interchromosomal events.\n  --min-rescan-pe-support MIN_RESCAN_PE_SUPPORT\n\
      \                        Minumum discordant pairs required during single-ender\n\
      \                        rescan.\n  -x BED.GZ, --pe-blacklist BED.GZ\n     \
      \                   Tabix indexed bed of blacklisted regions. Any\n        \
      \                anomalous pair falling inside one of these regions is\n   \
      \                     excluded from PE rescanning.\n  -u UNRESOLVED, --unresolved\
      \ UNRESOLVED\n                        Unresolved complex breakpoints and CNV.\n\
      \  -p PREFIX, --prefix PREFIX\n                        Variant prefix [CPX_]\n\
      \  -q QUIET, --quiet QUIET\n                        Disable progress logging\
      \ to stderr.\n"
    generated_using: *id003
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: svtk
      optional: false
    - !Positional
      description: ''
      position: 1
      name: vcf
      optional: false
    - !Positional
      description: ''
      position: 2
      name: annotated_vcf
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --gencode
      args: !SimpleFlagArg
        name: GENCODE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --noncoding
      args: !SimpleFlagArg
        name: NONCODING
      optional: true
    command:
    - svtk
    - annotate
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svtk [-h] [--gencode GENCODE] [--noncoding NONCODING] vcf annotated_vcf\n\
      svtk: error: the following arguments are required: vcf, annotated_vcf\n"
    generated_using: *id007
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "SVTK: A toolkit for manipulating structural variation\n\nusage: svtk\
    \ [-h] <subcommand> [options]\n\n[ Preprocessing ]\n    standardize    Convert\
    \ SV calls to a standardized format.\n    rdtest2vcf     Convert an RdTest-formatted\
    \ bed to a standardized VCF.\n    vcf2bed        Convert a standardized VCF to\
    \ an RdTest-formatted bed.\n\n[ Algorithm integration ]\n    vcfcluster     Cluster\
    \ SV calls from a list of VCFs. (Generally PE/SR.)\n    bedcluster     Cluster\
    \ SV calls from a BED. (Generally depth.)\n\n[ Statistics ]\n    count-svtypes\
    \  Count instances of each svtype in each sample in a VCF\n\n[ Read-depth analysis\
    \ ]\n    bincov         Calculate normalized genome-wide depth of coverage.\n\
    \    rdtest*        Calculate comparative coverage statistics at CNV sites.\n\n\
    [ PE/SR analysis ]\n    collect-pesr   Count clipped reads and extract discordant\
    \ pairs genomewide.\n    sr-test        Calculate enrichment of clipped reads\
    \ at SV breakpoints.\n    pe-test        Calculate enrichment of discordant pairs\
    \ at SV breakpoints.\n\n[ Variant analysis ]\n    resolve        Resolve complex\
    \ variants from VCF of breakpoints.\n    annotate       Annotate genic effects\
    \ and ovelrap with noncoding elements.\n\n* Not yet implemented\n\noptional arguments:\n\
    \  -h, --help  show this help message and exit\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: svtk pe-test [-h] [-o WINDOW_OUT] [-i WINDOW_IN] [-b BACKGROUND]\n\
  \                    [-s SAMPLES] [--index INDEX] [--medianfile MEDIANFILE]\n  \
  \                  [--log]\n                    vcf disc fout\n\nCalculate enrichment\
  \ of discordant pairs at SV breakpoints.\n\npositional arguments:\n  vcf       \
  \            Variants.\n  disc                  Table of discordant pair coordinates.\n\
  \  fout                  Output table of PE counts.\n\noptional arguments:\n  -h,\
  \ --help            show this help message and exit\n  -o WINDOW_OUT, --window-out\
  \ WINDOW_OUT\n                        Window outside breakpoint to query for discordant\n\
  \                        pairs. [500]\n  -i WINDOW_IN, --window-in WINDOW_IN\n \
  \                       Window inside breakpoint to query for discordant\n     \
  \                   pairs. [50]\n  -b BACKGROUND, --background BACKGROUND\n    \
  \                    Number of background samples to sample for PE\n           \
  \             evidence. [160]\n  -s SAMPLES, --samples SAMPLES\n               \
  \         Whitelist of samples to restrict testing to.\n  --index INDEX        \
  \ Tabix index of discordant pair file. Required if\n                        discordant\
  \ pair file is hosted remotely.\n  --medianfile MEDIANFILE\n                   \
  \     Median coverage statistics for each library\n                        (optional).\
  \ If provided, each sample's split counts\n                        will be normalized\
  \ accordingly. Same format as RdTest,\n                        one column per sample.\n\
  \  --log                 Print progress log to stderr.\n"
generated_using: *id003
