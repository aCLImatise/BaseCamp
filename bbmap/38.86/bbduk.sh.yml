!Command
command:
- bbduk.sh
positional:
- !Positional
  description: 1 means use all, 2 means use every other kmer, etc.
  position: 0
  name: kmers.
  optional: false
- !Positional
  description: Pairs will be discarded if both are shorter.
  position: 0
  name: discarded.
  optional: false
named:
- !Flag
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will\nspecify 20 gigs of RAM, and -Xmx200m will specify 200 megs.\nThe max is\
    \ typically 85% of physical memory."
  synonyms:
  - -Xmx
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "This flag will cause the process to exit if an\nout-of-memory exception\
    \ occurs.  Requires Java 8u92+."
  synonyms:
  - -eoom
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disable assertions.
  synonyms:
  - -da
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified March 24, 2020\n\nDescription:\
  \  Compares reads to the kmers in a reference dataset, optionally \nallowing an\
  \ edit distance. Splits the reads into two outputs - those that \nmatch the reference,\
  \ and those that don't. Can also trim (remove) the matching \nparts of the reads\
  \ rather than binning the reads.\nPlease read bbmap/docs/guides/BBDukGuide.txt for\
  \ more information.\n\nUsage:  bbduk.sh in=<input file> out=<output file> ref=<contaminant\
  \ files>\n\nInput may be stdin or a fasta or fastq file, compressed or uncompressed.\n\
  If you pipe via stdin/stdout, please include the file type; e.g. for gzipped \n\
  fasta input, set in=stdin.fa.gz\n\nInput parameters:\nin=<file>           Main input.\
  \ in=stdin.fq will pipe from stdin.\nin2=<file>          Input for 2nd read of pairs\
  \ in a different file.\nref=<file,file>     Comma-delimited list of reference files.\n\
  \                    In addition to filenames, you may also use the keywords:\n\
  \                    adapters, artifacts, phix, lambda, pjet, mtst, kapa\nliteral=<seq,seq>\
  \   Comma-delimited list of literal reference sequences.\ntouppercase=f       (tuc)\
  \ Change all bases upper-case.\ninterleaved=auto    (int) t/f overrides interleaved\
  \ autodetection.\nqin=auto            Input quality offset: 33 (Sanger), 64, or\
  \ auto.\nreads=-1            If positive, quit after processing X reads or pairs.\n\
  copyundefined=f     (cu) Process non-AGCT IUPAC reference bases by making all\n\
  \                    possible unambiguous copies.  Intended for short motifs\n \
  \                   or adapter barcodes, as time/memory use is exponential.\nsamplerate=1\
  \        Set lower to only process a fraction of input reads.\nsamref=<file>   \
  \    Optional reference fasta for processing sam files.\n\nOutput parameters:\n\
  out=<file>          (outnonmatch) Write reads here that do not contain \n      \
  \              kmers matching the database.  'out=stdout.fq' will pipe \n      \
  \              to standard out.\nout2=<file>         (outnonmatch2) Use this to\
  \ write 2nd read of pairs to a \n                    different file.\noutm=<file>\
  \         (outmatch) Write reads here that fail filters.  In default\n         \
  \           kfilter mode, this means any read with a matching kmer.\n          \
  \          In any mode, it also includes reads that fail filters such\n        \
  \            as minlength, mingc, maxgc, entropy, etc.  In other words,\n      \
  \              it includes all reads that do not go to 'out'.\noutm2=<file>    \
  \    (outmatch2) Use this to write 2nd read of pairs to a \n                   \
  \ different file.\nouts=<file>         (outsingle) Use this to write singleton reads\
  \ whose mate \n                    was trimmed shorter than minlen.\nstats=<file>\
  \        Write statistics about which contamininants were detected.\nrefstats=<file>\
  \     Write statistics on a per-reference-file basis.\nrpkm=<file>         Write\
  \ RPKM for each reference sequence (for RNA-seq).\ndump=<file>         Dump kmer\
  \ tables to a file, in fasta format.\nduk=<file>          Write statistics in duk's\
  \ format. *DEPRECATED*\nnzo=t               Only write statistics about ref sequences\
  \ with nonzero hits.\noverwrite=t         (ow) Grant permission to overwrite files.\n\
  showspeed=t         (ss) 'f' suppresses display of processing speed.\nziplevel=2\
  \          (zl) Compression level; 1 (min) through 9 (max).\nfastawrap=70      \
  \  Length of lines in fasta output.\nqout=auto           Output quality offset:\
  \ 33 (Sanger), 64, or auto.\nstatscolumns=3      (cols) Number of columns for stats\
  \ output, 3 or 5.\n                    5 includes base counts.\nrename=f       \
  \     Rename reads to indicate which sequences they matched.\nrefnames=f       \
  \   Use names of reference files rather than scaffold IDs.\ntrd=f              \
  \ Truncate read and ref names at the first whitespace.\nordered=f           Set\
  \ to true to output reads in same order as input.\nmaxbasesout=-1      If positive,\
  \ quit after writing approximately this many\n                    bases to out (outu/outnonmatch).\n\
  maxbasesoutm=-1     If positive, quit after writing approximately this many\n  \
  \                  bases to outm (outmatch).\njson=f              Print to screen\
  \ in json format.\n\nHistogram output parameters:\nbhist=<file>        Base composition\
  \ histogram by position.\nqhist=<file>        Quality histogram by position.\nqchist=<file>\
  \       Count of bases with each quality value.\naqhist=<file>       Histogram of\
  \ average read quality.\nbqhist=<file>       Quality histogram designed for box\
  \ plots.\nlhist=<file>        Read length histogram.\nphist=<file>        Polymer\
  \ length histogram.\ngchist=<file>       Read GC content histogram.\nenthist=<file>\
  \      Read entropy histogram.\nihist=<file>        Insert size histogram, for paired\
  \ reads in mapped sam.\ngcbins=100          Number gchist bins.  Set to 'auto' to\
  \ use read length.\nmaxhistlen=6000     Set an upper bound for histogram lengths;\
  \ higher uses \n                    more memory.  The default is 6000 for some histograms\n\
  \                    and 80000 for others.\n\nHistograms for mapped sam/bam files\
  \ only:\nhistbefore=t        Calculate histograms from reads before processing.\n\
  ehist=<file>        Errors-per-read histogram.\nqahist=<file>       Quality accuracy\
  \ histogram of error rates versus quality \n                    score.\nindelhist=<file>\
  \    Indel length histogram.\nmhist=<file>        Histogram of match, sub, del,\
  \ and ins rates by position.\nidhist=<file>       Histogram of read count versus\
  \ percent identity.\nidbins=100          Number idhist bins.  Set to 'auto' to use\
  \ read length.\nvarfile=<file>      Ignore substitution errors listed in this file\
  \ when \n                    calculating error rates.  Can be generated with\n \
  \                   CallVariants.\nvcf=<file>          Ignore substitution errors\
  \ listed in this VCF file \n                    when calculating error rates.\n\
  ignorevcfindels=t   Also ignore indels listed in the VCF.\n\nProcessing parameters:\n\
  k=27                Kmer length used for finding contaminants.  Contaminants \n\
  \                    shorter than k will not be found.  k must be at least 1.\n\
  rcomp=t             Look for reverse-complements of kmers in addition to \n    \
  \                forward kmers.\nmaskmiddle=t        (mm) Treat the middle base\
  \ of a kmer as a wildcard, to \n                    increase sensitivity in the\
  \ presence of errors.\nminkmerhits=1       (mkh) Reads need at least this many matching\
  \ kmers \n                    to be considered as matching the reference.\nminkmerfraction=0.0\
  \ (mkf) A reads needs at least this fraction of its total\n                    kmers\
  \ to hit a ref, in order to be considered a match.\n                    If this\
  \ and minkmerhits are set, the greater is used.\nmincovfraction=0.0  (mcf) A reads\
  \ needs at least this fraction of its total\n                    bases to be covered\
  \ by ref kmers to be considered a match.\n                    If specified, mcf\
  \ overrides mkh and mkf.\nhammingdistance=0   (hdist) Maximum Hamming distance for\
  \ ref kmers (subs only).\n                    Memory use is proportional to (3*K)^hdist.\n\
  qhdist=0            Hamming distance for query kmers; impacts speed, not memory.\n\
  editdistance=0      (edist) Maximum edit distance from ref kmers (subs \n      \
  \              and indels).  Memory use is proportional to (8*K)^edist.\nhammingdistance2=0\
  \  (hdist2) Sets hdist for short kmers, when using mink.\nqhdist2=0           Sets\
  \ qhdist for short kmers, when using mink.\neditdistance2=0     (edist2) Sets edist\
  \ for short kmers, when using mink.\nforbidn=f           (fn) Forbids matching of\
  \ read kmers containing N.\n                    By default, these will match a reference\
  \ 'A' if \n                    hdist>0 or edist>0, to increase sensitivity.\nremoveifeitherbad=t\
  \ (rieb) Paired reads get sent to 'outmatch' if either is \n                   \
  \ match (or either is trimmed shorter than minlen).  \n                    Set to\
  \ false to require both.\ntrimfailures=f      Instead of discarding failed reads,\
  \ trim them to 1bp.\n                    This makes the statistics a bit odd.\n\
  findbestmatch=f     (fbm) If multiple matches, associate read with sequence \n \
  \                   sharing most kmers.  Reduces speed.\nskipr1=f            Don't\
  \ do kmer-based operations on read 1.\nskipr2=f            Don't do kmer-based operations\
  \ on read 2.\necco=f              For overlapping paired reads only.  Performs error-\n\
  \                    correction with BBMerge prior to kmer operations.\nrecalibrate=f\
  \       (recal) Recalibrate quality scores.  Requires calibration\n            \
  \        matrices generated by CalcTrueQuality.\nsam=<file,file>     If recalibration\
  \ is desired, and matrices have not already\n                    been generated,\
  \ BBDuk will create them from the sam file.\namino=f             Run in amino acid\
  \ mode.  Some features have not been\n                    tested, but kmer-matching\
  \ works fine.  Maximum k is 12.\n\nSpeed and Memory parameters:\nthreads=auto  \
  \      (t) Set number of threads to use; default is number of \n               \
  \     logical processors.\nprealloc=f          Preallocate memory in table.  Allows\
  \ faster table loading \n                    and more efficient memory usage, for\
  \ a large reference.\nmonitor=f           Kill this process if it crashes.  monitor=600,0.01\
  \ would \n                    kill after 600 seconds under 1% usage.\nminrskip=1\
  \          (mns) Force minimal skip interval when indexing reference \n        \
  \            kmers.  1 means use all, 2 means use every other kmer, etc.\nmaxrskip=1\
  \          (mxs) Restrict maximal skip interval when indexing \n               \
  \     reference kmers. Normally all are used for scaffolds<100kb, \n           \
  \         but with longer scaffolds, up to maxrskip-1 are skipped.\nrskip=     \
  \         Set both minrskip and maxrskip to the same value.\n                  \
  \  If not set, rskip will vary based on sequence length.\nqskip=1             Skip\
  \ query kmers to increase speed.  1 means use all.\nspeed=0             Ignore this\
  \ fraction of kmer space (0-15 out of 16) in both\n                    reads and\
  \ reference.  Increases speed and reduces memory.\nNote: Do not use more than one\
  \ of 'speed', 'qskip', and 'rskip'.\n\nTrimming/Filtering/Masking parameters:\n\
  Note - if ktrim, kmask, and ksplit are unset, the default behavior is kfilter.\n\
  All kmer processing modes are mutually exclusive.\nReads only get sent to 'outm'\
  \ purely based on kmer matches in kfilter mode.\n\nktrim=f             Trim reads\
  \ to remove bases matching reference kmers.\n                    Values: \n    \
  \                   f (don't trim), \n                       r (trim to the right),\
  \ \n                       l (trim to the left)\nkmask=              Replace bases\
  \ matching ref kmers with another symbol.\n                    Allows any non-whitespace\
  \ character, and processes short\n                    kmers on both ends if mink\
  \ is set.  'kmask=lc' will\n                    convert masked bases to lowercase.\n\
  maskfullycovered=f  (mfc) Only mask bases that are fully covered by kmers.\nksplit=f\
  \            For single-ended reads only.  Reads will be split into\n          \
  \          pairs around the kmer.  If the kmer is at the end of the\n          \
  \          read, it will be trimmed instead.  Singletons will go to\n          \
  \          out, and pairs will go to outm.  Do not use ksplit with\n           \
  \         other operations such as quality-trimming or filtering.\nmink=0      \
  \        Look for shorter kmers at read tips down to this length, \n           \
  \         when k-trimming or masking.  0 means disabled.  Enabling\n           \
  \         this will disable maskmiddle.\nqtrim=f             Trim read ends to remove\
  \ bases with quality below trimq.\n                    Performed AFTER looking for\
  \ kmers.  Values: \n                       rl (trim both ends), \n             \
  \          f (neither end), \n                       r (right end only), \n    \
  \                   l (left end only),\n                       w (sliding window).\n\
  trimq=6             Regions with average quality BELOW this will be trimmed,\n \
  \                   if qtrim is set to something other than f.  Can be a \n    \
  \                floating-point number like 7.3.\ntrimclip=f          Trim soft-clipped\
  \ bases from sam files.\nminlength=10        (ml) Reads shorter than this after\
  \ trimming will be \n                    discarded.  Pairs will be discarded if\
  \ both are shorter.\nmlf=0               (minlengthfraction) Reads shorter than\
  \ this fraction of \n                    original length after trimming will be\
  \ discarded.\nmaxlength=          Reads longer than this after trimming will be\
  \ discarded.\nminavgquality=0     (maq) Reads with average quality (after trimming)\
  \ below \n                    this will be discarded.\nmaqb=0              If positive,\
  \ calculate maq from this many initial bases.\nminbasequality=0    (mbq) Reads with\
  \ any base below this quality (after \n                    trimming) will be discarded.\n\
  maxns=-1            If non-negative, reads with more Ns than this \n           \
  \         (after trimming) will be discarded.\nmcb=0               (minconsecutivebases)\
  \ Discard reads without at least \n                    this many consecutive called\
  \ bases.\nottm=f              (outputtrimmedtomatch) Output reads trimmed to shorter\
  \ \n                    than minlength to outm rather than discarding.\ntp=0   \
  \             (trimpad) Trim this much extra around matching kmers.\ntbo=f     \
  \          (trimbyoverlap) Trim adapters based on where paired \n              \
  \      reads overlap.\nstrictoverlap=t     Adjust sensitivity for trimbyoverlap\
  \ mode.\nminoverlap=14       Require this many bases of overlap for detection.\n\
  mininsert=40        Require insert size of at least this for overlap.\n        \
  \            Should be reduced to 16 for small RNA sequencing.\ntpe=f          \
  \     (trimpairsevenly) When kmer right-trimming, trim both \n                 \
  \   reads to the minimum length of either.\nforcetrimleft=0     (ftl) If positive,\
  \ trim bases to the left of this position\n                    (exclusive, 0-based).\n\
  forcetrimright=0    (ftr) If positive, trim bases to the right of this position\n\
  \                    (exclusive, 0-based).\nforcetrimright2=0   (ftr2) If positive,\
  \ trim this many bases on the right end.\nforcetrimmod=0      (ftm) If positive,\
  \ right-trim length to be equal to zero,\n                    modulo this number.\n\
  restrictleft=0      If positive, only look for kmer matches in the \n          \
  \          leftmost X bases.\nrestrictright=0     If positive, only look for kmer\
  \ matches in the \n                    rightmost X bases.\nmingc=0             Discard\
  \ reads with GC content below this.\nmaxgc=1             Discard reads with GC content\
  \ above this.\ngcpairs=t           Use average GC of paired reads.\n           \
  \         Also affects gchist.\ntossjunk=f          Discard reads with invalid characters\
  \ as bases.\nswift=f             Trim Swift sequences: Trailing C/T/N R1, leading\
  \ G/A/N R2.\n\nHeader-parsing parameters - these require Illumina headers:\nchastityfilter=f\
  \    (cf) Discard reads with id containing ' 1:Y:' or ' 2:Y:'.\nbarcodefilter=f\
  \     Remove reads with unexpected barcodes if barcodes is set,\n              \
  \      or barcodes containing 'N' otherwise.  A barcode must be\n              \
  \      the last part of the read header.  Values:\n                       t:   \
  \  Remove reads with bad barcodes.\n                       f:     Ignore barcodes.\n\
  \                       crash: Crash upon encountering bad barcodes.\nbarcodes=\
  \           Comma-delimited list of barcodes or files of barcodes.\nxmin=-1    \
  \         If positive, discard reads with a lesser X coordinate.\nymin=-1      \
  \       If positive, discard reads with a lesser Y coordinate.\nxmax=-1        \
  \     If positive, discard reads with a greater X coordinate.\nymax=-1         \
  \    If positive, discard reads with a greater Y coordinate.\n\nPolymer trimming:\n\
  trimpolya=0         If greater than 0, trim poly-A or poly-T tails of\n        \
  \            at least this length on either end of reads.\ntrimpolygleft=0     If\
  \ greater than 0, trim poly-G prefixes of at least this\n                    length\
  \ on the left end of reads.  Does not trim poly-C.\ntrimpolygright=0    If greater\
  \ than 0, trim poly-G tails of at least this \n                    length on the\
  \ right end of reads.  Does not trim poly-C.\ntrimpolyg=0         This sets both\
  \ left and right at once.\nfilterpolyg=0       If greater than 0, remove reads with\
  \ a poly-G prefix of\n                    at least this length (on the left).\n\
  Note: there are also equivalent poly-C flags.\n\nPolymer tracking:\npratio=base,base\
  \    'pratio=G,C' will print the ratio of G to C polymers.\nplen=20            \
  \ Length of homopolymers to count.\n\nEntropy/Complexity parameters:\nentropy=-1\
  \          Set between 0 and 1 to filter reads with entropy below\n            \
  \        that value.  Higher is more stringent.\nentropywindow=50    Calculate entropy\
  \ using a sliding window of this length.\nentropyk=5          Calculate entropy\
  \ using kmers of this length.\nminbasefrequency=0  Discard reads with a minimum\
  \ base frequency below this.\nentropytrim=f       Values:\n                    \
  \   f:  (false) Do not entropy-trim.\n                       r:  (right) Trim low\
  \ entropy on the right end only.\n                       l:  (left) Trim low entropy\
  \ on the left end only.\n                       rl: (both) Trim low entropy on both\
  \ ends.\nentropymask=f       Values:\n                       f:  (filter) Discard\
  \ low-entropy sequences.\n                       t:  (true) Mask low-entropy parts\
  \ of sequences with N.\n                       lc: Change low-entropy parts of sequences\
  \ to lowercase.\nentropymark=f       Mark each base with its entropy value.  This\
  \ is on a scale\n                    of 0-41 and is reported as quality scores,\
  \ so the output\n                    should be fastq or fasta+qual.\nNOTE: If set,\
  \ entropytrim overrides entropymask.\n\nCardinality estimation:\ncardinality=f \
  \      (loglog) Count unique kmers using the LogLog algorithm.\ncardinalityout=f\
  \    (loglogout) Count unique kmers in output reads.\nloglogk=31          Use this\
  \ kmer length for counting.\nloglogbuckets=2048  Use this many buckets for counting.\n\
  khist=<file>        Kmer frequency histogram; plots number of kmers versus\n   \
  \                 kmer depth.  This is approximate.\nkhistout=<file>     Kmer frequency\
  \ histogram for output reads.\n\nJava Parameters:\n\n-Xmx                This will\
  \ set Java's memory usage, overriding autodetection.\n                    -Xmx20g\
  \ will \n                    specify 20 gigs of RAM, and -Xmx200m will specify 200\
  \ megs.  \n                    The max is typically 85% of physical memory.\n-eoom\
  \               This flag will cause the process to exit if an \n              \
  \      out-of-memory exception occurs.  Requires Java 8u92+.\n-da              \
  \   Disable assertions.\n\nPlease contact Brian Bushnell at bbushnell@lbl.gov if\
  \ you encounter any problems.\n\n"
generated_using:
- --help
