!Command
command:
- stats.sh
positional:
- !Positional
  description: ''
  position: 0
  name: in
  optional: false
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified March 3, 2020\n\nDescription:\
  \  Generates basic assembly statistics such as scaffold count, \nN50, L50, GC content,\
  \ gap percent, etc.  For multiple files, please use\nstatswrapper.sh.  Works with\
  \ fasta and fastq only (gzipped is fine).\nPlease read bbmap/docs/guides/StatsGuide.txt\
  \ for more information.\n\nUsage:        stats.sh in=<file>\n\nParameters:\nin=file\
  \         Specify the input fasta file, or stdin.\nout=stdout      Destination of\
  \ primary output; may be directed to a file.\ngc=file         Writes ACGTN content\
  \ per scaffold to a file.\ngchist=file     Filename to output scaffold gc content\
  \ histogram.\nshist=file      Filename to output cumulative scaffold length histogram.\n\
  gcbins=200      Number of bins for gc histogram.\nn=10            Number of contiguous\
  \ Ns to signify a break between contigs.\nk=13            Estimate memory usage\
  \ of BBMap with this kmer length.\nminscaf=0       Ignore scaffolds shorter than\
  \ this.\nphs=f           (printheaderstats) Set to true to print total size of headers.\n\
  n90=t           (printn90) Print the N/L90 metrics.\nextended=f      Print additional\
  \ metrics such as L90, logsum, and score.\npdl=f           (printduplicatelines)\
  \ Set to true to print lines in the \n                scaffold size table where\
  \ the counts did not change.\nn_=t            This flag will prefix the terms 'contigs'\
  \ and 'scaffolds'\n                with 'n_' in formats 3-6.\naddname=f       Adds\
  \ a column for input file name, for formats 3-6.\n\nLogsum and Powsum:\nlogoffset=1000\
  \  Minimum length for calculating log sum.\nlogbase=2       Log base for calculating\
  \ log sum.\nlogpower=1      Raise the log to a power to increase the weight \n \
  \               of longer scaffolds for log sum.\npowsum=0.25     Use this power\
  \ of the length to increase weight\n                of longer scaffolds for power\
  \ sum.\n\nAssembly Score Metric:\nscore=f         Print assembly score.\naligned=0.0\
  \     Set the fraction of aligned reads (0-1).\nassemblyscoreminlen=2000   Minimum\
  \ length of scaffolds to include in\n                           assembly score calculation.\n\
  assemblyscoremaxlen=50000  Maximum length of scaffolds to get bonus points\n   \
  \                        for being long.\n\n\nformat=<0-7>    Format of the stats\
  \ information; default 1.\n\tformat=0 prints no assembly stats.\n\tformat=1 uses\
  \ variable units like MB and KB, and is designed for compatibility with existing\
  \ tools.\n\tformat=2 uses only whole numbers of bases, with no commas in numbers,\
  \ and is designed for machine parsing.\n\tformat=3 outputs stats in 2 rows of tab-delimited\
  \ columns: a header row and a data row.\n\tformat=4 is like 3 but with scaffold\
  \ data only.\n\tformat=5 is like 3 but with contig data only.\n\tformat=6 is like\
  \ 3 but the header starts with a #.\n\tformat=7 is like 1 but only prints contig\
  \ info.\n\tformat=8 is like 3 but in JSON.  You can also just use the 'json' flag.\n\
  \ngcformat=<0-5>  Select GC output format; default 1.\n\tgcformat=0:\t(no base content\
  \ info printed)\n\tgcformat=1:\tname\tlength\tA\tC\tG\tT\tN\tGC\n\tgcformat=2:\t\
  name\tGC\n\tgcformat=4:\tname\tlength\tGC\n\tgcformat=5:\tname\tlength\tGC\tlogsum\t\
  powsum\n\tNote that in gcformat 1, A+C+G+T=1 even when N is nonzero.\n\nPlease contact\
  \ Brian Bushnell at bbushnell@lbl.gov if you encounter any problems.\n\n"
generated_using:
- --help
