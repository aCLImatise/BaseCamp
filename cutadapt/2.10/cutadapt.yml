!Command
positional:
- !Positional
  description: ''
  position: 0
  name: input.fastq
  optional: false
named:
- !Flag
  description: "[{trace}]     Print debug log. 'trace' prints also DP matrices"
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Number of CPU cores to use. Use 0 to auto-detect. Default: 1'
  synonyms:
  - -j
  - --cores
  args: !SimpleFlagArg
    name: CORES
  optional: true
- !Flag
  description: "Sequence of an adapter ligated to the 3' end (paired data: of the\
    \ first read). The adapter and subsequent bases are trimmed. If a '$' character\
    \ is appended ('anchoring'), the adapter is only found if it is a suffix of the\
    \ read."
  synonyms:
  - -a
  - --adapter
  args: !SimpleFlagArg
    name: ADAPTER
  optional: true
- !Flag
  description: "Sequence of an adapter ligated to the 5' end (paired data: of the\
    \ first read). The adapter and any preceding bases are trimmed. Partial matches\
    \ at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the\
    \ adapter is only found if it is a prefix of the read."
  synonyms:
  - -g
  - --front
  args: !SimpleFlagArg
    name: ADAPTER
  optional: true
- !Flag
  description: "Sequence of an adapter that may be ligated to the 5' or 3' end (paired\
    \ data: of the first read). Both types of matches as described under -a und -g\
    \ are allowed. If the first base of the read is part of the match, the behavior\
    \ is as with -g, otherwise as with -a. This option is mostly for rescuing failed\
    \ library preparations - do not use if you know which end your adapter was ligated\
    \ to!"
  synonyms:
  - -b
  - --anywhere
  args: !SimpleFlagArg
    name: ADAPTER
  optional: true
- !Flag
  description: 'Maximum allowed error rate as value between 0 and 1 (no. of errors
    divided by length of matching region). Default: 0.1 (=10%)'
  synonyms:
  - -e
  - --error-rate
  args: !SimpleFlagArg
    name: RATE
  optional: true
- !Flag
  description: 'Allow only mismatches in alignments. Default: allow both mismatches
    and indels'
  synonyms:
  - --no-indels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Remove up to COUNT adapters from each read. Default: 1'
  synonyms:
  - -n
  - --times
  args: !SimpleFlagArg
    name: COUNT
  optional: true
- !Flag
  description: 'Require MINLENGTH overlap between read and adapter for an adapter
    to be found. Default: 3'
  synonyms:
  - -O
  - --overlap
  args: !SimpleFlagArg
    name: MINLENGTH
  optional: true
- !Flag
  description: 'Interpret IUPAC wildcards in reads. Default: False'
  synonyms:
  - --match-read-wildcards
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not interpret IUPAC wildcards in adapters.
  synonyms:
  - -N
  - --no-match-adapter-wildcards
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "What to do with found adapters. mask: replace with 'N' characters;\
    \ lowercase: convert to lowercase; none: leave unchanged (useful with --discard-untrimmed).\
    \ Default: trim"
  synonyms:
  - --action
  args: !ChoiceFlagArg
    choices: !!set
      ? lowercase
      ? mask
      ? none
      ? trim
  optional: true
- !Flag
  description: 'Check both the read and its reverse complement for adapter matches.
    If match is on reverse-complemented version, output that one. Default: check only
    read'
  synonyms:
  - --rc
  - --revcomp
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Remove bases from each read (first read only if paired). If LENGTH
    is positive, remove bases from the beginning. If LENGTH is negative, remove bases
    from the end. Can be used twice if LENGTHs have different signs. This is applied
    *before* adapter trimming.
  synonyms:
  - -u
  - --cut
  args: !SimpleFlagArg
    name: LENGTH
  optional: true
- !Flag
  description: "'CUTOFF NextSeq-specific quality trimming (each read). Trims also\
    \ dark cycles appearing as high-quality G bases."
  synonyms:
  - --nextseq-trim
  args: !SimpleFlagArg
    name: '3'
  optional: true
- !Flag
  description: "[5'CUTOFF,]3'CUTOFF, --quality-cutoff [5'CUTOFF,]3'CUTOFF Trim low-quality\
    \ bases from 5' and/or 3' ends of each read before adapter removal. Applied to\
    \ both reads if data is paired. If one value is given, only the 3' end is trimmed.\
    \ If two comma-separated cutoffs are given, the 5' end is trimmed with the first\
    \ cutoff, the 3' end with the second."
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Assume that quality values in FASTQ are encoded as ascii(quality +
    N). This needs to be set to 64 for some old Illumina FASTQ files. Default: 33'
  synonyms:
  - --quality-base
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Shorten reads to LENGTH. Positive values remove bases at the end while
    negative ones remove bases at the beginning. This and the following modifications
    are applied after adapter trimming.
  synonyms:
  - --length
  - -l
  args: !SimpleFlagArg
    name: LENGTH
  optional: true
- !Flag
  description: Trim N's on ends of reads.
  synonyms:
  - --trim-n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Search for TAG followed by a decimal number in the description field
    of the read. Replace the decimal number with the correct length of the trimmed
    read. For example, use --length-tag 'length=' to correct fields like 'length=123'.
  synonyms:
  - --length-tag
  args: !SimpleFlagArg
    name: TAG
  optional: true
- !Flag
  description: Remove this suffix from read names if present. Can be given multiple
    times.
  synonyms:
  - --strip-suffix
  args: !SimpleFlagArg
    name: STRIP_SUFFIX
  optional: true
- !Flag
  description: Add this prefix to read names. Use {name} to insert the name of the
    matching adapter.
  synonyms:
  - -x
  - --prefix
  args: !SimpleFlagArg
    name: PREFIX
  optional: true
- !Flag
  description: Add this suffix to read names; can also include {name}
  synonyms:
  - -y
  - --suffix
  args: !SimpleFlagArg
    name: SUFFIX
  optional: true
- !Flag
  description: Change negative quality values to zero.
  synonyms:
  - --zero-cap
  - -z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[:LEN2], --minimum-length LEN[:LEN2] Discard reads shorter than LEN.
    Default: 0'
  synonyms:
  - -m
  args: !SimpleFlagArg
    name: LEN
  optional: true
- !Flag
  description: '[:LEN2], --maximum-length LEN[:LEN2] Discard reads longer than LEN.
    Default: no limit'
  synonyms:
  - -M
  args: !SimpleFlagArg
    name: LEN
  optional: true
- !Flag
  description: Discard reads with more than COUNT 'N' bases. If COUNT is a number
    between 0 and 1, it is interpreted as a fraction of the read length.
  synonyms:
  - --max-n
  args: !SimpleFlagArg
    name: COUNT
  optional: true
- !Flag
  description: Discard reads whose expected number of errors (computed from quality
    values) exceeds ERRORS.
  synonyms:
  - --max-expected-errors
  - --max-ee
  args: !SimpleFlagArg
    name: ERRORS
  optional: true
- !Flag
  description: Discard reads that contain an adapter. Use also -O to avoid discarding
    too many randomly matching reads.
  synonyms:
  - --discard-trimmed
  - --discard
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Discard reads that do not contain an adapter.
  synonyms:
  - --discard-untrimmed
  - --trimmed-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Discard reads that did not pass CASAVA filtering (header has :Y:).
  synonyms:
  - --discard-casava
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print only error messages.
  synonyms:
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Which type of report to print: 'full' or 'minimal'. Default: full"
  synonyms:
  - --report
  args: !ChoiceFlagArg
    choices: !!set
      ? full
      ? minimal
  optional: true
- !Flag
  description: "Write trimmed reads to FILE. FASTQ or FASTA format is chosen depending\
    \ on input. Summary report is sent to standard output. Use '{name}' for demultiplexing\
    \ (see docs). Default: write to standard output"
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Output FASTA to standard output even on FASTQ input.
  synonyms:
  - --fasta
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use compression level 1 for gzipped output files (faster, but uses
    more space)
  synonyms:
  - -Z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write information about each read and its adapter matches into FILE.
    See the documentation for the file format.
  synonyms:
  - --info-file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: When the adapter matches in the middle of a read, write the rest (after
    the adapter) to FILE.
  synonyms:
  - -r
  - --rest-file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: When the adapter has N wildcard bases, write adapter bases matching
    wildcard positions to FILE. (Inaccurate with indels.)
  synonyms:
  - --wildcard-file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: 'Write reads that are too short (according to length specified by -m)
    to FILE. Default: discard reads'
  synonyms:
  - --too-short-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: 'Write reads that are too long (according to length specified by -M)
    to FILE. Default: discard reads'
  synonyms:
  - --too-long-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: 'Write reads that do not contain any adapter to FILE. Default: output
    to same file as trimmed reads'
  synonyms:
  - --untrimmed-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: 3' adapter to be removed from second read in a pair.
  synonyms:
  - -A
  args: !SimpleFlagArg
    name: ADAPTER
  optional: true
- !Flag
  description: 5' adapter to be removed from second read in a pair.
  synonyms:
  - -G
  args: !SimpleFlagArg
    name: ADAPTER
  optional: true
- !Flag
  description: 5'/3 adapter to be removed from second read in a pair.
  synonyms:
  - -B
  args: !SimpleFlagArg
    name: ADAPTER
  optional: true
- !Flag
  description: Remove LENGTH bases from second read in a pair.
  synonyms:
  - -U
  args: !SimpleFlagArg
    name: LENGTH
  optional: true
- !Flag
  description: Write second read in a pair to FILE.
  synonyms:
  - -p
  - --paired-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Treat adapters given with -a/-A etc. as pairs. Either both or none
    are removed from each read pair.
  synonyms:
  - --pair-adapters
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '(any|both|first) Which of the reads in a paired-end read have to match
    the filtering criterion in order for the pair to be filtered. Default: any'
  synonyms:
  - --pair-filter
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Read and/or write interleaved paired-end reads.
  synonyms:
  - --interleaved
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Write second read in a pair to this FILE when no adapter was found.
    Use with --untrimmed-output. Default: output to same file as trimmed reads'
  synonyms:
  - --untrimmed-paired-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Write second read in a pair to this file if pair is too short. Use
    also --too-short-output.
  synonyms:
  - --too-short-paired-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Write second read in a pair to this file if pair is too long. Use also
    --too-long-output.
  synonyms:
  - --too-long-paired-output
  args: !SimpleFlagArg
    name: FILE
  optional: true
command:
- cutadapt
parent:
subcommands: []
help_flag: !Flag
  description: Show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "cutadapt version 2.10\n\nCopyright (C) 2010-2020 Marcel Martin <marcel.martin@scilifelab.se>\n\
  \ncutadapt removes adapter sequences from high-throughput sequencing reads.\n\n\
  Usage:\n    cutadapt -a ADAPTER [options] [-o output.fastq] input.fastq\n\nFor paired-end\
  \ reads:\n    cutadapt -a ADAPT1 -A ADAPT2 [options] -o out1.fastq -p out2.fastq\
  \ in1.fastq in2.fastq\n\nReplace \"ADAPTER\" with the actual sequence of your 3'\
  \ adapter. IUPAC wildcard\ncharacters are supported. All reads from input.fastq\
  \ will be written to\noutput.fastq with the adapter sequence removed. Adapter matching\
  \ is\nerror-tolerant. Multiple adapter sequences can be given (use further -a\n\
  options), but only the best-matching adapter will be removed.\n\nInput may also\
  \ be in FASTA format. Compressed input and output is supported and\nauto-detected\
  \ from the file name (.gz, .xz, .bz2). Use the file name '-' for\nstandard input/output.\
  \ Without the -o option, output is sent to standard output.\n\nCitation:\n\nMarcel\
  \ Martin. Cutadapt removes adapter sequences from high-throughput\nsequencing reads.\
  \ EMBnet.Journal, 17(1):10-12, May 2011.\nhttp://dx.doi.org/10.14806/ej.17.1.200\n\
  \nRun \"cutadapt --help\" to see all command-line options.\nSee https://cutadapt.readthedocs.io/\
  \ for full documentation.\n\nOptions:\n  -h, --help            Show this help message\
  \ and exit\n  --version             Show version number and exit\n  --debug [{trace}]\
  \     Print debug log. 'trace' prints also DP matrices\n  -j CORES, --cores CORES\n\
  \                        Number of CPU cores to use. Use 0 to auto-detect.\n   \
  \                     Default: 1\n\nFinding adapters:\n  Parameters -a, -g, -b specify\
  \ adapters to be removed from each read (or\n  from the first read in a pair if\
  \ data is paired). If specified multiple\n  times, only the best matching adapter\
  \ is trimmed (but see the --times\n  option). When the special notation 'file:FILE'\
  \ is used, adapter sequences\n  are read from the given FASTA file.\n\n  -a ADAPTER,\
  \ --adapter ADAPTER\n                        Sequence of an adapter ligated to the\
  \ 3' end (paired\n                        data: of the first read). The adapter\
  \ and subsequent\n                        bases are trimmed. If a '$' character\
  \ is appended\n                        ('anchoring'), the adapter is only found\
  \ if it is a\n                        suffix of the read.\n  -g ADAPTER, --front\
  \ ADAPTER\n                        Sequence of an adapter ligated to the 5' end\
  \ (paired\n                        data: of the first read). The adapter and any\n\
  \                        preceding bases are trimmed. Partial matches at the 5'\n\
  \                        end are allowed. If a '^' character is prepended\n    \
  \                    ('anchoring'), the adapter is only found if it is a\n     \
  \                   prefix of the read.\n  -b ADAPTER, --anywhere ADAPTER\n    \
  \                    Sequence of an adapter that may be ligated to the 5'\n    \
  \                    or 3' end (paired data: of the first read). Both types\n  \
  \                      of matches as described under -a und -g are allowed.\n  \
  \                      If the first base of the read is part of the match,\n   \
  \                     the behavior is as with -g, otherwise as with -a. This\n \
  \                       option is mostly for rescuing failed library\n         \
  \               preparations - do not use if you know which end your\n         \
  \               adapter was ligated to!\n  -e RATE, --error-rate RATE\n        \
  \                Maximum allowed error rate as value between 0 and 1\n         \
  \               (no. of errors divided by length of matching region).\n        \
  \                Default: 0.1 (=10%)\n  --no-indels           Allow only mismatches\
  \ in alignments. Default: allow\n                        both mismatches and indels\n\
  \  -n COUNT, --times COUNT\n                        Remove up to COUNT adapters\
  \ from each read. Default: 1\n  -O MINLENGTH, --overlap MINLENGTH\n            \
  \            Require MINLENGTH overlap between read and adapter for\n          \
  \              an adapter to be found. Default: 3\n  --match-read-wildcards\n  \
  \                      Interpret IUPAC wildcards in reads. Default: False\n  -N,\
  \ --no-match-adapter-wildcards\n                        Do not interpret IUPAC wildcards\
  \ in adapters.\n  --action {trim,mask,lowercase,none}\n                        What\
  \ to do with found adapters. mask: replace with 'N'\n                        characters;\
  \ lowercase: convert to lowercase; none:\n                        leave unchanged\
  \ (useful with --discard-untrimmed).\n                        Default: trim\n  --rc,\
  \ --revcomp       Check both the read and its reverse complement for\n         \
  \               adapter matches. If match is on reverse-complemented\n         \
  \               version, output that one. Default: check only read\n\nAdditional\
  \ read modifications:\n  -u LENGTH, --cut LENGTH\n                        Remove\
  \ bases from each read (first read only if\n                        paired). If\
  \ LENGTH is positive, remove bases from the\n                        beginning.\
  \ If LENGTH is negative, remove bases from\n                        the end. Can\
  \ be used twice if LENGTHs have different\n                        signs. This is\
  \ applied *before* adapter trimming.\n  --nextseq-trim 3'CUTOFF\n              \
  \          NextSeq-specific quality trimming (each read). Trims\n              \
  \          also dark cycles appearing as high-quality G bases.\n  -q [5'CUTOFF,]3'CUTOFF,\
  \ --quality-cutoff [5'CUTOFF,]3'CUTOFF\n                        Trim low-quality\
  \ bases from 5' and/or 3' ends of each\n                        read before adapter\
  \ removal. Applied to both reads if\n                        data is paired. If\
  \ one value is given, only the 3' end\n                        is trimmed. If two\
  \ comma-separated cutoffs are given,\n                        the 5' end is trimmed\
  \ with the first cutoff, the 3'\n                        end with the second.\n\
  \  --quality-base N      Assume that quality values in FASTQ are encoded as\n  \
  \                      ascii(quality + N). This needs to be set to 64 for\n    \
  \                    some old Illumina FASTQ files. Default: 33\n  --length LENGTH,\
  \ -l LENGTH\n                        Shorten reads to LENGTH. Positive values remove\
  \ bases\n                        at the end while negative ones remove bases at\
  \ the\n                        beginning. This and the following modifications are\n\
  \                        applied after adapter trimming.\n  --trim-n           \
  \   Trim N's on ends of reads.\n  --length-tag TAG      Search for TAG followed\
  \ by a decimal number in the\n                        description field of the read.\
  \ Replace the decimal\n                        number with the correct length of\
  \ the trimmed read.\n                        For example, use --length-tag 'length='\
  \ to correct\n                        fields like 'length=123'.\n  --strip-suffix\
  \ STRIP_SUFFIX\n                        Remove this suffix from read names if present.\
  \ Can be\n                        given multiple times.\n  -x PREFIX, --prefix PREFIX\n\
  \                        Add this prefix to read names. Use {name} to insert\n \
  \                       the name of the matching adapter.\n  -y SUFFIX, --suffix\
  \ SUFFIX\n                        Add this suffix to read names; can also include\
  \ {name}\n  --zero-cap, -z        Change negative quality values to zero.\n\nFiltering\
  \ of processed reads:\n  Filters are applied after above read modifications. Paired-end\
  \ reads are\n  always discarded pairwise (see also --pair-filter).\n\n  -m LEN[:LEN2],\
  \ --minimum-length LEN[:LEN2]\n                        Discard reads shorter than\
  \ LEN. Default: 0\n  -M LEN[:LEN2], --maximum-length LEN[:LEN2]\n              \
  \          Discard reads longer than LEN. Default: no limit\n  --max-n COUNT   \
  \      Discard reads with more than COUNT 'N' bases. If COUNT\n                \
  \        is a number between 0 and 1, it is interpreted as a\n                 \
  \       fraction of the read length.\n  --max-expected-errors ERRORS, --max-ee ERRORS\n\
  \                        Discard reads whose expected number of errors\n       \
  \                 (computed from quality values) exceeds ERRORS.\n  --discard-trimmed,\
  \ --discard\n                        Discard reads that contain an adapter. Use\
  \ also -O to\n                        avoid discarding too many randomly matching\
  \ reads.\n  --discard-untrimmed, --trimmed-only\n                        Discard\
  \ reads that do not contain an adapter.\n  --discard-casava      Discard reads that\
  \ did not pass CASAVA filtering\n                        (header has :Y:).\n\nOutput:\n\
  \  --quiet               Print only error messages.\n  --report {full,minimal}\n\
  \                        Which type of report to print: 'full' or 'minimal'.\n \
  \                       Default: full\n  -o FILE, --output FILE\n              \
  \          Write trimmed reads to FILE. FASTQ or FASTA format is\n             \
  \           chosen depending on input. Summary report is sent to\n             \
  \           standard output. Use '{name}' for demultiplexing (see\n            \
  \            docs). Default: write to standard output\n  --fasta               Output\
  \ FASTA to standard output even on FASTQ input.\n  -Z                    Use compression\
  \ level 1 for gzipped output files\n                        (faster, but uses more\
  \ space)\n  --info-file FILE      Write information about each read and its adapter\n\
  \                        matches into FILE. See the documentation for the file\n\
  \                        format.\n  -r FILE, --rest-file FILE\n                \
  \        When the adapter matches in the middle of a read,\n                   \
  \     write the rest (after the adapter) to FILE.\n  --wildcard-file FILE  When\
  \ the adapter has N wildcard bases, write adapter\n                        bases\
  \ matching wildcard positions to FILE. (Inaccurate\n                        with\
  \ indels.)\n  --too-short-output FILE\n                        Write reads that\
  \ are too short (according to length\n                        specified by -m) to\
  \ FILE. Default: discard reads\n  --too-long-output FILE\n                     \
  \   Write reads that are too long (according to length\n                       \
  \ specified by -M) to FILE. Default: discard reads\n  --untrimmed-output FILE\n\
  \                        Write reads that do not contain any adapter to FILE.\n\
  \                        Default: output to same file as trimmed reads\n\nPaired-end\
  \ options:\n  The -A/-G/-B/-U options work like their -a/-b/-g/-u counterparts,\
  \ but are\n  applied to the second read in each pair.\n\n  -A ADAPTER          \
  \  3' adapter to be removed from second read in a pair.\n  -G ADAPTER          \
  \  5' adapter to be removed from second read in a pair.\n  -B ADAPTER          \
  \  5'/3 adapter to be removed from second read in a pair.\n  -U LENGTH         \
  \    Remove LENGTH bases from second read in a pair.\n  -p FILE, --paired-output\
  \ FILE\n                        Write second read in a pair to FILE.\n  --pair-adapters\
  \       Treat adapters given with -a/-A etc. as pairs. Either\n                \
  \        both or none are removed from each read pair.\n  --pair-filter (any|both|first)\n\
  \                        Which of the reads in a paired-end read have to match\n\
  \                        the filtering criterion in order for the pair to be\n \
  \                       filtered. Default: any\n  --interleaved         Read and/or\
  \ write interleaved paired-end reads.\n  --untrimmed-paired-output FILE\n      \
  \                  Write second read in a pair to this FILE when no\n          \
  \              adapter was found. Use with --untrimmed-output.\n               \
  \         Default: output to same file as trimmed reads\n  --too-short-paired-output\
  \ FILE\n                        Write second read in a pair to this file if pair\
  \ is\n                        too short. Use also --too-short-output.\n  --too-long-paired-output\
  \ FILE\n                        Write second read in a pair to this file if pair\
  \ is\n                        too long. Use also --too-long-output.\n"
generated_using:
- --help
