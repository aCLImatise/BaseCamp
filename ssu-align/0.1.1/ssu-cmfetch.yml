!Command
positional:
- !Positional
  description: ''
  position: 0
  name: cmfile
  optional: false
- !Positional
  description: ''
  position: 1
  name: key
  optional: false
named:
- !Flag
  description: ': second cmdline arg is a file of names to retrieve'
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': output CM to file <f> instead of stdout'
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: f
  optional: true
- !Flag
  description: ': output CM to file named <key>'
  synonyms:
  - -O
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': index the <cmfile>, creating <cmfile>.ssi'
  synonyms:
  - --index
  args: !EmptyFlagArg {}
  optional: true
command:
- ssu-cmfetch
parent:
subcommands: []
help_flag: !Flag
  description: ': help; show brief info on version and usage'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "# ssu-cmfetch :: retrieve CMs from a file\n# Easel s0.1.1 (Feb 2016)\n\
  # Copyright (C) 2016 HHMI Janelia Farm Research Campus\n# Freely distributed under\
  \ the BSD open source license.\n# - - - - - - - - - - - - - - - - - - - - - - -\
  \ - - - - - - - - - - - - -\nUsage: ssu-cmfetch [options] <cmfile> <key>       \
  \  (retrieves CM named <key>)\nUsage: ssu-cmfetch [options] -f <cmfile> <keyfile>\
  \  (retrieves all CMs in <keyfile>)\nUsage: ssu-cmfetch [options] --index <cmfile>\
  \       (indexes <cmfile>)\n\n where options are:\n  -h      : help; show brief\
  \ info on version and usage\n  -f      : second cmdline arg is a file of names to\
  \ retrieve\n  -o <f>  : output CM to file <f> instead of stdout\n  -O      : output\
  \ CM to file named <key>\n  --index : index the <cmfile>, creating <cmfile>.ssi\n"
generated_using:
- -h
