!Command
command:
- ssu-cmemit
positional:
- !Positional
  description: ''
  position: 0
  name: cmfile
  optional: false
- !Positional
  description: ''
  position: 1
  name: sequence output file
  optional: false
named:
- !Flag
  description: ': generate <n> sequences  [10]  (n>0)'
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: ': write generated sequences as unaligned FASTA  [default]'
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': write generated sequences as a STOCKHOLM alignment'
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': generate a single "consensus" sequence only'
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': local; emit from a locally configured model'
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': start sequence numbering at <n>  [1]  (n>0)'
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: ': set random number generator seed to <n>  [0]  (n>=0)'
  synonyms:
  - -s
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: ': show list of otherwise undocumented developer options'
  synonyms:
  - --devhelp
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': output alignment as RNA sequence data  [default]'
  synonyms:
  - --rna
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': output alignment as DNA (not RNA) sequence data'
  synonyms:
  - --dna
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': with -a, output alnment in interleaved Stockholm format'
  synonyms:
  - --ileaved
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': dump parsetrees to file <f>'
  synonyms:
  - --tfile
  args: !SimpleFlagArg
    name: f
  optional: true
- !Flag
  description: ': exponentiate CM probabilities by <x> before emitting  (x>0)'
  synonyms:
  - --exp
  args: !SimpleFlagArg
    name: x
  optional: true
- !Flag
  description: ': truncate alignment, begin at match column <n>  (n>=1)'
  synonyms:
  - --begin
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: ': truncate alignment,   end at match column <n>  (n>=1)'
  synonyms:
  - --end
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: ''
  synonyms:
  - -options
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: ': show brief help on version and usage'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "# ssu-cmemit :: generate sequences from a covariance model\n# INFERNAL\
  \ s0.1.1 (Feb 2016)\n# Copyright (C) 2016 Howard Hughes Medical Institute.\n# Freely\
  \ distributed under the BSD open source license.\n# - - - - - - - - - - - - - -\
  \ - - - - - - - - - - - - - - - - - - - - - -\nUsage: ssu-cmemit [-options] <cmfile>\
  \ <sequence output file>\n\nwhere general options are:\n  -h        : show brief\
  \ help on version and usage\n  -n <n>    : generate <n> sequences  [10]  (n>0)\n\
  \  -u        : write generated sequences as unaligned FASTA  [default]\n  -a   \
  \     : write generated sequences as a STOCKHOLM alignment\n  -c        : generate\
  \ a single \"consensus\" sequence only\n  -l        : local; emit from a locally\
  \ configured model\n  -i <n>    : start sequence numbering at <n>  [1]  (n>0)\n\
  \  -s <n>    : set random number generator seed to <n>  [0]  (n>=0)\n  --devhelp\
  \ : show list of otherwise undocumented developer options\n\nmiscellaneous output\
  \ options are:\n  --rna       : output alignment as RNA sequence data  [default]\n\
  \  --dna       : output alignment as DNA (not RNA) sequence data\n  --ileaved  \
  \ : with -a, output alnment in interleaved Stockholm format\n  --tfile <f> : dump\
  \ parsetrees to file <f>\n\nexpert options:\n  --exp <x>   : exponentiate CM probabilities\
  \ by <x> before emitting  (x>0)\n  --begin <n> : truncate alignment, begin at match\
  \ column <n>  (n>=1)\n  --end <n>   : truncate alignment,   end at match column\
  \ <n>  (n>=1)\n"
generated_using:
- -h
