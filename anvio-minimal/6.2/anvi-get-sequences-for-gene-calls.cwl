#!/usr/bin/env cwl-runner

baseCommand:
- anvi-get-sequences-for-gene-calls
class: CommandLineTool
cwlVersion: v1.0
id: anvi-get-sequences-for-gene-calls
inputs:
- doc: Anvi'o contigs database generated by 'anvi-gen- contigs'
  id: contigs_db
  inputBinding:
    prefix: --contigs-db
  type: string
- doc: Gene caller ids. Multiple of them can be declared separated by a delimiter
    (the default is a comma). In anvi-gen-variability-profile, if you declare nothing
    you will get all genes matching your other filtering criteria. In other programs,
    you may get everything, nothing, or an error. It really depends on the situation.
    Fortunately, mistakes are cheap, so it's worth a try.
  id: gene_caller_ids
  inputBinding:
    prefix: --gene-caller-ids
  type: string
- doc: The delimiter to parse multiple input terms. The default is ','.
  id: delimiter
  inputBinding:
    prefix: --delimiter
  type: string
- doc: When declared, the deflines in the resulting FASTA file will contain more information.
  id: report_extended_def_lines
  inputBinding:
    prefix: --report-extended-deflines
  type: boolean
- doc: When to wrap sequences when storing them in a FASTA file. The default is '120'.
    A value of '0' would be equivalent to 'do not wrap'.
  id: wrap
  inputBinding:
    prefix: --wrap
  type: string
- doc: If this is true, the output file will be in GFF3 format.
  id: export_gff3
  inputBinding:
    prefix: --export-gff3
  type: boolean
- doc: Store amino acid sequences instead.
  id: get_aa_sequences
  inputBinding:
    prefix: --get-aa-sequences
  type: boolean
- doc: Anvi'o genomes storage file
  id: genomes_storage
  inputBinding:
    prefix: --genomes-storage
  type: string
- doc: Genome names to 'focus'. You can use this parameter to limit the genomes included
    in your analysis. You can provide these names as a comma-separated list of names,
    or you can put them in a file, where you have a single genome name in each line,
    and provide the file path.
  id: genome_names
  inputBinding:
    prefix: --genome-names
  type: string
- doc: File path to store results.
  id: output_file
  inputBinding:
    prefix: --output-file
  type: File
