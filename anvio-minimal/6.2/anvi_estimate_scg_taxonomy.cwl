class: CommandLineTool
id: anvi_estimate_scg_taxonomy.cwl
inputs:
- id: contigs_db
  doc: Anvi'o contigs database generated by 'anvi-gen- contigs'
  type: string
  inputBinding:
    prefix: --contigs-db
- id: meta_genome_mode
  doc: Treat a given contigs database as a metagenome rather than treating it as a
    single genome.
  type: boolean
  inputBinding:
    prefix: --metagenome-mode
- id: profile_db
  doc: Anvi'o profile database
  type: string
  inputBinding:
    prefix: --profile-db
- id: collection_name
  doc: Collection name.
  type: string
  inputBinding:
    prefix: --collection-name
- id: meta_genomes
  doc: "A two-column TAB-delimited flat text file. The header line must contain these\
    \ columns: 'name', 'contigs_db_path', and 'profile_db_path'. Each line should\
    \ list a single entry, where 'name' can be any name to describe the metagenome\
    \ stored in the anvi'o contigs database. In this context, the anvi'o profiles\
    \ associated with contigs database must be SINGLE PROFILES, as in generated by\
    \ the program `anvi- profile` and not `anvi-merge`."
  type: File
  inputBinding:
    prefix: --metagenomes
- id: output_file
  doc: File path to store results.
  type: File
  inputBinding:
    prefix: --output-file
- id: output_file_prefix
  doc: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  type: File
  inputBinding:
    prefix: --output-file-prefix
- id: taxonomic_level
  doc: The taxonomic level to use whenever relevant and/or available. The default
    taxonomic level is None, but if you choose something specific, anvi'o will focus
    on that whenever possible.
  type: string
  inputBinding:
    prefix: --taxonomic-level
- id: matrix_format
  doc: If you want the reports to look like sparse matrices whenever possible, declare
    this flag. Matrices are especially good to use when you are working with internal/external
    genomes since they can show you quickly the distribution of each taxon across
    all metagenomes in programs like EXCEL. WELL TRY IT AND SEE.
  type: boolean
  inputBinding:
    prefix: --matrix-format
- id: raw_output
  doc: Just store the raw output without any processing of the primary data structure.
  type: boolean
  inputBinding:
    prefix: --raw-output
- id: num_threads
  doc: Maximum number of threads to use for multithreading whenever possible. Very
    conservatively, the default is 1. It is a good idea to not exceed the number of
    CPUs / cores on your system. Plus, please be careful with this option if you are
    running your commands on a SGE --if you are clusterizing your runs, and asking
    for multiple threads to use, you may deplete your resources very fast.
  type: string
  inputBinding:
    prefix: --num-threads
- id: scg_name_for_meta_genome_mode
  doc: When running in metagenome mode, anvi'o automatically chooses the most frequent
    single-copy core gene to estimate the taxonomic composition within a contigs database.
    If you have a different preference you can use this parameter to communicate that.
  type: string
  inputBinding:
    prefix: --scg-name-for-metagenome-mode
- id: report_scg_frequencies
  doc: Report SCG frequencies in a TAB-delimited file and quit. This is a great way
    to decide which SCG name to use in metagenome mode (we often wish to use the most
    frequent SCG to increase the detection of taxa).
  type: File
  inputBinding:
    prefix: --report-scg-frequencies
- id: just_do_it
  doc: Don't bother me with questions or warnings, just do it.
  type: boolean
  inputBinding:
    prefix: --just-do-it
- id: simplify_taxonomy_information
  doc: The taxonomy output may include a large number of names that contain clade-specific
    code for not-yet- characterized taxa. With this flag you can simplify taxon names.
    This will influence all output files and displays as the use of this flag will
    on-the-fly trim taxonomic levels with clade-specific code names.
  type: boolean
  inputBinding:
    prefix: --simplify-taxonomy-information
- id: compute_scg_coverages
  doc: When this flag is declared, anvi'o will go back to the profile database to
    learn coverage statistics of single-copy core genes for which we have taxonomy
    information.
  type: boolean
  inputBinding:
    prefix: --compute-scg-coverages
- id: update_profile_db_with_taxonomy
  doc: When anvi'o knows all both taxonomic affiliations and coverages across samples
    for single-copy core genes, it can, in theory add this information to the profile
    database. With this flag you can instruct anvi'o to do that and find information
    on taxonomy in the `layers` tab of your interactive interface.
  type: boolean
  inputBinding:
    prefix: --update-profile-db-with-taxonomy
- id: taxonomy_database
  doc: Path to the directory that contains the BLAST databases for single-copy core
    genes. You will almost never need to use this parameter unless you are trying
    something very fancy. But when you do, you can tell anvi'o where to look for database
    files through this parameter.
  type: File
  inputBinding:
    prefix: --taxonomy-database
outputs: []
cwlVersion: v1.1
baseCommand:
- anvi-estimate-scg-taxonomy
