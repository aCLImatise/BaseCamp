version 1.0

task AnviGetAaCounts {
  input {
    String? contigs_db
    File? output_file
    String? profile_db
    String? collection_name
    File? bin_ids_file
    File? contigs_of_interest
    String? gene_caller_ids
  }
  command <<<
    anvi-get-aa-counts \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_ids_file) then ("--bin-ids-file " +  '"' + bin_ids_file + '"') else ""} \
      ~{if defined(contigs_of_interest) then ("--contigs-of-interest " +  '"' + contigs_of_interest + '"') else ""} \
      ~{if defined(gene_caller_ids) then ("--gene-caller-ids " +  '"' + gene_caller_ids + '"') else ""}
  >>>
  parameter_meta {
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen- contigs'"
    output_file: "File path to store results."
    profile_db: "Anvi'o profile database"
    collection_name: "Collection name."
    bin_ids_file: "Text file for bins (each line should be a unique bin id)."
    contigs_of_interest: "A file with contig names. There should be only one column in the file, and each line should correspond to a unique split name."
    gene_caller_ids: "Gene caller ids. Multiple of them can be declared separated by a delimiter (the default is a comma). In anvi-gen-variability-profile, if you declare nothing you will get all genes matching your other filtering criteria. In other programs, you may get everything, nothing, or an error. It really depends on the situation. Fortunately, mistakes are cheap, so it's worth a try."
  }
}