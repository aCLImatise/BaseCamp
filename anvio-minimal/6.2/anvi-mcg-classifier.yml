!Command
positional: []
named:
- !Flag
  description: Anvi'o profile database
  synonyms:
  - -p
  - --profile-db
  args: !SimpleFlagArg
    name: PROFILE_DB
  optional: true
- !Flag
  description: Anvi'o contigs database generated by 'anvi-gen- contigs'
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  synonyms:
  - -O
  - --output-file-prefix
  args: !SimpleFlagArg
    name: FILENAME_PREFIX
  optional: true
- !Flag
  description: Collection name.
  synonyms:
  - -C
  - --collection-name
  args: !SimpleFlagArg
    name: COLLECTION_NAME
  optional: true
- !Flag
  description: Bin name you are interested in.
  synonyms:
  - -b
  - --bin-id
  args: !SimpleFlagArg
    name: BIN_NAME
  optional: true
- !Flag
  description: Text file for bins (each line should be a unique bin id).
  synonyms:
  - -B
  - --bin-ids-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: List of samples to exclude for the analysis.
  synonyms:
  - --exclude-samples
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: List of samples to include for the analysis.
  synonyms:
  - --include-samples
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: "For those of you who wish to dig deeper, a collection of figures could\
    \ be created to allow you to get insight into how the classification was generated.\
    \ This is especially useful to identify cases in which you shouldn't trust the\
    \ classification (for example due to a large number of outliers). NOTICE: if you\
    \ ask anvi'o to generate these figures then it will significantly extend the execution\
    \ time. To learn about which figures are created and what they mean, contact your\
    \ nearest anvi'o developer, because currently it is a well-hidden secret."
  synonyms:
  - --gen-figures
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If you only wish to get statistics regarding the occurrence of bins
    in samples, then use this flag. Especially when dealing with many samples or large
    genomes, gene stats could be a long time to compute. By using this flag you could
    save a lot of computation time.
  synonyms:
  - --get-samples-stats-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Overwrite if the output files and/or directories exist.
  synonyms:
  - -W
  - --overwrite-output-destinations
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Determines the range of sample detection values that are considered
    negative, ambiguous or positive. Min of 0 and smaller than 0.5, default of 0.25.
    For exmaple for the default samples with detection below 0.5-0.25 = 0.25 will
    be considered negative (i.e. donot contain the genome), samples with detection
    between 0.25 and 0.75 would be ambiguous (and hence would not be used for the
    classification), and samples with detection above 0.75 would be considered positive
    (i.e. contain the genome).
  synonyms:
  - --alpha
  - --genome-detection-uncertainty
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: "Threshold to use for the outlier detection. The default value is '1.5'.\
    \ Absolute deviation around the median is used. To read more about the method\
    \ please refer to: 'How to Detect and Handle Outliers' by Boris Iglewicz and David\
    \ Hoaglin (doi:10.1016/j.jesp.2013.03.013)."
  synonyms:
  - --outliers-threshold
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: If you want all zero coverage positions to be treated like outliers
    then use this flag. The reason to treat zero coverage as outliers is because when
    mapping reads to a reference we could get many zero positions due to accessory
    genes. These positions then skew the average values that we compute.
  synonyms:
  - --zeros-are-outliers
  args: !EmptyFlagArg {}
  optional: true
command:
- anvi-mcg-classifier
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-mcg-classifier [-h] -p PROFILE_DB -c CONTIGS_DB\n        \
  \                   [-O FILENAME_PREFIX] [-C COLLECTION_NAME]\n                \
  \           [-b BIN_NAME] [-B FILE_PATH]\n                           [--exclude-samples\
  \ FILE] [--include-samples FILE]\n                           [--gen-figures] [--get-samples-stats-only]\
  \ [-W]\n                           [--alpha NUM] [--outliers-threshold NUM]\n  \
  \                         [--zeros-are-outliers]\n\nA program to classify genes\
  \ according to coverage across multiple metagenomes\n\noptional arguments:\n  -h,\
  \ --help            show this help message and exit\n\nESSENTIAL INPUTS:\n  You\
  \ must supply a merged profile db (along with a matching contigs db)\n\n  -p PROFILE_DB,\
  \ --profile-db PROFILE_DB\n                        Anvi'o profile database\n  -c\
  \ CONTIGS_DB, --contigs-db CONTIGS_DB\n                        Anvi'o contigs database\
  \ generated by 'anvi-gen-\n                        contigs'\n\nESSENTIAL OUTPUTS:\n\
  \  The outputs of the algorithm are: an anvio additional layers format file\n  with\
  \ the classification information for genes. An anvio samples\n  information file\
  \ with detectino information per sample. In addition, when\n  a profile database\
  \ is given then a gene-coverages, and gene-detection\n  tables would also be saved.\
  \ All files are created with the prefix that is\n  provided by the user.\n\n  -O\
  \ FILENAME_PREFIX, --output-file-prefix FILENAME_PREFIX\n                      \
  \  A prefix to be used while naming the output files (no\n                     \
  \   file type extensions please; just a prefix).\n  -C COLLECTION_NAME, --collection-name\
  \ COLLECTION_NAME\n                        Collection name.\n\nADDITIONAL STUFF:\n\
  \  Parameters to provide pre-existing additional layers, samples-information\n \
  \ files, so that the outputs would be added to these files\n\n  -b BIN_NAME, --bin-id\
  \ BIN_NAME\n                        Bin name you are interested in.\n  -B FILE_PATH,\
  \ --bin-ids-file FILE_PATH\n                        Text file for bins (each line\
  \ should be a unique bin\n                        id).\n  --exclude-samples FILE\n\
  \                        List of samples to exclude for the analysis.\n  --include-samples\
  \ FILE\n                        List of samples to include for the analysis.\n \
  \ --gen-figures         For those of you who wish to dig deeper, a collection\n\
  \                        of figures could be created to allow you to get\n     \
  \                   insight into how the classification was generated.\n       \
  \                 This is especially useful to identify cases in which\n       \
  \                 you shouldn't trust the classification (for example\n        \
  \                due to a large number of outliers). NOTICE: if you ask\n      \
  \                  anvi'o to generate these figures then it will\n             \
  \           significantly extend the execution time. To learn\n                \
  \        about which figures are created and what they mean,\n                 \
  \       contact your nearest anvi'o developer, because\n                       \
  \ currently it is a well-hidden secret.\n  --get-samples-stats-only\n          \
  \              If you only wish to get statistics regarding the\n              \
  \          occurrence of bins in samples, then use this flag.\n                \
  \        Especially when dealing with many samples or large\n                  \
  \      genomes, gene stats could be a long time to compute.\n                  \
  \      By using this flag you could save a lot of computation\n                \
  \        time.\n  -W, --overwrite-output-destinations\n                        Overwrite\
  \ if the output files and/or directories\n                        exist.\n\nPARAMETERS:\n\
  \  Parameters to determine cut-offs for the gene-classifier\n\n  --alpha NUM, --genome-detection-uncertainty\
  \ NUM\n                        Determines the range of sample detection values that\n\
  \                        are considered negative, ambiguous or positive. Min of\n\
  \                        0 and smaller than 0.5, default of 0.25. For exmaple\n\
  \                        for the default samples with detection below 0.5-0.25\n\
  \                        = 0.25 will be considered negative (i.e. donot contain\n\
  \                        the genome), samples with detection between 0.25 and\n\
  \                        0.75 would be ambiguous (and hence would not be used\n\
  \                        for the classification), and samples with detection\n \
  \                       above 0.75 would be considered positive (i.e. contain\n\
  \                        the genome).\n  --outliers-threshold NUM\n            \
  \            Threshold to use for the outlier detection. The\n                 \
  \       default value is '1.5'. Absolute deviation around the\n                \
  \        median is used. To read more about the method please\n                \
  \        refer to: 'How to Detect and Handle Outliers' by Boris\n              \
  \          Iglewicz and David Hoaglin\n                        (doi:10.1016/j.jesp.2013.03.013).\n\
  \  --zeros-are-outliers  If you want all zero coverage positions to be treated\n\
  \                        like outliers then use this flag. The reason to treat\n\
  \                        zero coverage as outliers is because when mapping\n   \
  \                     reads to a reference we could get many zero positions\n  \
  \                      due to accessory genes. These positions then skew the\n \
  \                       average values that we compute.\n"
generated_using:
- --help
