!Command
positional: []
named:
- !Flag
  description: Anvi'o contigs database generated by 'anvi-gen- contigs'
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: By default, this program accesses the structure files it needs from
    an internal anvi'o database that can be set up with anvi-setup-pdb-database. If
    a required structure is not in this database, it will instead be downloaded from
    the RCSB PDB server. This parameter exists only if a) you created a database and
    b) it exists in a custom location. In this case, please provide that path here.
    Otherwise we vibing.
  synonyms:
  - --pdb-db
  args: !SimpleFlagArg
    name: PDB_DB
  optional: true
- !Flag
  description: A file with anvi'o gene caller IDs. There should be only one column
    in the file, and each line should correspond to a unique gene caller id (without
    a column header).
  synonyms:
  - --genes-of-interest
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Gene caller ids. Multiple of them can be declared separated by a delimiter
    (the default is a comma). In anvi-gen-variability-profile, if you declare nothing
    you will get all genes matching your other filtering criteria. In other programs,
    you may get everything, nothing, or an error. It really depends on the situation.
    Fortunately, mistakes are cheap, so it's worth a try.
  synonyms:
  - --gene-caller-ids
  args: !SimpleFlagArg
    name: GENE_CALLER_IDS
  optional: true
- !Flag
  description: Output file path for the new database.
  synonyms:
  - -o
  - --output-db-path
  args: !SimpleFlagArg
    name: DB_FILE_PATH
  optional: true
- !Flag
  description: Modeling and annotating structures requires a lot of moving parts,
    each which have their own outputs. The output of this program is a structure database
    containing the pertinent results of this computation, however a lot of stuff doesn't
    make the cut. By providing a directory for this parameter you will get, in addition
    to the structure database, a directory containing the raw output for everything.
  synonyms:
  - --dump-dir
  args: !SimpleFlagArg
    name: DUMP_DIR
  optional: true
- !Flag
  description: This parameter determines the number of predicted structures that are
    solved for a given protein. The original atomic positions for each model are perturbed
    by an amount defined by --deviation, which leads to differences between each model.
    Therefore, whichever of the N models is chosen to be the "best" model is more
    likely to be accurate when --num-models is high, since more of the solution space
    is searched. It should be kept in mind that the largest determinant of a model's
    accuracy is determined by the protein templates used, so no need to go overboard
    with an excessively large --num-models. The default is 1.
  synonyms:
  - --num-models
  - -N
  args: !SimpleFlagArg
    name: NUM_MODELS
  optional: true
- !Flag
  description: Deviation (angstroms)
  synonyms:
  - --deviation
  - -d
  args: !SimpleFlagArg
    name: DEVIATION
  optional: true
- !Flag
  description: Which database do you want to search the structures of? Default is
    "pdb_95". If you have your own database it must have either the extension .bin
    or .pir. If you don't have a database or don't know what this means, don't worry,
    we will both inform you and take care of you.
  synonyms:
  - --modeller-database
  - -D
  args: !SimpleFlagArg
    name: MODELLER_DATABASE
  optional: true
- !Flag
  description: 'How should the best model be decided? The metric used could be any
    of GA341_score, DOPE_score, and molpdf. GA341 is an absolute measure, where a
    good model will have a score near 1.0, whereas anything below 0.6 can be considered
    bad. DOPE and molpdf scores are relative energy measures, where lower scores are
    better. DOPE has been generally shown to be a better distinguisher between good
    and bad models than molpdf. By default, DOPE is used. To learn more see the MODELLER
    tutorial: https://salilab.org/modeller/tutorial/basic.html.'
  synonyms:
  - --scoring-method
  - -b
  args: !SimpleFlagArg
    name: SCORING_METHOD
  optional: true
- !Flag
  description: If provided, a very fast optimization is done for each model at the
    cost of accuracy. It is recommended to use a --num-models of 1, since the optimization
    is so crude that all models will likely converge to the same solution.
  synonyms:
  - --very-fast
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If a protein in the database has a proper percent identity to the gene
    of interest that is greater than or equal to --percent-identical-cutoff, then
    it is used as a template. Otherwise it is not. Here we define proper percent identity
    as the percentage of amino acids in the gene of interest that are identical to
    an entry in the database given the sequence length of the gene of interest. For
    example, if there is 100% identity between the gene of interest and the template
    over the length of the alignment, but the alignment length is only half of the
    gene of interest sequence length, then the proper percent identical is 50%. (This
    helps us avoid the inflation of identity scores due to only partially good matches).
    The default is 30.
  synonyms:
  - --percent-identical-cutoff
  - -p
  args: !SimpleFlagArg
    name: PERCENT_IDENTICAL_CUTOFF
  optional: true
- !Flag
  description: "Generally speaking it is best to use as many templates as possible\
    \ given that they have high proper percent identity to the gene of interest. Taken\
    \ from https://s alilab.org/modeller/methenz/andras/node4.html: 'The use of several\
    \ templates generally increases the model accuracy. One strength of MODELLER is\
    \ that it can combine information from multiple template structures, in two ways.\
    \ First, multiple template structures may be aligned with different domains of\
    \ the target, with little overlap between them, in which case the modeling procedure\
    \ can construct a homology-based model of the whole target sequence. Second, the\
    \ template structures may be aligned with the same part of the target, in which\
    \ case the modeling procedure is likely to automatically build the model on the\
    \ locally best template [43,44]. In general, it is frequently beneficial to include\
    \ in the modeling process all the templates that differ substantially from each\
    \ other, if they share approximately the same overall similarity to the target\
    \ sequence.' The default is 5."
  synonyms:
  - --max-number-templates
  - -t
  args: !SimpleFlagArg
    name: MAX_NUMBER_TEMPLATES
  optional: true
- !Flag
  description: Dictionary of Secondary Structure of Proteins (DSSP) is a program that
    takes as its input a protein structure file and outputs predicted secondary structure
    (alpha helix, beta strand, etc.), measures of solvent accessibility, and hydrogen
    bonds for each residue in the protein. If for some reason you don't want this,
    provide this flag.
  synonyms:
  - --skip-DSSP
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The MODELLER program to use. For example, `mod9.19`. Anvi'o will try
    and find it if not provided
  synonyms:
  - --modeller-executable
  args: !SimpleFlagArg
    name: MODELLER_EXECUTABLE
  optional: true
- !Flag
  description: Anvi'o first tries to obtain template structures from a database (see
    --pdb-db for details). If the requested template does not exist in the database,
    its structure will be downloaded from the RCSB PDB server. However, if you don't
    have access to internet, or hate the RCSB PDB, provide this flag so that all operations
    of this program remain offline. If the template structure is not in the database,
    then no template structure for you.
  synonyms:
  - --offline-mode
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Maximum number of threads to use for multithreading whenever possible.
    Very conservatively, the default is 1. It is a good idea to not exceed the number
    of CPUs / cores on your system. Plus, please be careful with this option if you
    are running your commands on a SGE --if you are clusterizing your runs, and asking
    for multiple threads to use, you may deplete your resources very fast.
  synonyms:
  - -T
  - --num-threads
  args: !SimpleFlagArg
    name: NUM_THREADS
  optional: true
- !Flag
  description: How many items should be kept in memory before they are written do
    the disk. The default is 25 per thread. So a single-threaded job would have a
    write buffer size of 25, whereas a job with 4 threads would have a write buffer
    size of 4*25. The larger the buffer size, the less frequent the program will access
    to the disk, yet the more memory will be consumed since the processed items will
    be cleared off the memory only after they are written to the disk. The default
    buffer size will likely work for most cases. Please keep an eye on the memory
    usage output to make sure the memory use never exceeds the size of the physical
    memory. If --num-threads is 1, this parameter is ignored because the DB is written
    to after each gene
  synonyms:
  - --write-buffer-size-per-thread
  args: !SimpleFlagArg
    name: INT
  optional: true
command:
- anvi-gen-structure-database
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-gen-structure-database [-h] -c CONTIGS_DB [--pdb-db PDB_DB]\n\
  \                                   [--genes-of-interest FILE]\n               \
  \                    [--gene-caller-ids GENE_CALLER_IDS]\n                     \
  \              [-o DB_FILE_PATH] [--dump-dir DUMP_DIR]\n                       \
  \            [--num-models NUM_MODELS]\n                                   [--deviation\
  \ DEVIATION]\n                                   [--modeller-database MODELLER_DATABASE]\n\
  \                                   [--scoring-method SCORING_METHOD]\n        \
  \                           [--very-fast]\n                                   [--percent-identical-cutoff\
  \ PERCENT_IDENTICAL_CUTOFF]\n                                   [--max-number-templates\
  \ MAX_NUMBER_TEMPLATES]\n                                   [--skip-DSSP]\n    \
  \                               [--modeller-executable MODELLER_EXECUTABLE]\n  \
  \                                 [--offline-mode] [-T NUM_THREADS]\n          \
  \                         [--write-buffer-size-per-thread INT]\n\nIdentifies genes\
  \ in your contigs database that encode proteins that are\nhomologous to proteins\
  \ with solved structures. If sufficiently similar\nhomologs are identified, they\
  \ are used as structural templates to predict the\n3D structure of proteins in your\
  \ contigs database. See our tutorial:\nhttp://merenlab.org/2018/09/04/structural-biology-with-anvio/\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \nDATABASES:\n  Declaring relevant anvi'o databases. First things first.\n\n  -c\
  \ CONTIGS_DB, --contigs-db CONTIGS_DB\n                        Anvi'o contigs database\
  \ generated by 'anvi-gen-\n                        contigs'\n  --pdb-db PDB_DB \
  \      By default, this program accesses the structure files\n                 \
  \       it needs from an internal anvi'o database that can be\n                \
  \        set up with anvi-setup-pdb-database. If a required\n                  \
  \      structure is not in this database, it will instead be\n                 \
  \       downloaded from the RCSB PDB server. This parameter\n                  \
  \      exists only if a) you created a database and b) it\n                    \
  \    exists in a custom location. In this case, please\n                       \
  \ provide that path here. Otherwise we vibing.\n\nGENES:\n  Specifying which genes\
  \ you want to be modelled.\n\n  --genes-of-interest FILE\n                     \
  \   A file with anvi'o gene caller IDs. There should be\n                      \
  \  only one column in the file, and each line should\n                        correspond\
  \ to a unique gene caller id (without a\n                        column header).\n\
  \  --gene-caller-ids GENE_CALLER_IDS\n                        Gene caller ids. Multiple\
  \ of them can be declared\n                        separated by a delimiter (the\
  \ default is a comma). In\n                        anvi-gen-variability-profile,\
  \ if you declare nothing\n                        you will get all genes matching\
  \ your other filtering\n                        criteria. In other programs, you\
  \ may get everything,\n                        nothing, or an error. It really depends\
  \ on the\n                        situation. Fortunately, mistakes are cheap, so\
  \ it's\n                        worth a try.\n\nOUTPUT:\n  Output file and output\
  \ style.\n\n  -o DB_FILE_PATH, --output-db-path DB_FILE_PATH\n                 \
  \       Output file path for the new database.\n  --dump-dir DUMP_DIR   Modeling\
  \ and annotating structures requires a lot of\n                        moving parts,\
  \ each which have their own outputs. The\n                        output of this\
  \ program is a structure database\n                        containing the pertinent\
  \ results of this computation,\n                        however a lot of stuff doesn't\
  \ make the cut. By\n                        providing a directory for this parameter\
  \ you will get,\n                        in addition to the structure database,\
  \ a directory\n                        containing the raw output for everything.\n\
  \nMODELLER PARAMS:\n  Parameters for MODELLER's homology modeling.\n\n  --num-models\
  \ NUM_MODELS, -N NUM_MODELS\n                        This parameter determines the\
  \ number of predicted\n                        structures that are solved for a\
  \ given protein. The\n                        original atomic positions for each\
  \ model are perturbed\n                        by an amount defined by --deviation,\
  \ which leads to\n                        differences between each model. Therefore,\
  \ whichever\n                        of the N models is chosen to be the \"best\"\
  \ model is\n                        more likely to be accurate when --num-models\
  \ is high,\n                        since more of the solution space is searched.\
  \ It\n                        should be kept in mind that the largest determinant\
  \ of\n                        a model's accuracy is determined by the protein\n\
  \                        templates used, so no need to go overboard with an\n  \
  \                      excessively large --num-models. The default is 1.\n  --deviation\
  \ DEVIATION, -d DEVIATION\n                        Deviation (angstroms)\n  --modeller-database\
  \ MODELLER_DATABASE, -D MODELLER_DATABASE\n                        Which database\
  \ do you want to search the structures\n                        of? Default is \"\
  pdb_95\". If you have your own database\n                        it must have either\
  \ the extension .bin or .pir. If you\n                        don't have a database\
  \ or don't know what this means,\n                        don't worry, we will both\
  \ inform you and take care of\n                        you.\n  --scoring-method\
  \ SCORING_METHOD, -b SCORING_METHOD\n                        How should the best\
  \ model be decided? The metric used\n                        could be any of GA341_score,\
  \ DOPE_score, and molpdf.\n                        GA341 is an absolute measure,\
  \ where a good model will\n                        have a score near 1.0, whereas\
  \ anything below 0.6 can\n                        be considered bad. DOPE and molpdf\
  \ scores are relative\n                        energy measures, where lower scores\
  \ are better. DOPE\n                        has been generally shown to be a better\
  \ distinguisher\n                        between good and bad models than molpdf.\
  \ By default,\n                        DOPE is used. To learn more see the MODELLER\
  \ tutorial:\n                        https://salilab.org/modeller/tutorial/basic.html.\n\
  \  --very-fast           If provided, a very fast optimization is done for each\n\
  \                        model at the cost of accuracy. It is recommended to\n \
  \                       use a --num-models of 1, since the optimization is so\n\
  \                        crude that all models will likely converge to the same\n\
  \                        solution.\n  --percent-identical-cutoff PERCENT_IDENTICAL_CUTOFF,\
  \ -p PERCENT_IDENTICAL_CUTOFF\n                        If a protein in the database\
  \ has a proper percent\n                        identity to the gene of interest\
  \ that is greater than\n                        or equal to --percent-identical-cutoff,\
  \ then it is\n                        used as a template. Otherwise it is not. Here\
  \ we\n                        define proper percent identity as the percentage of\n\
  \                        amino acids in the gene of interest that are identical\n\
  \                        to an entry in the database given the sequence length\n\
  \                        of the gene of interest. For example, if there is 100%\n\
  \                        identity between the gene of interest and the template\n\
  \                        over the length of the alignment, but the alignment\n \
  \                       length is only half of the gene of interest sequence\n \
  \                       length, then the proper percent identical is 50%.\n    \
  \                    (This helps us avoid the inflation of identity scores\n   \
  \                     due to only partially good matches). The default is\n    \
  \                    30.\n  --max-number-templates MAX_NUMBER_TEMPLATES, -t MAX_NUMBER_TEMPLATES\n\
  \                        Generally speaking it is best to use as many templates\n\
  \                        as possible given that they have high proper percent\n\
  \                        identity to the gene of interest. Taken from https://s\n\
  \                        alilab.org/modeller/methenz/andras/node4.html: 'The\n \
  \                       use of several templates generally increases the model\n\
  \                        accuracy. One strength of MODELLER is that it can\n   \
  \                     combine information from multiple template structures,\n \
  \                       in two ways. First, multiple template structures may\n \
  \                       be aligned with different domains of the target, with\n\
  \                        little overlap between them, in which case the\n      \
  \                  modeling procedure can construct a homology-based\n         \
  \               model of the whole target sequence. Second, the\n              \
  \          template structures may be aligned with the same part\n             \
  \           of the target, in which case the modeling procedure is\n           \
  \             likely to automatically build the model on the locally\n         \
  \               best template [43,44]. In general, it is frequently\n          \
  \              beneficial to include in the modeling process all the\n         \
  \               templates that differ substantially from each other,\n         \
  \               if they share approximately the same overall\n                 \
  \       similarity to the target sequence.' The default is 5.\n\nEXTRA:\n  Everything\
  \ else.\n\n  --skip-DSSP           Dictionary of Secondary Structure of Proteins\
  \ (DSSP)\n                        is a program that takes as its input a protein\n\
  \                        structure file and outputs predicted secondary\n      \
  \                  structure (alpha helix, beta strand, etc.), measures\n      \
  \                  of solvent accessibility, and hydrogen bonds for each\n     \
  \                   residue in the protein. If for some reason you don't\n     \
  \                   want this, provide this flag.\n  --modeller-executable MODELLER_EXECUTABLE\n\
  \                        The MODELLER program to use. For example, `mod9.19`.\n\
  \                        Anvi'o will try and find it if not provided\n  --offline-mode\
  \        Anvi'o first tries to obtain template structures from\n               \
  \         a database (see --pdb-db for details). If the\n                      \
  \  requested template does not exist in the database, its\n                    \
  \    structure will be downloaded from the RCSB PDB server.\n                  \
  \      However, if you don't have access to internet, or hate\n                \
  \        the RCSB PDB, provide this flag so that all operations\n              \
  \          of this program remain offline. If the template\n                   \
  \     structure is not in the database, then no template\n                     \
  \   structure for you.\n  -T NUM_THREADS, --num-threads NUM_THREADS\n          \
  \              Maximum number of threads to use for multithreading\n           \
  \             whenever possible. Very conservatively, the default is\n         \
  \               1. It is a good idea to not exceed the number of CPUs\n        \
  \                / cores on your system. Plus, please be careful with\n        \
  \                this option if you are running your commands on a SGE\n       \
  \                 --if you are clusterizing your runs, and asking for\n        \
  \                multiple threads to use, you may deplete your\n               \
  \         resources very fast.\n  --write-buffer-size-per-thread INT\n         \
  \               How many items should be kept in memory before they\n          \
  \              are written do the disk. The default is 25 per thread.\n        \
  \                So a single-threaded job would have a write buffer\n          \
  \              size of 25, whereas a job with 4 threads would have a\n         \
  \               write buffer size of 4*25. The larger the buffer size,\n       \
  \                 the less frequent the program will access to the disk,\n     \
  \                   yet the more memory will be consumed since the\n           \
  \             processed items will be cleared off the memory only\n            \
  \            after they are written to the disk. The default buffer\n          \
  \              size will likely work for most cases. Please keep an\n          \
  \              eye on the memory usage output to make sure the memory\n        \
  \                use never exceeds the size of the physical memory. If\n       \
  \                 --num-threads is 1, this parameter is ignored because\n      \
  \                  the DB is written to after each gene\n"
generated_using:
- --help
