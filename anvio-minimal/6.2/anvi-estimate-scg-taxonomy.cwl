#!/usr/bin/env cwl-runner

baseCommand:
- anvi-estimate-scg-taxonomy
class: CommandLineTool
cwlVersion: v1.0
id: anvi-estimate-scg-taxonomy
inputs:
- doc: Anvi'o contigs database generated by 'anvi-gen- contigs'
  id: contigs_db
  inputBinding:
    prefix: --contigs-db
  type: string
- doc: Treat a given contigs database as a metagenome rather than treating it as a
    single genome.
  id: meta_genome_mode
  inputBinding:
    prefix: --metagenome-mode
  type: boolean
- doc: Anvi'o profile database
  id: profile_db
  inputBinding:
    prefix: --profile-db
  type: string
- doc: Collection name.
  id: collection_name
  inputBinding:
    prefix: --collection-name
  type: string
- doc: "A two-column TAB-delimited flat text file. The header line must contain these\
    \ columns: 'name', 'contigs_db_path', and 'profile_db_path'. Each line should\
    \ list a single entry, where 'name' can be any name to describe the metagenome\
    \ stored in the anvi'o contigs database. In this context, the anvi'o profiles\
    \ associated with contigs database must be SINGLE PROFILES, as in generated by\
    \ the program `anvi- profile` and not `anvi-merge`."
  id: meta_genomes
  inputBinding:
    prefix: --metagenomes
  type: File
- doc: File path to store results.
  id: output_file
  inputBinding:
    prefix: --output-file
  type: File
- doc: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  id: output_file_prefix
  inputBinding:
    prefix: --output-file-prefix
  type: File
- doc: The taxonomic level to use whenever relevant and/or available. The default
    taxonomic level is None, but if you choose something specific, anvi'o will focus
    on that whenever possible.
  id: taxonomic_level
  inputBinding:
    prefix: --taxonomic-level
  type: string
- doc: If you want the reports to look like sparse matrices whenever possible, declare
    this flag. Matrices are especially good to use when you are working with internal/external
    genomes since they can show you quickly the distribution of each taxon across
    all metagenomes in programs like EXCEL. WELL TRY IT AND SEE.
  id: matrix_format
  inputBinding:
    prefix: --matrix-format
  type: boolean
- doc: Just store the raw output without any processing of the primary data structure.
  id: raw_output
  inputBinding:
    prefix: --raw-output
  type: boolean
- doc: Maximum number of threads to use for multithreading whenever possible. Very
    conservatively, the default is 1. It is a good idea to not exceed the number of
    CPUs / cores on your system. Plus, please be careful with this option if you are
    running your commands on a SGE --if you are clusterizing your runs, and asking
    for multiple threads to use, you may deplete your resources very fast.
  id: num_threads
  inputBinding:
    prefix: --num-threads
  type: string
- doc: When running in metagenome mode, anvi'o automatically chooses the most frequent
    single-copy core gene to estimate the taxonomic composition within a contigs database.
    If you have a different preference you can use this parameter to communicate that.
  id: scg_name_for_meta_genome_mode
  inputBinding:
    prefix: --scg-name-for-metagenome-mode
  type: string
- doc: Report SCG frequencies in a TAB-delimited file and quit. This is a great way
    to decide which SCG name to use in metagenome mode (we often wish to use the most
    frequent SCG to increase the detection of taxa).
  id: report_scg_frequencies
  inputBinding:
    prefix: --report-scg-frequencies
  type: File
- doc: Don't bother me with questions or warnings, just do it.
  id: just_do_it
  inputBinding:
    prefix: --just-do-it
  type: boolean
- doc: The taxonomy output may include a large number of names that contain clade-specific
    code for not-yet- characterized taxa. With this flag you can simplify taxon names.
    This will influence all output files and displays as the use of this flag will
    on-the-fly trim taxonomic levels with clade-specific code names.
  id: simplify_taxonomy_information
  inputBinding:
    prefix: --simplify-taxonomy-information
  type: boolean
- doc: When this flag is declared, anvi'o will go back to the profile database to
    learn coverage statistics of single-copy core genes for which we have taxonomy
    information.
  id: compute_scg_coverages
  inputBinding:
    prefix: --compute-scg-coverages
  type: boolean
- doc: When anvi'o knows all both taxonomic affiliations and coverages across samples
    for single-copy core genes, it can, in theory add this information to the profile
    database. With this flag you can instruct anvi'o to do that and find information
    on taxonomy in the `layers` tab of your interactive interface.
  id: update_profile_db_with_taxonomy
  inputBinding:
    prefix: --update-profile-db-with-taxonomy
  type: boolean
- doc: Path to the directory that contains the BLAST databases for single-copy core
    genes. You will almost never need to use this parameter unless you are trying
    something very fancy. But when you do, you can tell anvi'o where to look for database
    files through this parameter.
  id: taxonomy_database
  inputBinding:
    prefix: --taxonomy-database
  type: File
