version 1.0

task Anvigenvariabilityprofile {
  input {
    String? profile_db
    String? contigs_db
    String? structure_db
    String? collection_name
    String? bin_id
    File? splits_of_interest
    File? genes_of_interest
    String? gene_caller_ids
    Boolean? only_if_structure
    File? samples_of_interest
    String? engine
    Boolean? skip_synonym_ity
    Int? num_positions_from_each_split
    Float? min_departure_from_reference
    Float? max_departure_from_reference
    Float? min_departure_from_consensus
    Float? max_departure_from_consensus
    Int? min_occurrence
    Int? min_coverage_in_each_sample
    Boolean? quince_mode
    File? output_file
    Boolean? include_contig_names
    File? include_split_names
    Boolean? compute_gene_coverage_stats
  }
  command <<<
    anvi_gen_variability_profile \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(structure_db) then ("--structure-db " +  '"' + structure_db + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(splits_of_interest) then ("--splits-of-interest " +  '"' + splits_of_interest + '"') else ""} \
      ~{if defined(genes_of_interest) then ("--genes-of-interest " +  '"' + genes_of_interest + '"') else ""} \
      ~{if defined(gene_caller_ids) then ("--gene-caller-ids " +  '"' + gene_caller_ids + '"') else ""} \
      ~{if (only_if_structure) then "--only-if-structure" else ""} \
      ~{if defined(samples_of_interest) then ("--samples-of-interest " +  '"' + samples_of_interest + '"') else ""} \
      ~{if defined(engine) then ("--engine " +  '"' + engine + '"') else ""} \
      ~{if (skip_synonym_ity) then "--skip-synonymity" else ""} \
      ~{if defined(num_positions_from_each_split) then ("--num-positions-from-each-split " +  '"' + num_positions_from_each_split + '"') else ""} \
      ~{if defined(min_departure_from_reference) then ("--min-departure-from-reference " +  '"' + min_departure_from_reference + '"') else ""} \
      ~{if defined(max_departure_from_reference) then ("--max-departure-from-reference " +  '"' + max_departure_from_reference + '"') else ""} \
      ~{if defined(min_departure_from_consensus) then ("--min-departure-from-consensus " +  '"' + min_departure_from_consensus + '"') else ""} \
      ~{if defined(max_departure_from_consensus) then ("--max-departure-from-consensus " +  '"' + max_departure_from_consensus + '"') else ""} \
      ~{if defined(min_occurrence) then ("--min-occurrence " +  '"' + min_occurrence + '"') else ""} \
      ~{if defined(min_coverage_in_each_sample) then ("--min-coverage-in-each-sample " +  '"' + min_coverage_in_each_sample + '"') else ""} \
      ~{if (quince_mode) then "--quince-mode" else ""} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{if (include_contig_names) then "--include-contig-names" else ""} \
      ~{if (include_split_names) then "--include-split-names" else ""} \
      ~{if (compute_gene_coverage_stats) then "--compute-gene-coverage-stats" else ""}
  >>>
  parameter_meta {
    profile_db: "Anvi'o profile database"
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen-\\ncontigs'"
    structure_db: "Anvi'o structure database."
    collection_name: "Collection name."
    bin_id: "Bin name you are interested in."
    splits_of_interest: "A file with split names. There should be only one\\ncolumn in the file, and each line should correspond to\\na unique split name."
    genes_of_interest: "A file with anvi'o gene caller IDs. There should be\\nonly one column in the file, and each line should\\ncorrespond to a unique gene caller id (without a\\ncolumn header)."
    gene_caller_ids: "Gene caller ids. Multiple of them can be declared\\nseparated by a delimiter (the default is a comma). In\\nanvi-gen-variability-profile, if you declare nothing\\nyou will get all genes matching your other filtering\\ncriteria. In other programs, you may get everything,\\nnothing, or an error. It really depends on the\\nsituation. Fortunately, mistakes are cheap, so it's\\nworth a try."
    only_if_structure: "If provided, your genes of interest will be further\\nsubset to only include genes with structures in your\\nstructure database, and therefore must be supplied in\\nconjunction with a structure database, i.e. `-s\\n<your_structure_database>`. If you did not specify\\ngenes of interest, ALL genes will be subset to those\\nthat have structures."
    samples_of_interest: "A file with samples names. There should be only one\\ncolumn in the file, and each line should correspond to\\na unique sample name (without a column header)."
    engine: "Variability engine. The default is 'NT'."
    skip_synonym_ity: "Computing synonymity can be an expensive operation for\\nlarge data sets. Provide this flag to skip computing\\nsynonymity. It only makes sense to provide this flag\\nwhen using --engine CDN."
    num_positions_from_each_split: "Each split may have one or more variable positions. By\\ndefault, anvi'o will report every SNV position found\\nin a given split. This parameter will help you to\\ndefine a cutoff for the maximum number of SNVs to be\\nreported from a split (if the number of SNVs is more\\nthan the number you declare using this parameter, the\\npositions will be randomly subsampled)."
    min_departure_from_reference: "Takes a value between 0 and 1, where 1 is maximum\\ndivergence from the reference. Default is 0.000000.\\nThe reference here observation that corresponds to a\\ngiven position in the mapped context."
    max_departure_from_reference: "Similar to '--min-departure-from-reference', but\\ndefines an upper limit for divergence. The default is\\n1.000000."
    min_departure_from_consensus: "Takes a value between 0 and 1, where 1 is maximum\\ndivergence from the consensus for a given position.\\nThe default is 0.000000. The consensus is the most\\nfrequent observation at a given position."
    max_departure_from_consensus: "Similar to '--min-departure-from-consensus', but\\ndefines an upper limit for divergence. The default is\\n1.000000."
    min_occurrence: "Minimum number of samples a nucleotide position should\\nbe reported as variable. Default is 1. If you set it\\nto 2, for instance, each eligible variable position\\nwill be expected to appear in at least two samples,\\nwhich will reduce the impact of stochastic, or\\nunintelligible variable positions."
    min_coverage_in_each_sample: "Minimum coverage of a given variable nucleotide\\nposition in all samples. If a nucleotide position is\\ncovered less than this value even in one sample, it\\nwill be removed from the analysis. Default is 0."
    quince_mode: "The default behavior is to report base frequencies of\\nnucleotide positions only if there is any variation\\nreported during profiling (which by default uses some\\nheuristics to minimize the impact of error-driven\\nvariation). So, if there are 10 samples, and a given\\nposition has been reported as a variable site during\\nprofiling in only one of those samples, there will be\\nno information will be stored in the database for the\\nremaining 9. When this flag is used, we go back to\\neach sample, and report base frequencies for each\\nsample at this position even if they do not vary. It\\nwill take considerably longer to report when this flag\\nis on, and the use of it will increase the file size\\ndramatically, however it is inevitable for some\\nstatistical approaches (as well as for some beautiful\\nvisualizations)."
    output_file: "File path to store results."
    include_contig_names: "Use this flag if you would like contig names for each\\nvariable position to be included in the output file as\\na column. By default, we do not include contig names\\nsince they can practically double the output file size\\nwithout any actual benefit in most cases."
    include_split_names: "Use this flag if you would like split names for each\\nvariable position to be included in the output file as\\na column."
    compute_gene_coverage_stats: "If provided, gene coverage statistics will be appended\\nfor each entry in variability report. This is very\\nuseful information, but will not be included by\\ndefault because it is an expensive operation, and may\\ntake some additional time.\\n"
  }
  output {
    File out_stdout = stdout()
    File out_output_file = "${in_output_file}"
    File out_include_split_names = "${in_include_split_names}"
  }
}