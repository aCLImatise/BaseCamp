#!/usr/bin/env cwl-runner

baseCommand:
- anvi-export-locus
class: CommandLineTool
cwlVersion: v1.0
id: anvi-export-locus
inputs:
- doc: Anvi'o contigs database generated by 'anvi-gen- contigs'
  id: contigs_db
  inputBinding:
    prefix: --contigs-db
  type: string
- doc: search term.
  id: search_term
  inputBinding:
    prefix: --search-term
  type: string
- doc: Gene caller ids. Multiple of them can be declared separated by a delimiter
    (the default is a comma). In anvi-gen-variability-profile, if you declare nothing
    you will get all genes matching your other filtering criteria. In other programs,
    you may get everything, nothing, or an error. It really depends on the situation.
    Fortunately, mistakes are cheap, so it's worth a try.
  id: gene_caller_ids
  inputBinding:
    prefix: --gene-caller-ids
  type: string
- doc: The delimiter to parse multiple input terms. The default is ','.
  id: delimiter
  inputBinding:
    prefix: --delimiter
  type: string
- doc: Directory path for output files
  id: output_dir
  inputBinding:
    prefix: --output-dir
  type: string
- doc: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  id: output_file_prefix
  inputBinding:
    prefix: --output-file-prefix
  type: File
- doc: Overwrite if the output files and/or directories exist.
  id: overwrite_output_destinations
  inputBinding:
    prefix: --overwrite-output-destinations
  type: boolean
- doc: By default anvi'o will return hits even if they are partial. Declaring this
    flag will make anvi'o filter all hits that are partial. Partial hits are hits
    in which you asked for n1 genes before and n2 genes after the gene that matched
    the search criteria but the search hits the end of the contig before finding the
    number of genes that you asked.
  id: remove_partial_hits
  inputBinding:
    prefix: --remove-partial-hits
  type: boolean
- doc: By default, if a gene that is found by the search criteria is reverse in it's
    direction, then the sequence of the entire locus is reversed before it is saved
    to the output. If you wish to prevent this behavior then use the flag --never-reverse-complement.
  id: never_reverse_complement
  inputBinding:
    prefix: --never-reverse-complement
  type: boolean
