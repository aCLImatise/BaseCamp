!Command
positional: []
named:
- !Flag
  description: Anvi'o profile database
  synonyms:
  - -p
  - --profile-db
  args: !SimpleFlagArg
    name: PROFILE_DB
  optional: true
- !Flag
  description: Anvi'o contigs database generated by 'anvi-gen- contigs'
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: Anvi'o structure database.
  synonyms:
  - -s
  - --structure-db
  args: !SimpleFlagArg
    name: STRUCTURE_DB
  optional: true
- !Flag
  description: The output of anvi-gen-variability-profile, or a different variant-calling
    output that has been converted to the anvi'o format.
  synonyms:
  - -V
  - --variability-profile
  args: !SimpleFlagArg
    name: VARIABILITY_TABLE
  optional: true
- !Flag
  description: Collection name.
  synonyms:
  - -C
  - --collection-name
  args: !SimpleFlagArg
    name: COLLECTION_NAME
  optional: true
- !Flag
  description: Bin name you are interested in.
  synonyms:
  - -b
  - --bin-id
  args: !SimpleFlagArg
    name: BIN_NAME
  optional: true
- !Flag
  description: A file with split names. There should be only one column in the file,
    and each line should correspond to a unique split name.
  synonyms:
  - --splits-of-interest
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: A file with anvi'o gene caller IDs. There should be only one column
    in the file, and each line should correspond to a unique gene caller id (without
    a column header).
  synonyms:
  - --genes-of-interest
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Gene caller ids. Multiple of them can be declared separated by a delimiter
    (the default is a comma). In anvi-gen-variability-profile, if you declare nothing
    you will get all genes matching your other filtering criteria. In other programs,
    you may get everything, nothing, or an error. It really depends on the situation.
    Fortunately, mistakes are cheap, so it's worth a try.
  synonyms:
  - --gene-caller-ids
  args: !SimpleFlagArg
    name: GENE_CALLER_IDS
  optional: true
- !Flag
  description: If provided, your genes of interest will be further subset to only
    include genes with structures in your structure database, and therefore must be
    supplied in conjunction with a structure database, i.e. `-s <your_structure_database>`.
    If you did not specify genes of interest, ALL genes will be subset to those that
    have structures.
  synonyms:
  - --only-if-structure
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: A file with samples names. There should be only one column in the file,
    and each line should correspond to a unique sample name (without a column header).
  synonyms:
  - --samples-of-interest
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Variability engine. The default is 'NT'.
  synonyms:
  - --engine
  args: !SimpleFlagArg
    name: ENGINE
  optional: true
- !Flag
  description: Minimum number of samples a nucleotide position should be reported
    as variable. Default is 1. If you set it to 2, for instance, each eligible variable
    position will be expected to appear in at least two samples, which will reduce
    the impact of stochastic, or unintelligible variable positions.
  synonyms:
  - -x
  - --min-occurrence
  args: !SimpleFlagArg
    name: NUM_SAMPLES
  optional: true
- !Flag
  description: Minimum coverage of a given variable nucleotide position in all samples.
    If a nucleotide position is covered less than this value even in one sample, it
    will be removed from the analysis. Default is 0.
  synonyms:
  - --min-coverage-in-each-sample
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: File path to store results.
  synonyms:
  - -o
  - --output-file
  args: !SimpleFlagArg
    name: FIXATION_INDICES
  optional: true
- !Flag
  description: Negative numbers are theoretically possible, and are sometimes interpreted
    as out-breeding. By default, we set negative numbers to 0 so the results are reflective
    of a standard distance metric. Provide this flag if you would prefer otherwise.
  synonyms:
  - --keep-negatives
  args: !EmptyFlagArg {}
  optional: true
command:
- anvi-gen-fixation-index-matrix
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-gen-fixation-index-matrix [-h] [-p PROFILE_DB] [-c CONTIGS_DB]\n\
  \                                      [-s STRUCTURE_DB] [-V VARIABILITY_TABLE]\n\
  \                                      [-C COLLECTION_NAME] [-b BIN_NAME]\n    \
  \                                  [--splits-of-interest FILE]\n               \
  \                       [--genes-of-interest FILE]\n                           \
  \           [--gene-caller-ids GENE_CALLER_IDS]\n                              \
  \        [--only-if-structure]\n                                      [--samples-of-interest\
  \ FILE]\n                                      [--engine ENGINE] [-x NUM_SAMPLES]\n\
  \                                      [--min-coverage-in-each-sample INT]\n   \
  \                                   [-o FIXATION_INDICES] [--keep-negatives]\n\n\
  Generate a pairwise matrix of a fixation indices between samples\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n\nDATABASES:\n  Declaring\
  \ relevant anvi'o databases. First things first. Some are\n  mandatory, some are\
  \ optional.\n\n  -p PROFILE_DB, --profile-db PROFILE_DB\n                      \
  \  Anvi'o profile database\n  -c CONTIGS_DB, --contigs-db CONTIGS_DB\n         \
  \               Anvi'o contigs database generated by 'anvi-gen-\n              \
  \          contigs'\n  -s STRUCTURE_DB, --structure-db STRUCTURE_DB\n          \
  \              Anvi'o structure database.\n  -V VARIABILITY_TABLE, --variability-profile\
  \ VARIABILITY_TABLE\n                        The output of anvi-gen-variability-profile,\
  \ or a\n                        different variant-calling output that has been\n\
  \                        converted to the anvi'o format.\n\nFOCUS :: BIN:\n  You\
  \ need to pick someting to focus. You can ask anvi'o to work with a bin\n  in a\
  \ collection.\n\n  -C COLLECTION_NAME, --collection-name COLLECTION_NAME\n     \
  \                   Collection name.\n  -b BIN_NAME, --bin-id BIN_NAME\n       \
  \                 Bin name you are interested in.\n\nFOCUS :: SPLIT NAMES:\n  Alternatively\
  \ you can declare split names to focus.\n\n  --splits-of-interest FILE\n       \
  \                 A file with split names. There should be only one\n          \
  \              column in the file, and each line should correspond to\n        \
  \                a unique split name.\n\nFOCUS :: GENE CALLER IDs:\n  Alternatively\
  \ you can declare gene caller IDs to focus.\n\n  --genes-of-interest FILE\n    \
  \                    A file with anvi'o gene caller IDs. There should be\n     \
  \                   only one column in the file, and each line should\n        \
  \                correspond to a unique gene caller id (without a\n            \
  \            column header).\n  --gene-caller-ids GENE_CALLER_IDS\n            \
  \            Gene caller ids. Multiple of them can be declared\n               \
  \         separated by a delimiter (the default is a comma). In\n              \
  \          anvi-gen-variability-profile, if you declare nothing\n              \
  \          you will get all genes matching your other filtering\n              \
  \          criteria. In other programs, you may get everything,\n              \
  \          nothing, or an error. It really depends on the\n                    \
  \    situation. Fortunately, mistakes are cheap, so it's\n                     \
  \   worth a try.\n  --only-if-structure   If provided, your genes of interest will\
  \ be further\n                        subset to only include genes with structures\
  \ in your\n                        structure database, and therefore must be supplied\
  \ in\n                        conjunction with a structure database, i.e. `-s\n\
  \                        <your_structure_database>`. If you did not specify\n  \
  \                      genes of interest, ALL genes will be subset to those\n  \
  \                      that have structures.\n\nSAMPLES:\n  You can ask anvi'o to\
  \ focus only on a subset of samples.\n\n  --samples-of-interest FILE\n         \
  \               A file with samples names. There should be only one\n          \
  \              column in the file, and each line should correspond to\n        \
  \                a unique sample name (without a column header).\n\nENGINE:\n  Set\
  \ your engine. This is important as it will define the output profile\n  you will\
  \ get from this program. The engine can focus on nucleotides (NT),\n  codons (CDN),\
  \ or an amino acids (AA).\n\n  --engine ENGINE       Variability engine. The default\
  \ is 'NT'.\n\nFILTERS:\n  Parameters that will help you to do a very precise analysis.\
  \ If you\n  declare nothing from this bunch, you will get \"everything\" to play\
  \ with,\n  which is not necessarily a good thing...\n\n  -x NUM_SAMPLES, --min-occurrence\
  \ NUM_SAMPLES\n                        Minimum number of samples a nucleotide position\
  \ should\n                        be reported as variable. Default is 1. If you\
  \ set it\n                        to 2, for instance, each eligible variable position\n\
  \                        will be expected to appear in at least two samples,\n \
  \                       which will reduce the impact of stochastic, or\n       \
  \                 unintelligible variable positions.\n  --min-coverage-in-each-sample\
  \ INT\n                        Minimum coverage of a given variable nucleotide\n\
  \                        position in all samples. If a nucleotide position is\n\
  \                        covered less than this value even in one sample, it\n \
  \                       will be removed from the analysis. Default is 0.\n\nOUTPUT:\n\
  \  Output file and style\n\n  -o FIXATION_INDICES, --output-file FIXATION_INDICES\n\
  \                        File path to store results.\n\nEXTRAS:\n  Because why not\
  \ be extra?\n\n  --keep-negatives      Negative numbers are theoretically possible,\
  \ and are\n                        sometimes interpreted as out-breeding. By default,\
  \ we\n                        set negative numbers to 0 so the results are\n   \
  \                     reflective of a standard distance metric. Provide this\n \
  \                       flag if you would prefer otherwise.\n"
generated_using:
- --help
