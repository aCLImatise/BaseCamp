version 1.0

task AnviGetSequencesForHmmHits {
  input {
    String? contigs_db
    String? profile_db
    String? collection_name
    String? bin_id
    File? bin_ids_file
    File? external_genomes
    File? internal_genomes
    String? hmm_sources
    String? gene_names
    Boolean? list_hmm_sources
    Boolean? list_available_gene_names
    File? output_file
    Boolean? no_wrap
    Boolean? get_aa_sequences
    Boolean? concatenate_genes
    File? partition_file
    Int? max_num_genes_missing_from_bin
    Int? min_num_bins_gene_occurs
    String? align_with
    String? separator
    Boolean? return_best_hit
    Boolean? just_do_it
  }
  command <<<
    anvi-get-sequences-for-hmm-hits \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(bin_ids_file) then ("--bin-ids-file " +  '"' + bin_ids_file + '"') else ""} \
      ~{if defined(external_genomes) then ("--external-genomes " +  '"' + external_genomes + '"') else ""} \
      ~{if defined(internal_genomes) then ("--internal-genomes " +  '"' + internal_genomes + '"') else ""} \
      ~{if defined(hmm_sources) then ("--hmm-sources " +  '"' + hmm_sources + '"') else ""} \
      ~{if defined(gene_names) then ("--gene-names " +  '"' + gene_names + '"') else ""} \
      ~{true="--list-hmm-sources" false="" list_hmm_sources} \
      ~{true="--list-available-gene-names" false="" list_available_gene_names} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{true="--no-wrap" false="" no_wrap} \
      ~{true="--get-aa-sequences" false="" get_aa_sequences} \
      ~{true="--concatenate-genes" false="" concatenate_genes} \
      ~{if defined(partition_file) then ("--partition-file " +  '"' + partition_file + '"') else ""} \
      ~{if defined(max_num_genes_missing_from_bin) then ("--max-num-genes-missing-from-bin " +  '"' + max_num_genes_missing_from_bin + '"') else ""} \
      ~{if defined(min_num_bins_gene_occurs) then ("--min-num-bins-gene-occurs " +  '"' + min_num_bins_gene_occurs + '"') else ""} \
      ~{if defined(align_with) then ("--align-with " +  '"' + align_with + '"') else ""} \
      ~{if defined(separator) then ("--separator " +  '"' + separator + '"') else ""} \
      ~{true="--return-best-hit" false="" return_best_hit} \
      ~{true="--just-do-it" false="" just_do_it}
  >>>
  parameter_meta {
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen- contigs'"
    profile_db: "Anvi'o profile database"
    collection_name: "Collection name."
    bin_id: "Bin name you are interested in."
    bin_ids_file: "Text file for bins (each line should be a unique bin id)."
    external_genomes: "A two-column TAB-delimited flat text file that lists anvi'o contigs databases. The first item in the header line should read 'name', and the second should read 'contigs_db_path'. Each line in the file should describe a single entry, where the first column is the name of the genome (or MAG), and the second column is the anvi'o contigs database generated for this genome."
    internal_genomes: "A five-column TAB-delimited flat text file. The header line must contain these columns: 'name', 'bin_id', 'collection_id', 'profile_db_path', 'contigs_db_path'. Each line should list a single entry, where 'name' can be any name to describe the anvi'o bin identified as 'bin_id' that is stored in a collection."
    hmm_sources: "NAME Get sequences for a specific list of HMM sources. You can list one or more sources by separating them from each other with a comma character (i.e., '--hmm- sources source_1,source_2,source_3'). If you would like to see a list of available sources in the contigs database, run this program with '--list-hmm-sources' flag."
    gene_names: "HIT NAME Get sequences only for a specific gene name. Each name should be separated from each other by a comma character. For instance, if you want to get back only RecA and Ribosomal_L27, you can type '--gene-names RecA,Ribosomal_L27', and you will get any and every hit that matches these names in any source. If you would like to see a list of available gene names, you can use '--list-available-gene-names' flag."
    list_hmm_sources: "List available HMM sources in the contigs database and quit."
    list_available_gene_names: "List available gene names in HMM sources selection and quit."
    output_file: "File path to store results."
    no_wrap: "Do not be wrap sequences nicely in the output file."
    get_aa_sequences: "Store amino acid sequences instead."
    concatenate_genes: "Concatenate output genes in the same order to create a multi-gene alignment output that is suitable for phylogenomic analyses."
    partition_file: "Some commonly used software for phylogenetic analyses (e.g., IQ-TREE, RAxML, etc) allow users to specify/test different substitution models for each gene of a concatenated multiple sequence alignments. For this, they use a special file format called a 'partition file', which indicates the site for each gene in the alignment. You can use this parameter to declare an output path for anvi'o to report a NEXUS format partition file in addition to your FASTA output (requested by Massimiliano Molari in #1333)."
    max_num_genes_missing_from_bin: "This filter removes bins (or genomes) from your analysis. If you have a list of gene names, you can use this parameter to omit any bin (or external genome) that is missing more than a number of genes you desire. For instance, if you have 100 genome bins, and you are interested in working with 5 ribosomal proteins, you can use '--max-num-genes-missing-from- bin 4' to remove the bins that are missing more than 4 of those 5 genes. This is especially useful for phylogenomic analyses. Parameter 0 will remove any bin that is missing any of the genes."
    min_num_bins_gene_occurs: "This filter removes genes from your analysis. Let's assume you have 100 bins to get sequences for HMM hits. If you want to work only with genes among all the hits that occur in at least X number of bins, and discard the rest of them, you can use this flag. If you say '--min-num-bins-gene-occurs 90', each gene in the analysis will be required at least to appear in 90 genomes. If a gene occurs in less than that number of genomes, it simply will not be reported. This is especially useful for phylogenomic analyses, where you may want to only focus on genes that are prevalent across the set of genomes you wish to analyze."
    align_with: "The multiple sequence alignment program to use when multiple sequence alignment is necessary. To see all available options, use the flag `--list-aligners`."
    separator: "A word that will be used to sepaate concatenated gene sequences from each other (IF you are using this program with `--concatenate-genes` flag). The default is \"XXX\" for amino acid sequences, and \"NNN\" for DNA sequences"
    return_best_hit: "A bin may contain more than one hit for a gene name in a given HMM source. For instance, there may be multiple RecA hits in a genome bin from Campbell et al.. Using this flag, will go through all of the gene names that appear multiple times, and remove all but the one with the lowest e-value. Good for whenever you really need to get only a single copy of single-copy core genes from a genome bin."
    just_do_it: "Don't bother me with questions or warnings, just do it."
  }
}