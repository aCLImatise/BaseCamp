version 1.0

task Anvigetshortreadsfrombam {
  input {
    String? profile_db
    String? contigs_db
    String? collection_name
    String? bin_id
    File? bin_ids_file
    File? output_file
    File? output_file_prefix
    File? gzip_output
    Boolean? split_r_one_and_r_two
  }
  command <<<
    anvi_get_short_reads_from_bam \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(bin_ids_file) then ("--bin-ids-file " +  '"' + bin_ids_file + '"') else ""} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{if defined(output_file_prefix) then ("--output-file-prefix " +  '"' + output_file_prefix + '"') else ""} \
      ~{if (gzip_output) then "--gzip-output" else ""} \
      ~{if (split_r_one_and_r_two) then "--split-R1-and-R2" else ""}
  >>>
  parameter_meta {
    profile_db: "Anvi'o profile database"
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen-\\ncontigs'"
    collection_name: "Collection name."
    bin_id: "Bin name you are interested in."
    bin_ids_file: "Text file for bins (each line should be a unique bin\\nid)."
    output_file: "File path to store results."
    output_file_prefix: "A prefix to be used while naming the output files (no\\nfile type extensions please; just a prefix)."
    gzip_output: "When declared, output file(s) will be gzip compressed\\nand the extension `.gz` will be added."
    split_r_one_and_r_two: "When declared, this program outputs 3 FASTA files for\\npaired-end reads: one for R1, one for R2, and one for\\nunpaired reads.\\n"
  }
  output {
    File out_stdout = stdout()
    File out_output_file = "${in_output_file}"
    File out_output_file_prefix = "${in_output_file_prefix}"
    File out_gzip_output = "${in_gzip_output}"
  }
}