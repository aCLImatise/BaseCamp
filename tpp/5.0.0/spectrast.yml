!Command
positional:
- !Positional
  description: ''
  position: 0
  name: FileName1
  optional: false
- !Positional
  description: ''
  position: 1
  name: FileNameN
  optional: true
named:
- !Flag
  description: Verbose mode.
  synonyms:
  - -V
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Quiet mode.
  synonyms:
  - -Q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <file>     Specify name of log file. Default is "spectrast.log".
  synonyms:
  - -L
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <file>     Specify name of user-defined modifications file. Default
    is "spectrast.usermods".
  synonyms:
  - -M
  args: !EmptyFlagArg {}
  optional: true
command:
- spectrast
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "SpectraST (version 5.0, TPP v5.0.0 Typhoon, Build 201803241129-exported\
  \ (Linux-x86_64)) by Henry Lam.\n\n(I) CREATE MODE \nUsage: spectrast [ options\
  \ ] <FileName1> [ <FileName2> ... <FileNameN> ]\nwhere: FileNameX = Name of file\
  \ containing spectra from which library is to be created.\n                    \
  \      Extension specifies format of file. Supports .msp, .hlf, .pepXML (or .pep.xml\
  \ or .xml), .ms2, and .splib.\n\nOptions: GENERAL OPTIONS\n         -cF<file>  \
  \  Read create options from file <file>. \n                           If <file>\
  \ is not given, \"spectrast_create.params\" is assumed.\n                      \
  \     NOTE: All options set in the file will be overridden by command-line options,\
  \ if specified.\n         -cN<name>    Specify output file name for .splib, .spidx\
  \ and .pepidx files. \n         -cm<remark>  Remark. Add a Remark=<remark> comment\
  \ to all library entries created. \n         -cM<format>  Write all library spectra\
  \ as MRM transition tables. Leave <format> blank for default. (Turn off with -cM!)\
  \ \n         -cT<file>    Use probability table in <file>. Only those peptide ions\
  \ included in the table will be imported. \n                           A probability\
  \ table is a text file with one peptide ion in the format AC[160]DEFGHIK/2 per line.\
  \ \n                           If a probability is supplied following the peptide\
  \ ion separated by a tab, it will be used to replace the original probability of\
  \ that library entry.\n         -cO<file>    Use protein list in <file>. Only those\
  \ peptide ions associated with proteins in the list will be imported. \n       \
  \                    A protein list is a text file with one protein identifier per\
  \ line. \n                           If a number X is supplied following the protein\
  \ separated by a tab, then at most X peptide ions associated with that protein will\
  \ be imported.\n\n         PEPXML IMPORT OPTIONS (Applicable with .pepXML files)\n\
  \         -cP<prob>    Include all spectra identified with probability no less than\
  \ <prob> in the library.\n         -cq<fdr>     (Only PepXML import) Only include\
  \ spectra with global FDR no greater than <fdr> in the library.\n         -cn<name>\
  \    Specify a dataset identifier for the file to be imported.\n         -co   \
  \       Add the originating mzXML file name to the dataset identifier. Good for\
  \ keeping track of in which\n                           MS run the peptide is observed.\
  \ (Turn off with -co!)\n         -cg          Set all asparagines (N) in the motif\
  \ NX(S/T) as deamidated (N[115]). Use for glycocaptured peptides. (Turn off with\
  \ -cg!).\n         -cI          Set the instrument and acquisition settings of the\
  \ spectra (in case not specified in data files).\n                           Examples:\
  \ -cICID, -cIETD, -cICID-QTOF, -cIHCD. The latter two are treated as high-mass accuracy\
  \ spectra.\n\n         LIBRARY MANIPULATION OPTIONS (Applicable with .splib files)\n\
  \         -cf<pred>    Filter library. Keep only those entries satisfying the predicate\
  \ <pred>. \n                           <pred> should be a C-style predicate in quotes.\
  \ \n         -cJU         Union. Include all the peptide ions in all the files.\
  \ \n         -cJI         Intersection. Only include peptide ions that are present\
  \ in all the files. \n         -cJS         Subtraction. Only include peptide ions\
  \ in the first file that are not present in any of the other files.\n         -cJH\
  \         Subtraction of homologs. Only include peptide ions in the first file \n\
  \                           that do not have any homologs with same charge and similar\
  \ m/z in any of the other files.\n         -cJA         Appending. Each peptide\
  \ ion is added from only one library: the first file in the argument list that contains\
  \ that peptide ion.\n                           Useful for keeping existing consensus\
  \ spectra unchanged while adding only previously unseen peptide ions.\n        \
  \ -cAB         Best replicate. Pick the best replicate of each peptide ion. \n \
  \        -cAC         Consensus. Create the consensus spectrum of all replicate\
  \ spectra of each peptide ion. \n         -cAQ         Quality filter. Apply quality\
  \ filters to library.\n                           IMPORTANT: Quality filter can\
  \ only be applied on a SINGLE .splib file with no peptide ion represented by more\
  \ than one spectrum.\n         -cAD         Create artificial decoy spectra. \n\
  \         -cAN         Sort library entries by descending number of replicates used\
  \ (tie-breaking by probability). \n         -cAM         Create semi-empirical spectra\
  \ based on allowable modifications specified by -cx option. \n         -cQ<num>\
  \     Produce reduced spectra of at most <num> peaks. Inactive with -cAQ and -cAD.\n\
  \         -cD<file>    Refresh protein mappings of each library entry against the\
  \ protein database <file> (Must be in .fasta format).\n         -cu          Delete\
  \ entries whose peptide sequences do not map to any protein during refreshing with\
  \ -cD option.\n                           When off, unmapped entries will be marked\
  \ with Protein=0/UNMAPPED but retained in library. (Turn off with -cu!).\n     \
  \    -cd          Delete entries whose peptide sequences map to multiple proteins\
  \ during refreshing with -cD option. (Turn off with -cd!).\n\n         CONSENSUS/BEST-REPLICATE\
  \ OPTIONS (Applicable with -cAC and -cAB options)\n         -cr<num>     Minimum\
  \ number of replicates required for each library entry.\n                      \
  \     Peptide ions failing to have originated from enough replicates\n         \
  \                  will be excluded from library when creating consensus/best-replicate\
  \ library.\n\n         QUALITY FILTER OPTIONS (Applicable with -cAQ option)\n  \
  \       -cr<num>     Replicate quorum. Its value affects behavior of quality filter\
  \ (see below).\n         -cL<level>   Specify the stringency of the quality filter.\n\
  \         -cl<level>        -cL specifies the level for removal, -cl specifies the\
  \ level for marking.\n                           <level> = 0: No filter.\n     \
  \                      <level> = 1: Remove/mark impure spectra.\n              \
  \             <level> = 2: Also remove/mark spectra with a spectrally similar counterpart\
  \ in the library that is better.\n                           <level> = 3: Also remove/mark\
  \ inquorate entries (defined with -cr) that share no peptide sub-sequences with\
  \ any other entries in the library.\n                           <level> = 4: Also\
  \ remove/mark all singleton entries.\n                           <level> = 5: Also\
  \ remove/mark all inquorate entries (defined with -cr).\n\n         DECOY CREATION\
  \ OPTIONS (Applicable with -cAD option)\n         -cc          Concatenate real\
  \ and decoy libraries. (Turn off with -cc!)\n         -cy<num>     Specify the (decoy\
  \ / real) size ratio. Must be an integer.\n\n         SEMI-EMPIRICAL SPECTRUM CREATION\
  \ OPTIONS (Applicable with -cAM option)\n         -cx<str>     Specify allowable\
  \ modification tokens used to generate new peptide ions for which semi-empirical\
  \ spectra are to be created.\n                           (e.g. -cx\"K[136]\" for\
  \ static mod of +6 heavy lysines, -cx\"MM[147]\" for variable mod of methionine\
  \ oxidation.)\n\n         OTHER ADVANCED OPTIONS\n         Type \"spectrast -c_\"\
  \ for a full list of advanced (and obscure and not-so-useful) options.\n\n\n\n(II)\
  \ SEARCH MODE \nUsage: spectrast [ options ] <SearchFileName1> [ <SearchFileName2>\
  \ ... <SearchFileNameN> ]\nwhere: SearchFileNameX = Name(s) of file containing unknown\
  \ spectra to be searched.\n                         (Extension specifies format\
  \ of file. Supports .mzXML, .mzData, .dta and .msp)\n\nOptions: GENERAL OPTIONS\n\
  \         -sF<file>    Read search options from file. \n                       \
  \    If <file> is not given, \"spectrast.params\" is assumed.\n                \
  \           NOTE: All options set in the file will be overridden by command-line\
  \ options, if specified.\n         -sL<file>    Specify library file.\n        \
  \                   <file> must have .splib extension. The existence of the corresponding\
  \ .spidx file of the same name\n                           in the same directory\
  \ is assumed.\n         -sD<file>    Specify a sequence database file.\n       \
  \                    <file> must be in .fasta format. This will not affect the search\
  \ in any way,\n                           but this information will be included\
  \ in the output for any downstream data processing.\n         -sT<type>    Specify\
  \ the type of the sequence database file.\n                           <type> must\
  \ be either \"AA\" or \"DNA\".\n         -sR          Cache all entries in RAM.\
  \ (Turn off with -sR!)\n                           Requires a lot of memory (the\
  \ library will usually be loaded almost in its entirety), but speeds up search for\
  \ unsorted queries.\n         -sP<num>     Multi-threaded search (one thread per\
  \ file). Specify the number of threads to use. (Turn off with -sP!)\n          \
  \                 If multi-threading is enabled, -sR (Cache all entries in RAM)\
  \ is automatically turned on.\n         -sS<file>    Only search a subset of the\
  \ query spectra in the search file.\n                           Only query spectra\
  \ with names matching a line of <file> will be searched.\n\n         CANDIDATE SELECTION\
  \ AND SCORING OPTIONS\n         -sM<tol>     Specify precursor m/z tolerance. \n\
  \                           <tol> is the m/z tolerance within which candidate entries\
  \ are compared to the query.\n         -sA          Use isotopically averaged mass\
  \ instead of monoisotopic mass. (Turn of with -sA!)\n         -sz          Search\
  \ library spectra of all charge states, i.e., ignore specified charge state (if\
  \ any) of the query spectrum.\n\n         OUTPUT AND DISPLAY OPTIONS\n         -sE<ext>\
  \     Output format.\n                           The search result will be written\
  \ to a file with the same base name as the search file, with extension <ext>\n \
  \                          <ext> = txt : Fixed-width text format.\n            \
  \               <ext> = xls : Tab-delimited text format.\n                     \
  \      <ext> = pep.xml or xml or pepXML : PepXML format.\n                     \
  \      <ext> = html : HTML format.\n         -sO<dir>     Write output file to <dir>\
  \ instead of the same directory as the query data file.\n\n         OTHER ADVANCED\
  \ OPTIONS\n         Type \"spectrast -s_\" for a full list of advanced (and obscure\
  \ and not-so-useful) options.\n\n\n\nMiscellaneous Options:\n         -V       \
  \    Verbose mode.\n         -Q           Quiet mode.\n         -L<file>     Specify\
  \ name of log file. Default is \"spectrast.log\".\n         -M<file>     Specify\
  \ name of user-defined modifications file. Default is \"spectrast.usermods\".\n\n"
generated_using: []
