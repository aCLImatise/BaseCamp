&id004 !Command
positional:
- !Positional
  description: ''
  position: 0
  name: flags
  optional: true
named:
- !Flag
  description: buffering N groups before writing to file (default 100)
  synonyms:
  - -g
  - --buf-groups
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: buffering N rows for every group before writing to file (default 100000)
  synonyms:
  - -b
  - --buf-rows
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: comma separated key fields, column name or index. e.g. -f 1-3 or -f
    id,id2 or -F -f "group*" (default "1")
  synonyms:
  - -f
  - --fields
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
  synonyms:
  - -F
  - --fuzzy-fields
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ignore case
  synonyms:
  - -i
  - --ignore-case
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: force output gzipped file
  synonyms:
  - -G
  - --out-gzip
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: chunk size of CSV reader (default 50)
  synonyms:
  - -c
  - --chunk-size
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: lines starting with commment-character will be ignored. if your header
    row starts with '#', please assign "-C" another rare symbol, e.g. '$' (default
    "#")
  synonyms:
  - -C
  - --comment-char
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: delimiting character of the input CSV file (default ",")
  synonyms:
  - -d
  - --delimiter
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ignore empty rows
  synonyms:
  - -E
  - --ignore-empty-row
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ignore illegal rows
  synonyms:
  - -I
  - --ignore-illegal-row
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: file of input files list (one file per line), if given, they are appended
    to files from cli arguments
  synonyms:
  - --infile-list
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: if given, a quote may appear in an unquoted field and a non-doubled
    quote may appear in a quoted field
  synonyms:
  - -l
  - --lazy-quotes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specifies that the input CSV file does not have header row
  synonyms:
  - -H
  - --no-header-row
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: number of CPUs to use (default value depends on your computer) (default
    8)
  synonyms:
  - -j
  - --num-cpus
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: delimiting character of the output CSV file, e.g., -D $'\t' for tab
    (default ",")
  synonyms:
  - -D
  - --out-delimiter
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: out file ("-" for stdout, suffix .gz for gzipped out) (default "-")
  synonyms:
  - -o
  - --out-file
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: specifies that the output is delimited with tabs. Overrides "-D"
  synonyms:
  - -T
  - --out-tabs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specifies that the input CSV file is delimited with tabs. Overrides
    "-d" and "-D"
  synonyms:
  - -t
  - --tabs
  args: !EmptyFlagArg {}
  optional: true
command:
- csvtk
- split
parent: &id001 !Command
  positional: []
  named:
  - !Flag
    description: chunk size of CSV reader (default 50)
    synonyms:
    - -c
    - --chunk-size
    args: !SimpleFlagArg
      name: int
    optional: true
  - !Flag
    description: lines starting with commment-character will be ignored. if your header
      row starts with '#', please assign "-C" another rare symbol, e.g. '$' (default
      "#")
    synonyms:
    - -C
    - --comment-char
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: delimiting character of the input CSV file (default ",")
    synonyms:
    - -d
    - --delimiter
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: ignore empty rows
    synonyms:
    - -E
    - --ignore-empty-row
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ignore illegal rows
    synonyms:
    - -I
    - --ignore-illegal-row
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: file of input files list (one file per line), if given, they are
      appended to files from cli arguments
    synonyms:
    - --infile-list
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: if given, a quote may appear in an unquoted field and a non-doubled
      quote may appear in a quoted field
    synonyms:
    - -l
    - --lazy-quotes
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: specifies that the input CSV file does not have header row
    synonyms:
    - -H
    - --no-header-row
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: number of CPUs to use (default value depends on your computer) (default
      8)
    synonyms:
    - -j
    - --num-cpus
    args: !SimpleFlagArg
      name: int
    optional: true
  - !Flag
    description: delimiting character of the output CSV file, e.g., -D $'\t' for tab
      (default ",")
    synonyms:
    - -D
    - --out-delimiter
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: out file ("-" for stdout, suffix .gz for gzipped out) (default "-")
    synonyms:
    - -o
    - --out-file
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specifies that the output is delimited with tabs. Overrides "-D"
    synonyms:
    - -T
    - --out-tabs
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: specifies that the input CSV file is delimited with tabs. Overrides
      "-d" and "-D"
    synonyms:
    - -t
    - --tabs
    args: !EmptyFlagArg {}
    optional: true
  command:
  - csvtk
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: delete a pattern right after being matched, this keeps the firstly
        matched data and speedups when using regular expressions
      synonyms:
      - --delete-matched
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: comma separated key fields, column name or index. e.g. -f 1-3 or
        -f id,id2 or -F -f "group*" (default "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: invert match
      synonyms:
      - -v
      - --invert
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: print line number as the first column ("n")
      synonyms:
      - -n
      - --line-number
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: no highlight
      synonyms:
      - -N
      - --no-highlight
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: query pattern (multiple values supported)
      synonyms:
      - -p
      - --pattern
      args: !SimpleFlagArg
        name: strings
      optional: true
    - !Flag
      description: pattern files (one pattern per line)
      synonyms:
      - -P
      - --pattern-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: patterns are regular expression
      synonyms:
      - -r
      - --use-regexp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose output
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - grep
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for grep
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "grep data by selected fields with patterns/regular expressions\n\n\
      Usage:\n  csvtk grep [flags]\n\nFlags:\n      --delete-matched        delete\
      \ a pattern right after being matched, this keeps the firstly matched data and\
      \ speedups when using regular expressions\n  -f, --fields string         comma\
      \ separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F\
      \ -f \"group*\" (default \"1\")\n  -F, --fuzzy-fields          using fuzzy fields,\
      \ e.g., -F -f \"*name\" or -F -f \"id123*\"\n  -h, --help                  help\
      \ for grep\n  -i, --ignore-case           ignore case\n  -v, --invert      \
      \          invert match\n  -n, --line-number           print line number as\
      \ the first column (\"n\")\n  -N, --no-highlight          no highlight\n  -p,\
      \ --pattern strings       query pattern (multiple values supported)\n  -P, --pattern-file\
      \ string   pattern files (one pattern per line)\n  -r, --use-regexp        \
      \    patterns are regular expression\n      --verbose               verbose\
      \ output\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size of CSV\
      \ reader (default 50)\n  -C, --comment-char string    lines starting with commment-character\
      \ will be ignored. if your header row starts with '#', please assign \"-C\"\
      \ another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string  \
      \     delimiting character of the input CSV file (default \",\")\n  -E, --ignore-empty-row\
      \       ignore empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n\
      \      --infile-list string     file of input files list (one file per line),\
      \ if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
      \            if given, a quote may appear in an unquoted field and a non-doubled\
      \ quote may appear in a quoted field\n  -H, --no-header-row          specifies\
      \ that the input CSV file does not have header row\n  -j, --num-cpus int   \
      \        number of CPUs to use (default value depends on your computer) (default\
      \ 8)\n  -D, --out-delimiter string   delimiting character of the output CSV\
      \ file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file string   \
      \     out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\"\
      )\n  -T, --out-tabs               specifies that the output is delimited with\
      \ tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that the\
      \ input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: &id002
    - --help
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: print first N records (default 10)
      synonyms:
      - -n
      - --number
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - head
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for head
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "print first N records\n\nUsage:\n  csvtk head [flags]\n\nFlags:\n\
      \  -h, --help         help for head\n  -n, --number int   print first N records\
      \ (default 10)\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size of\
      \ CSV reader (default 50)\n  -C, --comment-char string    lines starting with\
      \ commment-character will be ignored. if your header row starts with '#', please\
      \ assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter\
      \ string       delimiting character of the input CSV file (default \",\")\n\
      \  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB (default
        "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - inter
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for inter
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "intersection of multiple files\n\nAttention:\n\n  1. fields in all\
      \ files should be the same, \n     if not, extracting to another file using\
      \ \"csvtk cut\".\n\nUsage:\n  csvtk inter [flags]\n\nFlags:\n  -f, --fields\
      \ string   select only these fields. e.g -f 1,2 or -f columnA,columnB (default\
      \ \"1\")\n  -F, --fuzzy-fields    using fuzzy fields, e.g., -F -f \"*name\"\
      \ or -F -f \"id123*\"\n  -h, --help            help for inter\n  -i, --ignore-case\
      \     ignore case\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size\
      \ of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
      \ with commment-character will be ignored. if your header row starts with '#',\
      \ please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d,\
      \ --delimiter string       delimiting character of the input CSV file (default\
      \ \",\")\n  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: Semicolon separated key fields of all files, if given one, we think
        all the files have the same key columns. Fields of different files should
        be separated by ";", e.g -f "1;2" or -f "A,B;C,D" or -f id (default "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: keep unmatched data of the first file (left join)
      synonyms:
      - -k
      - --keep-unmatched
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: left join, equals to -k/--keep-unmatched, exclusive with --outer-join
      synonyms:
      - -L
      - --left-join
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: content for filling NA data
      synonyms:
      - --na
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: outer join, exclusive with --left-join
      synonyms:
      - -O
      - --outer-join
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - join
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for join
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "join files by selected fields (inner, left and outer join).\n\nAttention:\n\
      \n  1. Multiple keys supported\n  2. Default operation is inner join, use --left-join\
      \ for left join \n     and --outer-join for outer join.\n\nUsage:\n  csvtk join\
      \ [flags]\n\nAliases:\n  join, merge\n\nFlags:\n  -f, --fields string    Semicolon\
      \ separated key fields of all files, if given one, we think all the files have\
      \ the same key columns. Fields of different files should be separated by \"\
      ;\", e.g -f \"1;2\" or -f \"A,B;C,D\" or -f id (default \"1\")\n  -F, --fuzzy-fields\
      \     using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\"\n  -h, --help\
      \             help for join\n  -i, --ignore-case      ignore case\n  -k, --keep-unmatched\
      \   keep unmatched data of the first file (left join)\n  -L, --left-join   \
      \     left join, equals to -k/--keep-unmatched, exclusive with --outer-join\n\
      \      --na string        content for filling NA data\n  -O, --outer-join  \
      \     outer join, exclusive with --left-join\n\nGlobal Flags:\n  -c, --chunk-size\
      \ int         chunk size of CSV reader (default 50)\n  -C, --comment-char string\
      \    lines starting with commment-character will be ignored. if your header\
      \ row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB (default
        "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: for unmatched data, use blank instead of original data
      synonyms:
      - --na
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: new column name
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: search regular expression with capture bracket. e.g. (default "^(.+)$")
      synonyms:
      - -p
      - --pattern
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: remove input column
      synonyms:
      - -R
      - --remove
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - mutate
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for mutate
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "create new column from selected fields by regular expression\n\nUsage:\n\
      \  csvtk mutate [flags]\n\nFlags:\n  -f, --fields string    select only these\
      \ fields. e.g -f 1,2 or -f columnA,columnB (default \"1\")\n  -h, --help   \
      \          help for mutate\n  -i, --ignore-case      ignore case\n      --na\
      \               for unmatched data, use blank instead of original data\n  -n,\
      \ --name string      new column name\n  -p, --pattern string   search regular\
      \ expression with capture bracket. e.g. (default \"^(.+)$\")\n  -R, --remove\
      \           remove input column\n\nGlobal Flags:\n  -c, --chunk-size int   \
      \      chunk size of CSV reader (default 50)\n  -C, --comment-char string  \
      \  lines starting with commment-character will be ignored. if your header row\
      \ starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: number of digits after the dot (default 2)
      synonyms:
      - -L
      - --digits
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: treate digits as string to avoid converting big digits into scientific
        notation
      synonyms:
      - -s
      - --digits-as-string
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "artithmetic/string expressions. e.g. \"'string'\", '\"abc\"',\
        \ ' $a + \"-\" + $b ', '$1 + $2', '$a / $b', ' $1 > 100 ? \"big\" : \"small\"\
        \ '"
      synonyms:
      - -e
      - --expression
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: new column name
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - mutate2
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for mutate2
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "create new column from selected fields by awk-like artithmetic/string\
      \ expressions\n\nThe artithmetic/string expression is supported by:\n\n  https://github.com/Knetic/govaluate\n\
      \nSupported operators and types:\n\n  Modifiers: + - / * & | ^ ** % >> <<\n\
      \  Comparators: > >= < <= == != =~ !~\n  Logical ops: || &&\n  Numeric constants,\
      \ as 64-bit floating point (12345.678)\n  String constants (single quotes: 'foobar')\n\
      \  Date constants (single quotes)\n  Boolean constants: true false\n  Parenthesis\
      \ to control order of evaluation ( )\n  Arrays (anything separated by , within\
      \ parenthesis: (1, 2, 'foo'))\n  Prefixes: ! - ~\n  Ternary conditional: ? :\n\
      \  Null coalescence: ??\n\nUsage:\n  csvtk mutate2 [flags]\n\nFlags:\n  -L,\
      \ --digits int          number of digits after the dot (default 2)\n  -s, --digits-as-string\
      \    treate digits as string to avoid converting big digits into scientific\
      \ notation\n  -e, --expression string   artithmetic/string expressions. e.g.\
      \ \"'string'\", '\"abc\"', ' $a + \"-\" + $b ', '$1 + $2', '$a / $b', ' $1 >\
      \ 100 ? \"big\" : \"small\" '\n  -h, --help                help for mutate2\n\
      \  -n, --name string         new column name\n\nGlobal Flags:\n  -c, --chunk-size\
      \ int         chunk size of CSV reader (default 50)\n  -C, --comment-char string\
      \    lines starting with commment-character will be ignored. if your header\
      \ row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - &id003 !Command
    positional: []
    named:
    - !Flag
      description: axis width (default 1.5)
      synonyms:
      - --axis-width
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: column index or column name of data (default "1")
      synonyms:
      - -f
      - --data-field
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: 'image format for stdout when flag -o/--out-file not given. available
        values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")'
      synonyms:
      - --format
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: column index or column name of group
      synonyms:
      - -g
      - --group-field
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: Figure height (default 4.5)
      synonyms:
      - --height
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: label font size (default 14)
      synonyms:
      - --label-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: axis tick width (default 1.5)
      synonyms:
      - --tick-width
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: Figure title
      synonyms:
      - --title
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: title font size (default 16)
      synonyms:
      - --title-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: Figure width (default 6)
      synonyms:
      - --width
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: maximum value of X axis
      synonyms:
      - --x-max
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: minimum value of X axis
      synonyms:
      - --x-min
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: x label text
      synonyms:
      - --xlab
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: maximum value of Y axis
      synonyms:
      - --y-max
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: minimum value of Y axis
      synonyms:
      - --y-min
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: y label text
      synonyms:
      - --ylab
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - plot
    parent: *id001
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: flags
        optional: true
      named:
      - !Flag
        description: box width
        synonyms:
        - --box-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: horize box plot
        synonyms:
        - --horiz
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: axis width (default 1.5)
        synonyms:
        - --axis-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: chunk size of CSV reader (default 50)
        synonyms:
        - -c
        - --chunk-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: lines starting with commment-character will be ignored. if your
          header row starts with '#', please assign "-C" another rare symbol, e.g.
          '$' (default "#")
        synonyms:
        - -C
        - --comment-char
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of data (default "1")
        synonyms:
        - -f
        - --data-field
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: delimiting character of the input CSV file (default ",")
        synonyms:
        - -d
        - --delimiter
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: 'image format for stdout when flag -o/--out-file not given. available
          values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")'
        synonyms:
        - --format
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of group
        synonyms:
        - -g
        - --group-field
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: Figure height (default 4.5)
        synonyms:
        - --height
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: ignore empty rows
        synonyms:
        - -E
        - --ignore-empty-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ignore illegal rows
        synonyms:
        - -I
        - --ignore-illegal-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: file of input files list (one file per line), if given, they
          are appended to files from cli arguments
        synonyms:
        - --infile-list
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: label font size (default 14)
        synonyms:
        - --label-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: if given, a quote may appear in an unquoted field and a non-doubled
          quote may appear in a quoted field
        synonyms:
        - -l
        - --lazy-quotes
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: specifies that the input CSV file does not have header row
        synonyms:
        - -H
        - --no-header-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: number of CPUs to use (default value depends on your computer)
          (default 8)
        synonyms:
        - -j
        - --num-cpus
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: delimiting character of the output CSV file, e.g., -D $'\t' for
          tab (default ",")
        synonyms:
        - -D
        - --out-delimiter
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: out file ("-" for stdout, suffix .gz for gzipped out) (default
          "-")
        synonyms:
        - -o
        - --out-file
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specifies that the output is delimited with tabs. Overrides "-D"
        synonyms:
        - -T
        - --out-tabs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: specifies that the input CSV file is delimited with tabs. Overrides
          "-d" and "-D"
        synonyms:
        - -t
        - --tabs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: axis tick width (default 1.5)
        synonyms:
        - --tick-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: Figure title
        synonyms:
        - --title
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: title font size (default 16)
        synonyms:
        - --title-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: Figure width (default 6)
        synonyms:
        - --width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: maximum value of X axis
        synonyms:
        - --x-max
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: minimum value of X axis
        synonyms:
        - --x-min
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: x label text
        synonyms:
        - --xlab
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: maximum value of Y axis
        synonyms:
        - --y-max
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: minimum value of Y axis
        synonyms:
        - --y-min
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: y label text
        synonyms:
        - --ylab
        args: !SimpleFlagArg
          name: string
        optional: true
      command:
      - csvtk
      - plot
      - box
      parent: *id003
      subcommands: []
      help_flag: !Flag
        description: help for box
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "plot boxplot\n\nNotes:\n\n  1. Output file can be set by flag -o/--out-file.\n\
        \  2. File format is determined by the out file suffix.\n     Supported formats:\
        \ eps, jpg|jpeg, pdf, png, svg, and tif|tiff\n  3. If flag -o/--out-file not\
        \ set (default), image is written to stdout,\n     you can display the image\
        \ by pipping to \"display\" command of Imagemagic\n     or just redirect to\
        \ file.\n\nUsage:\n  csvtk plot box [flags]\n\nFlags:\n      --box-width float\
        \   box width\n  -h, --help              help for box\n      --horiz     \
        \        horize box plot\n\nGlobal Flags:\n      --axis-width float      \
        \ axis width (default 1.5)\n  -c, --chunk-size int         chunk size of CSV\
        \ reader (default 50)\n  -C, --comment-char string    lines starting with\
        \ commment-character will be ignored. if your header row starts with '#',\
        \ please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -f,\
        \ --data-field string      column index or column name of data (default \"\
        1\")\n  -d, --delimiter string       delimiting character of the input CSV\
        \ file (default \",\")\n      --format string          image format for stdout\
        \ when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf,\
        \ png, svg, and tif|tiff. (default \"png\")\n  -g, --group-field string  \
        \   column index or column name of group\n      --height float           Figure\
        \ height (default 4.5)\n  -E, --ignore-empty-row       ignore empty rows\n\
        \  -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
        \     file of input files list (one file per line), if given, they are appended\
        \ to files from cli arguments\n      --label-size int         label font size\
        \ (default 14)\n  -l, --lazy-quotes            if given, a quote may appear\
        \ in an unquoted field and a non-doubled quote may appear in a quoted field\n\
        \  -H, --no-header-row          specifies that the input CSV file does not\
        \ have header row\n  -j, --num-cpus int           number of CPUs to use (default\
        \ value depends on your computer) (default 8)\n  -D, --out-delimiter string\
        \   delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default\
        \ \",\")\n  -o, --out-file string        out file (\"-\" for stdout, suffix\
        \ .gz for gzipped out) (default \"-\")\n  -T, --out-tabs               specifies\
        \ that the output is delimited with tabs. Overrides \"-D\"\n  -t, --tabs \
        \                  specifies that the input CSV file is delimited with tabs.\
        \ Overrides \"-d\" and \"-D\"\n      --tick-width float       axis tick width\
        \ (default 1.5)\n      --title string           Figure title\n      --title-size\
        \ int         title font size (default 16)\n      --width float          \
        \  Figure width (default 6)\n      --x-max string           maximum value\
        \ of X axis\n      --x-min string           minimum value of X axis\n    \
        \  --xlab string            x label text\n      --y-max string           maximum\
        \ value of Y axis\n      --y-min string           minimum value of Y axis\n\
        \      --ylab string            y label text\n"
      generated_using: *id002
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: flags
        optional: true
      named:
      - !Flag
        description: number of bins (default 50)
        synonyms:
        - --bins
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: color index, 1-7 (default 1)
        synonyms:
        - --color-index
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: calculate percentiles
        synonyms:
        - --percentiles
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: axis width (default 1.5)
        synonyms:
        - --axis-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: chunk size of CSV reader (default 50)
        synonyms:
        - -c
        - --chunk-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: lines starting with commment-character will be ignored. if your
          header row starts with '#', please assign "-C" another rare symbol, e.g.
          '$' (default "#")
        synonyms:
        - -C
        - --comment-char
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of data (default "1")
        synonyms:
        - -f
        - --data-field
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: delimiting character of the input CSV file (default ",")
        synonyms:
        - -d
        - --delimiter
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: 'image format for stdout when flag -o/--out-file not given. available
          values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")'
        synonyms:
        - --format
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of group
        synonyms:
        - -g
        - --group-field
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: Figure height (default 4.5)
        synonyms:
        - --height
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: ignore empty rows
        synonyms:
        - -E
        - --ignore-empty-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ignore illegal rows
        synonyms:
        - -I
        - --ignore-illegal-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: file of input files list (one file per line), if given, they
          are appended to files from cli arguments
        synonyms:
        - --infile-list
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: label font size (default 14)
        synonyms:
        - --label-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: if given, a quote may appear in an unquoted field and a non-doubled
          quote may appear in a quoted field
        synonyms:
        - -l
        - --lazy-quotes
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: specifies that the input CSV file does not have header row
        synonyms:
        - -H
        - --no-header-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: number of CPUs to use (default value depends on your computer)
          (default 8)
        synonyms:
        - -j
        - --num-cpus
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: delimiting character of the output CSV file, e.g., -D $'\t' for
          tab (default ",")
        synonyms:
        - -D
        - --out-delimiter
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: out file ("-" for stdout, suffix .gz for gzipped out) (default
          "-")
        synonyms:
        - -o
        - --out-file
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specifies that the output is delimited with tabs. Overrides "-D"
        synonyms:
        - -T
        - --out-tabs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: specifies that the input CSV file is delimited with tabs. Overrides
          "-d" and "-D"
        synonyms:
        - -t
        - --tabs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: axis tick width (default 1.5)
        synonyms:
        - --tick-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: Figure title
        synonyms:
        - --title
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: title font size (default 16)
        synonyms:
        - --title-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: Figure width (default 6)
        synonyms:
        - --width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: maximum value of X axis
        synonyms:
        - --x-max
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: minimum value of X axis
        synonyms:
        - --x-min
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: x label text
        synonyms:
        - --xlab
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: maximum value of Y axis
        synonyms:
        - --y-max
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: minimum value of Y axis
        synonyms:
        - --y-min
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: y label text
        synonyms:
        - --ylab
        args: !SimpleFlagArg
          name: string
        optional: true
      command:
      - csvtk
      - plot
      - hist
      parent: *id003
      subcommands: []
      help_flag: !Flag
        description: help for hist
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "plot histogram\n\nNotes:\n\n  1. Output file can be set by flag\
        \ -o/--out-file.\n  2. File format is determined by the out file suffix.\n\
        \     Supported formats: eps, jpg|jpeg, pdf, png, svg, and tif|tiff\n  3.\
        \ If flag -o/--out-file not set (default), image is written to stdout,\n \
        \    you can display the image by pipping to \"display\" command of Imagemagic\n\
        \     or just redirect to file.\n\nUsage:\n  csvtk plot hist [flags]\n\nFlags:\n\
        \      --bins int          number of bins (default 50)\n      --color-index\
        \ int   color index, 1-7 (default 1)\n  -h, --help              help for hist\n\
        \      --percentiles       calculate percentiles\n\nGlobal Flags:\n      --axis-width\
        \ float       axis width (default 1.5)\n  -c, --chunk-size int         chunk\
        \ size of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
        \ with commment-character will be ignored. if your header row starts with\
        \ '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n\
        \  -f, --data-field string      column index or column name of data (default\
        \ \"1\")\n  -d, --delimiter string       delimiting character of the input\
        \ CSV file (default \",\")\n      --format string          image format for\
        \ stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg,\
        \ pdf, png, svg, and tif|tiff. (default \"png\")\n  -g, --group-field string\
        \     column index or column name of group\n      --height float         \
        \  Figure height (default 4.5)\n  -E, --ignore-empty-row       ignore empty\
        \ rows\n  -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list\
        \ string     file of input files list (one file per line), if given, they\
        \ are appended to files from cli arguments\n      --label-size int       \
        \  label font size (default 14)\n  -l, --lazy-quotes            if given,\
        \ a quote may appear in an unquoted field and a non-doubled quote may appear\
        \ in a quoted field\n  -H, --no-header-row          specifies that the input\
        \ CSV file does not have header row\n  -j, --num-cpus int           number\
        \ of CPUs to use (default value depends on your computer) (default 8)\n  -D,\
        \ --out-delimiter string   delimiting character of the output CSV file, e.g.,\
        \ -D $'\\t' for tab (default \",\")\n  -o, --out-file string        out file\
        \ (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs\
        \               specifies that the output is delimited with tabs. Overrides\
        \ \"-D\"\n  -t, --tabs                   specifies that the input CSV file\
        \ is delimited with tabs. Overrides \"-d\" and \"-D\"\n      --tick-width\
        \ float       axis tick width (default 1.5)\n      --title string        \
        \   Figure title\n      --title-size int         title font size (default\
        \ 16)\n      --width float            Figure width (default 6)\n      --x-max\
        \ string           maximum value of X axis\n      --x-min string         \
        \  minimum value of X axis\n      --xlab string            x label text\n\
        \      --y-max string           maximum value of Y axis\n      --y-min string\
        \           minimum value of Y axis\n      --ylab string            y label\
        \ text\n"
      generated_using: *id002
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: flags
        optional: true
      named:
      - !Flag
        description: color index, 1-7 (default 1)
        synonyms:
        - --color-index
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: column index or column name of X for command line
        synonyms:
        - -x
        - --data-field-x
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of Y for command line
        synonyms:
        - -y
        - --data-field-y
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: locate legend along the left edge of the plot
        synonyms:
        - --legend-left
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: locate legend along the top edge of the plot
        synonyms:
        - --legend-top
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: line width (default 1.5)
        synonyms:
        - --line-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: point size (default 3)
        synonyms:
        - --point-size
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: only plot points
        synonyms:
        - --scatter
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: axis width (default 1.5)
        synonyms:
        - --axis-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: chunk size of CSV reader (default 50)
        synonyms:
        - -c
        - --chunk-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: lines starting with commment-character will be ignored. if your
          header row starts with '#', please assign "-C" another rare symbol, e.g.
          '$' (default "#")
        synonyms:
        - -C
        - --comment-char
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of data (default "1")
        synonyms:
        - -f
        - --data-field
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: delimiting character of the input CSV file (default ",")
        synonyms:
        - -d
        - --delimiter
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: 'image format for stdout when flag -o/--out-file not given. available
          values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")'
        synonyms:
        - --format
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: column index or column name of group
        synonyms:
        - -g
        - --group-field
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: Figure height (default 4.5)
        synonyms:
        - --height
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: ignore empty rows
        synonyms:
        - -E
        - --ignore-empty-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ignore illegal rows
        synonyms:
        - -I
        - --ignore-illegal-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: file of input files list (one file per line), if given, they
          are appended to files from cli arguments
        synonyms:
        - --infile-list
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: label font size (default 14)
        synonyms:
        - --label-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: if given, a quote may appear in an unquoted field and a non-doubled
          quote may appear in a quoted field
        synonyms:
        - -l
        - --lazy-quotes
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: specifies that the input CSV file does not have header row
        synonyms:
        - -H
        - --no-header-row
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: number of CPUs to use (default value depends on your computer)
          (default 8)
        synonyms:
        - -j
        - --num-cpus
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: delimiting character of the output CSV file, e.g., -D $'\t' for
          tab (default ",")
        synonyms:
        - -D
        - --out-delimiter
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: out file ("-" for stdout, suffix .gz for gzipped out) (default
          "-")
        synonyms:
        - -o
        - --out-file
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specifies that the output is delimited with tabs. Overrides "-D"
        synonyms:
        - -T
        - --out-tabs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: specifies that the input CSV file is delimited with tabs. Overrides
          "-d" and "-D"
        synonyms:
        - -t
        - --tabs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: axis tick width (default 1.5)
        synonyms:
        - --tick-width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: Figure title
        synonyms:
        - --title
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: title font size (default 16)
        synonyms:
        - --title-size
        args: !SimpleFlagArg
          name: int
        optional: true
      - !Flag
        description: Figure width (default 6)
        synonyms:
        - --width
        args: !SimpleFlagArg
          name: float
        optional: true
      - !Flag
        description: maximum value of X axis
        synonyms:
        - --x-max
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: minimum value of X axis
        synonyms:
        - --x-min
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: x label text
        synonyms:
        - --xlab
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: maximum value of Y axis
        synonyms:
        - --y-max
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: minimum value of Y axis
        synonyms:
        - --y-min
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: y label text
        synonyms:
        - --ylab
        args: !SimpleFlagArg
          name: string
        optional: true
      command:
      - csvtk
      - plot
      - line
      parent: *id003
      subcommands: []
      help_flag: !Flag
        description: help for line
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "line plot and scatter plot\n\nNotes:\n\n  1. Output file can be\
        \ set by flag -o/--out-file.\n  2. File format is determined by the out file\
        \ suffix.\n     Supported formats: eps, jpg|jpeg, pdf, png, svg, and tif|tiff\n\
        \  3. If flag -o/--out-file not set (default), image is written to stdout,\n\
        \     you can display the image by pipping to \"display\" command of Imagemagic\n\
        \     or just redirect to file.\n\nUsage:\n  csvtk plot line [flags]\n\nFlags:\n\
        \      --color-index int       color index, 1-7 (default 1)\n  -x, --data-field-x\
        \ string   column index or column name of X for command line\n  -y, --data-field-y\
        \ string   column index or column name of Y for command line\n  -h, --help\
        \                  help for line\n      --legend-left           locate legend\
        \ along the left edge of the plot\n      --legend-top            locate legend\
        \ along the top edge of the plot\n      --line-width float      line width\
        \ (default 1.5)\n      --point-size float      point size (default 3)\n  \
        \    --scatter               only plot points\n\nGlobal Flags:\n      --axis-width\
        \ float       axis width (default 1.5)\n  -c, --chunk-size int         chunk\
        \ size of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
        \ with commment-character will be ignored. if your header row starts with\
        \ '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n\
        \  -f, --data-field string      column index or column name of data (default\
        \ \"1\")\n  -d, --delimiter string       delimiting character of the input\
        \ CSV file (default \",\")\n      --format string          image format for\
        \ stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg,\
        \ pdf, png, svg, and tif|tiff. (default \"png\")\n  -g, --group-field string\
        \     column index or column name of group\n      --height float         \
        \  Figure height (default 4.5)\n  -E, --ignore-empty-row       ignore empty\
        \ rows\n  -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list\
        \ string     file of input files list (one file per line), if given, they\
        \ are appended to files from cli arguments\n      --label-size int       \
        \  label font size (default 14)\n  -l, --lazy-quotes            if given,\
        \ a quote may appear in an unquoted field and a non-doubled quote may appear\
        \ in a quoted field\n  -H, --no-header-row          specifies that the input\
        \ CSV file does not have header row\n  -j, --num-cpus int           number\
        \ of CPUs to use (default value depends on your computer) (default 8)\n  -D,\
        \ --out-delimiter string   delimiting character of the output CSV file, e.g.,\
        \ -D $'\\t' for tab (default \",\")\n  -o, --out-file string        out file\
        \ (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs\
        \               specifies that the output is delimited with tabs. Overrides\
        \ \"-D\"\n  -t, --tabs                   specifies that the input CSV file\
        \ is delimited with tabs. Overrides \"-d\" and \"-D\"\n      --tick-width\
        \ float       axis tick width (default 1.5)\n      --title string        \
        \   Figure title\n      --title-size int         title font size (default\
        \ 16)\n      --width float            Figure width (default 6)\n      --x-max\
        \ string           maximum value of X axis\n      --x-min string         \
        \  minimum value of X axis\n      --xlab string            x label text\n\
        \      --y-max string           maximum value of Y axis\n      --y-min string\
        \           minimum value of Y axis\n      --ylab string            y label\
        \ text\n"
      generated_using: *id002
    help_flag: !Flag
      description: help for plot
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "plot common figures\n\nNotes:\n\n  1. Output file can be set by flag\
      \ -o/--out-file.\n  2. File format is determined by the out file suffix.\n \
      \    Supported formats: eps, jpg|jpeg, pdf, png, svg, and tif|tiff\n  3. If\
      \ flag -o/--out-file not set (default), image is written to stdout,\n     you\
      \ can display the image by pipping to \"display\" command of Imagemagic\n  \
      \   or just redirect to file.\n\nUsage:\n  csvtk plot [command]\n\nAvailable\
      \ Commands:\n  box         plot boxplot\n  hist        plot histogram\n  line\
      \        line plot and scatter plot\n\nFlags:\n      --axis-width float    \
      \ axis width (default 1.5)\n  -f, --data-field string    column index or column\
      \ name of data (default \"1\")\n      --format string        image format for\
      \ stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg,\
      \ pdf, png, svg, and tif|tiff. (default \"png\")\n  -g, --group-field string\
      \   column index or column name of group\n      --height float         Figure\
      \ height (default 4.5)\n  -h, --help                 help for plot\n      --label-size\
      \ int       label font size (default 14)\n      --tick-width float     axis\
      \ tick width (default 1.5)\n      --title string         Figure title\n    \
      \  --title-size int       title font size (default 16)\n      --width float\
      \          Figure width (default 6)\n      --x-max string         maximum value\
      \ of X axis\n      --x-min string         minimum value of X axis\n      --xlab\
      \ string          x label text\n      --y-max string         maximum value of\
      \ Y axis\n      --y-min string         minimum value of Y axis\n      --ylab\
      \ string          y label text\n\nGlobal Flags:\n  -c, --chunk-size int    \
      \     chunk size of CSV reader (default 50)\n  -C, --comment-char string   \
      \ lines starting with commment-character will be ignored. if your header row\
      \ starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n\nUse \"csvtk plot [command] --help\" for\
      \ more information about a command.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: align right
      synonyms:
      - -r
      - --align-right
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: max width
      synonyms:
      - -W
      - --max-width
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: min width
      synonyms:
      - -w
      - --min-width
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: fields/columns separator (default "   ")
      synonyms:
      - -s
      - --separator
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - pretty
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for pretty
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "convert CSV to readable aligned table\n\nAttention:\n\n  pretty treats\
      \ the first row as header line and requires them to be unique\n\nUsage:\n  csvtk\
      \ pretty [flags]\n\nFlags:\n  -r, --align-right        align right\n  -h, --help\
      \               help for pretty\n  -W, --max-width int      max width\n  -w,\
      \ --min-width int      min width\n  -s, --separator string   fields/columns\
      \ separator (default \"   \")\n\nGlobal Flags:\n  -c, --chunk-size int     \
      \    chunk size of CSV reader (default 50)\n  -C, --comment-char string    lines\
      \ starting with commment-character will be ignored. if your header row starts\
      \ with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\"\
      )\n  -d, --delimiter string       delimiting character of the input CSV file\
      \ (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: comma separated new names
      synonyms:
      - -n
      - --names
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - rename
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for rename
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "rename column names with new names\n\nUsage:\n  csvtk rename [flags]\n\
      \nFlags:\n  -f, --fields string   select only these fields. e.g -f 1,2 or -f\
      \ columnA,columnB\n  -F, --fuzzy-fields    using fuzzy fields, e.g., -F -f \"\
      *name\" or -F -f \"id123*\"\n  -h, --help            help for rename\n  -n,\
      \ --names string    comma separated new names\n\nGlobal Flags:\n  -c, --chunk-size\
      \ int         chunk size of CSV reader (default 50)\n  -C, --comment-char string\
      \    lines starting with commment-character will be ignored. if your header\
      \ row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: keep the key as value when no value found for the key
      synonyms:
      - -K
      - --keep-key
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: capture variable index of key (1-based) (default 1)
      synonyms:
      - --key-capt-idx
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: replacement for key with no corresponding value
      synonyms:
      - --key-miss-repl
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: tab-delimited key-value file for replacing key with value when
        using "{kv}" in -r (--replacement)
      synonyms:
      - -k
      - --kv-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: treat all columns except 1th one as value for kv-file with more
        than 2 columns
      synonyms:
      - -A
      - --kv-file-all-left-columns-as-value
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: search regular expression
      synonyms:
      - -p
      - --pattern
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: 'renamement. supporting capture variables.  e.g. $1 represents
        the text of the first submatch. ATTENTION: use SINGLE quote NOT double quotes
        in *nix OS or use the \ escape character. Ascending number is also supported
        by "{nr}".use ${1} instead of $1 when {kv} given!'
      synonyms:
      - -r
      - --replacement
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: starting number when using {nr} in replacement (default 1)
      synonyms:
      - -n
      - --start-num
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - rename2
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for rename2
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "rename column names by regular expression\n\nSpecial replacement symbols:\n\
      \n  {nr}  ascending number, starting from --start-num\n  {kv}  Corresponding\
      \ value of the key (captured variable $n) by key-value file,\n        n can\
      \ be specified by flag --key-capt-idx (default: 1)\n\nUsage:\n  csvtk rename2\
      \ [flags]\n\nFlags:\n  -f, --fields string                       select only\
      \ these fields. e.g -f 1,2 or -f columnA,columnB\n  -F, --fuzzy-fields     \
      \                   using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\"\
      \n  -h, --help                                help for rename2\n  -i, --ignore-case\
      \                         ignore case\n  -K, --keep-key                    \
      \        keep the key as value when no value found for the key\n      --key-capt-idx\
      \ int                    capture variable index of key (1-based) (default 1)\n\
      \      --key-miss-repl string                replacement for key with no corresponding\
      \ value\n  -k, --kv-file string                      tab-delimited key-value\
      \ file for replacing key with value when using \"{kv}\" in -r (--replacement)\n\
      \  -A, --kv-file-all-left-columns-as-value   treat all columns except 1th one\
      \ as value for kv-file with more than 2 columns\n  -p, --pattern string    \
      \                  search regular expression\n  -r, --replacement string   \
      \               renamement. supporting capture variables.  e.g. $1 represents\
      \ the text of the first submatch. ATTENTION: use SINGLE quote NOT double quotes\
      \ in *nix OS or use the \\ escape character. Ascending number is also supported\
      \ by \"{nr}\".use ${1} instead of $1 when {kv} given!\n  -n, --start-num int\
      \                       starting number when using {nr} in replacement (default\
      \ 1)\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size of CSV reader\
      \ (default 50)\n  -C, --comment-char string    lines starting with commment-character\
      \ will be ignored. if your header row starts with '#', please assign \"-C\"\
      \ another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string  \
      \     delimiting character of the input CSV file (default \",\")\n  -E, --ignore-empty-row\
      \       ignore empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n\
      \      --infile-list string     file of input files list (one file per line),\
      \ if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
      \            if given, a quote may appear in an unquoted field and a non-doubled\
      \ quote may appear in a quoted field\n  -H, --no-header-row          specifies\
      \ that the input CSV file does not have header row\n  -j, --num-cpus int   \
      \        number of CPUs to use (default value depends on your computer) (default\
      \ 8)\n  -D, --out-delimiter string   delimiting character of the output CSV\
      \ file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file string   \
      \     out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\"\
      )\n  -T, --out-tabs               specifies that the output is delimited with\
      \ tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that the\
      \ input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB (default
        "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: keep the key as value when no value found for the key
      synonyms:
      - -K
      - --keep-key
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: capture variable index of key (1-based) (default 1)
      synonyms:
      - --key-capt-idx
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: replacement for key with no corresponding value
      synonyms:
      - --key-miss-repl
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: tab-delimited key-value file for replacing key with value when
        using "{kv}" in -r (--replacement)
      synonyms:
      - -k
      - --kv-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: treat all columns except 1th one as value for kv-file with more
        than 2 columns
      synonyms:
      - -A
      - --kv-file-all-left-columns-as-value
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: minimum width for {nr} in flag -r/--replacement. e.g., formating
        "1" to "001" by --nr-width 3 (default 1)
      synonyms:
      - --nr-width
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: search regular expression
      synonyms:
      - -p
      - --pattern
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: 'replacement. supporting capture variables.  e.g. $1 represents
        the text of the first submatch. ATTENTION: for *nix OS, use SINGLE quote NOT
        double quotes or use the \ escape character. Record number is also supported
        by "{nr}".use ${1} instead of $1 when {kv} given!'
      synonyms:
      - -r
      - --replacement
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - replace
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for replace
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "replace data of selected fields by regular expression\n\nNote that\
      \ the replacement supports capture variables.\ne.g. $1 represents the text of\
      \ the first submatch.\nATTENTION: use SINGLE quote NOT double quotes in *nix\
      \ OS.\n\nExamples: Adding space to all bases.\n\n  csvtk replace -p \"(.)\"\
      \ -r '$1 ' -s\n\nOr use the \\ escape character.\n\n  csvtk replace -p \"(.)\"\
      \ -r \"\\$1 \" -s\n\nmore on: http://shenwei356.github.io/csvtk/usage/#replace\n\
      \nSpecial replacement symbols:\n\n  {nr}    Record number, starting from 1\n\
      \  {kv}    Corresponding value of the key (captured variable $n) by key-value\
      \ file,\n          n can be specified by flag --key-capt-idx (default: 1)\n\n\
      Usage:\n  csvtk replace [flags]\n\nFlags:\n  -f, --fields string           \
      \            select only these fields. e.g -f 1,2 or -f columnA,columnB (default\
      \ \"1\")\n  -F, --fuzzy-fields                        using fuzzy fields, e.g.,\
      \ -F -f \"*name\" or -F -f \"id123*\"\n  -h, --help                        \
      \        help for replace\n  -i, --ignore-case                         ignore\
      \ case\n  -K, --keep-key                            keep the key as value when\
      \ no value found for the key\n      --key-capt-idx int                    capture\
      \ variable index of key (1-based) (default 1)\n      --key-miss-repl string\
      \                replacement for key with no corresponding value\n  -k, --kv-file\
      \ string                      tab-delimited key-value file for replacing key\
      \ with value when using \"{kv}\" in -r (--replacement)\n  -A, --kv-file-all-left-columns-as-value\
      \   treat all columns except 1th one as value for kv-file with more than 2 columns\n\
      \      --nr-width int                        minimum width for {nr} in flag\
      \ -r/--replacement. e.g., formating \"1\" to \"001\" by --nr-width 3 (default\
      \ 1)\n  -p, --pattern string                      search regular expression\n\
      \  -r, --replacement string                  replacement. supporting capture\
      \ variables.  e.g. $1 represents the text of the first submatch. ATTENTION:\
      \ for *nix OS, use SINGLE quote NOT double quotes or use the \\ escape character.\
      \ Record number is also supported by \"{nr}\".use ${1} instead of $1 when {kv}\
      \ given!\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size of CSV\
      \ reader (default 50)\n  -C, --comment-char string    lines starting with commment-character\
      \ will be ignored. if your header row starts with '#', please assign \"-C\"\
      \ another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string  \
      \     delimiting character of the input CSV file (default \",\")\n  -E, --ignore-empty-row\
      \       ignore empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n\
      \      --infile-list string     file of input files list (one file per line),\
      \ if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
      \            if given, a quote may appear in an unquoted field and a non-doubled\
      \ quote may appear in a quoted field\n  -H, --no-header-row          specifies\
      \ that the input CSV file does not have header row\n  -j, --num-cpus int   \
      \        number of CPUs to use (default value depends on your computer) (default\
      \ 8)\n  -D, --out-delimiter string   delimiting character of the output CSV\
      \ file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file string   \
      \     out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\"\
      )\n  -T, --out-tabs               specifies that the output is delimited with\
      \ tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that the\
      \ input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: print line number as the first column ("n")
      synonyms:
      - -n
      - --line-number
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: sample by proportion
      synonyms:
      - -p
      - --proportion
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: rand seed (default 11)
      synonyms:
      - -s
      - --rand-seed
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - sample
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for sample
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "sampling by proportion\n\nUsage:\n  csvtk sample [flags]\n\nFlags:\n\
      \  -h, --help               help for sample\n  -n, --line-number        print\
      \ line number as the first column (\"n\")\n  -p, --proportion float   sample\
      \ by proportion\n  -s, --rand-seed int      rand seed (default 11)\n\nGlobal\
      \ Flags:\n  -c, --chunk-size int         chunk size of CSV reader (default 50)\n\
      \  -C, --comment-char string    lines starting with commment-character will\
      \ be ignored. if your header row starts with '#', please assign \"-C\" another\
      \ rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string       delimiting\
      \ character of the input CSV file (default \",\")\n  -E, --ignore-empty-row\
      \       ignore empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n\
      \      --infile-list string     file of input files list (one file per line),\
      \ if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
      \            if given, a quote may appear in an unquoted field and a non-doubled\
      \ quote may appear in a quoted field\n  -H, --no-header-row          specifies\
      \ that the input CSV file does not have header row\n  -j, --num-cpus int   \
      \        number of CPUs to use (default value depends on your computer) (default\
      \ 8)\n  -D, --out-delimiter string   delimiting character of the output CSV\
      \ file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file string   \
      \     out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\"\
      )\n  -T, --out-tabs               specifies that the output is delimited with\
      \ tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that the\
      \ input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: drop extra data, exclusive with --merge
      synonyms:
      - --drop
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB (default
        "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: only splits at most N times, exclusive with --drop
      synonyms:
      - --merge
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: content for filling NA data
      synonyms:
      - --na
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: new column names
      synonyms:
      - -n
      - --names
      args: !SimpleFlagArg
        name: strings
      optional: true
    - !Flag
      description: preset number of new created columns
      synonyms:
      - -N
      - --num-cols
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: remove input column
      synonyms:
      - -R
      - --remove
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: separator
      synonyms:
      - -s
      - --sep
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: separator is a regular expression
      synonyms:
      - -r
      - --use-regexp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - sep
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for sep
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "separate column into multiple columns\n\nUsage:\n  csvtk sep [flags]\n\
      \nAliases:\n  sep, separate\n\nFlags:\n      --drop            drop extra data,\
      \ exclusive with --merge\n  -f, --fields string   select only these fields.\
      \ e.g -f 1,2 or -f columnA,columnB (default \"1\")\n  -h, --help           \
      \ help for sep\n  -i, --ignore-case     ignore case\n      --merge         \
      \  only splits at most N times, exclusive with --drop\n      --na string   \
      \    content for filling NA data\n  -n, --names strings   new column names\n\
      \  -N, --num-cols int    preset number of new created columns\n  -R, --remove\
      \          remove input column\n  -s, --sep string      separator\n  -r, --use-regexp\
      \      separator is a regular expression\n\nGlobal Flags:\n  -c, --chunk-size\
      \ int         chunk size of CSV reader (default 50)\n  -C, --comment-char string\
      \    lines starting with commment-character will be ignored. if your header\
      \ row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: ignore-case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: keys (multiple values supported). sort type supported, "N" for
        natural order, "n" for number, "u" for user-defined order and "r" for reverse.
        e.g., "-k 1" or "-k A:r" or ""-k 1:nr -k 2" (default [1])
      synonyms:
      - -k
      - --keys
      args: !SimpleFlagArg
        name: strings
      optional: true
    - !Flag
      description: 'user-defined level file (one level per line, multiple values supported).
        format: <field>:<level-file>.  e.g., "-k name:u -L name:level.txt"'
      synonyms:
      - -L
      - --levels
      args: !SimpleFlagArg
        name: strings
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - sort
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for sort
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "sort by selected fields\n\nUsage:\n  csvtk sort [flags]\n\nFlags:\n\
      \  -h, --help             help for sort\n  -i, --ignore-case      ignore-case\n\
      \  -k, --keys strings     keys (multiple values supported). sort type supported,\
      \ \"N\" for natural order, \"n\" for number, \"u\" for user-defined order and\
      \ \"r\" for reverse. e.g., \"-k 1\" or \"-k A:r\" or \"\"-k 1:nr -k 2\" (default\
      \ [1])\n  -L, --levels strings   user-defined level file (one level per line,\
      \ multiple values supported). format: <field>:<level-file>.  e.g., \"-k name:u\
      \ -L name:level.txt\"\n\nGlobal Flags:\n  -c, --chunk-size int         chunk\
      \ size of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
      \ with commment-character will be ignored. if your header row starts with '#',\
      \ please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d,\
      \ --delimiter string       delimiting character of the input CSV file (default\
      \ \",\")\n  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - *id004
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: comma separated key fields, column name or index. e.g. -f 1-3 or
        -f id,id2 or -F -f "group*" (default "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case (cell value)
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: list all sheets
      synonyms:
      - -a
      - --list-sheets
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Nth sheet to retrieve (default 1)
      synonyms:
      - -N
      - --sheet-index
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: sheet to retrieve
      synonyms:
      - -n
      - --sheet-name
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - splitxlsx
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for splitxlsx
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "split XLSX sheet into multiple sheets according to column values\n\
      \nStrengths: Sheet properties are remained unchanged.\nWeakness : Complicated\
      \ sheet structures are not well supported, e.g.,\n  1. merged cells\n  2. more\
      \ than one header row\n\nUsage:\n  csvtk splitxlsx [flags]\n\nFlags:\n  -f,\
      \ --fields string       comma separated key fields, column name or index. e.g.\
      \ -f 1-3 or -f id,id2 or -F -f \"group*\" (default \"1\")\n  -F, --fuzzy-fields\
      \        using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\"\n  -h,\
      \ --help                help for splitxlsx\n  -i, --ignore-case         ignore\
      \ case (cell value)\n  -a, --list-sheets         list all sheets\n  -N, --sheet-index\
      \ int     Nth sheet to retrieve (default 1)\n  -n, --sheet-name string   sheet\
      \ to retrieve\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size of\
      \ CSV reader (default 50)\n  -C, --comment-char string    lines starting with\
      \ commment-character will be ignored. if your header row starts with '#', please\
      \ assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter\
      \ string       delimiting character of the input CSV file (default \",\")\n\
      \  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: limit floats to N decimal points (default 2)
      synonyms:
      - -n
      - --decimal-width
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: 'operations on these fields. e.g -f 1:count,1:sum or -f colA:mean.
        available operations: collapse, count, countn, countunique, entropy, first,
        last, max, mean, median, min, prod, q1, q2, q3, rand, stdev, sum, uniq, variance'
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: strings
      optional: true
    - !Flag
      description: group via fields. e.g -f 1,2 or -f columnA,columnB
      synonyms:
      - -g
      - --groups
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore non-digital values like "NA" or "N/A"
      synonyms:
      - -i
      - --ignore-non-digits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: rand seed for operation "rand" (default 11)
      synonyms:
      - -S
      - --rand-seed
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: separater for collapsed data (default "; ")
      synonyms:
      - -s
      - --separater
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - summary
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for summary
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "summary statistics of selected digital fields (groupby group fields)\n\
      \nAttention:\n\n  1. Do not mix use digital fields and column names.\n\nAvailable\
      \ operations:\n \n  # numeric/statistical operations\n  # provided by github.com/gonum/stat\
      \ and github.com/gonum/floats\n  countn (count of digits), min, max, sum,\n\
      \  mean, stdev, variance, median, q1, q2, q3,\n  entropy (Shannon entropy),\
      \ \n  prod (product of the elements)\n\n  # textual/numeric operations\n  count,\
      \ first, last, rand, unique, collapse, countunique\n\nUsage:\n  csvtk summary\
      \ [flags]\n\nFlags:\n  -n, --decimal-width int   limit floats to N decimal points\
      \ (default 2)\n  -f, --fields strings      operations on these fields. e.g -f\
      \ 1:count,1:sum or -f colA:mean. available operations: collapse, count, countn,\
      \ countunique, entropy, first, last, max, mean, median, min, prod, q1, q2, q3,\
      \ rand, stdev, sum, uniq, variance\n  -g, --groups string       group via fields.\
      \ e.g -f 1,2 or -f columnA,columnB\n  -h, --help                help for summary\n\
      \  -i, --ignore-non-digits   ignore non-digital values like \"NA\" or \"N/A\"\
      \n  -S, --rand-seed int       rand seed for operation \"rand\" (default 11)\n\
      \  -s, --separater string    separater for collapsed data (default \"; \")\n\
      \nGlobal Flags:\n  -c, --chunk-size int         chunk size of CSV reader (default\
      \ 50)\n  -C, --comment-char string    lines starting with commment-character\
      \ will be ignored. if your header row starts with '#', please assign \"-C\"\
      \ another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string  \
      \     delimiting character of the input CSV file (default \",\")\n  -E, --ignore-empty-row\
      \       ignore empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n\
      \      --infile-list string     file of input files list (one file per line),\
      \ if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
      \            if given, a quote may appear in an unquoted field and a non-doubled\
      \ quote may appear in a quoted field\n  -H, --no-header-row          specifies\
      \ that the input CSV file does not have header row\n  -j, --num-cpus int   \
      \        number of CPUs to use (default value depends on your computer) (default\
      \ 8)\n  -D, --out-delimiter string   delimiting character of the output CSV\
      \ file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file string   \
      \     out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\"\
      )\n  -T, --out-tabs               specifies that the output is delimited with\
      \ tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that the\
      \ input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: select only these fields. e.g -f 1,2 or -f columnA,columnB (default
        "1")
      synonyms:
      - -f
      - --fields
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
      synonyms:
      - -F
      - --fuzzy-fields
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore case
      synonyms:
      - -i
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - uniq
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for uniq
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "unique data without sorting\n\nUsage:\n  csvtk uniq [flags]\n\nFlags:\n\
      \  -f, --fields string   select only these fields. e.g -f 1,2 or -f columnA,columnB\
      \ (default \"1\")\n  -F, --fuzzy-fields    using fuzzy fields, e.g., -F -f \"\
      *name\" or -F -f \"id123*\"\n  -h, --help            help for uniq\n  -i, --ignore-case\
      \     ignore case\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size\
      \ of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
      \ with commment-character will be ignored. if your header row starts with '#',\
      \ please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d,\
      \ --delimiter string       delimiting character of the input CSV file (default\
      \ \",\")\n  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: check update
      synonyms:
      - -u
      - --check-update
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - version
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for version
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "print version information and check for update\n\nUsage:\n  csvtk\
      \ version [flags]\n\nFlags:\n  -u, --check-update   check update\n  -h, --help\
      \           help for version\n\nGlobal Flags:\n  -c, --chunk-size int      \
      \   chunk size of CSV reader (default 50)\n  -C, --comment-char string    lines\
      \ starting with commment-character will be ignored. if your header row starts\
      \ with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\"\
      )\n  -d, --delimiter string       delimiting character of the input CSV file\
      \ (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
      \     ignore illegal rows\n      --infile-list string     file of input files\
      \ list (one file per line), if given, they are appended to files from cli arguments\n\
      \  -l, --lazy-quotes            if given, a quote may appear in an unquoted\
      \ field and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row\
      \          specifies that the input CSV file does not have header row\n  -j,\
      \ --num-cpus int           number of CPUs to use (default value depends on your\
      \ computer) (default 8)\n  -D, --out-delimiter string   delimiting character\
      \ of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file\
      \ string        out file (\"-\" for stdout, suffix .gz for gzipped out) (default\
      \ \"-\")\n  -T, --out-tabs               specifies that the output is delimited\
      \ with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies that\
      \ the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: number of histogram bins (default -1)
      synonyms:
      - -B
      - --bins
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: sleep this many seconds after plotting (default 1)
      synonyms:
      - -W
      - --delay
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: print histogram data to stderr instead of plotting
      synonyms:
      - -y
      - --dump
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: field to watch
      synonyms:
      - -f
      - --field
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: save histogram to this PDF/image file
      synonyms:
      - -O
      - --image
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: log10(x+1) transform numeric values
      synonyms:
      - -L
      - --log
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: passthrough mode (forward input to output)
      synonyms:
      - -x
      - --pass
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: print/report after this many records (-1 for print after EOF) (default
        -1)
      synonyms:
      - -p
      - --print-freq
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: supress all plotting to stderr
      synonyms:
      - -Q
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: reset histogram after every report
      synonyms:
      - -R
      - --reset
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - watch
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for watch
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "monitor the specified fields\n\nUsage:\n  csvtk watch [flags]\n\n\
      Flags:\n  -B, --bins int         number of histogram bins (default -1)\n  -W,\
      \ --delay int        sleep this many seconds after plotting (default 1)\n  -y,\
      \ --dump             print histogram data to stderr instead of plotting\n  -f,\
      \ --field string     field to watch\n  -h, --help             help for watch\n\
      \  -O, --image string     save histogram to this PDF/image file\n  -L, --log\
      \              log10(x+1) transform numeric values\n  -x, --pass           \
      \  passthrough mode (forward input to output)\n  -p, --print-freq int   print/report\
      \ after this many records (-1 for print after EOF) (default -1)\n  -Q, --quiet\
      \            supress all plotting to stderr\n  -R, --reset            reset\
      \ histogram after every report\n\nGlobal Flags:\n  -c, --chunk-size int    \
      \     chunk size of CSV reader (default 50)\n  -C, --comment-char string   \
      \ lines starting with commment-character will be ignored. if your header row\
      \ starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default\
      \ \"#\")\n  -d, --delimiter string       delimiting character of the input CSV\
      \ file (default \",\")\n  -E, --ignore-empty-row       ignore empty rows\n \
      \ -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list string\
      \     file of input files list (one file per line), if given, they are appended\
      \ to files from cli arguments\n  -l, --lazy-quotes            if given, a quote\
      \ may appear in an unquoted field and a non-doubled quote may appear in a quoted\
      \ field\n  -H, --no-header-row          specifies that the input CSV file does\
      \ not have header row\n  -j, --num-cpus int           number of CPUs to use\
      \ (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: flags
      optional: true
    named:
    - !Flag
      description: list all sheets
      synonyms:
      - -a
      - --list-sheets
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Nth sheet to retrieve (default 1)
      synonyms:
      - -i
      - --sheet-index
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: sheet to retrieve
      synonyms:
      - -n
      - --sheet-name
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: chunk size of CSV reader (default 50)
      synonyms:
      - -c
      - --chunk-size
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: lines starting with commment-character will be ignored. if your
        header row starts with '#', please assign "-C" another rare symbol, e.g. '$'
        (default "#")
      synonyms:
      - -C
      - --comment-char
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: delimiting character of the input CSV file (default ",")
      synonyms:
      - -d
      - --delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: ignore empty rows
      synonyms:
      - -E
      - --ignore-empty-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ignore illegal rows
      synonyms:
      - -I
      - --ignore-illegal-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: file of input files list (one file per line), if given, they are
        appended to files from cli arguments
      synonyms:
      - --infile-list
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: if given, a quote may appear in an unquoted field and a non-doubled
        quote may appear in a quoted field
      synonyms:
      - -l
      - --lazy-quotes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file does not have header row
      synonyms:
      - -H
      - --no-header-row
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: number of CPUs to use (default value depends on your computer)
        (default 8)
      synonyms:
      - -j
      - --num-cpus
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: delimiting character of the output CSV file, e.g., -D $'\t' for
        tab (default ",")
      synonyms:
      - -D
      - --out-delimiter
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: out file ("-" for stdout, suffix .gz for gzipped out) (default
        "-")
      synonyms:
      - -o
      - --out-file
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: specifies that the output is delimited with tabs. Overrides "-D"
      synonyms:
      - -T
      - --out-tabs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specifies that the input CSV file is delimited with tabs. Overrides
        "-d" and "-D"
      synonyms:
      - -t
      - --tabs
      args: !EmptyFlagArg {}
      optional: true
    command:
    - csvtk
    - xlsx2csv
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: help for xlsx2csv
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "convert XLSX to CSV format\n\nUsage:\n  csvtk xlsx2csv [flags]\n\n\
      Flags:\n  -h, --help                help for xlsx2csv\n  -a, --list-sheets \
      \        list all sheets\n  -i, --sheet-index int     Nth sheet to retrieve\
      \ (default 1)\n  -n, --sheet-name string   sheet to retrieve\n\nGlobal Flags:\n\
      \  -c, --chunk-size int         chunk size of CSV reader (default 50)\n  -C,\
      \ --comment-char string    lines starting with commment-character will be ignored.\
      \ if your header row starts with '#', please assign \"-C\" another rare symbol,\
      \ e.g. '$' (default \"#\")\n  -d, --delimiter string       delimiting character\
      \ of the input CSV file (default \",\")\n  -E, --ignore-empty-row       ignore\
      \ empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n      --infile-list\
      \ string     file of input files list (one file per line), if given, they are\
      \ appended to files from cli arguments\n  -l, --lazy-quotes            if given,\
      \ a quote may appear in an unquoted field and a non-doubled quote may appear\
      \ in a quoted field\n  -H, --no-header-row          specifies that the input\
      \ CSV file does not have header row\n  -j, --num-cpus int           number of\
      \ CPUs to use (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
      \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for\
      \ tab (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout,\
      \ suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs            \
      \   specifies that the output is delimited with tabs. Overrides \"-D\"\n  -t,\
      \ --tabs                   specifies that the input CSV file is delimited with\
      \ tabs. Overrides \"-d\" and \"-D\"\n"
    generated_using: *id002
  help_flag: !Flag
    description: help for csvtk
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "csvtk -- a cross-platform, efficient and practical CSV/TSV toolkit\n\
    \nVersion: 0.20.0\n\nAuthor: Wei Shen <shenwei356@gmail.com>\n\nDocuments  : http://shenwei356.github.io/csvtk\n\
    Source code: https://github.com/shenwei356/csvtk\n\nAttention:\n\n  1. The CSV\
    \ parser requires all the lines have same number of fields/columns.\n     Even\
    \ lines with spaces will cause error. \n     Use '-I/--ignore-illegal-row' to\
    \ skip these lines if neccessary.\n  2. By default, csvtk thinks your files have\
    \ header row, if not, switch flag \"-H\" on.\n  3. Column names better be unique.\n\
    \  4. By default, lines starting with \"#\" will be ignored, if the header row\n\
    \     starts with \"#\", please assign flag \"-C\" another rare symbol, e.g. '$'.\n\
    \  5. By default, csvtk handles CSV files, use flag \"-t\" for tab-delimited files.\n\
    \  6. If \" exists in tab-delimited files, use flag \"-l\".\n  7. Do not mix use\
    \ digital fields and column names.\n\nEnvironment variables for frequently used\
    \ global flags\n\n  - \"CSVTK_T\" for flag \"-t/--tabs\"\n  - \"CSVTK_H\" for\
    \ flag \"-H/--no-header-row\"\n\nUsage:\n  csvtk [command]\n\nAvailable Commands:\n\
    \  add-header      add column names\n  cat             stream file to stdout and\
    \ report progress on stderr\n  collapse        collapse one field with selected\
    \ fields as keys\n  comb            compute combinations of items at every row\n\
    \  concat          concatenate CSV/TSV files by rows\n  corr            calculate\
    \ Pearson correlation between two columns\n  csv2json        convert CSV to JSON\
    \ format\n  csv2md          convert CSV to markdown format\n  csv2tab        \
    \ convert CSV to tabular format\n  cut             select parts of fields\n  del-header\
    \      delete column names\n  dim             dimensions of CSV file\n  filter\
    \          filter rows by values of selected fields with arithmetic expression\n\
    \  filter2         filter rows by awk-like artithmetic/string expressions\n  freq\
    \            frequencies of selected fields\n  gather          gather columns\
    \ into key-value pairs\n  genautocomplete generate shell autocompletion script\n\
    \  grep            grep data by selected fields with patterns/regular expressions\n\
    \  head            print first N records\n  headers         print headers\n  help\
    \            Help about any command\n  inter           intersection of multiple\
    \ files\n  join            join files by selected fields (inner, left and outer\
    \ join)\n  mutate          create new column from selected fields by regular expression\n\
    \  mutate2         create new column from selected fields by awk-like artithmetic/string\
    \ expressions\n  plot            plot common figures\n  pretty          convert\
    \ CSV to readable aligned table\n  rename          rename column names with new\
    \ names\n  rename2         rename column names by regular expression\n  replace\
    \         replace data of selected fields by regular expression\n  sample    \
    \      sampling by proportion\n  sep             separate column into multiple\
    \ columns\n  sort            sort by selected fields\n  space2tab       convert\
    \ space delimited format to CSV\n  split           split CSV/TSV into multiple\
    \ files according to column values\n  splitxlsx       split XLSX sheet into multiple\
    \ sheets according to column values\n  summary         summary statistics of selected\
    \ digital fields (groupby group fields)\n  tab2csv         convert tabular format\
    \ to CSV\n  transpose       transpose CSV data\n  uniq            unique data\
    \ without sorting\n  version         print version information and check for update\n\
    \  watch           monitor the specified fields\n  xlsx2csv        convert XLSX\
    \ to CSV format\n\nFlags:\n  -c, --chunk-size int         chunk size of CSV reader\
    \ (default 50)\n  -C, --comment-char string    lines starting with commment-character\
    \ will be ignored. if your header row starts with '#', please assign \"-C\" another\
    \ rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string       delimiting\
    \ character of the input CSV file (default \",\")\n  -h, --help              \
    \     help for csvtk\n  -E, --ignore-empty-row       ignore empty rows\n  -I,\
    \ --ignore-illegal-row     ignore illegal rows\n      --infile-list string   \
    \  file of input files list (one file per line), if given, they are appended to\
    \ files from cli arguments\n  -l, --lazy-quotes            if given, a quote may\
    \ appear in an unquoted field and a non-doubled quote may appear in a quoted field\n\
    \  -H, --no-header-row          specifies that the input CSV file does not have\
    \ header row\n  -j, --num-cpus int           number of CPUs to use (default value\
    \ depends on your computer) (default 8)\n  -D, --out-delimiter string   delimiting\
    \ character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")\n\
    \  -o, --out-file string        out file (\"-\" for stdout, suffix .gz for gzipped\
    \ out) (default \"-\")\n  -T, --out-tabs               specifies that the output\
    \ is delimited with tabs. Overrides \"-D\"\n  -t, --tabs                   specifies\
    \ that the input CSV file is delimited with tabs. Overrides \"-d\" and \"-D\"\n\
    \nUse \"csvtk [command] --help\" for more information about a command.\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: help for split
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "split CSV/TSV into multiple files according to column values\n\nNote:\n\
  \n  1. flag -o/--out-file can specify out directory for splitted files\n\nUsage:\n\
  \  csvtk split [flags]\n\nFlags:\n  -g, --buf-groups int   buffering N groups before\
  \ writing to file (default 100)\n  -b, --buf-rows int     buffering N rows for every\
  \ group before writing to file (default 100000)\n  -f, --fields string    comma\
  \ separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f\
  \ \"group*\" (default \"1\")\n  -F, --fuzzy-fields     using fuzzy fields, e.g.,\
  \ -F -f \"*name\" or -F -f \"id123*\"\n  -h, --help             help for split\n\
  \  -i, --ignore-case      ignore case\n  -G, --out-gzip         force output gzipped\
  \ file\n\nGlobal Flags:\n  -c, --chunk-size int         chunk size of CSV reader\
  \ (default 50)\n  -C, --comment-char string    lines starting with commment-character\
  \ will be ignored. if your header row starts with '#', please assign \"-C\" another\
  \ rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter string       delimiting\
  \ character of the input CSV file (default \",\")\n  -E, --ignore-empty-row    \
  \   ignore empty rows\n  -I, --ignore-illegal-row     ignore illegal rows\n    \
  \  --infile-list string     file of input files list (one file per line), if given,\
  \ they are appended to files from cli arguments\n  -l, --lazy-quotes           \
  \ if given, a quote may appear in an unquoted field and a non-doubled quote may\
  \ appear in a quoted field\n  -H, --no-header-row          specifies that the input\
  \ CSV file does not have header row\n  -j, --num-cpus int           number of CPUs\
  \ to use (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
  \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for tab\
  \ (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout, suffix\
  \ .gz for gzipped out) (default \"-\")\n  -T, --out-tabs               specifies\
  \ that the output is delimited with tabs. Overrides \"-D\"\n  -t, --tabs       \
  \            specifies that the input CSV file is delimited with tabs. Overrides\
  \ \"-d\" and \"-D\"\n"
generated_using: *id002
