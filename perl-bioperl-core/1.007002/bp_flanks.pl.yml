!Command
command:
- bp_flanks.pl
positional:
- !Positional
  description: "SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\n\
    accession | filename"
  position: 0
  name: position
  optional: false
- !Positional
  description: ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag
  position: 0
  name: taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga
  optional: false
- !Positional
  description: tttgaggctgtcagagcgct
  position: 1
  name: acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac
  optional: false
- !Positional
  description: head1 FEEDBACK
  position: 0
  name: registry.
  optional: false
- !Positional
  description: '- General discussion'
  position: 0
  name: bioperl-l@bioperl.org
  optional: false
- !Positional
  description: "SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\n\
    accession | filename"
  position: 0
  name: position
  optional: false
- !Positional
  description: ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag
  position: 0
  name: taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga
  optional: false
- !Positional
  description: tttgaggctgtcagagcgct
  position: 1
  name: acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac
  optional: false
- !Positional
  description: head1 FEEDBACK
  position: 0
  name: registry.
  optional: false
- !Positional
  description: '- General discussion'
  position: 0
  name: bioperl-l@bioperl.org
  optional: false
- !Positional
  description: "SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\n\
    accession | filename"
  position: 0
  name: position
  optional: false
- !Positional
  description: ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag
  position: 0
  name: taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga
  optional: false
- !Positional
  description: tttgaggctgtcagagcgct
  position: 1
  name: acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac
  optional: false
- !Positional
  description: head1 FEEDBACK
  position: 0
  name: registry.
  optional: false
- !Positional
  description: '- General discussion'
  position: 0
  name: bioperl-l@bioperl.org
  optional: false
- !Positional
  description: "SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\n\
    accession | filename"
  position: 0
  name: position
  optional: false
- !Positional
  description: ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag
  position: 0
  name: taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga
  optional: false
- !Positional
  description: tttgaggctgtcagagcgct
  position: 1
  name: acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac
  optional: false
- !Positional
  description: head1 FEEDBACK
  position: 0
  name: registry.
  optional: false
- !Positional
  description: '- General discussion'
  position: 0
  name: bioperl-l@bioperl.org
  optional: false
named:
- !Flag
  description: Position uses simple nucleotide sequence feature table
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "to define the region of interest, typically a\nSNP or microsatellite\
    \ repeat around which the flanks are\ndefined.\nThere can be more than one position\
    \ option or you can\ngive a comma separated list to one position option.\nThe\
    \ format of a position is:\n[id:] int | range | in-between [-]\nThe optional id\
    \ is the name you want to call the new\nsequence. If it not given in joins running\
    \ number to the\nentry name with an underscore.\nThe position is either a point\
    \ (e.g. 234), a range (e.g\n250..300) or insertion point between nucleotides\n\
    (e.g. 234^235)\nIf the position is not completely within the source\nsequence\
    \ the output sequence will be truncated and it\nwill print a warning.\nThe optional\
    \ hyphen [-] at the end of the position\nindicates that that you want the retrieved\
    \ sequence to be\nin the opposite strand."
  synonyms:
  - --position
  args: !SimpleFlagArg
    name: notation
  optional: true
- !Flag
  description: Defaults to 100. This is the length of the nucleotides
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "retrieved on both sides of the given position.\nIf the source file\
    \ does not contain"
  synonyms:
  - --flanklen
  args: !SimpleFlagArg
    name: sequence
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    bp_flanks - finding flanking sequences for a variant in a sequence\n\
  \    position\n\nSYNOPSIS\n      bp_flanks --position POS [-p POS ...]  [--flanklen\
  \ INT]\n             accession | filename\n\nDESCRIPTION\n    This script allows\
  \ you to extract a subsequence around a region of\n    interest from an existing\
  \ sequence. The output if fasta formatted\n    sequence entry where the header line\
  \ contains additional information\n    about the location.\n\nOPTIONS\n    The script\
  \ takes one unnamed argument which be either a file name in the\n    local file\
  \ system or a nucleotide sequence accession number.\n\n      -p         Position\
  \ uses simple nucleotide sequence feature table\n      --position notation to define\
  \ the region of interest, typically a\n                 SNP or microsatellite repeat\
  \ around which the flanks are\n                 defined.\n\n                 There\
  \ can be more than one position option or you can\n                 give a comma\
  \ separated list to one position option.\n\n                 The format of a position\
  \ is:\n\n                     [id:] int | range | in-between [-]\n\n           \
  \      The optional id is the name you want to call the new\n                 sequence.\
  \ If it not given in joins running number to the\n                 entry name with\
  \ an underscore.\n\n                 The position is either a point (e.g. 234),\
  \ a range (e.g\n                 250..300) or insertion point between nucleotides\n\
  \                 (e.g. 234^235)\n\n                 If the position is not completely\
  \ within the source\n                 sequence the output sequence will be truncated\
  \ and it\n                 will print a warning.\n\n                 The optional\
  \ hyphen [-] at the end of the position\n                 indicates that that you\
  \ want the retrieved sequence to be\n                 in the opposite strand.\n\n\
  \n      -f         Defaults to 100. This is the length of the nucleotides\n    \
  \  --flanklen sequence retrieved on both sides of the given position.\n\n      \
  \           If the source file does not contain\n\nOUTPUT FORMAT\n    The output\
  \ is a fasta formatted entry where the description file\n    contains tag=value\
  \ pairs for information about where in the original\n    sequence the subsequence\
  \ was taken.\n\n    The ID of the fasta entry is the name given at the command line\
  \ joined\n    by hyphen to the filename or accesion of the source sequence. If no\
  \ id\n    is given a series of consecutive integers is used.\n\n    The tag=value\
  \ pairs are:\n\n    oripos=int\n       position in the source file\n\n    strand=1|-1\n\
  \       strand of the sequence compared to the source sequence\n\n    allelepos=int\n\
  \       position of the region of interest in the current entry. The tag is\n  \
  \     the same as used by dbSNP@NCBI\n\n    The sequence highlights the allele variant\
  \ position by showing it in\n    upper case and rest of the sequence in lower case\
  \ characters.\n\nEXAMPLE\n      % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL\
  \ oripos=100 strand=1 allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\nTODO\n    The input files are assumed to be in EMBL\
  \ format and the sequences are\n    retrieved only from the EMB database. Make this\
  \ more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  Mailing Lists\n\
  \    User feedback is an integral part of the evolution of this and other\n    Bioperl\
  \ modules. Send your comments and suggestions preferably to the\n    Bioperl mailing\
  \ lists Your participation is much appreciated.\n\n      bioperl-l@bioperl.org \
  \                 - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  Reporting Bugs\n    Report bugs to the Bioperl\
  \ bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \nAUTHOR - Heikki Lehvaslaiho\n    Email: <heikki-at-bioperl-dot-org>\n\nNAME\n\
  \    bp_flanks - finding flanking sequences for a variant in a sequence\n    position\n\
  \nSYNOPSIS\n      bp_flanks --position POS [-p POS ...]  [--flanklen INT]\n    \
  \         accession | filename\n\nDESCRIPTION\n    This script allows you to extract\
  \ a subsequence around a region of\n    interest from an existing sequence. The\
  \ output if fasta formatted\n    sequence entry where the header line contains additional\
  \ information\n    about the location.\n\nOPTIONS\n    The script takes one unnamed\
  \ argument which be either a file name in the\n    local file system or a nucleotide\
  \ sequence accession number.\n\n      -p         Position uses simple nucleotide\
  \ sequence feature table\n      --position notation to define the region of interest,\
  \ typically a\n                 SNP or microsatellite repeat around which the flanks\
  \ are\n                 defined.\n\n                 There can be more than one\
  \ position option or you can\n                 give a comma separated list to one\
  \ position option.\n\n                 The format of a position is:\n\n        \
  \             [id:] int | range | in-between [-]\n\n                 The optional\
  \ id is the name you want to call the new\n                 sequence. If it not\
  \ given in joins running number to the\n                 entry name with an underscore.\n\
  \n                 The position is either a point (e.g. 234), a range (e.g\n   \
  \              250..300) or insertion point between nucleotides\n              \
  \   (e.g. 234^235)\n\n                 If the position is not completely within\
  \ the source\n                 sequence the output sequence will be truncated and\
  \ it\n                 will print a warning.\n\n                 The optional hyphen\
  \ [-] at the end of the position\n                 indicates that that you want\
  \ the retrieved sequence to be\n                 in the opposite strand.\n\n\n \
  \     -f         Defaults to 100. This is the length of the nucleotides\n      --flanklen\
  \ sequence retrieved on both sides of the given position.\n\n                 If\
  \ the source file does not contain\n\nOUTPUT FORMAT\n    The output is a fasta formatted\
  \ entry where the description file\n    contains tag=value pairs for information\
  \ about where in the original\n    sequence the subsequence was taken.\n\n    The\
  \ ID of the fasta entry is the name given at the command line joined\n    by hyphen\
  \ to the filename or accesion of the source sequence. If no id\n    is given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is\n       the same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in\n   \
  \ upper case and rest of the sequence in lower case characters.\n\nEXAMPLE\n   \
  \   % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100 strand=1\
  \ allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\nTODO\n    The input files are assumed to be in EMBL\
  \ format and the sequences are\n    retrieved only from the EMB database. Make this\
  \ more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  Mailing Lists\n\
  \    User feedback is an integral part of the evolution of this and other\n    Bioperl\
  \ modules. Send your comments and suggestions preferably to the\n    Bioperl mailing\
  \ lists Your participation is much appreciated.\n\n      bioperl-l@bioperl.org \
  \                 - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  Reporting Bugs\n    Report bugs to the Bioperl\
  \ bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \nAUTHOR - Heikki Lehvaslaiho\n    Email: <heikki-at-bioperl-dot-org>\n\nNAME\n\
  \    bp_flanks - finding flanking sequences for a variant in a sequence\n    position\n\
  \nSYNOPSIS\n      bp_flanks --position POS [-p POS ...]  [--flanklen INT]\n    \
  \         accession | filename\n\nDESCRIPTION\n    This script allows you to extract\
  \ a subsequence around a region of\n    interest from an existing sequence. The\
  \ output if fasta formatted\n    sequence entry where the header line contains additional\
  \ information\n    about the location.\n\nOPTIONS\n    The script takes one unnamed\
  \ argument which be either a file name in the\n    local file system or a nucleotide\
  \ sequence accession number.\n\n      -p         Position uses simple nucleotide\
  \ sequence feature table\n      --position notation to define the region of interest,\
  \ typically a\n                 SNP or microsatellite repeat around which the flanks\
  \ are\n                 defined.\n\n                 There can be more than one\
  \ position option or you can\n                 give a comma separated list to one\
  \ position option.\n\n                 The format of a position is:\n\n        \
  \             [id:] int | range | in-between [-]\n\n                 The optional\
  \ id is the name you want to call the new\n                 sequence. If it not\
  \ given in joins running number to the\n                 entry name with an underscore.\n\
  \n                 The position is either a point (e.g. 234), a range (e.g\n   \
  \              250..300) or insertion point between nucleotides\n              \
  \   (e.g. 234^235)\n\n                 If the position is not completely within\
  \ the source\n                 sequence the output sequence will be truncated and\
  \ it\n                 will print a warning.\n\n                 The optional hyphen\
  \ [-] at the end of the position\n                 indicates that that you want\
  \ the retrieved sequence to be\n                 in the opposite strand.\n\n\n \
  \     -f         Defaults to 100. This is the length of the nucleotides\n      --flanklen\
  \ sequence retrieved on both sides of the given position.\n\n                 If\
  \ the source file does not contain\n\nOUTPUT FORMAT\n    The output is a fasta formatted\
  \ entry where the description file\n    contains tag=value pairs for information\
  \ about where in the original\n    sequence the subsequence was taken.\n\n    The\
  \ ID of the fasta entry is the name given at the command line joined\n    by hyphen\
  \ to the filename or accesion of the source sequence. If no id\n    is given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is\n       the same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in\n   \
  \ upper case and rest of the sequence in lower case characters.\n\nEXAMPLE\n   \
  \   % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100 strand=1\
  \ allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\nTODO\n    The input files are assumed to be in EMBL\
  \ format and the sequences are\n    retrieved only from the EMB database. Make this\
  \ more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  Mailing Lists\n\
  \    User feedback is an integral part of the evolution of this and other\n    Bioperl\
  \ modules. Send your comments and suggestions preferably to the\n    Bioperl mailing\
  \ lists Your participation is much appreciated.\n\n      bioperl-l@bioperl.org \
  \                 - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  Reporting Bugs\n    Report bugs to the Bioperl\
  \ bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \nAUTHOR - Heikki Lehvaslaiho\n    Email: <heikki-at-bioperl-dot-org>\n\nNAME\n\
  \    bp_flanks - finding flanking sequences for a variant in a sequence\n    position\n\
  \nSYNOPSIS\n      bp_flanks --position POS [-p POS ...]  [--flanklen INT]\n    \
  \         accession | filename\n\nDESCRIPTION\n    This script allows you to extract\
  \ a subsequence around a region of\n    interest from an existing sequence. The\
  \ output if fasta formatted\n    sequence entry where the header line contains additional\
  \ information\n    about the location.\n\nOPTIONS\n    The script takes one unnamed\
  \ argument which be either a file name in the\n    local file system or a nucleotide\
  \ sequence accession number.\n\n      -p         Position uses simple nucleotide\
  \ sequence feature table\n      --position notation to define the region of interest,\
  \ typically a\n                 SNP or microsatellite repeat around which the flanks\
  \ are\n                 defined.\n\n                 There can be more than one\
  \ position option or you can\n                 give a comma separated list to one\
  \ position option.\n\n                 The format of a position is:\n\n        \
  \             [id:] int | range | in-between [-]\n\n                 The optional\
  \ id is the name you want to call the new\n                 sequence. If it not\
  \ given in joins running number to the\n                 entry name with an underscore.\n\
  \n                 The position is either a point (e.g. 234), a range (e.g\n   \
  \              250..300) or insertion point between nucleotides\n              \
  \   (e.g. 234^235)\n\n                 If the position is not completely within\
  \ the source\n                 sequence the output sequence will be truncated and\
  \ it\n                 will print a warning.\n\n                 The optional hyphen\
  \ [-] at the end of the position\n                 indicates that that you want\
  \ the retrieved sequence to be\n                 in the opposite strand.\n\n\n \
  \     -f         Defaults to 100. This is the length of the nucleotides\n      --flanklen\
  \ sequence retrieved on both sides of the given position.\n\n                 If\
  \ the source file does not contain\n\nOUTPUT FORMAT\n    The output is a fasta formatted\
  \ entry where the description file\n    contains tag=value pairs for information\
  \ about where in the original\n    sequence the subsequence was taken.\n\n    The\
  \ ID of the fasta entry is the name given at the command line joined\n    by hyphen\
  \ to the filename or accesion of the source sequence. If no id\n    is given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is\n       the same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in\n   \
  \ upper case and rest of the sequence in lower case characters.\n\nEXAMPLE\n   \
  \   % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100 strand=1\
  \ allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\nTODO\n    The input files are assumed to be in EMBL\
  \ format and the sequences are\n    retrieved only from the EMB database. Make this\
  \ more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  Mailing Lists\n\
  \    User feedback is an integral part of the evolution of this and other\n    Bioperl\
  \ modules. Send your comments and suggestions preferably to the\n    Bioperl mailing\
  \ lists Your participation is much appreciated.\n\n      bioperl-l@bioperl.org \
  \                 - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  Reporting Bugs\n    Report bugs to the Bioperl\
  \ bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \nAUTHOR - Heikki Lehvaslaiho\n    Email: <heikki-at-bioperl-dot-org>\n\n"
generated_using:
- --help
