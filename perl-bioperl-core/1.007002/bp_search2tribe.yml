!Command
positional: []
named:
- !Flag
  description: '- the output filename [default STDOUT]'
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: filename
  optional: true
- !Flag
  description: '- search result format (blast, fasta) (ssearch is fasta format). default
    is blast.'
  synonyms:
  - -f
  args: !SimpleFlagArg
    name: format
  optional: true
- !Flag
  description: '- Change the default weight for E(0.0) hits to VALUE (default=200
    (i.e. 1e-200) )'
  synonyms:
  - -w
  - --weight
  args: !SimpleFlagArg
    name: or
  optional: true
- !Flag
  description: ''
  synonyms:
  - -w/--weight
  args: !EmptyFlagArg {}
  optional: true
command:
- bp_search2tribe.pl
parent:
subcommands: []
help_flag: !Flag
  description: '- this help menu'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    bp_search2tribe - Turn SearchIO parseable reports(s)\
  \ into TRIBE matrix\n\n\e[1mSYNOPSIS\e[0m\n    Usage: bp_search2tribe [-o outputfile]\
  \ [-f reportformat] [-w/--weight]\n    file1 file2 ..\n\n\e[1mDESCRIPTION\e[0m\n\
  \    This script is probably too slow for most people's uses. It is better to\n\
  \    use something like scripts/searchio/fastam9_to_table, -m 9 output from\n  \
  \  BLAST, or the blast2table from the BLAST O'Reilly book to get a tabular\n   \
  \ output from these programs and then feed the table into MCL with the\n    mcxdeblast\
  \ script and the --m9 option.\n\n    This script will turn a protein Search report\
  \ (BLASTP, FASTP, SSEARCH)\n    into a Markov Matrix for TribeMCL clustering.\n\n\
  \    The options are:\n\n       -o filename          - the output filename [default\
  \ STDOUT]\n       -f format            - search result format (blast, fasta)\n \
  \                             (ssearch is fasta format). default is blast.\n   \
  \    -w or --weight VALUE - Change the default weight for E(0.0) hits\n        \
  \                      to VALUE (default=200 (i.e. 1e-200) )\n       -h        \
  \           - this help menu\n\n    Additionally specify the filenames you want\
  \ to process on the\n    command-line. If no files are specified then STDIN input\
  \ is assumed. You\n    specify this by doing: bp_search2tribe < file1 file2 file3\n\
  \n\e[1mAUTHOR\e[0m\n    Jason Stajich, jason-at-bioperl-dot-org\n\n"
generated_using:
- --help
