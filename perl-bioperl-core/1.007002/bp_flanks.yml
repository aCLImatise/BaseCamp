!Command
positional: []
named: []
command:
- bp_flanks.pl
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    bp_flanks - finding flanking sequences for a variant\
  \ in a sequence\n    position\n\n\e[1mSYNOPSIS\e[0m\n      bp_flanks --position\
  \ POS [-p POS ...]  [--flanklen INT]\n             accession | filename\n\n\e[1mDESCRIPTION\e\
  [0m\n    This script allows you to extract a subsequence around a region of\n  \
  \  interest from an existing sequence. The output if fasta formatted sequence\n\
  \    entry where the header line contains additional information about the\n   \
  \ location.\n\n\e[1mOPTIONS\e[0m\n    The script takes one unnamed argument which\
  \ be either a file name in the\n    local file system or a nucleotide sequence accession\
  \ number.\n\n      -p         Position uses simple nucleotide sequence feature table\n\
  \      --position notation to define the region of interest, typically a\n     \
  \            SNP or microsatellite repeat around which the flanks are\n        \
  \         defined.\n\n                 There can be more than one position option\
  \ or you can\n                 give a comma separated list to one position option.\n\
  \n                 The format of a position is:\n\n                     [id:] int\
  \ | range | in-between [-]\n\n                 The optional id is the name you want\
  \ to call the new\n                 sequence. If it not given in joins running number\
  \ to the\n                 entry name with an underscore.\n\n                 The\
  \ position is either a point (e.g. 234), a range (e.g\n                 250..300)\
  \ or insertion point between nucleotides\n                 (e.g. 234^235)\n\n  \
  \               If the position is not completely within the source\n          \
  \       sequence the output sequence will be truncated and it\n                \
  \ will print a warning.\n\n                 The optional hyphen [-] at the end of\
  \ the position\n                 indicates that that you want the retrieved sequence\
  \ to be\n                 in the opposite strand.\n\n\n      -f         Defaults\
  \ to 100. This is the length of the nucleotides\n      --flanklen sequence retrieved\
  \ on both sides of the given position.\n\n                 If the source file does\
  \ not contain\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output is a fasta formatted entry\
  \ where the description file contains\n    tag=value pairs for information about\
  \ where in the original sequence the\n    subsequence was taken.\n\n    The ID of\
  \ the fasta entry is the name given at the command line joined by\n    hyphen to\
  \ the filename or accesion of the source sequence. If no id is\n    given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is the\n       same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in upper\n\
  \    case and rest of the sequence in lower case characters.\n\n\e[1mEXAMPLE\e[0m\n\
  \      % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100\
  \ strand=1 allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\n\e[1mTODO\e[0m\n    The input files are assumed to\
  \ be in EMBL format and the sequences are\n    retrieved only from the EMB database.\
  \ Make this more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  \e\
  [1mMailing Lists\e[0m\n    User feedback is an integral part of the evolution of\
  \ this and other\n    Bioperl modules. Send your comments and suggestions preferably\
  \ to the\n    Bioperl mailing lists Your participation is much appreciated.\n\n\
  \      bioperl-l@bioperl.org                  - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  \e[1mReporting Bugs\e[0m\n    Report bugs to the\
  \ Bioperl bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \n\e[1mAUTHOR - Heikki Lehvaslaiho\e[0m\n    Email: <heikki-at-bioperl-dot-org>\n\
  \n\e[1mNAME\e[0m\n    bp_flanks - finding flanking sequences for a variant in a\
  \ sequence\n    position\n\n\e[1mSYNOPSIS\e[0m\n      bp_flanks --position POS [-p\
  \ POS ...]  [--flanklen INT]\n             accession | filename\n\n\e[1mDESCRIPTION\e\
  [0m\n    This script allows you to extract a subsequence around a region of\n  \
  \  interest from an existing sequence. The output if fasta formatted sequence\n\
  \    entry where the header line contains additional information about the\n   \
  \ location.\n\n\e[1mOPTIONS\e[0m\n    The script takes one unnamed argument which\
  \ be either a file name in the\n    local file system or a nucleotide sequence accession\
  \ number.\n\n      -p         Position uses simple nucleotide sequence feature table\n\
  \      --position notation to define the region of interest, typically a\n     \
  \            SNP or microsatellite repeat around which the flanks are\n        \
  \         defined.\n\n                 There can be more than one position option\
  \ or you can\n                 give a comma separated list to one position option.\n\
  \n                 The format of a position is:\n\n                     [id:] int\
  \ | range | in-between [-]\n\n                 The optional id is the name you want\
  \ to call the new\n                 sequence. If it not given in joins running number\
  \ to the\n                 entry name with an underscore.\n\n                 The\
  \ position is either a point (e.g. 234), a range (e.g\n                 250..300)\
  \ or insertion point between nucleotides\n                 (e.g. 234^235)\n\n  \
  \               If the position is not completely within the source\n          \
  \       sequence the output sequence will be truncated and it\n                \
  \ will print a warning.\n\n                 The optional hyphen [-] at the end of\
  \ the position\n                 indicates that that you want the retrieved sequence\
  \ to be\n                 in the opposite strand.\n\n\n      -f         Defaults\
  \ to 100. This is the length of the nucleotides\n      --flanklen sequence retrieved\
  \ on both sides of the given position.\n\n                 If the source file does\
  \ not contain\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output is a fasta formatted entry\
  \ where the description file contains\n    tag=value pairs for information about\
  \ where in the original sequence the\n    subsequence was taken.\n\n    The ID of\
  \ the fasta entry is the name given at the command line joined by\n    hyphen to\
  \ the filename or accesion of the source sequence. If no id is\n    given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is the\n       same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in upper\n\
  \    case and rest of the sequence in lower case characters.\n\n\e[1mEXAMPLE\e[0m\n\
  \      % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100\
  \ strand=1 allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\n\e[1mTODO\e[0m\n    The input files are assumed to\
  \ be in EMBL format and the sequences are\n    retrieved only from the EMB database.\
  \ Make this more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  \e\
  [1mMailing Lists\e[0m\n    User feedback is an integral part of the evolution of\
  \ this and other\n    Bioperl modules. Send your comments and suggestions preferably\
  \ to the\n    Bioperl mailing lists Your participation is much appreciated.\n\n\
  \      bioperl-l@bioperl.org                  - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  \e[1mReporting Bugs\e[0m\n    Report bugs to the\
  \ Bioperl bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \n\e[1mAUTHOR - Heikki Lehvaslaiho\e[0m\n    Email: <heikki-at-bioperl-dot-org>\n\
  \n\e[1mNAME\e[0m\n    bp_flanks - finding flanking sequences for a variant in a\
  \ sequence\n    position\n\n\e[1mSYNOPSIS\e[0m\n      bp_flanks --position POS [-p\
  \ POS ...]  [--flanklen INT]\n             accession | filename\n\n\e[1mDESCRIPTION\e\
  [0m\n    This script allows you to extract a subsequence around a region of\n  \
  \  interest from an existing sequence. The output if fasta formatted sequence\n\
  \    entry where the header line contains additional information about the\n   \
  \ location.\n\n\e[1mOPTIONS\e[0m\n    The script takes one unnamed argument which\
  \ be either a file name in the\n    local file system or a nucleotide sequence accession\
  \ number.\n\n      -p         Position uses simple nucleotide sequence feature table\n\
  \      --position notation to define the region of interest, typically a\n     \
  \            SNP or microsatellite repeat around which the flanks are\n        \
  \         defined.\n\n                 There can be more than one position option\
  \ or you can\n                 give a comma separated list to one position option.\n\
  \n                 The format of a position is:\n\n                     [id:] int\
  \ | range | in-between [-]\n\n                 The optional id is the name you want\
  \ to call the new\n                 sequence. If it not given in joins running number\
  \ to the\n                 entry name with an underscore.\n\n                 The\
  \ position is either a point (e.g. 234), a range (e.g\n                 250..300)\
  \ or insertion point between nucleotides\n                 (e.g. 234^235)\n\n  \
  \               If the position is not completely within the source\n          \
  \       sequence the output sequence will be truncated and it\n                \
  \ will print a warning.\n\n                 The optional hyphen [-] at the end of\
  \ the position\n                 indicates that that you want the retrieved sequence\
  \ to be\n                 in the opposite strand.\n\n\n      -f         Defaults\
  \ to 100. This is the length of the nucleotides\n      --flanklen sequence retrieved\
  \ on both sides of the given position.\n\n                 If the source file does\
  \ not contain\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output is a fasta formatted entry\
  \ where the description file contains\n    tag=value pairs for information about\
  \ where in the original sequence the\n    subsequence was taken.\n\n    The ID of\
  \ the fasta entry is the name given at the command line joined by\n    hyphen to\
  \ the filename or accesion of the source sequence. If no id is\n    given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is the\n       same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in upper\n\
  \    case and rest of the sequence in lower case characters.\n\n\e[1mEXAMPLE\e[0m\n\
  \      % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100\
  \ strand=1 allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\n\e[1mTODO\e[0m\n    The input files are assumed to\
  \ be in EMBL format and the sequences are\n    retrieved only from the EMB database.\
  \ Make this more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  \e\
  [1mMailing Lists\e[0m\n    User feedback is an integral part of the evolution of\
  \ this and other\n    Bioperl modules. Send your comments and suggestions preferably\
  \ to the\n    Bioperl mailing lists Your participation is much appreciated.\n\n\
  \      bioperl-l@bioperl.org                  - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  \e[1mReporting Bugs\e[0m\n    Report bugs to the\
  \ Bioperl bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \n\e[1mAUTHOR - Heikki Lehvaslaiho\e[0m\n    Email: <heikki-at-bioperl-dot-org>\n\
  \n\e[1mNAME\e[0m\n    bp_flanks - finding flanking sequences for a variant in a\
  \ sequence\n    position\n\n\e[1mSYNOPSIS\e[0m\n      bp_flanks --position POS [-p\
  \ POS ...]  [--flanklen INT]\n             accession | filename\n\n\e[1mDESCRIPTION\e\
  [0m\n    This script allows you to extract a subsequence around a region of\n  \
  \  interest from an existing sequence. The output if fasta formatted sequence\n\
  \    entry where the header line contains additional information about the\n   \
  \ location.\n\n\e[1mOPTIONS\e[0m\n    The script takes one unnamed argument which\
  \ be either a file name in the\n    local file system or a nucleotide sequence accession\
  \ number.\n\n      -p         Position uses simple nucleotide sequence feature table\n\
  \      --position notation to define the region of interest, typically a\n     \
  \            SNP or microsatellite repeat around which the flanks are\n        \
  \         defined.\n\n                 There can be more than one position option\
  \ or you can\n                 give a comma separated list to one position option.\n\
  \n                 The format of a position is:\n\n                     [id:] int\
  \ | range | in-between [-]\n\n                 The optional id is the name you want\
  \ to call the new\n                 sequence. If it not given in joins running number\
  \ to the\n                 entry name with an underscore.\n\n                 The\
  \ position is either a point (e.g. 234), a range (e.g\n                 250..300)\
  \ or insertion point between nucleotides\n                 (e.g. 234^235)\n\n  \
  \               If the position is not completely within the source\n          \
  \       sequence the output sequence will be truncated and it\n                \
  \ will print a warning.\n\n                 The optional hyphen [-] at the end of\
  \ the position\n                 indicates that that you want the retrieved sequence\
  \ to be\n                 in the opposite strand.\n\n\n      -f         Defaults\
  \ to 100. This is the length of the nucleotides\n      --flanklen sequence retrieved\
  \ on both sides of the given position.\n\n                 If the source file does\
  \ not contain\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output is a fasta formatted entry\
  \ where the description file contains\n    tag=value pairs for information about\
  \ where in the original sequence the\n    subsequence was taken.\n\n    The ID of\
  \ the fasta entry is the name given at the command line joined by\n    hyphen to\
  \ the filename or accesion of the source sequence. If no id is\n    given a series\
  \ of consecutive integers is used.\n\n    The tag=value pairs are:\n\n    oripos=int\n\
  \       position in the source file\n\n    strand=1|-1\n       strand of the sequence\
  \ compared to the source sequence\n\n    allelepos=int\n       position of the region\
  \ of interest in the current entry. The tag is the\n       same as used by dbSNP@NCBI\n\
  \n    The sequence highlights the allele variant position by showing it in upper\n\
  \    case and rest of the sequence in lower case characters.\n\n\e[1mEXAMPLE\e[0m\n\
  \      % bp_flanks ~/seq/ar.embl\n\n      >1_/HOME/HEIKKI/SEQ/AR.EMBL oripos=100\
  \ strand=1 allelepos=100\n      taataactcagttcttatttgcacctacttcagtggacactgaatttggaaggtggagga\n\
  \      ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag\n      acagactgtgagcctagcagggcagatcttgtccaccgtgtgtcttcttctgcacgagac\n\
  \      tttgaggctgtcagagcgct\n\n\e[1mTODO\e[0m\n    The input files are assumed to\
  \ be in EMBL format and the sequences are\n    retrieved only from the EMB database.\
  \ Make this more generic and use the\n    registry.\n\n    head1 FEEDBACK\n\n  \e\
  [1mMailing Lists\e[0m\n    User feedback is an integral part of the evolution of\
  \ this and other\n    Bioperl modules. Send your comments and suggestions preferably\
  \ to the\n    Bioperl mailing lists Your participation is much appreciated.\n\n\
  \      bioperl-l@bioperl.org                  - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  \e[1mReporting Bugs\e[0m\n    Report bugs to the\
  \ Bioperl bug tracking system to help us keep track the\n    bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \n\e[1mAUTHOR - Heikki Lehvaslaiho\e[0m\n    Email: <heikki-at-bioperl-dot-org>\n\
  \n"
generated_using:
- --help
