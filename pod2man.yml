!Command
positional: []
named:
- !Flag
  description: Sets the quote marks used to surround C<> text. --lquote sets the left
    quote mark and --rquote sets the right quote mark. Either may also be set to the
    special value "none", in which case no quote mark is added on that side of C<>
    text (but the font is still changed for troff output). Also see the --quotes option,
    which can be used to set both quotes at once. If both --quotes and one of the
    other options is set, --lquote or --rquote overrides --quotes.
  synonyms:
  - --rquote
  args: !SimpleFlagArg
    name: quote
  optional: true
- !Flag
  description: Set the name of the manual page for the ".TH" macro to name. Without
    this option, the manual name is set to the uppercased base name of the file being
    converted unless the manual section is 3, in which case the path is parsed to
    see if it is a Perl module path. If it is, a path like ".../lib/Pod/Man.pm" is
    converted into a name like "Pod::Man". This option, if given, overrides any automatic
    determination of the name. Although one does not have to follow this convention,
    be aware that the convention for UNIX man pages for commands is for the man page
    title to be in all-uppercase, even if the command isn't. This option is probably
    not useful when converting multiple POD files at once. When converting POD source
    from standard input, the name will be set to "STDIN" if this option is not provided.
    Providing this option is strongly recommended to set a meaningful manual page
    name.
  synonyms:
  - -n
  - --name
  args: !SimpleFlagArg
    name: name
  optional: true
- !Flag
  description: 'Normally, L<> formatting codes with a URL but anchor text are formatted
    to show both the anchor text and the URL. In other words: L<foo|http://example.com/>
    is formatted as: foo <http://example.com/> This flag, if given, suppresses the
    URL when anchor text is given, so this example would be formatted as just "foo".
    This can produce less cluttered output in cases where the URLs are not particularly
    important.'
  synonyms:
  - --nourls
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Set the default header to indicate that this page is part of the standard
    Perl release, if --center is not also given.
  synonyms:
  - -o
  - --official
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Sets the quote marks used to surround C<> text to quotes. If quotes
    is a single character, it is used as both the left and right quote. Otherwise,
    it is split in half, and the first half of the string is used as the left quote
    and the second is used as the right quote. quotes may also be set to the special
    value "none", in which case no quote marks are added around C<> text (but the
    font is still changed for troff output). Also see the --lquote and --rquote options,
    which can be used to set the left and right quotes independently. If both --quotes
    and one of the other options is set, --lquote or --rquote overrides --quotes.
  synonyms:
  - -q
  - --quotes
  args: !SimpleFlagArg
    name: quotes
  optional: true
- !Flag
  description: 'Set the centered footer for the ".TH" macro to version. By default,
    this is set to the version of Perl you run pod2man under. Setting this to the
    empty string will cause some *roff implementations to use the system default value.
    Note that some system "an" macro sets assume that the centered footer will be
    a modification date and will prepend something like "Last modified: ". If this
    is the case for your target system, you may want to set --release to the last
    modified date and --date to the version number.'
  synonyms:
  - -r
  - --release
  args: !SimpleFlagArg
    name: version
  optional: true
- !Flag
  description: Set the section for the ".TH" macro. The standard section numbering
    convention is to use 1 for user commands, 2 for system calls, 3 for functions,
    4 for devices, 5 for file formats, 6 for games, 7 for miscellaneous information,
    and 8 for administrator commands. There is a lot of variation here, however; some
    systems (like Solaris) use 4 for file formats, 5 for miscellaneous information,
    and 7 for devices. Still others use 1m instead of 8, or some mix of both. About
    the only section numbers that are reliably consistent are 1, 2, and 3. By default,
    section 1 will be used unless the file ends in ".pm", in which case section 3
    will be selected.
  synonyms:
  - -s
  - --section
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: By default, pod2man dies if any errors are detected in the POD input.
    If --stderr is given and no --errors flag is present, errors are sent to standard
    error, but pod2man does not abort. This is equivalent to "--errors=stderr" and
    is supported for backward compatibility.
  synonyms:
  - --stderr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: By default, pod2man produces the most conservative possible *roff output
    to try to ensure that it will work with as many different *roff implementations
    as possible. Many *roff implementations cannot handle non-ASCII characters, so
    this means all non-ASCII characters are converted either to a *roff escape sequence
    that tries to create a properly accented character (at least for troff output)
    or to "X". This option says to instead output literal UTF-8 characters. If your
    *roff implementation can handle it, this is the best output format to use and
    avoids corruption of documents containing non-ASCII characters. However, be warned
    that *roff source with literal UTF-8 characters is not supported by many implementations
    and may even result in segfaults and other bad behavior. Be aware that, when using
    this option, the input encoding of your POD source should be properly declared
    unless it's US-ASCII. Pod::Simple will attempt to guess the encoding and may be
    successful if it's Latin-1 or UTF-8, but it will warn, which by default results
    in a pod2man failure. Use the "=encoding" command to declare the encoding. See
    perlpod(1) for more information.
  synonyms:
  - -u
  - --utf8
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print out the name of each output file as it is being generated.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
command:
- /opt/conda/bin/pod2man
subcommands: []
help_flag:
usage_flag:
version_flag:
