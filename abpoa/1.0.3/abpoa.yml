!Command
positional:
- !Positional
  description: ''
  position: 0
  name: in.fa/fq
  optional: false
named:
- !Flag
  description: 'alignment mode [0] 0: global, 1: local, 2: extension'
  synonyms:
  - -m
  - --aln-mode
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: INT       match score [2]
  synonyms:
  - -M
  - --match
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: mismatch penalty [4]
  synonyms:
  - -X
  - --mismatch
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: (,INT) gap opening penalty (O1,O2) [4,24]
  synonyms:
  - -O
  - --gap-open
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'INT(,INT) gap extension penalty (E1,E2) [2,1] abPOA provides three
    gap penalty modes, cost of a g-long gap: - convex (default): min{O1+g*E1, O2+g*E2}
    - affine (set O2 as 0): O1+g*E1 - linear (set O1 as 0): g*E1'
  synonyms:
  - -E
  - --gap-ext
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT       first adaptive banding parameter [10] set b as < 0 to disable
    adaptive banded DP
  synonyms:
  - -b
  - --extra-b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: FLOAT     second adaptive banding parameter [0.01] the number of extra
    bases added on both sites of the band is b+f*L, where L is the length of the aligned
    sequence
  synonyms:
  - -f
  - --extra-f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: input file is a list of sequence file names [False] each line is one
    sequence file containing a set of sequences which will be aligned by abPOA to
    generate a consensus sequence
  synonyms:
  - -l
  - --in-list
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: FILE      ouput to FILE [stdout]
  synonyms:
  - -o
  - --output
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'INT       output result mode [0] - 0: consensus (FASTA format) - 1:
    MSA (PIR format) - 2: both 0 & 1'
  synonyms:
  - -r
  - --result
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: FILE      dump final alignment graph to FILE (.pdf/.png) [Null]
  synonyms:
  - -g
  - --out-pog
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'algorithm to use for consensus calling [0] - 0: heaviest bundling
    - 1: heaviest in column'
  synonyms:
  - -a
  - --cons-alg
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: input data is diploid [False] -a/--cons-alg will be set as 1 when input
    is diploid and at most two consensus sequences will be generated
  synonyms:
  - -d
  - --diploid
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: min frequency of each consensus for diploid input [0.30]
  synonyms:
  - -q
  - --min-freq
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
command:
- abpoa
parent:
subcommands: []
help_flag: !Flag
  description: print this help usage information
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show version number
  synonyms:
  - -v
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "\nabpoa: \e[1m\e[4ma\e[0mdaptive \e[1m\e[4mb\e[0manded \e[1m\e[4mP\e[0martial\
  \ \e[1m\e[4mO\e[0mrder \e[1m\e[4mA\e[0mlignment \n\nVersion: 1.0.3\tContact: yangao07@hit.edu.cn\n\
  \nUsage: abpoa [options] <in.fa/fq> > cons.fa/msa.out\n\nOptions:\n  Alignment:\n\
  \    -m --aln-mode INT       alignment mode [0]\n                              0:\
  \ global, 1: local, 2: extension\n    -M --match    INT       match score [2]\n\
  \    -X --mismatch INT       mismatch penalty [4]\n    -O --gap-open INT(,INT) gap\
  \ opening penalty (O1,O2) [4,24]\n    -E --gap-ext  INT(,INT) gap extension penalty\
  \ (E1,E2) [2,1]\n                            abPOA provides three gap penalty modes,\
  \ cost of a g-long gap:\n                            - convex (default): min{O1+g*E1,\
  \ O2+g*E2}\n                            - affine (set O2 as 0): O1+g*E1\n      \
  \                      - linear (set O1 as 0): g*E1\n  Adaptive banded DP:\n   \
  \ -b --extra-b  INT       first adaptive banding parameter [10]\n              \
  \              set b as < 0 to disable adaptive banded DP\n    -f --extra-f  FLOAT\
  \     second adaptive banding parameter [0.01]\n                            the\
  \ number of extra bases added on both sites of the band is\n                   \
  \         b+f*L, where L is the length of the aligned sequence\n  Input/Output:\n\
  \    -l --in-list            input file is a list of sequence file names [False]\n\
  \                            each line is one sequence file containing a set of\
  \ sequences\n                            which will be aligned by abPOA to generate\
  \ a consensus sequence\n    -o --output   FILE      ouput to FILE [stdout]\n   \
  \ -r --result   INT       output result mode [0]\n                            -\
  \ 0: consensus (FASTA format)\n                            - 1: MSA (PIR format)\n\
  \                            - 2: both 0 & 1\n    -g --out-pog  FILE      dump final\
  \ alignment graph to FILE (.pdf/.png) [Null]\n\n    -h --help               print\
  \ this help usage information\n    -v --version            show version number\n\
  \  Parameters under development:\n    -a --cons-alg INT       algorithm to use for\
  \ consensus calling [0]\n                            - 0: heaviest bundling\n  \
  \                          - 1: heaviest in column\n    -d --diploid           \
  \ input data is diploid [False]\n                            -a/--cons-alg will\
  \ be set as 1 when input is diploid\n                            and at most two\
  \ consensus sequences will be generated\n    -q --min-freq FLOAT     min frequency\
  \ of each consensus for diploid input [0.30]\n\n"
generated_using:
- --help
