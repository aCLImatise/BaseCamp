!Command
positional: []
named: []
command:
- _iep
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Calculate the isoelectric point of proteins\nVersion: EMBOSS:6.6.0.0\n\
  \n   Standard (Mandatory) qualifiers (* if not always prompted):\n  [-sequence]\
  \          seqall     Protein sequence(s) filename and optional\n              \
  \                    format, or reference (input USA)\n*  -graph              xygraph\
  \    [$EMBOSS_GRAPHICS value, or png] Graph type\n                             \
  \     (ps, hpgl, hp7470, hp7580, meta, cps, tek,\n                             \
  \     tekt, none, data, png, gif, svg)\n*  -outfile            outfile    [*.iep]\
  \ Output file name\n\n   Additional (Optional) qualifiers:\n   -amino          \
  \    integer    [1] Number of N-termini (Integer 0 or more)\n   -carboxyl      \
  \     integer    [1] Number of C-termini (Integer 0 or more)\n   -[no]termini  \
  \      boolean    [Y] Include charge at N and C terminus\n   -lysinemodified   \
  \  integer    [0] Number of modified lysines (Integer 0 or\n                   \
  \               more)\n   -disulphides        integer    [0] Number of disulphide\
  \ bridges (Integer 0\n                                  or more)\n\n   Advanced\
  \ (Unprompted) qualifiers:\n   -pkdata             datafile   [Epk.dat] Values of\
  \ pKa for amino acids\n   -step               float      [.5] Step value for pH\
  \ (Number from 0.010 to\n                                  1.000)\n   -plot    \
  \           toggle     [N] Plot charge vs pH\n   -[no]report         toggle    \
  \ [Y] Write results to a file\n\n   General qualifiers:\n   -help              \
  \ boolean    Report command line options and exit. More\n                      \
  \            information on associated and general\n                           \
  \       qualifiers can be found with -help -verbose\n\n"
generated_using:
- --help
