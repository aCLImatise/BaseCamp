!Command
positional: []
named:
- !Flag
  description: "pattern    The standard IUPAC one-letter codes for the amino acids\
    \ are used. The symbol 'x' is used for a position where any amino acid is accepted.\
    \ Ambiguities are indicated by listing the acceptable amino acids for a given\
    \ position, between square parentheses '[ ]'. For example: [ALT] stands for Ala\
    \ or Leu or Thr. Ambiguities are also indicated by listing between a pair of curly\
    \ brackets '{ }' the amino acids that are not accepted at a gven position. For\
    \ example: {AM} stands for any amino acid except Ala and Met. Each element in\
    \ a pattern is separated from its neighbor by a '-'. (Optional in fuzztran) Repetition\
    \ of an element of the pattern can be indicated by following that element with\
    \ a numerical value or a numerical range between parenthesis. Examples: x(3) corresponds\
    \ to x-x-x, x(2,4) corresponds to x-x or x-x-x or x-x-x-x. When a pattern is restricted\
    \ to either the N- or C-terminal of a sequence, that pattern either starts with\
    \ a '<' symbol or respectively ends with a '>' symbol. A period ends the pattern.\
    \ (Optional in fuzztran). For example, [DE](2)HS{P}X(2)PX(2,4)C"
  synonyms:
  - -pattern
  args: !EmptyFlagArg {}
  optional: true
command:
- _fuzztran
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Search for patterns in protein sequences (translated)\nVersion: EMBOSS:6.6.0.0\n\
  \n   Standard (Mandatory) qualifiers:\n  [-sequence]          seqall     Nucleotide\
  \ sequence(s) filename and optional\n                                  format, or\
  \ reference (input USA)\n   -pattern            pattern    The standard IUPAC one-letter\
  \ codes for the\n                                  amino acids are used.\n     \
  \                             The symbol 'x' is used for a position where\n    \
  \                              any amino acid is accepted.\n                   \
  \               Ambiguities are indicated by listing the\n                     \
  \             acceptable amino acids for a given position,\n                   \
  \               between square parentheses '[ ]'. For\n                        \
  \          example: [ALT] stands for Ala or Leu or Thr.\n                      \
  \            Ambiguities are also indicated by listing\n                       \
  \           between a pair of curly brackets '{ }' the\n                       \
  \           amino acids that are not accepted at a gven\n                      \
  \            position. For example: {AM} stands for any\n                      \
  \            amino acid except Ala and Met.\n                                  Each\
  \ element in a pattern is separated from\n                                  its\
  \ neighbor by a '-'. (Optional in\n                                  fuzztran)\n\
  \                                  Repetition of an element of the pattern can\n\
  \                                  be indicated by following that element with\n\
  \                                  a numerical value or a numerical range\n    \
  \                              between parenthesis. Examples: x(3)\n           \
  \                       corresponds to x-x-x, x(2,4) corresponds to\n          \
  \                        x-x or x-x-x or x-x-x-x.\n                            \
  \      When a pattern is restricted to either the\n                            \
  \      N- or C-terminal of a sequence, that pattern\n                          \
  \        either starts with a '<' symbol or\n                                  respectively\
  \ ends with a '>' symbol.\n                                  A period ends the pattern.\
  \ (Optional in\n                                  fuzztran).\n                 \
  \                 For example, [DE](2)HS{P}X(2)PX(2,4)C\n  [-outfile]          \
  \ report     [*.fuzztran] Output report file name\n                            \
  \      (default -rformat table)\n\n   Additional (Optional) qualifiers:\n   -frame\
  \              menu       [1] Frame(s) to translate (Values: 1 (1); 2\n        \
  \                          (2); 3 (3); F (Forward three frames); -1\n          \
  \                        (-1); -2 (-2); -3 (-3); R (Reverse three\n            \
  \                      frames); 6 (All six frames))\n   -table              menu\
  \       [0] Code to use (Values: 0 (Standard); 1\n                             \
  \     (Standard (with alternative initiation\n                                 \
  \ codons)); 2 (Vertebrate Mitochondrial); 3\n                                  (Yeast\
  \ Mitochondrial); 4 (Mold, Protozoan,\n                                  Coelenterate\
  \ Mitochondrial and\n                                  Mycoplasma/Spiroplasma);\
  \ 5 (Invertebrate\n                                  Mitochondrial); 6 (Ciliate\
  \ Macronuclear and\n                                  Dasycladacean); 9 (Echinoderm\n\
  \                                  Mitochondrial); 10 (Euplotid Nuclear); 11\n \
  \                                 (Bacterial); 12 (Alternative Yeast Nuclear);\n\
  \                                  13 (Ascidian Mitochondrial); 14 (Flatworm\n \
  \                                 Mitochondrial); 15 (Blepharisma\n            \
  \                      Macronuclear); 16 (Chlorophycean\n                      \
  \            Mitochondrial); 21 (Trematode\n                                  Mitochondrial);\
  \ 22 (Scenedesmus obliquus);\n                                  23 (Thraustochytrium\
  \ Mitochondrial))\n\n   Advanced (Unprompted) qualifiers: (none)\n   General qualifiers:\n\
  \   -help               boolean    Report command line options and exit. More\n\
  \                                  information on associated and general\n     \
  \                             qualifiers can be found with -help -verbose\n\n"
generated_using:
- --help
