!Command
positional: []
named:
- !Flag
  description: integer    [1] Number of times to perform the mutation operations (Integer
    0 or more)
  synonyms:
  - -count
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [0] Types of point mutations to perform (Values: 0 (None);
    1 (Any of the following); 2 (Insertions); 3 (Deletions); 4 (Changes); 5 (Duplications);
    6 (Moves))'
  synonyms:
  - -point
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [0] Types of block mutations to perform (Values: 0 (None);
    1 (Any of the following); 2 (Insertions); 3 (Deletions); 4 (Changes); 5 (Duplications);
    6 (Moves))'
  synonyms:
  - -block
  args: !EmptyFlagArg {}
  optional: true
command:
- msbar
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Mutate a sequence\nVersion: EMBOSS:6.6.0.0\n\n   Standard (Mandatory)\
  \ qualifiers (* if not always prompted):\n  [-sequence]          seqall     Sequence(s)\
  \ filename and optional format, or\n                                  reference\
  \ (input USA)\n   -count              integer    [1] Number of times to perform\
  \ the mutation\n                                  operations (Integer 0 or more)\n\
  \   -point              menu       [0] Types of point mutations to perform\n   \
  \                               (Values: 0 (None); 1 (Any of the following);\n \
  \                                 2 (Insertions); 3 (Deletions); 4 (Changes);\n\
  \                                  5 (Duplications); 6 (Moves))\n   -block     \
  \         menu       [0] Types of block mutations to perform\n                 \
  \                 (Values: 0 (None); 1 (Any of the following);\n               \
  \                   2 (Insertions); 3 (Deletions); 4 (Changes);\n              \
  \                    5 (Duplications); 6 (Moves))\n*  -codon              menu \
  \      [0] Types of codon mutations to perform.\n                              \
  \    These are only done if the sequence is\n                                  nucleic.\
  \ (Values: 0 (None); 1 (Any of the\n                                  following);\
  \ 2 (Insertions); 3 (Deletions); 4\n                                  (Changes);\
  \ 5 (Duplications); 6 (Moves))\n  [-outseq]            seqoutall  [<sequence>.<format>]\
  \ Sequence set(s)\n                                  filename and optional format\
  \ (output USA)\n\n   Additional (Optional) qualifiers (* if not always prompted):\n\
  *  -inframe            boolean    [N] Do 'codon' and 'block' operations in\n   \
  \                               frame\n\n   Advanced (Unprompted) qualifiers:\n\
  \   -othersequence      seqall     [asis:N] If you require that the resulting\n\
  \                                  mutated sequence should not match a set of\n\
  \                                  other sequences, then you can specify that\n\
  \                                  set of sequences here. For example, if you\n\
  \                                  require that the mutated sequence should not\n\
  \                                  be the same as the input sequence, enter\n  \
  \                                the input sequence here. If you want the\n    \
  \                              result to be different to previous results\n    \
  \                              of this program, specify the previous result\n  \
  \                                sequences here. The program will check that\n \
  \                                 the result does not match the sequences\n    \
  \                              specified here before writing it out. If a\n    \
  \                              match is found, then the mutation is started\n  \
  \                                again with a fresh copy of the input\n        \
  \                          sequence. If, after 10 such retries, there\n        \
  \                          is still a match to the set of sequence\n           \
  \                       given here, then the matching mutated\n                \
  \                  sequence is written with a warning message.\n   -minimum    \
  \        integer    [1] Minimum size for a block mutation\n                    \
  \              (Integer 0 or more)\n   -maximum            integer    [10] Maximum\
  \ size for a block mutation (Any\n                                  integer value)\n\
  \n   General qualifiers:\n   -help               boolean    Report command line\
  \ options and exit. More\n                                  information on associated\
  \ and general\n                                  qualifiers can be found with -help\
  \ -verbose\n\n"
generated_using:
- --help
