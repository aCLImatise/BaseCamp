!Command
positional: []
named:
- !Flag
  description: "string     [*] By default every feature in the feature table is allowed.\
    \ You can set this to be any feature type you wish to allow. See http://www.ebi.ac.uk/embl/WebFeat/\
    \ for a list of the EMBL feature types and see Appendix A of the Swissprot user\
    \ manual in http://www.expasy.org/sprot/userman.html for a list of the Swissprot\
    \ feature types. The type may be wildcarded by using '*'. If you wish to allow\
    \ more than one type, separate their names with the character '|', eg: *UTR |\
    \ intron (Any string)"
  synonyms:
  - -atype
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] By default every feature in the feature table is allowed.\
    \ You can set this to be any feature type you wish to allow. See http://www.ebi.ac.uk/embl/WebFeat/\
    \ for a list of the EMBL feature types and see Appendix A of the Swissprot user\
    \ manual in http://www.expasy.org/sprot/userman.html for a list of the Swissprot\
    \ feature types. The type may be wildcarded by using '*'. If you wish to allow\
    \ more than one type, separate their names with the character '|', eg: *UTR |\
    \ intron (Any string)"
  synonyms:
  - -btype
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: integer    [0] If this is greater or equal to 'maxrange', then no min
    or max range is specified (Any integer value)
  synonyms:
  - -minrange
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: integer    [0] If this is less than or equal to 'minrange', then no
    min or max range is specified (Any integer value)
  synonyms:
  - -maxrange
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] By default any feature source in the feature table\
    \ is allowed. You can set this to match any feature source you wish to allow.\
    \ The source name is usually either the name of the program that detected the\
    \ feature or it is the feature table (eg: EMBL) that the feature came from. The\
    \ source may be wildcarded by using '*'. If you wish to allow more than one source,\
    \ separate their names with the character '|', eg: gene* | embl (Any string)"
  synonyms:
  - -asource
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [0] By default any feature sense is allowed. You can set
    this to match the required sense. (Values: 0 (Any sense); + (Forward sense); -
    (Reverse sense))'
  synonyms:
  - -asense
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: float      [0.0] If this is greater than or equal to the maximum score,
    then any score is allowed. (Any numeric value)
  synonyms:
  - -aminscore
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: float      [0.0] If this is less than or equal to the maximum score,
    then any score is permitted. (Any numeric value)
  synonyms:
  - -amaxscore
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] Tags are the types of extra values that a feature may\
    \ have. For example in the EMBL feature table, a 'CDS' type of feature may have\
    \ the tags '/codon', '/codon_start', '/db_xref', '/EC_number', '/evidence', '/exception',\
    \ '/function', '/gene', '/label', '/map', '/note', '/number', '/partial', '/product',\
    \ '/protein_id', '/pseudo', '/standard_name', '/translation', '/transl_except',\
    \ '/transl_table', or '/usedin'. Some of these tags also have values, for example\
    \ '/gene' can have the value of the gene name. By default any feature tag in the\
    \ feature table is allowed. You can set this to match any feature tag you wish\
    \ to allow. The tag may be wildcarded by using '*'. If you wish to allow more\
    \ than one tag, separate their names with the character '|', eg: gene | label\
    \ (Any string)"
  synonyms:
  - -atag
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] Tag values are the values associated with a feature\
    \ tag. Tags are the types of extra values that a feature may have. For example\
    \ in the EMBL feature table, a 'CDS' type of feature may have the tags '/codon',\
    \ '/codon_start', '/db_xref', '/EC_number', '/evidence', '/exception', '/function',\
    \ '/gene', '/label', '/map', '/note', '/number', '/partial', '/product', '/protein_id',\
    \ '/pseudo', '/standard_name', '/translation', '/transl_except', '/transl_table',\
    \ or '/usedin'. Only some of these tags can have values, for example '/gene' can\
    \ have the value of the gene name. By default any feature tag value in the feature\
    \ table is allowed. You can set this to match any feature tag value you wish to\
    \ allow. The tag value may be wildcarded by using '*'. If you wish to allow more\
    \ than one tag value, separate their names with the character '|', eg: pax* |\
    \ 10 (Any string)"
  synonyms:
  - -avalue
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] By default any feature source in the feature table\
    \ is allowed. You can set this to match any feature source you wish to allow.\
    \ The source name is usually either the name of the program that detected the\
    \ feature or it is the feature table (eg: EMBL) that the feature came from. The\
    \ source may be wildcarded by using '*'. If you wish to allow more than one source,\
    \ separate their names with the character '|', eg: gene* | embl (Any string)"
  synonyms:
  - -bsource
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [0] By default any feature sense is allowed. You can set
    this to match the required sense. (Values: 0 (Any sense); + (Forward sense); -
    (Reverse sense))'
  synonyms:
  - -bsense
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: float      [0.0] If this is greater than or equal to the maximum score,
    then any score is allowed. (Any numeric value)
  synonyms:
  - -bminscore
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: float      [0.0] If this is less than or equal to the maximum score,
    then any score is permitted. (Any numeric value)
  synonyms:
  - -bmaxscore
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] Tags are the types of extra values that a feature may\
    \ have. For example in the EMBL feature table, a 'CDS' type of feature may have\
    \ the tags '/codon', '/codon_start', '/db_xref', '/EC_number', '/evidence', '/exception',\
    \ '/function', '/gene', '/label', '/map', '/note', '/number', '/partial', '/product',\
    \ '/protein_id', '/pseudo', '/standard_name', '/translation', '/transl_except',\
    \ '/transl_table', or '/usedin'. Some of these tags also have values, for example\
    \ '/gene' can have the value of the gene name. By default any feature tag in the\
    \ feature table is allowed. You can set this to match any feature tag you wish\
    \ to allow. The tag may be wildcarded by using '*'. If you wish to allow more\
    \ than one tag, separate their names with the character '|', eg: gene | label\
    \ (Any string)"
  synonyms:
  - -btag
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "string     [*] Tag values are the values associated with a feature\
    \ tag. Tags are the types of extra values that a feature may have. For example\
    \ in the EMBL feature table, a 'CDS' type of feature may have the tags '/codon',\
    \ '/codon_start', '/db_xref', '/EC_number', '/evidence', '/exception', '/function',\
    \ '/gene', '/label', '/map', '/note', '/number', '/partial', '/product', '/protein_id',\
    \ '/pseudo', '/standard_name', '/translation', '/transl_except', '/transl_table',\
    \ or '/usedin'. Only some of these tags can have values, for example '/gene' can\
    \ have the value of the gene name. By default any feature tag value in the feature\
    \ table is allowed. You can set this to match any feature tag value you wish to\
    \ allow. The tag value may be wildcarded by using '*'. If you wish to allow more\
    \ than one tag value, separate their names with the character '|', eg: pax* |\
    \ 10 (Any string)"
  synonyms:
  - -bvalue
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [A] This allows you to specify the allowed overlaps of
    the features A and B. You can allow any or no overlaps, specify that they must
    or must not overlap, that one must or must not be wholly enclosed within another
    feature. (Values: A (Any); O (Overlap required); NO (No overlaps are allowed);
    NW (Overlap required but not within); AW (A must be all within B); BW (B must
    be all within A))'
  synonyms:
  - -overlap
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [N] This allows you to specify the positions from which
    the allowed minimum or maximum distance between the features is measured (Values:
    N (From nearest ends); L (From left ends); R (From right ends); F (From furthest
    ends))'
  synonyms:
  - -rangetype
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "menu       [A] This allows you to specify the required sense that\
    \ the two features must be on. This is ignored (always 'Any') when looking at\
    \ protein sequence features. (Values: A (Any sense); S (Same sense); O (Opposite\
    \ sense))"
  synonyms:
  - -sense
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'menu       [A] This allows you to specify the required order of the
    two features. The order is measured from the start positions of the features.
    This criterion is always applied despite the specified overlap type required.
    (Values: A (Any); AB (Feature A then feature B); BA (Feature B then feature A))'
  synonyms:
  - -order
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: toggle     [N] If you set this to be true, then the two features themselves
    will be written out. If it is left as false, then a single feature will be written
    out covering the two features you found.
  synonyms:
  - -twoout
  args: !EmptyFlagArg {}
  optional: true
command:
- twofeat
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Find neighbouring pairs of features in sequence(s)\nVersion: EMBOSS:6.6.0.0\n\
  \n   Standard (Mandatory) qualifiers:\n  [-sequence]          seqall     Sequence(s)\
  \ filename and optional format, or\n                                  reference\
  \ (input USA)\n   -atype              string     [*] By default every feature in\
  \ the feature\n                                  table is allowed. You can set this\
  \ to be any\n                                  feature type you wish to allow.\n\
  \                                  See http://www.ebi.ac.uk/embl/WebFeat/ for a\n\
  \                                  list of the EMBL feature types and see\n    \
  \                              Appendix A of the Swissprot user manual in\n    \
  \                              http://www.expasy.org/sprot/userman.html for\n  \
  \                                a list of the Swissprot feature types.\n      \
  \                            The type may be wildcarded by using '*'.\n        \
  \                          If you wish to allow more than one type,\n          \
  \                        separate their names with the character '|',\n        \
  \                          eg:\n                                  *UTR | intron\
  \ (Any string)\n   -btype              string     [*] By default every feature in\
  \ the feature\n                                  table is allowed. You can set this\
  \ to be any\n                                  feature type you wish to allow.\n\
  \                                  See http://www.ebi.ac.uk/embl/WebFeat/ for a\n\
  \                                  list of the EMBL feature types and see\n    \
  \                              Appendix A of the Swissprot user manual in\n    \
  \                              http://www.expasy.org/sprot/userman.html for\n  \
  \                                a list of the Swissprot feature types.\n      \
  \                            The type may be wildcarded by using '*'.\n        \
  \                          If you wish to allow more than one type,\n          \
  \                        separate their names with the character '|',\n        \
  \                          eg:\n                                  *UTR | intron\
  \ (Any string)\n   -minrange           integer    [0] If this is greater or equal\
  \ to\n                                  'maxrange', then no min or max range is\n\
  \                                  specified (Any integer value)\n   -maxrange \
  \          integer    [0] If this is less than or equal to\n                   \
  \               'minrange', then no min or max range is\n                      \
  \            specified (Any integer value)\n  [-outfile]           report     [*.twofeat]\
  \ Output report file name (default\n                                  -rformat table)\n\
  \n   Additional (Optional) qualifiers (* if not always prompted):\n   -asource \
  \           string     [*] By default any feature source in the\n              \
  \                    feature table is allowed. You can set this\n              \
  \                    to match any feature source you wish to\n                 \
  \                 allow.\n                                  The source name is usually\
  \ either the name\n                                  of the program that detected\
  \ the feature or\n                                  it is the feature table (eg:\
  \ EMBL) that the\n                                  feature came from.\n       \
  \                           The source may be wildcarded by using '*'.\n       \
  \                           If you wish to allow more than one source,\n       \
  \                           separate their names with the character '|',\n     \
  \                             eg:\n                                  gene* | embl\
  \ (Any string)\n   -asense             menu       [0] By default any feature sense\
  \ is allowed.\n                                  You can set this to match the required\n\
  \                                  sense. (Values: 0 (Any sense); + (Forward\n \
  \                                 sense); - (Reverse sense))\n   -aminscore    \
  \      float      [0.0] If this is greater than or equal to\n                  \
  \                the maximum score, then any score is\n                        \
  \          allowed. (Any numeric value)\n   -amaxscore          float      [0.0]\
  \ If this is less than or equal to the\n                                  maximum\
  \ score, then any score is permitted.\n                                  (Any numeric\
  \ value)\n   -atag               string     [*] Tags are the types of extra values\
  \ that\n                                  a feature may have. For example in the\
  \ EMBL\n                                  feature table, a 'CDS' type of feature\
  \ may\n                                  have the tags '/codon', '/codon_start',\n\
  \                                  '/db_xref', '/EC_number', '/evidence',\n    \
  \                              '/exception', '/function', '/gene',\n           \
  \                       '/label', '/map', '/note', '/number',\n                \
  \                  '/partial', '/product', '/protein_id',\n                    \
  \              '/pseudo', '/standard_name', '/translation',\n                  \
  \                '/transl_except', '/transl_table', or\n                       \
  \           '/usedin'. Some of these tags also have\n                          \
  \        values, for example '/gene' can have the\n                            \
  \      value of the gene name.\n                                  By default any\
  \ feature tag in the feature\n                                  table is allowed.\
  \ You can set this to match\n                                  any feature tag you\
  \ wish to allow.\n                                  The tag may be wildcarded by\
  \ using '*'.\n                                  If you wish to allow more than one\
  \ tag,\n                                  separate their names with the character\
  \ '|',\n                                  eg:\n                                \
  \  gene | label (Any string)\n   -avalue             string     [*] Tag values are\
  \ the values associated\n                                  with a feature tag. Tags\
  \ are the types of\n                                  extra values that a feature\
  \ may have. For\n                                  example in the EMBL feature table,\
  \ a 'CDS'\n                                  type of feature may have the tags '/codon',\n\
  \                                  '/codon_start', '/db_xref', '/EC_number',\n \
  \                                 '/evidence', '/exception', '/function',\n    \
  \                              '/gene', '/label', '/map', '/note',\n           \
  \                       '/number', '/partial', '/product',\n                   \
  \               '/protein_id', '/pseudo', '/standard_name',\n                  \
  \                '/translation', '/transl_except',\n                           \
  \       '/transl_table', or '/usedin'. Only some of\n                          \
  \        these tags can have values, for example\n                             \
  \     '/gene' can have the value of the gene name.\n                           \
  \       By default any feature tag value in the\n                              \
  \    feature table is allowed. You can set this\n                              \
  \    to match any feature tag value you wish to\n                              \
  \    allow.\n                                  The tag value may be wildcarded by\
  \ using\n                                  '*'.\n                              \
  \    If you wish to allow more than one tag\n                                  value,\
  \ separate their names with the\n                                  character '|',\
  \ eg:\n                                  pax* | 10 (Any string)\n   -bsource   \
  \         string     [*] By default any feature source in the\n                \
  \                  feature table is allowed. You can set this\n                \
  \                  to match any feature source you wish to\n                   \
  \               allow.\n                                  The source name is usually\
  \ either the name\n                                  of the program that detected\
  \ the feature or\n                                  it is the feature table (eg:\
  \ EMBL) that the\n                                  feature came from.\n       \
  \                           The source may be wildcarded by using '*'.\n       \
  \                           If you wish to allow more than one source,\n       \
  \                           separate their names with the character '|',\n     \
  \                             eg:\n                                  gene* | embl\
  \ (Any string)\n   -bsense             menu       [0] By default any feature sense\
  \ is allowed.\n                                  You can set this to match the required\n\
  \                                  sense. (Values: 0 (Any sense); + (Forward\n \
  \                                 sense); - (Reverse sense))\n   -bminscore    \
  \      float      [0.0] If this is greater than or equal to\n                  \
  \                the maximum score, then any score is\n                        \
  \          allowed. (Any numeric value)\n   -bmaxscore          float      [0.0]\
  \ If this is less than or equal to the\n                                  maximum\
  \ score, then any score is permitted.\n                                  (Any numeric\
  \ value)\n   -btag               string     [*] Tags are the types of extra values\
  \ that\n                                  a feature may have. For example in the\
  \ EMBL\n                                  feature table, a 'CDS' type of feature\
  \ may\n                                  have the tags '/codon', '/codon_start',\n\
  \                                  '/db_xref', '/EC_number', '/evidence',\n    \
  \                              '/exception', '/function', '/gene',\n           \
  \                       '/label', '/map', '/note', '/number',\n                \
  \                  '/partial', '/product', '/protein_id',\n                    \
  \              '/pseudo', '/standard_name', '/translation',\n                  \
  \                '/transl_except', '/transl_table', or\n                       \
  \           '/usedin'. Some of these tags also have\n                          \
  \        values, for example '/gene' can have the\n                            \
  \      value of the gene name.\n                                  By default any\
  \ feature tag in the feature\n                                  table is allowed.\
  \ You can set this to match\n                                  any feature tag you\
  \ wish to allow.\n                                  The tag may be wildcarded by\
  \ using '*'.\n                                  If you wish to allow more than one\
  \ tag,\n                                  separate their names with the character\
  \ '|',\n                                  eg:\n                                \
  \  gene | label (Any string)\n   -bvalue             string     [*] Tag values are\
  \ the values associated\n                                  with a feature tag. Tags\
  \ are the types of\n                                  extra values that a feature\
  \ may have. For\n                                  example in the EMBL feature table,\
  \ a 'CDS'\n                                  type of feature may have the tags '/codon',\n\
  \                                  '/codon_start', '/db_xref', '/EC_number',\n \
  \                                 '/evidence', '/exception', '/function',\n    \
  \                              '/gene', '/label', '/map', '/note',\n           \
  \                       '/number', '/partial', '/product',\n                   \
  \               '/protein_id', '/pseudo', '/standard_name',\n                  \
  \                '/translation', '/transl_except',\n                           \
  \       '/transl_table', or '/usedin'. Only some of\n                          \
  \        these tags can have values, for example\n                             \
  \     '/gene' can have the value of the gene name.\n                           \
  \       By default any feature tag value in the\n                              \
  \    feature table is allowed. You can set this\n                              \
  \    to match any feature tag value you wish to\n                              \
  \    allow.\n                                  The tag value may be wildcarded by\
  \ using\n                                  '*'.\n                              \
  \    If you wish to allow more than one tag\n                                  value,\
  \ separate their names with the\n                                  character '|',\
  \ eg:\n                                  pax* | 10 (Any string)\n   -overlap   \
  \         menu       [A] This allows you to specify the allowed\n              \
  \                    overlaps of the features A and B.\n                       \
  \           You can allow any or no overlaps, specify\n                        \
  \          that they must or must not overlap, that one\n                      \
  \            must or must not be wholly enclosed within\n                      \
  \            another feature. (Values: A (Any); O\n                            \
  \      (Overlap required); NO (No overlaps are\n                               \
  \   allowed); NW (Overlap required but not\n                                  within);\
  \ AW (A must be all within B); BW (B\n                                  must be\
  \ all within A))\n   -rangetype          menu       [N] This allows you to specify\
  \ the positions\n                                  from which the allowed minimum\
  \ or maximum\n                                  distance between the features is\
  \ measured\n                                  (Values: N (From nearest ends); L\
  \ (From left\n                                  ends); R (From right ends); F (From\n\
  \                                  furthest ends))\n   -sense              menu\
  \       [A] This allows you to specify the required\n                          \
  \        sense that the two features must be on. This\n                        \
  \          is ignored (always 'Any') when looking at\n                         \
  \         protein sequence features. (Values: A (Any\n                         \
  \         sense); S (Same sense); O (Opposite sense))\n   -order              menu\
  \       [A] This allows you to specify the required\n                          \
  \        order of the two features. The order is\n                             \
  \     measured from the start positions of the\n                               \
  \   features. This criterion is always applied\n                               \
  \   despite the specified overlap type required.\n                             \
  \     (Values: A (Any); AB (Feature A then\n                                  feature\
  \ B); BA (Feature B then feature A))\n   -twoout             toggle     [N] If you\
  \ set this to be true, then the two\n                                  features\
  \ themselves will be written out. If\n                                  it is left\
  \ as false, then a single feature\n                                  will be written\
  \ out covering the two\n                                  features you found.\n\
  *  -typeout            string     [misc_feature] If you have specified that\n  \
  \                                the pairs of features that are found should\n \
  \                                 be reported as one feature in the ouput,\n   \
  \                               then you can specify the 'type' name of the\n  \
  \                                new feature here. By default every feature\n  \
  \                                in the feature table is allowed. See\n        \
  \                          http://www.ebi.ac.uk/embl/WebFeat/ for a\n          \
  \                        list of the EMBL feature types and see\n              \
  \                    Appendix A of the Swissprot user manual in\n              \
  \                    http://www.expasy.org/sprot/userman.html for\n            \
  \                      a list of the Swissprot feature types. If\n             \
  \                     you specify an invalid feature type name,\n              \
  \                    then the default name 'misc_feature' is\n                 \
  \                 used. (Any string)\n\n   Advanced (Unprompted) qualifiers: (none)\n\
  \   General qualifiers:\n   -help               boolean    Report command line options\
  \ and exit. More\n                                  information on associated and\
  \ general\n                                  qualifiers can be found with -help\
  \ -verbose\n\n"
generated_using:
- --help
