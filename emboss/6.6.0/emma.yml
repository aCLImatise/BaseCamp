!Command
positional: []
named:
- !Flag
  description: toggle     [N] Only produce dendrogram file
  synonyms:
  - -onlydend
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'integer    [8] Gap separation distance: tries to decrease the chances
    of gaps being too close to each other. Gaps that are less than this distance apart
    are penalised more than other gaps. This does not prevent close gaps; it makes
    them less frequent, promoting a block-like appearance of the alignment. (Positive
    integer)'
  synonyms:
  - -gapdist
  args: !EmptyFlagArg {}
  optional: true
command:
- emma
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Multiple sequence alignment (ClustalW wrapper)\nVersion: EMBOSS:6.6.0.0\n\
  \n   Standard (Mandatory) qualifiers:\n  [-sequence]          seqall     (Gapped)\
  \ sequence(s) filename and optional\n                                  format, or\
  \ reference (input USA)\n  [-outseq]            seqoutset  [<sequence>.<format>]\
  \ Sequence set filename\n                                  and optional format (output\
  \ USA)\n  [-dendoutfile]       outfile    [*.emma] Dendrogram (tree file) from\n\
  \                                  clustalw output file\n\n   Additional (Optional)\
  \ qualifiers (* if not always prompted):\n   -onlydend           toggle     [N]\
  \ Only produce dendrogram file\n*  -dendreuse          toggle     [N] Do alignment\
  \ using an old dendrogram\n*  -dendfile           infile     Dendrogram (tree file)\
  \ from clustalw file\n                                  (optional)\n   -[no]slowalign\
  \      toggle     [Y] A distance is calculated between every\n                 \
  \                 pair of sequences and these are used to\n                    \
  \              construct the dendrogram which guides the\n                     \
  \             final multiple alignment. The scores are\n                       \
  \           calculated from separate pairwise\n                                \
  \  alignments. These can be calculated using 2\n                               \
  \   methods: dynamic programming (slow but\n                                  accurate)\
  \ or by the method of Wilbur and\n                                  Lipman (extremely\
  \ fast but approximate).\n                                  The slow-accurate method\
  \ is fine for short\n                                  sequences but will be VERY\
  \ SLOW for many\n                                  (e.g. >100) long (e.g. >1000\
  \ residue)\n                                  sequences.\n*  -pwmatrix         \
  \  menu       [b] The scoring table which describes the\n                      \
  \            similarity of each amino acid to each other.\n                    \
  \              There are three 'in-built' series of weight\n                   \
  \               matrices offered. Each consists of several\n                   \
  \               matrices which work differently at different\n                 \
  \                 evolutionary distances. To see the exact\n                   \
  \               details, read the documentation. Crudely, we\n                 \
  \                 store several matrices in memory, spanning\n                 \
  \                 the full range of amino acid distance (from\n                \
  \                  almost identical sequences to highly\n                      \
  \            divergent ones). For very similar sequences,\n                    \
  \              it is best to use a strict weight matrix\n                      \
  \            which only gives a high score to identities\n                     \
  \             and the most favoured conservative\n                             \
  \     substitutions. For more divergent sequences,\n                           \
  \       it is appropriate to use 'softer' matrices\n                           \
  \       which give a high score to many other\n                                \
  \  frequent substitutions.\n                                  1) BLOSUM (Henikoff).\
  \ These matrices appear\n                                  to be the best available\
  \ for carrying out\n                                  data base similarity (homology\
  \ searches).\n                                  The matrices used are: Blosum80,\
  \ 62, 45 and\n                                  30.\n                          \
  \        2) PAM (Dayhoff). These have been extremely\n                         \
  \         widely used since the late '70s. We use the\n                        \
  \          PAM 120, 160, 250 and 350 matrices.\n                               \
  \   3) GONNET . These matrices were derived\n                                  using\
  \ almost the same procedure as the\n                                  Dayhoff one\
  \ (above) but are much more up to\n                                  date and are\
  \ based on a far larger data set.\n                                  They appear\
  \ to be more sensitive than the\n                                  Dayhoff series.\
  \ We use the GONNET 40, 80,\n                                  120, 160, 250 and\
  \ 350 matrices.\n                                  We also supply an identity matrix\
  \ which\n                                  gives a score of 1.0 to two identical\
  \ amino\n                                  acids and a score of zero otherwise.\
  \ This\n                                  matrix is not very useful. (Values: b\n\
  \                                  (blosum); p (pam); g (gonnet); i (id); o\n  \
  \                                (own))\n*  -pwdnamatrix        menu       [i] The\
  \ scoring table which describes the\n                                  scores assigned\
  \ to matches and mismatches\n                                  (including IUB ambiguity\
  \ codes). (Values: i\n                                  (iub); c (clustalw); o (own))\n\
  *  -pairwisedatafile   infile     Comparison matrix file (optional)\n*  -matrix\
  \             menu       [b] This gives a menu where you are offered\n         \
  \                         a choice of weight matrices. The default for\n       \
  \                           proteins is the PAM series derived by\n            \
  \                      Gonnet and colleagues. Note, a series is\n              \
  \                    used! The actual matrix that is used depends\n            \
  \                      on how similar the sequences to be aligned\n            \
  \                      at this alignment step are. Different\n                 \
  \                 matrices work differently at each\n                          \
  \        evolutionary distance.\n                                  There are three\
  \ 'in-built' series of weight\n                                  matrices offered.\
  \ Each consists of several\n                                  matrices which work\
  \ differently at different\n                                  evolutionary distances.\
  \ To see the exact\n                                  details, read the documentation.\
  \ Crudely, we\n                                  store several matrices in memory,\
  \ spanning\n                                  the full range of amino acid distance\
  \ (from\n                                  almost identical sequences to highly\n\
  \                                  divergent ones). For very similar sequences,\n\
  \                                  it is best to use a strict weight matrix\n  \
  \                                which only gives a high score to identities\n \
  \                                 and the most favoured conservative\n         \
  \                         substitutions. For more divergent sequences,\n       \
  \                           it is appropriate to use 'softer' matrices\n       \
  \                           which give a high score to many other\n            \
  \                      frequent substitutions.\n                               \
  \   1) BLOSUM (Henikoff). These matrices appear\n                              \
  \    to be the best available for carrying out\n                               \
  \   data base similarity (homology searches).\n                                \
  \  The matrices used are: Blosum80, 62, 45 and\n                               \
  \   30.\n                                  2) PAM (Dayhoff). These have been extremely\n\
  \                                  widely used since the late '70s. We use the\n\
  \                                  PAM 120, 160, 250 and 350 matrices.\n       \
  \                           3) GONNET . These matrices were derived\n          \
  \                        using almost the same procedure as the\n              \
  \                    Dayhoff one (above) but are much more up to\n             \
  \                     date and are based on a far larger data set.\n           \
  \                       They appear to be more sensitive than the\n            \
  \                      Dayhoff series. We use the GONNET 40, 80,\n             \
  \                     120, 160, 250 and 350 matrices.\n                        \
  \          We also supply an identity matrix which\n                           \
  \       gives a score of 1.0 to two identical amino\n                          \
  \        acids and a score of zero otherwise. This\n                           \
  \       matrix is not very useful. Alternatively,\n                            \
  \      you can read in your own (just one matrix,\n                            \
  \      not a series). (Values: b (blosum); p (pam);\n                          \
  \        g (gonnet); i (id); o (own))\n*  -dnamatrix          menu       [i] This\
  \ gives a menu where a single matrix\n                                  (not a series)\
  \ can be selected. (Values: i\n                                  (iub); c (clustalw);\
  \ o (own))\n*  -mamatrixfile       infile     Comparison matrix file (optional)\n\
  *  -pwgapopen          float      [10.0] The penalty for opening a gap in the\n\
  \                                  pairwise alignments. (Number 0.000 or more)\n\
  *  -pwgapextend        float      [0.1] The penalty for extending a gap by 1\n \
  \                                 residue in the pairwise alignments. (Number\n\
  \                                  0.000 or more)\n*  -ktup               integer\
  \    [1 for protein, 2 for nucleic] This is the\n                              \
  \    size of exactly matching fragment that is\n                               \
  \   used. INCREASE for speed (max= 2 for\n                                  proteins;\
  \ 4 for DNA), DECREASE for\n                                  sensitivity. For longer\
  \ sequences (e.g.\n                                  >1000 residues) you may need\
  \ to increase the\n                                  default. (integer from 0 to\
  \ 4)\n*  -gapw               integer    [3 for protein, 5 for nucleic] This is a\n\
  \                                  penalty for each gap in the fast alignments.\n\
  \                                  It has little affect on the speed or\n      \
  \                            sensitivity except for extreme values.\n          \
  \                        (Positive integer)\n*  -topdiags           integer    [5\
  \ for protein, 4 for nucleic] The number of\n                                  k-tuple\
  \ matches on each diagonal (in an\n                                  imaginary dot-matrix\
  \ plot) is calculated.\n                                  Only the best ones (with\
  \ most matches) are\n                                  used in the alignment. This\
  \ parameter\n                                  specifies how many. Decrease for\
  \ speed;\n                                  increase for sensitivity. (Positive\
  \ integer)\n*  -window             integer    [5 for protein, 4 for nucleic] This\
  \ is the\n                                  number of diagonals around each of the\n\
  \                                  'best' diagonals that will be used. Decrease\n\
  \                                  for speed; increase for sensitivity.\n      \
  \                            (Positive integer)\n*  -nopercent          boolean\
  \    [N] Fast pairwise alignment: similarity\n                                 \
  \ scores: suppresses percentage score\n   -gapopen            float      [10.0]\
  \ The penalty for opening a gap in the\n                                  alignment.\
  \ Increasing the gap opening\n                                  penalty will make\
  \ gaps less frequent.\n                                  (Positive floating point\
  \ number)\n   -gapextend          float      [5.0] The penalty for extending a gap\
  \ by 1\n                                  residue. Increasing the gap extension\n\
  \                                  penalty will make gaps shorter. Terminal\n  \
  \                                gaps are not penalised. (Positive floating\n  \
  \                                point number)\n   -[no]endgaps        boolean \
  \   [Y] End gap separation: treats end gaps just\n                             \
  \     like internal gaps for the purposes of\n                                 \
  \ avoiding gaps that are too close (set by\n                                  'gap\
  \ separation distance'). If you turn this\n                                  off,\
  \ end gaps will be ignored for this\n                                  purpose.\
  \ This is useful when you wish to\n                                  align fragments\
  \ where the end gaps are not\n                                  biologically meaningful.\n\
  \   -gapdist            integer    [8] Gap separation distance: tries to\n     \
  \                             decrease the chances of gaps being too close\n   \
  \                               to each other. Gaps that are less than this\n  \
  \                                distance apart are penalised more than\n      \
  \                            other gaps. This does not prevent close\n         \
  \                         gaps; it makes them less frequent, promoting\n       \
  \                           a block-like appearance of the alignment.\n        \
  \                          (Positive integer)\n*  -norgap             boolean  \
  \  [N] Residue specific penalties: amino acid\n                                \
  \  specific gap penalties that reduce or\n                                  increase\
  \ the gap opening penalties at each\n                                  position\
  \ in the alignment or sequence. As an\n                                  example,\
  \ positions that are rich in glycine\n                                  are more\
  \ likely to have an adjacent gap\n                                  than positions\
  \ that are rich in valine.\n*  -hgapres            string     [GPSNDQEKR] This is\
  \ a set of the residues\n                                  'considered' to be hydrophilic.\
  \ It is used\n                                  when introducing Hydrophilic gap\
  \ penalties.\n                                  (Any string)\n*  -nohgap       \
  \      boolean    [N] Hydrophilic gap penalties: used to\n                     \
  \             increase the chances of a gap within a run\n                     \
  \             (5 or more residues) of hydrophilic amino\n                      \
  \            acids; these are likely to be loop or random\n                    \
  \              coil regions where gaps are more common.\n                      \
  \            The residues that are 'considered' to be\n                        \
  \          hydrophilic are set by '-hgapres'.\n   -maxdiv             integer  \
  \  [30] This switch, delays the alignment of\n                                 \
  \ the most distantly related sequences until\n                                 \
  \ after the most closely related sequences\n                                  have\
  \ been aligned. The setting shows the\n                                  percent\
  \ identity level required to delay the\n                                  addition\
  \ of a sequence; sequences that are\n                                  less identical\
  \ than this level to any other\n                                  sequences will\
  \ be aligned later. (Integer\n                                  from 0 to 100)\n\
  \n   Advanced (Unprompted) qualifiers: (none)\n   General qualifiers:\n   -help\
  \               boolean    Report command line options and exit. More\n        \
  \                          information on associated and general\n             \
  \                     qualifiers can be found with -help -verbose\n\n"
generated_using:
- --help
