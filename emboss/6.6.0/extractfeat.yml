!Command
positional: []
named: []
command:
- extractfeat
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Extract features from sequence(s)\nVersion: EMBOSS:6.6.0.0\n\n   Standard\
  \ (Mandatory) qualifiers:\n  [-sequence]          seqall     Sequence(s) filename\
  \ and optional format, or\n                                  reference (input USA)\n\
  \  [-outseq]            seqout     [<sequence>.<format>] Sequence filename and\n\
  \                                  optional format (output USA)\n\n   Additional\
  \ (Optional) qualifiers:\n   -before             integer    [0] If this value is\
  \ greater than 0 then\n                                  that number of bases or\
  \ residues before the\n                                  feature are included in\
  \ the extracted\n                                  sequence. This allows you to\
  \ get the context\n                                  of the feature. If this value\
  \ is negative\n                                  then the start of the extracted\
  \ sequence\n                                  will be this number of bases/residues\
  \ before\n                                  the end of the feature. So a value of\
  \ '10'\n                                  will start the extraction 10 bases/residues\n\
  \                                  before the start of the sequence, and a\n   \
  \                               value of '-10' will start the extraction 10\n  \
  \                                bases/residues before the end of the\n        \
  \                          feature. The output sequence will be padded\n       \
  \                           with 'N' or 'X' characters if the sequence\n       \
  \                           starts after the required start of the\n           \
  \                       extraction. (Any integer value)\n   -after             \
  \ integer    [0] If this value is greater than 0 then\n                        \
  \          that number of bases or residues after the\n                        \
  \          feature are included in the extracted\n                             \
  \     sequence. This allows you to get the context\n                           \
  \       of the feature. If this value is negative\n                            \
  \      then the end of the extracted sequence will\n                           \
  \       be this number of bases/residues after the\n                           \
  \       start of the feature. So a value of '10'\n                             \
  \     will end the extraction 10 bases/residues\n                              \
  \    after the end of the sequence, and a value\n                              \
  \    of '-10' will end the extraction 10\n                                  bases/residues\
  \ after the start of the\n                                  feature. The output\
  \ sequence will be padded\n                                  with 'N' or 'X' characters\
  \ if the sequence\n                                  ends before the required end\
  \ of the\n                                  extraction. (Any integer value)\n  \
  \ -source             string     [*] By default any feature source in the\n    \
  \                              feature table is shown. You can set this to\n   \
  \                               match any feature source you wish to show.\n   \
  \                               The source name is usually either the name\n   \
  \                               of the program that detected the feature or\n  \
  \                                it is the feature table (eg: EMBL) that the\n \
  \                                 feature came from.\n                         \
  \         The source may be wildcarded by using '*'.\n                         \
  \         If you wish to show more than one source,\n                          \
  \        separate their names with the character '|',\n                        \
  \          eg:\n                                  gene* | embl (Any string)\n  \
  \ -type               string     [*] By default every feature in the feature\n \
  \                                 table is extracted. You can set this to be\n \
  \                                 any feature type you wish to extract.\n      \
  \                            See http://www.ebi.ac.uk/embl/WebFeat/ for a\n    \
  \                              list of the EMBL feature types and see the\n    \
  \                              Uniprot user manual in\n                        \
  \          http://www.uniprot.org/manual/sequence_annotation\n                 \
  \                 for a list of the Uniprot feature types.\n                   \
  \               The type may be wildcarded by using '*'.\n                     \
  \             If you wish to extract more than one type,\n                     \
  \             separate their names with the character '|',\n                   \
  \               eg:\n                                  *UTR | intron (Any string)\n\
  \   -sense              integer    [0 - any sense, 1 - forward sense, -1 -\n   \
  \                               reverse sense] By default any feature type\n   \
  \                               in the feature table is extracted. You can\n   \
  \                               set this to match any feature sense you\n      \
  \                            wish. 0 - any sense, 1 - forward sense, -1 -\n    \
  \                              reverse sense (Any integer value)\n   -minscore \
  \          float      [0.0] Minimum score of feature to extract\n              \
  \                    (see also maxscore) (Any numeric value)\n   -maxscore     \
  \      float      [0.0] Maximum score of feature to extract.\n                 \
  \                 If both minscore and maxscore are zero (the\n                \
  \                  default), then any score is ignored (Any\n                  \
  \                numeric value)\n   -tag                string     [*] Tags are\
  \ the types of extra values that\n                                  a feature may\
  \ have. For example in the EMBL\n                                  feature table,\
  \ a 'CDS' type of feature may\n                                  have the tags '/codon',\
  \ '/codon_start',\n                                  '/db_xref', '/EC_number', '/evidence',\n\
  \                                  '/exception', '/function', '/gene',\n       \
  \                           '/label', '/map', '/note', '/number',\n            \
  \                      '/partial', '/product', '/protein_id',\n                \
  \                  '/pseudo', '/standard_name', '/translation',\n              \
  \                    '/transl_except', '/transl_table', or\n                   \
  \               '/usedin'. Some of these tags also have\n                      \
  \            values, for example '/gene' can have the\n                        \
  \          value of the gene name.\n                                  By default\
  \ any feature tag in the feature\n                                  table is extracted.\
  \ You can set this to\n                                  match any feature tag you\
  \ wish to show.\n                                  The tag may be wildcarded by\
  \ using '*'.\n                                  If you wish to extract more than\
  \ one tag,\n                                  separate their names with the character\
  \ '|',\n                                  eg:\n                                \
  \  gene | label (Any string)\n   -value              string     [*] Tag values are\
  \ the values associated\n                                  with a feature tag. Tags\
  \ are the types of\n                                  extra values that a feature\
  \ may have. For\n                                  example in the EMBL feature table,\
  \ a 'CDS'\n                                  type of feature may have the tags '/codon',\n\
  \                                  '/codon_start', '/db_xref', '/EC_number',\n \
  \                                 '/evidence', '/exception', '/function',\n    \
  \                              '/gene', '/label', '/map', '/note',\n           \
  \                       '/number', '/partial', '/product',\n                   \
  \               '/protein_id', '/pseudo', '/standard_name',\n                  \
  \                '/translation', '/transl_except',\n                           \
  \       '/transl_table', or '/usedin'. Only some of\n                          \
  \        these tags can have values, for example\n                             \
  \     '/gene' can have the value of the gene name.\n                           \
  \       By default any feature tag value in the\n                              \
  \    feature table is shown. You can set this to\n                             \
  \     match any feature tag value you wish to\n                                \
  \  show.\n                                  The tag value may be wildcarded by using\n\
  \                                  '*'.\n                                  If you\
  \ wish to show more than one tag value,\n                                  separate\
  \ their names with a space or the\n                                  character '|',\
  \ eg:\n                                  pax* | 10 (Any string)\n   -join      \
  \         boolean    [N] Some features, such as CDS (coding\n                  \
  \                sequence) and mRNA are composed of introns\n                  \
  \                concatenated together. There may be other\n                   \
  \               forms of 'joined' sequence, depending on the\n                 \
  \                 feature table. If this option is set TRUE,\n                 \
  \                 then any group of these features will be\n                   \
  \               output as a single sequence. If the 'before'\n                 \
  \                 and 'after' qualifiers have been set, then\n                 \
  \                 only the sequence before the first feature\n                 \
  \                 and after the last feature are added.\n   -featinname        \
  \ boolean    [N] To aid you in identifying the type of\n                       \
  \           feature that has been output, the type of\n                        \
  \          feature is added to the start of the\n                              \
  \    description of the output sequence.\n                                  Sometimes\
  \ the description of a sequence is\n                                  lost in subsequent\
  \ processing of the\n                                  sequences file, so it is\
  \ useful for the type\n                                  to be a part of the sequence\
  \ ID name. If\n                                  you set this to be TRUE then the\
  \ name is\n                                  added to the ID name of the output\
  \ sequence.\n   -describe           string     To aid you in identifying some further\n\
  \                                  properties of a feature that has been\n     \
  \                             output, this lets you specify one or more\n      \
  \                            tag names that should be added to the output\n    \
  \                              sequence Description text, together with\n      \
  \                            their values (if any). For example, if this\n     \
  \                             is set to be 'gene', then if any output\n        \
  \                          feature has the tag (for example)\n                 \
  \                 '/gene=BRCA1' associated with it, then the\n                 \
  \                 text '(gene=BRCA1)' will be added to the\n                   \
  \               Description line. Tags are the types of\n                      \
  \            extra values that a feature may have. For\n                       \
  \           example in the EMBL feature table, a 'CDS'\n                       \
  \           type of feature may have the tags '/codon',\n                      \
  \            '/codon_start', '/db_xref', '/EC_number',\n                       \
  \           '/evidence', '/exception', '/function',\n                          \
  \        '/gene', '/label', '/map', '/note',\n                                 \
  \ '/number', '/partial', '/product',\n                                  '/protein_id',\
  \ '/pseudo', '/standard_name',\n                                  '/translation',\
  \ '/transl_except',\n                                  '/transl_table', or '/usedin'.\
  \ Some of these\n                                  tags also have values, for example\
  \ '/gene'\n                                  can have the value of the gene name.\n\
  \                                  By default no feature tag is displayed. You\n\
  \                                  can set this to match any feature tag you\n \
  \                                 wish to show.\n                              \
  \    The tag may be wildcarded by using '*'.\n                                 \
  \ If you wish to extract more than one tag,\n                                  separate\
  \ their names with the character '|',\n                                  eg:\n \
  \                                 gene | label (Any string)\n\n   Advanced (Unprompted)\
  \ qualifiers: (none)\n   General qualifiers:\n   -help               boolean   \
  \ Report command line options and exit. More\n                                 \
  \ information on associated and general\n                                  qualifiers\
  \ can be found with -help -verbose\n\n"
generated_using:
- --help
