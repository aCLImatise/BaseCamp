&id003 !Command
command:
- novoutil
- tile
positional:
- !Positional
  description: ''
  position: 0
  name: novoindex
  optional: false
- !Positional
  description: ''
  position: 1
  name: chrName
  optional: false
named:
- !Flag
  description: Sets read length. Default 70.    -n 99     The maximum number of N's
    in a read. Default 30.    -s 9      The step size for tiled reads. Default 1.
  synonyms:
  - -l
  args: !SimpleFlagArg
    name: '99'
  optional: true
- !Flag
  description: ''
  synonyms:
  - -s
  args: !SimpleFlagArg
    name: '9'
  optional: true
- !Flag
  description: ''
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: '99'
  optional: true
parent: &id001 !Command
  command:
  - novoutil
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - novoutil
    - splitbed
    positional: []
    named:
    - !Flag
      description: "\e[3m99\e[0m            Number of bp to add or to each input bed\
        \ file region."
      synonyms:
      - --add
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "\e[3m99\e[0m          Minimum gap between regions to merge them.\
        \ Applied after extension."
      synonyms:
      - --merge
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "\e[3m99\e[0m         Number of files to split input BED into."
      synonyms:
      - --splits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "\e[3mprefix\e[0m     Filename prefix for the output bed files."
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "\e[3mfilename\e[0m  A file listing reference sequences (Chrom)\
        \ to include in the output. One per line!"
      synonyms:
      - --include
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "\e[3mfilename\e[0m  A file listing reference sequences (Chrom)\
        \ to exclude from the output. One per line!\nNormally you would supply only\
        \ an include list or an exclude list, not both!"
      synonyms:
      - --exclude
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "\e[3msamfilename\e[0m   SAM file. Headers are used to determine\
        \ sequence lengths from @SQ records and\nensure we don't make regions extend\
        \ passed the end of the sequences."
      synonyms:
      - --sam
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Print usage.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\nUsage:\n\n    novoutil splitBed [options] < file.bed\n\nDescription:\n\
      \    Splits a bed file into n approximately equal length parts.\n\nOptions:\n\
      --add \e[3m99\e[0m            Number of bp to add or to each input bed file\
      \ region.\n--merge \e[3m99\e[0m          Minimum gap between regions to merge\
      \ them. Applied after extension.\n--splits \e[3m99\e[0m         Number of files\
      \ to split input BED into.\n--prefix \e[3mprefix\e[0m     Filename prefix for\
      \ the output bed files.\n--include \e[3mfilename\e[0m  A file listing reference\
      \ sequences (Chrom) to include in the output. One per line!\n--exclude \e[3mfilename\e\
      [0m  A file listing reference sequences (Chrom) to exclude from the output.\
      \ One per line!\n                    Normally you would supply only an include\
      \ list or an exclude list, not both!\n--sam \e[3msamfilename\e[0m   SAM file.\
      \ Headers are used to determine sequence lengths from @SQ records and\n    \
      \                ensure we don't make regions extend passed the end of the sequences.\n\
      --help              Print usage.\n\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - novoutil
    - rename
    positional:
    - !Positional
      description: ''
      position: 0
      name: assembly_report.txt
      optional: false
    - !Positional
      description: ''
      position: 1
      name: assembly_regions.txt
      optional: false
    - !Positional
      description: ''
      position: 2
      name: bed/vcf file
      optional: false
    named:
    - !Flag
      description: "Assembly Report column name originally in the Chrom attribute.\n\
        Choose from:\nSequence-Name, GenBank-Accn, RefSeq-Accn, UCSC-style-name\n\
        Default is 'RefSeq-Accn'"
      synonyms:
      - --original
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Report or Region column name to replace the Chrom attribute.\n\
        Choose from assembly_report columns:\nSequence-Name, GenBank-Accn, RefSeq-Accn,\
        \ UCSC-style-name\nDefault is not to change the name."
      synonyms:
      - --id
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Exclude some sequence types from output file\nWhere <type> is\
        \ one of MT, HLA, unplaced, unlocalised, or alt-scaffold\nAny sequence with\
        \ a UCSC-Style-Name of 'na' is also excised from the file."
      synonyms:
      - --excise
      args: !SimpleFlagArg
        name: type
      optional: true
    - !Flag
      description: "Reorder sequences (Chrom) to match assembly_report.txt order.\n\
        Assumes lines are grouped by Chrom attribute. If not sort before using this\
        \ function.\n"
      synonyms:
      - --reorder
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:\n\nnovoutil rename [options] assembly_report.txt  assembly_regions.txt\
      \ <bed/vcf file> > outputfile\n\nDescription:\n    Using NCBI assembly_report\
      \ and Assembly_region files for the genome, rename BED/VCF entries.\n    Input\
      \ files can be gzip'd or bzip2'd. Output is not compressed.\n    Any entries\
      \ which have a UCSC-style-name of 'na' in the assembly_report.txt file are\n\
      \    not copied to the output file. This will be ones with Scaffold-Role of\
      \ either\n    fix-patch or novel-patch\n    Any lines where Chrom does not match\
      \ an entry in original column are output verbatim.\nOptions:\n    --original\
      \     Assembly Report column name originally in the Chrom attribute.\n     \
      \        Choose from:\n                 Sequence-Name, GenBank-Accn, RefSeq-Accn,\
      \ UCSC-style-name\n             Default is 'RefSeq-Accn'\n\n    --id     Report\
      \ or Region column name to replace the Chrom attribute.\n             Choose\
      \ from assembly_report columns:\n                 Sequence-Name, GenBank-Accn,\
      \ RefSeq-Accn, UCSC-style-name\n\n             Default is not to change the\
      \ name.\n    --excise <type>  Exclude some sequence types from output file\n\
      \             Where <type> is one of MT, HLA, unplaced, unlocalised, or alt-scaffold\n\
      \             Any sequence with a UCSC-Style-Name of 'na' is also excised from\
      \ the file.\n    --reorder  Reorder sequences (Chrom) to match assembly_report.txt\
      \ order.\n              Assumes lines are grouped by Chrom attribute. If not\
      \ sort before using this function.\n\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - fastaAddM5
    positional:
    - !Positional
      description: "is the fasta files to be processed.\nInput files may be compressed\
        \ with gzip or bzip."
      position: 0
      name: in
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:   novoutil fastaM5  <in  >out\n\nDescription:    Calculates\
      \ length & MD5SUM of sequences and corrects or adds\n    metadata for LN and\
      \ M5 tags to fasta header\n\nWhere:\n    in          is the fasta files to be\
      \ processed.\n                Input files may be compressed with gzip or bzip.\n\
      \nOutput:\n    An inflated fasta file with M5 tags.\n    A stderr log of fasta\
      \ sequence headers is written.\n\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - kmers
    positional:
    - !Positional
      description: ''
      position: 0
      name: refidx
      optional: false
    - !Positional
      description: ''
      position: 1
      name: k
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: " Prints all k-mers of specified length k together with frequency of\
      \ the k-mer.\nUsage:\n    novoutil kmers refidx k\n        refidx is an indexed\
      \ reference sequence created by Novoindex.\n        k      is the k-mer length\
      \ to be enumerated.\n\nThis is based on frequency in the index and is affected\
      \ by the step size.\n\n (c) 2008-2017 NovoCraft Technologies Sdn Bhd.\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - iupac
    positional:
    - !Positional
      description: is a sorted vcf file of SNPs, and
      position: 0
      name: snpfile
      optional: false
    - !Positional
      description: "is one or more fasta files to be processed.\nInput files may be\
        \ compressed with gzip or bzip."
      position: 1
      name: fastafiles
      optional: false
    - !Positional
      description: "BED format files whose coordinates should be updated to match\
        \ the new \nfasta file. Useful if indels are being incorporated in the new\
        \ fasta files.\nRelocated BED filenames are prefixed by 'new.'"
      position: 2
      name: bedfiles
      optional: false
    named:
    - !Flag
      description: "<99>    Lower quality limit for SNPs. Default 30.\nSNPs with quality\
        \ of '.' are assumed as high quality."
      synonyms:
      - -q
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Replace reference base with the genotype base code.\nThe reference\
        \ base will not be included in the IUPAC code if\nthe SNP is homozygous. Zygosity\
        \ is determined as follows:\nif -s is specified then from GT attribute of\
        \ the sample\nelse if there is an AF tag then AF=1 is homozygous\nelse check\
        \ first GT tag."
      synonyms:
      - -g
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Update reference with homozygous indels from the vcf file.\nNote.\
        \ That this changes the length of reference and will affect\nlocation of annotations\
        \ hence ability to give a list of bed\nfiles to be relocated."
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Use with SNP files in wgsim format rather than vcf.
      synonyms:
      - -w
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Sets sample (1 based) to use for multi-sample vcf files.\nWhen\
        \ a sample is specified the GT of that sample is used for\ndetermining genotype.\
        \ If sample has ./. in GT attribute then\nthe SNP is not encoded into the\
        \ reference.\nIf a multi-sample vcf file is used and -s is not specified\n\
        then all SNPs are applied and AF attribute is used to determine\ngenotype,\
        \ AF=1.0 is homozygous for the SNP."
      synonyms:
      - -s
      args: !SimpleFlagArg
        name: '9'
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Only homozygous SNPs are corrected.
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\nUsage:   novoutil iupac [-q 99] [-g] [-i] [-w] [-s 9] snpfile fastafiles...\
      \  [bedfiles...]\n\nDescription:    Inserts SNPs into a fasta file as IUPAC\
      \ ambiguous codes formed\n    from the reference base and high quality alternate\
      \ alleles from\n    the vcf file.\n    Any N's in the reference that have alt\
      \ alleles called (subject \n    to quality check) will be replaced with IUPAC\
      \ code for alt alleles.\n\n    The VCF files CHROM attribute should match the\
      \ chromosome name on the\n    fasta header (the first whitespace delimited field).\n\
      \    The test is vcfname == fastname || 'chr' + vcfname == fastaname || vcfname\
      \ == 'chr' + fastname\n\nWhere:\n    -q  <99>    Lower quality limit for SNPs.\
      \ Default 30.\n                SNPs with quality of '.' are assumed as high\
      \ quality.\n\n    -g          Replace reference base with the genotype base\
      \ code.\n                The reference base will not be included in the IUPAC\
      \ code if\n                the SNP is homozygous. Zygosity is determined as\
      \ follows:\n                if -s is specified then from GT attribute of the\
      \ sample\n                else if there is an AF tag then AF=1 is homozygous\n\
      \                else check first GT tag.\n    -h          Only homozygous SNPs\
      \ are corrected.\n    -i          Update reference with homozygous indels from\
      \ the vcf file.\n                Note. That this changes the length of reference\
      \ and will affect\n                location of annotations hence ability to\
      \ give a list of bed \n                files to be relocated.\n\n    -w    \
      \      Use with SNP files in wgsim format rather than vcf.\n\n    -s 9     \
      \   Sets sample (1 based) to use for multi-sample vcf files.\n             \
      \   When a sample is specified the GT of that sample is used for\n         \
      \       determining genotype. If sample has ./. in GT attribute then\n     \
      \           the SNP is not encoded into the reference.\n                If a\
      \ multi-sample vcf file is used and -s is not specified\n                then\
      \ all SNPs are applied and AF attribute is used to determine\n             \
      \   genotype, AF=1.0 is homozygous for the SNP.\n\n    snpfile     is a sorted\
      \ vcf file of SNPs, and\n    fastafiles  is one or more fasta files to be processed.\n\
      \                Input files may be compressed with gzip or bzip.\n\n    bedfiles\
      \    BED format files whose coordinates should be updated to match the new \n\
      \                fasta file. Useful if indels are being incorporated in the\
      \ new fasta files.\n                Relocated BED filenames are prefixed by\
      \ 'new.'\n\nOutput:\n    A single concatenated fasta file with IUPAC codes is\
      \ written to stdout.\n    A log with counts of substituted SNPs and Indels per\
      \ sequence is written\n    to stderr.\n\n   The iupac function \e[33;7mdoes\
      \ not recalculate the md5sum\e[0m of the sequence (M5: tag) \n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - tag
    positional:
    - !Positional
      description: is an indexed reference sequence created by Novoindex.
      position: 0
      name: refidx
      optional: false
    - !Positional
      description: is a nucleotide tag not longer than index k-mer length.
      position: 1
      name: k-mer
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Prints all locii of specified k-mer.\nUsage:\n    novoutil tag refidx\
      \ k-mer\n        refidx     is an indexed reference sequence created by Novoindex.\n\
      \        k-mer      is a nucleotide tag not longer than index k-mer length.\n\
      \n\n (c) 2011-2017 NovoCraft Technologies Sdn Bhd.\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - sequence
    positional:
    - !Positional
      description: is either a numerical seqidx or a unique string from the desired
        sequence header.
      position: 2
      name: seqid
      optional: false
    - !Positional
      description: is first base to extracted (1 based counting).
      position: 3
      name: from
      optional: false
    - !Positional
      description: is the last base to be extracted.
      position: 4
      name: to
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Extracts sequences from a novoindex in fasta format.\nUsage:\n   \
      \ novoutil  sequence ref.nix [seqid [from[ to]]]\n    novoutil  sequence ref.nix\
      \ [seqid:[from[-to]]]\n        seqid   is either a numerical seqidx or a unique\
      \ string from the desired sequence header.\n        from    is first base to\
      \ extracted (1 based counting).\n        to      is the last base to be extracted.\n\
      \n   If to < from the -ve strand is extracted.\n\n   if to is prefixed with\
      \ '+' or '-' then it is treated as a length rather than a position.\n\n   If\
      \ sequence & position are not specified then the full reference genome is output.\n\
      \n   If from to are not specified then the full sequence is output.\n\n (c)\
      \ 2008-2017 NovoCraft Technologies Sdn Bhd.\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - genejunctions
    positional:
    - !Positional
      description: is a refgene format file of genes and exon annotations for the
        genome.
      position: 0
      name: refgenefile
      optional: false
    named:
    - !Flag
      description: "max read length. Default 100.  This sets the size of junction\n\
        records in trems of bp from each exon.\n"
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:   novoutil genejunctions [options] novoindexfile refgenefile\
      \ \n\nDescription:    Creates a fasta file of exon/exon junction records from\
      \ a genome and a refgene file.\n\nWhere:    novoindexfile is the filename of\
      \ indexed genome file, and\n    refgenefile   is a refgene format file of genes\
      \ and exon annotations for the genome.\n\nOptions (with default value shown):\n\
      \    -l       max read length. Default 100.  This sets the size of junction\n\
      \             records in trems of bp from each exon.\n\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - index
    positional:
    - !Positional
      description: ''
      position: 0
      name: genome.nix
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Gives a simple report on status of a novoindex file.\nUsage:     \
      \  novoutil index genome.nix\nWhere:\n      genome.nix is an indexed reference\
      \ genome built with novoindex.\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - bgzf
    positional: []
    named:
    - !Flag
      description: "Sets the number of threads. Defaults to number of cores\non the\
        \ server."
      synonyms:
      - -c
      args: !SimpleFlagArg
        name: '9'
      optional: true
    - !Flag
      description: "Sets the block size in kilobytes, defaults to 64K bytes.\nIf set\
        \ <=64K then files are compatible with tabix and BAM\nspecifications.\nAbove\
        \ 64K may be useful for fast general purpose compression."
      synonyms:
      - -b
      args: !SimpleFlagArg
        name: '99'
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:   novoutil bgzf [options] \n\nDescription:    Multi-threaded\
      \ gzip, BAM & Tabix compatible file compressor.\n    stdin is compressed to\
      \ stdout\n\nOptions:\n    -c 9        Sets the number of threads. Defaults to\
      \ number of cores \n                on the server.\n    -b 99       Sets the\
      \ block size in kilobytes, defaults to 64K bytes.\n                If set <=64K\
      \ then files are compatible with tabix and BAM\n                specifications.\
      \ \n                Above 64K may be useful for fast general purpose compression.\n\
      \    -[1-9]      Set compression level in range 1-9, otherwise default as per\
      \ zlib.\n\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - novoutil
    - biseqstrandfixer
    positional:
    - !Positional
      description: ''
      position: 0
      name: 'input.sam   '
      optional: false
    - !Positional
      description: ''
      position: 1
      name: output.sam
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:\n\nnovoutil biseqstrandfixer < input.sam   > output.sam\n\
      \nDescription:\n    Reads a Novoalign BiSeq SAM file from stdin and swaps read1/read2\
      \ flag on proper pair\n    alignments that don't fit strand conserved BiSeq\
      \ samples. This is useful for sample preps\n    where 4 possible biseq alignments\
      \ are possible and if using variant caller such as BisSNP\n    that require\
      \ strand preserved alignments. \n\nOptions:\n    None, this just stdin to stdout\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - fafilt
    positional:
    - !Positional
      description: "is one or more fasta files to be processed.\nInput files may be\
        \ compressed with gzip or bzip."
      position: 0
      name: fastafiles
      optional: false
    named:
    - !Flag
      description: 999     Length limit, default 150.
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:   novoutil fafilt [-l 99] fastafiles... \n\nDescription:\
      \    Remove short contigs from an Abyss contig/scaffold fa file\nWhere:\n  \
      \  -l  999     Length limit, default 150.\n    fastafiles  is one or more fasta\
      \ files to be processed.\n                Input files may be compressed with\
      \ gzip or bzip.\n\nOutput:\n    A single concatenated fasta file is written\
      \ to stdout.\n    An log is written to stderr.\n\n"
    generated_using: *id002
  - !Command
    command:
    - novoutil
    - addns
    positional:
    - !Positional
      description: "is one or more fasta files to be processed.\nInput files may be\
        \ compressed with gzip or bzip."
      position: 0
      name: fastafiles
      optional: false
    named:
    - !Flag
      description: 99      Number of Ns to add. default 50.
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nUsage:   novoutil addns [-n 99] fastafiles... \n\nDescription: \
      \   Add Ns to both ends of contigs.\nWhere:\n    -n  99      Number of Ns to\
      \ add. default 50.\n    fastafiles  is one or more fasta files to be processed.\n\
      \                Input files may be compressed with gzip or bzip.\n\nOutput:\n\
      \    A single concatenated fasta file is written to stdout.\n    An log is written\
      \ to stderr.\n\n"
    generated_using: *id002
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nUsage:\n    novoutil utility options\nUtility codes\n\theaders\tPrint\
    \ index of sequence headers and lengths.\n\tsequence\tExtract sequence in fasta\
    \ format.\n\tn2mhdrs\tExtract Headers in format for novo2maq.\n\texreads\tExtract\
    \ fastq format reads (For Velvet) from a novoalign report.\n\tkmers\tReport all\
    \ k-mers and their frequency\n\tqfilter\tFilter SAM file based on minimum quality\
    \ of pair\n\textractsv\tExtract Offsets of Chimera pairs from a sam file\n\ttag\t\
    Report locations of tag sequence\n\tgenejunctions\tCreate fasta file of exon/exon\
    \ junctions\n\tindex\tReport Index Details\n\tiupac\tAdd SNPs to fasta as IUPAC\
    \ ambiguous codes\n\tbgzf\tMulti-threaded Blocked GZIP compress stdin to stdout\n\
    \taddns\tAdd a few Ns to either end of a contig\n\tfafilt\tFilter short contigs\
    \ from a fasta file\n\tman2bed\tConvert Illumina Trusight/Truseq manifest to BED\
    \ format for novoalign --amplicons option.\n\talttags\tAdd rl & rg tags to FASTA\
    \ headers using NCBI assembly_regions&report. \n\trename\tChange Chrom name in\
    \ a BED or VCF file.\n\tbiseqstrandfixer\tRe-orient BiSeq SAM alignments to look\
    \ like strand preserved alignments\n\ttile\tGenerate fasta format reads to tile\
    \ a chromosome\n\tsplitbed\tSplit a BED file into aproximately equal size parts\n\
    \tfastaAddM5\tAdd M5 & LN metadata tags to fasta headers\n\n (c) 2011-2017 NovoCraft\
    \ Technologies Sdn Bhd\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nUsage:\n\nnovoutil tile [-n 99] [-s 9] [-l 99] <novoindex> <chrName>\
  \  > output.fasta\n\nDescription:\n    Extracts named chromosome from novoindex\
  \ and generates fasta format reads that tile the chromosome with step size -s and\
  \ at most -n N's \n\nOptions:\n    -l 99     Sets read length. Default 70.    -n\
  \ 99     The maximum number of N's in a read. Default 30.    -s 9      The step\
  \ size for tiled reads. Default 1.\n\n"
generated_using: *id002
