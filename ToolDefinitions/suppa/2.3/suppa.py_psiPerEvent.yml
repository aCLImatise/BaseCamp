!Command
command:
- suppa.py
- psiPerEvent
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --ioe-file
  description: "Input file with the event-transcripts equivalence\n(.ioe format)."
  args: !SimpleFlagArg
    name: IOE_FILE
- !Flag
  optional: true
  synonyms:
  - -e
  - --expression-file
  description: Input transcript expression file.
  args: !SimpleFlagArg
    name: EXPRESSION_FILE
- !Flag
  optional: true
  synonyms:
  - -o
  - --output-file
  description: Output psi file.
  args: !SimpleFlagArg
    name: OUTPUT_FILE
- !Flag
  optional: true
  synonyms:
  - -f
  - --total-filter
  description: "Minimum total expression of the transcripts involved\nin the event."
  args: !SimpleFlagArg
    name: TOTAL_FILTER
- !Flag
  optional: true
  synonyms:
  - -s
  - --save_tpm_events
  description: "Boolean. If True, save the TPM of the events in an\nexternal file\
    \ (Default: False)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  - --mode
  description: "to choose from DEBUG, INFO, WARNING, ERROR and\nCRITICAL\n"
  args: !SimpleFlagArg
    name: MODE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: suppa.py psiPerEvent [-h] -i IOE_FILE -e EXPRESSION_FILE -o OUTPUT_FILE\n\
  \                            [-f TOTAL_FILTER] [-s] [-m MODE]\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  -i IOE_FILE, --ioe-file\
  \ IOE_FILE\n                        Input file with the event-transcripts equivalence\n\
  \                        (.ioe format).\n  -e EXPRESSION_FILE, --expression-file\
  \ EXPRESSION_FILE\n                        Input transcript expression file.\n \
  \ -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        Output psi\
  \ file.\n  -f TOTAL_FILTER, --total-filter TOTAL_FILTER\n                      \
  \  Minimum total expression of the transcripts involved\n                      \
  \  in the event.\n  -s, --save_tpm_events\n                        Boolean. If True,\
  \ save the TPM of the events in an\n                        external file (Default:\
  \ False).\n  -m MODE, --mode MODE  to choose from DEBUG, INFO, WARNING, ERROR and\n\
  \                        CRITICAL\n"
generated_using:
- --help
docker_image:
