&id001 !Command
command:
- seidr
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - seidr
  - resolve
  positional:
  - !Positional
    optional: false
    position: 0
    name: input
    description: -F [ --format ] arg (=infomap)  File format to resolve
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -s
    description: '[ --seidr-file ] arg         Seidr file which should be used to
      resolve'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                  Force overwrite output file if it exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)       Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                   Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Resolve node indices in text file to node names.:\n\nRequired [can be\
    \ positional]:\n  --in-file arg                   Input SeidrFile\n\nResolve Options:\n\
    \  -s [ --seidr-file ] arg         Seidr file which should be used to resolve\
    \ \n                                  input\n  -F [ --format ] arg (=infomap)\
    \  File format to resolve\n\nCommon Options:\n  -f [ --force ]               \
    \   Force overwrite output file if it exists\n  -h [ --help ]                \
    \   Show this help message\n  -o [ --outfile ] arg (=-)       Output file name\
    \ ['-' for stdout]\n\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - import
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    description: "[ --infile ] arg        Input file name ['-' for stdin]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -F
    description: '[ --format ] arg        The input file format [el, lm, m, ara]'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -g
    description: '[ --genes ] arg         Gene file for input'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: '[ --outfile ] arg       Output file name'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --name ] arg          Import name (algorithm name)'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -A
    description: '[ --absolute ]          Rank on absolute of scores'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -r
    description: '[ --reverse ]           Rank scores in descending order (highest
      first)'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -z
    description: '[ --drop-zero ]         Drop edges with a weight of zero from the
      network'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -u
    description: '[ --undirected ]        Force all edges to be interpreted as undirected'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -O
    description: '[ --threads ] arg (=1)  Number of OpenMP threads for parallel sorting'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]             Force overwrite output file if it exists'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]              Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Convert various text based network representations to SeidrFiles:\n\n\
    Required:\n  -i [ --infile ] arg        Input file name ['-' for stdin]\n  -F\
    \ [ --format ] arg        The input file format [el, lm, m, ara]\n  -g [ --genes\
    \ ] arg         Gene file for input\n  -o [ --outfile ] arg       Output file\
    \ name\n  -n [ --name ] arg          Import name (algorithm name)\n\nRanking Options:\n\
    \  -A [ --absolute ]          Rank on absolute of scores\n  -r [ --reverse ] \
    \          Rank scores in descending order (highest first)\n  -z [ --drop-zero\
    \ ]         Drop edges with a weight of zero from the network\n  -u [ --undirected\
    \ ]        Force all edges to be interpreted as undirected\n\nOpenMP Options:\n\
    \  -O [ --threads ] arg (=1)  Number of OpenMP threads for parallel sorting\n\n\
    Common Options:\n  -f [ --force ]             Force overwrite output file if it\
    \ exists\n  -h [ --help ]              Show this help message\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - stats
  positional:
  - !Positional
    optional: false
    position: 0
    name: information.
    description: '--eigenvector-tol arg (=1e-08)        Eigenvector centrality convergence '
  - !Positional
    optional: false
    position: 1
    name: tolerance
    description: -e [ --exact ]                        Calculate exact stats.
  - !Positional
    optional: false
    position: 2
    name: score
    description: 'Common Options:'
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile [can be positional]
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last score)      Index of score to use'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --nsamples ] arg (=0)            Use N samples for approximations'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -m
    description: "[ --metrics ] arg (=PR,CLO,BTW,STR,EV,KTZ,LPC,SEC,EBC)\nString describing\
      \ metrics to calculate"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    description: '[ --directed ]                     (Experimental) Use directionality'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --weight-is-distance
    description: "Edge weight represents a distance\n(rather than similarity)."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --weight-rank
    description: Set weight value to rank rather than
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -T
    description: '[ --tempdir ] arg (=auto)          Directory to store temporary
      data'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                         Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Calculate network centrality statistics:\n\nRequired:\n  --in-file arg\
    \                         Input SeidrFile [can be positional]\n\nStats Options:\n\
    \  -i [ --index ] arg (=last score)      Index of score to use\n  -n [ --nsamples\
    \ ] arg (=0)            Use N samples for approximations\n  -m [ --metrics ] arg\
    \ (=PR,CLO,BTW,STR,EV,KTZ,LPC,SEC,EBC)\n                                     \
    \   String describing metrics to calculate\n  -d [ --directed ]              \
    \       (Experimental) Use directionality \n                                 \
    \       information.\n  --eigenvector-tol arg (=1e-08)        Eigenvector centrality\
    \ convergence \n                                        tolerance\n  -e [ --exact\
    \ ]                        Calculate exact stats.\n  --weight-is-distance    \
    \              Edge weight represents a distance \n                          \
    \              (rather than similarity).\n  --weight-rank                    \
    \     Set weight value to rank rather than \n                                \
    \        score\n\nCommon Options:\n  -h [ --help ]                         Show\
    \ this help message\n  -T [ --tempdir ] arg (=auto)          Directory to store\
    \ temporary data\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - matrix.
  positional:
  - !Positional
    optional: false
    position: 0
    name: import
    description: Convert network text files to SeidrFiles.
  - !Positional
    optional: false
    position: 1
    name: aggregate
    description: Aggregate a set of SeidrFiles into a crowd
  - !Positional
    optional: false
    position: 2
    name: network.
    description: '[Filter, threshold or search SeidrFiles]'
  - !Positional
    optional: false
    position: 3
    name: backbone
    description: "Calculate network backbone and filter edges\nbased on noise corrected\
      \ backbone measure."
  - !Positional
    optional: false
    position: 4
    name: index
    description: Create index for SeidrFiles.
  - !Positional
    optional: false
    position: 5
    name: neighbours
    description: "Extract N first degree neighbours of all nodes\nor a list of nodes\
      \ in a SeidrFile."
  - !Positional
    optional: false
    position: 6
    name: sample
    description: Sample random edges from a SeidrFile.
  - !Positional
    optional: false
    position: 7
    name: threshold
    description: "Calculate network threshold based on scale\nfree fit and transitivity."
  - !Positional
    optional: false
    position: 8
    name: view
    description: View, filter or search SeidrFiles.
  - !Positional
    optional: false
    position: 0
    name: stats
    description: Compute node and edge centrality
  - !Positional
    optional: false
    position: 1
    name: graphstats
    description: Calculate summary statistics of the network
  - !Positional
    optional: false
    position: 0
    name: adjacency
    description: Convert a SeidrFile to an adjacency
  - !Positional
    optional: false
    position: 1
    name: matrix.
    description: convert                        Interconvert various text based formats.
  - !Positional
    optional: false
    position: 2
    name: resolve
    description: Convert node indices in text file to node
  - !Positional
    optional: false
    position: 3
    name: names.
    description: '[Compare networks]'
  - !Positional
    optional: false
    position: 4
    name: cluster-enrichment
    description: "Test wether members of clusters in two\nnetworks overlap significantly\
      \ or extract\nclusters."
  - !Positional
    optional: false
    position: 5
    name: compare
    description: Compare two networks for shared/unique
  - !Positional
    optional: false
    position: 6
    name: edges.
    description: '[Evaluate networks]'
  - !Positional
    optional: false
    position: 7
    name: roc
    description: "Compute ROC curves of predictions in \nSeidrFiles given true edges."
  - !Positional
    optional: false
    position: 0
    name: reheader
    description: Modify SeidrFile headers.
  - !Positional
    optional: false
    position: 1
    name: version
    description: Print version.
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[0;31m[ ERROR   ]\e[0;0m[ 2021-03-29T14:10:17 ][ seidr ]: Gene network\
    \ utility for format conversion, ranking and aggregation.\n\n[Create crowd networks]\n\
    \  import                    \t Convert network text files to SeidrFiles.\n  aggregate\
    \                 \t Aggregate a set of SeidrFiles into a crowd\n            \
    \                \t network.\n\n[Filter, threshold or search SeidrFiles]\n  backbone\
    \                  \t Calculate network backbone and filter edges\n          \
    \                  \t based on noise corrected backbone measure.\n  index    \
    \                 \t Create index for SeidrFiles.\n  neighbours              \
    \  \t Extract N first degree neighbours of all nodes\n                       \
    \     \t or a list of nodes in a SeidrFile.\n  sample                    \t Sample\
    \ random edges from a SeidrFile.\n  threshold                 \t Calculate network\
    \ threshold based on scale\n                            \t free fit and transitivity.\n\
    \  view                      \t View, filter or search SeidrFiles.\n\n\n[Calculate\
    \ network statistics]\n  stats                     \t Compute node and edge centrality\n\
    \  graphstats                \t Calculate summary statistics of the network\n\n\
    [Format conversion]\n  adjacency                 \t Convert a SeidrFile to an\
    \ adjacency\n                            \t matrix.\n  convert               \
    \    \t Interconvert various text based formats.\n  resolve                  \
    \ \t Convert node indices in text file to node\n                            \t\
    \ names.\n\n[Compare networks]\n  cluster-enrichment        \t Test wether members\
    \ of clusters in two\n                            \t networks overlap significantly\
    \ or extract\n                            \t clusters.\n  compare            \
    \       \t Compare two networks for shared/unique\n                          \
    \  \t edges.\n\n[Evaluate networks]\n  roc                       \t Compute ROC\
    \ curves of predictions in \n                            \t SeidrFiles given true\
    \ edges.\n\n[Other utility]\n  reheader                  \t Modify SeidrFile headers.\n\
    \  version                   \t Print version.\n\nVersion 0.14.2\n\n\e[0;31m[\
    \ ERROR   ]\e[0;0m[ 2021-03-29T14:10:17 ][ seidr ]: Unrecognized task.\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - compare
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --network-1
    description: Input SeidrFile for network A
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - --network-2
    description: Input SeidrFile for network B
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index-a ] arg (=last score)  Merge scores on this index for
      network A'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -j
    description: '[ --index-b ] arg (=last score)  Merge scores on this index for
      network B'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: "[ --translate ] arg              Translate node names in network\
      \ A\naccording to this table"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --nodes ]                      Print overlap of nodes instead
      of edges'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                      Force overwrite output file if
      it exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)           Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -T
    description: '[ --tempdir ] arg (=auto)        Directory to store temporary data'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                       Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Compare edges or nodes in two networks.:\n\nRequired Options [can be\
    \ positional]:\n  --network-1 arg                     Input SeidrFile for network\
    \ A\n  --network-2 arg                     Input SeidrFile for network B\n\nCompare\
    \ Options:\n  -i [ --index-a ] arg (=last score)  Merge scores on this index for\
    \ network A\n  -j [ --index-b ] arg (=last score)  Merge scores on this index\
    \ for network B\n  -t [ --translate ] arg              Translate node names in\
    \ network A \n                                      according to this table\n\
    \  -n [ --nodes ]                      Print overlap of nodes instead of edges\n\
    \nCommon Options:\n  -f [ --force ]                      Force overwrite output\
    \ file if it exists\n  -h [ --help ]                       Show this help message\n\
    \  -o [ --outfile ] arg (=-)           Output file name ['-' for stdout]\n  -T\
    \ [ --tempdir ] arg (=auto)        Directory to store temporary data\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - backbone
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last index)  Score index to use'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -F
    description: "[ --filter ] arg (=no filter)  Subset network to edges with at least\
      \ this\nSD. 1.28, 1.64, and 2.32 correspond to\n~P0.1, 0.05 and 0.01."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --out-file ] arg (=auto)     Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -T
    description: '[ --tempdir ] arg (=auto)      Directory to store temporary data'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Determine noisy network backbone scores. Optionally filter on these\
    \ scores:\n\nRequired [can be positional]:\n  --in-file arg                  \
    \   Input SeidrFile\n\nBackbone Options:\n  -i [ --index ] arg (=last index) \
    \ Score index to use\n  -F [ --filter ] arg (=no filter)  Subset network to edges\
    \ with at least this \n                                    SD. 1.28, 1.64, and\
    \ 2.32 correspond to \n                                    ~P0.1, 0.05 and 0.01.\n\
    \nCommon Options:\n  -f [ --force ]                    Force overwrite output\
    \ file if it exists\n  -h [ --help ]                     Show this help message\n\
    \  -o [ --out-file ] arg (=auto)     Output file name ['-' for stdout]\n  -T [\
    \ --tempdir ] arg (=auto)      Directory to store temporary data\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - neighbours
  positional:
  - !Positional
    optional: false
    position: 0
    name: return
    description: -g [ --genes ] arg                Gene names to search
  - !Positional
    optional: false
    position: 0
    name: sorting
    description: 'Common Options:'
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last score)'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --neighbours ] arg (=10)     Number of top first-degree neighbours
      to'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -r
    description: '[ --rank ]                     Use rank instead of score'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -u
    description: '[ --unique ]                   Print only unique edges'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -O
    description: '[ --threads ] arg (=1)         Number of OpenMP threads for parallel'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -s
    description: '[ --strict ]                   Fail on all issues instead of warning'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -I
    description: '[ --case-insensitive ]         Search case insensitive nodes'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)         Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Get the top N first-degree neighbours for each node or a list of nodes:\n\
    \nRequired [can be positional]:\n  --in-file arg                     Input SeidrFile\n\
    \nNeighbours Options:\n  -i [ --index ] arg (=last score)\n  -n [ --neighbours\
    \ ] arg (=10)     Number of top first-degree neighbours to \n                \
    \                    return\n  -g [ --genes ] arg                Gene names to\
    \ search\n  -r [ --rank ]                     Use rank instead of score\n  -u\
    \ [ --unique ]                   Print only unique edges\n\nOpenMP Options:\n\
    \  -O [ --threads ] arg (=1)         Number of OpenMP threads for parallel \n\
    \                                    sorting\n\nCommon Options:\n  -f [ --force\
    \ ]                    Force overwrite output file if it exists\n  -s [ --strict\
    \ ]                   Fail on all issues instead of warning\n  -I [ --case-insensitive\
    \ ]         Search case insensitive nodes\n  -h [ --help ]                   \
    \  Show this help message\n  -o [ --outfile ] arg (=-)         Output file name\
    \ ['-' for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - index
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]         Force overwrite output file if it exists'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]          Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Create index for SeidrFiles:\n\nRequired [can be positional]:\n  --in-file\
    \ arg          Input SeidrFile\n\nCommon Options:\n  -f [ --force ]         Force\
    \ overwrite output file if it exists\n  -h [ --help ]          Show this help\
    \ message\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - graphstats
  positional:
  - !Positional
    optional: false
    position: 0
    name: weights
    description: 'Common Options:'
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last score)  Index of scores that should be used
      as'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)         Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Calculate graph level network statistics:\n\nRequired Options [can be\
    \ positional]:\n  --in-file arg                     Input SeidrFile\n\nGraphstat\
    \ Options:\n  -i [ --index ] arg (=last score)  Index of scores that should be\
    \ used as \n                                    weights\n\nCommon Options:\n \
    \ -f [ --force ]                    Force overwrite output file if it exists\n\
    \  -h [ --help ]                     Show this help message\n  -o [ --outfile\
    \ ] arg (=-)         Output file name ['-' for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - aggregate
  positional:
  - !Positional
    optional: false
    position: 0
    name: sorting
    description: 'Common Options:'
  - !Positional
    optional: false
    position: 1
    name: exists
    description: -h [ --help ]                         Show this help message
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input files
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -m
    description: "[ --method ] arg (=irp)            Method to aggregate networks\
      \ [top1,\ntop2, borda, irp]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -k
    description: '[ --keep ]                         Keep directionality information'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -O
    description: '[ --threads ] arg (=1)             Number of OpenMP threads for
      parallel'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                        Force overwrite output file if
      it'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: '[ --outfile ] arg (=aggregated.sf) Output file name'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -T
    description: '[ --tempdir ] arg (=auto)          Directory to store temporary
      data'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Aggregate multiple SeidrFiles.:\n\nRequired Options:\n  --in-file arg\
    \                         Input files\n\nAggregate Options:\n  -m [ --method ]\
    \ arg (=irp)            Method to aggregate networks [top1, \n               \
    \                         top2, borda, irp]\n  -k [ --keep ]                 \
    \        Keep directionality information\n\nOpenMP Options:\n  -O [ --threads\
    \ ] arg (=1)             Number of OpenMP threads for parallel \n            \
    \                            sorting\n\nCommon Options:\n  -f [ --force ]    \
    \                    Force overwrite output file if it \n                    \
    \                    exists\n  -h [ --help ]                         Show this\
    \ help message\n  -o [ --outfile ] arg (=aggregated.sf) Output file name\n  -T\
    \ [ --tempdir ] arg (=auto)          Directory to store temporary data\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - edges.
  positional:
  - !Positional
    optional: false
    position: 0
    name: import
    description: Convert network text files to SeidrFiles.
  - !Positional
    optional: false
    position: 1
    name: aggregate
    description: Aggregate a set of SeidrFiles into a crowd
  - !Positional
    optional: false
    position: 2
    name: network.
    description: '[Filter, threshold or search SeidrFiles]'
  - !Positional
    optional: false
    position: 3
    name: backbone
    description: "Calculate network backbone and filter edges\nbased on noise corrected\
      \ backbone measure."
  - !Positional
    optional: false
    position: 4
    name: index
    description: Create index for SeidrFiles.
  - !Positional
    optional: false
    position: 5
    name: neighbours
    description: "Extract N first degree neighbours of all nodes\nor a list of nodes\
      \ in a SeidrFile."
  - !Positional
    optional: false
    position: 6
    name: sample
    description: Sample random edges from a SeidrFile.
  - !Positional
    optional: false
    position: 7
    name: threshold
    description: "Calculate network threshold based on scale\nfree fit and transitivity."
  - !Positional
    optional: false
    position: 8
    name: view
    description: View, filter or search SeidrFiles.
  - !Positional
    optional: false
    position: 0
    name: stats
    description: Compute node and edge centrality
  - !Positional
    optional: false
    position: 1
    name: graphstats
    description: Calculate summary statistics of the network
  - !Positional
    optional: false
    position: 0
    name: adjacency
    description: Convert a SeidrFile to an adjacency
  - !Positional
    optional: false
    position: 1
    name: matrix.
    description: convert                        Interconvert various text based formats.
  - !Positional
    optional: false
    position: 2
    name: resolve
    description: Convert node indices in text file to node
  - !Positional
    optional: false
    position: 3
    name: names.
    description: '[Compare networks]'
  - !Positional
    optional: false
    position: 4
    name: cluster-enrichment
    description: "Test wether members of clusters in two\nnetworks overlap significantly\
      \ or extract\nclusters."
  - !Positional
    optional: false
    position: 5
    name: compare
    description: Compare two networks for shared/unique
  - !Positional
    optional: false
    position: 6
    name: edges.
    description: '[Evaluate networks]'
  - !Positional
    optional: false
    position: 7
    name: roc
    description: "Compute ROC curves of predictions in \nSeidrFiles given true edges."
  - !Positional
    optional: false
    position: 0
    name: reheader
    description: Modify SeidrFile headers.
  - !Positional
    optional: false
    position: 1
    name: version
    description: Print version.
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[0;31m[ ERROR   ]\e[0;0m[ 2021-03-29T14:10:50 ][ seidr ]: Gene network\
    \ utility for format conversion, ranking and aggregation.\n\n[Create crowd networks]\n\
    \  import                    \t Convert network text files to SeidrFiles.\n  aggregate\
    \                 \t Aggregate a set of SeidrFiles into a crowd\n            \
    \                \t network.\n\n[Filter, threshold or search SeidrFiles]\n  backbone\
    \                  \t Calculate network backbone and filter edges\n          \
    \                  \t based on noise corrected backbone measure.\n  index    \
    \                 \t Create index for SeidrFiles.\n  neighbours              \
    \  \t Extract N first degree neighbours of all nodes\n                       \
    \     \t or a list of nodes in a SeidrFile.\n  sample                    \t Sample\
    \ random edges from a SeidrFile.\n  threshold                 \t Calculate network\
    \ threshold based on scale\n                            \t free fit and transitivity.\n\
    \  view                      \t View, filter or search SeidrFiles.\n\n\n[Calculate\
    \ network statistics]\n  stats                     \t Compute node and edge centrality\n\
    \  graphstats                \t Calculate summary statistics of the network\n\n\
    [Format conversion]\n  adjacency                 \t Convert a SeidrFile to an\
    \ adjacency\n                            \t matrix.\n  convert               \
    \    \t Interconvert various text based formats.\n  resolve                  \
    \ \t Convert node indices in text file to node\n                            \t\
    \ names.\n\n[Compare networks]\n  cluster-enrichment        \t Test wether members\
    \ of clusters in two\n                            \t networks overlap significantly\
    \ or extract\n                            \t clusters.\n  compare            \
    \       \t Compare two networks for shared/unique\n                          \
    \  \t edges.\n\n[Evaluate networks]\n  roc                       \t Compute ROC\
    \ curves of predictions in \n                            \t SeidrFiles given true\
    \ edges.\n\n[Other utility]\n  reheader                  \t Modify SeidrFile headers.\n\
    \  version                   \t Print version.\n\nVersion 0.14.2\n\n\e[0;31m[\
    \ ERROR   ]\e[0;0m[ 2021-03-29T14:10:50 ][ seidr ]: Unrecognized task.\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - reheader
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -T
    description: '[ --tempdir ] arg (=auto)  Directory to store temporary data'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                 Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Modify SeidrFile headers.\nCurrently only drops disconnected nodes and\
    \ resets\nstats.:\n\nRequired [can be positional]:\n  --in-file arg          \
    \       Input SeidrFile\n\nCommon Options:\n  -h [ --help ]                 Show\
    \ this help message\n  -T [ --tempdir ] arg (=auto)  Directory to store temporary\
    \ data\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - view
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -t
    description: '[ --threshold ] arg (=-inf)    Only print edges with a weight >=
      t'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -r
    description: '[ --threshold-rank ]           Threshold edges with a rank of <=
      t instead'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last score)  Score column to use as edge weights'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -F
    description: '[ --filter ] arg               Supply a filter function to select
      edges'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --nodelist ] arg             Include only these nodes'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -l
    description: '[ --lines ] arg                View only first l results'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -N
    description: '[ --no-names ]                 Print node index instead of name'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[ --column-headers ]           Print column headers'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -a
    description: '[ --tags ]                     Print supplementary information tags'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -D
    description: "[ --dense ]                    Print as much information as possible\
      \ for\neach edge"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -s
    description: '[ --sc-delim ] arg (=;)        Delimiter for supplementary tags'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    description: '[ --delim ] arg (=;)           Delimiter for scores/ranks'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -H
    description: '[ --header ]                   Print file header as text'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -C
    description: '[ --centrality ]               Print node centrality scores if present'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)         Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -b
    description: '[ --binary ]                   Output binary SeidrFile'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -I
    description: '[ --case-insensitive ]         Search case insensitive nodes'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -T
    description: '[ --tempdir ] arg (=auto)      Directory to store temporary data'
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "View and filter contents of SeidrFiles:\n\nRequired [can be positional]:\n\
    \  --in-file arg                     Input SeidrFile\n\nFilter Options:\n  -t\
    \ [ --threshold ] arg (=-inf)    Only print edges with a weight >= t\n  -r [ --threshold-rank\
    \ ]           Threshold edges with a rank of <= t instead\n  -i [ --index ] arg\
    \ (=last score)  Score column to use as edge weights\n  -F [ --filter ] arg  \
    \             Supply a filter function to select edges\n  -n [ --nodelist ] arg\
    \             Include only these nodes\n  -l [ --lines ] arg                View\
    \ only first l results\n\nFormatting Options:\n  -N [ --no-names ]           \
    \      Print node index instead of name\n  -c [ --column-headers ]           Print\
    \ column headers\n  -a [ --tags ]                     Print supplementary information\
    \ tags\n  -D [ --dense ]                    Print as much information as possible\
    \ for \n                                    each edge\n  -s [ --sc-delim ] arg\
    \ (=;)        Delimiter for supplementary tags\n  -d [ --delim ] arg (=;)    \
    \       Delimiter for scores/ranks\n\nView metadata:\n  -H [ --header ]      \
    \             Print file header as text\n  -C [ --centrality ]               Print\
    \ node centrality scores if present\n\nOutput Options:\n  -o [ --outfile ] arg\
    \ (=-)         Output file name ['-' for stdout]\n  -b [ --binary ]          \
    \         Output binary SeidrFile\n\nCommon Options:\n  -f [ --force ]       \
    \             Force overwrite output file if it exists\n  -h [ --help ]      \
    \               Show this help message\n  -s [ --strict ]                   Fail\
    \ on all issues instead of warning\n  -I [ --case-insensitive ]         Search\
    \ case insensitive nodes\n  -T [ --tempdir ] arg (=auto)      Directory to store\
    \ temporary data\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - threshold
  positional:
  - !Positional
    optional: false
    position: 0
    name: sorting
    description: 'Common Options:'
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -m
    description: '[ --min ] arg (=0)             Lowest threshold value to check'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -M
    description: '[ --max ] arg (=0)             Highest threshold value to check'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last score)  Score column to use as edge weights'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --nsteps ] arg (=100)        Number of breaks to create for testing'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    description: '[ --precision ] arg (=8)       Number of decimal points to print'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -O
    description: '[ --threads ] arg (=1)         Number of OpenMP threads for parallel'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)         Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Pick hard network threshold according to topology:\n\nRequired [can\
    \ be positional]:\n  --in-file arg                     Input SeidrFile\n\nThreshold\
    \ Options:\n  -m [ --min ] arg (=0)             Lowest threshold value to check\n\
    \  -M [ --max ] arg (=0)             Highest threshold value to check\n  -i [\
    \ --index ] arg (=last score)  Score column to use as edge weights\n  -n [ --nsteps\
    \ ] arg (=100)        Number of breaks to create for testing\n\nFormatting Options:\n\
    \  -p [ --precision ] arg (=8)       Number of decimal points to print\n\nOpenMP\
    \ Options:\n  -O [ --threads ] arg (=1)         Number of OpenMP threads for parallel\
    \ \n                                    sorting\n\nCommon Options:\n  -f [ --force\
    \ ]                    Force overwrite output file if it exists\n  -h [ --help\
    \ ]                     Show this help message\n  -o [ --outfile ] arg (=-)  \
    \       Output file name ['-' for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - network.
  positional:
  - !Positional
    optional: false
    position: 0
    name: import
    description: Convert network text files to SeidrFiles.
  - !Positional
    optional: false
    position: 1
    name: aggregate
    description: Aggregate a set of SeidrFiles into a crowd
  - !Positional
    optional: false
    position: 2
    name: network.
    description: '[Filter, threshold or search SeidrFiles]'
  - !Positional
    optional: false
    position: 3
    name: backbone
    description: "Calculate network backbone and filter edges\nbased on noise corrected\
      \ backbone measure."
  - !Positional
    optional: false
    position: 4
    name: index
    description: Create index for SeidrFiles.
  - !Positional
    optional: false
    position: 5
    name: neighbours
    description: "Extract N first degree neighbours of all nodes\nor a list of nodes\
      \ in a SeidrFile."
  - !Positional
    optional: false
    position: 6
    name: sample
    description: Sample random edges from a SeidrFile.
  - !Positional
    optional: false
    position: 7
    name: threshold
    description: "Calculate network threshold based on scale\nfree fit and transitivity."
  - !Positional
    optional: false
    position: 8
    name: view
    description: View, filter or search SeidrFiles.
  - !Positional
    optional: false
    position: 0
    name: stats
    description: Compute node and edge centrality
  - !Positional
    optional: false
    position: 1
    name: graphstats
    description: Calculate summary statistics of the network
  - !Positional
    optional: false
    position: 0
    name: adjacency
    description: Convert a SeidrFile to an adjacency
  - !Positional
    optional: false
    position: 1
    name: matrix.
    description: convert                        Interconvert various text based formats.
  - !Positional
    optional: false
    position: 2
    name: resolve
    description: Convert node indices in text file to node
  - !Positional
    optional: false
    position: 3
    name: names.
    description: '[Compare networks]'
  - !Positional
    optional: false
    position: 4
    name: cluster-enrichment
    description: "Test wether members of clusters in two\nnetworks overlap significantly\
      \ or extract\nclusters."
  - !Positional
    optional: false
    position: 5
    name: compare
    description: Compare two networks for shared/unique
  - !Positional
    optional: false
    position: 6
    name: edges.
    description: '[Evaluate networks]'
  - !Positional
    optional: false
    position: 7
    name: roc
    description: "Compute ROC curves of predictions in \nSeidrFiles given true edges."
  - !Positional
    optional: false
    position: 0
    name: reheader
    description: Modify SeidrFile headers.
  - !Positional
    optional: false
    position: 1
    name: version
    description: Print version.
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[0;31m[ ERROR   ]\e[0;0m[ 2021-03-29T14:11:19 ][ seidr ]: Gene network\
    \ utility for format conversion, ranking and aggregation.\n\n[Create crowd networks]\n\
    \  import                    \t Convert network text files to SeidrFiles.\n  aggregate\
    \                 \t Aggregate a set of SeidrFiles into a crowd\n            \
    \                \t network.\n\n[Filter, threshold or search SeidrFiles]\n  backbone\
    \                  \t Calculate network backbone and filter edges\n          \
    \                  \t based on noise corrected backbone measure.\n  index    \
    \                 \t Create index for SeidrFiles.\n  neighbours              \
    \  \t Extract N first degree neighbours of all nodes\n                       \
    \     \t or a list of nodes in a SeidrFile.\n  sample                    \t Sample\
    \ random edges from a SeidrFile.\n  threshold                 \t Calculate network\
    \ threshold based on scale\n                            \t free fit and transitivity.\n\
    \  view                      \t View, filter or search SeidrFiles.\n\n\n[Calculate\
    \ network statistics]\n  stats                     \t Compute node and edge centrality\n\
    \  graphstats                \t Calculate summary statistics of the network\n\n\
    [Format conversion]\n  adjacency                 \t Convert a SeidrFile to an\
    \ adjacency\n                            \t matrix.\n  convert               \
    \    \t Interconvert various text based formats.\n  resolve                  \
    \ \t Convert node indices in text file to node\n                            \t\
    \ names.\n\n[Compare networks]\n  cluster-enrichment        \t Test wether members\
    \ of clusters in two\n                            \t networks overlap significantly\
    \ or extract\n                            \t clusters.\n  compare            \
    \       \t Compare two networks for shared/unique\n                          \
    \  \t edges.\n\n[Evaluate networks]\n  roc                       \t Compute ROC\
    \ curves of predictions in \n                            \t SeidrFiles given true\
    \ edges.\n\n[Other utility]\n  reheader                  \t Modify SeidrFile headers.\n\
    \  version                   \t Print version.\n\nVersion 0.14.2\n\n\e[0;31m[\
    \ ERROR   ]\e[0;0m[ 2021-03-29T14:11:19 ][ seidr ]: Unrecognized task.\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - names.
  positional:
  - !Positional
    optional: false
    position: 0
    name: import
    description: Convert network text files to SeidrFiles.
  - !Positional
    optional: false
    position: 1
    name: aggregate
    description: Aggregate a set of SeidrFiles into a crowd
  - !Positional
    optional: false
    position: 2
    name: network.
    description: '[Filter, threshold or search SeidrFiles]'
  - !Positional
    optional: false
    position: 3
    name: backbone
    description: "Calculate network backbone and filter edges\nbased on noise corrected\
      \ backbone measure."
  - !Positional
    optional: false
    position: 4
    name: index
    description: Create index for SeidrFiles.
  - !Positional
    optional: false
    position: 5
    name: neighbours
    description: "Extract N first degree neighbours of all nodes\nor a list of nodes\
      \ in a SeidrFile."
  - !Positional
    optional: false
    position: 6
    name: sample
    description: Sample random edges from a SeidrFile.
  - !Positional
    optional: false
    position: 7
    name: threshold
    description: "Calculate network threshold based on scale\nfree fit and transitivity."
  - !Positional
    optional: false
    position: 8
    name: view
    description: View, filter or search SeidrFiles.
  - !Positional
    optional: false
    position: 0
    name: stats
    description: Compute node and edge centrality
  - !Positional
    optional: false
    position: 1
    name: graphstats
    description: Calculate summary statistics of the network
  - !Positional
    optional: false
    position: 0
    name: adjacency
    description: Convert a SeidrFile to an adjacency
  - !Positional
    optional: false
    position: 1
    name: matrix.
    description: convert                        Interconvert various text based formats.
  - !Positional
    optional: false
    position: 2
    name: resolve
    description: Convert node indices in text file to node
  - !Positional
    optional: false
    position: 3
    name: names.
    description: '[Compare networks]'
  - !Positional
    optional: false
    position: 4
    name: cluster-enrichment
    description: "Test wether members of clusters in two\nnetworks overlap significantly\
      \ or extract\nclusters."
  - !Positional
    optional: false
    position: 5
    name: compare
    description: Compare two networks for shared/unique
  - !Positional
    optional: false
    position: 6
    name: edges.
    description: '[Evaluate networks]'
  - !Positional
    optional: false
    position: 7
    name: roc
    description: "Compute ROC curves of predictions in \nSeidrFiles given true edges."
  - !Positional
    optional: false
    position: 0
    name: reheader
    description: Modify SeidrFile headers.
  - !Positional
    optional: false
    position: 1
    name: version
    description: Print version.
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[0;31m[ ERROR   ]\e[0;0m[ 2021-03-29T14:11:50 ][ seidr ]: Gene network\
    \ utility for format conversion, ranking and aggregation.\n\n[Create crowd networks]\n\
    \  import                    \t Convert network text files to SeidrFiles.\n  aggregate\
    \                 \t Aggregate a set of SeidrFiles into a crowd\n            \
    \                \t network.\n\n[Filter, threshold or search SeidrFiles]\n  backbone\
    \                  \t Calculate network backbone and filter edges\n          \
    \                  \t based on noise corrected backbone measure.\n  index    \
    \                 \t Create index for SeidrFiles.\n  neighbours              \
    \  \t Extract N first degree neighbours of all nodes\n                       \
    \     \t or a list of nodes in a SeidrFile.\n  sample                    \t Sample\
    \ random edges from a SeidrFile.\n  threshold                 \t Calculate network\
    \ threshold based on scale\n                            \t free fit and transitivity.\n\
    \  view                      \t View, filter or search SeidrFiles.\n\n\n[Calculate\
    \ network statistics]\n  stats                     \t Compute node and edge centrality\n\
    \  graphstats                \t Calculate summary statistics of the network\n\n\
    [Format conversion]\n  adjacency                 \t Convert a SeidrFile to an\
    \ adjacency\n                            \t matrix.\n  convert               \
    \    \t Interconvert various text based formats.\n  resolve                  \
    \ \t Convert node indices in text file to node\n                            \t\
    \ names.\n\n[Compare networks]\n  cluster-enrichment        \t Test wether members\
    \ of clusters in two\n                            \t networks overlap significantly\
    \ or extract\n                            \t clusters.\n  compare            \
    \       \t Compare two networks for shared/unique\n                          \
    \  \t edges.\n\n[Evaluate networks]\n  roc                       \t Compute ROC\
    \ curves of predictions in \n                            \t SeidrFiles given true\
    \ edges.\n\n[Other utility]\n  reheader                  \t Modify SeidrFile headers.\n\
    \  version                   \t Print version.\n\nVersion 0.14.2\n\n\e[0;31m[\
    \ ERROR   ]\e[0;0m[ 2021-03-29T14:11:50 ][ seidr ]: Unrecognized task.\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - roc
  positional:
  - !Positional
    optional: false
    position: 0
    name: SeidrFile
    description: 'OpenMP Options:'
  - !Positional
    optional: false
    position: 1
    name: sorting
    description: 'Common Options:'
  named:
  - !Flag
    optional: true
    synonyms:
    - -g
    description: '[ --gold ] arg                 Gold standard (true edges) input
      file'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --network ] arg              Input SeidrFile [can be positional]'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last score)  Index of score to use'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -e
    description: '[ --edges ] arg (=all)         Number of top edges to consider'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -E
    description: '[ --fraction ] arg (=all)      Fraction of gold standard edges to
      include'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    description: '[ --points ] arg (=all)        Number of data points to print'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: '[ --tfs ] arg                  List of transcription factors to
      consider'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -x
    description: '[ --neg ] arg                  True negative edges'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -a
    description: '[ --all ]                      Calculate ROC for all scores in the'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -O
    description: '[ --threads ] arg (=1)         Number of OpenMP threads for parallel'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)         Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Calculate ROC curves of predictions in SeidrFiles given true edges:\n\
    \nRequired:\n  -g [ --gold ] arg                 Gold standard (true edges) input\
    \ file\n  -n [ --network ] arg              Input SeidrFile [can be positional]\n\
    \nROC Options:\n  -i [ --index ] arg (=last score)  Index of score to use\n  -e\
    \ [ --edges ] arg (=all)         Number of top edges to consider\n  -E [ --fraction\
    \ ] arg (=all)      Fraction of gold standard edges to include\n  -p [ --points\
    \ ] arg (=all)        Number of data points to print\n  -t [ --tfs ] arg     \
    \             List of transcription factors to consider\n  -x [ --neg ] arg  \
    \                True negative edges\n  -a [ --all ]                      Calculate\
    \ ROC for all scores in the \n                                    SeidrFile\n\n\
    OpenMP Options:\n  -O [ --threads ] arg (=1)         Number of OpenMP threads\
    \ for parallel \n                                    sorting\n\nCommon Options:\n\
    \  -f [ --force ]                    Force overwrite output file if it exists\n\
    \  -h [ --help ]                     Show this help message\n  -o [ --outfile\
    \ ] arg (=-)         Output file name ['-' for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - sample
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -r
    description: '[ --replacement ]         Sample with replacement'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    description: '[ --precision ] arg (=8)  Number of significant digits to report'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -n
    description: '[ --nedges ] arg          Number of edges to sample'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -F
    description: '[ --fraction ] arg        Fraction of edges to sample'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]               Force overwrite output file if it exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)    Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "\nRequired:\n  --in-file arg                Input SeidrFile\n\nSample\
    \ options:\n  -r [ --replacement ]         Sample with replacement\n  -p [ --precision\
    \ ] arg (=8)  Number of significant digits to report\n  -n [ --nedges ] arg  \
    \        Number of edges to sample\n  -F [ --fraction ] arg        Fraction of\
    \ edges to sample\n\nCommon Options:\n  -f [ --force ]               Force overwrite\
    \ output file if it exists\n  -h [ --help ]                Show this help message\n\
    \  -o [ --outfile ] arg (=-)    Output file name ['-' for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - adjacency
  positional:
  - !Positional
    optional: false
    position: 0
    name: format
    description: -F [ --fmt ] arg (=m)             Output format ['m','lm']
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-file
    description: Input SeidrFile
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    description: '[ --index ] arg (=last index)  Score index to use'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -D
    description: '[ --diagonal ]                 Print matrix diagonal for triangular
      output'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -m
    description: '[ --missing ] arg (=0)         Fill character for missing edges'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    description: '[ --precision ] arg (=8)       Number of significant digits to report'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                    Force overwrite output file if it
      exists'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --out-file ] arg (=-)        Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: '[ --help ]                     Show this help message'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Transform a SeidrFile into an adjacency matrix:\n\nRequired [can be\
    \ positional]:\n  --in-file arg                     Input SeidrFile\n\nAdjacency\
    \ Options:\n  -i [ --index ] arg (=last index)  Score index to use\n\nFormatting\
    \ Options:\n  -D [ --diagonal ]                 Print matrix diagonal for triangular\
    \ output\n                                    format\n  -F [ --fmt ] arg (=m)\
    \             Output format ['m','lm']\n  -m [ --missing ] arg (=0)         Fill\
    \ character for missing edges\n  -p [ --precision ] arg (=8)       Number of significant\
    \ digits to report\n\nCommon Options:\n  -f [ --force ]                    Force\
    \ overwrite output file if it exists\n  -h [ --help ]                     Show\
    \ this help message\n  -o [ --out-file ] arg (=-)        Output file name ['-'\
    \ for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
- !Command
  command:
  - seidr
  - cluster-enrichment
  positional:
  - !Positional
    optional: false
    position: 0
    name: exists
    description: -h [ --help ]                         Show this help message
  named:
  - !Flag
    optional: true
    synonyms:
    - '-1'
    description: '[ --first ] arg                    First cluster->gene mapping'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - '-2'
    description: "[ --second ] arg                   Another cluster->gene mapping\
      \ [can be\npositional]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    description: '[ --delim ] arg (=,)               Output delimiter'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -a
    description: "[ --alpha ] arg (=SEIDR_COMPARE_CLUST_DEF_ALPHA)\nAdjusted p-value\
      \ cutoff"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -m
    description: '[ --min-members ] arg (=20)        Minimum members of a cluster'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -M
    description: '[ --max-members ] arg (=200)       Maximum members of a cluster'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: '[ --force ]                        Force overwrite output file if
      it'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: "[ --outfile ] arg (=-)             Output file name ['-' for stdout]"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Test wether clusters of two networks show significant overlap or extract\
    \ clusters:\n\nRequired Options [can be positional]:\n  -1 [ --first ] arg   \
    \                 First cluster->gene mapping\n\nCluster-Compare Options:\n  -2\
    \ [ --second ] arg                   Another cluster->gene mapping [can be \n\
    \                                        positional]\n  -d [ --delim ] arg (=,)\
    \               Output delimiter\n  -a [ --alpha ] arg (=SEIDR_COMPARE_CLUST_DEF_ALPHA)\n\
    \                                        Adjusted p-value cutoff\n  -m [ --min-members\
    \ ] arg (=20)        Minimum members of a cluster\n  -M [ --max-members ] arg\
    \ (=200)       Maximum members of a cluster\n\nCommon Options:\n  -f [ --force\
    \ ]                        Force overwrite output file if it \n              \
    \                          exists\n  -h [ --help ]                         Show\
    \ this help message\n  -o [ --outfile ] arg (=-)             Output file name\
    \ ['-' for stdout]\n\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[0;31m[ ERROR   ]\e[0;0m[ 2021-03-29T14:10:11 ][ seidr ]: Gene network\
  \ utility for format conversion, ranking and aggregation.\n\n[Create crowd networks]\n\
  \  import                    \t Convert network text files to SeidrFiles.\n  aggregate\
  \                 \t Aggregate a set of SeidrFiles into a crowd\n              \
  \              \t network.\n\n[Filter, threshold or search SeidrFiles]\n  backbone\
  \                  \t Calculate network backbone and filter edges\n            \
  \                \t based on noise corrected backbone measure.\n  index        \
  \             \t Create index for SeidrFiles.\n  neighbours                \t Extract\
  \ N first degree neighbours of all nodes\n                            \t or a list\
  \ of nodes in a SeidrFile.\n  sample                    \t Sample random edges from\
  \ a SeidrFile.\n  threshold                 \t Calculate network threshold based\
  \ on scale\n                            \t free fit and transitivity.\n  view  \
  \                    \t View, filter or search SeidrFiles.\n\n\n[Calculate network\
  \ statistics]\n  stats                     \t Compute node and edge centrality\n\
  \  graphstats                \t Calculate summary statistics of the network\n\n\
  [Format conversion]\n  adjacency                 \t Convert a SeidrFile to an adjacency\n\
  \                            \t matrix.\n  convert                   \t Interconvert\
  \ various text based formats.\n  resolve                   \t Convert node indices\
  \ in text file to node\n                            \t names.\n\n[Compare networks]\n\
  \  cluster-enrichment        \t Test wether members of clusters in two\n       \
  \                     \t networks overlap significantly or extract\n           \
  \                 \t clusters.\n  compare                   \t Compare two networks\
  \ for shared/unique\n                            \t edges.\n\n[Evaluate networks]\n\
  \  roc                       \t Compute ROC curves of predictions in \n        \
  \                    \t SeidrFiles given true edges.\n\n[Other utility]\n  reheader\
  \                  \t Modify SeidrFile headers.\n  version                   \t\
  \ Print version.\n\nVersion 0.14.2\n\n\e[0;31m[ ERROR   ]\e[0;0m[ 2021-03-29T14:10:11\
  \ ][ seidr ]: Unrecognized task.\n"
generated_using: *id002
docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
