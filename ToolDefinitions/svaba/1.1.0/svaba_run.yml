!Command
command:
- svaba
- run
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: 'Select verbosity level (0-4). Default: 0'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --threads
  description: 'Use NUM threads to run svaba. Default: 1'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  - --id-string
  description: String specifying the analysis ID to be used as part of ID common.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -G
  - --reference-genome
  description: Path to indexed reference genome to be used by BWA-MEM.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --case-bam
  description: Case BAM/CRAM/SAM file (eg tumor). Can input multiple.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --control-bam
  description: (optional) Control BAM/CRAM/SAM file (eg normal). Can input multiple.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  - --region
  description: Run on targeted intervals. Accepts BED file or Samtools-style string
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --germline
  description: Sets recommended settings for case-only analysis (eg germline). (-I,
    -L5, assembles NM >= 3 reads)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lod
  description: LOD cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF))
    [8]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lod-dbsnp
  description: LOD cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF))
    at DBSnp indel site [5]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lod-somatic
  description: LOD cutoff to classify indel as somatic (tests AF=0 in normal vs AF=ML(0.5))
    [2.5]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lod-somatic-dbsnp
  description: LOD cutoff to classify indel as somatic (tests AF=0 in normal vs AF=ML(0.5))
    at DBSnp indel site [4]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --scale-errors
  description: Scale the priors that a site is artifact at given repeat count. 0 means
    assume low (const) error rate [1]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  - --mate-lookup-min
  description: Minimum number of somatic reads required to attempt mate-region lookup
    [3]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --disc-sd-cutoff
  description: Number of standard deviations of calculated insert-size distribution
    to consider discordant. [3.92]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --chunk-size
  description: Size of a local assembly window (in bp). Set 0 for whole-BAM in one
    assembly. [25000]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  - --max-reads
  description: Max total read count to read in from assembly region. Set 0 to turn
    off. [50000]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  - --max-reads-mate-region
  description: Max weird reads to include from a mate lookup region. [400]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -C
  - --max-coverage
  description: Max read coverage to send to assembler (per BAM). Subsample reads if
    exceeded. [500]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-interchrom-lookup
  description: Skip mate lookup for inter-chr candidate events. Reduces power for
    translocations but less I/O.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --discordant-only
  description: Only run the discordant read clustering module, skip assembly.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --num-assembly-rounds
  description: Run assembler multiple times. > 1 will bootstrap the assembly. [2]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --num-to-sample
  description: When learning about inputs, number of reads to sample. [2,000,000]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hp
  description: Highly parallel. Don't write output until completely done. More memory,
    but avoids all thread-locks.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --override-reference-check
  description: With much caution, allows user to run svaba with different reference
    genomes for BAMs and -G
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --g-zip
  description: Gzip and tabix the output VCF files. [off]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -A
  - --all-contigs
  description: Output all contigs that were assembled, regardless of mapping or length.
    [off]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --read-tracking
  description: Track supporting reads by qname. Increases file sizes. [off]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write-extracted-reads
  description: For the case BAM, write reads sent to assembly to a BAM file. [off]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -D
  - --dbsnp-vcf
  description: DBsnp database (VCF) to compare indels against
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -B
  - --blacklist
  description: BED-file with blacklisted regions to not extract any reads from.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Y
  - --microbial-genome
  description: Path to indexed reference genome of microbial sequences to be used
    by BWA-MEM to filter reads.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -V
  - --germline-sv-database
  description: BED file containing sites of known germline SVs. Used as additional
    filter for somatic SV detection
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  - --simple-seq-database
  description: BED file containing sites of simple DNA that can confuse the contig
    re-alignment.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  - --min-overlap
  description: 'Minimum read overlap, an SGA parameter. Default: 0.4* readlength'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --error-rate
  description: Fractional difference two reads can have to overlap. See SGA. 0 is
    fast, but requires error correcting. [0]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -K
  - --ec-correct-type
  description: (f) Fermi-kit BFC correction, (s) Kmer-correction from SGA, (0) no
    correction (then suggest non-zero -e) [f]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -E
  - --ec-subsample
  description: Learn from fraction of non-weird reads during error-correction. Lower
    number = faster compute [0.5]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write-asqg
  description: Output an ASQG graph file for each assembly window.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bwa-match-score
  description: Set the BWA-MEM match score. BWA-MEM -A [2]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gap-open-penalty
  description: Set the BWA-MEM gap open penalty for contig to genome alignments. BWA-MEM
    -O [32]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gap-extension-penalty
  description: Set the BWA-MEM gap extension penalty for contig to genome alignments.
    BWA-MEM -E [1]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mismatch-penalty
  description: Set the BWA-MEM mismatch penalty for contig to genome alignments. BWA-MEM
    -b [18]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bandwidth
  description: Set the BWA-MEM SW alignment bandwidth for contig to genome alignments.
    BWA-MEM -w [1000]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --z-dropoff
  description: Set the BWA-MEM SW alignment Z-dropoff for contig to genome alignments.
    BWA-MEM -d [100]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --reseed-trigger
  description: Set the BWA-MEM reseed trigger for reseeding mems for contig to genome
    alignments. BWA-MEM -r [1.5]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --penalty-clip-3
  description: Set the BWA-MEM penalty for 3' clipping. [5]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --penalty-clip-5
  description: Set the BWA-MEM penalty for 5' clipping. [5]
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "\nUsage: svaba run -t <BAM/SAM/CRAM> -G <reference> -a myid [OPTIONS]\n\
  \n  Description: SV and indel detection using rolling SGA assembly and BWA-MEM realignment\n\
  \n  General options\n  -v, --verbose                        Select verbosity level\
  \ (0-4). Default: 0 \n  -h, --help                           Display this help and\
  \ exit\n  -p, --threads                        Use NUM threads to run svaba. Default:\
  \ 1\n  -a, --id-string                      String specifying the analysis ID to\
  \ be used as part of ID common.\n  Main input\n  -G, --reference-genome        \
  \       Path to indexed reference genome to be used by BWA-MEM.\n  -t, --case-bam\
  \                       Case BAM/CRAM/SAM file (eg tumor). Can input multiple.\n\
  \  -n, --control-bam                    (optional) Control BAM/CRAM/SAM file (eg\
  \ normal). Can input multiple.\n  -k, --region                         Run on targeted\
  \ intervals. Accepts BED file or Samtools-style string\n      --germline       \
  \                Sets recommended settings for case-only analysis (eg germline).\
  \ (-I, -L5, assembles NM >= 3 reads)\n  Variant filtering and classification\n \
  \     --lod                            LOD cutoff to classify indel as non-REF (tests\
  \ AF=0 vs AF=MaxLikelihood(AF)) [8]\n      --lod-dbsnp                      LOD\
  \ cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF)) at DBSnp\
  \ indel site [5]\n      --lod-somatic                    LOD cutoff to classify\
  \ indel as somatic (tests AF=0 in normal vs AF=ML(0.5)) [2.5]\n      --lod-somatic-dbsnp\
  \              LOD cutoff to classify indel as somatic (tests AF=0 in normal vs\
  \ AF=ML(0.5)) at DBSnp indel site [4]\n      --scale-errors                   Scale\
  \ the priors that a site is artifact at given repeat count. 0 means assume low (const)\
  \ error rate [1]\n  Additional options\n  -L, --mate-lookup-min                Minimum\
  \ number of somatic reads required to attempt mate-region lookup [3]\n  -s, --disc-sd-cutoff\
  \                 Number of standard deviations of calculated insert-size distribution\
  \ to consider discordant. [3.92]\n  -c, --chunk-size                     Size of\
  \ a local assembly window (in bp). Set 0 for whole-BAM in one assembly. [25000]\n\
  \  -x, --max-reads                      Max total read count to read in from assembly\
  \ region. Set 0 to turn off. [50000]\n  -M, --max-reads-mate-region          Max\
  \ weird reads to include from a mate lookup region. [400]\n  -C, --max-coverage\
  \                   Max read coverage to send to assembler (per BAM). Subsample\
  \ reads if exceeded. [500]\n      --no-interchrom-lookup           Skip mate lookup\
  \ for inter-chr candidate events. Reduces power for translocations but less I/O.\n\
  \      --discordant-only                Only run the discordant read clustering\
  \ module, skip assembly. \n      --num-assembly-rounds            Run assembler\
  \ multiple times. > 1 will bootstrap the assembly. [2]\n      --num-to-sample  \
  \                When learning about inputs, number of reads to sample. [2,000,000]\n\
  \      --hp                             Highly parallel. Don't write output until\
  \ completely done. More memory, but avoids all thread-locks.\n      --override-reference-check\
  \       With much caution, allows user to run svaba with different reference genomes\
  \ for BAMs and -G\n  Output options\n  -z, --g-zip                          Gzip\
  \ and tabix the output VCF files. [off]\n  -A, --all-contigs                   \
  \ Output all contigs that were assembled, regardless of mapping or length. [off]\n\
  \      --read-tracking                  Track supporting reads by qname. Increases\
  \ file sizes. [off]\n      --write-extracted-reads          For the case BAM, write\
  \ reads sent to assembly to a BAM file. [off]\n  Optional external database\n  -D,\
  \ --dbsnp-vcf                      DBsnp database (VCF) to compare indels against\n\
  \  -B, --blacklist                      BED-file with blacklisted regions to not\
  \ extract any reads from.\n  -Y, --microbial-genome               Path to indexed\
  \ reference genome of microbial sequences to be used by BWA-MEM to filter reads.\n\
  \  -V, --germline-sv-database           BED file containing sites of known germline\
  \ SVs. Used as additional filter for somatic SV detection\n  -R, --simple-seq-database\
  \            BED file containing sites of simple DNA that can confuse the contig\
  \ re-alignment.\n  Assembly and EC params\n  -m, --min-overlap                 \
  \   Minimum read overlap, an SGA parameter. Default: 0.4* readlength\n  -e, --error-rate\
  \                     Fractional difference two reads can have to overlap. See SGA.\
  \ 0 is fast, but requires error correcting. [0]\n  -K, --ec-correct-type       \
  \         (f) Fermi-kit BFC correction, (s) Kmer-correction from SGA, (0) no correction\
  \ (then suggest non-zero -e) [f]\n  -E, --ec-subsample                   Learn from\
  \ fraction of non-weird reads during error-correction. Lower number = faster compute\
  \ [0.5]\n      --write-asqg                     Output an ASQG graph file for each\
  \ assembly window.\n  BWA-MEM alignment params\n      --bwa-match-score        \
  \        Set the BWA-MEM match score. BWA-MEM -A [2]\n      --gap-open-penalty \
  \              Set the BWA-MEM gap open penalty for contig to genome alignments.\
  \ BWA-MEM -O [32]\n      --gap-extension-penalty          Set the BWA-MEM gap extension\
  \ penalty for contig to genome alignments. BWA-MEM -E [1]\n      --mismatch-penalty\
  \               Set the BWA-MEM mismatch penalty for contig to genome alignments.\
  \ BWA-MEM -b [18]\n      --bandwidth                      Set the BWA-MEM SW alignment\
  \ bandwidth for contig to genome alignments. BWA-MEM -w [1000]\n      --z-dropoff\
  \                      Set the BWA-MEM SW alignment Z-dropoff for contig to genome\
  \ alignments. BWA-MEM -d [100]\n      --reseed-trigger                 Set the BWA-MEM\
  \ reseed trigger for reseeding mems for contig to genome alignments. BWA-MEM -r\
  \ [1.5]\n      --penalty-clip-3                 Set the BWA-MEM penalty for 3' clipping.\
  \ [5]\n      --penalty-clip-5                 Set the BWA-MEM penalty for 5' clipping.\
  \ [5]\n\n"
generated_using:
- --help
docker_image:
