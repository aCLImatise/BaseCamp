!Command
command:
- gcloud
- service-management
- deploy
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --async
  description: "Display information about the operation in progress, without waiting\n\
    for the operation to complete."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --force
  - -f
  description: "Force the deployment even if any hazardous changes to the service\n\
    configuration are detected."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --validate-only
  description: "If included, the command will only validate the service\nconfiguration(s).\
    \ No configuration(s) will be persisted."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --flatten
  - --format
  - --help
  - --log-http
  - --project
  - --quiet
  - --trace-token
  - --user-output-enabled
  - --verbosity.
  description: $ gcloud help for details.
  args: !SimpleFlagArg
    name: Run
usage_flag:
version_flag:
help_text: "NAME\n    gcloud service-management deploy - deploys a service configuration\
  \ for the\n        given service name\n\nSYNOPSIS\n    gcloud service-management\
  \ deploy SERVICE_CONFIG_FILE\n        [SERVICE_CONFIG_FILE ...] [--async] [--force,\
  \ -f] [--validate-only]\n        [GCLOUD_WIDE_FLAG ...]\n\nDESCRIPTION\n    This\
  \ command is used to deploy a service configuration for a service to\n    Google\
  \ Service Management. As input, it takes one or more paths to service\n    configurations\
  \ that should be uploaded. These configuration files can be\n    Proto Descriptors,\
  \ Open API (Swagger) specifications, or Google Service\n    Configuration files\
  \ in JSON or YAML formats.\n\n    If a service name is present in multiple configuration\
  \ files (given in the\n    host field in OpenAPI specifications or the name field\
  \ in Google Service\n    Configuration files), the first one will take precedence.\n\
  \n    This command will block until deployment is complete unless the --async\n\
  \    flag is passed.\n\nPOSITIONAL ARGUMENTS\n     SERVICE_CONFIG_FILE [SERVICE_CONFIG_FILE\
  \ ...]\n        The service configuration file (or files) containing the API\n \
  \       specification to upload. Proto Descriptors, Open API (Swagger)\n       \
  \ specifications, and Google Service Configuration files in JSON and YAML\n    \
  \    formats are acceptable.\n\nFLAGS\n     --async\n        Display information\
  \ about the operation in progress, without waiting\n        for the operation to\
  \ complete.\n\n     --force, -f\n        Force the deployment even if any hazardous\
  \ changes to the service\n        configuration are detected.\n\n     --validate-only\n\
  \        If included, the command will only validate the service\n        configuration(s).\
  \ No configuration(s) will be persisted.\n\nGCLOUD WIDE FLAGS\n    These flags are\
  \ available to all commands: --account, --configuration,\n    --flatten, --format,\
  \ --help, --log-http, --project, --quiet, --trace-token,\n    --user-output-enabled,\
  \ --verbosity. Run $ gcloud help for details.\n\nEXAMPLES\n    To deploy a single\
  \ Open API service configuration, run:\n\n        $ gcloud service-management deploy\
  \ ~/my_app/openapi.json\n\n    To run the deployment asynchronously (non-blocking),\
  \ run:\n\n        $ gcloud service-management deploy ~/my_app/openapi.json --async\n\
  \n    To deploy a service config with a Proto, run:\n\n        $ gcloud service-management\
  \ deploy ~/my_app/service-config.yaml \\\n            ~/my_app/service-protos.pb\n"
generated_using:
- --help
docker_image:
