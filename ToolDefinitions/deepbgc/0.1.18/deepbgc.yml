!Command
command: &id001
- deepbgc
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - deepbgc
  - info
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: ''
    args: !EmptyFlagArg {}
  parent: &id012 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: &id011 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: &id010 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: &id009 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC\
                        \ summary information about downloaded models and dependencies.\n\
                        \noptional arguments:\n  -h, --help  show this help message\
                        \ and exit\n  --debug\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - deepbgc
                      - train
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inputs
                        description: Training sequences (Pfam TSV) file paths
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -m
                        - --model
                        description: Path to JSON model config file
                        args: !SimpleFlagArg
                          name: MODEL
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        - --target
                        description: Target column to predict in sequence prediction
                        args: !SimpleFlagArg
                          name: TARGET
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Output trained model file path
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        - --log
                        description: Progress log output path (e.g. TensorBoard)
                        args: !SimpleFlagArg
                          name: LOG
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        - --classes
                        description: Class TSV file path - train a sequence classifier
                          using provided classes (binary columns), indexed by sequence_id
                          column
                        args: !SimpleFlagArg
                          name: CLASSES
                      - !Flag
                        optional: true
                        synonyms:
                        - --config
                        description: "CONFIG\nVariables in model JSON file to replace\
                          \ (e.g. --config PFAM2VEC path/to/pfam2vec.csv)"
                        args: !SimpleFlagArg
                          name: CONFIG
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --validation
                        description: Validation sequence file path. Repeat to specify
                          multiple files
                        args: !SimpleFlagArg
                          name: VALIDATION
                      - !Flag
                        optional: true
                        synonyms:
                        - --verbose
                        description: 'Verbosity level: 0=none, 1=progress bar, 2=once
                          per epoch (default: 2)'
                        args: !SimpleFlagArg
                          name: INT
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t\
                        \ TARGET] -o OUTPUT [-l LOG]\n                     [-c CLASSES]\
                        \ [--config CONFIG CONFIG] [-v VALIDATION]\n             \
                        \        [--verbose INT]\n                     inputs [inputs\
                        \ ...]\n\nTrain a BGC detector/classifier on a set of BGC\
                        \ samples.\n    \nExamples:\n    \n  # Train a detector using\
                        \ pre-processed samples in Pfam CSV format. \n  deepbgc train\
                        \ --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv\
                        \ negatives.pfam.tsv\n    \n  # Train a BGC classifier using\
                        \ a TSV classes file and a set of BGC samples in Pfam TSV\
                        \ format and save the trained classifier to a file. \n  deepbgc\
                        \ train --model random_forest.json --output MyDeepBGCClassifier.pkl\
                        \ --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n  \n\n\
                        positional arguments:\n  inputs                Training sequences\
                        \ (Pfam TSV) file paths\n\noptional arguments:\n  -h, --help\
                        \            show this help message and exit\n  --debug\n\
                        \  -m MODEL, --model MODEL\n                        Path to\
                        \ JSON model config file\n  -t TARGET, --target TARGET\n \
                        \                       Target column to predict in sequence\
                        \ prediction\n  -o OUTPUT, --output OUTPUT\n             \
                        \           Output trained model file path\n  -l LOG, --log\
                        \ LOG     Progress log output path (e.g. TensorBoard)\n  -c\
                        \ CLASSES, --classes CLASSES\n                        Class\
                        \ TSV file path - train a sequence classifier using provided\
                        \ classes (binary columns), indexed by sequence_id column\n\
                        \  --config CONFIG CONFIG\n                        Variables\
                        \ in model JSON file to replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n\
                        \  -v VALIDATION, --validation VALIDATION\n              \
                        \          Validation sequence file path. Repeat to specify\
                        \ multiple files\n  --verbose INT         Verbosity level:\
                        \ 0=none, 1=progress bar, 2=once per epoch (default: 2)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - deepbgc
                      - pipeline
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inputs
                        description: Input sequence file path (FASTA, GenBank, Pfam
                          CSV)
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Custom output directory path
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - --limit-to-record
                        description: Process only specific record ID. Can be provided
                          multiple times
                        args: !SimpleFlagArg
                          name: LIMIT_TO_RECORD
                      - !Flag
                        optional: true
                        synonyms:
                        - --minimal-output
                        description: Produce minimal output with just the GenBank
                          sequence file
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prodigal-meta-mode
                        description: Run Prodigal in '-p meta' mode to enable detecting
                          genes in short contigs
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --protein
                        description: Accept amino-acid protein sequences as input
                          (experimental). Will treat each file as a single record
                          with multiple proteins.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --detector
                        description: Trained detection model name (run "deepbgc download"
                          to download models) or path to trained model pickle file.
                          Can be provided multiple times (-d first -d second)
                        args: !SimpleFlagArg
                          name: DETECTORS
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-detector
                        description: Disable BGC detection
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        - --label
                        description: Label for detected clusters (equal to --detector
                          by default). If multiple detectors are provided, a label
                          should be provided for each one
                        args: !SimpleFlagArg
                          name: LABELS
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --score
                        description: 'Average protein-wise DeepBGC score threshold
                          for extracting BGC regions from Pfam sequences (default:
                          0.5)'
                        args: !SimpleFlagArg
                          name: SCORE
                      - !Flag
                        optional: true
                        synonyms:
                        - --merge-max-protein-gap
                        description: 'Merge detected BGCs within given number of proteins
                          (default: 0)'
                        args: !SimpleFlagArg
                          name: MERGE_MAX_PROTEIN_GAP
                      - !Flag
                        optional: true
                        synonyms:
                        - --merge-max-nucl-gap
                        description: 'Merge detected BGCs within given number of nucleotides
                          (default: 0)'
                        args: !SimpleFlagArg
                          name: MERGE_MAX_NUCL_GAP
                      - !Flag
                        optional: true
                        synonyms:
                        - --min-nucl
                        description: 'Minimum BGC nucleotide length (default: 1)'
                        args: !SimpleFlagArg
                          name: MIN_NUCL
                      - !Flag
                        optional: true
                        synonyms:
                        - --min-proteins
                        description: 'Minimum number of proteins in a BGC (default:
                          1)'
                        args: !SimpleFlagArg
                          name: MIN_PROTEINS
                      - !Flag
                        optional: true
                        synonyms:
                        - --min-domains
                        description: 'Minimum number of protein domains in a BGC (default:
                          1)'
                        args: !SimpleFlagArg
                          name: MIN_DOMAINS
                      - !Flag
                        optional: true
                        synonyms:
                        - --min-bio-domains
                        description: 'Minimum number of known biosynthetic (as defined
                          by antiSMASH) protein domains in a BGC (default: 0)'
                        args: !SimpleFlagArg
                          name: MIN_BIO_DOMAINS
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        - --classifier
                        description: Trained classification model name (run "deepbgc
                          download" to download models) or path to trained model pickle
                          file. Can be provided multiple times (-c first -c second)
                        args: !SimpleFlagArg
                          name: CLASSIFIERS
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-classifier
                        description: Disable BGC classification
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --classifier-score
                        description: "DeepBGC classification score threshold for assigning\
                          \ classes to BGCs (default: 0.5)\n"
                        args: !SimpleFlagArg
                          name: CLASSIFIER_SCORE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n\
                        \                        [--limit-to-record LIMIT_TO_RECORD]\
                        \ [--minimal-output]\n                        [--prodigal-meta-mode]\
                        \ [--protein] [-d DETECTORS]\n                        [--no-detector]\
                        \ [-l LABELS] [-s SCORE]\n                        [--merge-max-protein-gap\
                        \ MERGE_MAX_PROTEIN_GAP]\n                        [--merge-max-nucl-gap\
                        \ MERGE_MAX_NUCL_GAP]\n                        [--min-nucl\
                        \ MIN_NUCL] [--min-proteins MIN_PROTEINS]\n              \
                        \          [--min-domains MIN_DOMAINS]\n                 \
                        \       [--min-bio-domains MIN_BIO_DOMAINS] [-c CLASSIFIERS]\n\
                        \                        [--no-classifier]\n             \
                        \           [--classifier-score CLASSIFIER_SCORE]\n      \
                        \                  inputs [inputs ...]\n\nRun DeepBGC pipeline:\
                        \ Preparation, BGC detection, BGC classification and generate\
                        \ the report directory.\n    \nExamples:\n    \n  # Show detailed\
                        \ help \n  deepbgc pipeline --help \n    \n  # Detect BGCs\
                        \ in a nucleotide FASTA sequence using DeepBGC model \n  deepbgc\
                        \ pipeline sequence.fa\n  \n  # Detect BGCs using the ClusterFinder\
                        \ GeneBorder detection model and a higher score threshold\n\
                        \  deepbgc pipeline --detector clusterfinder_geneborder --score\
                        \ 0.8 sequence.fa\n  \n  # Add additional clusters detected\
                        \ using DeepBGC model with a strict score threshold\n  deepbgc\
                        \ pipeline --continue --output sequence/ --label deepbgc_90_score\
                        \ --score 0.9 sequence/sequence.full.gbk\n  \n\npositional\
                        \ arguments:\n  inputs                Input sequence file\
                        \ path (FASTA, GenBank, Pfam CSV)\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  --debug\n  -o OUTPUT, --output OUTPUT\n               \
                        \         Custom output directory path\n  --limit-to-record\
                        \ LIMIT_TO_RECORD\n                        Process only specific\
                        \ record ID. Can be provided multiple times\n  --minimal-output\
                        \      Produce minimal output with just the GenBank sequence\
                        \ file\n  --prodigal-meta-mode  Run Prodigal in '-p meta'\
                        \ mode to enable detecting genes in short contigs\n  --protein\
                        \             Accept amino-acid protein sequences as input\
                        \ (experimental). Will treat each file as a single record\
                        \ with multiple proteins.\n\nBGC detection options:\n\n  -d\
                        \ DETECTORS, --detector DETECTORS\n                      \
                        \  Trained detection model name (run \"deepbgc download\"\
                        \ to download models) or path to trained model pickle file.\
                        \ Can be provided multiple times (-d first -d second)\n  --no-detector\
                        \         Disable BGC detection\n  -l LABELS, --label LABELS\n\
                        \                        Label for detected clusters (equal\
                        \ to --detector by default). If multiple detectors are provided,\
                        \ a label should be provided for each one\n  -s SCORE, --score\
                        \ SCORE\n                        Average protein-wise DeepBGC\
                        \ score threshold for extracting BGC regions from Pfam sequences\
                        \ (default: 0.5)\n  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n\
                        \                        Merge detected BGCs within given\
                        \ number of proteins (default: 0)\n  --merge-max-nucl-gap\
                        \ MERGE_MAX_NUCL_GAP\n                        Merge detected\
                        \ BGCs within given number of nucleotides (default: 0)\n \
                        \ --min-nucl MIN_NUCL   Minimum BGC nucleotide length (default:\
                        \ 1)\n  --min-proteins MIN_PROTEINS\n                    \
                        \    Minimum number of proteins in a BGC (default: 1)\n  --min-domains\
                        \ MIN_DOMAINS\n                        Minimum number of protein\
                        \ domains in a BGC (default: 1)\n  --min-bio-domains MIN_BIO_DOMAINS\n\
                        \                        Minimum number of known biosynthetic\
                        \ (as defined by antiSMASH) protein domains in a BGC (default:\
                        \ 0)\n\nBGC classification options:\n\n  -c CLASSIFIERS, --classifier\
                        \ CLASSIFIERS\n                        Trained classification\
                        \ model name (run \"deepbgc download\" to download models)\
                        \ or path to trained model pickle file. Can be provided multiple\
                        \ times (-c first -c second)\n  --no-classifier       Disable\
                        \ BGC classification\n  --classifier-score CLASSIFIER_SCORE\n\
                        \                        DeepBGC classification score threshold\
                        \ for assigning classes to BGCs (default: 0.5)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - deepbgc
                      - prepare
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inputs
                        description: Input sequence file path(s) (FASTA/GenBank)
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --limit-to-record
                        description: Process only specific record ID. Can be provided
                          multiple times
                        args: !SimpleFlagArg
                          name: LIMIT_TO_RECORD
                      - !Flag
                        optional: true
                        synonyms:
                        - --prodigal-meta-mode
                        description: Run Prodigal in '-p meta' mode to enable detecting
                          genes in short contigs
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --protein
                        description: Accept amino-acid protein sequences as input
                          (experimental). Will treat each file as a single record
                          with multiple proteins.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --output-gbk
                        description: Output GenBank file path
                        args: !SimpleFlagArg
                          name: OUTPUT_GBK
                      - !Flag
                        optional: true
                        synonyms:
                        - --output-tsv
                        description: "Output TSV file path\n"
                        args: !SimpleFlagArg
                          name: OUTPUT_TSV
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record\
                        \ LIMIT_TO_RECORD]\n                       [--prodigal-meta-mode]\
                        \ [--protein]\n                       [--output-gbk OUTPUT_GBK]\
                        \ [--output-tsv OUTPUT_TSV]\n                       inputs\
                        \ [inputs ...]\n\nPrepare genomic sequence by annotating proteins\
                        \ and Pfam domains.\n    \nExamples:\n    \n  # Show detailed\
                        \ help \n  deepbgc prepare --help \n    \n  # Detect proteins\
                        \ and pfam domains in a FASTA sequence and save the result\
                        \ as GenBank file \n  deepbgc prepare --output sequence.prepared.gbk\
                        \ sequence.fa\n  \n\npositional arguments:\n  inputs     \
                        \           Input sequence file path(s) (FASTA/GenBank)\n\n\
                        optional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  --debug\n  --limit-to-record LIMIT_TO_RECORD\n\
                        \                        Process only specific record ID.\
                        \ Can be provided multiple times\n\nrequired arguments:\n\n\
                        \  --prodigal-meta-mode  Run Prodigal in '-p meta' mode to\
                        \ enable detecting genes in short contigs\n  --protein   \
                        \          Accept amino-acid protein sequences as input (experimental).\
                        \ Will treat each file as a single record with multiple proteins.\n\
                        \  --output-gbk OUTPUT_GBK\n                        Output\
                        \ GenBank file path\n  --output-tsv OUTPUT_TSV\n         \
                        \               Output TSV file path\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - deepbgc
                      - download
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download\
                        \ trained models and other file dependencies to the DeepBGC\
                        \ downloads directory.\n    \n    By default, files are downloaded\
                        \ to: '/root/.local/share/deepbgc/data'\n    Set DEEPBGC_DOWNLOADS_DIR\
                        \ env variable to specify a different downloads directory.\"\
                        \n    \n\noptional arguments:\n  -h, --help  show this help\
                        \ message and exit\n  --debug\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic\
                      \ Gene Cluster detection and classification\n\noptional arguments:\n\
                      \  -h, --help  show this help message and exit\n\nAvailable\
                      \ Commands:\n  COMMAND     Use: deepbgc COMMAND --help for command-specific\
                      \ help\n    download  \n                  Download trained models\
                      \ and other file dependencies to the DeepBGC downloads directory.\n\
                      \                  \n                  By default, files are\
                      \ downloaded to: '/root/.local/share/deepbgc/data'\n       \
                      \           Set DEEPBGC_DOWNLOADS_DIR env variable to specify\
                      \ a different downloads directory.\"\n                  \n \
                      \   prepare   Prepare genomic sequence by annotating proteins\
                      \ and Pfam domains.\n                  \n              Examples:\n\
                      \                  \n                # Show detailed help \n\
                      \                deepbgc prepare --help \n                 \
                      \ \n                # Detect proteins and pfam domains in a\
                      \ FASTA sequence and save the result as GenBank file \n    \
                      \            deepbgc prepare --output sequence.prepared.gbk\
                      \ sequence.fa\n                \n    pipeline  Run DeepBGC pipeline:\
                      \ Preparation, BGC detection, BGC classification and generate\
                      \ the report directory.\n                  \n              Examples:\n\
                      \                  \n                # Show detailed help \n\
                      \                deepbgc pipeline --help \n                \
                      \  \n                # Detect BGCs in a nucleotide FASTA sequence\
                      \ using DeepBGC model \n                deepbgc pipeline sequence.fa\n\
                      \                \n                # Detect BGCs using the ClusterFinder\
                      \ GeneBorder detection model and a higher score threshold\n\
                      \                deepbgc pipeline --detector clusterfinder_geneborder\
                      \ --score 0.8 sequence.fa\n                \n              \
                      \  # Add additional clusters detected using DeepBGC model with\
                      \ a strict score threshold\n                deepbgc pipeline\
                      \ --continue --output sequence/ --label deepbgc_90_score --score\
                      \ 0.9 sequence/sequence.full.gbk\n                \n    train\
                      \     Train a BGC detector/classifier on a set of BGC samples.\n\
                      \                  \n              Examples:\n             \
                      \     \n                # Train a detector using pre-processed\
                      \ samples in Pfam CSV format. \n                deepbgc train\
                      \ --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv\
                      \ negatives.pfam.tsv\n                  \n                #\
                      \ Train a BGC classifier using a TSV classes file and a set\
                      \ of BGC samples in Pfam TSV format and save the trained classifier\
                      \ to a file. \n                deepbgc train --model random_forest.json\
                      \ --output MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv\
                      \ BGCs.pfam.tsv\n                \n    info      Show DeepBGC\
                      \ summary information about downloaded models and dependencies.\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n--debug\n"
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC summary\
                    \ information about downloaded models and dependencies.\n\noptional\
                    \ arguments:\n  -h, --help  show this help message and exit\n\
                    \  --debug\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inputs
                    description: Training sequences (Pfam TSV) file paths
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    description: ''
                    args: !SimpleFlagArg
                      name: LOG
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ''
                    args: !SimpleFlagArg
                      name: OUTPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: ''
                    args: !SimpleFlagArg
                      name: TARGET
                  - !Flag
                    optional: true
                    synonyms:
                    - -m
                    description: ''
                    args: !SimpleFlagArg
                      name: MODEL
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n--debug\n-m MODEL,\
                      \ --model MODEL\nPath to JSON model config file\n-t TARGET,\
                      \ --target TARGET\nTarget column to predict in sequence prediction\n\
                      -o OUTPUT, --output OUTPUT\nOutput trained model file path\n\
                      -l LOG, --log LOG     Progress log output path (e.g. TensorBoard)\n\
                      -c CLASSES, --classes CLASSES\nClass TSV file path - train a\
                      \ sequence classifier using provided classes (binary columns),\
                      \ indexed by sequence_id column\n--config CONFIG CONFIG\nVariables\
                      \ in model JSON file to replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n\
                      -v VALIDATION, --validation VALIDATION\nValidation sequence\
                      \ file path. Repeat to specify multiple files\n--verbose INT\
                      \         Verbosity level: 0=none, 1=progress bar, 2=once per\
                      \ epoch (default: 2)\n"
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t TARGET]\
                    \ -o OUTPUT [-l LOG]\n                     [-c CLASSES] [--config\
                    \ CONFIG CONFIG] [-v VALIDATION]\n                     [--verbose\
                    \ INT]\n                     inputs [inputs ...]\n\nTrain a BGC\
                    \ detector/classifier on a set of BGC samples.\n    \nExamples:\n\
                    \    \n  # Train a detector using pre-processed samples in Pfam\
                    \ CSV format. \n  deepbgc train --model deepbgc.json --output\
                    \ MyDeepBGCDetector.pkl BGCs.pfam.tsv negatives.pfam.tsv\n   \
                    \ \n  # Train a BGC classifier using a TSV classes file and a\
                    \ set of BGC samples in Pfam TSV format and save the trained classifier\
                    \ to a file. \n  deepbgc train --model random_forest.json --output\
                    \ MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n\
                    \  \n\npositional arguments:\n  inputs                Training\
                    \ sequences (Pfam TSV) file paths\n\noptional arguments:\n  -h,\
                    \ --help            show this help message and exit\n  --debug\n\
                    \  -m MODEL, --model MODEL\n                        Path to JSON\
                    \ model config file\n  -t TARGET, --target TARGET\n          \
                    \              Target column to predict in sequence prediction\n\
                    \  -o OUTPUT, --output OUTPUT\n                        Output\
                    \ trained model file path\n  -l LOG, --log LOG     Progress log\
                    \ output path (e.g. TensorBoard)\n  -c CLASSES, --classes CLASSES\n\
                    \                        Class TSV file path - train a sequence\
                    \ classifier using provided classes (binary columns), indexed\
                    \ by sequence_id column\n  --config CONFIG CONFIG\n          \
                    \              Variables in model JSON file to replace (e.g. --config\
                    \ PFAM2VEC path/to/pfam2vec.csv)\n  -v VALIDATION, --validation\
                    \ VALIDATION\n                        Validation sequence file\
                    \ path. Repeat to specify multiple files\n  --verbose INT    \
                    \     Verbosity level: 0=none, 1=progress bar, 2=once per epoch\
                    \ (default: 2)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inputs
                    description: Input sequence file path (FASTA, GenBank, Pfam CSV)
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --detector
                    description: Trained detection model name (run "deepbgc download"
                      to download models) or path to trained model pickle file. Can
                      be provided multiple times (-d first -d second)
                    args: !SimpleFlagArg
                      name: DETECTORS
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-detector
                    description: Disable BGC detection
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    - --label
                    description: Label for detected clusters (equal to --detector
                      by default). If multiple detectors are provided, a label should
                      be provided for each one
                    args: !SimpleFlagArg
                      name: LABELS
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --score
                    description: 'Average protein-wise DeepBGC score threshold for
                      extracting BGC regions from Pfam sequences (default: 0.5)'
                    args: !SimpleFlagArg
                      name: SCORE
                  - !Flag
                    optional: true
                    synonyms:
                    - --merge-max-protein-gap
                    description: 'Merge detected BGCs within given number of proteins
                      (default: 0)'
                    args: !SimpleFlagArg
                      name: MERGE_MAX_PROTEIN_GAP
                  - !Flag
                    optional: true
                    synonyms:
                    - --merge-max-nucl-gap
                    description: 'Merge detected BGCs within given number of nucleotides
                      (default: 0)'
                    args: !SimpleFlagArg
                      name: MERGE_MAX_NUCL_GAP
                  - !Flag
                    optional: true
                    synonyms:
                    - --min-nucl
                    description: 'Minimum BGC nucleotide length (default: 1)'
                    args: !SimpleFlagArg
                      name: MIN_NUCL
                  - !Flag
                    optional: true
                    synonyms:
                    - --min-proteins
                    description: 'Minimum number of proteins in a BGC (default: 1)'
                    args: !SimpleFlagArg
                      name: MIN_PROTEINS
                  - !Flag
                    optional: true
                    synonyms:
                    - --min-domains
                    description: 'Minimum number of protein domains in a BGC (default:
                      1)'
                    args: !SimpleFlagArg
                      name: MIN_DOMAINS
                  - !Flag
                    optional: true
                    synonyms:
                    - --min-bio-domains
                    description: 'Minimum number of known biosynthetic (as defined
                      by antiSMASH) protein domains in a BGC (default: 0)'
                    args: !SimpleFlagArg
                      name: MIN_BIO_DOMAINS
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    - --classifier
                    description: Trained classification model name (run "deepbgc download"
                      to download models) or path to trained model pickle file. Can
                      be provided multiple times (-c first -c second)
                    args: !SimpleFlagArg
                      name: CLASSIFIERS
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-classifier
                    description: Disable BGC classification
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --classifier-score
                    description: "DeepBGC classification score threshold for assigning\
                      \ classes to BGCs (default: 0.5)\n"
                    args: !SimpleFlagArg
                      name: CLASSIFIER_SCORE
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ''
                    args: !SimpleFlagArg
                      name: OUTPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n--debug\n-o OUTPUT,\
                      \ --output OUTPUT\nCustom output directory path\n--limit-to-record\
                      \ LIMIT_TO_RECORD\nProcess only specific record ID. Can be provided\
                      \ multiple times\n--minimal-output      Produce minimal output\
                      \ with just the GenBank sequence file\n--prodigal-meta-mode\
                      \  Run Prodigal in '-p meta' mode to enable detecting genes\
                      \ in short contigs\n--protein             Accept amino-acid\
                      \ protein sequences as input (experimental). Will treat each\
                      \ file as a single record with multiple proteins."
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n\
                    \                        [--limit-to-record LIMIT_TO_RECORD] [--minimal-output]\n\
                    \                        [--prodigal-meta-mode] [--protein] [-d\
                    \ DETECTORS]\n                        [--no-detector] [-l LABELS]\
                    \ [-s SCORE]\n                        [--merge-max-protein-gap\
                    \ MERGE_MAX_PROTEIN_GAP]\n                        [--merge-max-nucl-gap\
                    \ MERGE_MAX_NUCL_GAP]\n                        [--min-nucl MIN_NUCL]\
                    \ [--min-proteins MIN_PROTEINS]\n                        [--min-domains\
                    \ MIN_DOMAINS]\n                        [--min-bio-domains MIN_BIO_DOMAINS]\
                    \ [-c CLASSIFIERS]\n                        [--no-classifier]\n\
                    \                        [--classifier-score CLASSIFIER_SCORE]\n\
                    \                        inputs [inputs ...]\n\nRun DeepBGC pipeline:\
                    \ Preparation, BGC detection, BGC classification and generate\
                    \ the report directory.\n    \nExamples:\n    \n  # Show detailed\
                    \ help \n  deepbgc pipeline --help \n    \n  # Detect BGCs in\
                    \ a nucleotide FASTA sequence using DeepBGC model \n  deepbgc\
                    \ pipeline sequence.fa\n  \n  # Detect BGCs using the ClusterFinder\
                    \ GeneBorder detection model and a higher score threshold\n  deepbgc\
                    \ pipeline --detector clusterfinder_geneborder --score 0.8 sequence.fa\n\
                    \  \n  # Add additional clusters detected using DeepBGC model\
                    \ with a strict score threshold\n  deepbgc pipeline --continue\
                    \ --output sequence/ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n\
                    \  \n\npositional arguments:\n  inputs                Input sequence\
                    \ file path (FASTA, GenBank, Pfam CSV)\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  --debug\n\
                    \  -o OUTPUT, --output OUTPUT\n                        Custom\
                    \ output directory path\n  --limit-to-record LIMIT_TO_RECORD\n\
                    \                        Process only specific record ID. Can\
                    \ be provided multiple times\n  --minimal-output      Produce\
                    \ minimal output with just the GenBank sequence file\n  --prodigal-meta-mode\
                    \  Run Prodigal in '-p meta' mode to enable detecting genes in\
                    \ short contigs\n  --protein             Accept amino-acid protein\
                    \ sequences as input (experimental). Will treat each file as a\
                    \ single record with multiple proteins.\n\nBGC detection options:\n\
                    \n  -d DETECTORS, --detector DETECTORS\n                     \
                    \   Trained detection model name (run \"deepbgc download\" to\
                    \ download models) or path to trained model pickle file. Can be\
                    \ provided multiple times (-d first -d second)\n  --no-detector\
                    \         Disable BGC detection\n  -l LABELS, --label LABELS\n\
                    \                        Label for detected clusters (equal to\
                    \ --detector by default). If multiple detectors are provided,\
                    \ a label should be provided for each one\n  -s SCORE, --score\
                    \ SCORE\n                        Average protein-wise DeepBGC\
                    \ score threshold for extracting BGC regions from Pfam sequences\
                    \ (default: 0.5)\n  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n\
                    \                        Merge detected BGCs within given number\
                    \ of proteins (default: 0)\n  --merge-max-nucl-gap MERGE_MAX_NUCL_GAP\n\
                    \                        Merge detected BGCs within given number\
                    \ of nucleotides (default: 0)\n  --min-nucl MIN_NUCL   Minimum\
                    \ BGC nucleotide length (default: 1)\n  --min-proteins MIN_PROTEINS\n\
                    \                        Minimum number of proteins in a BGC (default:\
                    \ 1)\n  --min-domains MIN_DOMAINS\n                        Minimum\
                    \ number of protein domains in a BGC (default: 1)\n  --min-bio-domains\
                    \ MIN_BIO_DOMAINS\n                        Minimum number of known\
                    \ biosynthetic (as defined by antiSMASH) protein domains in a\
                    \ BGC (default: 0)\n\nBGC classification options:\n\n  -c CLASSIFIERS,\
                    \ --classifier CLASSIFIERS\n                        Trained classification\
                    \ model name (run \"deepbgc download\" to download models) or\
                    \ path to trained model pickle file. Can be provided multiple\
                    \ times (-c first -c second)\n  --no-classifier       Disable\
                    \ BGC classification\n  --classifier-score CLASSIFIER_SCORE\n\
                    \                        DeepBGC classification score threshold\
                    \ for assigning classes to BGCs (default: 0.5)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inputs
                    description: Input sequence file path(s) (FASTA/GenBank)
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --prodigal-meta-mode
                    description: Run Prodigal in '-p meta' mode to enable detecting
                      genes in short contigs
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --protein
                    description: Accept amino-acid protein sequences as input (experimental).
                      Will treat each file as a single record with multiple proteins.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --output-gbk
                    description: Output GenBank file path
                    args: !SimpleFlagArg
                      name: OUTPUT_GBK
                  - !Flag
                    optional: true
                    synonyms:
                    - --output-tsv
                    description: "Output TSV file path\n"
                    args: !SimpleFlagArg
                      name: OUTPUT_TSV
                  - !Flag
                    optional: true
                    synonyms:
                    - --limit-to-record
                    description: ''
                    args: !SimpleFlagArg
                      name: LIMIT_TO_RECORD
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n--debug\n--limit-to-record\
                      \ LIMIT_TO_RECORD\nProcess only specific record ID. Can be provided\
                      \ multiple times"
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record\
                    \ LIMIT_TO_RECORD]\n                       [--prodigal-meta-mode]\
                    \ [--protein]\n                       [--output-gbk OUTPUT_GBK]\
                    \ [--output-tsv OUTPUT_TSV]\n                       inputs [inputs\
                    \ ...]\n\nPrepare genomic sequence by annotating proteins and\
                    \ Pfam domains.\n    \nExamples:\n    \n  # Show detailed help\
                    \ \n  deepbgc prepare --help \n    \n  # Detect proteins and pfam\
                    \ domains in a FASTA sequence and save the result as GenBank file\
                    \ \n  deepbgc prepare --output sequence.prepared.gbk sequence.fa\n\
                    \  \n\npositional arguments:\n  inputs                Input sequence\
                    \ file path(s) (FASTA/GenBank)\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  --debug\n  --limit-to-record\
                    \ LIMIT_TO_RECORD\n                        Process only specific\
                    \ record ID. Can be provided multiple times\n\nrequired arguments:\n\
                    \n  --prodigal-meta-mode  Run Prodigal in '-p meta' mode to enable\
                    \ detecting genes in short contigs\n  --protein             Accept\
                    \ amino-acid protein sequences as input (experimental). Will treat\
                    \ each file as a single record with multiple proteins.\n  --output-gbk\
                    \ OUTPUT_GBK\n                        Output GenBank file path\n\
                    \  --output-tsv OUTPUT_TSV\n                        Output TSV\
                    \ file path\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n--debug\n"
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download\
                    \ trained models and other file dependencies to the DeepBGC downloads\
                    \ directory.\n    \n    By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
                    \    Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different\
                    \ downloads directory.\"\n    \n\noptional arguments:\n  -h, --help\
                    \  show this help message and exit\n  --debug\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic\
                  \ Gene Cluster detection and classification\n\noptional arguments:\n\
                  \  -h, --help  show this help message and exit\n\nAvailable Commands:\n\
                  \  COMMAND     Use: deepbgc COMMAND --help for command-specific\
                  \ help\n    download  \n                  Download trained models\
                  \ and other file dependencies to the DeepBGC downloads directory.\n\
                  \                  \n                  By default, files are downloaded\
                  \ to: '/root/.local/share/deepbgc/data'\n                  Set DEEPBGC_DOWNLOADS_DIR\
                  \ env variable to specify a different downloads directory.\"\n \
                  \                 \n    prepare   Prepare genomic sequence by annotating\
                  \ proteins and Pfam domains.\n                  \n             \
                  \ Examples:\n                  \n                # Show detailed\
                  \ help \n                deepbgc prepare --help \n             \
                  \     \n                # Detect proteins and pfam domains in a\
                  \ FASTA sequence and save the result as GenBank file \n        \
                  \        deepbgc prepare --output sequence.prepared.gbk sequence.fa\n\
                  \                \n    pipeline  Run DeepBGC pipeline: Preparation,\
                  \ BGC detection, BGC classification and generate the report directory.\n\
                  \                  \n              Examples:\n                 \
                  \ \n                # Show detailed help \n                deepbgc\
                  \ pipeline --help \n                  \n                # Detect\
                  \ BGCs in a nucleotide FASTA sequence using DeepBGC model \n   \
                  \             deepbgc pipeline sequence.fa\n                \n \
                  \               # Detect BGCs using the ClusterFinder GeneBorder\
                  \ detection model and a higher score threshold\n               \
                  \ deepbgc pipeline --detector clusterfinder_geneborder --score 0.8\
                  \ sequence.fa\n                \n                # Add additional\
                  \ clusters detected using DeepBGC model with a strict score threshold\n\
                  \                deepbgc pipeline --continue --output sequence/\
                  \ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n\
                  \                \n    train     Train a BGC detector/classifier\
                  \ on a set of BGC samples.\n                  \n              Examples:\n\
                  \                  \n                # Train a detector using pre-processed\
                  \ samples in Pfam CSV format. \n                deepbgc train --model\
                  \ deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv negatives.pfam.tsv\n\
                  \                  \n                # Train a BGC classifier using\
                  \ a TSV classes file and a set of BGC samples in Pfam TSV format\
                  \ and save the trained classifier to a file. \n                deepbgc\
                  \ train --model random_forest.json --output MyDeepBGCClassifier.pkl\
                  \ --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n           \
                  \     \n    info      Show DeepBGC summary information about downloaded\
                  \ models and dependencies.\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n--debug\n"
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC summary\
                \ information about downloaded models and dependencies.\n\noptional\
                \ arguments:\n  -h, --help  show this help message and exit\n  --debug\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: inputs
                description: Training sequences (Pfam TSV) file paths
              named:
              - !Flag
                optional: true
                synonyms:
                - -l
                description: ''
                args: !SimpleFlagArg
                  name: LOG
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ''
                args: !SimpleFlagArg
                  name: OUTPUT
              - !Flag
                optional: true
                synonyms:
                - -t
                description: ''
                args: !SimpleFlagArg
                  name: TARGET
              - !Flag
                optional: true
                synonyms:
                - -m
                description: ''
                args: !SimpleFlagArg
                  name: MODEL
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: *id009
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n--debug\n-m MODEL,\
                  \ --model MODEL\nPath to JSON model config file\n-t TARGET, --target\
                  \ TARGET\nTarget column to predict in sequence prediction\n-o OUTPUT,\
                  \ --output OUTPUT\nOutput trained model file path\n-l LOG, --log\
                  \ LOG     Progress log output path (e.g. TensorBoard)\n-c CLASSES,\
                  \ --classes CLASSES\nClass TSV file path - train a sequence classifier\
                  \ using provided classes (binary columns), indexed by sequence_id\
                  \ column\n--config CONFIG CONFIG\nVariables in model JSON file to\
                  \ replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n-v VALIDATION,\
                  \ --validation VALIDATION\nValidation sequence file path. Repeat\
                  \ to specify multiple files\n--verbose INT         Verbosity level:\
                  \ 0=none, 1=progress bar, 2=once per epoch (default: 2)\n"
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t TARGET]\
                \ -o OUTPUT [-l LOG]\n                     [-c CLASSES] [--config\
                \ CONFIG CONFIG] [-v VALIDATION]\n                     [--verbose\
                \ INT]\n                     inputs [inputs ...]\n\nTrain a BGC detector/classifier\
                \ on a set of BGC samples.\n    \nExamples:\n    \n  # Train a detector\
                \ using pre-processed samples in Pfam CSV format. \n  deepbgc train\
                \ --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv\
                \ negatives.pfam.tsv\n    \n  # Train a BGC classifier using a TSV\
                \ classes file and a set of BGC samples in Pfam TSV format and save\
                \ the trained classifier to a file. \n  deepbgc train --model random_forest.json\
                \ --output MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv\
                \ BGCs.pfam.tsv\n  \n\npositional arguments:\n  inputs           \
                \     Training sequences (Pfam TSV) file paths\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  --debug\n\
                \  -m MODEL, --model MODEL\n                        Path to JSON model\
                \ config file\n  -t TARGET, --target TARGET\n                    \
                \    Target column to predict in sequence prediction\n  -o OUTPUT,\
                \ --output OUTPUT\n                        Output trained model file\
                \ path\n  -l LOG, --log LOG     Progress log output path (e.g. TensorBoard)\n\
                \  -c CLASSES, --classes CLASSES\n                        Class TSV\
                \ file path - train a sequence classifier using provided classes (binary\
                \ columns), indexed by sequence_id column\n  --config CONFIG CONFIG\n\
                \                        Variables in model JSON file to replace (e.g.\
                \ --config PFAM2VEC path/to/pfam2vec.csv)\n  -v VALIDATION, --validation\
                \ VALIDATION\n                        Validation sequence file path.\
                \ Repeat to specify multiple files\n  --verbose INT         Verbosity\
                \ level: 0=none, 1=progress bar, 2=once per epoch (default: 2)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: inputs
                description: Input sequence file path (FASTA, GenBank, Pfam CSV)
              named:
              - !Flag
                optional: true
                synonyms:
                - -d
                - --detector
                description: Trained detection model name (run "deepbgc download"
                  to download models) or path to trained model pickle file. Can be
                  provided multiple times (-d first -d second)
                args: !SimpleFlagArg
                  name: DETECTORS
              - !Flag
                optional: true
                synonyms:
                - --no-detector
                description: Disable BGC detection
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -l
                - --label
                description: Label for detected clusters (equal to --detector by default).
                  If multiple detectors are provided, a label should be provided for
                  each one
                args: !SimpleFlagArg
                  name: LABELS
              - !Flag
                optional: true
                synonyms:
                - -s
                - --score
                description: 'Average protein-wise DeepBGC score threshold for extracting
                  BGC regions from Pfam sequences (default: 0.5)'
                args: !SimpleFlagArg
                  name: SCORE
              - !Flag
                optional: true
                synonyms:
                - --merge-max-protein-gap
                description: 'Merge detected BGCs within given number of proteins
                  (default: 0)'
                args: !SimpleFlagArg
                  name: MERGE_MAX_PROTEIN_GAP
              - !Flag
                optional: true
                synonyms:
                - --merge-max-nucl-gap
                description: 'Merge detected BGCs within given number of nucleotides
                  (default: 0)'
                args: !SimpleFlagArg
                  name: MERGE_MAX_NUCL_GAP
              - !Flag
                optional: true
                synonyms:
                - --min-nucl
                description: 'Minimum BGC nucleotide length (default: 1)'
                args: !SimpleFlagArg
                  name: MIN_NUCL
              - !Flag
                optional: true
                synonyms:
                - --min-proteins
                description: 'Minimum number of proteins in a BGC (default: 1)'
                args: !SimpleFlagArg
                  name: MIN_PROTEINS
              - !Flag
                optional: true
                synonyms:
                - --min-domains
                description: 'Minimum number of protein domains in a BGC (default:
                  1)'
                args: !SimpleFlagArg
                  name: MIN_DOMAINS
              - !Flag
                optional: true
                synonyms:
                - --min-bio-domains
                description: 'Minimum number of known biosynthetic (as defined by
                  antiSMASH) protein domains in a BGC (default: 0)'
                args: !SimpleFlagArg
                  name: MIN_BIO_DOMAINS
              - !Flag
                optional: true
                synonyms:
                - -c
                - --classifier
                description: Trained classification model name (run "deepbgc download"
                  to download models) or path to trained model pickle file. Can be
                  provided multiple times (-c first -c second)
                args: !SimpleFlagArg
                  name: CLASSIFIERS
              - !Flag
                optional: true
                synonyms:
                - --no-classifier
                description: Disable BGC classification
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --classifier-score
                description: "DeepBGC classification score threshold for assigning\
                  \ classes to BGCs (default: 0.5)\n"
                args: !SimpleFlagArg
                  name: CLASSIFIER_SCORE
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ''
                args: !SimpleFlagArg
                  name: OUTPUT
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: *id009
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n--debug\n-o OUTPUT,\
                  \ --output OUTPUT\nCustom output directory path\n--limit-to-record\
                  \ LIMIT_TO_RECORD\nProcess only specific record ID. Can be provided\
                  \ multiple times\n--minimal-output      Produce minimal output with\
                  \ just the GenBank sequence file\n--prodigal-meta-mode  Run Prodigal\
                  \ in '-p meta' mode to enable detecting genes in short contigs\n\
                  --protein             Accept amino-acid protein sequences as input\
                  \ (experimental). Will treat each file as a single record with multiple\
                  \ proteins."
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n   \
                \                     [--limit-to-record LIMIT_TO_RECORD] [--minimal-output]\n\
                \                        [--prodigal-meta-mode] [--protein] [-d DETECTORS]\n\
                \                        [--no-detector] [-l LABELS] [-s SCORE]\n\
                \                        [--merge-max-protein-gap MERGE_MAX_PROTEIN_GAP]\n\
                \                        [--merge-max-nucl-gap MERGE_MAX_NUCL_GAP]\n\
                \                        [--min-nucl MIN_NUCL] [--min-proteins MIN_PROTEINS]\n\
                \                        [--min-domains MIN_DOMAINS]\n           \
                \             [--min-bio-domains MIN_BIO_DOMAINS] [-c CLASSIFIERS]\n\
                \                        [--no-classifier]\n                     \
                \   [--classifier-score CLASSIFIER_SCORE]\n                      \
                \  inputs [inputs ...]\n\nRun DeepBGC pipeline: Preparation, BGC detection,\
                \ BGC classification and generate the report directory.\n    \nExamples:\n\
                \    \n  # Show detailed help \n  deepbgc pipeline --help \n    \n\
                \  # Detect BGCs in a nucleotide FASTA sequence using DeepBGC model\
                \ \n  deepbgc pipeline sequence.fa\n  \n  # Detect BGCs using the\
                \ ClusterFinder GeneBorder detection model and a higher score threshold\n\
                \  deepbgc pipeline --detector clusterfinder_geneborder --score 0.8\
                \ sequence.fa\n  \n  # Add additional clusters detected using DeepBGC\
                \ model with a strict score threshold\n  deepbgc pipeline --continue\
                \ --output sequence/ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n\
                \  \n\npositional arguments:\n  inputs                Input sequence\
                \ file path (FASTA, GenBank, Pfam CSV)\n\noptional arguments:\n  -h,\
                \ --help            show this help message and exit\n  --debug\n \
                \ -o OUTPUT, --output OUTPUT\n                        Custom output\
                \ directory path\n  --limit-to-record LIMIT_TO_RECORD\n          \
                \              Process only specific record ID. Can be provided multiple\
                \ times\n  --minimal-output      Produce minimal output with just\
                \ the GenBank sequence file\n  --prodigal-meta-mode  Run Prodigal\
                \ in '-p meta' mode to enable detecting genes in short contigs\n \
                \ --protein             Accept amino-acid protein sequences as input\
                \ (experimental). Will treat each file as a single record with multiple\
                \ proteins.\n\nBGC detection options:\n\n  -d DETECTORS, --detector\
                \ DETECTORS\n                        Trained detection model name\
                \ (run \"deepbgc download\" to download models) or path to trained\
                \ model pickle file. Can be provided multiple times (-d first -d second)\n\
                \  --no-detector         Disable BGC detection\n  -l LABELS, --label\
                \ LABELS\n                        Label for detected clusters (equal\
                \ to --detector by default). If multiple detectors are provided, a\
                \ label should be provided for each one\n  -s SCORE, --score SCORE\n\
                \                        Average protein-wise DeepBGC score threshold\
                \ for extracting BGC regions from Pfam sequences (default: 0.5)\n\
                \  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n               \
                \         Merge detected BGCs within given number of proteins (default:\
                \ 0)\n  --merge-max-nucl-gap MERGE_MAX_NUCL_GAP\n                \
                \        Merge detected BGCs within given number of nucleotides (default:\
                \ 0)\n  --min-nucl MIN_NUCL   Minimum BGC nucleotide length (default:\
                \ 1)\n  --min-proteins MIN_PROTEINS\n                        Minimum\
                \ number of proteins in a BGC (default: 1)\n  --min-domains MIN_DOMAINS\n\
                \                        Minimum number of protein domains in a BGC\
                \ (default: 1)\n  --min-bio-domains MIN_BIO_DOMAINS\n            \
                \            Minimum number of known biosynthetic (as defined by antiSMASH)\
                \ protein domains in a BGC (default: 0)\n\nBGC classification options:\n\
                \n  -c CLASSIFIERS, --classifier CLASSIFIERS\n                   \
                \     Trained classification model name (run \"deepbgc download\"\
                \ to download models) or path to trained model pickle file. Can be\
                \ provided multiple times (-c first -c second)\n  --no-classifier\
                \       Disable BGC classification\n  --classifier-score CLASSIFIER_SCORE\n\
                \                        DeepBGC classification score threshold for\
                \ assigning classes to BGCs (default: 0.5)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: inputs
                description: Input sequence file path(s) (FASTA/GenBank)
              named:
              - !Flag
                optional: true
                synonyms:
                - --prodigal-meta-mode
                description: Run Prodigal in '-p meta' mode to enable detecting genes
                  in short contigs
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --protein
                description: Accept amino-acid protein sequences as input (experimental).
                  Will treat each file as a single record with multiple proteins.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --output-gbk
                description: Output GenBank file path
                args: !SimpleFlagArg
                  name: OUTPUT_GBK
              - !Flag
                optional: true
                synonyms:
                - --output-tsv
                description: "Output TSV file path\n"
                args: !SimpleFlagArg
                  name: OUTPUT_TSV
              - !Flag
                optional: true
                synonyms:
                - --limit-to-record
                description: ''
                args: !SimpleFlagArg
                  name: LIMIT_TO_RECORD
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: *id009
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n--debug\n--limit-to-record\
                  \ LIMIT_TO_RECORD\nProcess only specific record ID. Can be provided\
                  \ multiple times"
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record\
                \ LIMIT_TO_RECORD]\n                       [--prodigal-meta-mode]\
                \ [--protein]\n                       [--output-gbk OUTPUT_GBK] [--output-tsv\
                \ OUTPUT_TSV]\n                       inputs [inputs ...]\n\nPrepare\
                \ genomic sequence by annotating proteins and Pfam domains.\n    \n\
                Examples:\n    \n  # Show detailed help \n  deepbgc prepare --help\
                \ \n    \n  # Detect proteins and pfam domains in a FASTA sequence\
                \ and save the result as GenBank file \n  deepbgc prepare --output\
                \ sequence.prepared.gbk sequence.fa\n  \n\npositional arguments:\n\
                \  inputs                Input sequence file path(s) (FASTA/GenBank)\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --debug\n  --limit-to-record LIMIT_TO_RECORD\n     \
                \                   Process only specific record ID. Can be provided\
                \ multiple times\n\nrequired arguments:\n\n  --prodigal-meta-mode\
                \  Run Prodigal in '-p meta' mode to enable detecting genes in short\
                \ contigs\n  --protein             Accept amino-acid protein sequences\
                \ as input (experimental). Will treat each file as a single record\
                \ with multiple proteins.\n  --output-gbk OUTPUT_GBK\n           \
                \             Output GenBank file path\n  --output-tsv OUTPUT_TSV\n\
                \                        Output TSV file path\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: *id009
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n--debug\n"
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download trained\
                \ models and other file dependencies to the DeepBGC downloads directory.\n\
                \    \n    By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
                \    Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different\
                \ downloads directory.\"\n    \n\noptional arguments:\n  -h, --help\
                \  show this help message and exit\n  --debug\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic\
              \ Gene Cluster detection and classification\n\noptional arguments:\n\
              \  -h, --help  show this help message and exit\n\nAvailable Commands:\n\
              \  COMMAND     Use: deepbgc COMMAND --help for command-specific help\n\
              \    download  \n                  Download trained models and other\
              \ file dependencies to the DeepBGC downloads directory.\n          \
              \        \n                  By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
              \                  Set DEEPBGC_DOWNLOADS_DIR env variable to specify\
              \ a different downloads directory.\"\n                  \n    prepare\
              \   Prepare genomic sequence by annotating proteins and Pfam domains.\n\
              \                  \n              Examples:\n                  \n \
              \               # Show detailed help \n                deepbgc prepare\
              \ --help \n                  \n                # Detect proteins and\
              \ pfam domains in a FASTA sequence and save the result as GenBank file\
              \ \n                deepbgc prepare --output sequence.prepared.gbk sequence.fa\n\
              \                \n    pipeline  Run DeepBGC pipeline: Preparation,\
              \ BGC detection, BGC classification and generate the report directory.\n\
              \                  \n              Examples:\n                  \n \
              \               # Show detailed help \n                deepbgc pipeline\
              \ --help \n                  \n                # Detect BGCs in a nucleotide\
              \ FASTA sequence using DeepBGC model \n                deepbgc pipeline\
              \ sequence.fa\n                \n                # Detect BGCs using\
              \ the ClusterFinder GeneBorder detection model and a higher score threshold\n\
              \                deepbgc pipeline --detector clusterfinder_geneborder\
              \ --score 0.8 sequence.fa\n                \n                # Add additional\
              \ clusters detected using DeepBGC model with a strict score threshold\n\
              \                deepbgc pipeline --continue --output sequence/ --label\
              \ deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n        \
              \        \n    train     Train a BGC detector/classifier on a set of\
              \ BGC samples.\n                  \n              Examples:\n      \
              \            \n                # Train a detector using pre-processed\
              \ samples in Pfam CSV format. \n                deepbgc train --model\
              \ deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv negatives.pfam.tsv\n\
              \                  \n                # Train a BGC classifier using\
              \ a TSV classes file and a set of BGC samples in Pfam TSV format and\
              \ save the trained classifier to a file. \n                deepbgc train\
              \ --model random_forest.json --output MyDeepBGCClassifier.pkl --classes\
              \ path/to/BGCs.classes.csv BGCs.pfam.tsv\n                \n    info\
              \      Show DeepBGC summary information about downloaded models and\
              \ dependencies.\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n--debug\n"
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC summary information\
            \ about downloaded models and dependencies.\n\noptional arguments:\n \
            \ -h, --help  show this help message and exit\n  --debug\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: inputs
            description: Training sequences (Pfam TSV) file paths
          named:
          - !Flag
            optional: true
            synonyms:
            - -l
            description: ''
            args: !SimpleFlagArg
              name: LOG
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ''
            args: !SimpleFlagArg
              name: OUTPUT
          - !Flag
            optional: true
            synonyms:
            - -t
            description: ''
            args: !SimpleFlagArg
              name: TARGET
          - !Flag
            optional: true
            synonyms:
            - -m
            description: ''
            args: !SimpleFlagArg
              name: MODEL
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: *id010
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n--debug\n-m MODEL, --model\
              \ MODEL\nPath to JSON model config file\n-t TARGET, --target TARGET\n\
              Target column to predict in sequence prediction\n-o OUTPUT, --output\
              \ OUTPUT\nOutput trained model file path\n-l LOG, --log LOG     Progress\
              \ log output path (e.g. TensorBoard)\n-c CLASSES, --classes CLASSES\n\
              Class TSV file path - train a sequence classifier using provided classes\
              \ (binary columns), indexed by sequence_id column\n--config CONFIG CONFIG\n\
              Variables in model JSON file to replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n\
              -v VALIDATION, --validation VALIDATION\nValidation sequence file path.\
              \ Repeat to specify multiple files\n--verbose INT         Verbosity\
              \ level: 0=none, 1=progress bar, 2=once per epoch (default: 2)\n"
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t TARGET] -o\
            \ OUTPUT [-l LOG]\n                     [-c CLASSES] [--config CONFIG\
            \ CONFIG] [-v VALIDATION]\n                     [--verbose INT]\n    \
            \                 inputs [inputs ...]\n\nTrain a BGC detector/classifier\
            \ on a set of BGC samples.\n    \nExamples:\n    \n  # Train a detector\
            \ using pre-processed samples in Pfam CSV format. \n  deepbgc train --model\
            \ deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv negatives.pfam.tsv\n\
            \    \n  # Train a BGC classifier using a TSV classes file and a set of\
            \ BGC samples in Pfam TSV format and save the trained classifier to a\
            \ file. \n  deepbgc train --model random_forest.json --output MyDeepBGCClassifier.pkl\
            \ --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n  \n\npositional arguments:\n\
            \  inputs                Training sequences (Pfam TSV) file paths\n\n\
            optional arguments:\n  -h, --help            show this help message and\
            \ exit\n  --debug\n  -m MODEL, --model MODEL\n                       \
            \ Path to JSON model config file\n  -t TARGET, --target TARGET\n     \
            \                   Target column to predict in sequence prediction\n\
            \  -o OUTPUT, --output OUTPUT\n                        Output trained\
            \ model file path\n  -l LOG, --log LOG     Progress log output path (e.g.\
            \ TensorBoard)\n  -c CLASSES, --classes CLASSES\n                    \
            \    Class TSV file path - train a sequence classifier using provided\
            \ classes (binary columns), indexed by sequence_id column\n  --config\
            \ CONFIG CONFIG\n                        Variables in model JSON file\
            \ to replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n  -v VALIDATION,\
            \ --validation VALIDATION\n                        Validation sequence\
            \ file path. Repeat to specify multiple files\n  --verbose INT       \
            \  Verbosity level: 0=none, 1=progress bar, 2=once per epoch (default:\
            \ 2)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: inputs
            description: Input sequence file path (FASTA, GenBank, Pfam CSV)
          named:
          - !Flag
            optional: true
            synonyms:
            - -d
            - --detector
            description: Trained detection model name (run "deepbgc download" to download
              models) or path to trained model pickle file. Can be provided multiple
              times (-d first -d second)
            args: !SimpleFlagArg
              name: DETECTORS
          - !Flag
            optional: true
            synonyms:
            - --no-detector
            description: Disable BGC detection
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -l
            - --label
            description: Label for detected clusters (equal to --detector by default).
              If multiple detectors are provided, a label should be provided for each
              one
            args: !SimpleFlagArg
              name: LABELS
          - !Flag
            optional: true
            synonyms:
            - -s
            - --score
            description: 'Average protein-wise DeepBGC score threshold for extracting
              BGC regions from Pfam sequences (default: 0.5)'
            args: !SimpleFlagArg
              name: SCORE
          - !Flag
            optional: true
            synonyms:
            - --merge-max-protein-gap
            description: 'Merge detected BGCs within given number of proteins (default:
              0)'
            args: !SimpleFlagArg
              name: MERGE_MAX_PROTEIN_GAP
          - !Flag
            optional: true
            synonyms:
            - --merge-max-nucl-gap
            description: 'Merge detected BGCs within given number of nucleotides (default:
              0)'
            args: !SimpleFlagArg
              name: MERGE_MAX_NUCL_GAP
          - !Flag
            optional: true
            synonyms:
            - --min-nucl
            description: 'Minimum BGC nucleotide length (default: 1)'
            args: !SimpleFlagArg
              name: MIN_NUCL
          - !Flag
            optional: true
            synonyms:
            - --min-proteins
            description: 'Minimum number of proteins in a BGC (default: 1)'
            args: !SimpleFlagArg
              name: MIN_PROTEINS
          - !Flag
            optional: true
            synonyms:
            - --min-domains
            description: 'Minimum number of protein domains in a BGC (default: 1)'
            args: !SimpleFlagArg
              name: MIN_DOMAINS
          - !Flag
            optional: true
            synonyms:
            - --min-bio-domains
            description: 'Minimum number of known biosynthetic (as defined by antiSMASH)
              protein domains in a BGC (default: 0)'
            args: !SimpleFlagArg
              name: MIN_BIO_DOMAINS
          - !Flag
            optional: true
            synonyms:
            - -c
            - --classifier
            description: Trained classification model name (run "deepbgc download"
              to download models) or path to trained model pickle file. Can be provided
              multiple times (-c first -c second)
            args: !SimpleFlagArg
              name: CLASSIFIERS
          - !Flag
            optional: true
            synonyms:
            - --no-classifier
            description: Disable BGC classification
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --classifier-score
            description: "DeepBGC classification score threshold for assigning classes\
              \ to BGCs (default: 0.5)\n"
            args: !SimpleFlagArg
              name: CLASSIFIER_SCORE
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ''
            args: !SimpleFlagArg
              name: OUTPUT
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: *id010
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n--debug\n-o OUTPUT, --output\
              \ OUTPUT\nCustom output directory path\n--limit-to-record LIMIT_TO_RECORD\n\
              Process only specific record ID. Can be provided multiple times\n--minimal-output\
              \      Produce minimal output with just the GenBank sequence file\n\
              --prodigal-meta-mode  Run Prodigal in '-p meta' mode to enable detecting\
              \ genes in short contigs\n--protein             Accept amino-acid protein\
              \ sequences as input (experimental). Will treat each file as a single\
              \ record with multiple proteins."
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n       \
            \                 [--limit-to-record LIMIT_TO_RECORD] [--minimal-output]\n\
            \                        [--prodigal-meta-mode] [--protein] [-d DETECTORS]\n\
            \                        [--no-detector] [-l LABELS] [-s SCORE]\n    \
            \                    [--merge-max-protein-gap MERGE_MAX_PROTEIN_GAP]\n\
            \                        [--merge-max-nucl-gap MERGE_MAX_NUCL_GAP]\n \
            \                       [--min-nucl MIN_NUCL] [--min-proteins MIN_PROTEINS]\n\
            \                        [--min-domains MIN_DOMAINS]\n               \
            \         [--min-bio-domains MIN_BIO_DOMAINS] [-c CLASSIFIERS]\n     \
            \                   [--no-classifier]\n                        [--classifier-score\
            \ CLASSIFIER_SCORE]\n                        inputs [inputs ...]\n\nRun\
            \ DeepBGC pipeline: Preparation, BGC detection, BGC classification and\
            \ generate the report directory.\n    \nExamples:\n    \n  # Show detailed\
            \ help \n  deepbgc pipeline --help \n    \n  # Detect BGCs in a nucleotide\
            \ FASTA sequence using DeepBGC model \n  deepbgc pipeline sequence.fa\n\
            \  \n  # Detect BGCs using the ClusterFinder GeneBorder detection model\
            \ and a higher score threshold\n  deepbgc pipeline --detector clusterfinder_geneborder\
            \ --score 0.8 sequence.fa\n  \n  # Add additional clusters detected using\
            \ DeepBGC model with a strict score threshold\n  deepbgc pipeline --continue\
            \ --output sequence/ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n\
            \  \n\npositional arguments:\n  inputs                Input sequence file\
            \ path (FASTA, GenBank, Pfam CSV)\n\noptional arguments:\n  -h, --help\
            \            show this help message and exit\n  --debug\n  -o OUTPUT,\
            \ --output OUTPUT\n                        Custom output directory path\n\
            \  --limit-to-record LIMIT_TO_RECORD\n                        Process\
            \ only specific record ID. Can be provided multiple times\n  --minimal-output\
            \      Produce minimal output with just the GenBank sequence file\n  --prodigal-meta-mode\
            \  Run Prodigal in '-p meta' mode to enable detecting genes in short contigs\n\
            \  --protein             Accept amino-acid protein sequences as input\
            \ (experimental). Will treat each file as a single record with multiple\
            \ proteins.\n\nBGC detection options:\n\n  -d DETECTORS, --detector DETECTORS\n\
            \                        Trained detection model name (run \"deepbgc download\"\
            \ to download models) or path to trained model pickle file. Can be provided\
            \ multiple times (-d first -d second)\n  --no-detector         Disable\
            \ BGC detection\n  -l LABELS, --label LABELS\n                       \
            \ Label for detected clusters (equal to --detector by default). If multiple\
            \ detectors are provided, a label should be provided for each one\n  -s\
            \ SCORE, --score SCORE\n                        Average protein-wise DeepBGC\
            \ score threshold for extracting BGC regions from Pfam sequences (default:\
            \ 0.5)\n  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n            \
            \            Merge detected BGCs within given number of proteins (default:\
            \ 0)\n  --merge-max-nucl-gap MERGE_MAX_NUCL_GAP\n                    \
            \    Merge detected BGCs within given number of nucleotides (default:\
            \ 0)\n  --min-nucl MIN_NUCL   Minimum BGC nucleotide length (default:\
            \ 1)\n  --min-proteins MIN_PROTEINS\n                        Minimum number\
            \ of proteins in a BGC (default: 1)\n  --min-domains MIN_DOMAINS\n   \
            \                     Minimum number of protein domains in a BGC (default:\
            \ 1)\n  --min-bio-domains MIN_BIO_DOMAINS\n                        Minimum\
            \ number of known biosynthetic (as defined by antiSMASH) protein domains\
            \ in a BGC (default: 0)\n\nBGC classification options:\n\n  -c CLASSIFIERS,\
            \ --classifier CLASSIFIERS\n                        Trained classification\
            \ model name (run \"deepbgc download\" to download models) or path to\
            \ trained model pickle file. Can be provided multiple times (-c first\
            \ -c second)\n  --no-classifier       Disable BGC classification\n  --classifier-score\
            \ CLASSIFIER_SCORE\n                        DeepBGC classification score\
            \ threshold for assigning classes to BGCs (default: 0.5)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: inputs
            description: Input sequence file path(s) (FASTA/GenBank)
          named:
          - !Flag
            optional: true
            synonyms:
            - --prodigal-meta-mode
            description: Run Prodigal in '-p meta' mode to enable detecting genes
              in short contigs
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --protein
            description: Accept amino-acid protein sequences as input (experimental).
              Will treat each file as a single record with multiple proteins.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --output-gbk
            description: Output GenBank file path
            args: !SimpleFlagArg
              name: OUTPUT_GBK
          - !Flag
            optional: true
            synonyms:
            - --output-tsv
            description: "Output TSV file path\n"
            args: !SimpleFlagArg
              name: OUTPUT_TSV
          - !Flag
            optional: true
            synonyms:
            - --limit-to-record
            description: ''
            args: !SimpleFlagArg
              name: LIMIT_TO_RECORD
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: *id010
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n--debug\n--limit-to-record\
              \ LIMIT_TO_RECORD\nProcess only specific record ID. Can be provided\
              \ multiple times"
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record LIMIT_TO_RECORD]\n\
            \                       [--prodigal-meta-mode] [--protein]\n         \
            \              [--output-gbk OUTPUT_GBK] [--output-tsv OUTPUT_TSV]\n \
            \                      inputs [inputs ...]\n\nPrepare genomic sequence\
            \ by annotating proteins and Pfam domains.\n    \nExamples:\n    \n  #\
            \ Show detailed help \n  deepbgc prepare --help \n    \n  # Detect proteins\
            \ and pfam domains in a FASTA sequence and save the result as GenBank\
            \ file \n  deepbgc prepare --output sequence.prepared.gbk sequence.fa\n\
            \  \n\npositional arguments:\n  inputs                Input sequence file\
            \ path(s) (FASTA/GenBank)\n\noptional arguments:\n  -h, --help       \
            \     show this help message and exit\n  --debug\n  --limit-to-record\
            \ LIMIT_TO_RECORD\n                        Process only specific record\
            \ ID. Can be provided multiple times\n\nrequired arguments:\n\n  --prodigal-meta-mode\
            \  Run Prodigal in '-p meta' mode to enable detecting genes in short contigs\n\
            \  --protein             Accept amino-acid protein sequences as input\
            \ (experimental). Will treat each file as a single record with multiple\
            \ proteins.\n  --output-gbk OUTPUT_GBK\n                        Output\
            \ GenBank file path\n  --output-tsv OUTPUT_TSV\n                     \
            \   Output TSV file path\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: *id010
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n--debug\n"
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download trained\
            \ models and other file dependencies to the DeepBGC downloads directory.\n\
            \    \n    By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
            \    Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different downloads\
            \ directory.\"\n    \n\noptional arguments:\n  -h, --help  show this help\
            \ message and exit\n  --debug\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic Gene\
          \ Cluster detection and classification\n\noptional arguments:\n  -h, --help\
          \  show this help message and exit\n\nAvailable Commands:\n  COMMAND   \
          \  Use: deepbgc COMMAND --help for command-specific help\n    download \
          \ \n                  Download trained models and other file dependencies\
          \ to the DeepBGC downloads directory.\n                  \n            \
          \      By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
          \                  Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different\
          \ downloads directory.\"\n                  \n    prepare   Prepare genomic\
          \ sequence by annotating proteins and Pfam domains.\n                  \n\
          \              Examples:\n                  \n                # Show detailed\
          \ help \n                deepbgc prepare --help \n                  \n \
          \               # Detect proteins and pfam domains in a FASTA sequence and\
          \ save the result as GenBank file \n                deepbgc prepare --output\
          \ sequence.prepared.gbk sequence.fa\n                \n    pipeline  Run\
          \ DeepBGC pipeline: Preparation, BGC detection, BGC classification and generate\
          \ the report directory.\n                  \n              Examples:\n \
          \                 \n                # Show detailed help \n            \
          \    deepbgc pipeline --help \n                  \n                # Detect\
          \ BGCs in a nucleotide FASTA sequence using DeepBGC model \n           \
          \     deepbgc pipeline sequence.fa\n                \n                #\
          \ Detect BGCs using the ClusterFinder GeneBorder detection model and a higher\
          \ score threshold\n                deepbgc pipeline --detector clusterfinder_geneborder\
          \ --score 0.8 sequence.fa\n                \n                # Add additional\
          \ clusters detected using DeepBGC model with a strict score threshold\n\
          \                deepbgc pipeline --continue --output sequence/ --label\
          \ deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n            \
          \    \n    train     Train a BGC detector/classifier on a set of BGC samples.\n\
          \                  \n              Examples:\n                  \n     \
          \           # Train a detector using pre-processed samples in Pfam CSV format.\
          \ \n                deepbgc train --model deepbgc.json --output MyDeepBGCDetector.pkl\
          \ BGCs.pfam.tsv negatives.pfam.tsv\n                  \n               \
          \ # Train a BGC classifier using a TSV classes file and a set of BGC samples\
          \ in Pfam TSV format and save the trained classifier to a file. \n     \
          \           deepbgc train --model random_forest.json --output MyDeepBGCClassifier.pkl\
          \ --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n                \n \
          \   info      Show DeepBGC summary information about downloaded models and\
          \ dependencies.\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n--debug\n"
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC summary information\
        \ about downloaded models and dependencies.\n\noptional arguments:\n  -h,\
        \ --help  show this help message and exit\n  --debug\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: inputs
        description: Training sequences (Pfam TSV) file paths
      named:
      - !Flag
        optional: true
        synonyms:
        - -l
        description: ''
        args: !SimpleFlagArg
          name: LOG
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ''
        args: !SimpleFlagArg
          name: OUTPUT
      - !Flag
        optional: true
        synonyms:
        - -t
        description: ''
        args: !SimpleFlagArg
          name: TARGET
      - !Flag
        optional: true
        synonyms:
        - -m
        description: ''
        args: !SimpleFlagArg
          name: MODEL
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: *id011
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n--debug\n-m MODEL, --model\
          \ MODEL\nPath to JSON model config file\n-t TARGET, --target TARGET\nTarget\
          \ column to predict in sequence prediction\n-o OUTPUT, --output OUTPUT\n\
          Output trained model file path\n-l LOG, --log LOG     Progress log output\
          \ path (e.g. TensorBoard)\n-c CLASSES, --classes CLASSES\nClass TSV file\
          \ path - train a sequence classifier using provided classes (binary columns),\
          \ indexed by sequence_id column\n--config CONFIG CONFIG\nVariables in model\
          \ JSON file to replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n-v\
          \ VALIDATION, --validation VALIDATION\nValidation sequence file path. Repeat\
          \ to specify multiple files\n--verbose INT         Verbosity level: 0=none,\
          \ 1=progress bar, 2=once per epoch (default: 2)\n"
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t TARGET] -o OUTPUT\
        \ [-l LOG]\n                     [-c CLASSES] [--config CONFIG CONFIG] [-v\
        \ VALIDATION]\n                     [--verbose INT]\n                    \
        \ inputs [inputs ...]\n\nTrain a BGC detector/classifier on a set of BGC samples.\n\
        \    \nExamples:\n    \n  # Train a detector using pre-processed samples in\
        \ Pfam CSV format. \n  deepbgc train --model deepbgc.json --output MyDeepBGCDetector.pkl\
        \ BGCs.pfam.tsv negatives.pfam.tsv\n    \n  # Train a BGC classifier using\
        \ a TSV classes file and a set of BGC samples in Pfam TSV format and save\
        \ the trained classifier to a file. \n  deepbgc train --model random_forest.json\
        \ --output MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n\
        \  \n\npositional arguments:\n  inputs                Training sequences (Pfam\
        \ TSV) file paths\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  --debug\n  -m MODEL, --model MODEL\n          \
        \              Path to JSON model config file\n  -t TARGET, --target TARGET\n\
        \                        Target column to predict in sequence prediction\n\
        \  -o OUTPUT, --output OUTPUT\n                        Output trained model\
        \ file path\n  -l LOG, --log LOG     Progress log output path (e.g. TensorBoard)\n\
        \  -c CLASSES, --classes CLASSES\n                        Class TSV file path\
        \ - train a sequence classifier using provided classes (binary columns), indexed\
        \ by sequence_id column\n  --config CONFIG CONFIG\n                      \
        \  Variables in model JSON file to replace (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n\
        \  -v VALIDATION, --validation VALIDATION\n                        Validation\
        \ sequence file path. Repeat to specify multiple files\n  --verbose INT  \
        \       Verbosity level: 0=none, 1=progress bar, 2=once per epoch (default:\
        \ 2)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: inputs
        description: Input sequence file path (FASTA, GenBank, Pfam CSV)
      named:
      - !Flag
        optional: true
        synonyms:
        - -d
        - --detector
        description: Trained detection model name (run "deepbgc download" to download
          models) or path to trained model pickle file. Can be provided multiple times
          (-d first -d second)
        args: !SimpleFlagArg
          name: DETECTORS
      - !Flag
        optional: true
        synonyms:
        - --no-detector
        description: Disable BGC detection
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -l
        - --label
        description: Label for detected clusters (equal to --detector by default).
          If multiple detectors are provided, a label should be provided for each
          one
        args: !SimpleFlagArg
          name: LABELS
      - !Flag
        optional: true
        synonyms:
        - -s
        - --score
        description: 'Average protein-wise DeepBGC score threshold for extracting
          BGC regions from Pfam sequences (default: 0.5)'
        args: !SimpleFlagArg
          name: SCORE
      - !Flag
        optional: true
        synonyms:
        - --merge-max-protein-gap
        description: 'Merge detected BGCs within given number of proteins (default:
          0)'
        args: !SimpleFlagArg
          name: MERGE_MAX_PROTEIN_GAP
      - !Flag
        optional: true
        synonyms:
        - --merge-max-nucl-gap
        description: 'Merge detected BGCs within given number of nucleotides (default:
          0)'
        args: !SimpleFlagArg
          name: MERGE_MAX_NUCL_GAP
      - !Flag
        optional: true
        synonyms:
        - --min-nucl
        description: 'Minimum BGC nucleotide length (default: 1)'
        args: !SimpleFlagArg
          name: MIN_NUCL
      - !Flag
        optional: true
        synonyms:
        - --min-proteins
        description: 'Minimum number of proteins in a BGC (default: 1)'
        args: !SimpleFlagArg
          name: MIN_PROTEINS
      - !Flag
        optional: true
        synonyms:
        - --min-domains
        description: 'Minimum number of protein domains in a BGC (default: 1)'
        args: !SimpleFlagArg
          name: MIN_DOMAINS
      - !Flag
        optional: true
        synonyms:
        - --min-bio-domains
        description: 'Minimum number of known biosynthetic (as defined by antiSMASH)
          protein domains in a BGC (default: 0)'
        args: !SimpleFlagArg
          name: MIN_BIO_DOMAINS
      - !Flag
        optional: true
        synonyms:
        - -c
        - --classifier
        description: Trained classification model name (run "deepbgc download" to
          download models) or path to trained model pickle file. Can be provided multiple
          times (-c first -c second)
        args: !SimpleFlagArg
          name: CLASSIFIERS
      - !Flag
        optional: true
        synonyms:
        - --no-classifier
        description: Disable BGC classification
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --classifier-score
        description: "DeepBGC classification score threshold for assigning classes\
          \ to BGCs (default: 0.5)\n"
        args: !SimpleFlagArg
          name: CLASSIFIER_SCORE
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ''
        args: !SimpleFlagArg
          name: OUTPUT
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: *id011
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n--debug\n-o OUTPUT, --output\
          \ OUTPUT\nCustom output directory path\n--limit-to-record LIMIT_TO_RECORD\n\
          Process only specific record ID. Can be provided multiple times\n--minimal-output\
          \      Produce minimal output with just the GenBank sequence file\n--prodigal-meta-mode\
          \  Run Prodigal in '-p meta' mode to enable detecting genes in short contigs\n\
          --protein             Accept amino-acid protein sequences as input (experimental).\
          \ Will treat each file as a single record with multiple proteins."
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n           \
        \             [--limit-to-record LIMIT_TO_RECORD] [--minimal-output]\n   \
        \                     [--prodigal-meta-mode] [--protein] [-d DETECTORS]\n\
        \                        [--no-detector] [-l LABELS] [-s SCORE]\n        \
        \                [--merge-max-protein-gap MERGE_MAX_PROTEIN_GAP]\n       \
        \                 [--merge-max-nucl-gap MERGE_MAX_NUCL_GAP]\n            \
        \            [--min-nucl MIN_NUCL] [--min-proteins MIN_PROTEINS]\n       \
        \                 [--min-domains MIN_DOMAINS]\n                        [--min-bio-domains\
        \ MIN_BIO_DOMAINS] [-c CLASSIFIERS]\n                        [--no-classifier]\n\
        \                        [--classifier-score CLASSIFIER_SCORE]\n         \
        \               inputs [inputs ...]\n\nRun DeepBGC pipeline: Preparation,\
        \ BGC detection, BGC classification and generate the report directory.\n \
        \   \nExamples:\n    \n  # Show detailed help \n  deepbgc pipeline --help\
        \ \n    \n  # Detect BGCs in a nucleotide FASTA sequence using DeepBGC model\
        \ \n  deepbgc pipeline sequence.fa\n  \n  # Detect BGCs using the ClusterFinder\
        \ GeneBorder detection model and a higher score threshold\n  deepbgc pipeline\
        \ --detector clusterfinder_geneborder --score 0.8 sequence.fa\n  \n  # Add\
        \ additional clusters detected using DeepBGC model with a strict score threshold\n\
        \  deepbgc pipeline --continue --output sequence/ --label deepbgc_90_score\
        \ --score 0.9 sequence/sequence.full.gbk\n  \n\npositional arguments:\n  inputs\
        \                Input sequence file path (FASTA, GenBank, Pfam CSV)\n\noptional\
        \ arguments:\n  -h, --help            show this help message and exit\n  --debug\n\
        \  -o OUTPUT, --output OUTPUT\n                        Custom output directory\
        \ path\n  --limit-to-record LIMIT_TO_RECORD\n                        Process\
        \ only specific record ID. Can be provided multiple times\n  --minimal-output\
        \      Produce minimal output with just the GenBank sequence file\n  --prodigal-meta-mode\
        \  Run Prodigal in '-p meta' mode to enable detecting genes in short contigs\n\
        \  --protein             Accept amino-acid protein sequences as input (experimental).\
        \ Will treat each file as a single record with multiple proteins.\n\nBGC detection\
        \ options:\n\n  -d DETECTORS, --detector DETECTORS\n                     \
        \   Trained detection model name (run \"deepbgc download\" to download models)\
        \ or path to trained model pickle file. Can be provided multiple times (-d\
        \ first -d second)\n  --no-detector         Disable BGC detection\n  -l LABELS,\
        \ --label LABELS\n                        Label for detected clusters (equal\
        \ to --detector by default). If multiple detectors are provided, a label should\
        \ be provided for each one\n  -s SCORE, --score SCORE\n                  \
        \      Average protein-wise DeepBGC score threshold for extracting BGC regions\
        \ from Pfam sequences (default: 0.5)\n  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n\
        \                        Merge detected BGCs within given number of proteins\
        \ (default: 0)\n  --merge-max-nucl-gap MERGE_MAX_NUCL_GAP\n              \
        \          Merge detected BGCs within given number of nucleotides (default:\
        \ 0)\n  --min-nucl MIN_NUCL   Minimum BGC nucleotide length (default: 1)\n\
        \  --min-proteins MIN_PROTEINS\n                        Minimum number of\
        \ proteins in a BGC (default: 1)\n  --min-domains MIN_DOMAINS\n          \
        \              Minimum number of protein domains in a BGC (default: 1)\n \
        \ --min-bio-domains MIN_BIO_DOMAINS\n                        Minimum number\
        \ of known biosynthetic (as defined by antiSMASH) protein domains in a BGC\
        \ (default: 0)\n\nBGC classification options:\n\n  -c CLASSIFIERS, --classifier\
        \ CLASSIFIERS\n                        Trained classification model name (run\
        \ \"deepbgc download\" to download models) or path to trained model pickle\
        \ file. Can be provided multiple times (-c first -c second)\n  --no-classifier\
        \       Disable BGC classification\n  --classifier-score CLASSIFIER_SCORE\n\
        \                        DeepBGC classification score threshold for assigning\
        \ classes to BGCs (default: 0.5)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: inputs
        description: Input sequence file path(s) (FASTA/GenBank)
      named:
      - !Flag
        optional: true
        synonyms:
        - --prodigal-meta-mode
        description: Run Prodigal in '-p meta' mode to enable detecting genes in short
          contigs
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --protein
        description: Accept amino-acid protein sequences as input (experimental).
          Will treat each file as a single record with multiple proteins.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --output-gbk
        description: Output GenBank file path
        args: !SimpleFlagArg
          name: OUTPUT_GBK
      - !Flag
        optional: true
        synonyms:
        - --output-tsv
        description: "Output TSV file path\n"
        args: !SimpleFlagArg
          name: OUTPUT_TSV
      - !Flag
        optional: true
        synonyms:
        - --limit-to-record
        description: ''
        args: !SimpleFlagArg
          name: LIMIT_TO_RECORD
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: *id011
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n--debug\n--limit-to-record\
          \ LIMIT_TO_RECORD\nProcess only specific record ID. Can be provided multiple\
          \ times"
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record LIMIT_TO_RECORD]\n\
        \                       [--prodigal-meta-mode] [--protein]\n             \
        \          [--output-gbk OUTPUT_GBK] [--output-tsv OUTPUT_TSV]\n         \
        \              inputs [inputs ...]\n\nPrepare genomic sequence by annotating\
        \ proteins and Pfam domains.\n    \nExamples:\n    \n  # Show detailed help\
        \ \n  deepbgc prepare --help \n    \n  # Detect proteins and pfam domains\
        \ in a FASTA sequence and save the result as GenBank file \n  deepbgc prepare\
        \ --output sequence.prepared.gbk sequence.fa\n  \n\npositional arguments:\n\
        \  inputs                Input sequence file path(s) (FASTA/GenBank)\n\noptional\
        \ arguments:\n  -h, --help            show this help message and exit\n  --debug\n\
        \  --limit-to-record LIMIT_TO_RECORD\n                        Process only\
        \ specific record ID. Can be provided multiple times\n\nrequired arguments:\n\
        \n  --prodigal-meta-mode  Run Prodigal in '-p meta' mode to enable detecting\
        \ genes in short contigs\n  --protein             Accept amino-acid protein\
        \ sequences as input (experimental). Will treat each file as a single record\
        \ with multiple proteins.\n  --output-gbk OUTPUT_GBK\n                   \
        \     Output GenBank file path\n  --output-tsv OUTPUT_TSV\n              \
        \          Output TSV file path\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: *id011
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n--debug\n"
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download trained models\
        \ and other file dependencies to the DeepBGC downloads directory.\n    \n\
        \    By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
        \    Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different downloads\
        \ directory.\"\n    \n\noptional arguments:\n  -h, --help  show this help\
        \ message and exit\n  --debug\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic Gene Cluster\
      \ detection and classification\n\noptional arguments:\n  -h, --help  show this\
      \ help message and exit\n\nAvailable Commands:\n  COMMAND     Use: deepbgc COMMAND\
      \ --help for command-specific help\n    download  \n                  Download\
      \ trained models and other file dependencies to the DeepBGC downloads directory.\n\
      \                  \n                  By default, files are downloaded to:\
      \ '/root/.local/share/deepbgc/data'\n                  Set DEEPBGC_DOWNLOADS_DIR\
      \ env variable to specify a different downloads directory.\"\n             \
      \     \n    prepare   Prepare genomic sequence by annotating proteins and Pfam\
      \ domains.\n                  \n              Examples:\n                  \n\
      \                # Show detailed help \n                deepbgc prepare --help\
      \ \n                  \n                # Detect proteins and pfam domains in\
      \ a FASTA sequence and save the result as GenBank file \n                deepbgc\
      \ prepare --output sequence.prepared.gbk sequence.fa\n                \n   \
      \ pipeline  Run DeepBGC pipeline: Preparation, BGC detection, BGC classification\
      \ and generate the report directory.\n                  \n              Examples:\n\
      \                  \n                # Show detailed help \n               \
      \ deepbgc pipeline --help \n                  \n                # Detect BGCs\
      \ in a nucleotide FASTA sequence using DeepBGC model \n                deepbgc\
      \ pipeline sequence.fa\n                \n                # Detect BGCs using\
      \ the ClusterFinder GeneBorder detection model and a higher score threshold\n\
      \                deepbgc pipeline --detector clusterfinder_geneborder --score\
      \ 0.8 sequence.fa\n                \n                # Add additional clusters\
      \ detected using DeepBGC model with a strict score threshold\n             \
      \   deepbgc pipeline --continue --output sequence/ --label deepbgc_90_score\
      \ --score 0.9 sequence/sequence.full.gbk\n                \n    train     Train\
      \ a BGC detector/classifier on a set of BGC samples.\n                  \n \
      \             Examples:\n                  \n                # Train a detector\
      \ using pre-processed samples in Pfam CSV format. \n                deepbgc\
      \ train --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv negatives.pfam.tsv\n\
      \                  \n                # Train a BGC classifier using a TSV classes\
      \ file and a set of BGC samples in Pfam TSV format and save the trained classifier\
      \ to a file. \n                deepbgc train --model random_forest.json --output\
      \ MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n\
      \                \n    info      Show DeepBGC summary information about downloaded\
      \ models and dependencies.\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC summary information\
    \ about downloaded models and dependencies.\n\noptional arguments:\n  -h, --help\
    \  show this help message and exit\n  --debug\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: inputs
    description: Training sequences (Pfam TSV) file paths
  named:
  - !Flag
    optional: true
    synonyms:
    - --debug
    - -m
    - --model
    description: Path to JSON model config file
    args: !SimpleFlagArg
      name: MODEL
  - !Flag
    optional: true
    synonyms:
    - -t
    - --target
    description: Target column to predict in sequence prediction
    args: !SimpleFlagArg
      name: TARGET
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Output trained model file path
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - -l
    - --log
    description: Progress log output path (e.g. TensorBoard)
    args: !SimpleFlagArg
      name: LOG
  - !Flag
    optional: true
    synonyms:
    - -c
    - --classes
    description: Class TSV file path - train a sequence classifier using provided
      classes (binary columns), indexed by sequence_id column
    args: !SimpleFlagArg
      name: CLASSES
  - !Flag
    optional: true
    synonyms:
    - --config
    description: "CONFIG\nVariables in model JSON file to replace (e.g. --config PFAM2VEC\
      \ path/to/pfam2vec.csv)"
    args: !SimpleFlagArg
      name: CONFIG
  - !Flag
    optional: true
    synonyms:
    - -v
    - --validation
    description: Validation sequence file path. Repeat to specify multiple files
    args: !SimpleFlagArg
      name: VALIDATION
  - !Flag
    optional: true
    synonyms:
    - --verbose
    description: 'Verbosity level: 0=none, 1=progress bar, 2=once per epoch (default:
      2)'
    args: !SimpleFlagArg
      name: INT
  parent: *id012
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t TARGET] -o OUTPUT [-l\
    \ LOG]\n                     [-c CLASSES] [--config CONFIG CONFIG] [-v VALIDATION]\n\
    \                     [--verbose INT]\n                     inputs [inputs ...]\n\
    \nTrain a BGC detector/classifier on a set of BGC samples.\n    \nExamples:\n\
    \    \n  # Train a detector using pre-processed samples in Pfam CSV format. \n\
    \  deepbgc train --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv\
    \ negatives.pfam.tsv\n    \n  # Train a BGC classifier using a TSV classes file\
    \ and a set of BGC samples in Pfam TSV format and save the trained classifier\
    \ to a file. \n  deepbgc train --model random_forest.json --output MyDeepBGCClassifier.pkl\
    \ --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n  \n\npositional arguments:\n\
    \  inputs                Training sequences (Pfam TSV) file paths\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --debug\n\
    \  -m MODEL, --model MODEL\n                        Path to JSON model config\
    \ file\n  -t TARGET, --target TARGET\n                        Target column to\
    \ predict in sequence prediction\n  -o OUTPUT, --output OUTPUT\n             \
    \           Output trained model file path\n  -l LOG, --log LOG     Progress log\
    \ output path (e.g. TensorBoard)\n  -c CLASSES, --classes CLASSES\n          \
    \              Class TSV file path - train a sequence classifier using provided\
    \ classes (binary columns), indexed by sequence_id column\n  --config CONFIG CONFIG\n\
    \                        Variables in model JSON file to replace (e.g. --config\
    \ PFAM2VEC path/to/pfam2vec.csv)\n  -v VALIDATION, --validation VALIDATION\n \
    \                       Validation sequence file path. Repeat to specify multiple\
    \ files\n  --verbose INT         Verbosity level: 0=none, 1=progress bar, 2=once\
    \ per epoch (default: 2)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: inputs
    description: Input sequence file path (FASTA, GenBank, Pfam CSV)
  named:
  - !Flag
    optional: true
    synonyms:
    - --debug
    - -o
    - --output
    description: Custom output directory path
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - --limit-to-record
    description: Process only specific record ID. Can be provided multiple times
    args: !SimpleFlagArg
      name: LIMIT_TO_RECORD
  - !Flag
    optional: true
    synonyms:
    - --minimal-output
    description: Produce minimal output with just the GenBank sequence file
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prodigal-meta-mode
    description: Run Prodigal in '-p meta' mode to enable detecting genes in short
      contigs
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --protein
    description: Accept amino-acid protein sequences as input (experimental). Will
      treat each file as a single record with multiple proteins.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --detector
    description: Trained detection model name (run "deepbgc download" to download
      models) or path to trained model pickle file. Can be provided multiple times
      (-d first -d second)
    args: !SimpleFlagArg
      name: DETECTORS
  - !Flag
    optional: true
    synonyms:
    - --no-detector
    description: Disable BGC detection
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -l
    - --label
    description: Label for detected clusters (equal to --detector by default). If
      multiple detectors are provided, a label should be provided for each one
    args: !SimpleFlagArg
      name: LABELS
  - !Flag
    optional: true
    synonyms:
    - -s
    - --score
    description: 'Average protein-wise DeepBGC score threshold for extracting BGC
      regions from Pfam sequences (default: 0.5)'
    args: !SimpleFlagArg
      name: SCORE
  - !Flag
    optional: true
    synonyms:
    - --merge-max-protein-gap
    description: 'Merge detected BGCs within given number of proteins (default: 0)'
    args: !SimpleFlagArg
      name: MERGE_MAX_PROTEIN_GAP
  - !Flag
    optional: true
    synonyms:
    - --merge-max-nucl-gap
    description: 'Merge detected BGCs within given number of nucleotides (default:
      0)'
    args: !SimpleFlagArg
      name: MERGE_MAX_NUCL_GAP
  - !Flag
    optional: true
    synonyms:
    - --min-nucl
    description: 'Minimum BGC nucleotide length (default: 1)'
    args: !SimpleFlagArg
      name: MIN_NUCL
  - !Flag
    optional: true
    synonyms:
    - --min-proteins
    description: 'Minimum number of proteins in a BGC (default: 1)'
    args: !SimpleFlagArg
      name: MIN_PROTEINS
  - !Flag
    optional: true
    synonyms:
    - --min-domains
    description: 'Minimum number of protein domains in a BGC (default: 1)'
    args: !SimpleFlagArg
      name: MIN_DOMAINS
  - !Flag
    optional: true
    synonyms:
    - --min-bio-domains
    description: 'Minimum number of known biosynthetic (as defined by antiSMASH) protein
      domains in a BGC (default: 0)'
    args: !SimpleFlagArg
      name: MIN_BIO_DOMAINS
  - !Flag
    optional: true
    synonyms:
    - -c
    - --classifier
    description: Trained classification model name (run "deepbgc download" to download
      models) or path to trained model pickle file. Can be provided multiple times
      (-c first -c second)
    args: !SimpleFlagArg
      name: CLASSIFIERS
  - !Flag
    optional: true
    synonyms:
    - --no-classifier
    description: Disable BGC classification
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --classifier-score
    description: "DeepBGC classification score threshold for assigning classes to\
      \ BGCs (default: 0.5)\n"
    args: !SimpleFlagArg
      name: CLASSIFIER_SCORE
  parent: *id012
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n               \
    \         [--limit-to-record LIMIT_TO_RECORD] [--minimal-output]\n           \
    \             [--prodigal-meta-mode] [--protein] [-d DETECTORS]\n            \
    \            [--no-detector] [-l LABELS] [-s SCORE]\n                        [--merge-max-protein-gap\
    \ MERGE_MAX_PROTEIN_GAP]\n                        [--merge-max-nucl-gap MERGE_MAX_NUCL_GAP]\n\
    \                        [--min-nucl MIN_NUCL] [--min-proteins MIN_PROTEINS]\n\
    \                        [--min-domains MIN_DOMAINS]\n                       \
    \ [--min-bio-domains MIN_BIO_DOMAINS] [-c CLASSIFIERS]\n                     \
    \   [--no-classifier]\n                        [--classifier-score CLASSIFIER_SCORE]\n\
    \                        inputs [inputs ...]\n\nRun DeepBGC pipeline: Preparation,\
    \ BGC detection, BGC classification and generate the report directory.\n    \n\
    Examples:\n    \n  # Show detailed help \n  deepbgc pipeline --help \n    \n \
    \ # Detect BGCs in a nucleotide FASTA sequence using DeepBGC model \n  deepbgc\
    \ pipeline sequence.fa\n  \n  # Detect BGCs using the ClusterFinder GeneBorder\
    \ detection model and a higher score threshold\n  deepbgc pipeline --detector\
    \ clusterfinder_geneborder --score 0.8 sequence.fa\n  \n  # Add additional clusters\
    \ detected using DeepBGC model with a strict score threshold\n  deepbgc pipeline\
    \ --continue --output sequence/ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n\
    \  \n\npositional arguments:\n  inputs                Input sequence file path\
    \ (FASTA, GenBank, Pfam CSV)\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  --debug\n  -o OUTPUT, --output OUTPUT\n      \
    \                  Custom output directory path\n  --limit-to-record LIMIT_TO_RECORD\n\
    \                        Process only specific record ID. Can be provided multiple\
    \ times\n  --minimal-output      Produce minimal output with just the GenBank\
    \ sequence file\n  --prodigal-meta-mode  Run Prodigal in '-p meta' mode to enable\
    \ detecting genes in short contigs\n  --protein             Accept amino-acid\
    \ protein sequences as input (experimental). Will treat each file as a single\
    \ record with multiple proteins.\n\nBGC detection options:\n\n  -d DETECTORS,\
    \ --detector DETECTORS\n                        Trained detection model name (run\
    \ \"deepbgc download\" to download models) or path to trained model pickle file.\
    \ Can be provided multiple times (-d first -d second)\n  --no-detector       \
    \  Disable BGC detection\n  -l LABELS, --label LABELS\n                      \
    \  Label for detected clusters (equal to --detector by default). If multiple detectors\
    \ are provided, a label should be provided for each one\n  -s SCORE, --score SCORE\n\
    \                        Average protein-wise DeepBGC score threshold for extracting\
    \ BGC regions from Pfam sequences (default: 0.5)\n  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n\
    \                        Merge detected BGCs within given number of proteins (default:\
    \ 0)\n  --merge-max-nucl-gap MERGE_MAX_NUCL_GAP\n                        Merge\
    \ detected BGCs within given number of nucleotides (default: 0)\n  --min-nucl\
    \ MIN_NUCL   Minimum BGC nucleotide length (default: 1)\n  --min-proteins MIN_PROTEINS\n\
    \                        Minimum number of proteins in a BGC (default: 1)\n  --min-domains\
    \ MIN_DOMAINS\n                        Minimum number of protein domains in a\
    \ BGC (default: 1)\n  --min-bio-domains MIN_BIO_DOMAINS\n                    \
    \    Minimum number of known biosynthetic (as defined by antiSMASH) protein domains\
    \ in a BGC (default: 0)\n\nBGC classification options:\n\n  -c CLASSIFIERS, --classifier\
    \ CLASSIFIERS\n                        Trained classification model name (run\
    \ \"deepbgc download\" to download models) or path to trained model pickle file.\
    \ Can be provided multiple times (-c first -c second)\n  --no-classifier     \
    \  Disable BGC classification\n  --classifier-score CLASSIFIER_SCORE\n       \
    \                 DeepBGC classification score threshold for assigning classes\
    \ to BGCs (default: 0.5)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: inputs
    description: Input sequence file path(s) (FASTA/GenBank)
  named:
  - !Flag
    optional: true
    synonyms:
    - --debug
    - --limit-to-record
    description: Process only specific record ID. Can be provided multiple times
    args: !SimpleFlagArg
      name: LIMIT_TO_RECORD
  - !Flag
    optional: true
    synonyms:
    - --prodigal-meta-mode
    description: Run Prodigal in '-p meta' mode to enable detecting genes in short
      contigs
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --protein
    description: Accept amino-acid protein sequences as input (experimental). Will
      treat each file as a single record with multiple proteins.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --output-gbk
    description: Output GenBank file path
    args: !SimpleFlagArg
      name: OUTPUT_GBK
  - !Flag
    optional: true
    synonyms:
    - --output-tsv
    description: "Output TSV file path\n"
    args: !SimpleFlagArg
      name: OUTPUT_TSV
  parent: *id012
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record LIMIT_TO_RECORD]\n\
    \                       [--prodigal-meta-mode] [--protein]\n                 \
    \      [--output-gbk OUTPUT_GBK] [--output-tsv OUTPUT_TSV]\n                 \
    \      inputs [inputs ...]\n\nPrepare genomic sequence by annotating proteins\
    \ and Pfam domains.\n    \nExamples:\n    \n  # Show detailed help \n  deepbgc\
    \ prepare --help \n    \n  # Detect proteins and pfam domains in a FASTA sequence\
    \ and save the result as GenBank file \n  deepbgc prepare --output sequence.prepared.gbk\
    \ sequence.fa\n  \n\npositional arguments:\n  inputs                Input sequence\
    \ file path(s) (FASTA/GenBank)\n\noptional arguments:\n  -h, --help          \
    \  show this help message and exit\n  --debug\n  --limit-to-record LIMIT_TO_RECORD\n\
    \                        Process only specific record ID. Can be provided multiple\
    \ times\n\nrequired arguments:\n\n  --prodigal-meta-mode  Run Prodigal in '-p\
    \ meta' mode to enable detecting genes in short contigs\n  --protein         \
    \    Accept amino-acid protein sequences as input (experimental). Will treat each\
    \ file as a single record with multiple proteins.\n  --output-gbk OUTPUT_GBK\n\
    \                        Output GenBank file path\n  --output-tsv OUTPUT_TSV\n\
    \                        Output TSV file path\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: ''
    args: !EmptyFlagArg {}
  parent: *id012
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download trained models\
    \ and other file dependencies to the DeepBGC downloads directory.\n    \n    By\
    \ default, files are downloaded to: '/root/.local/share/deepbgc/data'\n    Set\
    \ DEEPBGC_DOWNLOADS_DIR env variable to specify a different downloads directory.\"\
    \n    \n\noptional arguments:\n  -h, --help  show this help message and exit\n\
    \  --debug\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic Gene Cluster\
  \ detection and classification\n\noptional arguments:\n  -h, --help  show this help\
  \ message and exit\n\nAvailable Commands:\n  COMMAND     Use: deepbgc COMMAND --help\
  \ for command-specific help\n    download  \n                  Download trained\
  \ models and other file dependencies to the DeepBGC downloads directory.\n     \
  \             \n                  By default, files are downloaded to: '/root/.local/share/deepbgc/data'\n\
  \                  Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different\
  \ downloads directory.\"\n                  \n    prepare   Prepare genomic sequence\
  \ by annotating proteins and Pfam domains.\n                  \n              Examples:\n\
  \                  \n                # Show detailed help \n                deepbgc\
  \ prepare --help \n                  \n                # Detect proteins and pfam\
  \ domains in a FASTA sequence and save the result as GenBank file \n           \
  \     deepbgc prepare --output sequence.prepared.gbk sequence.fa\n             \
  \   \n    pipeline  Run DeepBGC pipeline: Preparation, BGC detection, BGC classification\
  \ and generate the report directory.\n                  \n              Examples:\n\
  \                  \n                # Show detailed help \n                deepbgc\
  \ pipeline --help \n                  \n                # Detect BGCs in a nucleotide\
  \ FASTA sequence using DeepBGC model \n                deepbgc pipeline sequence.fa\n\
  \                \n                # Detect BGCs using the ClusterFinder GeneBorder\
  \ detection model and a higher score threshold\n                deepbgc pipeline\
  \ --detector clusterfinder_geneborder --score 0.8 sequence.fa\n                \n\
  \                # Add additional clusters detected using DeepBGC model with a strict\
  \ score threshold\n                deepbgc pipeline --continue --output sequence/\
  \ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n            \
  \    \n    train     Train a BGC detector/classifier on a set of BGC samples.\n\
  \                  \n              Examples:\n                  \n             \
  \   # Train a detector using pre-processed samples in Pfam CSV format. \n      \
  \          deepbgc train --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv\
  \ negatives.pfam.tsv\n                  \n                # Train a BGC classifier\
  \ using a TSV classes file and a set of BGC samples in Pfam TSV format and save\
  \ the trained classifier to a file. \n                deepbgc train --model random_forest.json\
  \ --output MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n\
  \                \n    info      Show DeepBGC summary information about downloaded\
  \ models and dependencies.\n"
generated_using: *id004
docker_image:
