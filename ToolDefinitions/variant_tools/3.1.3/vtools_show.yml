!Command
command: &id001
- vtools
- show
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id005
  - vtools
  - show
  - items
  positional:
  - !Positional
    description: ''
    position: 0
    name: vtools
    optional: false
  - !Positional
    description: ''
    position: 1
    name: show
    optional: false
  named:
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !ChoiceFlagArg
      choices: !!set
        '1':
        '0':
        '2':
        '3':
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -l
    args: !SimpleFlagArg
      name: N
    optional: true
  parent: &id004 !Command
    command: *id001
    positional: []
    named:
    - !Flag
      description: "'. 'pipeline PIPELINE' for details of"
      synonyms:
      - --save_snapshots
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Limit output to the first N records.
      synonyms:
      - -l
      - --limit
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: "Output error and warning (0), info (1), debug (2) and\ntrace (3)\
        \ information to standard output (default to\n1).\n"
      synonyms:
      - -v
      - --verbosity
      args: !ChoiceFlagArg
        choices: !!set
          ? "3"
          ? "1"
          ? "2"
          ? "0"
      optional: true
    parent: &id002 !Command
      command:
      - vtools
      positional: []
      named: []
      parent:
      subcommands:
      - !Command
        command:
        - vtools
        - export
        positional:
        - !Positional
          description: ''
          position: 0
          name: OUTPUT
          optional: true
        - !Positional
          description: ''
          position: 1
          name: COND
          optional: true
        named:
        - !Flag
          description: "[OUTPUT], --output [OUTPUT]\nName of output file. Output will\
            \ be written to the\nstandard output if this parameter is left unspecified."
          synonyms:
          - -o
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]], --samples [COND [COND ...]]\nSamples that\
            \ will be exported, specified by conditions\nsuch as 'aff=1' and 'filename\
            \ like \"MG%\"'. Multiple\nsamples could be exported to a file if the\
            \ output\nformat allows. No sample will be outputted if this\nparameter\
            \ is ignored."
          synonyms:
          - -s
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Format of the exported file. It can be one of the\nvariant\
            \ tools supported file types such as VCF (cf.\n'vtools show formats')\
            \ or a local format specification\nfile (with extension .fmt). Some formats\
            \ accept\nadditional parameters (cf. 'vtools show format FMT')\nand allows\
            \ you to export additional or alternative\nfields."
          synonyms:
          - --format
          args: !SimpleFlagArg
            name: FORMAT
          optional: true
        - !Flag
          description: "Build version of the reference genome (e.g. hg18) of\nthe\
            \ exported data. It can only be one of the primary\n(default) of alternative\
            \ (if exists) reference genome\nof the project."
          synonyms:
          - --build
          args: !SimpleFlagArg
            name: BUILD
          optional: true
        - !Flag
          description: "[HEADER [HEADER ...]]\nA complete header or a list of names\
            \ that will be\njoined by a delimiter specified by the file format to\n\
            form a header. If a special name - is specified, the\nheader will be read\
            \ from the standard input, which is\nthe preferred way to specify large\
            \ multi-line headers\n(e.g. cat myheader | vtools export --header -).\n\
            Strings in the form of %(VAR)s will be interpolated to\nvalues of variable\
            \ VAR, which can be \"sample_names\"\nfor list of sample names, \"datetime\"\
            \ for current date\nand time, and \"command\" for the command used to\
            \ create\noutput."
          synonyms:
          - --header
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Number of processes to export data. Multiple threads\nwill\
            \ be automatically used if there are a large number\nof samples."
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: JOBS
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1).\n"
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools export [-h] [-o [OUTPUT]] [-s [COND [COND ...]]]\n\
          \                     [--format FORMAT] [--build BUILD]\n              \
          \       [--header [HEADER [HEADER ...]]] [-j JOBS] [-v {0,1,2,3}]\n    \
          \                 table\n\nExport variants and genotypes in text, vcf and\
          \ other formats.\n\npositional arguments:\n  table                 A variant\
          \ table whose variants will be exported. If\n                        parameter\
          \ --samples is specified, only variants belong\n                       \
          \ to one or more of the samples will be exported.\n\noptional arguments:\n\
          \  -h, --help            show this help message and exit\n  -o [OUTPUT],\
          \ --output [OUTPUT]\n                        Name of output file. Output\
          \ will be written to the\n                        standard output if this\
          \ parameter is left unspecified.\n  -s [COND [COND ...]], --samples [COND\
          \ [COND ...]]\n                        Samples that will be exported, specified\
          \ by conditions\n                        such as 'aff=1' and 'filename like\
          \ \"MG%\"'. Multiple\n                        samples could be exported\
          \ to a file if the output\n                        format allows. No sample\
          \ will be outputted if this\n                        parameter is ignored.\n\
          \  --format FORMAT       Format of the exported file. It can be one of the\n\
          \                        variant tools supported file types such as VCF\
          \ (cf.\n                        'vtools show formats') or a local format\
          \ specification\n                        file (with extension .fmt). Some\
          \ formats accept\n                        additional parameters (cf. 'vtools\
          \ show format FMT')\n                        and allows you to export additional\
          \ or alternative\n                        fields.\n  --build BUILD     \
          \    Build version of the reference genome (e.g. hg18) of\n            \
          \            the exported data. It can only be one of the primary\n    \
          \                    (default) of alternative (if exists) reference genome\n\
          \                        of the project.\n  --header [HEADER [HEADER ...]]\n\
          \                        A complete header or a list of names that will\
          \ be\n                        joined by a delimiter specified by the file\
          \ format to\n                        form a header. If a special name -\
          \ is specified, the\n                        header will be read from the\
          \ standard input, which is\n                        the preferred way to\
          \ specify large multi-line headers\n                        (e.g. cat myheader\
          \ | vtools export --header -).\n                        Strings in the form\
          \ of %(VAR)s will be interpolated to\n                        values of\
          \ variable VAR, which can be \"sample_names\"\n                        for\
          \ list of sample names, \"datetime\" for current date\n                \
          \        and time, and \"command\" for the command used to create\n    \
          \                    output.\n  -j JOBS, --jobs JOBS  Number of processes\
          \ to export data. Multiple threads\n                        will be automatically\
          \ used if there are a large number\n                        of samples.\n\
          \  -v {0,1,2,3}, --verbosity {0,1,2,3}\n                        Output error\
          \ and warning (0), info (1), debug (2) and\n                        trace\
          \ (3) information to standard output (default to\n                     \
          \   1).\n"
        generated_using: &id003
        - --help
      - !Command
        command:
        - vtools
        - import
        positional:
        - !Positional
          description: "A list of files that will be imported. The file should\nbe\
            \ delimiter separated with format described by\nparameter --format. Gzipped\
            \ files are acceptable. If a\npreprocessor is defined in the format, input\
            \ files\nwill be processed by the preprocessor before they are\nimported."
          position: 0
          name: input_files
          optional: false
        named:
        - !Flag
          description: "Build version of the reference genome (e.g. hg18) of\nthe\
            \ input data. If unspecified, it is assumed to be\nthe primary reference\
            \ genome of the project. If a\nreference genome that is different from\
            \ the primary\nreference genome of the project is specified, it will\n\
            become the alternative reference genome of the\nproject. The UCSC liftover\
            \ tool will be automatically\ncalled to map input coordinates between\
            \ the primary\nand alternative reference genomes. If you are\nuncertain\
            \ about the reference genome used in the data,\nuse a recent standard\
            \ reference genome (e.g. hg19) and\nvalidate it after the data is imported\
            \ (c.f. \"vtools\nadmin --validate_build\")."
          synonyms:
          - --build
          args: !SimpleFlagArg
            name: BUILD
          optional: true
        - !Flag
          description: "Format of the input text file. It can be one of the\nvariant\
            \ tools supported file types such as VCF (cf.\n'vtools show formats'),\
            \ or a local format\nspecification file (with extension .fmt). If\nunspecified,\
            \ variant tools will try to guess format\nfrom file extension. Some file\
            \ formats accept\nparameters (cf. 'vtools show format FMT') and allow\n\
            you to import additional or alternative fields defined\nfor the format."
          synonyms:
          - --format
          args: !SimpleFlagArg
            name: FORMAT
          optional: true
        - !Flag
          description: "[SAMPLE_NAME [SAMPLE_NAME ...]], --sample-name [SAMPLE_NAME\
            \ [SAMPLE_NAME ...]]\nName of the samples imported by the input files.\
            \ The\nsame names will be used for all files if multiple\nfiles are imported.\
            \ If unspecified, headers of the\ngenotype columns of the last comment\
            \ line (line starts\nwith #) of the input files will be used (and thus\n\
            allow different sample names for input files). If\nsample names are specified\
            \ for input files without\ngenotype, samples will be created without genotype.\
            \ If\nsample names cannot be determined from input file and\ntheir is\
            \ no ambiguity (only one sample is imported), a\nsample with empty sample\
            \ name will be created."
          synonyms:
          - --sample_name
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Import files even if the files have been imported\nbefore.\
            \ This option can be used to import from updated\nfile or continue disrupted\
            \ import, but will not remove\nwrongfully imported variants from the master\
            \ variant\ntable."
          synonyms:
          - -f
          - --force
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Number of processes to import input file. Variant\ntools by\
            \ default uses four processes to import\nvariants and samples genotypes\
            \ in parallel, and you\ncan use more or less processes by adjusting this\n\
            parameter. Due to the overhead of inter-process\ncommunication, more jobs\
            \ do not automatically lead to\nbetter performance."
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: N
          optional: true
        - !Flag
          description: Import another VCF file.
          synonyms:
          - --sort
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1).\n"
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools import [-h] [--build BUILD] [--format FORMAT]\n\
          \                     [--sample_name [SAMPLE_NAME [SAMPLE_NAME ...]]] [-f]\n\
          \                     [-j N] [--sort] [-v {0,1,2,3}]\n                 \
          \    input_files [input_files ...]\n\nImport variants and related sample\
          \ genotype from one or more delimiter\nseparated files (e.g. VCF and a number\
          \ of indel formats).\n\npositional arguments:\n  input_files           A\
          \ list of files that will be imported. The file should\n               \
          \         be delimiter separated with format described by\n            \
          \            parameter --format. Gzipped files are acceptable. If a\n  \
          \                      preprocessor is defined in the format, input files\n\
          \                        will be processed by the preprocessor before they\
          \ are\n                        imported.\n\noptional arguments:\n  -h, --help\
          \            show this help message and exit\n  --build BUILD         Build\
          \ version of the reference genome (e.g. hg18) of\n                     \
          \   the input data. If unspecified, it is assumed to be\n              \
          \          the primary reference genome of the project. If a\n         \
          \               reference genome that is different from the primary\n  \
          \                      reference genome of the project is specified, it\
          \ will\n                        become the alternative reference genome\
          \ of the\n                        project. The UCSC liftover tool will be\
          \ automatically\n                        called to map input coordinates\
          \ between the primary\n                        and alternative reference\
          \ genomes. If you are\n                        uncertain about the reference\
          \ genome used in the data,\n                        use a recent standard\
          \ reference genome (e.g. hg19) and\n                        validate it\
          \ after the data is imported (c.f. \"vtools\n                        admin\
          \ --validate_build\").\n  --format FORMAT       Format of the input text\
          \ file. It can be one of the\n                        variant tools supported\
          \ file types such as VCF (cf.\n                        'vtools show formats'),\
          \ or a local format\n                        specification file (with extension\
          \ .fmt). If\n                        unspecified, variant tools will try\
          \ to guess format\n                        from file extension. Some file\
          \ formats accept\n                        parameters (cf. 'vtools show format\
          \ FMT') and allow\n                        you to import additional or alternative\
          \ fields defined\n                        for the format.\n  --sample_name\
          \ [SAMPLE_NAME [SAMPLE_NAME ...]], --sample-name [SAMPLE_NAME [SAMPLE_NAME\
          \ ...]]\n                        Name of the samples imported by the input\
          \ files. The\n                        same names will be used for all files\
          \ if multiple\n                        files are imported. If unspecified,\
          \ headers of the\n                        genotype columns of the last comment\
          \ line (line starts\n                        with #) of the input files\
          \ will be used (and thus\n                        allow different sample\
          \ names for input files). If\n                        sample names are specified\
          \ for input files without\n                        genotype, samples will\
          \ be created without genotype. If\n                        sample names\
          \ cannot be determined from input file and\n                        their\
          \ is no ambiguity (only one sample is imported), a\n                   \
          \     sample with empty sample name will be created.\n  -f, --force    \
          \       Import files even if the files have been imported\n            \
          \            before. This option can be used to import from updated\n  \
          \                      file or continue disrupted import, but will not remove\n\
          \                        wrongfully imported variants from the master variant\n\
          \                        table.\n  -j N, --jobs N        Number of processes\
          \ to import input file. Variant\n                        tools by default\
          \ uses four processes to import\n                        variants and samples\
          \ genotypes in parallel, and you\n                        can use more or\
          \ less processes by adjusting this\n                        parameter. Due\
          \ to the overhead of inter-process\n                        communication,\
          \ more jobs do not automatically lead to\n                        better\
          \ performance.\n  --sort                Import another VCF file.\n  -v {0,1,2,3},\
          \ --verbosity {0,1,2,3}\n                        Output error and warning\
          \ (0), info (1), debug (2) and\n                        trace (3) information\
          \ to standard output (default to\n                        1).\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - associate
        positional:
        - !Positional
          description: Table of variants to be tested.
          position: 0
          name: variants
          optional: false
        - !Positional
          description: "A list of phenotypes that will be passed to the\nassociation\
            \ statistics calculator. Currently only a\nsingle phenotype is allowed."
          position: 1
          name: phenotypes
          optional: false
        named:
        - !Flag
          description: Number of processes to carry out association tests.
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: N
          optional: true
        - !Flag
          description: "Submit vtools association job to cluster, please check\nbash\
            \ script."
          synonyms:
          - -mpi
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "[COVARIATES [COVARIATES ...]]\nOptional phenotypes that will\
            \ be passed to statistical\ntests as covariates. Values of these phenotypes\
            \ should\nbe integer or float."
          synonyms:
          - --covariates
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[VAR_INFO [VAR_INFO ...]], --var-info [VAR_INFO [VAR_INFO\
            \ ...]]\nOptional variant information fields (e.g. minor allele\nfrequency\
            \ from 1000 genomes project) that will be\npassed to statistical tests.\
            \ The fields could be any\nannotation fields of with integer or float\
            \ values,\nincluding those from used annotation databases (use\n\"vtools\
            \ show fields\" to see a list of usable fields)."
          synonyms:
          - --var_info
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[GENO_INFO [GENO_INFO ...]], --geno-info [GENO_INFO [GENO_INFO\
            \ ...]]\nOptional genotype fields (e.g. quality score of\ngenotype calls,\
            \ cf. \"vtools show genotypes\") that will\nbe passed to statistical tests.\
            \ Note that the fields\nshould exist for all samples that are tested."
          synonyms:
          - --geno_info
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Field name of genotype, default to 'GT'. If another\nfield\
            \ name is specified, for example if imputation\nscores are available as\
            \ 'DS' (dosage), then the given\nfield 'DS' will be used as genotype data\
            \ for\nassociation analysis."
          synonyms:
          - --geno_name
          - --geno-name
          args: !SimpleFlagArg
            name: GENO_NAME
          optional: true
        - !Flag
          description: "Method of one or more association tests. Parameters\nfor each\
            \ method should be specified together as a\nquoted long argument (e.g.\
            \ --methods \"m --alternative\n2\" \"m1 --permute 1000\"), although the\
            \ common method\nparameters can be specified separately, as long as\n\
            they do not conflict with command arguments. (e.g.\n--methods m1 m2 -p\
            \ 1000 is equivalent to --methods \"m1\n-p 1000\" \"m2 -p 1000\".). You\
            \ can use command 'vtools\nshow tests' for a list of association tests,\
            \ and\n'vtools show test TST' for details about a test.\nCustomized association\
            \ tests can be specified as\nmod_name.test_name where mod_name should\
            \ be a Python\nmodule (system wide or in the current directory), and\n\
            test_name should be a subclass of NullTest."
          synonyms:
          - -m
          - --methods
          args: !RepeatFlagArg
            name: METHODS
          optional: true
        - !Flag
          description: "[GROUP_BY [GROUP_BY ...]], --group_by [GROUP_BY [GROUP_BY\
            \ ...]], --group-by [GROUP_BY [GROUP_BY ...]]\nGroup variants by fields.\
            \ If specified, variants will\nbe separated into groups and are tested\
            \ one by one."
          synonyms:
          - -g
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]], --samples [COND [COND ...]]\nLimiting variants\
            \ from samples that match conditions\nthat use columns shown in command\
            \ 'vtools show sample'\n(e.g. 'aff=1', 'filename like \"MG%\"'). Each\
            \ line of\nthe sample table (vtools show samples) is considered\nas samples.\
            \ If genotype of a physical sample is\nscattered into multiple samples\
            \ (e.g. imported\nchromosome by chromosome), they should be merged using\n\
            command vtools admin."
          synonyms:
          - -s
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]]\nLimiting genotypes to those matching conditions\
            \ that\nuse columns shown in command 'vtools show genotypes'\n(e.g. 'GQ>15').\
            \ Genotypes failing such conditions will\nbe regarded as missing genotypes."
          synonyms:
          - --genotypes
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPR [EXPR ...]], --discard-samples [EXPR [EXPR ...]]\nDiscard\
            \ samples that match specified conditions within\neach test group (defined\
            \ by parameter --group_by).\nCurrently only expressions in the form of\
            \ \"%(NA)>p\" is\nprovidedted to remove samples that have more 100*p\n\
            percent of missing values."
          synonyms:
          - --discard_samples
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPR [EXPR ...]], --discard-variants [EXPR [EXPR ...]]\n\
            Discard variant sites based on specified conditions\nwithin each test\
            \ group. Currently only expressions in\nthe form of '%(NA)>p' is provided\
            \ to remove variant\nsites that have more than 100*p percent of missing\n\
            genotypes. Note that this filter will be applied after\n\"--discard_samples\"\
            \ is applied, if the latter also is\nspecified."
          synonyms:
          - --discard_variants
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Name of a database to which results from association\ntests\
            \ will be written. Groups with existing results in\nthe database will\
            \ be ignored unless parameter --force\nis used."
          synonyms:
          - --to_db
          - --to-db
          args: !SimpleFlagArg
            name: annoDB
          optional: true
        - !Flag
          description: "Delimiter use to separate columns of output. The\ndefault\
            \ output uses multiple spaces to align columns\nof output. Use '-d,' for\
            \ csv output, or -d'\\t' for\ntab-delimited output."
          synonyms:
          - -d
          - --delimiter
          args: !SimpleFlagArg
            name: DELIMITER
          optional: true
        - !Flag
          description: "Analyze all groups including those that have recorded\nresults\
            \ in the result database.\n"
          synonyms:
          - -f
          - --force
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools associate [-h] [--covariates [COVARIATES [COVARIATES\
          \ ...]]]\n                        [--var_info [VAR_INFO [VAR_INFO ...]]]\n\
          \                        [--geno_info [GENO_INFO [GENO_INFO ...]]]\n   \
          \                     [--geno_name GENO_NAME] [-m METHODS [METHODS ...]]\n\
          \                        [-g [GROUP_BY [GROUP_BY ...]]] [-s [COND [COND\
          \ ...]]]\n                        [--genotypes [COND [COND ...]]]\n    \
          \                    [--discard_samples [EXPR [EXPR ...]]]\n           \
          \             [--discard_variants [EXPR [EXPR ...]]]\n                 \
          \       [--to_db annoDB] [-d DELIMITER] [-f] [-j N] [-mpi]\n           \
          \             [-v {0,1,2,3}]\n                        variants phenotypes\n\
          \nCall one or more statistical association tests and return test results\
          \ as\nfields to variants tested.\n\noptional arguments:\n  -h, --help  \
          \          show this help message and exit\n  -j N, --jobs N        Number\
          \ of processes to carry out association tests.\n  -mpi                 \
          \ Submit vtools association job to cluster, please check\n             \
          \           bash script.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n      \
          \                  Output error and warning (0), info (1), debug (2) and\n\
          \                        trace (3) information to standard output (default\
          \ to\n                        1).\n\nGenotype, phenotype, and covariates:\n\
          \  variants              Table of variants to be tested.\n  phenotypes \
          \           A list of phenotypes that will be passed to the\n          \
          \              association statistics calculator. Currently only a\n   \
          \                     single phenotype is allowed.\n  --covariates [COVARIATES\
          \ [COVARIATES ...]]\n                        Optional phenotypes that will\
          \ be passed to statistical\n                        tests as covariates.\
          \ Values of these phenotypes should\n                        be integer\
          \ or float.\n  --var_info [VAR_INFO [VAR_INFO ...]], --var-info [VAR_INFO\
          \ [VAR_INFO ...]]\n                        Optional variant information\
          \ fields (e.g. minor allele\n                        frequency from 1000\
          \ genomes project) that will be\n                        passed to statistical\
          \ tests. The fields could be any\n                        annotation fields\
          \ of with integer or float values,\n                        including those\
          \ from used annotation databases (use\n                        \"vtools\
          \ show fields\" to see a list of usable fields).\n  --geno_info [GENO_INFO\
          \ [GENO_INFO ...]], --geno-info [GENO_INFO [GENO_INFO ...]]\n          \
          \              Optional genotype fields (e.g. quality score of\n       \
          \                 genotype calls, cf. \"vtools show genotypes\") that will\n\
          \                        be passed to statistical tests. Note that the fields\n\
          \                        should exist for all samples that are tested.\n\
          \  --geno_name GENO_NAME, --geno-name GENO_NAME\n                      \
          \  Field name of genotype, default to 'GT'. If another\n               \
          \         field name is specified, for example if imputation\n         \
          \               scores are available as 'DS' (dosage), then the given\n\
          \                        field 'DS' will be used as genotype data for\n\
          \                        association analysis.\n\nAssociation tests:\n \
          \ -m METHODS [METHODS ...], --methods METHODS [METHODS ...]\n          \
          \              Method of one or more association tests. Parameters\n   \
          \                     for each method should be specified together as a\n\
          \                        quoted long argument (e.g. --methods \"m --alternative\n\
          \                        2\" \"m1 --permute 1000\"), although the common\
          \ method\n                        parameters can be specified separately,\
          \ as long as\n                        they do not conflict with command\
          \ arguments. (e.g.\n                        --methods m1 m2 -p 1000 is equivalent\
          \ to --methods \"m1\n                        -p 1000\" \"m2 -p 1000\".).\
          \ You can use command 'vtools\n                        show tests' for a\
          \ list of association tests, and\n                        'vtools show test\
          \ TST' for details about a test.\n                        Customized association\
          \ tests can be specified as\n                        mod_name.test_name\
          \ where mod_name should be a Python\n                        module (system\
          \ wide or in the current directory), and\n                        test_name\
          \ should be a subclass of NullTest.\n  -g [GROUP_BY [GROUP_BY ...]], --group_by\
          \ [GROUP_BY [GROUP_BY ...]], --group-by [GROUP_BY [GROUP_BY ...]]\n    \
          \                    Group variants by fields. If specified, variants will\n\
          \                        be separated into groups and are tested one by\
          \ one.\n\nSelect and filter samples and genotypes:\n  -s [COND [COND ...]],\
          \ --samples [COND [COND ...]]\n                        Limiting variants\
          \ from samples that match conditions\n                        that use columns\
          \ shown in command 'vtools show sample'\n                        (e.g. 'aff=1',\
          \ 'filename like \"MG%\"'). Each line of\n                        the sample\
          \ table (vtools show samples) is considered\n                        as\
          \ samples. If genotype of a physical sample is\n                       \
          \ scattered into multiple samples (e.g. imported\n                     \
          \   chromosome by chromosome), they should be merged using\n           \
          \             command vtools admin.\n  --genotypes [COND [COND ...]]\n \
          \                       Limiting genotypes to those matching conditions\
          \ that\n                        use columns shown in command 'vtools show\
          \ genotypes'\n                        (e.g. 'GQ>15'). Genotypes failing\
          \ such conditions will\n                        be regarded as missing genotypes.\n\
          \  --discard_samples [EXPR [EXPR ...]], --discard-samples [EXPR [EXPR ...]]\n\
          \                        Discard samples that match specified conditions\
          \ within\n                        each test group (defined by parameter\
          \ --group_by).\n                        Currently only expressions in the\
          \ form of \"%(NA)>p\" is\n                        providedted to remove\
          \ samples that have more 100*p\n                        percent of missing\
          \ values.\n  --discard_variants [EXPR [EXPR ...]], --discard-variants [EXPR\
          \ [EXPR ...]]\n                        Discard variant sites based on specified\
          \ conditions\n                        within each test group. Currently\
          \ only expressions in\n                        the form of '%(NA)>p' is\
          \ provided to remove variant\n                        sites that have more\
          \ than 100*p percent of missing\n                        genotypes. Note\
          \ that this filter will be applied after\n                        \"--discard_samples\"\
          \ is applied, if the latter also is\n                        specified.\n\
          \nOutput of test statistics:\n  --to_db annoDB, --to-db annoDB\n       \
          \                 Name of a database to which results from association\n\
          \                        tests will be written. Groups with existing results\
          \ in\n                        the database will be ignored unless parameter\
          \ --force\n                        is used.\n  -d DELIMITER, --delimiter\
          \ DELIMITER\n                        Delimiter use to separate columns of\
          \ output. The\n                        default output uses multiple spaces\
          \ to align columns\n                        of output. Use '-d,' for csv\
          \ output, or -d'\\t' for\n                        tab-delimited output.\n\
          \  -f, --force           Analyze all groups including those that have recorded\n\
          \                        results in the result database.\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - admin
        positional:
        - !Positional
          description: ''
          position: 0
          name: TYPE
          optional: true
        named:
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "[TYPE], --update-resource [TYPE]\nDownload resources of specified\
            \ type, which can be\n'current' (latest version of all resources), 'all'\n\
            (all resources including obsolete databases),\n'existing' (only update\
            \ resources that exist locally),\n'hg18' or 'hg19' (all resources for\
            \ reference genome\nhg18 or hg19), 'annotation' (all current annotation\n\
            databases), 'format' (all formats), and 'snapshot'\n(all online snapshots).\
            \ Identical resources that are\navailable locally (under ~/.variant_tools\
            \ or runtime\noption $local_resource) are ignored. Note that option\n\
            'all' will download all versions of annotation\ndatabases which can be\
            \ slow and take a lot of disk\nspaces."
          synonyms:
          - --update_resource
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Mirror the main variant tools repository to a local\ndirectory.\
            \ This command will check files under dest,\ndownload all missing or outdated\
            \ files. Existing files\nthat do not belong to the repository will not\
            \ be\nremoved."
          synonyms:
          - --mirror_repository
          - --mirror-repository
          args: !SimpleFlagArg
            name: dest
          optional: true
        - !Flag
          description: "Merge samples with the same sample names by combining\ngenotypes\
            \ belonging to these samples. Phenotypes\nrelated to individual samples\
            \ will be merged."
          synonyms:
          - --merge_samples
          - --merge-samples
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "This argument takes a condition by which samples are\nselected,\
            \ followed by either a new sample name (assign\na new name to selected\
            \ samples) or an OLDNAME NEWNAME\npair of patterns for which the first\
            \ instance of\nOLDNAME in sample names will be replaced by NEWNAME."
          synonyms:
          - --rename_samples
          - --rename-samples
          args: !RepeatFlagArg
            name: COND
          optional: true
        - !Flag
          description: "NEW_NAME, --rename-table NAME NEW_NAME\nChange table NAME\
            \ to a NEW_NAME."
          synonyms:
          - --rename_table
          args: !SimpleFlagArg
            name: NAME
          optional: true
        - !Flag
          description: "NEW_DESCRIPTION, --describe-table TABLE NEW_DESCRIPTION\n\
            Update description for TABLE with a NEW_DESCRIPTION."
          synonyms:
          - --describe_table
          args: !SimpleFlagArg
            name: TABLE
          optional: true
        - !Flag
          description: "Validate the build of project's reference genome by\nchecking\
            \ if the reference alleles of variants agree\nwith the reference genome\
            \ sequence. A reference genome\nwill be automatically downloaded if it\
            \ does not exist\nin the local resource directory."
          synonyms:
          - --validate_build
          - --validate-build
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[{report,force-heterozygote}], --validate-sex [{report,force-heterozygote}]\n\
            Validate the sex of samples by checking the genotypes\nof samples on sex\
            \ chromosomes (excluding pseudo-\nautosomal regions). Sex of samples are\
            \ determined by a\nphenotype named sex or gender with values 1/2, M/F\
            \ or\nMale/Female. Inconsistency will be reported if, for\nexample, a\
            \ female sample has genotypes on chromosome\nY. This argument accepts\
            \ an option argument, which is\nreport by default (report inconsistent\
            \ genotype or\nsex), but can also be 'force-heterozygote' for male\nindividuals\
            \ on chromosome X."
          synonyms:
          - --validate_sex
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "MESSAGE, --save-snapeshot NAME MESSAGE\nCreate a snapshot\
            \ of the current project with NAME,\nwhich could be re-loaded using command\
            \ 'vtools admin\n--load_snapshot'. A filename with extension .tar, .tgz\n\
            or .tar.gz can be used to save the snapshot to a\nspecific directory with\
            \ compression but such snapshots\nare not listed by command 'vtools show\
            \ snapshots'."
          synonyms:
          - --save_snapshot
          args: !SimpleFlagArg
            name: NAME
          optional: true
        - !Flag
          description: "[FILE [FILE ...]], --extra-files [FILE [FILE ...]]\nAdditional\
            \ files that will be saved along with the\nproject and genotype databases.\
            \ This could include\ncustomized format files, project-specific annotations,\n\
            and results. Files outside of the current project\ndirectory are not allowed\
            \ due to security\nconsiderations."
          synonyms:
          - --extra_files
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Revert the current project to specified snapshot. All\nchanges\
            \ since the that snapshot will be lost. The NAME\nshould be one of the\
            \ project snapshots or online\nsnapshots listed by command 'vtools show\
            \ snapshots',\nor name of a local snapshot file (with extension .tar,\n\
            .tgz or .tar.gz)."
          synonyms:
          - --load_snapshot
          - --load-snapshot
          args: !SimpleFlagArg
            name: NAME
          optional: true
        - !Flag
          description: "Set value to internal options such as the batch size\nfor\
            \ database options. The default values of these\noptions were chosen to\
            \ fit most usage patterns but\ntweaking them might provide better performance\
            \ under\ncertain circumstances. Please use command \"vtools show\nruntime_options\"\
            \ to list all currently supported\nruntime options."
          synonyms:
          - --set_runtime_option
          - --set-runtime-option
          args: !RepeatFlagArg
            name: OPTION
          optional: true
        - !Flag
          description: Reset value to a runtime option to its default value.
          synonyms:
          - --reset_runtime_option
          - --reset-runtime-option
          args: !SimpleFlagArg
            name: OPT
          optional: true
        - !Flag
          description: "Save option to user_options.py so that it will be\nautomatically\
            \ set for all user projects."
          synonyms:
          - -g
          - --global
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Convert fasta files to a crr file (a binary format for\nfaster\
            \ access) that can be used by variant tools. This\nis only needed if you\
            \ are working with a reference\ngenome that is not supported by variant\
            \ tools. This\nparameter accepts a list of fastq files (URLs and .gz\n\
            format are acceptable) followed by the name of the\n.crr file. The .crr\
            \ file should be put under the\nproject directory or the local resource\
            \ directory\n(under directory reference) to be usable by variant\ntools.\n"
          synonyms:
          - --fasta2crr
          args: !RepeatFlagArg
            name: FASTA
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools admin [-h] [--update_resource [TYPE]] [--mirror_repository\
          \ dest]\n                    [--merge_samples] [--rename_samples COND [COND\
          \ ...]]\n                    [--rename_table NAME NEW_NAME]\n          \
          \          [--describe_table TABLE NEW_DESCRIPTION]\n                  \
          \  [--validate_build]\n                    [--validate_sex [{report,force-heterozygote}]]\n\
          \                    [--save_snapshot NAME MESSAGE]\n                  \
          \  [--extra_files [FILE [FILE ...]]] [--load_snapshot NAME]\n          \
          \          [--set_runtime_option OPTION [OPTION ...]]\n                \
          \    [--reset_runtime_option OPT] [-g]\n                    [--fasta2crr\
          \ FASTA [FASTA ...]] [-v {0,1,2,3}]\n\nOptimize or modify projects. Currently\
          \ supports merging and rename of samples\n\noptional arguments:\n  -h, --help\
          \            show this help message and exit\n  -v {0,1,2,3}, --verbosity\
          \ {0,1,2,3}\n                        Output error and warning (0), info\
          \ (1), debug (2) and\n                        trace (3) information to standard\
          \ output (default to\n                        1).\n\nDownload or update\
          \ resources:\n  --update_resource [TYPE], --update-resource [TYPE]\n   \
          \                     Download resources of specified type, which can be\n\
          \                        'current' (latest version of all resources), 'all'\n\
          \                        (all resources including obsolete databases),\n\
          \                        'existing' (only update resources that exist locally),\n\
          \                        'hg18' or 'hg19' (all resources for reference genome\n\
          \                        hg18 or hg19), 'annotation' (all current annotation\n\
          \                        databases), 'format' (all formats), and 'snapshot'\n\
          \                        (all online snapshots). Identical resources that\
          \ are\n                        available locally (under ~/.variant_tools\
          \ or runtime\n                        option $local_resource) are ignored.\
          \ Note that option\n                        'all' will download all versions\
          \ of annotation\n                        databases which can be slow and\
          \ take a lot of disk\n                        spaces.\n  --mirror_repository\
          \ dest, --mirror-repository dest\n                        Mirror the main\
          \ variant tools repository to a local\n                        directory.\
          \ This command will check files under dest,\n                        download\
          \ all missing or outdated files. Existing files\n                      \
          \  that do not belong to the repository will not be\n                  \
          \      removed.\n\nMerge samples:\n  --merge_samples, --merge-samples\n\
          \                        Merge samples with the same sample names by combining\n\
          \                        genotypes belonging to these samples. Phenotypes\n\
          \                        related to individual samples will be merged.\n\
          \nRename samples:\n  --rename_samples COND [COND ...], --rename-samples\
          \ COND [COND ...]\n                        This argument takes a condition\
          \ by which samples are\n                        selected, followed by either\
          \ a new sample name (assign\n                        a new name to selected\
          \ samples) or an OLDNAME NEWNAME\n                        pair of patterns\
          \ for which the first instance of\n                        OLDNAME in sample\
          \ names will be replaced by NEWNAME.\n\nRename/describe tables:\n  --rename_table\
          \ NAME NEW_NAME, --rename-table NAME NEW_NAME\n                        Change\
          \ table NAME to a NEW_NAME.\n  --describe_table TABLE NEW_DESCRIPTION, --describe-table\
          \ TABLE NEW_DESCRIPTION\n                        Update description for\
          \ TABLE with a NEW_DESCRIPTION.\n\nValidate reference genome:\n  --validate_build,\
          \ --validate-build\n                        Validate the build of project's\
          \ reference genome by\n                        checking if the reference\
          \ alleles of variants agree\n                        with the reference\
          \ genome sequence. A reference genome\n                        will be automatically\
          \ downloaded if it does not exist\n                        in the local\
          \ resource directory.\n\nValidate reported sex:\n  --validate_sex [{report,force-heterozygote}],\
          \ --validate-sex [{report,force-heterozygote}]\n                       \
          \ Validate the sex of samples by checking the genotypes\n              \
          \          of samples on sex chromosomes (excluding pseudo-\n          \
          \              autosomal regions). Sex of samples are determined by a\n\
          \                        phenotype named sex or gender with values 1/2,\
          \ M/F or\n                        Male/Female. Inconsistency will be reported\
          \ if, for\n                        example, a female sample has genotypes\
          \ on chromosome\n                        Y. This argument accepts an option\
          \ argument, which is\n                        report by default (report\
          \ inconsistent genotype or\n                        sex), but can also be\
          \ 'force-heterozygote' for male\n                        individuals on\
          \ chromosome X.\n\nSave and load snapshots:\n  --save_snapshot NAME MESSAGE,\
          \ --save-snapeshot NAME MESSAGE\n                        Create a snapshot\
          \ of the current project with NAME,\n                        which could\
          \ be re-loaded using command 'vtools admin\n                        --load_snapshot'.\
          \ A filename with extension .tar, .tgz\n                        or .tar.gz\
          \ can be used to save the snapshot to a\n                        specific\
          \ directory with compression but such snapshots\n                      \
          \  are not listed by command 'vtools show snapshots'.\n  --extra_files [FILE\
          \ [FILE ...]], --extra-files [FILE [FILE ...]]\n                       \
          \ Additional files that will be saved along with the\n                 \
          \       project and genotype databases. This could include\n           \
          \             customized format files, project-specific annotations,\n \
          \                       and results. Files outside of the current project\n\
          \                        directory are not allowed due to security\n   \
          \                     considerations.\n  --load_snapshot NAME, --load-snapshot\
          \ NAME\n                        Revert the current project to specified\
          \ snapshot. All\n                        changes since the that snapshot\
          \ will be lost. The NAME\n                        should be one of the project\
          \ snapshots or online\n                        snapshots listed by command\
          \ 'vtools show snapshots',\n                        or name of a local snapshot\
          \ file (with extension .tar,\n                        .tgz or .tar.gz).\n\
          \nSet values for some various internal options.:\n  --set_runtime_option\
          \ OPTION [OPTION ...], --set-runtime-option OPTION [OPTION ...]\n      \
          \                  Set value to internal options such as the batch size\n\
          \                        for database options. The default values of these\n\
          \                        options were chosen to fit most usage patterns\
          \ but\n                        tweaking them might provide better performance\
          \ under\n                        certain circumstances. Please use command\
          \ \"vtools show\n                        runtime_options\" to list all currently\
          \ supported\n                        runtime options.\n  --reset_runtime_option\
          \ OPT, --reset-runtime-option OPT\n                        Reset value to\
          \ a runtime option to its default value.\n  -g, --global          Save option\
          \ to user_options.py so that it will be\n                        automatically\
          \ set for all user projects.\n\nMisc utilities:\n  --fasta2crr FASTA [FASTA\
          \ ...]\n                        Convert fasta files to a crr file (a binary\
          \ format for\n                        faster access) that can be used by\
          \ variant tools. This\n                        is only needed if you are\
          \ working with a reference\n                        genome that is not supported\
          \ by variant tools. This\n                        parameter accepts a list\
          \ of fastq files (URLs and .gz\n                        format are acceptable)\
          \ followed by the name of the\n                        .crr file. The .crr\
          \ file should be put under the\n                        project directory\
          \ or the local resource directory\n                        (under directory\
          \ reference) to be usable by variant\n                        tools.\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - compare
        positional:
        - !Positional
          description: "variant tables to compare. Wildcard characters * and ?\ncan\
            \ be used to specify multiple tables. A table name\nwill be automatically\
            \ repeated for the comparison of\ngenotype of multiple samples if only\
            \ one table is\nspecified."
          position: 0
          name: tables
          optional: false
        named:
        - !Flag
          description: "[TABLE [DESC ...]]\nPrint the number (default) or save variants\
            \ with TYPE\nin the TYPE of any of the tables (T1 | T2 | T3 ...) to\n\
            TABLE if a name is specified. An optional message can\nbe added to describe\
            \ the table."
          synonyms:
          - --union
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[TABLE [DESC ...]]\nPrint the number (default) or save variants\
            \ with TYPE\nin the TYPE of all the tables (T1 & T2 & T3 ...) to\nTABLE\
            \ if a name is specified. An optional message can\nbe added to describe\
            \ the table."
          synonyms:
          - --intersection
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[TABLE [DESC ...]]\nPrint the number (default) or save variants\
            \ with TYPE\nin the TYPE of the first, but not in the TYPE of\nothers\
            \ (T1 - T2 - T3...) to TABLE if a name is\nspecified. An optional message\
            \ can be added to\ndescribe the table."
          synonyms:
          - --difference
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Evaluate a set expression with table names\nrepresenting variants\
            \ in these tables. Operators |\n(or), & (and), - (difference) and ^ (A\
            \ or B but not\nboth) are allowed. The results will be saved to table\n\
            if the result is assigned to a name (e.g. --expression\n'D=A-(B&C)').\
            \ The table names in the expression can be\nwritten as _1, _2 etc if tables\
            \ are listed before the\noption, and be used to populate the list of tables\
            \ if\nit was left unspecified."
          synonyms:
          - --expression
          args: !RepeatFlagArg
            name: DESC
          optional: true
        - !Flag
          description: "Compare variants (chr, pos, ref, alt), site (chr,\npos), or\
            \ genotype (chr, pos, ref, alt, GT for a\nspecified sample) of variants.\
            \ The results are\nvariants from all input tables that match specified\n\
            condition. The default comparison TYPE compares\nvariants in input variant\
            \ tables. For the comparison\nof sites, the position of all variants are\
            \ collected\nand compared, and variants (in all tables) with site\nin\
            \ resulting set of sites are returned. For the\ncomparison of genotypes,\
            \ the genotypes of specified\nsamples for all variants (see option --samples)\
            \ are\ncollected and compared, and variants with genotype in\nresulting\
            \ set of genotypes are returned. The results\nof genotype comparisons\
            \ are affected by runtime option\ntreat_missing_as_wildtype because items\
            \ with missing\ngenotype (chr, pos, ref, alt, NULL) are excluded if\n\
            treat_missing_as_wildtype is false (default), and are\ntreated as (chr,\
            \ pos, ref, alt, 0) otherwise. The\ndefault comparison type is variant,\
            \ or genotype if\noption --samples is specified."
          synonyms:
          - --mode
          args: !ChoiceFlagArg
            choices: !!set
              ? genotype
              ? variant
              ? site
          optional: true
        - !Flag
          description: "[SAMPLES [SAMPLES ...]]\nA list of sample names corresponding\
            \ to the variant\ntables to compare. An error will be raised if a sample\n\
            name matches no or multiple samples or if a sample\ndoes not have any\
            \ genotype."
          synonyms:
          - --samples
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1).\n"
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools compare [-h] [--union [TABLE [DESC ...]]]\n    \
          \                  [--intersection [TABLE [DESC ...]]]\n               \
          \       [--difference [TABLE [DESC ...]]]\n                      [--expression\
          \ EXPR [DESC ...]]\n                      [--mode {variant,site,genotype}]\n\
          \                      [--samples [SAMPLES [SAMPLES ...]]] [-v {0,1,2,3}]\n\
          \                      [tables [tables ...]]\n\nGet the difference, intersection\
          \ and union of two or more variant tables,\naccording to sites, variants,\
          \ or genotypes of associated samples of these\nvariants. Resulting variants\
          \ can be counted or write to other variant tables.\n\npositional arguments:\n\
          \  tables                variant tables to compare. Wildcard characters\
          \ * and ?\n                        can be used to specify multiple tables.\
          \ A table name\n                        will be automatically repeated for\
          \ the comparison of\n                        genotype of multiple samples\
          \ if only one table is\n                        specified.\n\noptional arguments:\n\
          \  -h, --help            show this help message and exit\n  --union [TABLE\
          \ [DESC ...]]\n                        Print the number (default) or save\
          \ variants with TYPE\n                        in the TYPE of any of the\
          \ tables (T1 | T2 | T3 ...) to\n                        TABLE if a name\
          \ is specified. An optional message can\n                        be added\
          \ to describe the table.\n  --intersection [TABLE [DESC ...]]\n        \
          \                Print the number (default) or save variants with TYPE\n\
          \                        in the TYPE of all the tables (T1 & T2 & T3 ...)\
          \ to\n                        TABLE if a name is specified. An optional\
          \ message can\n                        be added to describe the table.\n\
          \  --difference [TABLE [DESC ...]]\n                        Print the number\
          \ (default) or save variants with TYPE\n                        in the TYPE\
          \ of the first, but not in the TYPE of\n                        others (T1\
          \ - T2 - T3...) to TABLE if a name is\n                        specified.\
          \ An optional message can be added to\n                        describe\
          \ the table.\n  --expression EXPR [DESC ...]\n                        Evaluate\
          \ a set expression with table names\n                        representing\
          \ variants in these tables. Operators |\n                        (or), &\
          \ (and), - (difference) and ^ (A or B but not\n                        both)\
          \ are allowed. The results will be saved to table\n                    \
          \    if the result is assigned to a name (e.g. --expression\n          \
          \              'D=A-(B&C)'). The table names in the expression can be\n\
          \                        written as _1, _2 etc if tables are listed before\
          \ the\n                        option, and be used to populate the list\
          \ of tables if\n                        it was left unspecified.\n  --mode\
          \ {variant,site,genotype}\n                        Compare variants (chr,\
          \ pos, ref, alt), site (chr,\n                        pos), or genotype\
          \ (chr, pos, ref, alt, GT for a\n                        specified sample)\
          \ of variants. The results are\n                        variants from all\
          \ input tables that match specified\n                        condition.\
          \ The default comparison TYPE compares\n                        variants\
          \ in input variant tables. For the comparison\n                        of\
          \ sites, the position of all variants are collected\n                  \
          \      and compared, and variants (in all tables) with site\n          \
          \              in resulting set of sites are returned. For the\n       \
          \                 comparison of genotypes, the genotypes of specified\n\
          \                        samples for all variants (see option --samples)\
          \ are\n                        collected and compared, and variants with\
          \ genotype in\n                        resulting set of genotypes are returned.\
          \ The results\n                        of genotype comparisons are affected\
          \ by runtime option\n                        treat_missing_as_wildtype because\
          \ items with missing\n                        genotype (chr, pos, ref, alt,\
          \ NULL) are excluded if\n                        treat_missing_as_wildtype\
          \ is false (default), and are\n                        treated as (chr,\
          \ pos, ref, alt, 0) otherwise. The\n                        default comparison\
          \ type is variant, or genotype if\n                        option --samples\
          \ is specified.\n  --samples [SAMPLES [SAMPLES ...]]\n                 \
          \       A list of sample names corresponding to the variant\n          \
          \              tables to compare. An error will be raised if a sample\n\
          \                        name matches no or multiple samples or if a sample\n\
          \                        does not have any genotype.\n  -v {0,1,2,3}, --verbosity\
          \ {0,1,2,3}\n                        Output error and warning (0), info\
          \ (1), debug (2) and\n                        trace (3) information to standard\
          \ output (default to\n                        1).\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - execute
        positional:
        - !Positional
          description: "Name of a pipeline configuration file, which can be a\npath\
            \ to a .pipeline file (with or without extension)\nor one of the online\
            \ pipelines listed by command\n\"vtools show pipelines\". For backward\
            \ compatibility,\nif no input and output files are specified (options\n\
            --input and --output), values of this option is\ntreated as a SQL query\
            \ that will be executed against\nthe project database, with project genotype\
            \ database\nattached as \"genotype\" and annotation databases\nattached\
            \ by their names."
          position: 0
          name: SPECFILE
          optional: false
        - !Positional
          description: "Name of one or more pipelines defined in SPECFILE,\nwhich\
            \ can be ignored if the SPECFILE only defines one\npipeline. One or more\
            \ steps can be specified in the\nform of 'pipeline:5' (step_5 only), 'pipeline:-5'\
            \ (up\nto step 5), 'pipeline:5-' (from step 5),\n'pipeline:2,5' (step\
            \ 2 and 5), 'pipeline:2-5' (step 2\nto 5). This essentially adds an option\
            \ \"skip\" to the\nunselected pipeline steps and it is up to the user\
            \ to\nensure that the pipeline is executable with only a\nsubset of steps.\
            \ Please use command \"vtools show\npipeline SPECFILE\" for details of\
            \ available pipelines\nin SPECFILE, including pipeline-specific parameters\n\
            that could be used to change the default behavior of\nthe pipelines."
          position: 1
          name: PIPELINES
          optional: false
        named:
        - !Flag
          description: "Execute the pipeline in parallel model if a number\nother\
            \ than 1 is specified. In this mode, the\nRunCommand action will create\
            \ a shell script and\nsubmit the job using a command specified by option\n\
            ``submitter``, if this parameter is defined."
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: JOBS
          optional: true
        - !Flag
          description: Delimiter used to output results of a SQL query.
          synonyms:
          - -d
          - --delimiter
          args: !SimpleFlagArg
            name: DELIMITER
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1).\n"
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools execute [-h] [-j JOBS] [-d DELIMITER] [-v {0,1,2,3}]\n\
          \                      SPECFILE [PIPELINES [PIPELINES ...]]\n\nExecute a\
          \ SQL query or pipeline.\n\npositional arguments:\n  SPECFILE          \
          \    Name of a pipeline configuration file, which can be a\n           \
          \             path to a .pipeline file (with or without extension)\n   \
          \                     or one of the online pipelines listed by command\n\
          \                        \"vtools show pipelines\". For backward compatibility,\n\
          \                        if no input and output files are specified (options\n\
          \                        --input and --output), values of this option is\n\
          \                        treated as a SQL query that will be executed against\n\
          \                        the project database, with project genotype database\n\
          \                        attached as \"genotype\" and annotation databases\n\
          \                        attached by their names.\n  PIPELINES         \
          \    Name of one or more pipelines defined in SPECFILE,\n              \
          \          which can be ignored if the SPECFILE only defines one\n     \
          \                   pipeline. One or more steps can be specified in the\n\
          \                        form of 'pipeline:5' (step_5 only), 'pipeline:-5'\
          \ (up\n                        to step 5), 'pipeline:5-' (from step 5),\n\
          \                        'pipeline:2,5' (step 2 and 5), 'pipeline:2-5' (step\
          \ 2\n                        to 5). This essentially adds an option \"skip\"\
          \ to the\n                        unselected pipeline steps and it is up\
          \ to the user to\n                        ensure that the pipeline is executable\
          \ with only a\n                        subset of steps. Please use command\
          \ \"vtools show\n                        pipeline SPECFILE\" for details\
          \ of available pipelines\n                        in SPECFILE, including\
          \ pipeline-specific parameters\n                        that could be used\
          \ to change the default behavior of\n                        the pipelines.\n\
          \noptional arguments:\n  -h, --help            show this help message and\
          \ exit\n  -j JOBS, --jobs JOBS  Execute the pipeline in parallel model if\
          \ a number\n                        other than 1 is specified. In this mode,\
          \ the\n                        RunCommand action will create a shell script\
          \ and\n                        submit the job using a command specified\
          \ by option\n                        ``submitter``, if this parameter is\
          \ defined.\n  -d DELIMITER, --delimiter DELIMITER\n                    \
          \    Delimiter used to output results of a SQL query.\n  -v {0,1,2,3}, --verbosity\
          \ {0,1,2,3}\n                        Output error and warning (0), info\
          \ (1), debug (2) and\n                        trace (3) information to standard\
          \ output (default to\n                        1).\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - models.
        positional:
        - !Positional
          description: ''
          position: 0
          name: vtools
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: vtools [-h] [--version]\n              {init,import,phenotype,show,liftover,use,update,select,exclude,compare,output,export,remove,associate,admin,execute,simulate}\n\
          \              ...\nvtools: error: invalid choice: 'models.' (choose from\
          \ 'init', 'import', 'phenotype', 'show', 'liftover', 'use', 'update', 'select',\
          \ 'exclude', 'compare', 'output', 'export', 'remove', 'associate', 'admin',\
          \ 'execute', 'simulate')\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - liftover
        positional:
        - !Positional
          description: Name of the alternative reference genome
          position: 0
          name: build
          optional: false
        named:
        - !Flag
          description: "Flip primary and alternative reference genomes so that\nthe\
            \ specified build will become the primary reference\ngenome of the project."
          synonyms:
          - --flip
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1).\n"
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools liftover [-h] [--flip] [-v {0,1,2,3}] build\n\n\
          Convert coordinates of existing variants to alternative coordinates in an\n\
          alternative reference genome. The UCSC liftover tool will be automatically\n\
          downloaded if it is not available.\n\npositional arguments:\n  build   \
          \              Name of the alternative reference genome\n\noptional arguments:\n\
          \  -h, --help            show this help message and exit\n  --flip     \
          \           Flip primary and alternative reference genomes so that\n   \
          \                     the specified build will become the primary reference\n\
          \                        genome of the project.\n  -v {0,1,2,3}, --verbosity\
          \ {0,1,2,3}\n                        Output error and warning (0), info\
          \ (1), debug (2) and\n                        trace (3) information to standard\
          \ output (default to\n                        1).\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - use
        positional:
        - !Positional
          description: ''
          position: 0
          name: FIELD
          optional: true
        named:
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "An alternative name for the linked database. This\noption\
            \ allows the use of shorter field names (e.g.\ntg.chr instead of thousandGenomes.chr)\
            \ and the use of\nmultiple versions of the same database."
          synonyms:
          - --as
          args: !SimpleFlagArg
            name: NAME
          optional: true
        - !Flag
          description: "[FIELD [FIELD ...]], --linked_by [FIELD [FIELD ...]], --linked-by\
            \ [FIELD [FIELD ...]]\nA list of fields that are used to link the annotation\n\
            database to tables in the existing project. This\nparameter is required\
            \ only for 'field' type of\nannotation databases that link to fields of\
            \ existing\ntables."
          synonyms:
          - -l
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "This option overrides type of an existing annotation\ndatabase\
            \ when it is attached to a project. It\ncorresponds to key anno_type of\
            \ the data sources\nsection of an annotation file (with suffix .ann) but\n\
            does not affect the .ann file or the database built\nfrom it."
          synonyms:
          - --anno_type
          - --anno-type
          args: !ChoiceFlagArg
            choices: !!set
              ? variant
              ? range
              ? position
              ? field
          optional: true
        - !Flag
          description: "[LINKED_FIELDS [LINKED_FIELDS ...]], --linked-fields [LINKED_FIELDS\
            \ [LINKED_FIELDS ...]]\nAn alternative set of fields that are used to\
            \ link the\nannotation database to the master variant table. It\nshould\
            \ have four, two, and three values for database\nof type variant, position,\
            \ and range. Similar to\nanno_type, this option does not affect the .ann\
            \ file\nor the database built from it."
          synonyms:
          - --linked_fields
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[FILES [FILES ...]], --files [FILES [FILES ...]]\nA list of\
            \ source files. If specified, vtools will not\ntry to download and select\
            \ source files. These source\nfiles will be compiled into a local annotation\n\
            database. This is used only when no local annotation\ndatabase is specified."
          synonyms:
          - -f
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "If set, variant tools will always rebuild the\nannotation\
            \ database from source, ignoring existing\nlocal and online database.\
            \ In addition to $name.DB,\nvariant tools will also create $name-$version.DB.gz\n\
            that can be readily distributed."
          synonyms:
          - --rebuild
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "If need to build database from source, maximum number\nof\
            \ processes to use.\n"
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: N
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools use [-h] [--as NAME] [-l [FIELD [FIELD ...]]]\n\
          \                  [--anno_type {variant,position,range,field}]\n      \
          \            [--linked_fields [LINKED_FIELDS [LINKED_FIELDS ...]]]\n   \
          \               [-f [FILES [FILES ...]]] [--rebuild] [-j N] [-v {0,1,2,3}]\n\
          \                  source\n\nLink an annotation database to the project,\
          \ download it from the variant tools\nwebsite or build it from source if\
          \ needed.\n\npositional arguments:\n  source                Use an annotation\
          \ database ($source.DB or\n                        $source.DB.gz) if it\
          \ is available, download or build\n                        the database\
          \ if a description file ($source.ann) is\n                        available.\
          \ Otherwise, this command will download a\n                        description\
          \ file and the corresponding database from\n                        web\
          \ (c.f. runtime variable $search_path) and the\n                       \
          \ latest version of the datavase). If all means fail,\n                \
          \        this command will try to download the source of the\n         \
          \               annotation database (or use source files provided by\n \
          \                       option --files).\n\noptional arguments:\n  -h, --help\
          \            show this help message and exit\n  -v {0,1,2,3}, --verbosity\
          \ {0,1,2,3}\n                        Output error and warning (0), info\
          \ (1), debug (2) and\n                        trace (3) information to standard\
          \ output (default to\n                        1).\n\nBasic link options:\n\
          \  --as NAME             An alternative name for the linked database. This\n\
          \                        option allows the use of shorter field names (e.g.\n\
          \                        tg.chr instead of thousandGenomes.chr) and the\
          \ use of\n                        multiple versions of the same database.\n\
          \  -l [FIELD [FIELD ...]], --linked_by [FIELD [FIELD ...]], --linked-by\
          \ [FIELD [FIELD ...]]\n                        A list of fields that are\
          \ used to link the annotation\n                        database to tables\
          \ in the existing project. This\n                        parameter is required\
          \ only for 'field' type of\n                        annotation databases\
          \ that link to fields of existing\n                        tables.\n\nAdvanced\
          \ link options:\n  --anno_type {variant,position,range,field}, --anno-type\
          \ {variant,position,range,field}\n                        This option overrides\
          \ type of an existing annotation\n                        database when\
          \ it is attached to a project. It\n                        corresponds to\
          \ key anno_type of the data sources\n                        section of\
          \ an annotation file (with suffix .ann) but\n                        does\
          \ not affect the .ann file or the database built\n                     \
          \   from it.\n  --linked_fields [LINKED_FIELDS [LINKED_FIELDS ...]], --linked-fields\
          \ [LINKED_FIELDS [LINKED_FIELDS ...]]\n                        An alternative\
          \ set of fields that are used to link the\n                        annotation\
          \ database to the master variant table. It\n                        should\
          \ have four, two, and three values for database\n                      \
          \  of type variant, position, and range. Similar to\n                  \
          \      anno_type, this option does not affect the .ann file\n          \
          \              or the database built from it.\n\nBuild database from source:\n\
          \  -f [FILES [FILES ...]], --files [FILES [FILES ...]]\n               \
          \         A list of source files. If specified, vtools will not\n      \
          \                  try to download and select source files. These source\n\
          \                        files will be compiled into a local annotation\n\
          \                        database. This is used only when no local annotation\n\
          \                        database is specified.\n  --rebuild           \
          \  If set, variant tools will always rebuild the\n                     \
          \   annotation database from source, ignoring existing\n               \
          \         local and online database. In addition to $name.DB,\n        \
          \                variant tools will also create $name-$version.DB.gz\n \
          \                       that can be readily distributed.\n  -j N, --jobs\
          \ N        If need to build database from source, maximum number\n     \
          \                   of processes to use.\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - format
        positional:
        - !Positional
          description: ''
          position: 0
          name: vtools
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: vtools [-h] [--version]\n              {init,import,phenotype,show,liftover,use,update,select,exclude,compare,output,export,remove,associate,admin,execute,simulate}\n\
          \              ...\nvtools: error: invalid choice: 'format' (choose from\
          \ 'init', 'import', 'phenotype', 'show', 'liftover', 'use', 'update', 'select',\
          \ 'exclude', 'compare', 'output', 'export', 'remove', 'associate', 'admin',\
          \ 'execute', 'simulate')\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - output
        positional:
        - !Positional
          description: variants to output.
          position: 0
          name: table
          optional: false
        - !Positional
          description: "A list of fields that will be outputted. SQL-\ncompatible\
            \ expressions or functions such as \"pos-1\",\n\"count(1)\" or \"sum(num)\"\
            \ are also allowed."
          position: 1
          name: fields
          optional: false
        named:
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "[HEADER [HEADER ...]]\nA complete header or a list of names\
            \ that will be\njoined by a delimiter (parameter --delimiter). If a\n\
            special name - is specified, the header will be read\nfrom the standard\
            \ input, which is the preferred way to\nspecify large multi-line headers\
            \ (e.g. cat myheader |\nvtools export --header -). If this parameter is\
            \ given\nwithout parameter, a default header will be derived\nfrom field\
            \ names."
          synonyms:
          - --header
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Delimiter use to separate columns of output. The\ndefault\
            \ output uses tabs to delimit columns padded to\nthe same width by spaces.\
            \ You can use '-d,' for csv\noutput, or -d'\\t' for unpadded tab-delimited\
            \ output."
          synonyms:
          - -d
          - --delimiter
          args: !SimpleFlagArg
            name: DELIMITER
          optional: true
        - !Flag
          description: "Precision used to output float numbers. The default\nvalue\
            \ is None which uses system default (e.g. whatever\nstr(number) outputs).\
            \ You can set it to a positive\nnumber (e.g. 4) to limit the number of\
            \ digits to\noutput."
          synonyms:
          - --precision
          args: !SimpleFlagArg
            name: PRECISION
          optional: true
        - !Flag
          description: Output string for missing value
          synonyms:
          - --na
          args: !SimpleFlagArg
            name: NA
          optional: true
        - !Flag
          description: Limit output to the first N records.
          synonyms:
          - -l
          - --limit
          args: !SimpleFlagArg
            name: N
          optional: true
        - !Flag
          description: "Output reference genome. If set to alternative build,\nchr\
            \ and pos in the fields will be replaced by alt_chr\nand alt_pos"
          synonyms:
          - --build
          args: !SimpleFlagArg
            name: BUILD
          optional: true
        - !Flag
          description: "[FIELD [FIELD ...]], --group_by [FIELD [FIELD ...]], --group-by\
            \ [FIELD [FIELD ...]]\nGroup output by fields. This option is useful for\n\
            aggregation output where summary statistics are\ngrouped by one or more\
            \ fields."
          synonyms:
          - -g
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Variant tools by default output only one of the\nrecords if\
            \ a variant matches multiple records in an\nannotation database. This\
            \ option tells variant tools\nto output all matching records."
          synonyms:
          - --all
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Order output by specified fields in ascending order,\nor descending\
            \ order if field name is followed by DESC\n(e.g. --order_by 'num DESC')\n"
          synonyms:
          - --order_by
          - --order-by
          args: !RepeatFlagArg
            name: FIELD
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools output [-h] [--header [HEADER [HEADER ...]]] [-d\
          \ DELIMITER]\n                     [--precision PRECISION] [--na NA] [-l\
          \ N] [--build BUILD]\n                     [-g [FIELD [FIELD ...]]] [--all]\n\
          \                     [--order_by FIELD [FIELD ...]] [-v {0,1,2,3}]\n  \
          \                   table fields [fields ...]\n\nOutput variants, variant\
          \ info fields, annotation fields and expressions that\ninvolve these fields\
          \ in a tab or comma separated format.\n\npositional arguments:\n  table\
          \                 variants to output.\n  fields                A list of\
          \ fields that will be outputted. SQL-\n                        compatible\
          \ expressions or functions such as \"pos-1\",\n                        \"\
          count(1)\" or \"sum(num)\" are also allowed.\n\noptional arguments:\n  -h,\
          \ --help            show this help message and exit\n  -v {0,1,2,3}, --verbosity\
          \ {0,1,2,3}\n                        Output error and warning (0), info\
          \ (1), debug (2) and\n                        trace (3) information to standard\
          \ output (default to\n                        1).\n\nOutput options:\n \
          \ --header [HEADER [HEADER ...]]\n                        A complete header\
          \ or a list of names that will be\n                        joined by a delimiter\
          \ (parameter --delimiter). If a\n                        special name -\
          \ is specified, the header will be read\n                        from the\
          \ standard input, which is the preferred way to\n                      \
          \  specify large multi-line headers (e.g. cat myheader |\n             \
          \           vtools export --header -). If this parameter is given\n    \
          \                    without parameter, a default header will be derived\n\
          \                        from field names.\n  -d DELIMITER, --delimiter\
          \ DELIMITER\n                        Delimiter use to separate columns of\
          \ output. The\n                        default output uses tabs to delimit\
          \ columns padded to\n                        the same width by spaces. You\
          \ can use '-d,' for csv\n                        output, or -d'\\t' for\
          \ unpadded tab-delimited output.\n  --precision PRECISION\n            \
          \            Precision used to output float numbers. The default\n     \
          \                   value is None which uses system default (e.g. whatever\n\
          \                        str(number) outputs). You can set it to a positive\n\
          \                        number (e.g. 4) to limit the number of digits to\n\
          \                        output.\n  --na NA               Output string\
          \ for missing value\n  -l N, --limit N       Limit output to the first N\
          \ records.\n  --build BUILD         Output reference genome. If set to alternative\
          \ build,\n                        chr and pos in the fields will be replaced\
          \ by alt_chr\n                        and alt_pos\n  -g [FIELD [FIELD ...]],\
          \ --group_by [FIELD [FIELD ...]], --group-by [FIELD [FIELD ...]]\n     \
          \                   Group output by fields. This option is useful for\n\
          \                        aggregation output where summary statistics are\n\
          \                        grouped by one or more fields.\n  --all       \
          \          Variant tools by default output only one of the\n           \
          \             records if a variant matches multiple records in an\n    \
          \                    annotation database. This option tells variant tools\n\
          \                        to output all matching records.\n  --order_by FIELD\
          \ [FIELD ...], --order-by FIELD [FIELD ...]\n                        Order\
          \ output by specified fields in ascending order,\n                     \
          \   or descending order if field name is followed by DESC\n            \
          \            (e.g. --order_by 'num DESC')\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - conditions
        positional:
        - !Positional
          description: ''
          position: 0
          name: vtools
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: vtools [-h] [--version]\n              {init,import,phenotype,show,liftover,use,update,select,exclude,compare,output,export,remove,associate,admin,execute,simulate}\n\
          \              ...\nvtools: error: invalid choice: 'conditions' (choose\
          \ from 'init', 'import', 'phenotype', 'show', 'liftover', 'use', 'update',\
          \ 'select', 'exclude', 'compare', 'output', 'export', 'remove', 'associate',\
          \ 'admin', 'execute', 'simulate')\n"
        generated_using: *id003
      - *id004
      - !Command
        command:
        - vtools
        - update
        positional: []
        named:
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "A list of files that will be used to add or update\nexisting\
            \ fields of variants. The file should be\ndelimiter separated with format\
            \ described by parameter\n--format. Gzipped files are acceptable. If input\
            \ files\ncontains genotype information, have been inputted\nbefore, and\
            \ can be linked to the samples they created\nwithout ambiguity (e.g. single\
            \ sample, or samples with\ndetectable sample names), genotypes and their\n\
            information will also be updated."
          synonyms:
          - --from_file
          - --from-file
          args: !RepeatFlagArg
            name: FROM_FILE
          optional: true
        - !Flag
          description: "Build version of the reference genome (e.g. hg18) of\nthe\
            \ input files, which should be the primary (used by\ndefault) or alternative\
            \ (if available) reference\ngenome of the project. An alternative reference\
            \ genome\nwill be added to the project if needed."
          synonyms:
          - --build
          args: !SimpleFlagArg
            name: BUILD
          optional: true
        - !Flag
          description: "Format of the input text file. It can be one of the\nvariant\
            \ tools supported file types such as\nANNOVAR_output (cf. 'vtools show\
            \ formats'), or a local\nformat specification file (with extension .fmt).\
            \ Some\nformats accept parameters (cf. 'vtools show format\nFMT') and\
            \ allow you to update additional or\nalternative fields from the input\
            \ file."
          synonyms:
          - --format
          args: !SimpleFlagArg
            name: FORMAT
          optional: true
        - !Flag
          description: "Number of processes to import input file. Variant\ntools by\
            \ default uses a single process for reading and\nwriting, and can use\
            \ one or more dedicated reader\nprocesses (jobs=2 or more) to process\
            \ input files. Due\nto the overhead of inter-process communication, more\n\
            jobs do not automatically lead to better performance."
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: N
          optional: true
        - !Flag
          description: "[SAMPLE_NAME [SAMPLE_NAME ...]], --sample-name [SAMPLE_NAME\
            \ [SAMPLE_NAME ...]]\nName of the samples to be updated by the input files.\n\
            If unspecified, headers of the genotype columns of the\nlast comment line\
            \ (line starts with #) of the input\nfiles will be used (and thus allow\
            \ different sample\nnames for input files). Sample names will be used\
            \ to\nidentify samples to be updated. Filename will be used\nto uniquely\
            \ identify a sample if mutliple samples with\nthe same name exist in the\
            \ project. No genotype info\nwill be updated if samples cannot be unquely\n\
            determined."
          synonyms:
          - --sample_name
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPR [EXPR ...]]\nAdd a new field or updating an existing\
            \ field using a\nconstant (e.g. mark=1) or an expression using other\n\
            fields (e.g. freq=num/120, refgene=refGene.name). If\nmultiple values\
            \ are returned for a variant, only one\nof them will be used. Parameter\
            \ samples could be used\nto limit the affected variants. In addition,\
            \ special\nfunction are provided, including 'HWE_exact' (exact\ntest of\
            \ Hardy-Weinberg Equilibrium) and 'Fisher_exact'\n(Fisher's exact test\
            \ for case/ctrl association)."
          synonyms:
          - --set
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPR [EXPR ...]], --from-stat [EXPR [EXPR ...]]\nOne or more\
            \ expressions such as meanQT=avg(QT) that\naggregate genotype info (e.g.\
            \ QT) of variants in all\nor selected samples to specified fields (e.g.\
            \ meanQT).\nFunctions sum, avg, max, and min are currently\nsupported.\
            \ In addition, special functions #(GT),\n#(hom), #(het), #(alt), #(other),\
            \ #(missing), #(wtGT),\n#(mutGT), and maf(), are provided to count the\
            \ number\nof valid genotypes (not missing), homozygote\ngenotypes, heterozygote\
            \ genotypes, alternative alleles\n(#(het) + 2*#(hom) + #(other)), genotypes\
            \ with two\ndifferent alternative alleles, missing genotypes\n(number\
            \ of samples - #(GT)), number of non-missing\nwildtype genotypes (#(GT)\
            \ - #(hom) - #(het) -\n#(other)), number of non-wildtype genotypes (#(hom)\
            \ +\n#(het) + #(other)), and minor allele frequency. The\nmaf() function\
            \ treats chromosomes 1 to 22 as\nautosomes, X and Y as sex chromosomes,\
            \ and other\nchromosomes as single-copy manifolds. It requires a\nphenotype\
            \ named sex or gender that codes male/female\nby 1/2, M/F or Male/Female\
            \ if maf of variants on sex\nchromosomes are calculated. This function\
            \ by default\ncalculates allele frequency among existing-alleles,\nbut\
            \ will treat all missing values as wild type alleles\nif runtime option\
            \ treat_missing_as_wildtype is set to\ntrue."
          synonyms:
          - --from_stat
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]], --samples [COND [COND ...]]\nLimiting variants\
            \ from samples that match conditions\nthat use columns shown in command\
            \ 'vtools show sample'\n(e.g. 'aff=1', 'filename like \"MG%\"')."
          synonyms:
          - -s
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]]\nLimiting variants from samples that match\
            \ conditions\nthat use columns shown in command 'vtools show\ngenotypes'\
            \ (e.g. 'GQ>15').\n"
          synonyms:
          - --genotypes
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools update [-h] [--from_file FROM_FILE [FROM_FILE ...]]\n\
          \                     [--build BUILD] [--format FORMAT] [-j N]\n       \
          \              [--sample_name [SAMPLE_NAME [SAMPLE_NAME ...]]]\n       \
          \              [--set [EXPR [EXPR ...]]] [--from_stat [EXPR [EXPR ...]]]\n\
          \                     [-s [COND [COND ...]]] [--genotypes [COND [COND ...]]]\n\
          \                     [-v {0,1,2,3}]\n                     table\n\nAdd\
          \ or update fields of existing variants and genotype from other fields,\n\
          statistics of genotypes and genotype info, or files that annotate variants\
          \ or\ntheir locations (e.g. Read annotation from ANNOVAR output files, import\n\
          additional variant or genotype fields from .vcf files).\n\npositional arguments:\n\
          \  table                 variants to be updated.\n\noptional arguments:\n\
          \  -h, --help            show this help message and exit\n  -v {0,1,2,3},\
          \ --verbosity {0,1,2,3}\n                        Output error and warning\
          \ (0), info (1), debug (2) and\n                        trace (3) information\
          \ to standard output (default to\n                        1).\n\nUpdate\
          \ from files:\n  --from_file FROM_FILE [FROM_FILE ...], --from-file FROM_FILE\
          \ [FROM_FILE ...]\n                        A list of files that will be\
          \ used to add or update\n                        existing fields of variants.\
          \ The file should be\n                        delimiter separated with format\
          \ described by parameter\n                        --format. Gzipped files\
          \ are acceptable. If input files\n                        contains genotype\
          \ information, have been inputted\n                        before, and can\
          \ be linked to the samples they created\n                        without\
          \ ambiguity (e.g. single sample, or samples with\n                     \
          \   detectable sample names), genotypes and their\n                    \
          \    information will also be updated.\n  --build BUILD         Build version\
          \ of the reference genome (e.g. hg18) of\n                        the input\
          \ files, which should be the primary (used by\n                        default)\
          \ or alternative (if available) reference\n                        genome\
          \ of the project. An alternative reference genome\n                    \
          \    will be added to the project if needed.\n  --format FORMAT       Format\
          \ of the input text file. It can be one of the\n                       \
          \ variant tools supported file types such as\n                        ANNOVAR_output\
          \ (cf. 'vtools show formats'), or a local\n                        format\
          \ specification file (with extension .fmt). Some\n                     \
          \   formats accept parameters (cf. 'vtools show format\n               \
          \         FMT') and allow you to update additional or\n                \
          \        alternative fields from the input file.\n  -j N, --jobs N     \
          \   Number of processes to import input file. Variant\n                \
          \        tools by default uses a single process for reading and\n      \
          \                  writing, and can use one or more dedicated reader\n \
          \                       processes (jobs=2 or more) to process input files.\
          \ Due\n                        to the overhead of inter-process communication,\
          \ more\n                        jobs do not automatically lead to better\
          \ performance.\n  --sample_name [SAMPLE_NAME [SAMPLE_NAME ...]], --sample-name\
          \ [SAMPLE_NAME [SAMPLE_NAME ...]]\n                        Name of the samples\
          \ to be updated by the input files.\n                        If unspecified,\
          \ headers of the genotype columns of the\n                        last comment\
          \ line (line starts with #) of the input\n                        files\
          \ will be used (and thus allow different sample\n                      \
          \  names for input files). Sample names will be used to\n              \
          \          identify samples to be updated. Filename will be used\n     \
          \                   to uniquely identify a sample if mutliple samples with\n\
          \                        the same name exist in the project. No genotype\
          \ info\n                        will be updated if samples cannot be unquely\n\
          \                        determined.\n\nSet value from existing fields:\n\
          \  --set [EXPR [EXPR ...]]\n                        Add a new field or updating\
          \ an existing field using a\n                        constant (e.g. mark=1)\
          \ or an expression using other\n                        fields (e.g. freq=num/120,\
          \ refgene=refGene.name). If\n                        multiple values are\
          \ returned for a variant, only one\n                        of them will\
          \ be used. Parameter samples could be used\n                        to limit\
          \ the affected variants. In addition, special\n                        function\
          \ are provided, including 'HWE_exact' (exact\n                        test\
          \ of Hardy-Weinberg Equilibrium) and 'Fisher_exact'\n                  \
          \      (Fisher's exact test for case/ctrl association).\n\nSet fields from\
          \ sample statistics:\n  --from_stat [EXPR [EXPR ...]], --from-stat [EXPR\
          \ [EXPR ...]]\n                        One or more expressions such as meanQT=avg(QT)\
          \ that\n                        aggregate genotype info (e.g. QT) of variants\
          \ in all\n                        or selected samples to specified fields\
          \ (e.g. meanQT).\n                        Functions sum, avg, max, and min\
          \ are currently\n                        supported. In addition, special\
          \ functions #(GT),\n                        #(hom), #(het), #(alt), #(other),\
          \ #(missing), #(wtGT),\n                        #(mutGT), and maf(), are\
          \ provided to count the number\n                        of valid genotypes\
          \ (not missing), homozygote\n                        genotypes, heterozygote\
          \ genotypes, alternative alleles\n                        (#(het) + 2*#(hom)\
          \ + #(other)), genotypes with two\n                        different alternative\
          \ alleles, missing genotypes\n                        (number of samples\
          \ - #(GT)), number of non-missing\n                        wildtype genotypes\
          \ (#(GT) - #(hom) - #(het) -\n                        #(other)), number\
          \ of non-wildtype genotypes (#(hom) +\n                        #(het) +\
          \ #(other)), and minor allele frequency. The\n                        maf()\
          \ function treats chromosomes 1 to 22 as\n                        autosomes,\
          \ X and Y as sex chromosomes, and other\n                        chromosomes\
          \ as single-copy manifolds. It requires a\n                        phenotype\
          \ named sex or gender that codes male/female\n                        by\
          \ 1/2, M/F or Male/Female if maf of variants on sex\n                  \
          \      chromosomes are calculated. This function by default\n          \
          \              calculates allele frequency among existing-alleles,\n   \
          \                     but will treat all missing values as wild type alleles\n\
          \                        if runtime option treat_missing_as_wildtype is\
          \ set to\n                        true.\n  -s [COND [COND ...]], --samples\
          \ [COND [COND ...]]\n                        Limiting variants from samples\
          \ that match conditions\n                        that use columns shown\
          \ in command 'vtools show sample'\n                        (e.g. 'aff=1',\
          \ 'filename like \"MG%\"').\n  --genotypes [COND [COND ...]]\n         \
          \               Limiting variants from samples that match conditions\n \
          \                       that use columns shown in command 'vtools show\n\
          \                        genotypes' (e.g. 'GQ>15').\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - simulate
        positional:
        - !Positional
          description: "Name of a model specification file, which can be the\nname\
            \ of an online specification file, or path to a\nlocal .pipeline file.\
            \ Please use command \"vtools show\nsimulations\" to get a list all available\
            \ simulation\nmodels."
          position: 0
          name: SPECFILE
          optional: false
        - !Positional
          description: "Name of one or more simulation models defined in\nSPECFILE,\
            \ which can be ignored if the SPECFILE only\ndefines one simulation model.\
            \ Please use command\n\"vtools show simulation SPECFILE\" for details\
            \ of\navailable models in SPECFILE, including model-specific\nparameters\
            \ that could be used to change the default\nbehavior of these models."
          position: 1
          name: MODELS
          optional: false
        named:
        - !Flag
          description: "Random seed for the simulation. A random seed will be\nused\
            \ by default but a specific seed could be used to\nreproduce a previously\
            \ executed simulation."
          synonyms:
          - --seed
          args: !SimpleFlagArg
            name: SEED
          optional: true
        - !Flag
          description: Number of consecutive replications to simulate
          synonyms:
          - --replicates
          args: !SimpleFlagArg
            name: REPLICATES
          optional: true
        - !Flag
          description: "Maximum number of concurrent jobs to execute, for\nsteps of\
            \ a pipeline that allows multi-processing."
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: JOBS
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1).\n"
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools simulate [-h] [--seed SEED] [--replicates REPLICATES]\
          \ [-j JOBS]\n                       [-v {0,1,2,3}]\n                   \
          \    SPECFILE [MODELS [MODELS ...]]\n\nSimulate case control or family-based\
          \ samples using specified simulation\nmodels.\n\npositional arguments:\n\
          \  SPECFILE              Name of a model specification file, which can be\
          \ the\n                        name of an online specification file, or\
          \ path to a\n                        local .pipeline file. Please use command\
          \ \"vtools show\n                        simulations\" to get a list all\
          \ available simulation\n                        models.\n  MODELS      \
          \          Name of one or more simulation models defined in\n          \
          \              SPECFILE, which can be ignored if the SPECFILE only\n   \
          \                     defines one simulation model. Please use command\n\
          \                        \"vtools show simulation SPECFILE\" for details\
          \ of\n                        available models in SPECFILE, including model-specific\n\
          \                        parameters that could be used to change the default\n\
          \                        behavior of these models.\n\noptional arguments:\n\
          \  -h, --help            show this help message and exit\n  --seed SEED\
          \           Random seed for the simulation. A random seed will be\n    \
          \                    used by default but a specific seed could be used to\n\
          \                        reproduce a previously executed simulation.\n \
          \ --replicates REPLICATES\n                        Number of consecutive\
          \ replications to simulate\n  -j JOBS, --jobs JOBS  Maximum number of concurrent\
          \ jobs to execute, for\n                        steps of a pipeline that\
          \ allows multi-processing.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n    \
          \                    Output error and warning (0), info (1), debug (2) and\n\
          \                        trace (3) information to standard output (default\
          \ to\n                        1).\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - select
        positional:
        - !Positional
          description: Source variant table.
          position: 0
          name: from_table
          optional: false
        - !Positional
          description: "Conditions by which variants are selected. Multiple\narguments\
            \ are automatically joined by 'AND' so 'OR'\nconditions should be provided\
            \ by a single argument\nwith conditions joined by 'OR'. If unspecified,\
            \ all\nvariants (except those excluded by parameter\n--samples) will be\
            \ selected."
          position: 1
          name: condition
          optional: false
        named:
        - !Flag
          description: "[COND [COND ...]], --samples [COND [COND ...]]\nLimiting variants\
            \ from samples that match conditions\nthat use columns shown in command\
            \ 'vtools show sample'\n(e.g. 'aff=1', 'filename like \"MG%\"')."
          synonyms:
          - -s
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[TABLE [DESC ...]], --to_table [TABLE [DESC ...]]\nDestination\
            \ variant table."
          synonyms:
          - -t
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output number of variant, which is a shortcut to '--\noutput\
            \ count(1)'."
          synonyms:
          - -c
          - --count
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[FIELDS [FIELDS ...]], --output [FIELDS [FIELDS ...]]\nA list\
            \ of fields that will be outputted. SQL-\ncompatible expressions or functions\
            \ such as \"pos-1\",\n\"count(1)\" or \"sum(num)\" are also allowed."
          synonyms:
          - -o
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "[HEADER [HEADER ...]]\nA complete header or a list of names\
            \ that will be\njoined by a delimiter (parameter --delimiter). If a\n\
            special name - is specified, the header will be read\nfrom the standard\
            \ input, which is the preferred way to\nspecify large multi-line headers\
            \ (e.g. cat myheader |\nvtools export --header -). If this parameter is\
            \ given\nwithout parameter, a default header will be derived\nfrom field\
            \ names."
          synonyms:
          - --header
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Delimiter use to separate columns of output. The\ndefault\
            \ output uses tabs to delimit columns padded to\nthe same width by spaces.\
            \ You can use '-d,' for csv\noutput, or -d'\\t' for unpadded tab-delimited\
            \ output."
          synonyms:
          - -d
          - --delimiter
          args: !SimpleFlagArg
            name: DELIMITER
          optional: true
        - !Flag
          description: "Precision used to output float numbers. The default\nvalue\
            \ is None which uses system default (e.g. whatever\nstr(number) outputs).\
            \ You can set it to a positive\nnumber (e.g. 4) to limit the number of\
            \ digits to\noutput."
          synonyms:
          - --precision
          args: !SimpleFlagArg
            name: PRECISION
          optional: true
        - !Flag
          description: Output string for missing value
          synonyms:
          - --na
          args: !SimpleFlagArg
            name: NA
          optional: true
        - !Flag
          description: Limit output to the first N records.
          synonyms:
          - -l
          - --limit
          args: !SimpleFlagArg
            name: N
          optional: true
        - !Flag
          description: "Output reference genome. If set to alternative build,\nchr\
            \ and pos in the fields will be replaced by alt_chr\nand alt_pos"
          synonyms:
          - --build
          args: !SimpleFlagArg
            name: BUILD
          optional: true
        - !Flag
          description: "[FIELD [FIELD ...]], --group_by [FIELD [FIELD ...]], --group-by\
            \ [FIELD [FIELD ...]]\nGroup output by fields. This option is useful for\n\
            aggregation output where summary statistics are\ngrouped by one or more\
            \ fields."
          synonyms:
          - -g
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Variant tools by default output only one of the\nrecords if\
            \ a variant matches multiple records in an\nannotation database. This\
            \ option tells variant tools\nto output all matching records."
          synonyms:
          - --all
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Order output by specified fields in ascending order,\nor descending\
            \ order if field name is followed by DESC\n(e.g. --order_by 'num DESC')\n"
          synonyms:
          - --order_by
          - --order-by
          args: !RepeatFlagArg
            name: FIELD
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools select [-h] [-s [COND [COND ...]]] [-t [TABLE [DESC\
          \ ...]]]\n                     [-c | -o [FIELDS [FIELDS ...]]]\n       \
          \              [--header [HEADER [HEADER ...]]] [-d DELIMITER]\n       \
          \              [--precision PRECISION] [--na NA] [-l N] [--build BUILD]\n\
          \                     [-g [FIELD [FIELD ...]]] [--all]\n               \
          \      [--order_by FIELD [FIELD ...]] [-v {0,1,2,3}]\n                 \
          \    from_table [condition [condition ...]]\n\nSelect variants according\
          \ to properties (variant and annotation fields) and\nmembership (samples)\
          \ of variant. The result can be counted, outputted, or\nsaved to a variant\
          \ table.\n\npositional arguments:\n  from_table            Source variant\
          \ table.\n  condition             Conditions by which variants are selected.\
          \ Multiple\n                        arguments are automatically joined by\
          \ 'AND' so 'OR'\n                        conditions should be provided by\
          \ a single argument\n                        with conditions joined by 'OR'.\
          \ If unspecified, all\n                        variants (except those excluded\
          \ by parameter\n                        --samples) will be selected.\n\n\
          optional arguments:\n  -h, --help            show this help message and\
          \ exit\n  -s [COND [COND ...]], --samples [COND [COND ...]]\n          \
          \              Limiting variants from samples that match conditions\n  \
          \                      that use columns shown in command 'vtools show sample'\n\
          \                        (e.g. 'aff=1', 'filename like \"MG%\"').\n  -t\
          \ [TABLE [DESC ...]], --to_table [TABLE [DESC ...]]\n                  \
          \      Destination variant table.\n  -c, --count           Output number\
          \ of variant, which is a shortcut to '--\n                        output\
          \ count(1)'.\n  -o [FIELDS [FIELDS ...]], --output [FIELDS [FIELDS ...]]\n\
          \                        A list of fields that will be outputted. SQL-\n\
          \                        compatible expressions or functions such as \"\
          pos-1\",\n                        \"count(1)\" or \"sum(num)\" are also\
          \ allowed.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n                    \
          \    Output error and warning (0), info (1), debug (2) and\n           \
          \             trace (3) information to standard output (default to\n   \
          \                     1).\n\nOutput options:\n  --header [HEADER [HEADER\
          \ ...]]\n                        A complete header or a list of names that\
          \ will be\n                        joined by a delimiter (parameter --delimiter).\
          \ If a\n                        special name - is specified, the header\
          \ will be read\n                        from the standard input, which is\
          \ the preferred way to\n                        specify large multi-line\
          \ headers (e.g. cat myheader |\n                        vtools export --header\
          \ -). If this parameter is given\n                        without parameter,\
          \ a default header will be derived\n                        from field names.\n\
          \  -d DELIMITER, --delimiter DELIMITER\n                        Delimiter\
          \ use to separate columns of output. The\n                        default\
          \ output uses tabs to delimit columns padded to\n                      \
          \  the same width by spaces. You can use '-d,' for csv\n               \
          \         output, or -d'\\t' for unpadded tab-delimited output.\n  --precision\
          \ PRECISION\n                        Precision used to output float numbers.\
          \ The default\n                        value is None which uses system default\
          \ (e.g. whatever\n                        str(number) outputs). You can\
          \ set it to a positive\n                        number (e.g. 4) to limit\
          \ the number of digits to\n                        output.\n  --na NA  \
          \             Output string for missing value\n  -l N, --limit N       Limit\
          \ output to the first N records.\n  --build BUILD         Output reference\
          \ genome. If set to alternative build,\n                        chr and\
          \ pos in the fields will be replaced by alt_chr\n                      \
          \  and alt_pos\n  -g [FIELD [FIELD ...]], --group_by [FIELD [FIELD ...]],\
          \ --group-by [FIELD [FIELD ...]]\n                        Group output by\
          \ fields. This option is useful for\n                        aggregation\
          \ output where summary statistics are\n                        grouped by\
          \ one or more fields.\n  --all                 Variant tools by default\
          \ output only one of the\n                        records if a variant matches\
          \ multiple records in an\n                        annotation database. This\
          \ option tells variant tools\n                        to output all matching\
          \ records.\n  --order_by FIELD [FIELD ...], --order-by FIELD [FIELD ...]\n\
          \                        Order output by specified fields in ascending order,\n\
          \                        or descending order if field name is followed by\
          \ DESC\n                        (e.g. --order_by 'num DESC')\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - phenotype
        positional:
        - !Positional
          description: ''
          position: 0
          name: INPUT_FILE
          optional: true
        named:
        - !Flag
          description: "[INPUT_FILE [INPUT_FILE ...]], --from_file [INPUT_FILE [INPUT_FILE\
            \ ...]], --from-file [INPUT_FILE [INPUT_FILE ...]]\nImport phenotype from\
            \ a tab or space delimited file,\nwhich can be standard input if a name\
            \ - is specified.\nSamples are determined by sample names in the first\n\
            column, or jointly by sample name and filename if\nthere is another column\
            \ with header 'filename'. Names\nof phenotype fields are determined by\
            \ header of the\ninput file, or by names provided from option --header.\n\
            Non-alphanumeric characters in input filed names will\nbe replaced by\
            \ '_'. If multiple samples in a project\nshare the same names, they will\
            \ shared the imported\nphenotypes. Optionally, a list of phenotypes (columns\n\
            of the file) can be specified after filename, in which\ncase only the\
            \ specified phenotypes will be imported.\nParameter --samples could be\
            \ used to limit the samples\nfor which phenotypes are imported. Values\
            \ that match\nvalue of parameter --na and cannot be converted to the\n\
            probed type of phenotype (e.g. '' in a column of\nnumbers) are recorded\
            \ as missing values."
          synonyms:
          - -f
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPRESSION [EXPRESSION ...]]\nSet a phenotype to a constant\
            \ (e.g. --set aff=1), or\nan expression using other existing phenotypes\
            \ (e.g.\n--set ratio_qt=high_qt/all_qt (the ratio of the number\nof high\
            \ quality variants to the number of all\nvariants, where high_qt and all_qt\
            \ are obtained from\nsample statistics using parameter --from_stat).\n\
            Parameter --samples could be used to limit the samples\nfor which genotypes\
            \ will be set."
          synonyms:
          - --set
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPRESSION [EXPRESSION ...]], --from-stat [EXPRESSION [EXPRESSION\
            \ ...]]\nSet a phenotype to a summary statistics of a genotype\nfield.\
            \ For example, \"num=count(*)\" sets phenotype num\nto be the number of\
            \ genotypes of a sample,\n\"GD=avg(DP)\" sets phenotype DP to be the average\
            \ depth\n(if DP is one of the genotype fields) of the sample.\nMultiple\
            \ fields (e.g. '--from-stat \"num=count(*)\"\n\"GD=avg(DP)\"') are also\
            \ allowed. In addition to\nstandard SQL aggregation functions, variant\
            \ tools\nsupports special functions #(GT), #(wtGT), #(mutGT),\n#(alt),\
            \ #(hom), #(het) and #(other), which counts the\nnumber of genotypes (the\
            \ same as count(*)), wildtype\ngenotypes, mutant genotypes alternative\
            \ alleles,\nhomozygotes, heterozygotes, and genotypes with two\ndifferent\
            \ alternative alleles. Parameters --genotypes\nand --samples could be\
            \ used to limit the genotypes to\nbe considered and the samples for which\
            \ genotypes will\nbe set."
          synonyms:
          - --from_stat
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[EXPRESSION [EXPRESSION ...]]\nA list of phenotype to be outputted.\
            \ SQL-compatible\nexpressions or functions such as \"DP/DP_all\" and\n\
            \"avg(DP)\" are also allowed"
          synonyms:
          - --output
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Allow at most N concurrent jobs to obtain sample\nstatistics\
            \ for parameter --from-stat."
          synonyms:
          - -j
          - --jobs
          args: !SimpleFlagArg
            name: N
          optional: true
        - !Flag
          description: "[COND [COND ...]], --genotypes [COND [COND ...]]\nLimit the\
            \ operation to genotypes that match specified\nconditions. Use 'vtools\
            \ show genotypes' to list usable\nfields for each sample."
          synonyms:
          - -g
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]], --samples [COND [COND ...]]\nUpdate phenotype\
            \ for samples that match specified\nconditions. Use 'vtools show samples'\
            \ to list usable\nfields in the sample table."
          synonyms:
          - -s
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "[HEADER [HEADER ...]]\nA list of header names for input file\
            \ if used with\noption --from-file. Otherwise a complete header or a\n\
            list of names that will be joined by a delimiter\n(parameter --delimiter),\
            \ for option --output. If a\nspecial name - is specified, the header will\
            \ be read\nfrom the standard input, which is the preferred way to\nspecify\
            \ large multi-line headers (e.g. cat myheader |\nvtools export --header\
            \ -). If this parameter is given\nwithout parameter, a default header\
            \ will be derived\nfrom field names."
          synonyms:
          - --header
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Delimiter, default to tab, a popular alternative is\n',' for\
            \ csv output"
          synonyms:
          - -d
          - --delimiter
          args: !SimpleFlagArg
            name: DELIMITER
          optional: true
        - !Flag
          description: Input or output string for missing value..
          synonyms:
          - --na
          args: !SimpleFlagArg
            name: NA
          optional: true
        - !Flag
          description: "Number of record to display. Default to all record.\n"
          synonyms:
          - -l
          - --limit
          args: !SimpleFlagArg
            name: LIMIT
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools phenotype [-h] [-f [INPUT_FILE [INPUT_FILE ...]]]\n\
          \                        [--set [EXPRESSION [EXPRESSION ...]]]\n       \
          \                 [--from_stat [EXPRESSION [EXPRESSION ...]]]\n        \
          \                [--output [EXPRESSION [EXPRESSION ...]]] [-j N]\n     \
          \                   [-g [COND [COND ...]]] [-s [COND [COND ...]]]\n    \
          \                    [--header [HEADER [HEADER ...]]] [-d DELIMITER]\n \
          \                       [--na NA] [-l LIMIT] [-v {0,1,2,3}]\n\nImport phenotypes\
          \ from a file, or set phenotypes to constants, or to summary\nstatistics\
          \ of sample genotype fields.\n\noptional arguments:\n  -h, --help      \
          \      show this help message and exit\n  -f [INPUT_FILE [INPUT_FILE ...]],\
          \ --from_file [INPUT_FILE [INPUT_FILE ...]], --from-file [INPUT_FILE [INPUT_FILE\
          \ ...]]\n                        Import phenotype from a tab or space delimited\
          \ file,\n                        which can be standard input if a name -\
          \ is specified.\n                        Samples are determined by sample\
          \ names in the first\n                        column, or jointly by sample\
          \ name and filename if\n                        there is another column\
          \ with header 'filename'. Names\n                        of phenotype fields\
          \ are determined by header of the\n                        input file, or\
          \ by names provided from option --header.\n                        Non-alphanumeric\
          \ characters in input filed names will\n                        be replaced\
          \ by '_'. If multiple samples in a project\n                        share\
          \ the same names, they will shared the imported\n                      \
          \  phenotypes. Optionally, a list of phenotypes (columns\n             \
          \           of the file) can be specified after filename, in which\n   \
          \                     case only the specified phenotypes will be imported.\n\
          \                        Parameter --samples could be used to limit the\
          \ samples\n                        for which phenotypes are imported. Values\
          \ that match\n                        value of parameter --na and cannot\
          \ be converted to the\n                        probed type of phenotype\
          \ (e.g. '' in a column of\n                        numbers) are recorded\
          \ as missing values.\n  --set [EXPRESSION [EXPRESSION ...]]\n          \
          \              Set a phenotype to a constant (e.g. --set aff=1), or\n  \
          \                      an expression using other existing phenotypes (e.g.\n\
          \                        --set ratio_qt=high_qt/all_qt (the ratio of the\
          \ number\n                        of high quality variants to the number\
          \ of all\n                        variants, where high_qt and all_qt are\
          \ obtained from\n                        sample statistics using parameter\
          \ --from_stat).\n                        Parameter --samples could be used\
          \ to limit the samples\n                        for which genotypes will\
          \ be set.\n  --from_stat [EXPRESSION [EXPRESSION ...]], --from-stat [EXPRESSION\
          \ [EXPRESSION ...]]\n                        Set a phenotype to a summary\
          \ statistics of a genotype\n                        field. For example,\
          \ \"num=count(*)\" sets phenotype num\n                        to be the\
          \ number of genotypes of a sample,\n                        \"GD=avg(DP)\"\
          \ sets phenotype DP to be the average depth\n                        (if\
          \ DP is one of the genotype fields) of the sample.\n                   \
          \     Multiple fields (e.g. '--from-stat \"num=count(*)\"\n            \
          \            \"GD=avg(DP)\"') are also allowed. In addition to\n       \
          \                 standard SQL aggregation functions, variant tools\n  \
          \                      supports special functions #(GT), #(wtGT), #(mutGT),\n\
          \                        #(alt), #(hom), #(het) and #(other), which counts\
          \ the\n                        number of genotypes (the same as count(*)),\
          \ wildtype\n                        genotypes, mutant genotypes alternative\
          \ alleles,\n                        homozygotes, heterozygotes, and genotypes\
          \ with two\n                        different alternative alleles. Parameters\
          \ --genotypes\n                        and --samples could be used to limit\
          \ the genotypes to\n                        be considered and the samples\
          \ for which genotypes will\n                        be set.\n  --output\
          \ [EXPRESSION [EXPRESSION ...]]\n                        A list of phenotype\
          \ to be outputted. SQL-compatible\n                        expressions or\
          \ functions such as \"DP/DP_all\" and\n                        \"avg(DP)\"\
          \ are also allowed\n  -j N, --jobs N        Allow at most N concurrent jobs\
          \ to obtain sample\n                        statistics for parameter --from-stat.\n\
          \  -g [COND [COND ...]], --genotypes [COND [COND ...]]\n               \
          \         Limit the operation to genotypes that match specified\n      \
          \                  conditions. Use 'vtools show genotypes' to list usable\n\
          \                        fields for each sample.\n  -s [COND [COND ...]],\
          \ --samples [COND [COND ...]]\n                        Update phenotype\
          \ for samples that match specified\n                        conditions.\
          \ Use 'vtools show samples' to list usable\n                        fields\
          \ in the sample table.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n        \
          \                Output error and warning (0), info (1), debug (2) and\n\
          \                        trace (3) information to standard output (default\
          \ to\n                        1).\n\nInput/Output options:\n  --header [HEADER\
          \ [HEADER ...]]\n                        A list of header names for input\
          \ file if used with\n                        option --from-file. Otherwise\
          \ a complete header or a\n                        list of names that will\
          \ be joined by a delimiter\n                        (parameter --delimiter),\
          \ for option --output. If a\n                        special name - is specified,\
          \ the header will be read\n                        from the standard input,\
          \ which is the preferred way to\n                        specify large multi-line\
          \ headers (e.g. cat myheader |\n                        vtools export --header\
          \ -). If this parameter is given\n                        without parameter,\
          \ a default header will be derived\n                        from field names.\n\
          \  -d DELIMITER, --delimiter DELIMITER\n                        Delimiter,\
          \ default to tab, a popular alternative is\n                        ','\
          \ for csv output\n  --na NA               Input or output string for missing\
          \ value..\n  -l LIMIT, --limit LIMIT\n                        Number of\
          \ record to display. Default to all record.\n"
        generated_using: *id003
      - !Command
        command:
        - vtools
        - init
        positional:
        - !Positional
          description: ''
          position: 0
          name: TABLE
          optional: true
        named:
        - !Flag
          description: Remove a project if it already exists.
          synonyms:
          - -f
          - --force
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Set the build (hg18 or hg19) of the primary reference\ngenome\
            \ of the project."
          synonyms:
          - --build
          args: !SimpleFlagArg
            name: BUILD
          optional: true
        - !Flag
          description: "Storage model used to storage variants and genotype.\nThe\
            \ default value is the value set by environmental\nvariable STOREMODE\
            \ or sqlite if the variable is not\nset."
          synonyms:
          - -s
          - --store
          args: !ChoiceFlagArg
            choices: !!set
              ? hdf5
              ? sqlite
          optional: true
        - !Flag
          description: "Output error and warning (0), info (1), debug (2) and\ntrace\
            \ (3) information to standard output (default to\n1)."
          synonyms:
          - -v
          - --verbosity
          args: !ChoiceFlagArg
            choices: !!set
              ? "3"
              ? "1"
              ? "2"
              ? "0"
          optional: true
        - !Flag
          description: "Directory or snapshot file of a parent project (e.g.\n--parent\
            \ ../main) from which all or part of variants\n(--variants), samples (--samples)\
            \ and genotypes\n(--genotypes) will be copied to the newly created\nproject."
          synonyms:
          - --parent
          args: !SimpleFlagArg
            name: DIR_or_SNAPSHOT
          optional: true
        - !Flag
          description: "[TABLE]    A variant table of the parental project whose variants\n\
            will be copied to the new project. Default to variant\n(all variants)."
          synonyms:
          - --variants
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]]\nCopy only samples of the parental project\
            \ that match\nspecified conditions."
          synonyms:
          - --samples
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "[COND [COND ...]]\nCopy only genotypes that match specified\
            \ conditions."
          synonyms:
          - --genotypes
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "A list of a subprojects (directories or snapshot files\nof\
            \ projects) that will be merged to create this new\nproject. The subprojects\
            \ must have the same primary\nand alternative reference genome. Variant\
            \ tables with\nthe same names from multiple samples will be merged.\n\
            Samples from the children projects will be copied even\nif they were identical\
            \ samples imported from the same\nsource files.\n"
          synonyms:
          - --children
          args: !RepeatFlagArg
            name: DIR_OR_SNAPSHOT
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: vtools init [-h] [-f] [--parent DIR_or_SNAPSHOT] [--variants\
          \ [TABLE]]\n                   [--samples [COND [COND ...]]]\n         \
          \          [--genotypes [COND [COND ...]]]\n                   [--children\
          \ DIR_OR_SNAPSHOT [DIR_OR_SNAPSHOT ...]]\n                   [--build BUILD]\
          \ [-s {sqlite,hdf5}] [-v {0,1,2,3}]\n                   project\n\nCreate\
          \ a new project in the current directory. This command will fail if\nanother\
          \ project already exists in this directory, unless option '--force' is\n\
          used to remove the existing project.\n\npositional arguments:\n  project\
          \               Name of a new project. This will create a new .proj\n  \
          \                      file under the current directory. Only one project\
          \ is\n                        allowed in a directory.\n\noptional arguments:\n\
          \  -h, --help            show this help message and exit\n  -f, --force\
          \           Remove a project if it already exists.\n  --build BUILD    \
          \     Set the build (hg18 or hg19) of the primary reference\n          \
          \              genome of the project.\n  -s {sqlite,hdf5}, --store {sqlite,hdf5}\n\
          \                        Storage model used to storage variants and genotype.\n\
          \                        The default value is the value set by environmental\n\
          \                        variable STOREMODE or sqlite if the variable is\
          \ not\n                        set.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n\
          \                        Output error and warning (0), info (1), debug (2)\
          \ and\n                        trace (3) information to standard output\
          \ (default to\n                        1).\n\nDerive from a parent project:\n\
          \  --parent DIR_or_SNAPSHOT\n                        Directory or snapshot\
          \ file of a parent project (e.g.\n                        --parent ../main)\
          \ from which all or part of variants\n                        (--variants),\
          \ samples (--samples) and genotypes\n                        (--genotypes)\
          \ will be copied to the newly created\n                        project.\n\
          \  --variants [TABLE]    A variant table of the parental project whose variants\n\
          \                        will be copied to the new project. Default to variant\n\
          \                        (all variants).\n  --samples [COND [COND ...]]\n\
          \                        Copy only samples of the parental project that\
          \ match\n                        specified conditions.\n  --genotypes [COND\
          \ [COND ...]]\n                        Copy only genotypes that match specified\
          \ conditions.\n\nMerge from children projects:\n  --children DIR_OR_SNAPSHOT\
          \ [DIR_OR_SNAPSHOT ...]\n                        A list of a subprojects\
          \ (directories or snapshot files\n                        of projects) that\
          \ will be merged to create this new\n                        project. The\
          \ subprojects must have the same primary\n                        and alternative\
          \ reference genome. Variant tables with\n                        the same\
          \ names from multiple samples will be merged.\n                        Samples\
          \ from the children projects will be copied even\n                     \
          \   if they were identical samples imported from the same\n            \
          \            source files.\n"
        generated_using: *id003
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: vtools [-h] [--version]\n              {init,import,phenotype,show,liftover,use,update,select,exclude,compare,output,export,remove,associate,admin,execute,simulate}\n\
        \              ...\n\nA variant calling, processing, annotation and analysis\
        \ tool for next-\ngeneration sequencing studies.\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --version    \
        \         show program's version number and exit\n\nsubcommands:\n  {init,import,phenotype,show,liftover,use,update,select,exclude,compare,output,export,remove,associate,admin,execute,simulate}\n\
        \    init                Create a new project, or a subproject from an existing\n\
        \                        parent project, or merge several existing projects\n\
        \                        into one\n    import              Import variants\
        \ and related sample genotype from files\n                        in specified\
        \ formats\n    phenotype           Manage sample phenotypes\n    show    \
        \            Display content of a project\n    liftover            Set alternative\
        \ reference genome and update\n                        alternative coordinates\
        \ of all variant tables\n    use                 Prepare (download or import\
        \ if necessary) and use an\n                        annotation database\n\
        \    update              Add or update fields of existing variants and genotype\n\
        \                        using information from specified existing fields,\n\
        \                        sample genotype, or external files\n    select  \
        \            Output or save select variants that match specified\n       \
        \                 conditions\n    exclude             Output or save variants\
        \ after excluding variants that\n                        match specified conditions\n\
        \    compare             Compare sites, variants, or genotypes of variants\
        \ in\n                        two or more variant tables\n    output     \
        \         Output variants in tab or comma separated format\n    export   \
        \           Export samples (variants and genotypes) in specified\n       \
        \                 format\n    remove              Remove project or its contents\
        \ such as variant tables,\n                        fields, and annotation\
        \ databases.\n    associate           Test association between variants and\
        \ phenotypes\n    admin               Perform various administrative tasks\
        \ including merge\n                        and rename samples.\n    execute\
        \             Execute a SQL query\n    simulate            Simulate sequencing\
        \ data using specified simulation\n                        models.\n\nUse\
        \ 'vtools cmd -h' for details about each command. Please contact Bo Peng\n\
        (bpeng at mdanderson.org) if you have any question.\n"
      generated_using: *id003
    subcommands:
    - !Command
      command: *id005
      positional:
      - !Positional
        description: ''
        position: 0
        name: vtools
        optional: false
      - !Positional
        description: ''
        position: 1
        name: show
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - -v
        args: !ChoiceFlagArg
          choices: !!set
            ? "3"
            ? "1"
            ? "2"
            ? "0"
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -l
        args: !SimpleFlagArg
          name: N
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: vtools show [-h] [-l N] [-v {0,1,2,3}]\n                \
        \   [{project,tables,table,samples,phenotypes,genotypes,fields,annotations,annotation,track,formats,format,tests,test,runtime_options,runtime_option,snapshot,snapshots,pipeline,pipelines,simulations,simulation}]\n\
        \                   [items [items ...]]\nvtools show: error: argument type:\
        \ invalid choice: 'items' (choose from 'project', 'tables', 'table', 'samples',\
        \ 'phenotypes', 'genotypes', 'fields', 'annotations', 'annotation', 'track',\
        \ 'formats', 'format', 'tests', 'test', 'runtime_options', 'runtime_option',\
        \ 'snapshot', 'snapshots', 'pipeline', 'pipelines', 'simulations', 'simulation')\n"
      generated_using: *id003
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: vtools show [-h] [-l N] [-v {0,1,2,3}]\n                  \
      \ [{project,tables,table,samples,phenotypes,genotypes,fields,annotations,annotation,track,formats,format,tests,test,runtime_options,runtime_option,snapshot,snapshots,pipeline,pipelines,simulations,simulation}]\n\
      \                   [items [items ...]]\n\nOutput information of all system\
      \ and project related items such as variant\ntables, samples, phenotypes, annotation\
      \ databases and fields.\n\npositional arguments:\n  {project,tables,table,samples,phenotypes,genotypes,fields,annotations,annotation,track,formats,format,tests,test,runtime_options,runtime_option,snapshot,snapshots,pipeline,pipelines,simulations,simulation}\n\
      \                        Type of information to display, which can be 'project'\n\
      \                        for summary of a project, 'tables' for all variant\n\
      \                        tables (or all tables if --verbosity=2), 'table TBL'\n\
      \                        for details of a specific table TBL, 'samples [COND]'\n\
      \                        for sample name, files from which samples are\n   \
      \                     imported, and associated phenotypes (can be supressed\n\
      \                        by option --verbosity 0) of all or selected samples,\n\
      \                        'phenotypes [P1 P2...]' for all or specified\n    \
      \                    phenotypes of samples, 'fields' for fields from\n     \
      \                   variant tables and all used annotation databases,\n    \
      \                    'annotations' for a list of all available annotation\n\
      \                        databases, 'annotation ANN' for details about\n   \
      \                     annotation database ANN, 'track' for information of a\n\
      \                        track file in tabixed vcf, bigWig, or bigBed format,\n\
      \                        'formats' for all supported import and export formats,\n\
      \                        'format FMT' for details of format FMT, 'tests' for\
      \ a\n                        list of all association tests, and 'test TST' for\n\
      \                        details of an association test TST, 'runtime_options'\n\
      \                        for a list of runtime options and their descriptions,\n\
      \                        'runtime_option OPT' for value of specified runtime\n\
      \                        option OPT, 'snapshot' for a particular snapshot by\n\
      \                        name or filename, 'snapshots' for a list of publicly\n\
      \                        available snapshots, and snapshots of the current\n\
      \                        project saved by command 'vtools admin\n          \
      \              --save_snapshots'. 'pipeline PIPELINE' for details of\n     \
      \                   a particular align and variant calling pipeline,\n     \
      \                   'pipelines' for a list of available pipelines,\n       \
      \                 'simulation MODEL' for details of a simulation model,\n  \
      \                      'simulations' for a list of simulation models, The\n\
      \                        default parameter of this command is 'project'.\n \
      \ items                 Items to display, which can be, for example, name of\n\
      \                        table for type 'table', conditions to select samples\n\
      \                        for type 'samples', a list of phenotypes for type\n\
      \                        'phenotypes', name of an annotation database for type\n\
      \                        'annotation', a pattern to selected annotation\n  \
      \                      databases for type 'annotations', name of a format for\n\
      \                        type 'format', and name of an association test for\n\
      \                        type 'test'.\n\noptional arguments:\n  -h, --help \
      \           show this help message and exit\n  -l N, --limit N       Limit output\
      \ to the first N records.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n         \
      \               Output error and warning (0), info (1), debug (2) and\n    \
      \                    trace (3) information to standard output (default to\n\
      \                        1).\n"
    generated_using: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: vtools show [-h] [-l N] [-v {0,1,2,3}]\n                   [{project,tables,table,samples,phenotypes,genotypes,fields,annotations,annotation,track,formats,format,tests,test,runtime_options,runtime_option,snapshot,snapshots,pipeline,pipelines,simulations,simulation}]\n\
    \                   [items [items ...]]\nvtools show: error: argument type: invalid\
    \ choice: 'items' (choose from 'project', 'tables', 'table', 'samples', 'phenotypes',\
    \ 'genotypes', 'fields', 'annotations', 'annotation', 'track', 'formats', 'format',\
    \ 'tests', 'test', 'runtime_options', 'runtime_option', 'snapshot', 'snapshots',\
    \ 'pipeline', 'pipelines', 'simulations', 'simulation')\n"
  generated_using: *id003
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: vtools show [-h] [-l N] [-v {0,1,2,3}]\n                   [{project,tables,table,samples,phenotypes,genotypes,fields,annotations,annotation,track,formats,format,tests,test,runtime_options,runtime_option,snapshot,snapshots,pipeline,pipelines,simulations,simulation}]\n\
  \                   [items [items ...]]\n\nOutput information of all system and\
  \ project related items such as variant\ntables, samples, phenotypes, annotation\
  \ databases and fields.\n\npositional arguments:\n  {project,tables,table,samples,phenotypes,genotypes,fields,annotations,annotation,track,formats,format,tests,test,runtime_options,runtime_option,snapshot,snapshots,pipeline,pipelines,simulations,simulation}\n\
  \                        Type of information to display, which can be 'project'\n\
  \                        for summary of a project, 'tables' for all variant\n  \
  \                      tables (or all tables if --verbosity=2), 'table TBL'\n  \
  \                      for details of a specific table TBL, 'samples [COND]'\n \
  \                       for sample name, files from which samples are\n        \
  \                imported, and associated phenotypes (can be supressed\n       \
  \                 by option --verbosity 0) of all or selected samples,\n       \
  \                 'phenotypes [P1 P2...]' for all or specified\n               \
  \         phenotypes of samples, 'fields' for fields from\n                    \
  \    variant tables and all used annotation databases,\n                       \
  \ 'annotations' for a list of all available annotation\n                       \
  \ databases, 'annotation ANN' for details about\n                        annotation\
  \ database ANN, 'track' for information of a\n                        track file\
  \ in tabixed vcf, bigWig, or bigBed format,\n                        'formats' for\
  \ all supported import and export formats,\n                        'format FMT'\
  \ for details of format FMT, 'tests' for a\n                        list of all\
  \ association tests, and 'test TST' for\n                        details of an association\
  \ test TST, 'runtime_options'\n                        for a list of runtime options\
  \ and their descriptions,\n                        'runtime_option OPT' for value\
  \ of specified runtime\n                        option OPT, 'snapshot' for a particular\
  \ snapshot by\n                        name or filename, 'snapshots' for a list\
  \ of publicly\n                        available snapshots, and snapshots of the\
  \ current\n                        project saved by command 'vtools admin\n    \
  \                    --save_snapshots'. 'pipeline PIPELINE' for details of\n   \
  \                     a particular align and variant calling pipeline,\n       \
  \                 'pipelines' for a list of available pipelines,\n             \
  \           'simulation MODEL' for details of a simulation model,\n            \
  \            'simulations' for a list of simulation models, The\n              \
  \          default parameter of this command is 'project'.\n  items            \
  \     Items to display, which can be, for example, name of\n                   \
  \     table for type 'table', conditions to select samples\n                   \
  \     for type 'samples', a list of phenotypes for type\n                      \
  \  'phenotypes', name of an annotation database for type\n                     \
  \   'annotation', a pattern to selected annotation\n                        databases\
  \ for type 'annotations', name of a format for\n                        type 'format',\
  \ and name of an association test for\n                        type 'test'.\n\n\
  optional arguments:\n  -h, --help            show this help message and exit\n \
  \ -l N, --limit N       Limit output to the first N records.\n  -v {0,1,2,3}, --verbosity\
  \ {0,1,2,3}\n                        Output error and warning (0), info (1), debug\
  \ (2) and\n                        trace (3) information to standard output (default\
  \ to\n                        1).\n"
generated_using: *id003
