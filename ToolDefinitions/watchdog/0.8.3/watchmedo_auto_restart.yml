!Command
command:
- watchmedo
- auto-restart
positional:
- !Positional
  description: Long-running command to run in a subprocess.
  position: 0
  name: command
  optional: false
- !Positional
  description: "Command arguments. Note: Use -- before the command\narguments, otherwise\
    \ watchmedo will try to interpret\nthem. (default: -)"
  position: 1
  name: arg
  optional: false
named:
- !Flag
  description: "Directory to watch. Use another -d or --directory\noption for each\
    \ directory. (default: -)"
  synonyms:
  - -d
  - --directory
  args: !SimpleFlagArg
    name: directory
  optional: true
- !Flag
  description: "matches event paths with these patterns (separated by\n;). (default:\
    \ '*')"
  synonyms:
  - -p
  - --pattern
  - --patterns
  args: !SimpleFlagArg
    name: PATTERNS
  optional: true
- !Flag
  description: "ignores event paths with these patterns (separated by\n;). (default:\
    \ '')"
  synonyms:
  - -i
  - --ignore-pattern
  - --ignore-patterns
  args: !SimpleFlagArg
    name: IGNORE_PATTERNS
  optional: true
- !Flag
  description: 'ignores events for directories (default: False)'
  synonyms:
  - -D
  - --ignore-directories
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'monitors the directories recursively (default: False)'
  synonyms:
  - -R
  - --recursive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "use this as the polling interval/blocking timeout\n(default: 1.0)"
  synonyms:
  - --interval
  - --timeout
  args: !SimpleFlagArg
    name: TIMEOUT
  optional: true
- !Flag
  description: "stop the subprocess with this signal (default SIGINT)\n(default: 'SIGINT')"
  synonyms:
  - --signal
  args: !SimpleFlagArg
    name: SIGNAL
  optional: true
- !Flag
  description: "when stopping, kill the subprocess after the specified\ntimeout (default\
    \ 10) (default: 10.0)\n"
  synonyms:
  - --kill-after
  args: !SimpleFlagArg
    name: KILL_AFTER
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: watchmedo auto-restart [-h] [-d directory] [-p PATTERNS]\n    \
  \                          [-i IGNORE_PATTERNS] [-D] [-R]\n                    \
  \          [--interval TIMEOUT] [--signal SIGNAL]\n                            \
  \  [--kill-after KILL_AFTER]\n                              command [arg [arg ...]]\n\
  \n    Subcommand to start a long-running subprocess and restart it\n    on matched\
  \ events.\n\n    :param args:\n        Command line argument options.\n    \n\n\
  positional arguments:\n  command               Long-running command to run in a\
  \ subprocess.\n  arg                   Command arguments. Note: Use -- before the\
  \ command\n                        arguments, otherwise watchmedo will try to interpret\n\
  \                        them. (default: -)\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -d directory, --directory directory\n\
  \                        Directory to watch. Use another -d or --directory\n   \
  \                     option for each directory. (default: -)\n  -p PATTERNS, --pattern\
  \ PATTERNS, --patterns PATTERNS\n                        matches event paths with\
  \ these patterns (separated by\n                        ;). (default: '*')\n  -i\
  \ IGNORE_PATTERNS, --ignore-pattern IGNORE_PATTERNS, --ignore-patterns IGNORE_PATTERNS\n\
  \                        ignores event paths with these patterns (separated by\n\
  \                        ;). (default: '')\n  -D, --ignore-directories\n       \
  \                 ignores events for directories (default: False)\n  -R, --recursive\
  \       monitors the directories recursively (default: False)\n  --interval TIMEOUT,\
  \ --timeout TIMEOUT\n                        use this as the polling interval/blocking\
  \ timeout\n                        (default: 1.0)\n  --signal SIGNAL       stop\
  \ the subprocess with this signal (default SIGINT)\n                        (default:\
  \ 'SIGINT')\n  --kill-after KILL_AFTER\n                        when stopping, kill\
  \ the subprocess after the specified\n                        timeout (default 10)\
  \ (default: 10.0)\n"
generated_using:
- --help
