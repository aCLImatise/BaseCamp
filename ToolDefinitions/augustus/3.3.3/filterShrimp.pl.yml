!Command
command:
- filterShrimp.pl
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --minScore
  description: minimal percentage of identity (default 300)
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --uniq
  description: take only best match and only, when second best is much worse (default
    false)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --uniqthresh
  description: the best alignment is considered uniquen when the second best has a
    score at most this much fraction of the best (default 0.9)
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --best
  description: take (all) best alignment(s) if they pass the minScore filter.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --commongenefile
  description: file name in which to write cases where one read maps to several different
    genes
  args: !SimpleFlagArg
    name: s
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: output debugging info (default false)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "/usr/local/bin/filterShrimp.pl -- filter a SHRIMP format file\n\nUsage:\
  \ /usr/local/bin/filterShrimp.pl <in.psl >out.f.psl\n  PREREQUISITE: input file\
  \ must be sorted by query name\n  \n  options:\n  --minScore=n       minimal percentage\
  \ of identity (default 300)\n  --uniq             take only best match and only,\
  \ when second best is much worse (default false)\n  --uniqthresh=f     the best\
  \ alignment is considered uniquen when the second best has a score at most this\
  \ much fraction of the best (default 0.9)\n  --best             take (all) best\
  \ alignment(s) if they pass the minScore filter.\n  --commongenefile=s file name\
  \ in which to write cases where one read maps to several different genes\n  --verbose\
  \          output debugging info (default false)\n"
generated_using:
- --help
docker_image:
