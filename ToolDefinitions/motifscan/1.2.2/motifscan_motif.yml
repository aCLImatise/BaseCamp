&id003 !Command
command:
- motifscan
- motif
positional:
- !Positional
  description: --uninstall NAME      Uninstall a motif set.
  position: 0
  name: assembly.
  optional: false
named:
- !Flag
  description: Enable verbose log messages.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Display installed motif sets.
  synonyms:
  - --list
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Display available remote motif sets.
  synonyms:
  - --list-remote
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Install a new motif set with PFMs.
  synonyms:
  - --install
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Build an installed motif set for additional genome
  synonyms:
  - --build
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: Name of the motif set (PFMs) to be installed.
  synonyms:
  - -n
  - --name
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: Local motif PFMs file(s) to be installed.
  synonyms:
  - -i
  args: !RepeatFlagArg
    name: FILE
  optional: true
- !Flag
  description: Download a remote motif PFMs set.
  synonyms:
  - -r
  - --remote
  args: !SimpleFlagArg
    name: PFMs
  optional: true
- !Flag
  description: "Write to a given directory instead of the default\ndirectory."
  synonyms:
  - -o
  - --output-dir
  args: !SimpleFlagArg
    name: DIR
  optional: true
- !Flag
  description: "Which remote database is used to list/install motif\nset (PFMs). Default:\
    \ jaspar_core"
  synonyms:
  - --database
  args: !ChoiceFlagArg
    choices: !!set
      jaspar_core:
      jaspar_collections:
  optional: true
- !Flag
  description: Genome assembly to build the motif set (PFMs) for.
  synonyms:
  - -g
  - --genome
  args: !SimpleFlagArg
    name: GENOME
  optional: true
- !Flag
  description: "Generate N random background sequences to calculate\nmotif score cutoffs.\
    \ Default: 1,000,000"
  synonyms:
  - --n-random
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Random seed used to generate background sequences.
  synonyms:
  - --seed
  args: !SimpleFlagArg
    name: SEED
  optional: true
parent: &id001 !Command
  command:
  - motifscan
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - motifscan
    - genome
    positional: []
    named:
    - !Flag
      description: Enable verbose log messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display installed genome assemblies.
      synonyms:
      - --list
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display available remote genome assemblies.
      synonyms:
      - --list-remote
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Search for genome assemblies in a remote database.
      synonyms:
      - --search
      args: !SimpleFlagArg
        name: KEYWORD
      optional: true
    - !Flag
      description: Install a new genome assembly.
      synonyms:
      - --install
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Uninstall a genome assembly.
      synonyms:
      - --uninstall
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: Name of the genome assembly to be installed.
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: Local genome sequences file(s) in FASTA format.
      synonyms:
      - -i
      args: !RepeatFlagArg
        name: FASTA
      optional: true
    - !Flag
      description: Local gene annotation (refGene.txt) file.
      synonyms:
      - -a
      args: !SimpleFlagArg
        name: ANNOTATION
      optional: true
    - !Flag
      description: Download required data files from a remote assembly.
      synonyms:
      - -r
      - --remote
      args: !SimpleFlagArg
        name: GENOME
      optional: true
    - !Flag
      description: "Write to a given directory instead of the default\ndirectory."
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: DIR
      optional: true
    - !Flag
      description: "Which remote database is used to list/install/search\ngenome assemblies.\
        \ Default: ucsc"
      synonyms:
      - --database
      args: !ChoiceFlagArg
        choices: !!set
          ucsc:
      optional: true
    - !Flag
      description: Clean the download directory after installation.
      synonyms:
      - --clean
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: motifscan genome [-h]\n                        (--list | --list-remote\
      \ | --search KEYWORD | --install | --uninstall NAME)\n                     \
      \   [-n NAME] [-i FASTA [FASTA ...]] [-a ANNOTATION]\n                     \
      \   [-r GENOME] [-o DIR] [--database {ucsc}] [--clean]\n                   \
      \     [--verbose]\n\nGenome assembly commands.\n\nThis subcommand controls the\
      \ genome assemblies used by MotifScan.\nMotifScan requires a sequences FASTA\
      \ file and a gene annotation file \n(if available) for each genome assembly,\
      \ users can either download them \nfrom a remote database or install directly\
      \ with local prepared files.\n\noptional arguments:\n  -h, --help          \
      \  show this help message and exit\n  --verbose             Enable verbose log\
      \ messages.\n\nGenome Subcommands:\n  --list                Display installed\
      \ genome assemblies.\n  --list-remote         Display available remote genome\
      \ assemblies.\n  --search KEYWORD      Search for genome assemblies in a remote\
      \ database.\n  --install             Install a new genome assembly.\n  --uninstall\
      \ NAME      Uninstall a genome assembly.\n\nInstall Options:\n  -n NAME, --name\
      \ NAME  Name of the genome assembly to be installed.\n  -i FASTA [FASTA ...]\
      \  Local genome sequences file(s) in FASTA format.\n  -a ANNOTATION        \
      \ Local gene annotation (refGene.txt) file.\n  -r GENOME, --remote GENOME\n\
      \                        Download required data files from a remote assembly.\n\
      \  -o DIR, --output-dir DIR\n                        Write to a given directory\
      \ instead of the default\n                        directory.\n\nRemote Database\
      \ Options:\n  --database {ucsc}     Which remote database is used to list/install/search\n\
      \                        genome assemblies. Default: ucsc\n  --clean       \
      \        Clean the download directory after installation.\n\nExamples:\n---------\
      \ \n1) Display installed genomes:\n\n    motifscan genome --list\n\n2) Display\
      \ all available genomes in a remote database:\n\n    motifscan genome --list-remote\n\
      \n3) Search genomes in a remote database by keyword (e.g. 'human'):\n\n    motifscan\
      \ genome --search human\n\n4) Install 'hg19' genome assembly from a remote database:\n\
      \n    motifscan genome --install -n hg19 -r hg19\n\n5) Install 'hg19' genome\
      \ assembly with local prepared files:\n\n    motifscan genome --install -n hg19\
      \ -i <hg19.fa> -a <refGene.txt>   \n\n6) Uninstall a genome assembly:\n\n  \
      \  motifscan genome --uninstall <genome_name>\n\nNotes:\n------       \nThe\
      \ path of newly installed genome will be automatically saved. If you \nmove\
      \ the directory to another location later, please reconfigure it:\n\n    motifscan\
      \ config --set-genome <genome_name> <new_path>\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - motifscan
    - scan
    positional:
    - !Positional
      description: 'Enrichment Analysis Options:'
      position: 0
      name: strands.
      optional: false
    - !Positional
      description: --cf {bed,bed3-summit,macs,macs2,narrowpeak,broadpeak,manorm}
      position: 1
      name: analysis.
      optional: false
    - !Positional
      description: 'Threads Options:'
      position: 0
      name: bed
      optional: false
    - !Positional
      description: --plot                If set, plot the distributions of detected
        motif
      position: 0
      name: site.
      optional: false
    - !Positional
      description: 'Examples:'
      position: 1
      name: sites.
      optional: false
    named:
    - !Flag
      description: '[-p {1e-2,1e-3,1e-4,1e-5,1e-6}]'
      synonyms:
      - -m
      - -g
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: Enable verbose log messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Input genomic regions (peaks) to be scanned.
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: FILE
      optional: true
    - !Flag
      description: 'Format of the input file. Default: bed'
      synonyms:
      - -f
      args: !ChoiceFlagArg
        choices: !!set
          bed:
          narrowpeak:
          broadpeak:
          macs2:
          bed3-summit:
          manorm:
          macs:
      optional: true
    - !Flag
      description: Motif set name to scan for.
      synonyms:
      - -m
      - --motif
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: Genome assembly name.
      synonyms:
      - -g
      - --genome
      args: !SimpleFlagArg
        name: GENOME
      optional: true
    - !Flag
      description: 'P value cutoff for motif scores. Default: 1e-4'
      synonyms:
      - -p
      args: !ChoiceFlagArg
        choices: !!set
          '1e-3':
          '1e-2':
          '1e-6':
          '1e-4':
          '1e-5':
      optional: true
    - !Flag
      description: If specified, only scan promoter or distal regions.
      synonyms:
      - --loc
      args: !ChoiceFlagArg
        choices: !!set
          promoter:
          distal:
      optional: true
    - !Flag
      description: 'TSS upstream distance for promoters. Default: 4000'
      synonyms:
      - --upstream
      args: !SimpleFlagArg
        name: DISTANCE
      optional: true
    - !Flag
      description: 'TSS downstream distance for promoters. Default: 2000'
      synonyms:
      - --downstream
      args: !SimpleFlagArg
        name: DISTANCE
      optional: true
    - !Flag
      description: "Window size for scanning. In most cases, motifs occur\nclosely\
        \ around the centers or summits of genomic\npeaks. Scanning a fixed-size window\
        \ is often\nsufficient to detect motif sites and unbiased for the\nenrichment\
        \ analysis. If set to 0, the whole input\nregions are included for scanning.\
        \ Default: 1000"
      synonyms:
      - -w
      - --window-size
      args: !SimpleFlagArg
        name: LENGTH
      optional: true
    - !Flag
      description: '{both,+,-}   Enable strand-specific scanning, defaults to scan
        both'
      synonyms:
      - --strand
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Disable the enrichment analysis.
      synonyms:
      - --no-enrich
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Generate N random control regions for each input\nregion. Default:\
        \ 5"
      synonyms:
      - --n-random
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: Random seed used to generate control regions.
      synonyms:
      - --seed
      args: !SimpleFlagArg
        name: SEED
      optional: true
    - !Flag
      description: Use custom control regions for the enrichment
      synonyms:
      - -c
      args: !SimpleFlagArg
        name: FILE
      optional: true
    - !Flag
      description: Number of processes used to run in parallel.
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: Directory to write output files.
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: DIR
      optional: true
    - !Flag
      description: If set, report the position for each detected motif
      synonyms:
      - --site
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: motifscan scan [-h] -i FILE\n                      [-f {bed,bed3-summit,macs,macs2,narrowpeak,broadpeak,manorm}]\n\
      \                      -m NAME -g GENOME [-p {1e-2,1e-3,1e-4,1e-5,1e-6}]\n \
      \                     [--loc {promoter,distal}] [--upstream DISTANCE]\n    \
      \                  [--downstream DISTANCE] [-w LENGTH]\n                   \
      \   [--strand {both,+,-}] [--no-enrich] [--n-random N]\n                   \
      \   [--seed SEED] [-c FILE]\n                      [--cf {bed,bed3-summit,macs,macs2,narrowpeak,broadpeak,manorm}]\n\
      \                      [-t N] -o DIR [--site] [--plot] [--verbose]\n\nScan input\
      \ regions to detect motif occurrences.\n\nThis main command invokes to scan\
      \ the sequences of user specified input \ngenomic regions and detect the occurrences\
      \ for a set of known motifs. \nAfter scanning the input regions, an optional\
      \ motif enrichment analysis \nis performed to check whether these motifs are\
      \ over/under-represented \ncompared to control regions (can be random generated\
      \ or user specified).\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --verbose             Enable verbose log messages.\n\
      \nInput Options:\n  -i FILE               Input genomic regions (peaks) to be\
      \ scanned.\n  -f {bed,bed3-summit,macs,macs2,narrowpeak,broadpeak,manorm}\n\
      \                        Format of the input file. Default: bed\n  -m NAME,\
      \ --motif NAME\n                        Motif set name to scan for.\n  -g GENOME,\
      \ --genome GENOME\n                        Genome assembly name.\n\nScanning\
      \ Options:\n  -p {1e-2,1e-3,1e-4,1e-5,1e-6}\n                        P value\
      \ cutoff for motif scores. Default: 1e-4\n  --loc {promoter,distal}\n      \
      \                  If specified, only scan promoter or distal regions.\n  --upstream\
      \ DISTANCE   TSS upstream distance for promoters. Default: 4000\n  --downstream\
      \ DISTANCE\n                        TSS downstream distance for promoters. Default:\
      \ 2000\n  -w LENGTH, --window-size LENGTH\n                        Window size\
      \ for scanning. In most cases, motifs occur\n                        closely\
      \ around the centers or summits of genomic\n                        peaks. Scanning\
      \ a fixed-size window is often\n                        sufficient to detect\
      \ motif sites and unbiased for the\n                        enrichment analysis.\
      \ If set to 0, the whole input\n                        regions are included\
      \ for scanning. Default: 1000\n  --strand {both,+,-}   Enable strand-specific\
      \ scanning, defaults to scan both\n                        strands.\n\nEnrichment\
      \ Analysis Options:\n  --no-enrich           Disable the enrichment analysis.\n\
      \  --n-random N          Generate N random control regions for each input\n\
      \                        region. Default: 5\n  --seed SEED           Random\
      \ seed used to generate control regions.\n  -c FILE               Use custom\
      \ control regions for the enrichment\n                        analysis.\n  --cf\
      \ {bed,bed3-summit,macs,macs2,narrowpeak,broadpeak,manorm}\n               \
      \         Format of the control file. Default: bed\n\nThreads Options:\n  -t\
      \ N, --threads N     Number of processes used to run in parallel.\n\nOutput\
      \ Options:\n  -o DIR, --output-dir DIR\n                        Directory to\
      \ write output files.\n  --site                If set, report the position for\
      \ each detected motif\n                        site.\n  --plot             \
      \   If set, plot the distributions of detected motif\n                     \
      \   sites.\n\nExamples:\n---------\n1) Scan input regions for a set of known\
      \ motifs under 'hg19' genome:\n\n    motifscan scan -i regions.bed -m <motif_set>\
      \ -g hg19 -o <path>\n\n2) Test motif enrichment compared to user-specified control\
      \ regions:\n\n    motifscan scan -i regions.bed -c control.bed -m <motif_set>\
      \ -g hg19 -o <path>\n\n3) Only scan input regions located at promoters:\n\n\
      \    motifscan scan -i regions.bed -m <motif_set> -g hg19 --loc promoter -o\
      \ <path>\n\n4) Scan whole input regions rather than fixed-size windows:\n\n\
      \    motifscan scan -i regions.bed -m <motif_set> -g hg19 -w 0 -o <path>\n\n\
      5) Report the positions and distributions of detected motif sites:\n\n    motifscan\
      \ scan -i regions.bed -m <motif_set> -g hg19 --site --plot -o <path>\n"
    generated_using: *id002
  - *id003
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - -v
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: motifscan [-h] [-v] command ...\n\nMotifScan: A motif discovery\
    \ tool to detect the occurrences of known motifs\n\nGiven a set of input genomic\
    \ regions, MotifScan scans the sequences to \ndetect the occurrences of known\
    \ motifs. It can also perform an enrichment \nanalysis to check whether these\
    \ motifs are over/under-represented compared \nto the control regions.\n\n!!!\
    \ NOTE !!!\nMotifScan requires basic data files including genome sequences and\
    \ motif \nPFMs (Position Frequency Matrices) to detect the binding sites of motifs.\
    \ \nBefore scanning, users should install genome assemblies and motif sets from\n\
    a remote database or with local prepared files via `motifscan genome` and \n`motifscan\
    \ motif` subcommands.\n\nCitation:\nSun, H., Wang, J., Gong, Z. et al. Quantitative\
    \ integration of epigenomic \nvariation and transcription factor binding using\
    \ MAmotif toolkit identifies\nan important role of IRF2 as transcription activator\
    \ at gene promoters. \nCell Discov 4, 38 (2018). https://doi.org/10.1038/s41421-018-0045-y\n\
    \noptional arguments:\n  -h, --help     show this help message and exit\n  -v,\
    \ --version  show program's version number and exit\n\nMotifScan Subcommands:\n\
    \  command\n    config       Configure data paths for MotifScan.\n    genome \
    \      Genome assembly commands.\n    motif        Motif set (PFMs/PWMs) commands.\n\
    \    scan         Scan input regions to detect motif occurrences.\n\nPlease run\
    \ `motifscan COMMAND -h` to see the subcommand options.\n\nSee also: \n  Documentation:\
    \ https://motifscan.readthedocs.io\n  Source code: https://github.com/shao-lab/MotifScan\n\
    \  Bug reports: https://github.com/shao-lab/MotifScan/issues\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: motifscan motif [-h]\n                       (--list | --list-remote\
  \ | --install | --build NAME | --uninstall NAME)\n                       [-n NAME]\
  \ [-i FILE [FILE ...]] [-r PFMs] [-o DIR]\n                       [--database {jaspar_core,jaspar_collections}]\n\
  \                       [-g GENOME] [--n-random N] [--seed SEED] [--verbose]\n\n\
  Motif set (PFMs/PWMs) commands.\n\nMotifScan only detects the binding sites of known\
  \ motifs. Before scanning, \nthe motif set should be installed and built with PFMs\
  \ (Position Frequency \nMatrices). Since different assemblies have different genome\
  \ contents, it \nis necessary to build the PFMs and get proper motif score cutoffs\
  \ for every \ngenome assembly you want to scan later. \n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --verbose          \
  \   Enable verbose log messages.\n\nMotif Subcommands:\n  --list               \
  \ Display installed motif sets.\n  --list-remote         Display available remote\
  \ motif sets.\n  --install             Install a new motif set with PFMs.\n  --build\
  \ NAME          Build an installed motif set for additional genome\n           \
  \             assembly.\n  --uninstall NAME      Uninstall a motif set.\n\nInstall\
  \ Options:\n  -n NAME, --name NAME  Name of the motif set (PFMs) to be installed.\n\
  \  -i FILE [FILE ...]    Local motif PFMs file(s) to be installed.\n  -r PFMs, --remote\
  \ PFMs\n                        Download a remote motif PFMs set.\n  -o DIR, --output-dir\
  \ DIR\n                        Write to a given directory instead of the default\n\
  \                        directory.\n\nRemote Database Options:\n  --database {jaspar_core,jaspar_collections}\n\
  \                        Which remote database is used to list/install motif\n \
  \                       set (PFMs). Default: jaspar_core\n\nBuild Options:\n  -g\
  \ GENOME, --genome GENOME\n                        Genome assembly to build the\
  \ motif set (PFMs) for.\n  --n-random N          Generate N random background sequences\
  \ to calculate\n                        motif score cutoffs. Default: 1,000,000\n\
  \  --seed SEED           Random seed used to generate background sequences.\n\n\
  Examples:\n---------        \n1) Display installed motif sets:\n\n    motifscan\
  \ motif --list\n\n2) Display all available motif sets in a remote database:\n\n\
  \    motifscan motif --list-remote\n\n3) Install a motif set from a remote database\
  \ and build for genome 'hg19':\n\n    motifscan motif --install -n <motif_set> -r\
  \ <remote_PFMs> -g hg19\n\n4） Install a motif set with local PFMs file(s) and build\
  \ for genome 'mm9':\n\n    motifscan motif --install -n <motif_set> -i <pfms.jaspar>\
  \ -g mm9\n\n5) Build an installed motif set (PFMs) for additional assembly 'hg38':\n\
  \n    motifscan motif --build <motif_set> -g hg38\n\n6) Uninstall a motif set:\n\
  \n    motifscan motif --uninstall <motif_set>\n\nNotes:\n------\n1) When installing\
  \ a motif set by `--install`, you can append a `-g` option \nto build the PFMs for\
  \ the specified assembly after installation.\n\n2) The genome assembly specified\
  \ by `-g` should be pre-installed by command \n`motifscan genome --install`.\n\n\
  3) The path of newly installed motif set will be automatically saved and \nall the\
  \ built PWMs files are stored under the directory. If you move it \nto a new path,\
  \ please reconfigure it:\n\n    motifscan config --set-motif <motif_set> <new_path>\n"
generated_using: *id002
