!Command
command: &id001
- shed-tools
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - shed-tools
  - test
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -t
    - --toolsfile
    description: Tools file to use (see tool_list.yaml.sample)
    args: !SimpleFlagArg
      name: TOOL_LIST_FILE
  - !Flag
    optional: true
    synonyms:
    - -y
    - --yaml_tool
    description: Install tool represented by yaml string
    args: !SimpleFlagArg
      name: TOOL_YAML
  - !Flag
    optional: true
    synonyms:
    - --name
    description: "The name of the tool to install (only applicable if\nthe tools file\
      \ is not provided)."
    args: !SimpleFlagArg
      name: NAME
  - !Flag
    optional: true
    synonyms:
    - --owner
    description: "The owner of the tool to install (only applicable if\nthe tools\
      \ file is not provided)."
    args: !SimpleFlagArg
      name: OWNER
  - !Flag
    optional: true
    synonyms:
    - --revisions
    description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
      \ that will be\ninstalled. All revisions must be specified after this\nflag\
      \ by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
      \ if the tools file is not\nprovided)."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --toolshed
    description: "The Tool Shed URL where to install the tool from. This\nis applicable\
      \ only if the tool info is provided as an\noption vs. in the tools file."
    args: !SimpleFlagArg
      name: TOOL_SHED_URL
  - !Flag
    optional: true
    synonyms:
    - --test_json
    description: "Record tool test output to specified file. This file\ncan be turned\
      \ into reports with ``planemo test_reports\n<output.json>``."
    args: !SimpleFlagArg
      name: TEST_JSON
  - !Flag
    optional: true
    synonyms:
    - --test_user_api_key
    description: "A user is needed to execute the tests. This can be\ndifferent the\
      \ --api_key which is assumed to be an\nadmin key. If --api_key is a valid user\
      \ (e.g. it is\nnot a master API key) this does not need to be\nspecified and\
      \ --api_key will be reused."
    args: !SimpleFlagArg
      name: TEST_USER_API_KEY
  - !Flag
    optional: true
    synonyms:
    - --test_user
    description: "A user is needed to execute the tests. If --api_key is\na master\
      \ api key (i.e. not tied to a real user) and\n--test_user_api_key isn't specified,\
      \ this user email\nwill be used. This user will be created if needed."
    args: !SimpleFlagArg
      name: TEST_USER
  - !Flag
    optional: true
    synonyms:
    - --parallel_tests
    description: "Specify the maximum number of tests that will be run\nin parallel."
    args: !SimpleFlagArg
      name: PARALLEL_TESTS
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Increase output verbosity.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log_file
    description: "Where the log file should be stored. Default is a file\nin your\
      \ system's temp folder"
    args: !SimpleFlagArg
      name: LOG_FILE
  - !Flag
    optional: true
    synonyms:
    - -g
    - --galaxy
    description: Target Galaxy instance URL/IP address
    args: !SimpleFlagArg
      name: GALAXY
  - !Flag
    optional: true
    synonyms:
    - -u
    - --user
    description: Galaxy user email address
    args: !SimpleFlagArg
      name: USER
  - !Flag
    optional: true
    synonyms:
    - -p
    - --password
    description: Password for the Galaxy user
    args: !SimpleFlagArg
      name: PASSWORD
  - !Flag
    optional: true
    synonyms:
    - -a
    - --api_key
    description: "Galaxy admin user API key (required if not defined in\nthe tools\
      \ list file)\n"
    args: !SimpleFlagArg
      name: API_KEY
  parent: &id010 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -t
        - --toolsfile
        description: Tools file to use (see tool_list.yaml.sample)
        args: !SimpleFlagArg
          name: TOOL_LIST_FILE
      - !Flag
        optional: true
        synonyms:
        - -y
        - --yaml_tool
        description: Install tool represented by yaml string
        args: !SimpleFlagArg
          name: TOOL_YAML
      - !Flag
        optional: true
        synonyms:
        - --name
        description: "The name of the tool to install (only applicable if\nthe tools\
          \ file is not provided)."
        args: !SimpleFlagArg
          name: NAME
      - !Flag
        optional: true
        synonyms:
        - --owner
        description: "The owner of the tool to install (only applicable if\nthe tools\
          \ file is not provided)."
        args: !SimpleFlagArg
          name: OWNER
      - !Flag
        optional: true
        synonyms:
        - --revisions
        description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
          \ that will be\ninstalled. All revisions must be specified after this\n\
          flag by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
          \ if the tools file is not\nprovided)."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --toolshed
        description: "The Tool Shed URL where to install the tool from. This\nis applicable\
          \ only if the tool info is provided as an\noption vs. in the tools file."
        args: !SimpleFlagArg
          name: TOOL_SHED_URL
      - !Flag
        optional: true
        synonyms:
        - --test_json
        description: "Record tool test output to specified file. This file\ncan be\
          \ turned into reports with ``planemo test_reports\n<output.json>``."
        args: !SimpleFlagArg
          name: TEST_JSON
      - !Flag
        optional: true
        synonyms:
        - --test_user_api_key
        description: "A user is needed to execute the tests. This can be\ndifferent\
          \ the --api_key which is assumed to be an\nadmin key. If --api_key is a\
          \ valid user (e.g. it is\nnot a master API key) this does not need to be\n\
          specified and --api_key will be reused."
        args: !SimpleFlagArg
          name: TEST_USER_API_KEY
      - !Flag
        optional: true
        synonyms:
        - --test_user
        description: "A user is needed to execute the tests. If --api_key is\na master\
          \ api key (i.e. not tied to a real user) and\n--test_user_api_key isn't\
          \ specified, this user email\nwill be used. This user will be created if\
          \ needed."
        args: !SimpleFlagArg
          name: TEST_USER
      - !Flag
        optional: true
        synonyms:
        - --parallel_tests
        description: "Specify the maximum number of tests that will be run\nin parallel."
        args: !SimpleFlagArg
          name: PARALLEL_TESTS
      - !Flag
        optional: true
        synonyms:
        - -v
        - --verbose
        description: Increase output verbosity.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --log_file
        description: "Where the log file should be stored. Default is a file\nin your\
          \ system's temp folder"
        args: !SimpleFlagArg
          name: LOG_FILE
      - !Flag
        optional: true
        synonyms:
        - -g
        - --galaxy
        description: Target Galaxy instance URL/IP address
        args: !SimpleFlagArg
          name: GALAXY
      - !Flag
        optional: true
        synonyms:
        - -u
        - --user
        description: Galaxy user email address
        args: !SimpleFlagArg
          name: USER
      - !Flag
        optional: true
        synonyms:
        - -p
        - --password
        description: Password for the Galaxy user
        args: !SimpleFlagArg
          name: PASSWORD
      - !Flag
        optional: true
        synonyms:
        - -a
        - --api_key
        description: "Galaxy admin user API key (required if not defined in\nthe tools\
          \ list file)\n"
        args: !SimpleFlagArg
          name: API_KEY
      parent: &id009 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -t
            - --toolsfile
            description: Tools file to use (see tool_list.yaml.sample)
            args: !SimpleFlagArg
              name: TOOL_LIST_FILE
          - !Flag
            optional: true
            synonyms:
            - -y
            - --yaml_tool
            description: Install tool represented by yaml string
            args: !SimpleFlagArg
              name: TOOL_YAML
          - !Flag
            optional: true
            synonyms:
            - --name
            description: "The name of the tool to install (only applicable if\nthe\
              \ tools file is not provided)."
            args: !SimpleFlagArg
              name: NAME
          - !Flag
            optional: true
            synonyms:
            - --owner
            description: "The owner of the tool to install (only applicable if\nthe\
              \ tools file is not provided)."
            args: !SimpleFlagArg
              name: OWNER
          - !Flag
            optional: true
            synonyms:
            - --revisions
            description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
              \ that will be\ninstalled. All revisions must be specified after this\n\
              flag by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only\
              \ applicable if the tools file is not\nprovided)."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --toolshed
            description: "The Tool Shed URL where to install the tool from. This\n\
              is applicable only if the tool info is provided as an\noption vs. in\
              \ the tools file."
            args: !SimpleFlagArg
              name: TOOL_SHED_URL
          - !Flag
            optional: true
            synonyms:
            - --test_json
            description: "Record tool test output to specified file. This file\ncan\
              \ be turned into reports with ``planemo test_reports\n<output.json>``."
            args: !SimpleFlagArg
              name: TEST_JSON
          - !Flag
            optional: true
            synonyms:
            - --test_user_api_key
            description: "A user is needed to execute the tests. This can be\ndifferent\
              \ the --api_key which is assumed to be an\nadmin key. If --api_key is\
              \ a valid user (e.g. it is\nnot a master API key) this does not need\
              \ to be\nspecified and --api_key will be reused."
            args: !SimpleFlagArg
              name: TEST_USER_API_KEY
          - !Flag
            optional: true
            synonyms:
            - --test_user
            description: "A user is needed to execute the tests. If --api_key is\n\
              a master api key (i.e. not tied to a real user) and\n--test_user_api_key\
              \ isn't specified, this user email\nwill be used. This user will be\
              \ created if needed."
            args: !SimpleFlagArg
              name: TEST_USER
          - !Flag
            optional: true
            synonyms:
            - --parallel_tests
            description: "Specify the maximum number of tests that will be run\nin\
              \ parallel."
            args: !SimpleFlagArg
              name: PARALLEL_TESTS
          - !Flag
            optional: true
            synonyms:
            - -v
            - --verbose
            description: Increase output verbosity.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --log_file
            description: "Where the log file should be stored. Default is a file\n\
              in your system's temp folder"
            args: !SimpleFlagArg
              name: LOG_FILE
          - !Flag
            optional: true
            synonyms:
            - -g
            - --galaxy
            description: Target Galaxy instance URL/IP address
            args: !SimpleFlagArg
              name: GALAXY
          - !Flag
            optional: true
            synonyms:
            - -u
            - --user
            description: Galaxy user email address
            args: !SimpleFlagArg
              name: USER
          - !Flag
            optional: true
            synonyms:
            - -p
            - --password
            description: Password for the Galaxy user
            args: !SimpleFlagArg
              name: PASSWORD
          - !Flag
            optional: true
            synonyms:
            - -a
            - --api_key
            description: "Galaxy admin user API key (required if not defined in\n\
              the tools list file)\n"
            args: !SimpleFlagArg
              name: API_KEY
          parent: &id008 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -t
                - --toolsfile
                description: Tools file to use (see tool_list.yaml.sample)
                args: !SimpleFlagArg
                  name: TOOL_LIST_FILE
              - !Flag
                optional: true
                synonyms:
                - -y
                - --yaml_tool
                description: Install tool represented by yaml string
                args: !SimpleFlagArg
                  name: TOOL_YAML
              - !Flag
                optional: true
                synonyms:
                - --name
                description: "The name of the tool to install (only applicable if\n\
                  the tools file is not provided)."
                args: !SimpleFlagArg
                  name: NAME
              - !Flag
                optional: true
                synonyms:
                - --owner
                description: "The owner of the tool to install (only applicable if\n\
                  the tools file is not provided)."
                args: !SimpleFlagArg
                  name: OWNER
              - !Flag
                optional: true
                synonyms:
                - --revisions
                description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool\
                  \ repository that will be\ninstalled. All revisions must be specified\
                  \ after this\nflag by a space.Example: --revisions 0a5c7992b1ac\n\
                  f048033da666(Only applicable if the tools file is not\nprovided)."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --toolshed
                description: "The Tool Shed URL where to install the tool from. This\n\
                  is applicable only if the tool info is provided as an\noption vs.\
                  \ in the tools file."
                args: !SimpleFlagArg
                  name: TOOL_SHED_URL
              - !Flag
                optional: true
                synonyms:
                - --test_json
                description: "Record tool test output to specified file. This file\n\
                  can be turned into reports with ``planemo test_reports\n<output.json>``."
                args: !SimpleFlagArg
                  name: TEST_JSON
              - !Flag
                optional: true
                synonyms:
                - --test_user_api_key
                description: "A user is needed to execute the tests. This can be\n\
                  different the --api_key which is assumed to be an\nadmin key. If\
                  \ --api_key is a valid user (e.g. it is\nnot a master API key) this\
                  \ does not need to be\nspecified and --api_key will be reused."
                args: !SimpleFlagArg
                  name: TEST_USER_API_KEY
              - !Flag
                optional: true
                synonyms:
                - --test_user
                description: "A user is needed to execute the tests. If --api_key\
                  \ is\na master api key (i.e. not tied to a real user) and\n--test_user_api_key\
                  \ isn't specified, this user email\nwill be used. This user will\
                  \ be created if needed."
                args: !SimpleFlagArg
                  name: TEST_USER
              - !Flag
                optional: true
                synonyms:
                - --parallel_tests
                description: "Specify the maximum number of tests that will be run\n\
                  in parallel."
                args: !SimpleFlagArg
                  name: PARALLEL_TESTS
              - !Flag
                optional: true
                synonyms:
                - -v
                - --verbose
                description: Increase output verbosity.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --log_file
                description: "Where the log file should be stored. Default is a file\n\
                  in your system's temp folder"
                args: !SimpleFlagArg
                  name: LOG_FILE
              - !Flag
                optional: true
                synonyms:
                - -g
                - --galaxy
                description: Target Galaxy instance URL/IP address
                args: !SimpleFlagArg
                  name: GALAXY
              - !Flag
                optional: true
                synonyms:
                - -u
                - --user
                description: Galaxy user email address
                args: !SimpleFlagArg
                  name: USER
              - !Flag
                optional: true
                synonyms:
                - -p
                - --password
                description: Password for the Galaxy user
                args: !SimpleFlagArg
                  name: PASSWORD
              - !Flag
                optional: true
                synonyms:
                - -a
                - --api_key
                description: "Galaxy admin user API key (required if not defined in\n\
                  the tools list file)\n"
                args: !SimpleFlagArg
                  name: API_KEY
              parent: &id007 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    - --toolsfile
                    description: Tools file to use (see tool_list.yaml.sample)
                    args: !SimpleFlagArg
                      name: TOOL_LIST_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -y
                    - --yaml_tool
                    description: Install tool represented by yaml string
                    args: !SimpleFlagArg
                      name: TOOL_YAML
                  - !Flag
                    optional: true
                    synonyms:
                    - --name
                    description: "The name of the tool to install (only applicable\
                      \ if\nthe tools file is not provided)."
                    args: !SimpleFlagArg
                      name: NAME
                  - !Flag
                    optional: true
                    synonyms:
                    - --owner
                    description: "The owner of the tool to install (only applicable\
                      \ if\nthe tools file is not provided)."
                    args: !SimpleFlagArg
                      name: OWNER
                  - !Flag
                    optional: true
                    synonyms:
                    - --revisions
                    description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the\
                      \ tool repository that will be\ninstalled. All revisions must\
                      \ be specified after this\nflag by a space.Example: --revisions\
                      \ 0a5c7992b1ac\nf048033da666(Only applicable if the tools file\
                      \ is not\nprovided)."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --toolshed
                    description: "The Tool Shed URL where to install the tool from.\
                      \ This\nis applicable only if the tool info is provided as an\n\
                      option vs. in the tools file."
                    args: !SimpleFlagArg
                      name: TOOL_SHED_URL
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_json
                    description: "Record tool test output to specified file. This\
                      \ file\ncan be turned into reports with ``planemo test_reports\n\
                      <output.json>``."
                    args: !SimpleFlagArg
                      name: TEST_JSON
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_user_api_key
                    description: "A user is needed to execute the tests. This can\
                      \ be\ndifferent the --api_key which is assumed to be an\nadmin\
                      \ key. If --api_key is a valid user (e.g. it is\nnot a master\
                      \ API key) this does not need to be\nspecified and --api_key\
                      \ will be reused."
                    args: !SimpleFlagArg
                      name: TEST_USER_API_KEY
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_user
                    description: "A user is needed to execute the tests. If --api_key\
                      \ is\na master api key (i.e. not tied to a real user) and\n\
                      --test_user_api_key isn't specified, this user email\nwill be\
                      \ used. This user will be created if needed."
                    args: !SimpleFlagArg
                      name: TEST_USER
                  - !Flag
                    optional: true
                    synonyms:
                    - --parallel_tests
                    description: "Specify the maximum number of tests that will be\
                      \ run\nin parallel."
                    args: !SimpleFlagArg
                      name: PARALLEL_TESTS
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    - --verbose
                    description: Increase output verbosity.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --log_file
                    description: "Where the log file should be stored. Default is\
                      \ a file\nin your system's temp folder"
                    args: !SimpleFlagArg
                      name: LOG_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    - --galaxy
                    description: Target Galaxy instance URL/IP address
                    args: !SimpleFlagArg
                      name: GALAXY
                  - !Flag
                    optional: true
                    synonyms:
                    - -u
                    - --user
                    description: Galaxy user email address
                    args: !SimpleFlagArg
                      name: USER
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    - --password
                    description: Password for the Galaxy user
                    args: !SimpleFlagArg
                      name: PASSWORD
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    - --api_key
                    description: "Galaxy admin user API key (required if not defined\
                      \ in\nthe tools list file)\n"
                    args: !SimpleFlagArg
                      name: API_KEY
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        - --toolsfile
                        description: Tools file to use (see tool_list.yaml.sample)
                        args: !SimpleFlagArg
                          name: TOOL_LIST_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -y
                        - --yaml_tool
                        description: Install tool represented by yaml string
                        args: !SimpleFlagArg
                          name: TOOL_YAML
                      - !Flag
                        optional: true
                        synonyms:
                        - --name
                        description: "The name of the tool to install (only applicable\
                          \ if\nthe tools file is not provided)."
                        args: !SimpleFlagArg
                          name: NAME
                      - !Flag
                        optional: true
                        synonyms:
                        - --owner
                        description: "The owner of the tool to install (only applicable\
                          \ if\nthe tools file is not provided)."
                        args: !SimpleFlagArg
                          name: OWNER
                      - !Flag
                        optional: true
                        synonyms:
                        - --revisions
                        description: "[REVISIONS [REVISIONS ...]]\nThe revisions of\
                          \ the tool repository that will be\ninstalled. All revisions\
                          \ must be specified after this\nflag by a space.Example:\
                          \ --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
                          \ if the tools file is not\nprovided)."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --toolshed
                        description: "The Tool Shed URL where to install the tool\
                          \ from. This\nis applicable only if the tool info is provided\
                          \ as an\noption vs. in the tools file."
                        args: !SimpleFlagArg
                          name: TOOL_SHED_URL
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_json
                        description: "Record tool test output to specified file. This\
                          \ file\ncan be turned into reports with ``planemo test_reports\n\
                          <output.json>``."
                        args: !SimpleFlagArg
                          name: TEST_JSON
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_user_api_key
                        description: "A user is needed to execute the tests. This\
                          \ can be\ndifferent the --api_key which is assumed to be\
                          \ an\nadmin key. If --api_key is a valid user (e.g. it is\n\
                          not a master API key) this does not need to be\nspecified\
                          \ and --api_key will be reused."
                        args: !SimpleFlagArg
                          name: TEST_USER_API_KEY
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_user
                        description: "A user is needed to execute the tests. If --api_key\
                          \ is\na master api key (i.e. not tied to a real user) and\n\
                          --test_user_api_key isn't specified, this user email\nwill\
                          \ be used. This user will be created if needed."
                        args: !SimpleFlagArg
                          name: TEST_USER
                      - !Flag
                        optional: true
                        synonyms:
                        - --parallel_tests
                        description: "Specify the maximum number of tests that will\
                          \ be run\nin parallel."
                        args: !SimpleFlagArg
                          name: PARALLEL_TESTS
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --verbose
                        description: Increase output verbosity.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --log_file
                        description: "Where the log file should be stored. Default\
                          \ is a file\nin your system's temp folder"
                        args: !SimpleFlagArg
                          name: LOG_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        - --galaxy
                        description: Target Galaxy instance URL/IP address
                        args: !SimpleFlagArg
                          name: GALAXY
                      - !Flag
                        optional: true
                        synonyms:
                        - -u
                        - --user
                        description: Galaxy user email address
                        args: !SimpleFlagArg
                          name: USER
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        - --password
                        description: Password for the Galaxy user
                        args: !SimpleFlagArg
                          name: PASSWORD
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --api_key
                        description: "Galaxy admin user API key (required if not defined\
                          \ in\nthe tools list file)\n"
                        args: !SimpleFlagArg
                          name: API_KEY
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE]\
                        \ [-g GALAXY] [-u USER]\n                       [-p PASSWORD]\
                        \ [-a API_KEY] [-t TOOL_LIST_FILE]\n                     \
                        \  [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n        \
                        \               [--revisions [REVISIONS [REVISIONS ...]]]\n\
                        \                       [--toolshed TOOL_SHED_URL] [--test_json\
                        \ TEST_JSON]\n                       [--test_user_api_key\
                        \ TEST_USER_API_KEY]\n                       [--test_user\
                        \ TEST_USER]\n                       [--parallel_tests PARALLEL_TESTS]\n\
                        \noptional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
                        \                        Tools file to use (see tool_list.yaml.sample)\n\
                        \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                 \
                        \       Install tool represented by yaml string\n  --name\
                        \ NAME           The name of the tool to install (only applicable\
                        \ if\n                        the tools file is not provided).\n\
                        \  --owner OWNER         The owner of the tool to install\
                        \ (only applicable if\n                        the tools file\
                        \ is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
                        \                        The revisions of the tool repository\
                        \ that will be\n                        installed. All revisions\
                        \ must be specified after this\n                        flag\
                        \ by a space.Example: --revisions 0a5c7992b1ac\n         \
                        \               f048033da666(Only applicable if the tools\
                        \ file is not\n                        provided).\n  --toolshed\
                        \ TOOL_SHED_URL\n                        The Tool Shed URL\
                        \ where to install the tool from. This\n                 \
                        \       is applicable only if the tool info is provided as\
                        \ an\n                        option vs. in the tools file.\n\
                        \  --test_json TEST_JSON\n                        Record tool\
                        \ test output to specified file. This file\n             \
                        \           can be turned into reports with ``planemo test_reports\n\
                        \                        <output.json>``.\n  --test_user_api_key\
                        \ TEST_USER_API_KEY\n                        A user is needed\
                        \ to execute the tests. This can be\n                    \
                        \    different the --api_key which is assumed to be an\n \
                        \                       admin key. If --api_key is a valid\
                        \ user (e.g. it is\n                        not a master API\
                        \ key) this does not need to be\n                        specified\
                        \ and --api_key will be reused.\n  --test_user TEST_USER\n\
                        \                        A user is needed to execute the tests.\
                        \ If --api_key is\n                        a master api key\
                        \ (i.e. not tied to a real user) and\n                   \
                        \     --test_user_api_key isn't specified, this user email\n\
                        \                        will be used. This user will be created\
                        \ if needed.\n  --parallel_tests PARALLEL_TESTS\n        \
                        \                Specify the maximum number of tests that\
                        \ will be run\n                        in parallel.\n\nGeneral\
                        \ options:\n  -v, --verbose         Increase output verbosity.\n\
                        \  --log_file LOG_FILE   Where the log file should be stored.\
                        \ Default is a file\n                        in your system's\
                        \ temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy\
                        \ GALAXY\n                        Target Galaxy instance URL/IP\
                        \ address\n  -u USER, --user USER  Galaxy user email address\n\
                        \  -p PASSWORD, --password PASSWORD\n                    \
                        \    Password for the Galaxy user\n  -a API_KEY, --api_key\
                        \ API_KEY\n                        Galaxy admin user API key\
                        \ (required if not defined in\n                        the\
                        \ tools list file)\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - shed-tools
                      - install
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        - --toolsfile
                        description: Tools file to use (see tool_list.yaml.sample)
                        args: !SimpleFlagArg
                          name: TOOL_LIST_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -y
                        - --yaml_tool
                        description: Install tool represented by yaml string
                        args: !SimpleFlagArg
                          name: TOOL_YAML
                      - !Flag
                        optional: true
                        synonyms:
                        - --name
                        description: "The name of the tool to install (only applicable\
                          \ if\nthe tools file is not provided)."
                        args: !SimpleFlagArg
                          name: NAME
                      - !Flag
                        optional: true
                        synonyms:
                        - --owner
                        description: "The owner of the tool to install (only applicable\
                          \ if\nthe tools file is not provided)."
                        args: !SimpleFlagArg
                          name: OWNER
                      - !Flag
                        optional: true
                        synonyms:
                        - --revisions
                        description: "[REVISIONS [REVISIONS ...]]\nThe revisions of\
                          \ the tool repository that will be\ninstalled. All revisions\
                          \ must be specified after this\nflag by a space.Example:\
                          \ --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
                          \ if the tools file is not\nprovided)."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --toolshed
                        description: "The Tool Shed URL where to install the tool\
                          \ from. This\nis applicable only if the tool info is provided\
                          \ as an\noption vs. in the tools file."
                        args: !SimpleFlagArg
                          name: TOOL_SHED_URL
                      - !Flag
                        optional: true
                        synonyms:
                        - --install_tool_dependencies
                        description: "Turn on installation of tool dependencies using\n\
                          classic toolshed packages. Can be overwritten on a\nper-tool\
                          \ basis in the tools file."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --skip_install_resolver_dependencies
                        description: "Skip installing tool dependencies through resolver\n\
                          (e.g. conda). Will be ignored on galaxy releases older\n\
                          than 16.07. Can be overwritten on a per-tool basis in\n\
                          the tools file"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --skip_install_repository_dependencies
                        description: Skip installing the repository dependencies.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --test
                        description: "Run tool tests on install tools, requires Galaxy\
                          \ 18.05\nor newer."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_existing
                        description: "If testing tools during install, also run tool\
                          \ tests\non repositories already installed (i.e. skipped\n\
                          repositories)."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_json
                        description: "If testing tools, record tool test output to\
                          \ specified\nfile. This file can be turned into reports\
                          \ with\n``planemo test_reports <output.json>``."
                        args: !SimpleFlagArg
                          name: TEST_JSON
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_user_api_key
                        description: "If testing tools, a user is needed to execute\
                          \ the\ntests. This can be different the --api_key which\
                          \ is\nassumed to be an admin key. If --api_key is a valid\n\
                          user (e.g. it is not a master API key) this does not\nneed\
                          \ to be specified and --api_key will be reused."
                        args: !SimpleFlagArg
                          name: TEST_USER
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_user
                        description: "If testing tools, a user is needed to execute\
                          \ the\ntests. If --api_key is a master api key (i.e. not\
                          \ tied\nto a real user) and --test_user_api_key isn't\n\
                          specified, this user email will be used. This user\nwill\
                          \ be created if needed."
                        args: !SimpleFlagArg
                          name: TEST_USER
                      - !Flag
                        optional: true
                        synonyms:
                        - --parallel_tests
                        description: "Specify the maximum number of tests that will\
                          \ be run\nin parallel."
                        args: !SimpleFlagArg
                          name: PARALLEL_TESTS
                      - !Flag
                        optional: true
                        synonyms:
                        - --section
                        description: "Galaxy tool panel section ID where the tool\
                          \ will be\ninstalled (the section must exist in Galaxy;\
                          \ only\napplicable if the tools file is not provided)."
                        args: !SimpleFlagArg
                          name: TOOL_PANEL_SECTION_ID
                      - !Flag
                        optional: true
                        synonyms:
                        - --section_label
                        description: "Galaxy tool panel section label where tool will\
                          \ be\ninstalled (if the section does not exist, it will\
                          \ be\ncreated; only applicable if the tools file is not\n\
                          provided)."
                        args: !SimpleFlagArg
                          name: TOOL_PANEL_SECTION_LABEL
                      - !Flag
                        optional: true
                        synonyms:
                        - --latest
                        description: "Will override the revisions in the tools file\
                          \ and\nalways install the latest revision."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --verbose
                        description: Increase output verbosity.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --log_file
                        description: "Where the log file should be stored. Default\
                          \ is a file\nin your system's temp folder"
                        args: !SimpleFlagArg
                          name: LOG_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        - --galaxy
                        description: Target Galaxy instance URL/IP address
                        args: !SimpleFlagArg
                          name: GALAXY
                      - !Flag
                        optional: true
                        synonyms:
                        - -u
                        - --user
                        description: Galaxy user email address
                        args: !SimpleFlagArg
                          name: USER
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        - --password
                        description: Password for the Galaxy user
                        args: !SimpleFlagArg
                          name: PASSWORD
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --api_key
                        description: "Galaxy admin user API key (required if not defined\
                          \ in\nthe tools list file)\n"
                        args: !SimpleFlagArg
                          name: API_KEY
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: shed-tools install [-h] [-v] [--log_file\
                        \ LOG_FILE] [-g GALAXY]\n                          [-u USER]\
                        \ [-p PASSWORD] [-a API_KEY]\n                          [-t\
                        \ TOOL_LIST_FILE] [-y TOOL_YAML] [--name NAME]\n         \
                        \                 [--owner OWNER]\n                      \
                        \    [--revisions [REVISIONS [REVISIONS ...]]]\n         \
                        \                 [--toolshed TOOL_SHED_URL]\n           \
                        \               [--install_tool_dependencies]\n          \
                        \                [--skip_install_resolver_dependencies]\n\
                        \                          [--skip_install_repository_dependencies]\
                        \ [--test]\n                          [--test_existing] [--test_json\
                        \ TEST_JSON]\n                          [--test_user_api_key\
                        \ TEST_USER]\n                          [--test_user TEST_USER]\n\
                        \                          [--parallel_tests PARALLEL_TESTS]\n\
                        \                          [--section TOOL_PANEL_SECTION_ID]\n\
                        \                          [--section_label TOOL_PANEL_SECTION_LABEL]\n\
                        \                          [--latest]\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n       \
                        \                 Tools file to use (see tool_list.yaml.sample)\n\
                        \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                 \
                        \       Install tool represented by yaml string\n  --name\
                        \ NAME           The name of the tool to install (only applicable\
                        \ if\n                        the tools file is not provided).\n\
                        \  --owner OWNER         The owner of the tool to install\
                        \ (only applicable if\n                        the tools file\
                        \ is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
                        \                        The revisions of the tool repository\
                        \ that will be\n                        installed. All revisions\
                        \ must be specified after this\n                        flag\
                        \ by a space.Example: --revisions 0a5c7992b1ac\n         \
                        \               f048033da666(Only applicable if the tools\
                        \ file is not\n                        provided).\n  --toolshed\
                        \ TOOL_SHED_URL\n                        The Tool Shed URL\
                        \ where to install the tool from. This\n                 \
                        \       is applicable only if the tool info is provided as\
                        \ an\n                        option vs. in the tools file.\n\
                        \  --install_tool_dependencies\n                        Turn\
                        \ on installation of tool dependencies using\n           \
                        \             classic toolshed packages. Can be overwritten\
                        \ on a\n                        per-tool basis in the tools\
                        \ file.\n  --skip_install_resolver_dependencies\n        \
                        \                Skip installing tool dependencies through\
                        \ resolver\n                        (e.g. conda). Will be\
                        \ ignored on galaxy releases older\n                     \
                        \   than 16.07. Can be overwritten on a per-tool basis in\n\
                        \                        the tools file\n  --skip_install_repository_dependencies\n\
                        \                        Skip installing the repository dependencies.\n\
                        \  --test                Run tool tests on install tools,\
                        \ requires Galaxy 18.05\n                        or newer.\n\
                        \  --test_existing       If testing tools during install,\
                        \ also run tool tests\n                        on repositories\
                        \ already installed (i.e. skipped\n                      \
                        \  repositories).\n  --test_json TEST_JSON\n             \
                        \           If testing tools, record tool test output to specified\n\
                        \                        file. This file can be turned into\
                        \ reports with\n                        ``planemo test_reports\
                        \ <output.json>``.\n  --test_user_api_key TEST_USER\n    \
                        \                    If testing tools, a user is needed to\
                        \ execute the\n                        tests. This can be\
                        \ different the --api_key which is\n                     \
                        \   assumed to be an admin key. If --api_key is a valid\n\
                        \                        user (e.g. it is not a master API\
                        \ key) this does not\n                        need to be specified\
                        \ and --api_key will be reused.\n  --test_user TEST_USER\n\
                        \                        If testing tools, a user is needed\
                        \ to execute the\n                        tests. If --api_key\
                        \ is a master api key (i.e. not tied\n                   \
                        \     to a real user) and --test_user_api_key isn't\n    \
                        \                    specified, this user email will be used.\
                        \ This user\n                        will be created if needed.\n\
                        \  --parallel_tests PARALLEL_TESTS\n                     \
                        \   Specify the maximum number of tests that will be run\n\
                        \                        in parallel.\n  --section TOOL_PANEL_SECTION_ID\n\
                        \                        Galaxy tool panel section ID where\
                        \ the tool will be\n                        installed (the\
                        \ section must exist in Galaxy; only\n                   \
                        \     applicable if the tools file is not provided).\n  --section_label\
                        \ TOOL_PANEL_SECTION_LABEL\n                        Galaxy\
                        \ tool panel section label where tool will be\n          \
                        \              installed (if the section does not exist, it\
                        \ will be\n                        created; only applicable\
                        \ if the tools file is not\n                        provided).\n\
                        \  --latest              Will override the revisions in the\
                        \ tools file and\n                        always install the\
                        \ latest revision.\n\nGeneral options:\n  -v, --verbose  \
                        \       Increase output verbosity.\n  --log_file LOG_FILE\
                        \   Where the log file should be stored. Default is a file\n\
                        \                        in your system's temp folder\n\n\
                        Galaxy connection:\n  -g GALAXY, --galaxy GALAXY\n       \
                        \                 Target Galaxy instance URL/IP address\n\
                        \  -u USER, --user USER  Galaxy user email address\n  -p PASSWORD,\
                        \ --password PASSWORD\n                        Password for\
                        \ the Galaxy user\n  -a API_KEY, --api_key API_KEY\n     \
                        \                   Galaxy admin user API key (required if\
                        \ not defined in\n                        the tools list file)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - shed-tools
                      - update
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        - --toolsfile
                        description: Tools file to use (see tool_list.yaml.sample)
                        args: !SimpleFlagArg
                          name: TOOL_LIST_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -y
                        - --yaml_tool
                        description: Install tool represented by yaml string
                        args: !SimpleFlagArg
                          name: TOOL_YAML
                      - !Flag
                        optional: true
                        synonyms:
                        - --name
                        description: "The name of the tool to install (only applicable\
                          \ if\nthe tools file is not provided)."
                        args: !SimpleFlagArg
                          name: NAME
                      - !Flag
                        optional: true
                        synonyms:
                        - --owner
                        description: "The owner of the tool to install (only applicable\
                          \ if\nthe tools file is not provided)."
                        args: !SimpleFlagArg
                          name: OWNER
                      - !Flag
                        optional: true
                        synonyms:
                        - --revisions
                        description: "[REVISIONS [REVISIONS ...]]\nThe revisions of\
                          \ the tool repository that will be\ninstalled. All revisions\
                          \ must be specified after this\nflag by a space.Example:\
                          \ --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
                          \ if the tools file is not\nprovided)."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --toolshed
                        description: "The Tool Shed URL where to install the tool\
                          \ from. This\nis applicable only if the tool info is provided\
                          \ as an\noption vs. in the tools file."
                        args: !SimpleFlagArg
                          name: TOOL_SHED_URL
                      - !Flag
                        optional: true
                        synonyms:
                        - --install_tool_dependencies
                        description: "Turn on installation of tool dependencies using\n\
                          classic toolshed packages. Can be overwritten on a\nper-tool\
                          \ basis in the tools file."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --skip_install_resolver_dependencies
                        description: "Skip installing tool dependencies through resolver\n\
                          (e.g. conda). Will be ignored on galaxy releases older\n\
                          than 16.07. Can be overwritten on a per-tool basis in\n\
                          the tools file"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --skip_install_repository_dependencies
                        description: Skip installing the repository dependencies.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --test
                        description: "Run tool tests on install tools, requires Galaxy\
                          \ 18.05\nor newer."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_existing
                        description: "If testing tools during install, also run tool\
                          \ tests\non repositories already installed (i.e. skipped\n\
                          repositories)."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_json
                        description: "If testing tools, record tool test output to\
                          \ specified\nfile. This file can be turned into reports\
                          \ with\n``planemo test_reports <output.json>``."
                        args: !SimpleFlagArg
                          name: TEST_JSON
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_user_api_key
                        description: "If testing tools, a user is needed to execute\
                          \ the\ntests. This can be different the --api_key which\
                          \ is\nassumed to be an admin key. If --api_key is a valid\n\
                          user (e.g. it is not a master API key) this does not\nneed\
                          \ to be specified and --api_key will be reused."
                        args: !SimpleFlagArg
                          name: TEST_USER
                      - !Flag
                        optional: true
                        synonyms:
                        - --test_user
                        description: "If testing tools, a user is needed to execute\
                          \ the\ntests. If --api_key is a master api key (i.e. not\
                          \ tied\nto a real user) and --test_user_api_key isn't\n\
                          specified, this user email will be used. This user\nwill\
                          \ be created if needed."
                        args: !SimpleFlagArg
                          name: TEST_USER
                      - !Flag
                        optional: true
                        synonyms:
                        - --parallel_tests
                        description: "Specify the maximum number of tests that will\
                          \ be run\nin parallel."
                        args: !SimpleFlagArg
                          name: PARALLEL_TESTS
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --verbose
                        description: Increase output verbosity.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --log_file
                        description: "Where the log file should be stored. Default\
                          \ is a file\nin your system's temp folder"
                        args: !SimpleFlagArg
                          name: LOG_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        - --galaxy
                        description: Target Galaxy instance URL/IP address
                        args: !SimpleFlagArg
                          name: GALAXY
                      - !Flag
                        optional: true
                        synonyms:
                        - -u
                        - --user
                        description: Galaxy user email address
                        args: !SimpleFlagArg
                          name: USER
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        - --password
                        description: Password for the Galaxy user
                        args: !SimpleFlagArg
                          name: PASSWORD
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --api_key
                        description: "Galaxy admin user API key (required if not defined\
                          \ in\nthe tools list file)\n"
                        args: !SimpleFlagArg
                          name: API_KEY
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE]\
                        \ [-g GALAXY] [-u USER]\n                         [-p PASSWORD]\
                        \ [-a API_KEY] [-t TOOL_LIST_FILE]\n                     \
                        \    [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n      \
                        \                   [--revisions [REVISIONS [REVISIONS ...]]]\n\
                        \                         [--toolshed TOOL_SHED_URL]\n   \
                        \                      [--install_tool_dependencies]\n   \
                        \                      [--skip_install_resolver_dependencies]\n\
                        \                         [--skip_install_repository_dependencies]\
                        \ [--test]\n                         [--test_existing] [--test_json\
                        \ TEST_JSON]\n                         [--test_user_api_key\
                        \ TEST_USER]\n                         [--test_user TEST_USER]\n\
                        \                         [--parallel_tests PARALLEL_TESTS]\n\
                        \noptional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
                        \                        Tools file to use (see tool_list.yaml.sample)\n\
                        \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                 \
                        \       Install tool represented by yaml string\n  --name\
                        \ NAME           The name of the tool to install (only applicable\
                        \ if\n                        the tools file is not provided).\n\
                        \  --owner OWNER         The owner of the tool to install\
                        \ (only applicable if\n                        the tools file\
                        \ is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
                        \                        The revisions of the tool repository\
                        \ that will be\n                        installed. All revisions\
                        \ must be specified after this\n                        flag\
                        \ by a space.Example: --revisions 0a5c7992b1ac\n         \
                        \               f048033da666(Only applicable if the tools\
                        \ file is not\n                        provided).\n  --toolshed\
                        \ TOOL_SHED_URL\n                        The Tool Shed URL\
                        \ where to install the tool from. This\n                 \
                        \       is applicable only if the tool info is provided as\
                        \ an\n                        option vs. in the tools file.\n\
                        \  --install_tool_dependencies\n                        Turn\
                        \ on installation of tool dependencies using\n           \
                        \             classic toolshed packages. Can be overwritten\
                        \ on a\n                        per-tool basis in the tools\
                        \ file.\n  --skip_install_resolver_dependencies\n        \
                        \                Skip installing tool dependencies through\
                        \ resolver\n                        (e.g. conda). Will be\
                        \ ignored on galaxy releases older\n                     \
                        \   than 16.07. Can be overwritten on a per-tool basis in\n\
                        \                        the tools file\n  --skip_install_repository_dependencies\n\
                        \                        Skip installing the repository dependencies.\n\
                        \  --test                Run tool tests on install tools,\
                        \ requires Galaxy 18.05\n                        or newer.\n\
                        \  --test_existing       If testing tools during install,\
                        \ also run tool tests\n                        on repositories\
                        \ already installed (i.e. skipped\n                      \
                        \  repositories).\n  --test_json TEST_JSON\n             \
                        \           If testing tools, record tool test output to specified\n\
                        \                        file. This file can be turned into\
                        \ reports with\n                        ``planemo test_reports\
                        \ <output.json>``.\n  --test_user_api_key TEST_USER\n    \
                        \                    If testing tools, a user is needed to\
                        \ execute the\n                        tests. This can be\
                        \ different the --api_key which is\n                     \
                        \   assumed to be an admin key. If --api_key is a valid\n\
                        \                        user (e.g. it is not a master API\
                        \ key) this does not\n                        need to be specified\
                        \ and --api_key will be reused.\n  --test_user TEST_USER\n\
                        \                        If testing tools, a user is needed\
                        \ to execute the\n                        tests. If --api_key\
                        \ is a master api key (i.e. not tied\n                   \
                        \     to a real user) and --test_user_api_key isn't\n    \
                        \                    specified, this user email will be used.\
                        \ This user\n                        will be created if needed.\n\
                        \  --parallel_tests PARALLEL_TESTS\n                     \
                        \   Specify the maximum number of tests that will be run\n\
                        \                        in parallel.\n\nGeneral options:\n\
                        \  -v, --verbose         Increase output verbosity.\n  --log_file\
                        \ LOG_FILE   Where the log file should be stored. Default\
                        \ is a file\n                        in your system's temp\
                        \ folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n\
                        \                        Target Galaxy instance URL/IP address\n\
                        \  -u USER, --user USER  Galaxy user email address\n  -p PASSWORD,\
                        \ --password PASSWORD\n                        Password for\
                        \ the Galaxy user\n  -a API_KEY, --api_key API_KEY\n     \
                        \                   Galaxy admin user API key (required if\
                        \ not defined in\n                        the tools list file)\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: shed-tools [-h] {install,update,test} ...\n\
                      \npositional arguments:\n  {install,update,test}\n    install\
                      \             This installs tools in Galaxy from the Tool Shed.Use\n\
                      \                        shed-tools install --help for more\
                      \ information\n    update              This updates all tools\
                      \ in Galaxy to the latest\n                        revision.\
                      \ Use shed-tools update --help for more\n                  \
                      \      information\n    test                This tests the supplied\
                      \ list of tools in Galaxy. Use\n                        shed-tools\
                      \ test --help for more information\n\noptional arguments:\n\
                      \  -h, --help            show this help message and exit\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE]\
                    \ [-g GALAXY] [-u USER]\n                       [-p PASSWORD]\
                    \ [-a API_KEY] [-t TOOL_LIST_FILE]\n                       [-y\
                    \ TOOL_YAML] [--name NAME] [--owner OWNER]\n                 \
                    \      [--revisions [REVISIONS [REVISIONS ...]]]\n           \
                    \            [--toolshed TOOL_SHED_URL] [--test_json TEST_JSON]\n\
                    \                       [--test_user_api_key TEST_USER_API_KEY]\n\
                    \                       [--test_user TEST_USER]\n            \
                    \           [--parallel_tests PARALLEL_TESTS]\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -t\
                    \ TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n               \
                    \         Tools file to use (see tool_list.yaml.sample)\n  -y\
                    \ TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
                    \ tool represented by yaml string\n  --name NAME           The\
                    \ name of the tool to install (only applicable if\n          \
                    \              the tools file is not provided).\n  --owner OWNER\
                    \         The owner of the tool to install (only applicable if\n\
                    \                        the tools file is not provided).\n  --revisions\
                    \ [REVISIONS [REVISIONS ...]]\n                        The revisions\
                    \ of the tool repository that will be\n                      \
                    \  installed. All revisions must be specified after this\n   \
                    \                     flag by a space.Example: --revisions 0a5c7992b1ac\n\
                    \                        f048033da666(Only applicable if the tools\
                    \ file is not\n                        provided).\n  --toolshed\
                    \ TOOL_SHED_URL\n                        The Tool Shed URL where\
                    \ to install the tool from. This\n                        is applicable\
                    \ only if the tool info is provided as an\n                  \
                    \      option vs. in the tools file.\n  --test_json TEST_JSON\n\
                    \                        Record tool test output to specified\
                    \ file. This file\n                        can be turned into\
                    \ reports with ``planemo test_reports\n                      \
                    \  <output.json>``.\n  --test_user_api_key TEST_USER_API_KEY\n\
                    \                        A user is needed to execute the tests.\
                    \ This can be\n                        different the --api_key\
                    \ which is assumed to be an\n                        admin key.\
                    \ If --api_key is a valid user (e.g. it is\n                 \
                    \       not a master API key) this does not need to be\n     \
                    \                   specified and --api_key will be reused.\n\
                    \  --test_user TEST_USER\n                        A user is needed\
                    \ to execute the tests. If --api_key is\n                    \
                    \    a master api key (i.e. not tied to a real user) and\n   \
                    \                     --test_user_api_key isn't specified, this\
                    \ user email\n                        will be used. This user\
                    \ will be created if needed.\n  --parallel_tests PARALLEL_TESTS\n\
                    \                        Specify the maximum number of tests that\
                    \ will be run\n                        in parallel.\n\nGeneral\
                    \ options:\n  -v, --verbose         Increase output verbosity.\n\
                    \  --log_file LOG_FILE   Where the log file should be stored.\
                    \ Default is a file\n                        in your system's\
                    \ temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n\
                    \                        Target Galaxy instance URL/IP address\n\
                    \  -u USER, --user USER  Galaxy user email address\n  -p PASSWORD,\
                    \ --password PASSWORD\n                        Password for the\
                    \ Galaxy user\n  -a API_KEY, --api_key API_KEY\n             \
                    \           Galaxy admin user API key (required if not defined\
                    \ in\n                        the tools list file)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    - --toolsfile
                    description: Tools file to use (see tool_list.yaml.sample)
                    args: !SimpleFlagArg
                      name: TOOL_LIST_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -y
                    - --yaml_tool
                    description: Install tool represented by yaml string
                    args: !SimpleFlagArg
                      name: TOOL_YAML
                  - !Flag
                    optional: true
                    synonyms:
                    - --name
                    description: "The name of the tool to install (only applicable\
                      \ if\nthe tools file is not provided)."
                    args: !SimpleFlagArg
                      name: NAME
                  - !Flag
                    optional: true
                    synonyms:
                    - --owner
                    description: "The owner of the tool to install (only applicable\
                      \ if\nthe tools file is not provided)."
                    args: !SimpleFlagArg
                      name: OWNER
                  - !Flag
                    optional: true
                    synonyms:
                    - --revisions
                    description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the\
                      \ tool repository that will be\ninstalled. All revisions must\
                      \ be specified after this\nflag by a space.Example: --revisions\
                      \ 0a5c7992b1ac\nf048033da666(Only applicable if the tools file\
                      \ is not\nprovided)."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --toolshed
                    description: "The Tool Shed URL where to install the tool from.\
                      \ This\nis applicable only if the tool info is provided as an\n\
                      option vs. in the tools file."
                    args: !SimpleFlagArg
                      name: TOOL_SHED_URL
                  - !Flag
                    optional: true
                    synonyms:
                    - --install_tool_dependencies
                    description: "Turn on installation of tool dependencies using\n\
                      classic toolshed packages. Can be overwritten on a\nper-tool\
                      \ basis in the tools file."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --skip_install_resolver_dependencies
                    description: "Skip installing tool dependencies through resolver\n\
                      (e.g. conda). Will be ignored on galaxy releases older\nthan\
                      \ 16.07. Can be overwritten on a per-tool basis in\nthe tools\
                      \ file"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --skip_install_repository_dependencies
                    description: Skip installing the repository dependencies.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --test
                    description: "Run tool tests on install tools, requires Galaxy\
                      \ 18.05\nor newer."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_existing
                    description: "If testing tools during install, also run tool tests\n\
                      on repositories already installed (i.e. skipped\nrepositories)."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_json
                    description: "If testing tools, record tool test output to specified\n\
                      file. This file can be turned into reports with\n``planemo test_reports\
                      \ <output.json>``."
                    args: !SimpleFlagArg
                      name: TEST_JSON
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_user_api_key
                    description: "If testing tools, a user is needed to execute the\n\
                      tests. This can be different the --api_key which is\nassumed\
                      \ to be an admin key. If --api_key is a valid\nuser (e.g. it\
                      \ is not a master API key) this does not\nneed to be specified\
                      \ and --api_key will be reused."
                    args: !SimpleFlagArg
                      name: TEST_USER
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_user
                    description: "If testing tools, a user is needed to execute the\n\
                      tests. If --api_key is a master api key (i.e. not tied\nto a\
                      \ real user) and --test_user_api_key isn't\nspecified, this\
                      \ user email will be used. This user\nwill be created if needed."
                    args: !SimpleFlagArg
                      name: TEST_USER
                  - !Flag
                    optional: true
                    synonyms:
                    - --parallel_tests
                    description: "Specify the maximum number of tests that will be\
                      \ run\nin parallel."
                    args: !SimpleFlagArg
                      name: PARALLEL_TESTS
                  - !Flag
                    optional: true
                    synonyms:
                    - --section
                    description: "Galaxy tool panel section ID where the tool will\
                      \ be\ninstalled (the section must exist in Galaxy; only\napplicable\
                      \ if the tools file is not provided)."
                    args: !SimpleFlagArg
                      name: TOOL_PANEL_SECTION_ID
                  - !Flag
                    optional: true
                    synonyms:
                    - --section_label
                    description: "Galaxy tool panel section label where tool will\
                      \ be\ninstalled (if the section does not exist, it will be\n\
                      created; only applicable if the tools file is not\nprovided)."
                    args: !SimpleFlagArg
                      name: TOOL_PANEL_SECTION_LABEL
                  - !Flag
                    optional: true
                    synonyms:
                    - --latest
                    description: "Will override the revisions in the tools file and\n\
                      always install the latest revision."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    - --verbose
                    description: Increase output verbosity.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --log_file
                    description: "Where the log file should be stored. Default is\
                      \ a file\nin your system's temp folder"
                    args: !SimpleFlagArg
                      name: LOG_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    - --galaxy
                    description: Target Galaxy instance URL/IP address
                    args: !SimpleFlagArg
                      name: GALAXY
                  - !Flag
                    optional: true
                    synonyms:
                    - -u
                    - --user
                    description: Galaxy user email address
                    args: !SimpleFlagArg
                      name: USER
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    - --password
                    description: Password for the Galaxy user
                    args: !SimpleFlagArg
                      name: PASSWORD
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    - --api_key
                    description: "Galaxy admin user API key (required if not defined\
                      \ in\nthe tools list file)\n"
                    args: !SimpleFlagArg
                      name: API_KEY
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: shed-tools install [-h] [-v] [--log_file LOG_FILE]\
                    \ [-g GALAXY]\n                          [-u USER] [-p PASSWORD]\
                    \ [-a API_KEY]\n                          [-t TOOL_LIST_FILE]\
                    \ [-y TOOL_YAML] [--name NAME]\n                          [--owner\
                    \ OWNER]\n                          [--revisions [REVISIONS [REVISIONS\
                    \ ...]]]\n                          [--toolshed TOOL_SHED_URL]\n\
                    \                          [--install_tool_dependencies]\n   \
                    \                       [--skip_install_resolver_dependencies]\n\
                    \                          [--skip_install_repository_dependencies]\
                    \ [--test]\n                          [--test_existing] [--test_json\
                    \ TEST_JSON]\n                          [--test_user_api_key TEST_USER]\n\
                    \                          [--test_user TEST_USER]\n         \
                    \                 [--parallel_tests PARALLEL_TESTS]\n        \
                    \                  [--section TOOL_PANEL_SECTION_ID]\n       \
                    \                   [--section_label TOOL_PANEL_SECTION_LABEL]\n\
                    \                          [--latest]\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -t\
                    \ TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n               \
                    \         Tools file to use (see tool_list.yaml.sample)\n  -y\
                    \ TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
                    \ tool represented by yaml string\n  --name NAME           The\
                    \ name of the tool to install (only applicable if\n          \
                    \              the tools file is not provided).\n  --owner OWNER\
                    \         The owner of the tool to install (only applicable if\n\
                    \                        the tools file is not provided).\n  --revisions\
                    \ [REVISIONS [REVISIONS ...]]\n                        The revisions\
                    \ of the tool repository that will be\n                      \
                    \  installed. All revisions must be specified after this\n   \
                    \                     flag by a space.Example: --revisions 0a5c7992b1ac\n\
                    \                        f048033da666(Only applicable if the tools\
                    \ file is not\n                        provided).\n  --toolshed\
                    \ TOOL_SHED_URL\n                        The Tool Shed URL where\
                    \ to install the tool from. This\n                        is applicable\
                    \ only if the tool info is provided as an\n                  \
                    \      option vs. in the tools file.\n  --install_tool_dependencies\n\
                    \                        Turn on installation of tool dependencies\
                    \ using\n                        classic toolshed packages. Can\
                    \ be overwritten on a\n                        per-tool basis\
                    \ in the tools file.\n  --skip_install_resolver_dependencies\n\
                    \                        Skip installing tool dependencies through\
                    \ resolver\n                        (e.g. conda). Will be ignored\
                    \ on galaxy releases older\n                        than 16.07.\
                    \ Can be overwritten on a per-tool basis in\n                \
                    \        the tools file\n  --skip_install_repository_dependencies\n\
                    \                        Skip installing the repository dependencies.\n\
                    \  --test                Run tool tests on install tools, requires\
                    \ Galaxy 18.05\n                        or newer.\n  --test_existing\
                    \       If testing tools during install, also run tool tests\n\
                    \                        on repositories already installed (i.e.\
                    \ skipped\n                        repositories).\n  --test_json\
                    \ TEST_JSON\n                        If testing tools, record\
                    \ tool test output to specified\n                        file.\
                    \ This file can be turned into reports with\n                \
                    \        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
                    \ TEST_USER\n                        If testing tools, a user\
                    \ is needed to execute the\n                        tests. This\
                    \ can be different the --api_key which is\n                  \
                    \      assumed to be an admin key. If --api_key is a valid\n \
                    \                       user (e.g. it is not a master API key)\
                    \ this does not\n                        need to be specified\
                    \ and --api_key will be reused.\n  --test_user TEST_USER\n   \
                    \                     If testing tools, a user is needed to execute\
                    \ the\n                        tests. If --api_key is a master\
                    \ api key (i.e. not tied\n                        to a real user)\
                    \ and --test_user_api_key isn't\n                        specified,\
                    \ this user email will be used. This user\n                  \
                    \      will be created if needed.\n  --parallel_tests PARALLEL_TESTS\n\
                    \                        Specify the maximum number of tests that\
                    \ will be run\n                        in parallel.\n  --section\
                    \ TOOL_PANEL_SECTION_ID\n                        Galaxy tool panel\
                    \ section ID where the tool will be\n                        installed\
                    \ (the section must exist in Galaxy; only\n                  \
                    \      applicable if the tools file is not provided).\n  --section_label\
                    \ TOOL_PANEL_SECTION_LABEL\n                        Galaxy tool\
                    \ panel section label where tool will be\n                   \
                    \     installed (if the section does not exist, it will be\n \
                    \                       created; only applicable if the tools\
                    \ file is not\n                        provided).\n  --latest\
                    \              Will override the revisions in the tools file and\n\
                    \                        always install the latest revision.\n\
                    \nGeneral options:\n  -v, --verbose         Increase output verbosity.\n\
                    \  --log_file LOG_FILE   Where the log file should be stored.\
                    \ Default is a file\n                        in your system's\
                    \ temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n\
                    \                        Target Galaxy instance URL/IP address\n\
                    \  -u USER, --user USER  Galaxy user email address\n  -p PASSWORD,\
                    \ --password PASSWORD\n                        Password for the\
                    \ Galaxy user\n  -a API_KEY, --api_key API_KEY\n             \
                    \           Galaxy admin user API key (required if not defined\
                    \ in\n                        the tools list file)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    - --toolsfile
                    description: Tools file to use (see tool_list.yaml.sample)
                    args: !SimpleFlagArg
                      name: TOOL_LIST_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -y
                    - --yaml_tool
                    description: Install tool represented by yaml string
                    args: !SimpleFlagArg
                      name: TOOL_YAML
                  - !Flag
                    optional: true
                    synonyms:
                    - --name
                    description: "The name of the tool to install (only applicable\
                      \ if\nthe tools file is not provided)."
                    args: !SimpleFlagArg
                      name: NAME
                  - !Flag
                    optional: true
                    synonyms:
                    - --owner
                    description: "The owner of the tool to install (only applicable\
                      \ if\nthe tools file is not provided)."
                    args: !SimpleFlagArg
                      name: OWNER
                  - !Flag
                    optional: true
                    synonyms:
                    - --revisions
                    description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the\
                      \ tool repository that will be\ninstalled. All revisions must\
                      \ be specified after this\nflag by a space.Example: --revisions\
                      \ 0a5c7992b1ac\nf048033da666(Only applicable if the tools file\
                      \ is not\nprovided)."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --toolshed
                    description: "The Tool Shed URL where to install the tool from.\
                      \ This\nis applicable only if the tool info is provided as an\n\
                      option vs. in the tools file."
                    args: !SimpleFlagArg
                      name: TOOL_SHED_URL
                  - !Flag
                    optional: true
                    synonyms:
                    - --install_tool_dependencies
                    description: "Turn on installation of tool dependencies using\n\
                      classic toolshed packages. Can be overwritten on a\nper-tool\
                      \ basis in the tools file."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --skip_install_resolver_dependencies
                    description: "Skip installing tool dependencies through resolver\n\
                      (e.g. conda). Will be ignored on galaxy releases older\nthan\
                      \ 16.07. Can be overwritten on a per-tool basis in\nthe tools\
                      \ file"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --skip_install_repository_dependencies
                    description: Skip installing the repository dependencies.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --test
                    description: "Run tool tests on install tools, requires Galaxy\
                      \ 18.05\nor newer."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_existing
                    description: "If testing tools during install, also run tool tests\n\
                      on repositories already installed (i.e. skipped\nrepositories)."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_json
                    description: "If testing tools, record tool test output to specified\n\
                      file. This file can be turned into reports with\n``planemo test_reports\
                      \ <output.json>``."
                    args: !SimpleFlagArg
                      name: TEST_JSON
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_user_api_key
                    description: "If testing tools, a user is needed to execute the\n\
                      tests. This can be different the --api_key which is\nassumed\
                      \ to be an admin key. If --api_key is a valid\nuser (e.g. it\
                      \ is not a master API key) this does not\nneed to be specified\
                      \ and --api_key will be reused."
                    args: !SimpleFlagArg
                      name: TEST_USER
                  - !Flag
                    optional: true
                    synonyms:
                    - --test_user
                    description: "If testing tools, a user is needed to execute the\n\
                      tests. If --api_key is a master api key (i.e. not tied\nto a\
                      \ real user) and --test_user_api_key isn't\nspecified, this\
                      \ user email will be used. This user\nwill be created if needed."
                    args: !SimpleFlagArg
                      name: TEST_USER
                  - !Flag
                    optional: true
                    synonyms:
                    - --parallel_tests
                    description: "Specify the maximum number of tests that will be\
                      \ run\nin parallel."
                    args: !SimpleFlagArg
                      name: PARALLEL_TESTS
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    - --verbose
                    description: Increase output verbosity.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --log_file
                    description: "Where the log file should be stored. Default is\
                      \ a file\nin your system's temp folder"
                    args: !SimpleFlagArg
                      name: LOG_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    - --galaxy
                    description: Target Galaxy instance URL/IP address
                    args: !SimpleFlagArg
                      name: GALAXY
                  - !Flag
                    optional: true
                    synonyms:
                    - -u
                    - --user
                    description: Galaxy user email address
                    args: !SimpleFlagArg
                      name: USER
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    - --password
                    description: Password for the Galaxy user
                    args: !SimpleFlagArg
                      name: PASSWORD
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    - --api_key
                    description: "Galaxy admin user API key (required if not defined\
                      \ in\nthe tools list file)\n"
                    args: !SimpleFlagArg
                      name: API_KEY
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE]\
                    \ [-g GALAXY] [-u USER]\n                         [-p PASSWORD]\
                    \ [-a API_KEY] [-t TOOL_LIST_FILE]\n                         [-y\
                    \ TOOL_YAML] [--name NAME] [--owner OWNER]\n                 \
                    \        [--revisions [REVISIONS [REVISIONS ...]]]\n         \
                    \                [--toolshed TOOL_SHED_URL]\n                \
                    \         [--install_tool_dependencies]\n                    \
                    \     [--skip_install_resolver_dependencies]\n               \
                    \          [--skip_install_repository_dependencies] [--test]\n\
                    \                         [--test_existing] [--test_json TEST_JSON]\n\
                    \                         [--test_user_api_key TEST_USER]\n  \
                    \                       [--test_user TEST_USER]\n            \
                    \             [--parallel_tests PARALLEL_TESTS]\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -t\
                    \ TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n               \
                    \         Tools file to use (see tool_list.yaml.sample)\n  -y\
                    \ TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
                    \ tool represented by yaml string\n  --name NAME           The\
                    \ name of the tool to install (only applicable if\n          \
                    \              the tools file is not provided).\n  --owner OWNER\
                    \         The owner of the tool to install (only applicable if\n\
                    \                        the tools file is not provided).\n  --revisions\
                    \ [REVISIONS [REVISIONS ...]]\n                        The revisions\
                    \ of the tool repository that will be\n                      \
                    \  installed. All revisions must be specified after this\n   \
                    \                     flag by a space.Example: --revisions 0a5c7992b1ac\n\
                    \                        f048033da666(Only applicable if the tools\
                    \ file is not\n                        provided).\n  --toolshed\
                    \ TOOL_SHED_URL\n                        The Tool Shed URL where\
                    \ to install the tool from. This\n                        is applicable\
                    \ only if the tool info is provided as an\n                  \
                    \      option vs. in the tools file.\n  --install_tool_dependencies\n\
                    \                        Turn on installation of tool dependencies\
                    \ using\n                        classic toolshed packages. Can\
                    \ be overwritten on a\n                        per-tool basis\
                    \ in the tools file.\n  --skip_install_resolver_dependencies\n\
                    \                        Skip installing tool dependencies through\
                    \ resolver\n                        (e.g. conda). Will be ignored\
                    \ on galaxy releases older\n                        than 16.07.\
                    \ Can be overwritten on a per-tool basis in\n                \
                    \        the tools file\n  --skip_install_repository_dependencies\n\
                    \                        Skip installing the repository dependencies.\n\
                    \  --test                Run tool tests on install tools, requires\
                    \ Galaxy 18.05\n                        or newer.\n  --test_existing\
                    \       If testing tools during install, also run tool tests\n\
                    \                        on repositories already installed (i.e.\
                    \ skipped\n                        repositories).\n  --test_json\
                    \ TEST_JSON\n                        If testing tools, record\
                    \ tool test output to specified\n                        file.\
                    \ This file can be turned into reports with\n                \
                    \        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
                    \ TEST_USER\n                        If testing tools, a user\
                    \ is needed to execute the\n                        tests. This\
                    \ can be different the --api_key which is\n                  \
                    \      assumed to be an admin key. If --api_key is a valid\n \
                    \                       user (e.g. it is not a master API key)\
                    \ this does not\n                        need to be specified\
                    \ and --api_key will be reused.\n  --test_user TEST_USER\n   \
                    \                     If testing tools, a user is needed to execute\
                    \ the\n                        tests. If --api_key is a master\
                    \ api key (i.e. not tied\n                        to a real user)\
                    \ and --test_user_api_key isn't\n                        specified,\
                    \ this user email will be used. This user\n                  \
                    \      will be created if needed.\n  --parallel_tests PARALLEL_TESTS\n\
                    \                        Specify the maximum number of tests that\
                    \ will be run\n                        in parallel.\n\nGeneral\
                    \ options:\n  -v, --verbose         Increase output verbosity.\n\
                    \  --log_file LOG_FILE   Where the log file should be stored.\
                    \ Default is a file\n                        in your system's\
                    \ temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n\
                    \                        Target Galaxy instance URL/IP address\n\
                    \  -u USER, --user USER  Galaxy user email address\n  -p PASSWORD,\
                    \ --password PASSWORD\n                        Password for the\
                    \ Galaxy user\n  -a API_KEY, --api_key API_KEY\n             \
                    \           Galaxy admin user API key (required if not defined\
                    \ in\n                        the tools list file)\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: shed-tools [-h] {install,update,test} ...\n\npositional\
                  \ arguments:\n  {install,update,test}\n    install             This\
                  \ installs tools in Galaxy from the Tool Shed.Use\n            \
                  \            shed-tools install --help for more information\n  \
                  \  update              This updates all tools in Galaxy to the latest\n\
                  \                        revision. Use shed-tools update --help\
                  \ for more\n                        information\n    test      \
                  \          This tests the supplied list of tools in Galaxy. Use\n\
                  \                        shed-tools test --help for more information\n\
                  \noptional arguments:\n  -h, --help            show this help message\
                  \ and exit\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE] [-g\
                \ GALAXY] [-u USER]\n                       [-p PASSWORD] [-a API_KEY]\
                \ [-t TOOL_LIST_FILE]\n                       [-y TOOL_YAML] [--name\
                \ NAME] [--owner OWNER]\n                       [--revisions [REVISIONS\
                \ [REVISIONS ...]]]\n                       [--toolshed TOOL_SHED_URL]\
                \ [--test_json TEST_JSON]\n                       [--test_user_api_key\
                \ TEST_USER_API_KEY]\n                       [--test_user TEST_USER]\n\
                \                       [--parallel_tests PARALLEL_TESTS]\n\noptional\
                \ arguments:\n  -h, --help            show this help message and exit\n\
                \  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n               \
                \         Tools file to use (see tool_list.yaml.sample)\n  -y TOOL_YAML,\
                \ --yaml_tool TOOL_YAML\n                        Install tool represented\
                \ by yaml string\n  --name NAME           The name of the tool to\
                \ install (only applicable if\n                        the tools file\
                \ is not provided).\n  --owner OWNER         The owner of the tool\
                \ to install (only applicable if\n                        the tools\
                \ file is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
                \                        The revisions of the tool repository that\
                \ will be\n                        installed. All revisions must be\
                \ specified after this\n                        flag by a space.Example:\
                \ --revisions 0a5c7992b1ac\n                        f048033da666(Only\
                \ applicable if the tools file is not\n                        provided).\n\
                \  --toolshed TOOL_SHED_URL\n                        The Tool Shed\
                \ URL where to install the tool from. This\n                     \
                \   is applicable only if the tool info is provided as an\n      \
                \                  option vs. in the tools file.\n  --test_json TEST_JSON\n\
                \                        Record tool test output to specified file.\
                \ This file\n                        can be turned into reports with\
                \ ``planemo test_reports\n                        <output.json>``.\n\
                \  --test_user_api_key TEST_USER_API_KEY\n                       \
                \ A user is needed to execute the tests. This can be\n           \
                \             different the --api_key which is assumed to be an\n\
                \                        admin key. If --api_key is a valid user (e.g.\
                \ it is\n                        not a master API key) this does not\
                \ need to be\n                        specified and --api_key will\
                \ be reused.\n  --test_user TEST_USER\n                        A user\
                \ is needed to execute the tests. If --api_key is\n              \
                \          a master api key (i.e. not tied to a real user) and\n \
                \                       --test_user_api_key isn't specified, this\
                \ user email\n                        will be used. This user will\
                \ be created if needed.\n  --parallel_tests PARALLEL_TESTS\n     \
                \                   Specify the maximum number of tests that will\
                \ be run\n                        in parallel.\n\nGeneral options:\n\
                \  -v, --verbose         Increase output verbosity.\n  --log_file\
                \ LOG_FILE   Where the log file should be stored. Default is a file\n\
                \                        in your system's temp folder\n\nGalaxy connection:\n\
                \  -g GALAXY, --galaxy GALAXY\n                        Target Galaxy\
                \ instance URL/IP address\n  -u USER, --user USER  Galaxy user email\
                \ address\n  -p PASSWORD, --password PASSWORD\n                  \
                \      Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n\
                \                        Galaxy admin user API key (required if not\
                \ defined in\n                        the tools list file)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -t
                - --toolsfile
                description: Tools file to use (see tool_list.yaml.sample)
                args: !SimpleFlagArg
                  name: TOOL_LIST_FILE
              - !Flag
                optional: true
                synonyms:
                - -y
                - --yaml_tool
                description: Install tool represented by yaml string
                args: !SimpleFlagArg
                  name: TOOL_YAML
              - !Flag
                optional: true
                synonyms:
                - --name
                description: "The name of the tool to install (only applicable if\n\
                  the tools file is not provided)."
                args: !SimpleFlagArg
                  name: NAME
              - !Flag
                optional: true
                synonyms:
                - --owner
                description: "The owner of the tool to install (only applicable if\n\
                  the tools file is not provided)."
                args: !SimpleFlagArg
                  name: OWNER
              - !Flag
                optional: true
                synonyms:
                - --revisions
                description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool\
                  \ repository that will be\ninstalled. All revisions must be specified\
                  \ after this\nflag by a space.Example: --revisions 0a5c7992b1ac\n\
                  f048033da666(Only applicable if the tools file is not\nprovided)."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --toolshed
                description: "The Tool Shed URL where to install the tool from. This\n\
                  is applicable only if the tool info is provided as an\noption vs.\
                  \ in the tools file."
                args: !SimpleFlagArg
                  name: TOOL_SHED_URL
              - !Flag
                optional: true
                synonyms:
                - --install_tool_dependencies
                description: "Turn on installation of tool dependencies using\nclassic\
                  \ toolshed packages. Can be overwritten on a\nper-tool basis in\
                  \ the tools file."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --skip_install_resolver_dependencies
                description: "Skip installing tool dependencies through resolver\n\
                  (e.g. conda). Will be ignored on galaxy releases older\nthan 16.07.\
                  \ Can be overwritten on a per-tool basis in\nthe tools file"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --skip_install_repository_dependencies
                description: Skip installing the repository dependencies.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --test
                description: "Run tool tests on install tools, requires Galaxy 18.05\n\
                  or newer."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --test_existing
                description: "If testing tools during install, also run tool tests\n\
                  on repositories already installed (i.e. skipped\nrepositories)."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --test_json
                description: "If testing tools, record tool test output to specified\n\
                  file. This file can be turned into reports with\n``planemo test_reports\
                  \ <output.json>``."
                args: !SimpleFlagArg
                  name: TEST_JSON
              - !Flag
                optional: true
                synonyms:
                - --test_user_api_key
                description: "If testing tools, a user is needed to execute the\n\
                  tests. This can be different the --api_key which is\nassumed to\
                  \ be an admin key. If --api_key is a valid\nuser (e.g. it is not\
                  \ a master API key) this does not\nneed to be specified and --api_key\
                  \ will be reused."
                args: !SimpleFlagArg
                  name: TEST_USER
              - !Flag
                optional: true
                synonyms:
                - --test_user
                description: "If testing tools, a user is needed to execute the\n\
                  tests. If --api_key is a master api key (i.e. not tied\nto a real\
                  \ user) and --test_user_api_key isn't\nspecified, this user email\
                  \ will be used. This user\nwill be created if needed."
                args: !SimpleFlagArg
                  name: TEST_USER
              - !Flag
                optional: true
                synonyms:
                - --parallel_tests
                description: "Specify the maximum number of tests that will be run\n\
                  in parallel."
                args: !SimpleFlagArg
                  name: PARALLEL_TESTS
              - !Flag
                optional: true
                synonyms:
                - --section
                description: "Galaxy tool panel section ID where the tool will be\n\
                  installed (the section must exist in Galaxy; only\napplicable if\
                  \ the tools file is not provided)."
                args: !SimpleFlagArg
                  name: TOOL_PANEL_SECTION_ID
              - !Flag
                optional: true
                synonyms:
                - --section_label
                description: "Galaxy tool panel section label where tool will be\n\
                  installed (if the section does not exist, it will be\ncreated; only\
                  \ applicable if the tools file is not\nprovided)."
                args: !SimpleFlagArg
                  name: TOOL_PANEL_SECTION_LABEL
              - !Flag
                optional: true
                synonyms:
                - --latest
                description: "Will override the revisions in the tools file and\n\
                  always install the latest revision."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -v
                - --verbose
                description: Increase output verbosity.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --log_file
                description: "Where the log file should be stored. Default is a file\n\
                  in your system's temp folder"
                args: !SimpleFlagArg
                  name: LOG_FILE
              - !Flag
                optional: true
                synonyms:
                - -g
                - --galaxy
                description: Target Galaxy instance URL/IP address
                args: !SimpleFlagArg
                  name: GALAXY
              - !Flag
                optional: true
                synonyms:
                - -u
                - --user
                description: Galaxy user email address
                args: !SimpleFlagArg
                  name: USER
              - !Flag
                optional: true
                synonyms:
                - -p
                - --password
                description: Password for the Galaxy user
                args: !SimpleFlagArg
                  name: PASSWORD
              - !Flag
                optional: true
                synonyms:
                - -a
                - --api_key
                description: "Galaxy admin user API key (required if not defined in\n\
                  the tools list file)\n"
                args: !SimpleFlagArg
                  name: API_KEY
              parent: *id007
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: shed-tools install [-h] [-v] [--log_file LOG_FILE]\
                \ [-g GALAXY]\n                          [-u USER] [-p PASSWORD] [-a\
                \ API_KEY]\n                          [-t TOOL_LIST_FILE] [-y TOOL_YAML]\
                \ [--name NAME]\n                          [--owner OWNER]\n     \
                \                     [--revisions [REVISIONS [REVISIONS ...]]]\n\
                \                          [--toolshed TOOL_SHED_URL]\n          \
                \                [--install_tool_dependencies]\n                 \
                \         [--skip_install_resolver_dependencies]\n               \
                \           [--skip_install_repository_dependencies] [--test]\n  \
                \                        [--test_existing] [--test_json TEST_JSON]\n\
                \                          [--test_user_api_key TEST_USER]\n     \
                \                     [--test_user TEST_USER]\n                  \
                \        [--parallel_tests PARALLEL_TESTS]\n                     \
                \     [--section TOOL_PANEL_SECTION_ID]\n                        \
                \  [--section_label TOOL_PANEL_SECTION_LABEL]\n                  \
                \        [--latest]\n\noptional arguments:\n  -h, --help         \
                \   show this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile\
                \ TOOL_LIST_FILE\n                        Tools file to use (see tool_list.yaml.sample)\n\
                \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
                \ tool represented by yaml string\n  --name NAME           The name\
                \ of the tool to install (only applicable if\n                   \
                \     the tools file is not provided).\n  --owner OWNER         The\
                \ owner of the tool to install (only applicable if\n             \
                \           the tools file is not provided).\n  --revisions [REVISIONS\
                \ [REVISIONS ...]]\n                        The revisions of the tool\
                \ repository that will be\n                        installed. All\
                \ revisions must be specified after this\n                       \
                \ flag by a space.Example: --revisions 0a5c7992b1ac\n            \
                \            f048033da666(Only applicable if the tools file is not\n\
                \                        provided).\n  --toolshed TOOL_SHED_URL\n\
                \                        The Tool Shed URL where to install the tool\
                \ from. This\n                        is applicable only if the tool\
                \ info is provided as an\n                        option vs. in the\
                \ tools file.\n  --install_tool_dependencies\n                   \
                \     Turn on installation of tool dependencies using\n          \
                \              classic toolshed packages. Can be overwritten on a\n\
                \                        per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
                \                        Skip installing tool dependencies through\
                \ resolver\n                        (e.g. conda). Will be ignored\
                \ on galaxy releases older\n                        than 16.07. Can\
                \ be overwritten on a per-tool basis in\n                        the\
                \ tools file\n  --skip_install_repository_dependencies\n         \
                \               Skip installing the repository dependencies.\n  --test\
                \                Run tool tests on install tools, requires Galaxy\
                \ 18.05\n                        or newer.\n  --test_existing    \
                \   If testing tools during install, also run tool tests\n       \
                \                 on repositories already installed (i.e. skipped\n\
                \                        repositories).\n  --test_json TEST_JSON\n\
                \                        If testing tools, record tool test output\
                \ to specified\n                        file. This file can be turned\
                \ into reports with\n                        ``planemo test_reports\
                \ <output.json>``.\n  --test_user_api_key TEST_USER\n            \
                \            If testing tools, a user is needed to execute the\n \
                \                       tests. This can be different the --api_key\
                \ which is\n                        assumed to be an admin key. If\
                \ --api_key is a valid\n                        user (e.g. it is not\
                \ a master API key) this does not\n                        need to\
                \ be specified and --api_key will be reused.\n  --test_user TEST_USER\n\
                \                        If testing tools, a user is needed to execute\
                \ the\n                        tests. If --api_key is a master api\
                \ key (i.e. not tied\n                        to a real user) and\
                \ --test_user_api_key isn't\n                        specified, this\
                \ user email will be used. This user\n                        will\
                \ be created if needed.\n  --parallel_tests PARALLEL_TESTS\n     \
                \                   Specify the maximum number of tests that will\
                \ be run\n                        in parallel.\n  --section TOOL_PANEL_SECTION_ID\n\
                \                        Galaxy tool panel section ID where the tool\
                \ will be\n                        installed (the section must exist\
                \ in Galaxy; only\n                        applicable if the tools\
                \ file is not provided).\n  --section_label TOOL_PANEL_SECTION_LABEL\n\
                \                        Galaxy tool panel section label where tool\
                \ will be\n                        installed (if the section does\
                \ not exist, it will be\n                        created; only applicable\
                \ if the tools file is not\n                        provided).\n \
                \ --latest              Will override the revisions in the tools file\
                \ and\n                        always install the latest revision.\n\
                \nGeneral options:\n  -v, --verbose         Increase output verbosity.\n\
                \  --log_file LOG_FILE   Where the log file should be stored. Default\
                \ is a file\n                        in your system's temp folder\n\
                \nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n             \
                \           Target Galaxy instance URL/IP address\n  -u USER, --user\
                \ USER  Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n\
                \                        Password for the Galaxy user\n  -a API_KEY,\
                \ --api_key API_KEY\n                        Galaxy admin user API\
                \ key (required if not defined in\n                        the tools\
                \ list file)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -t
                - --toolsfile
                description: Tools file to use (see tool_list.yaml.sample)
                args: !SimpleFlagArg
                  name: TOOL_LIST_FILE
              - !Flag
                optional: true
                synonyms:
                - -y
                - --yaml_tool
                description: Install tool represented by yaml string
                args: !SimpleFlagArg
                  name: TOOL_YAML
              - !Flag
                optional: true
                synonyms:
                - --name
                description: "The name of the tool to install (only applicable if\n\
                  the tools file is not provided)."
                args: !SimpleFlagArg
                  name: NAME
              - !Flag
                optional: true
                synonyms:
                - --owner
                description: "The owner of the tool to install (only applicable if\n\
                  the tools file is not provided)."
                args: !SimpleFlagArg
                  name: OWNER
              - !Flag
                optional: true
                synonyms:
                - --revisions
                description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool\
                  \ repository that will be\ninstalled. All revisions must be specified\
                  \ after this\nflag by a space.Example: --revisions 0a5c7992b1ac\n\
                  f048033da666(Only applicable if the tools file is not\nprovided)."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --toolshed
                description: "The Tool Shed URL where to install the tool from. This\n\
                  is applicable only if the tool info is provided as an\noption vs.\
                  \ in the tools file."
                args: !SimpleFlagArg
                  name: TOOL_SHED_URL
              - !Flag
                optional: true
                synonyms:
                - --install_tool_dependencies
                description: "Turn on installation of tool dependencies using\nclassic\
                  \ toolshed packages. Can be overwritten on a\nper-tool basis in\
                  \ the tools file."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --skip_install_resolver_dependencies
                description: "Skip installing tool dependencies through resolver\n\
                  (e.g. conda). Will be ignored on galaxy releases older\nthan 16.07.\
                  \ Can be overwritten on a per-tool basis in\nthe tools file"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --skip_install_repository_dependencies
                description: Skip installing the repository dependencies.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --test
                description: "Run tool tests on install tools, requires Galaxy 18.05\n\
                  or newer."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --test_existing
                description: "If testing tools during install, also run tool tests\n\
                  on repositories already installed (i.e. skipped\nrepositories)."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --test_json
                description: "If testing tools, record tool test output to specified\n\
                  file. This file can be turned into reports with\n``planemo test_reports\
                  \ <output.json>``."
                args: !SimpleFlagArg
                  name: TEST_JSON
              - !Flag
                optional: true
                synonyms:
                - --test_user_api_key
                description: "If testing tools, a user is needed to execute the\n\
                  tests. This can be different the --api_key which is\nassumed to\
                  \ be an admin key. If --api_key is a valid\nuser (e.g. it is not\
                  \ a master API key) this does not\nneed to be specified and --api_key\
                  \ will be reused."
                args: !SimpleFlagArg
                  name: TEST_USER
              - !Flag
                optional: true
                synonyms:
                - --test_user
                description: "If testing tools, a user is needed to execute the\n\
                  tests. If --api_key is a master api key (i.e. not tied\nto a real\
                  \ user) and --test_user_api_key isn't\nspecified, this user email\
                  \ will be used. This user\nwill be created if needed."
                args: !SimpleFlagArg
                  name: TEST_USER
              - !Flag
                optional: true
                synonyms:
                - --parallel_tests
                description: "Specify the maximum number of tests that will be run\n\
                  in parallel."
                args: !SimpleFlagArg
                  name: PARALLEL_TESTS
              - !Flag
                optional: true
                synonyms:
                - -v
                - --verbose
                description: Increase output verbosity.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --log_file
                description: "Where the log file should be stored. Default is a file\n\
                  in your system's temp folder"
                args: !SimpleFlagArg
                  name: LOG_FILE
              - !Flag
                optional: true
                synonyms:
                - -g
                - --galaxy
                description: Target Galaxy instance URL/IP address
                args: !SimpleFlagArg
                  name: GALAXY
              - !Flag
                optional: true
                synonyms:
                - -u
                - --user
                description: Galaxy user email address
                args: !SimpleFlagArg
                  name: USER
              - !Flag
                optional: true
                synonyms:
                - -p
                - --password
                description: Password for the Galaxy user
                args: !SimpleFlagArg
                  name: PASSWORD
              - !Flag
                optional: true
                synonyms:
                - -a
                - --api_key
                description: "Galaxy admin user API key (required if not defined in\n\
                  the tools list file)\n"
                args: !SimpleFlagArg
                  name: API_KEY
              parent: *id007
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE]\
                \ [-g GALAXY] [-u USER]\n                         [-p PASSWORD] [-a\
                \ API_KEY] [-t TOOL_LIST_FILE]\n                         [-y TOOL_YAML]\
                \ [--name NAME] [--owner OWNER]\n                         [--revisions\
                \ [REVISIONS [REVISIONS ...]]]\n                         [--toolshed\
                \ TOOL_SHED_URL]\n                         [--install_tool_dependencies]\n\
                \                         [--skip_install_resolver_dependencies]\n\
                \                         [--skip_install_repository_dependencies]\
                \ [--test]\n                         [--test_existing] [--test_json\
                \ TEST_JSON]\n                         [--test_user_api_key TEST_USER]\n\
                \                         [--test_user TEST_USER]\n              \
                \           [--parallel_tests PARALLEL_TESTS]\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  -t TOOL_LIST_FILE,\
                \ --toolsfile TOOL_LIST_FILE\n                        Tools file to\
                \ use (see tool_list.yaml.sample)\n  -y TOOL_YAML, --yaml_tool TOOL_YAML\n\
                \                        Install tool represented by yaml string\n\
                \  --name NAME           The name of the tool to install (only applicable\
                \ if\n                        the tools file is not provided).\n \
                \ --owner OWNER         The owner of the tool to install (only applicable\
                \ if\n                        the tools file is not provided).\n \
                \ --revisions [REVISIONS [REVISIONS ...]]\n                      \
                \  The revisions of the tool repository that will be\n           \
                \             installed. All revisions must be specified after this\n\
                \                        flag by a space.Example: --revisions 0a5c7992b1ac\n\
                \                        f048033da666(Only applicable if the tools\
                \ file is not\n                        provided).\n  --toolshed TOOL_SHED_URL\n\
                \                        The Tool Shed URL where to install the tool\
                \ from. This\n                        is applicable only if the tool\
                \ info is provided as an\n                        option vs. in the\
                \ tools file.\n  --install_tool_dependencies\n                   \
                \     Turn on installation of tool dependencies using\n          \
                \              classic toolshed packages. Can be overwritten on a\n\
                \                        per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
                \                        Skip installing tool dependencies through\
                \ resolver\n                        (e.g. conda). Will be ignored\
                \ on galaxy releases older\n                        than 16.07. Can\
                \ be overwritten on a per-tool basis in\n                        the\
                \ tools file\n  --skip_install_repository_dependencies\n         \
                \               Skip installing the repository dependencies.\n  --test\
                \                Run tool tests on install tools, requires Galaxy\
                \ 18.05\n                        or newer.\n  --test_existing    \
                \   If testing tools during install, also run tool tests\n       \
                \                 on repositories already installed (i.e. skipped\n\
                \                        repositories).\n  --test_json TEST_JSON\n\
                \                        If testing tools, record tool test output\
                \ to specified\n                        file. This file can be turned\
                \ into reports with\n                        ``planemo test_reports\
                \ <output.json>``.\n  --test_user_api_key TEST_USER\n            \
                \            If testing tools, a user is needed to execute the\n \
                \                       tests. This can be different the --api_key\
                \ which is\n                        assumed to be an admin key. If\
                \ --api_key is a valid\n                        user (e.g. it is not\
                \ a master API key) this does not\n                        need to\
                \ be specified and --api_key will be reused.\n  --test_user TEST_USER\n\
                \                        If testing tools, a user is needed to execute\
                \ the\n                        tests. If --api_key is a master api\
                \ key (i.e. not tied\n                        to a real user) and\
                \ --test_user_api_key isn't\n                        specified, this\
                \ user email will be used. This user\n                        will\
                \ be created if needed.\n  --parallel_tests PARALLEL_TESTS\n     \
                \                   Specify the maximum number of tests that will\
                \ be run\n                        in parallel.\n\nGeneral options:\n\
                \  -v, --verbose         Increase output verbosity.\n  --log_file\
                \ LOG_FILE   Where the log file should be stored. Default is a file\n\
                \                        in your system's temp folder\n\nGalaxy connection:\n\
                \  -g GALAXY, --galaxy GALAXY\n                        Target Galaxy\
                \ instance URL/IP address\n  -u USER, --user USER  Galaxy user email\
                \ address\n  -p PASSWORD, --password PASSWORD\n                  \
                \      Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n\
                \                        Galaxy admin user API key (required if not\
                \ defined in\n                        the tools list file)\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: shed-tools [-h] {install,update,test} ...\n\npositional\
              \ arguments:\n  {install,update,test}\n    install             This\
              \ installs tools in Galaxy from the Tool Shed.Use\n                \
              \        shed-tools install --help for more information\n    update\
              \              This updates all tools in Galaxy to the latest\n    \
              \                    revision. Use shed-tools update --help for more\n\
              \                        information\n    test                This tests\
              \ the supplied list of tools in Galaxy. Use\n                      \
              \  shed-tools test --help for more information\n\noptional arguments:\n\
              \  -h, --help            show this help message and exit\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\
            \ [-u USER]\n                       [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
            \                       [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n\
            \                       [--revisions [REVISIONS [REVISIONS ...]]]\n  \
            \                     [--toolshed TOOL_SHED_URL] [--test_json TEST_JSON]\n\
            \                       [--test_user_api_key TEST_USER_API_KEY]\n    \
            \                   [--test_user TEST_USER]\n                       [--parallel_tests\
            \ PARALLEL_TESTS]\n\noptional arguments:\n  -h, --help            show\
            \ this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
            \                        Tools file to use (see tool_list.yaml.sample)\n\
            \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
            \ tool represented by yaml string\n  --name NAME           The name of\
            \ the tool to install (only applicable if\n                        the\
            \ tools file is not provided).\n  --owner OWNER         The owner of the\
            \ tool to install (only applicable if\n                        the tools\
            \ file is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
            \                        The revisions of the tool repository that will\
            \ be\n                        installed. All revisions must be specified\
            \ after this\n                        flag by a space.Example: --revisions\
            \ 0a5c7992b1ac\n                        f048033da666(Only applicable if\
            \ the tools file is not\n                        provided).\n  --toolshed\
            \ TOOL_SHED_URL\n                        The Tool Shed URL where to install\
            \ the tool from. This\n                        is applicable only if the\
            \ tool info is provided as an\n                        option vs. in the\
            \ tools file.\n  --test_json TEST_JSON\n                        Record\
            \ tool test output to specified file. This file\n                    \
            \    can be turned into reports with ``planemo test_reports\n        \
            \                <output.json>``.\n  --test_user_api_key TEST_USER_API_KEY\n\
            \                        A user is needed to execute the tests. This can\
            \ be\n                        different the --api_key which is assumed\
            \ to be an\n                        admin key. If --api_key is a valid\
            \ user (e.g. it is\n                        not a master API key) this\
            \ does not need to be\n                        specified and --api_key\
            \ will be reused.\n  --test_user TEST_USER\n                        A\
            \ user is needed to execute the tests. If --api_key is\n             \
            \           a master api key (i.e. not tied to a real user) and\n    \
            \                    --test_user_api_key isn't specified, this user email\n\
            \                        will be used. This user will be created if needed.\n\
            \  --parallel_tests PARALLEL_TESTS\n                        Specify the\
            \ maximum number of tests that will be run\n                        in\
            \ parallel.\n\nGeneral options:\n  -v, --verbose         Increase output\
            \ verbosity.\n  --log_file LOG_FILE   Where the log file should be stored.\
            \ Default is a file\n                        in your system's temp folder\n\
            \nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n                 \
            \       Target Galaxy instance URL/IP address\n  -u USER, --user USER\
            \  Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n   \
            \                     Password for the Galaxy user\n  -a API_KEY, --api_key\
            \ API_KEY\n                        Galaxy admin user API key (required\
            \ if not defined in\n                        the tools list file)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -t
            - --toolsfile
            description: Tools file to use (see tool_list.yaml.sample)
            args: !SimpleFlagArg
              name: TOOL_LIST_FILE
          - !Flag
            optional: true
            synonyms:
            - -y
            - --yaml_tool
            description: Install tool represented by yaml string
            args: !SimpleFlagArg
              name: TOOL_YAML
          - !Flag
            optional: true
            synonyms:
            - --name
            description: "The name of the tool to install (only applicable if\nthe\
              \ tools file is not provided)."
            args: !SimpleFlagArg
              name: NAME
          - !Flag
            optional: true
            synonyms:
            - --owner
            description: "The owner of the tool to install (only applicable if\nthe\
              \ tools file is not provided)."
            args: !SimpleFlagArg
              name: OWNER
          - !Flag
            optional: true
            synonyms:
            - --revisions
            description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
              \ that will be\ninstalled. All revisions must be specified after this\n\
              flag by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only\
              \ applicable if the tools file is not\nprovided)."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --toolshed
            description: "The Tool Shed URL where to install the tool from. This\n\
              is applicable only if the tool info is provided as an\noption vs. in\
              \ the tools file."
            args: !SimpleFlagArg
              name: TOOL_SHED_URL
          - !Flag
            optional: true
            synonyms:
            - --install_tool_dependencies
            description: "Turn on installation of tool dependencies using\nclassic\
              \ toolshed packages. Can be overwritten on a\nper-tool basis in the\
              \ tools file."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --skip_install_resolver_dependencies
            description: "Skip installing tool dependencies through resolver\n(e.g.\
              \ conda). Will be ignored on galaxy releases older\nthan 16.07. Can\
              \ be overwritten on a per-tool basis in\nthe tools file"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --skip_install_repository_dependencies
            description: Skip installing the repository dependencies.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --test
            description: "Run tool tests on install tools, requires Galaxy 18.05\n\
              or newer."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --test_existing
            description: "If testing tools during install, also run tool tests\non\
              \ repositories already installed (i.e. skipped\nrepositories)."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --test_json
            description: "If testing tools, record tool test output to specified\n\
              file. This file can be turned into reports with\n``planemo test_reports\
              \ <output.json>``."
            args: !SimpleFlagArg
              name: TEST_JSON
          - !Flag
            optional: true
            synonyms:
            - --test_user_api_key
            description: "If testing tools, a user is needed to execute the\ntests.\
              \ This can be different the --api_key which is\nassumed to be an admin\
              \ key. If --api_key is a valid\nuser (e.g. it is not a master API key)\
              \ this does not\nneed to be specified and --api_key will be reused."
            args: !SimpleFlagArg
              name: TEST_USER
          - !Flag
            optional: true
            synonyms:
            - --test_user
            description: "If testing tools, a user is needed to execute the\ntests.\
              \ If --api_key is a master api key (i.e. not tied\nto a real user) and\
              \ --test_user_api_key isn't\nspecified, this user email will be used.\
              \ This user\nwill be created if needed."
            args: !SimpleFlagArg
              name: TEST_USER
          - !Flag
            optional: true
            synonyms:
            - --parallel_tests
            description: "Specify the maximum number of tests that will be run\nin\
              \ parallel."
            args: !SimpleFlagArg
              name: PARALLEL_TESTS
          - !Flag
            optional: true
            synonyms:
            - --section
            description: "Galaxy tool panel section ID where the tool will be\ninstalled\
              \ (the section must exist in Galaxy; only\napplicable if the tools file\
              \ is not provided)."
            args: !SimpleFlagArg
              name: TOOL_PANEL_SECTION_ID
          - !Flag
            optional: true
            synonyms:
            - --section_label
            description: "Galaxy tool panel section label where tool will be\ninstalled\
              \ (if the section does not exist, it will be\ncreated; only applicable\
              \ if the tools file is not\nprovided)."
            args: !SimpleFlagArg
              name: TOOL_PANEL_SECTION_LABEL
          - !Flag
            optional: true
            synonyms:
            - --latest
            description: "Will override the revisions in the tools file and\nalways\
              \ install the latest revision."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -v
            - --verbose
            description: Increase output verbosity.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --log_file
            description: "Where the log file should be stored. Default is a file\n\
              in your system's temp folder"
            args: !SimpleFlagArg
              name: LOG_FILE
          - !Flag
            optional: true
            synonyms:
            - -g
            - --galaxy
            description: Target Galaxy instance URL/IP address
            args: !SimpleFlagArg
              name: GALAXY
          - !Flag
            optional: true
            synonyms:
            - -u
            - --user
            description: Galaxy user email address
            args: !SimpleFlagArg
              name: USER
          - !Flag
            optional: true
            synonyms:
            - -p
            - --password
            description: Password for the Galaxy user
            args: !SimpleFlagArg
              name: PASSWORD
          - !Flag
            optional: true
            synonyms:
            - -a
            - --api_key
            description: "Galaxy admin user API key (required if not defined in\n\
              the tools list file)\n"
            args: !SimpleFlagArg
              name: API_KEY
          parent: *id008
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: shed-tools install [-h] [-v] [--log_file LOG_FILE] [-g\
            \ GALAXY]\n                          [-u USER] [-p PASSWORD] [-a API_KEY]\n\
            \                          [-t TOOL_LIST_FILE] [-y TOOL_YAML] [--name\
            \ NAME]\n                          [--owner OWNER]\n                 \
            \         [--revisions [REVISIONS [REVISIONS ...]]]\n                \
            \          [--toolshed TOOL_SHED_URL]\n                          [--install_tool_dependencies]\n\
            \                          [--skip_install_resolver_dependencies]\n  \
            \                        [--skip_install_repository_dependencies] [--test]\n\
            \                          [--test_existing] [--test_json TEST_JSON]\n\
            \                          [--test_user_api_key TEST_USER]\n         \
            \                 [--test_user TEST_USER]\n                          [--parallel_tests\
            \ PARALLEL_TESTS]\n                          [--section TOOL_PANEL_SECTION_ID]\n\
            \                          [--section_label TOOL_PANEL_SECTION_LABEL]\n\
            \                          [--latest]\n\noptional arguments:\n  -h, --help\
            \            show this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile\
            \ TOOL_LIST_FILE\n                        Tools file to use (see tool_list.yaml.sample)\n\
            \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
            \ tool represented by yaml string\n  --name NAME           The name of\
            \ the tool to install (only applicable if\n                        the\
            \ tools file is not provided).\n  --owner OWNER         The owner of the\
            \ tool to install (only applicable if\n                        the tools\
            \ file is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
            \                        The revisions of the tool repository that will\
            \ be\n                        installed. All revisions must be specified\
            \ after this\n                        flag by a space.Example: --revisions\
            \ 0a5c7992b1ac\n                        f048033da666(Only applicable if\
            \ the tools file is not\n                        provided).\n  --toolshed\
            \ TOOL_SHED_URL\n                        The Tool Shed URL where to install\
            \ the tool from. This\n                        is applicable only if the\
            \ tool info is provided as an\n                        option vs. in the\
            \ tools file.\n  --install_tool_dependencies\n                       \
            \ Turn on installation of tool dependencies using\n                  \
            \      classic toolshed packages. Can be overwritten on a\n          \
            \              per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
            \                        Skip installing tool dependencies through resolver\n\
            \                        (e.g. conda). Will be ignored on galaxy releases\
            \ older\n                        than 16.07. Can be overwritten on a per-tool\
            \ basis in\n                        the tools file\n  --skip_install_repository_dependencies\n\
            \                        Skip installing the repository dependencies.\n\
            \  --test                Run tool tests on install tools, requires Galaxy\
            \ 18.05\n                        or newer.\n  --test_existing       If\
            \ testing tools during install, also run tool tests\n                \
            \        on repositories already installed (i.e. skipped\n           \
            \             repositories).\n  --test_json TEST_JSON\n              \
            \          If testing tools, record tool test output to specified\n  \
            \                      file. This file can be turned into reports with\n\
            \                        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
            \ TEST_USER\n                        If testing tools, a user is needed\
            \ to execute the\n                        tests. This can be different\
            \ the --api_key which is\n                        assumed to be an admin\
            \ key. If --api_key is a valid\n                        user (e.g. it\
            \ is not a master API key) this does not\n                        need\
            \ to be specified and --api_key will be reused.\n  --test_user TEST_USER\n\
            \                        If testing tools, a user is needed to execute\
            \ the\n                        tests. If --api_key is a master api key\
            \ (i.e. not tied\n                        to a real user) and --test_user_api_key\
            \ isn't\n                        specified, this user email will be used.\
            \ This user\n                        will be created if needed.\n  --parallel_tests\
            \ PARALLEL_TESTS\n                        Specify the maximum number of\
            \ tests that will be run\n                        in parallel.\n  --section\
            \ TOOL_PANEL_SECTION_ID\n                        Galaxy tool panel section\
            \ ID where the tool will be\n                        installed (the section\
            \ must exist in Galaxy; only\n                        applicable if the\
            \ tools file is not provided).\n  --section_label TOOL_PANEL_SECTION_LABEL\n\
            \                        Galaxy tool panel section label where tool will\
            \ be\n                        installed (if the section does not exist,\
            \ it will be\n                        created; only applicable if the\
            \ tools file is not\n                        provided).\n  --latest  \
            \            Will override the revisions in the tools file and\n     \
            \                   always install the latest revision.\n\nGeneral options:\n\
            \  -v, --verbose         Increase output verbosity.\n  --log_file LOG_FILE\
            \   Where the log file should be stored. Default is a file\n         \
            \               in your system's temp folder\n\nGalaxy connection:\n \
            \ -g GALAXY, --galaxy GALAXY\n                        Target Galaxy instance\
            \ URL/IP address\n  -u USER, --user USER  Galaxy user email address\n\
            \  -p PASSWORD, --password PASSWORD\n                        Password\
            \ for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n             \
            \           Galaxy admin user API key (required if not defined in\n  \
            \                      the tools list file)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -t
            - --toolsfile
            description: Tools file to use (see tool_list.yaml.sample)
            args: !SimpleFlagArg
              name: TOOL_LIST_FILE
          - !Flag
            optional: true
            synonyms:
            - -y
            - --yaml_tool
            description: Install tool represented by yaml string
            args: !SimpleFlagArg
              name: TOOL_YAML
          - !Flag
            optional: true
            synonyms:
            - --name
            description: "The name of the tool to install (only applicable if\nthe\
              \ tools file is not provided)."
            args: !SimpleFlagArg
              name: NAME
          - !Flag
            optional: true
            synonyms:
            - --owner
            description: "The owner of the tool to install (only applicable if\nthe\
              \ tools file is not provided)."
            args: !SimpleFlagArg
              name: OWNER
          - !Flag
            optional: true
            synonyms:
            - --revisions
            description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
              \ that will be\ninstalled. All revisions must be specified after this\n\
              flag by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only\
              \ applicable if the tools file is not\nprovided)."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --toolshed
            description: "The Tool Shed URL where to install the tool from. This\n\
              is applicable only if the tool info is provided as an\noption vs. in\
              \ the tools file."
            args: !SimpleFlagArg
              name: TOOL_SHED_URL
          - !Flag
            optional: true
            synonyms:
            - --install_tool_dependencies
            description: "Turn on installation of tool dependencies using\nclassic\
              \ toolshed packages. Can be overwritten on a\nper-tool basis in the\
              \ tools file."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --skip_install_resolver_dependencies
            description: "Skip installing tool dependencies through resolver\n(e.g.\
              \ conda). Will be ignored on galaxy releases older\nthan 16.07. Can\
              \ be overwritten on a per-tool basis in\nthe tools file"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --skip_install_repository_dependencies
            description: Skip installing the repository dependencies.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --test
            description: "Run tool tests on install tools, requires Galaxy 18.05\n\
              or newer."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --test_existing
            description: "If testing tools during install, also run tool tests\non\
              \ repositories already installed (i.e. skipped\nrepositories)."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --test_json
            description: "If testing tools, record tool test output to specified\n\
              file. This file can be turned into reports with\n``planemo test_reports\
              \ <output.json>``."
            args: !SimpleFlagArg
              name: TEST_JSON
          - !Flag
            optional: true
            synonyms:
            - --test_user_api_key
            description: "If testing tools, a user is needed to execute the\ntests.\
              \ This can be different the --api_key which is\nassumed to be an admin\
              \ key. If --api_key is a valid\nuser (e.g. it is not a master API key)\
              \ this does not\nneed to be specified and --api_key will be reused."
            args: !SimpleFlagArg
              name: TEST_USER
          - !Flag
            optional: true
            synonyms:
            - --test_user
            description: "If testing tools, a user is needed to execute the\ntests.\
              \ If --api_key is a master api key (i.e. not tied\nto a real user) and\
              \ --test_user_api_key isn't\nspecified, this user email will be used.\
              \ This user\nwill be created if needed."
            args: !SimpleFlagArg
              name: TEST_USER
          - !Flag
            optional: true
            synonyms:
            - --parallel_tests
            description: "Specify the maximum number of tests that will be run\nin\
              \ parallel."
            args: !SimpleFlagArg
              name: PARALLEL_TESTS
          - !Flag
            optional: true
            synonyms:
            - -v
            - --verbose
            description: Increase output verbosity.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --log_file
            description: "Where the log file should be stored. Default is a file\n\
              in your system's temp folder"
            args: !SimpleFlagArg
              name: LOG_FILE
          - !Flag
            optional: true
            synonyms:
            - -g
            - --galaxy
            description: Target Galaxy instance URL/IP address
            args: !SimpleFlagArg
              name: GALAXY
          - !Flag
            optional: true
            synonyms:
            - -u
            - --user
            description: Galaxy user email address
            args: !SimpleFlagArg
              name: USER
          - !Flag
            optional: true
            synonyms:
            - -p
            - --password
            description: Password for the Galaxy user
            args: !SimpleFlagArg
              name: PASSWORD
          - !Flag
            optional: true
            synonyms:
            - -a
            - --api_key
            description: "Galaxy admin user API key (required if not defined in\n\
              the tools list file)\n"
            args: !SimpleFlagArg
              name: API_KEY
          parent: *id008
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE] [-g\
            \ GALAXY] [-u USER]\n                         [-p PASSWORD] [-a API_KEY]\
            \ [-t TOOL_LIST_FILE]\n                         [-y TOOL_YAML] [--name\
            \ NAME] [--owner OWNER]\n                         [--revisions [REVISIONS\
            \ [REVISIONS ...]]]\n                         [--toolshed TOOL_SHED_URL]\n\
            \                         [--install_tool_dependencies]\n            \
            \             [--skip_install_resolver_dependencies]\n               \
            \          [--skip_install_repository_dependencies] [--test]\n       \
            \                  [--test_existing] [--test_json TEST_JSON]\n       \
            \                  [--test_user_api_key TEST_USER]\n                 \
            \        [--test_user TEST_USER]\n                         [--parallel_tests\
            \ PARALLEL_TESTS]\n\noptional arguments:\n  -h, --help            show\
            \ this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
            \                        Tools file to use (see tool_list.yaml.sample)\n\
            \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install\
            \ tool represented by yaml string\n  --name NAME           The name of\
            \ the tool to install (only applicable if\n                        the\
            \ tools file is not provided).\n  --owner OWNER         The owner of the\
            \ tool to install (only applicable if\n                        the tools\
            \ file is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
            \                        The revisions of the tool repository that will\
            \ be\n                        installed. All revisions must be specified\
            \ after this\n                        flag by a space.Example: --revisions\
            \ 0a5c7992b1ac\n                        f048033da666(Only applicable if\
            \ the tools file is not\n                        provided).\n  --toolshed\
            \ TOOL_SHED_URL\n                        The Tool Shed URL where to install\
            \ the tool from. This\n                        is applicable only if the\
            \ tool info is provided as an\n                        option vs. in the\
            \ tools file.\n  --install_tool_dependencies\n                       \
            \ Turn on installation of tool dependencies using\n                  \
            \      classic toolshed packages. Can be overwritten on a\n          \
            \              per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
            \                        Skip installing tool dependencies through resolver\n\
            \                        (e.g. conda). Will be ignored on galaxy releases\
            \ older\n                        than 16.07. Can be overwritten on a per-tool\
            \ basis in\n                        the tools file\n  --skip_install_repository_dependencies\n\
            \                        Skip installing the repository dependencies.\n\
            \  --test                Run tool tests on install tools, requires Galaxy\
            \ 18.05\n                        or newer.\n  --test_existing       If\
            \ testing tools during install, also run tool tests\n                \
            \        on repositories already installed (i.e. skipped\n           \
            \             repositories).\n  --test_json TEST_JSON\n              \
            \          If testing tools, record tool test output to specified\n  \
            \                      file. This file can be turned into reports with\n\
            \                        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
            \ TEST_USER\n                        If testing tools, a user is needed\
            \ to execute the\n                        tests. This can be different\
            \ the --api_key which is\n                        assumed to be an admin\
            \ key. If --api_key is a valid\n                        user (e.g. it\
            \ is not a master API key) this does not\n                        need\
            \ to be specified and --api_key will be reused.\n  --test_user TEST_USER\n\
            \                        If testing tools, a user is needed to execute\
            \ the\n                        tests. If --api_key is a master api key\
            \ (i.e. not tied\n                        to a real user) and --test_user_api_key\
            \ isn't\n                        specified, this user email will be used.\
            \ This user\n                        will be created if needed.\n  --parallel_tests\
            \ PARALLEL_TESTS\n                        Specify the maximum number of\
            \ tests that will be run\n                        in parallel.\n\nGeneral\
            \ options:\n  -v, --verbose         Increase output verbosity.\n  --log_file\
            \ LOG_FILE   Where the log file should be stored. Default is a file\n\
            \                        in your system's temp folder\n\nGalaxy connection:\n\
            \  -g GALAXY, --galaxy GALAXY\n                        Target Galaxy instance\
            \ URL/IP address\n  -u USER, --user USER  Galaxy user email address\n\
            \  -p PASSWORD, --password PASSWORD\n                        Password\
            \ for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n             \
            \           Galaxy admin user API key (required if not defined in\n  \
            \                      the tools list file)\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: shed-tools [-h] {install,update,test} ...\n\npositional\
          \ arguments:\n  {install,update,test}\n    install             This installs\
          \ tools in Galaxy from the Tool Shed.Use\n                        shed-tools\
          \ install --help for more information\n    update              This updates\
          \ all tools in Galaxy to the latest\n                        revision. Use\
          \ shed-tools update --help for more\n                        information\n\
          \    test                This tests the supplied list of tools in Galaxy.\
          \ Use\n                        shed-tools test --help for more information\n\
          \noptional arguments:\n  -h, --help            show this help message and\
          \ exit\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\
        \ [-u USER]\n                       [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
        \                       [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n   \
        \                    [--revisions [REVISIONS [REVISIONS ...]]]\n         \
        \              [--toolshed TOOL_SHED_URL] [--test_json TEST_JSON]\n      \
        \                 [--test_user_api_key TEST_USER_API_KEY]\n              \
        \         [--test_user TEST_USER]\n                       [--parallel_tests\
        \ PARALLEL_TESTS]\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
        \                        Tools file to use (see tool_list.yaml.sample)\n \
        \ -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install tool\
        \ represented by yaml string\n  --name NAME           The name of the tool\
        \ to install (only applicable if\n                        the tools file is\
        \ not provided).\n  --owner OWNER         The owner of the tool to install\
        \ (only applicable if\n                        the tools file is not provided).\n\
        \  --revisions [REVISIONS [REVISIONS ...]]\n                        The revisions\
        \ of the tool repository that will be\n                        installed.\
        \ All revisions must be specified after this\n                        flag\
        \ by a space.Example: --revisions 0a5c7992b1ac\n                        f048033da666(Only\
        \ applicable if the tools file is not\n                        provided).\n\
        \  --toolshed TOOL_SHED_URL\n                        The Tool Shed URL where\
        \ to install the tool from. This\n                        is applicable only\
        \ if the tool info is provided as an\n                        option vs. in\
        \ the tools file.\n  --test_json TEST_JSON\n                        Record\
        \ tool test output to specified file. This file\n                        can\
        \ be turned into reports with ``planemo test_reports\n                   \
        \     <output.json>``.\n  --test_user_api_key TEST_USER_API_KEY\n        \
        \                A user is needed to execute the tests. This can be\n    \
        \                    different the --api_key which is assumed to be an\n \
        \                       admin key. If --api_key is a valid user (e.g. it is\n\
        \                        not a master API key) this does not need to be\n\
        \                        specified and --api_key will be reused.\n  --test_user\
        \ TEST_USER\n                        A user is needed to execute the tests.\
        \ If --api_key is\n                        a master api key (i.e. not tied\
        \ to a real user) and\n                        --test_user_api_key isn't specified,\
        \ this user email\n                        will be used. This user will be\
        \ created if needed.\n  --parallel_tests PARALLEL_TESTS\n                \
        \        Specify the maximum number of tests that will be run\n          \
        \              in parallel.\n\nGeneral options:\n  -v, --verbose         Increase\
        \ output verbosity.\n  --log_file LOG_FILE   Where the log file should be\
        \ stored. Default is a file\n                        in your system's temp\
        \ folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n           \
        \             Target Galaxy instance URL/IP address\n  -u USER, --user USER\
        \  Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n       \
        \                 Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n\
        \                        Galaxy admin user API key (required if not defined\
        \ in\n                        the tools list file)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -t
        - --toolsfile
        description: Tools file to use (see tool_list.yaml.sample)
        args: !SimpleFlagArg
          name: TOOL_LIST_FILE
      - !Flag
        optional: true
        synonyms:
        - -y
        - --yaml_tool
        description: Install tool represented by yaml string
        args: !SimpleFlagArg
          name: TOOL_YAML
      - !Flag
        optional: true
        synonyms:
        - --name
        description: "The name of the tool to install (only applicable if\nthe tools\
          \ file is not provided)."
        args: !SimpleFlagArg
          name: NAME
      - !Flag
        optional: true
        synonyms:
        - --owner
        description: "The owner of the tool to install (only applicable if\nthe tools\
          \ file is not provided)."
        args: !SimpleFlagArg
          name: OWNER
      - !Flag
        optional: true
        synonyms:
        - --revisions
        description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
          \ that will be\ninstalled. All revisions must be specified after this\n\
          flag by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
          \ if the tools file is not\nprovided)."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --toolshed
        description: "The Tool Shed URL where to install the tool from. This\nis applicable\
          \ only if the tool info is provided as an\noption vs. in the tools file."
        args: !SimpleFlagArg
          name: TOOL_SHED_URL
      - !Flag
        optional: true
        synonyms:
        - --install_tool_dependencies
        description: "Turn on installation of tool dependencies using\nclassic toolshed\
          \ packages. Can be overwritten on a\nper-tool basis in the tools file."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --skip_install_resolver_dependencies
        description: "Skip installing tool dependencies through resolver\n(e.g. conda).\
          \ Will be ignored on galaxy releases older\nthan 16.07. Can be overwritten\
          \ on a per-tool basis in\nthe tools file"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --skip_install_repository_dependencies
        description: Skip installing the repository dependencies.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --test
        description: "Run tool tests on install tools, requires Galaxy 18.05\nor newer."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --test_existing
        description: "If testing tools during install, also run tool tests\non repositories\
          \ already installed (i.e. skipped\nrepositories)."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --test_json
        description: "If testing tools, record tool test output to specified\nfile.\
          \ This file can be turned into reports with\n``planemo test_reports <output.json>``."
        args: !SimpleFlagArg
          name: TEST_JSON
      - !Flag
        optional: true
        synonyms:
        - --test_user_api_key
        description: "If testing tools, a user is needed to execute the\ntests. This\
          \ can be different the --api_key which is\nassumed to be an admin key. If\
          \ --api_key is a valid\nuser (e.g. it is not a master API key) this does\
          \ not\nneed to be specified and --api_key will be reused."
        args: !SimpleFlagArg
          name: TEST_USER
      - !Flag
        optional: true
        synonyms:
        - --test_user
        description: "If testing tools, a user is needed to execute the\ntests. If\
          \ --api_key is a master api key (i.e. not tied\nto a real user) and --test_user_api_key\
          \ isn't\nspecified, this user email will be used. This user\nwill be created\
          \ if needed."
        args: !SimpleFlagArg
          name: TEST_USER
      - !Flag
        optional: true
        synonyms:
        - --parallel_tests
        description: "Specify the maximum number of tests that will be run\nin parallel."
        args: !SimpleFlagArg
          name: PARALLEL_TESTS
      - !Flag
        optional: true
        synonyms:
        - --section
        description: "Galaxy tool panel section ID where the tool will be\ninstalled\
          \ (the section must exist in Galaxy; only\napplicable if the tools file\
          \ is not provided)."
        args: !SimpleFlagArg
          name: TOOL_PANEL_SECTION_ID
      - !Flag
        optional: true
        synonyms:
        - --section_label
        description: "Galaxy tool panel section label where tool will be\ninstalled\
          \ (if the section does not exist, it will be\ncreated; only applicable if\
          \ the tools file is not\nprovided)."
        args: !SimpleFlagArg
          name: TOOL_PANEL_SECTION_LABEL
      - !Flag
        optional: true
        synonyms:
        - --latest
        description: "Will override the revisions in the tools file and\nalways install\
          \ the latest revision."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -v
        - --verbose
        description: Increase output verbosity.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --log_file
        description: "Where the log file should be stored. Default is a file\nin your\
          \ system's temp folder"
        args: !SimpleFlagArg
          name: LOG_FILE
      - !Flag
        optional: true
        synonyms:
        - -g
        - --galaxy
        description: Target Galaxy instance URL/IP address
        args: !SimpleFlagArg
          name: GALAXY
      - !Flag
        optional: true
        synonyms:
        - -u
        - --user
        description: Galaxy user email address
        args: !SimpleFlagArg
          name: USER
      - !Flag
        optional: true
        synonyms:
        - -p
        - --password
        description: Password for the Galaxy user
        args: !SimpleFlagArg
          name: PASSWORD
      - !Flag
        optional: true
        synonyms:
        - -a
        - --api_key
        description: "Galaxy admin user API key (required if not defined in\nthe tools\
          \ list file)\n"
        args: !SimpleFlagArg
          name: API_KEY
      parent: *id009
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: shed-tools install [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\n\
        \                          [-u USER] [-p PASSWORD] [-a API_KEY]\n        \
        \                  [-t TOOL_LIST_FILE] [-y TOOL_YAML] [--name NAME]\n    \
        \                      [--owner OWNER]\n                          [--revisions\
        \ [REVISIONS [REVISIONS ...]]]\n                          [--toolshed TOOL_SHED_URL]\n\
        \                          [--install_tool_dependencies]\n               \
        \           [--skip_install_resolver_dependencies]\n                     \
        \     [--skip_install_repository_dependencies] [--test]\n                \
        \          [--test_existing] [--test_json TEST_JSON]\n                   \
        \       [--test_user_api_key TEST_USER]\n                          [--test_user\
        \ TEST_USER]\n                          [--parallel_tests PARALLEL_TESTS]\n\
        \                          [--section TOOL_PANEL_SECTION_ID]\n           \
        \               [--section_label TOOL_PANEL_SECTION_LABEL]\n             \
        \             [--latest]\n\noptional arguments:\n  -h, --help            show\
        \ this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
        \                        Tools file to use (see tool_list.yaml.sample)\n \
        \ -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install tool\
        \ represented by yaml string\n  --name NAME           The name of the tool\
        \ to install (only applicable if\n                        the tools file is\
        \ not provided).\n  --owner OWNER         The owner of the tool to install\
        \ (only applicable if\n                        the tools file is not provided).\n\
        \  --revisions [REVISIONS [REVISIONS ...]]\n                        The revisions\
        \ of the tool repository that will be\n                        installed.\
        \ All revisions must be specified after this\n                        flag\
        \ by a space.Example: --revisions 0a5c7992b1ac\n                        f048033da666(Only\
        \ applicable if the tools file is not\n                        provided).\n\
        \  --toolshed TOOL_SHED_URL\n                        The Tool Shed URL where\
        \ to install the tool from. This\n                        is applicable only\
        \ if the tool info is provided as an\n                        option vs. in\
        \ the tools file.\n  --install_tool_dependencies\n                       \
        \ Turn on installation of tool dependencies using\n                      \
        \  classic toolshed packages. Can be overwritten on a\n                  \
        \      per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
        \                        Skip installing tool dependencies through resolver\n\
        \                        (e.g. conda). Will be ignored on galaxy releases\
        \ older\n                        than 16.07. Can be overwritten on a per-tool\
        \ basis in\n                        the tools file\n  --skip_install_repository_dependencies\n\
        \                        Skip installing the repository dependencies.\n  --test\
        \                Run tool tests on install tools, requires Galaxy 18.05\n\
        \                        or newer.\n  --test_existing       If testing tools\
        \ during install, also run tool tests\n                        on repositories\
        \ already installed (i.e. skipped\n                        repositories).\n\
        \  --test_json TEST_JSON\n                        If testing tools, record\
        \ tool test output to specified\n                        file. This file can\
        \ be turned into reports with\n                        ``planemo test_reports\
        \ <output.json>``.\n  --test_user_api_key TEST_USER\n                    \
        \    If testing tools, a user is needed to execute the\n                 \
        \       tests. This can be different the --api_key which is\n            \
        \            assumed to be an admin key. If --api_key is a valid\n       \
        \                 user (e.g. it is not a master API key) this does not\n \
        \                       need to be specified and --api_key will be reused.\n\
        \  --test_user TEST_USER\n                        If testing tools, a user\
        \ is needed to execute the\n                        tests. If --api_key is\
        \ a master api key (i.e. not tied\n                        to a real user)\
        \ and --test_user_api_key isn't\n                        specified, this user\
        \ email will be used. This user\n                        will be created if\
        \ needed.\n  --parallel_tests PARALLEL_TESTS\n                        Specify\
        \ the maximum number of tests that will be run\n                        in\
        \ parallel.\n  --section TOOL_PANEL_SECTION_ID\n                        Galaxy\
        \ tool panel section ID where the tool will be\n                        installed\
        \ (the section must exist in Galaxy; only\n                        applicable\
        \ if the tools file is not provided).\n  --section_label TOOL_PANEL_SECTION_LABEL\n\
        \                        Galaxy tool panel section label where tool will be\n\
        \                        installed (if the section does not exist, it will\
        \ be\n                        created; only applicable if the tools file is\
        \ not\n                        provided).\n  --latest              Will override\
        \ the revisions in the tools file and\n                        always install\
        \ the latest revision.\n\nGeneral options:\n  -v, --verbose         Increase\
        \ output verbosity.\n  --log_file LOG_FILE   Where the log file should be\
        \ stored. Default is a file\n                        in your system's temp\
        \ folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n           \
        \             Target Galaxy instance URL/IP address\n  -u USER, --user USER\
        \  Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n       \
        \                 Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n\
        \                        Galaxy admin user API key (required if not defined\
        \ in\n                        the tools list file)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -t
        - --toolsfile
        description: Tools file to use (see tool_list.yaml.sample)
        args: !SimpleFlagArg
          name: TOOL_LIST_FILE
      - !Flag
        optional: true
        synonyms:
        - -y
        - --yaml_tool
        description: Install tool represented by yaml string
        args: !SimpleFlagArg
          name: TOOL_YAML
      - !Flag
        optional: true
        synonyms:
        - --name
        description: "The name of the tool to install (only applicable if\nthe tools\
          \ file is not provided)."
        args: !SimpleFlagArg
          name: NAME
      - !Flag
        optional: true
        synonyms:
        - --owner
        description: "The owner of the tool to install (only applicable if\nthe tools\
          \ file is not provided)."
        args: !SimpleFlagArg
          name: OWNER
      - !Flag
        optional: true
        synonyms:
        - --revisions
        description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
          \ that will be\ninstalled. All revisions must be specified after this\n\
          flag by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
          \ if the tools file is not\nprovided)."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --toolshed
        description: "The Tool Shed URL where to install the tool from. This\nis applicable\
          \ only if the tool info is provided as an\noption vs. in the tools file."
        args: !SimpleFlagArg
          name: TOOL_SHED_URL
      - !Flag
        optional: true
        synonyms:
        - --install_tool_dependencies
        description: "Turn on installation of tool dependencies using\nclassic toolshed\
          \ packages. Can be overwritten on a\nper-tool basis in the tools file."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --skip_install_resolver_dependencies
        description: "Skip installing tool dependencies through resolver\n(e.g. conda).\
          \ Will be ignored on galaxy releases older\nthan 16.07. Can be overwritten\
          \ on a per-tool basis in\nthe tools file"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --skip_install_repository_dependencies
        description: Skip installing the repository dependencies.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --test
        description: "Run tool tests on install tools, requires Galaxy 18.05\nor newer."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --test_existing
        description: "If testing tools during install, also run tool tests\non repositories\
          \ already installed (i.e. skipped\nrepositories)."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --test_json
        description: "If testing tools, record tool test output to specified\nfile.\
          \ This file can be turned into reports with\n``planemo test_reports <output.json>``."
        args: !SimpleFlagArg
          name: TEST_JSON
      - !Flag
        optional: true
        synonyms:
        - --test_user_api_key
        description: "If testing tools, a user is needed to execute the\ntests. This\
          \ can be different the --api_key which is\nassumed to be an admin key. If\
          \ --api_key is a valid\nuser (e.g. it is not a master API key) this does\
          \ not\nneed to be specified and --api_key will be reused."
        args: !SimpleFlagArg
          name: TEST_USER
      - !Flag
        optional: true
        synonyms:
        - --test_user
        description: "If testing tools, a user is needed to execute the\ntests. If\
          \ --api_key is a master api key (i.e. not tied\nto a real user) and --test_user_api_key\
          \ isn't\nspecified, this user email will be used. This user\nwill be created\
          \ if needed."
        args: !SimpleFlagArg
          name: TEST_USER
      - !Flag
        optional: true
        synonyms:
        - --parallel_tests
        description: "Specify the maximum number of tests that will be run\nin parallel."
        args: !SimpleFlagArg
          name: PARALLEL_TESTS
      - !Flag
        optional: true
        synonyms:
        - -v
        - --verbose
        description: Increase output verbosity.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --log_file
        description: "Where the log file should be stored. Default is a file\nin your\
          \ system's temp folder"
        args: !SimpleFlagArg
          name: LOG_FILE
      - !Flag
        optional: true
        synonyms:
        - -g
        - --galaxy
        description: Target Galaxy instance URL/IP address
        args: !SimpleFlagArg
          name: GALAXY
      - !Flag
        optional: true
        synonyms:
        - -u
        - --user
        description: Galaxy user email address
        args: !SimpleFlagArg
          name: USER
      - !Flag
        optional: true
        synonyms:
        - -p
        - --password
        description: Password for the Galaxy user
        args: !SimpleFlagArg
          name: PASSWORD
      - !Flag
        optional: true
        synonyms:
        - -a
        - --api_key
        description: "Galaxy admin user API key (required if not defined in\nthe tools\
          \ list file)\n"
        args: !SimpleFlagArg
          name: API_KEY
      parent: *id009
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\
        \ [-u USER]\n                         [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
        \                         [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n \
        \                        [--revisions [REVISIONS [REVISIONS ...]]]\n     \
        \                    [--toolshed TOOL_SHED_URL]\n                        \
        \ [--install_tool_dependencies]\n                         [--skip_install_resolver_dependencies]\n\
        \                         [--skip_install_repository_dependencies] [--test]\n\
        \                         [--test_existing] [--test_json TEST_JSON]\n    \
        \                     [--test_user_api_key TEST_USER]\n                  \
        \       [--test_user TEST_USER]\n                         [--parallel_tests\
        \ PARALLEL_TESTS]\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
        \                        Tools file to use (see tool_list.yaml.sample)\n \
        \ -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install tool\
        \ represented by yaml string\n  --name NAME           The name of the tool\
        \ to install (only applicable if\n                        the tools file is\
        \ not provided).\n  --owner OWNER         The owner of the tool to install\
        \ (only applicable if\n                        the tools file is not provided).\n\
        \  --revisions [REVISIONS [REVISIONS ...]]\n                        The revisions\
        \ of the tool repository that will be\n                        installed.\
        \ All revisions must be specified after this\n                        flag\
        \ by a space.Example: --revisions 0a5c7992b1ac\n                        f048033da666(Only\
        \ applicable if the tools file is not\n                        provided).\n\
        \  --toolshed TOOL_SHED_URL\n                        The Tool Shed URL where\
        \ to install the tool from. This\n                        is applicable only\
        \ if the tool info is provided as an\n                        option vs. in\
        \ the tools file.\n  --install_tool_dependencies\n                       \
        \ Turn on installation of tool dependencies using\n                      \
        \  classic toolshed packages. Can be overwritten on a\n                  \
        \      per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
        \                        Skip installing tool dependencies through resolver\n\
        \                        (e.g. conda). Will be ignored on galaxy releases\
        \ older\n                        than 16.07. Can be overwritten on a per-tool\
        \ basis in\n                        the tools file\n  --skip_install_repository_dependencies\n\
        \                        Skip installing the repository dependencies.\n  --test\
        \                Run tool tests on install tools, requires Galaxy 18.05\n\
        \                        or newer.\n  --test_existing       If testing tools\
        \ during install, also run tool tests\n                        on repositories\
        \ already installed (i.e. skipped\n                        repositories).\n\
        \  --test_json TEST_JSON\n                        If testing tools, record\
        \ tool test output to specified\n                        file. This file can\
        \ be turned into reports with\n                        ``planemo test_reports\
        \ <output.json>``.\n  --test_user_api_key TEST_USER\n                    \
        \    If testing tools, a user is needed to execute the\n                 \
        \       tests. This can be different the --api_key which is\n            \
        \            assumed to be an admin key. If --api_key is a valid\n       \
        \                 user (e.g. it is not a master API key) this does not\n \
        \                       need to be specified and --api_key will be reused.\n\
        \  --test_user TEST_USER\n                        If testing tools, a user\
        \ is needed to execute the\n                        tests. If --api_key is\
        \ a master api key (i.e. not tied\n                        to a real user)\
        \ and --test_user_api_key isn't\n                        specified, this user\
        \ email will be used. This user\n                        will be created if\
        \ needed.\n  --parallel_tests PARALLEL_TESTS\n                        Specify\
        \ the maximum number of tests that will be run\n                        in\
        \ parallel.\n\nGeneral options:\n  -v, --verbose         Increase output verbosity.\n\
        \  --log_file LOG_FILE   Where the log file should be stored. Default is a\
        \ file\n                        in your system's temp folder\n\nGalaxy connection:\n\
        \  -g GALAXY, --galaxy GALAXY\n                        Target Galaxy instance\
        \ URL/IP address\n  -u USER, --user USER  Galaxy user email address\n  -p\
        \ PASSWORD, --password PASSWORD\n                        Password for the\
        \ Galaxy user\n  -a API_KEY, --api_key API_KEY\n                        Galaxy\
        \ admin user API key (required if not defined in\n                       \
        \ the tools list file)\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: shed-tools [-h] {install,update,test} ...\n\npositional arguments:\n\
      \  {install,update,test}\n    install             This installs tools in Galaxy\
      \ from the Tool Shed.Use\n                        shed-tools install --help\
      \ for more information\n    update              This updates all tools in Galaxy\
      \ to the latest\n                        revision. Use shed-tools update --help\
      \ for more\n                        information\n    test                This\
      \ tests the supplied list of tools in Galaxy. Use\n                        shed-tools\
      \ test --help for more information\n\noptional arguments:\n  -h, --help    \
      \        show this help message and exit\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE] [-g GALAXY] [-u\
    \ USER]\n                       [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
    \                       [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n       \
    \                [--revisions [REVISIONS [REVISIONS ...]]]\n                 \
    \      [--toolshed TOOL_SHED_URL] [--test_json TEST_JSON]\n                  \
    \     [--test_user_api_key TEST_USER_API_KEY]\n                       [--test_user\
    \ TEST_USER]\n                       [--parallel_tests PARALLEL_TESTS]\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -t TOOL_LIST_FILE,\
    \ --toolsfile TOOL_LIST_FILE\n                        Tools file to use (see tool_list.yaml.sample)\n\
    \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install tool represented\
    \ by yaml string\n  --name NAME           The name of the tool to install (only\
    \ applicable if\n                        the tools file is not provided).\n  --owner\
    \ OWNER         The owner of the tool to install (only applicable if\n       \
    \                 the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS\
    \ ...]]\n                        The revisions of the tool repository that will\
    \ be\n                        installed. All revisions must be specified after\
    \ this\n                        flag by a space.Example: --revisions 0a5c7992b1ac\n\
    \                        f048033da666(Only applicable if the tools file is not\n\
    \                        provided).\n  --toolshed TOOL_SHED_URL\n            \
    \            The Tool Shed URL where to install the tool from. This\n        \
    \                is applicable only if the tool info is provided as an\n     \
    \                   option vs. in the tools file.\n  --test_json TEST_JSON\n \
    \                       Record tool test output to specified file. This file\n\
    \                        can be turned into reports with ``planemo test_reports\n\
    \                        <output.json>``.\n  --test_user_api_key TEST_USER_API_KEY\n\
    \                        A user is needed to execute the tests. This can be\n\
    \                        different the --api_key which is assumed to be an\n \
    \                       admin key. If --api_key is a valid user (e.g. it is\n\
    \                        not a master API key) this does not need to be\n    \
    \                    specified and --api_key will be reused.\n  --test_user TEST_USER\n\
    \                        A user is needed to execute the tests. If --api_key is\n\
    \                        a master api key (i.e. not tied to a real user) and\n\
    \                        --test_user_api_key isn't specified, this user email\n\
    \                        will be used. This user will be created if needed.\n\
    \  --parallel_tests PARALLEL_TESTS\n                        Specify the maximum\
    \ number of tests that will be run\n                        in parallel.\n\nGeneral\
    \ options:\n  -v, --verbose         Increase output verbosity.\n  --log_file LOG_FILE\
    \   Where the log file should be stored. Default is a file\n                 \
    \       in your system's temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy\
    \ GALAXY\n                        Target Galaxy instance URL/IP address\n  -u\
    \ USER, --user USER  Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n\
    \                        Password for the Galaxy user\n  -a API_KEY, --api_key\
    \ API_KEY\n                        Galaxy admin user API key (required if not\
    \ defined in\n                        the tools list file)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -t
    - --toolsfile
    description: Tools file to use (see tool_list.yaml.sample)
    args: !SimpleFlagArg
      name: TOOL_LIST_FILE
  - !Flag
    optional: true
    synonyms:
    - -y
    - --yaml_tool
    description: Install tool represented by yaml string
    args: !SimpleFlagArg
      name: TOOL_YAML
  - !Flag
    optional: true
    synonyms:
    - --name
    description: "The name of the tool to install (only applicable if\nthe tools file\
      \ is not provided)."
    args: !SimpleFlagArg
      name: NAME
  - !Flag
    optional: true
    synonyms:
    - --owner
    description: "The owner of the tool to install (only applicable if\nthe tools\
      \ file is not provided)."
    args: !SimpleFlagArg
      name: OWNER
  - !Flag
    optional: true
    synonyms:
    - --revisions
    description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
      \ that will be\ninstalled. All revisions must be specified after this\nflag\
      \ by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
      \ if the tools file is not\nprovided)."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --toolshed
    description: "The Tool Shed URL where to install the tool from. This\nis applicable\
      \ only if the tool info is provided as an\noption vs. in the tools file."
    args: !SimpleFlagArg
      name: TOOL_SHED_URL
  - !Flag
    optional: true
    synonyms:
    - --install_tool_dependencies
    description: "Turn on installation of tool dependencies using\nclassic toolshed\
      \ packages. Can be overwritten on a\nper-tool basis in the tools file."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --skip_install_resolver_dependencies
    description: "Skip installing tool dependencies through resolver\n(e.g. conda).\
      \ Will be ignored on galaxy releases older\nthan 16.07. Can be overwritten on\
      \ a per-tool basis in\nthe tools file"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --skip_install_repository_dependencies
    description: Skip installing the repository dependencies.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --test
    description: "Run tool tests on install tools, requires Galaxy 18.05\nor newer."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --test_existing
    description: "If testing tools during install, also run tool tests\non repositories\
      \ already installed (i.e. skipped\nrepositories)."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --test_json
    description: "If testing tools, record tool test output to specified\nfile. This\
      \ file can be turned into reports with\n``planemo test_reports <output.json>``."
    args: !SimpleFlagArg
      name: TEST_JSON
  - !Flag
    optional: true
    synonyms:
    - --test_user_api_key
    description: "If testing tools, a user is needed to execute the\ntests. This can\
      \ be different the --api_key which is\nassumed to be an admin key. If --api_key\
      \ is a valid\nuser (e.g. it is not a master API key) this does not\nneed to\
      \ be specified and --api_key will be reused."
    args: !SimpleFlagArg
      name: TEST_USER
  - !Flag
    optional: true
    synonyms:
    - --test_user
    description: "If testing tools, a user is needed to execute the\ntests. If --api_key\
      \ is a master api key (i.e. not tied\nto a real user) and --test_user_api_key\
      \ isn't\nspecified, this user email will be used. This user\nwill be created\
      \ if needed."
    args: !SimpleFlagArg
      name: TEST_USER
  - !Flag
    optional: true
    synonyms:
    - --parallel_tests
    description: "Specify the maximum number of tests that will be run\nin parallel."
    args: !SimpleFlagArg
      name: PARALLEL_TESTS
  - !Flag
    optional: true
    synonyms:
    - --section
    description: "Galaxy tool panel section ID where the tool will be\ninstalled (the\
      \ section must exist in Galaxy; only\napplicable if the tools file is not provided)."
    args: !SimpleFlagArg
      name: TOOL_PANEL_SECTION_ID
  - !Flag
    optional: true
    synonyms:
    - --section_label
    description: "Galaxy tool panel section label where tool will be\ninstalled (if\
      \ the section does not exist, it will be\ncreated; only applicable if the tools\
      \ file is not\nprovided)."
    args: !SimpleFlagArg
      name: TOOL_PANEL_SECTION_LABEL
  - !Flag
    optional: true
    synonyms:
    - --latest
    description: "Will override the revisions in the tools file and\nalways install\
      \ the latest revision."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Increase output verbosity.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log_file
    description: "Where the log file should be stored. Default is a file\nin your\
      \ system's temp folder"
    args: !SimpleFlagArg
      name: LOG_FILE
  - !Flag
    optional: true
    synonyms:
    - -g
    - --galaxy
    description: Target Galaxy instance URL/IP address
    args: !SimpleFlagArg
      name: GALAXY
  - !Flag
    optional: true
    synonyms:
    - -u
    - --user
    description: Galaxy user email address
    args: !SimpleFlagArg
      name: USER
  - !Flag
    optional: true
    synonyms:
    - -p
    - --password
    description: Password for the Galaxy user
    args: !SimpleFlagArg
      name: PASSWORD
  - !Flag
    optional: true
    synonyms:
    - -a
    - --api_key
    description: "Galaxy admin user API key (required if not defined in\nthe tools\
      \ list file)\n"
    args: !SimpleFlagArg
      name: API_KEY
  parent: *id010
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: shed-tools install [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\n\
    \                          [-u USER] [-p PASSWORD] [-a API_KEY]\n            \
    \              [-t TOOL_LIST_FILE] [-y TOOL_YAML] [--name NAME]\n            \
    \              [--owner OWNER]\n                          [--revisions [REVISIONS\
    \ [REVISIONS ...]]]\n                          [--toolshed TOOL_SHED_URL]\n  \
    \                        [--install_tool_dependencies]\n                     \
    \     [--skip_install_resolver_dependencies]\n                          [--skip_install_repository_dependencies]\
    \ [--test]\n                          [--test_existing] [--test_json TEST_JSON]\n\
    \                          [--test_user_api_key TEST_USER]\n                 \
    \         [--test_user TEST_USER]\n                          [--parallel_tests\
    \ PARALLEL_TESTS]\n                          [--section TOOL_PANEL_SECTION_ID]\n\
    \                          [--section_label TOOL_PANEL_SECTION_LABEL]\n      \
    \                    [--latest]\n\noptional arguments:\n  -h, --help         \
    \   show this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
    \                        Tools file to use (see tool_list.yaml.sample)\n  -y TOOL_YAML,\
    \ --yaml_tool TOOL_YAML\n                        Install tool represented by yaml\
    \ string\n  --name NAME           The name of the tool to install (only applicable\
    \ if\n                        the tools file is not provided).\n  --owner OWNER\
    \         The owner of the tool to install (only applicable if\n             \
    \           the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS\
    \ ...]]\n                        The revisions of the tool repository that will\
    \ be\n                        installed. All revisions must be specified after\
    \ this\n                        flag by a space.Example: --revisions 0a5c7992b1ac\n\
    \                        f048033da666(Only applicable if the tools file is not\n\
    \                        provided).\n  --toolshed TOOL_SHED_URL\n            \
    \            The Tool Shed URL where to install the tool from. This\n        \
    \                is applicable only if the tool info is provided as an\n     \
    \                   option vs. in the tools file.\n  --install_tool_dependencies\n\
    \                        Turn on installation of tool dependencies using\n   \
    \                     classic toolshed packages. Can be overwritten on a\n   \
    \                     per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
    \                        Skip installing tool dependencies through resolver\n\
    \                        (e.g. conda). Will be ignored on galaxy releases older\n\
    \                        than 16.07. Can be overwritten on a per-tool basis in\n\
    \                        the tools file\n  --skip_install_repository_dependencies\n\
    \                        Skip installing the repository dependencies.\n  --test\
    \                Run tool tests on install tools, requires Galaxy 18.05\n    \
    \                    or newer.\n  --test_existing       If testing tools during\
    \ install, also run tool tests\n                        on repositories already\
    \ installed (i.e. skipped\n                        repositories).\n  --test_json\
    \ TEST_JSON\n                        If testing tools, record tool test output\
    \ to specified\n                        file. This file can be turned into reports\
    \ with\n                        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
    \ TEST_USER\n                        If testing tools, a user is needed to execute\
    \ the\n                        tests. This can be different the --api_key which\
    \ is\n                        assumed to be an admin key. If --api_key is a valid\n\
    \                        user (e.g. it is not a master API key) this does not\n\
    \                        need to be specified and --api_key will be reused.\n\
    \  --test_user TEST_USER\n                        If testing tools, a user is\
    \ needed to execute the\n                        tests. If --api_key is a master\
    \ api key (i.e. not tied\n                        to a real user) and --test_user_api_key\
    \ isn't\n                        specified, this user email will be used. This\
    \ user\n                        will be created if needed.\n  --parallel_tests\
    \ PARALLEL_TESTS\n                        Specify the maximum number of tests\
    \ that will be run\n                        in parallel.\n  --section TOOL_PANEL_SECTION_ID\n\
    \                        Galaxy tool panel section ID where the tool will be\n\
    \                        installed (the section must exist in Galaxy; only\n \
    \                       applicable if the tools file is not provided).\n  --section_label\
    \ TOOL_PANEL_SECTION_LABEL\n                        Galaxy tool panel section\
    \ label where tool will be\n                        installed (if the section\
    \ does not exist, it will be\n                        created; only applicable\
    \ if the tools file is not\n                        provided).\n  --latest   \
    \           Will override the revisions in the tools file and\n              \
    \          always install the latest revision.\n\nGeneral options:\n  -v, --verbose\
    \         Increase output verbosity.\n  --log_file LOG_FILE   Where the log file\
    \ should be stored. Default is a file\n                        in your system's\
    \ temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n          \
    \              Target Galaxy instance URL/IP address\n  -u USER, --user USER \
    \ Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n            \
    \            Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n \
    \                       Galaxy admin user API key (required if not defined in\n\
    \                        the tools list file)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -t
    - --toolsfile
    description: Tools file to use (see tool_list.yaml.sample)
    args: !SimpleFlagArg
      name: TOOL_LIST_FILE
  - !Flag
    optional: true
    synonyms:
    - -y
    - --yaml_tool
    description: Install tool represented by yaml string
    args: !SimpleFlagArg
      name: TOOL_YAML
  - !Flag
    optional: true
    synonyms:
    - --name
    description: "The name of the tool to install (only applicable if\nthe tools file\
      \ is not provided)."
    args: !SimpleFlagArg
      name: NAME
  - !Flag
    optional: true
    synonyms:
    - --owner
    description: "The owner of the tool to install (only applicable if\nthe tools\
      \ file is not provided)."
    args: !SimpleFlagArg
      name: OWNER
  - !Flag
    optional: true
    synonyms:
    - --revisions
    description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
      \ that will be\ninstalled. All revisions must be specified after this\nflag\
      \ by a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable\
      \ if the tools file is not\nprovided)."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --toolshed
    description: "The Tool Shed URL where to install the tool from. This\nis applicable\
      \ only if the tool info is provided as an\noption vs. in the tools file."
    args: !SimpleFlagArg
      name: TOOL_SHED_URL
  - !Flag
    optional: true
    synonyms:
    - --install_tool_dependencies
    description: "Turn on installation of tool dependencies using\nclassic toolshed\
      \ packages. Can be overwritten on a\nper-tool basis in the tools file."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --skip_install_resolver_dependencies
    description: "Skip installing tool dependencies through resolver\n(e.g. conda).\
      \ Will be ignored on galaxy releases older\nthan 16.07. Can be overwritten on\
      \ a per-tool basis in\nthe tools file"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --skip_install_repository_dependencies
    description: Skip installing the repository dependencies.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --test
    description: "Run tool tests on install tools, requires Galaxy 18.05\nor newer."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --test_existing
    description: "If testing tools during install, also run tool tests\non repositories\
      \ already installed (i.e. skipped\nrepositories)."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --test_json
    description: "If testing tools, record tool test output to specified\nfile. This\
      \ file can be turned into reports with\n``planemo test_reports <output.json>``."
    args: !SimpleFlagArg
      name: TEST_JSON
  - !Flag
    optional: true
    synonyms:
    - --test_user_api_key
    description: "If testing tools, a user is needed to execute the\ntests. This can\
      \ be different the --api_key which is\nassumed to be an admin key. If --api_key\
      \ is a valid\nuser (e.g. it is not a master API key) this does not\nneed to\
      \ be specified and --api_key will be reused."
    args: !SimpleFlagArg
      name: TEST_USER
  - !Flag
    optional: true
    synonyms:
    - --test_user
    description: "If testing tools, a user is needed to execute the\ntests. If --api_key\
      \ is a master api key (i.e. not tied\nto a real user) and --test_user_api_key\
      \ isn't\nspecified, this user email will be used. This user\nwill be created\
      \ if needed."
    args: !SimpleFlagArg
      name: TEST_USER
  - !Flag
    optional: true
    synonyms:
    - --parallel_tests
    description: "Specify the maximum number of tests that will be run\nin parallel."
    args: !SimpleFlagArg
      name: PARALLEL_TESTS
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Increase output verbosity.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log_file
    description: "Where the log file should be stored. Default is a file\nin your\
      \ system's temp folder"
    args: !SimpleFlagArg
      name: LOG_FILE
  - !Flag
    optional: true
    synonyms:
    - -g
    - --galaxy
    description: Target Galaxy instance URL/IP address
    args: !SimpleFlagArg
      name: GALAXY
  - !Flag
    optional: true
    synonyms:
    - -u
    - --user
    description: Galaxy user email address
    args: !SimpleFlagArg
      name: USER
  - !Flag
    optional: true
    synonyms:
    - -p
    - --password
    description: Password for the Galaxy user
    args: !SimpleFlagArg
      name: PASSWORD
  - !Flag
    optional: true
    synonyms:
    - -a
    - --api_key
    description: "Galaxy admin user API key (required if not defined in\nthe tools\
      \ list file)\n"
    args: !SimpleFlagArg
      name: API_KEY
  parent: *id010
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\
    \ [-u USER]\n                         [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
    \                         [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n     \
    \                    [--revisions [REVISIONS [REVISIONS ...]]]\n             \
    \            [--toolshed TOOL_SHED_URL]\n                         [--install_tool_dependencies]\n\
    \                         [--skip_install_resolver_dependencies]\n           \
    \              [--skip_install_repository_dependencies] [--test]\n           \
    \              [--test_existing] [--test_json TEST_JSON]\n                   \
    \      [--test_user_api_key TEST_USER]\n                         [--test_user\
    \ TEST_USER]\n                         [--parallel_tests PARALLEL_TESTS]\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -t TOOL_LIST_FILE,\
    \ --toolsfile TOOL_LIST_FILE\n                        Tools file to use (see tool_list.yaml.sample)\n\
    \  -y TOOL_YAML, --yaml_tool TOOL_YAML\n                        Install tool represented\
    \ by yaml string\n  --name NAME           The name of the tool to install (only\
    \ applicable if\n                        the tools file is not provided).\n  --owner\
    \ OWNER         The owner of the tool to install (only applicable if\n       \
    \                 the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS\
    \ ...]]\n                        The revisions of the tool repository that will\
    \ be\n                        installed. All revisions must be specified after\
    \ this\n                        flag by a space.Example: --revisions 0a5c7992b1ac\n\
    \                        f048033da666(Only applicable if the tools file is not\n\
    \                        provided).\n  --toolshed TOOL_SHED_URL\n            \
    \            The Tool Shed URL where to install the tool from. This\n        \
    \                is applicable only if the tool info is provided as an\n     \
    \                   option vs. in the tools file.\n  --install_tool_dependencies\n\
    \                        Turn on installation of tool dependencies using\n   \
    \                     classic toolshed packages. Can be overwritten on a\n   \
    \                     per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
    \                        Skip installing tool dependencies through resolver\n\
    \                        (e.g. conda). Will be ignored on galaxy releases older\n\
    \                        than 16.07. Can be overwritten on a per-tool basis in\n\
    \                        the tools file\n  --skip_install_repository_dependencies\n\
    \                        Skip installing the repository dependencies.\n  --test\
    \                Run tool tests on install tools, requires Galaxy 18.05\n    \
    \                    or newer.\n  --test_existing       If testing tools during\
    \ install, also run tool tests\n                        on repositories already\
    \ installed (i.e. skipped\n                        repositories).\n  --test_json\
    \ TEST_JSON\n                        If testing tools, record tool test output\
    \ to specified\n                        file. This file can be turned into reports\
    \ with\n                        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
    \ TEST_USER\n                        If testing tools, a user is needed to execute\
    \ the\n                        tests. This can be different the --api_key which\
    \ is\n                        assumed to be an admin key. If --api_key is a valid\n\
    \                        user (e.g. it is not a master API key) this does not\n\
    \                        need to be specified and --api_key will be reused.\n\
    \  --test_user TEST_USER\n                        If testing tools, a user is\
    \ needed to execute the\n                        tests. If --api_key is a master\
    \ api key (i.e. not tied\n                        to a real user) and --test_user_api_key\
    \ isn't\n                        specified, this user email will be used. This\
    \ user\n                        will be created if needed.\n  --parallel_tests\
    \ PARALLEL_TESTS\n                        Specify the maximum number of tests\
    \ that will be run\n                        in parallel.\n\nGeneral options:\n\
    \  -v, --verbose         Increase output verbosity.\n  --log_file LOG_FILE   Where\
    \ the log file should be stored. Default is a file\n                        in\
    \ your system's temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n\
    \                        Target Galaxy instance URL/IP address\n  -u USER, --user\
    \ USER  Galaxy user email address\n  -p PASSWORD, --password PASSWORD\n      \
    \                  Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n\
    \                        Galaxy admin user API key (required if not defined in\n\
    \                        the tools list file)\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: shed-tools [-h] {install,update,test} ...\n\npositional arguments:\n\
  \  {install,update,test}\n    install             This installs tools in Galaxy\
  \ from the Tool Shed.Use\n                        shed-tools install --help for\
  \ more information\n    update              This updates all tools in Galaxy to\
  \ the latest\n                        revision. Use shed-tools update --help for\
  \ more\n                        information\n    test                This tests\
  \ the supplied list of tools in Galaxy. Use\n                        shed-tools\
  \ test --help for more information\n\noptional arguments:\n  -h, --help        \
  \    show this help message and exit\n"
generated_using: *id004
docker_image:
