!Command
command:
- rtk
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  description: path to an .txt file (tab delimited) to rarefy
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: path to a output directory
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: Depth or multiple comma seperated depths to rarefy to. Default is 0.95
    times the minimal column sum.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: Number of times to create diversity measures. Default is 10.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  description: Number of rarefied tables to write.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: 'Number of threads to use. Default: 1'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ns
  description: If set, no temporary files will be used when writing rarefaction tables
    to disk.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "rarefaction tool kit (rtk) 0.93.2\n\nUSAGE\n    rtk <mode> -i <input.csv>\
  \ -o <output> [options] \n\nMODE rarefaction\n\nOPTIONS\n<mode>      For rarefaction:\
  \ mode can be either swap or memory.\n            Swap mode creates temporary files\
  \ but uses less memory. \n            The speed of both modes is comparable.\n \
  \   -i      path to an .txt file (tab delimited) to rarefy\n    -o      path to\
  \ a output directory\n    -d      Depth or multiple comma seperated depths to rarefy\
  \ to. Default is 0.95 times the minimal column sum.\n    -r      Number of times\
  \ to create diversity measures. Default is 10.\n    -w      Number of rarefied tables\
  \ to write.\n    -t      Number of threads to use. Default: 1\n    -ns     If set,\
  \ no temporary files will be used when writing rarefaction tables to disk.\n\nEXAMPLE\n\
  \    Rarefy a table to 1000 counts per sample with two threads. Create one table:\n\
  \        rtk swap -i table.csv -o outputdir/prefix. -d 1000 -r 10 -w 1 -t 2\n\n\
  \    Rarefy with most memory and least amount of IO:\n        rtk memory -i table.csv\
  \ -o outputdir/prefix. -ns\n\nMODE: Colsums\nReports the column sums of all columns\
  \ in form of a sorted and an unsorted file.\n\nEXAMPLE\n    Repot column sums of\
  \ file 'table.csv'\n        rtk colsums -i table.csv -o prefix\n\n"
generated_using:
- -h
docker_image:
