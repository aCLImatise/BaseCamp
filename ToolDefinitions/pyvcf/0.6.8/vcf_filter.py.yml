!Command
command: &id001
- vcf_filter.py
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - vcf_filter.py
  - input
  positional:
  - !Positional
    optional: false
    position: 0
    name: vcf_filter.py
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --no-filtered
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-short-circuit
    description: ''
    args: !EmptyFlagArg {}
  parent: &id009 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: vcf_filter.py
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - --no-filtered
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-short-circuit
        description: ''
        args: !EmptyFlagArg {}
      parent: &id008 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: vcf_filter.py
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - --no-filtered
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-short-circuit
            description: ''
            args: !EmptyFlagArg {}
          parent: &id007 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: vcf_filter.py
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - --no-filtered
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-short-circuit
                description: ''
                args: !EmptyFlagArg {}
              parent: &id006 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: vcf_filter.py
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-filtered
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-short-circuit
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - --no-short-circuit
                      description: "Do not stop filter processing on a site if any\
                        \ filter\nis triggered (default: False)"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --output
                      description: "Filename to output [STDOUT] (default:\n<_io.TextIOWrapper\
                        \ name='<stdout>' mode='w'\nencoding='ANSI_X3.4-1968'>)"
                      args: !SimpleFlagArg
                        name: OUTPUT
                    - !Flag
                      optional: true
                      synonyms:
                      - --no-filtered
                      description: 'Output only sites passing the filters (default:
                        False)'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --local-script
                      description: "Python file in current working directory with\
                        \ the\nfilter classes (default: None)"
                      args: !SimpleFlagArg
                        name: LOCAL_SCRIPT
                    - !Flag
                      optional: true
                      synonyms:
                      - --avg-depth-per-sample
                      description: "Minimum required average coverage per sample (default:\n\
                        3)"
                      args: !SimpleFlagArg
                        name: AVG_DEPTH_PER_SAMPLE
                    - !Flag
                      optional: true
                      synonyms:
                      - --depth-per-sample
                      description: 'Minimum required coverage in each sample (default:
                        5)'
                      args: !SimpleFlagArg
                        name: DEPTH_PER_SAMPLE
                    - !Flag
                      optional: true
                      synonyms:
                      - --eblr
                      description: 'Filter sites above this error log odds ratio (default:'
                      args: !SimpleFlagArg
                        name: EBLR
                    - !Flag
                      optional: true
                      synonyms:
                      - '-10'
                      description: )
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --site-quality
                      description: 'Filter sites below this quality (default: 30)'
                      args: !SimpleFlagArg
                        name: SITE_QUALITY
                    - !Flag
                      optional: true
                      synonyms:
                      - --genotype-quality
                      description: "Filter sites with no genotypes above this quality\n\
                        (default: 50)\n"
                      args: !SimpleFlagArg
                        name: GENOTYPE_QUALITY
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: vcf_filter.py
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-filtered
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-short-circuit
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ''
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                        \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n\
                        \              input filter [filter_args] [filter [filter_args]]\
                        \ ...\n            \nvcf_filter.py: error: argument input:\
                        \ can't open 'input': [Errno 2] No such file or directory:\
                        \ 'input'\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - vcf_filter.py
                      - this
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: vcf_filter.py
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-filtered
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-short-circuit
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ''
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                        \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n\
                        \              input filter [filter_args] [filter [filter_args]]\
                        \ ...\n            \nvcf_filter.py: error: argument input:\
                        \ can't open 'this': [Errno 2] No such file or directory:\
                        \ 'this'\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: 'Show this help message and exit. (default: False)'
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                      \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n\
                      \              input filter [filter_args] [filter [filter_args]]\
                      \ ...\n            \n\nFilter a VCF file\n\npositional arguments:\n\
                      \  input                 File to process (use - for STDIN) (default:\
                      \ None)\n\noptional arguments:\n  -h, --help            Show\
                      \ this help message and exit. (default: False)\n  --no-short-circuit\
                      \    Do not stop filter processing on a site if any filter\n\
                      \                        is triggered (default: False)\n  --output\
                      \ OUTPUT       Filename to output [STDOUT] (default:\n     \
                      \                   <_io.TextIOWrapper name='<stdout>' mode='w'\n\
                      \                        encoding='ANSI_X3.4-1968'>)\n  --no-filtered\
                      \         Output only sites passing the filters (default: False)\n\
                      \  --local-script LOCAL_SCRIPT\n                        Python\
                      \ file in current working directory with the\n             \
                      \           filter classes (default: None)\n\navg-dps:\n  Threshold\
                      \ average read depth per sample (read_depth / sample_count)\n\
                      \n  --avg-depth-per-sample AVG_DEPTH_PER_SAMPLE\n          \
                      \              Minimum required average coverage per sample\
                      \ (default:\n                        3)\n\ndps:\n  Threshold\
                      \ read depth per sample\n\n  --depth-per-sample DEPTH_PER_SAMPLE\n\
                      \                        Minimum required coverage in each sample\
                      \ (default: 5)\n\neb:\n  Filter sites that look like correlated\
                      \ sequencing errors. Some sequencing\n  technologies, notably\
                      \ pyrosequencing, produce mutation hotspots where\n  there is\
                      \ a constant level of noise, producing some reference and some\n\
                      \  heterozygote calls. This filter computes a Bayes Factor for\
                      \ each site by\n  comparing the binomial likelihood of the observed\
                      \ allelic depths under: *\n  A model with constant error equal\
                      \ to the MAF. * A model where each sample\n  is the ploidy reported\
                      \ by the caller. The test value is the log of the\n  bayes factor.\
                      \ Higher values are more likely to be errors. Note: this\n \
                      \ filter requires rpy2\n\n  --eblr EBLR           Filter sites\
                      \ above this error log odds ratio (default:\n              \
                      \          -10)\n\nsq:\n  Filter low quailty sites\n\n  --site-quality\
                      \ SITE_QUALITY\n                        Filter sites below this\
                      \ quality (default: 30)\n\nsnp-only:\n  Choose only SNP variants\n\
                      \nmgq:\n  Filters sites with only low quality variants. It is\
                      \ possible to have a\n  high site quality with many low quality\
                      \ calls. This filter demands at\n  least one call be above a\
                      \ threshold quality.\n\n  --genotype-quality GENOTYPE_QUALITY\n\
                      \                        Filter sites with no genotypes above\
                      \ this quality\n                        (default: 50)\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ''
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                    \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n\
                    \              input filter [filter_args] [filter [filter_args]]\
                    \ ...\n            \nvcf_filter.py: error: argument input: can't\
                    \ open 'input': [Errno 2] No such file or directory: 'input'\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: vcf_filter.py
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-filtered
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-short-circuit
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ''
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                    \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n\
                    \              input filter [filter_args] [filter [filter_args]]\
                    \ ...\n            \nvcf_filter.py: error: argument input: can't\
                    \ open 'this': [Errno 2] No such file or directory: 'this'\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                  \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n\
                  \              input filter [filter_args] [filter [filter_args]]\
                  \ ...\n            \n\nFilter a VCF file\n\npositional arguments:\n\
                  \  input                 File to process (use - for STDIN) (default:\
                  \ None)\n\noptional arguments:\n  -h, --help            Show this\
                  \ help message and exit. (default: False)\n  --no-short-circuit\
                  \    Do not stop filter processing on a site if any filter\n   \
                  \                     is triggered (default: False)\n  --output\
                  \ OUTPUT       Filename to output [STDOUT] (default:\n         \
                  \               <_io.TextIOWrapper name='<stdout>' mode='w'\n  \
                  \                      encoding='ANSI_X3.4-1968'>)\n  --no-filtered\
                  \         Output only sites passing the filters (default: False)\n\
                  \  --local-script LOCAL_SCRIPT\n                        Python file\
                  \ in current working directory with the\n                      \
                  \  filter classes (default: None)\n\navg-dps:\n  Threshold average\
                  \ read depth per sample (read_depth / sample_count)\n\n  --avg-depth-per-sample\
                  \ AVG_DEPTH_PER_SAMPLE\n                        Minimum required\
                  \ average coverage per sample (default:\n                      \
                  \  3)\n\ndps:\n  Threshold read depth per sample\n\n  --depth-per-sample\
                  \ DEPTH_PER_SAMPLE\n                        Minimum required coverage\
                  \ in each sample (default: 5)\n\neb:\n  Filter sites that look like\
                  \ correlated sequencing errors. Some sequencing\n  technologies,\
                  \ notably pyrosequencing, produce mutation hotspots where\n  there\
                  \ is a constant level of noise, producing some reference and some\n\
                  \  heterozygote calls. This filter computes a Bayes Factor for each\
                  \ site by\n  comparing the binomial likelihood of the observed allelic\
                  \ depths under: *\n  A model with constant error equal to the MAF.\
                  \ * A model where each sample\n  is the ploidy reported by the caller.\
                  \ The test value is the log of the\n  bayes factor. Higher values\
                  \ are more likely to be errors. Note: this\n  filter requires rpy2\n\
                  \n  --eblr EBLR           Filter sites above this error log odds\
                  \ ratio (default:\n                        -10)\n\nsq:\n  Filter\
                  \ low quailty sites\n\n  --site-quality SITE_QUALITY\n         \
                  \               Filter sites below this quality (default: 30)\n\n\
                  snp-only:\n  Choose only SNP variants\n\nmgq:\n  Filters sites with\
                  \ only low quality variants. It is possible to have a\n  high site\
                  \ quality with many low quality calls. This filter demands at\n\
                  \  least one call be above a threshold quality.\n\n  --genotype-quality\
                  \ GENOTYPE_QUALITY\n                        Filter sites with no\
                  \ genotypes above this quality\n                        (default:\
                  \ 50)\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ''
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n \
                \             input filter [filter_args] [filter [filter_args]] ...\n\
                \            \nvcf_filter.py: error: argument input: can't open 'input':\
                \ [Errno 2] No such file or directory: 'input'\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: vcf_filter.py
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - --no-filtered
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-short-circuit
                description: ''
                args: !EmptyFlagArg {}
              parent: *id006
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ''
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
                \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n \
                \             input filter [filter_args] [filter [filter_args]] ...\n\
                \            \nvcf_filter.py: error: argument input: can't open 'this':\
                \ [Errno 2] No such file or directory: 'this'\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
              \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n   \
              \           input filter [filter_args] [filter [filter_args]] ...\n\
              \            \n\nFilter a VCF file\n\npositional arguments:\n  input\
              \                 File to process (use - for STDIN) (default: None)\n\
              \noptional arguments:\n  -h, --help            Show this help message\
              \ and exit. (default: False)\n  --no-short-circuit    Do not stop filter\
              \ processing on a site if any filter\n                        is triggered\
              \ (default: False)\n  --output OUTPUT       Filename to output [STDOUT]\
              \ (default:\n                        <_io.TextIOWrapper name='<stdout>'\
              \ mode='w'\n                        encoding='ANSI_X3.4-1968'>)\n  --no-filtered\
              \         Output only sites passing the filters (default: False)\n \
              \ --local-script LOCAL_SCRIPT\n                        Python file in\
              \ current working directory with the\n                        filter\
              \ classes (default: None)\n\navg-dps:\n  Threshold average read depth\
              \ per sample (read_depth / sample_count)\n\n  --avg-depth-per-sample\
              \ AVG_DEPTH_PER_SAMPLE\n                        Minimum required average\
              \ coverage per sample (default:\n                        3)\n\ndps:\n\
              \  Threshold read depth per sample\n\n  --depth-per-sample DEPTH_PER_SAMPLE\n\
              \                        Minimum required coverage in each sample (default:\
              \ 5)\n\neb:\n  Filter sites that look like correlated sequencing errors.\
              \ Some sequencing\n  technologies, notably pyrosequencing, produce mutation\
              \ hotspots where\n  there is a constant level of noise, producing some\
              \ reference and some\n  heterozygote calls. This filter computes a Bayes\
              \ Factor for each site by\n  comparing the binomial likelihood of the\
              \ observed allelic depths under: *\n  A model with constant error equal\
              \ to the MAF. * A model where each sample\n  is the ploidy reported\
              \ by the caller. The test value is the log of the\n  bayes factor. Higher\
              \ values are more likely to be errors. Note: this\n  filter requires\
              \ rpy2\n\n  --eblr EBLR           Filter sites above this error log\
              \ odds ratio (default:\n                        -10)\n\nsq:\n  Filter\
              \ low quailty sites\n\n  --site-quality SITE_QUALITY\n             \
              \           Filter sites below this quality (default: 30)\n\nsnp-only:\n\
              \  Choose only SNP variants\n\nmgq:\n  Filters sites with only low quality\
              \ variants. It is possible to have a\n  high site quality with many\
              \ low quality calls. This filter demands at\n  least one call be above\
              \ a threshold quality.\n\n  --genotype-quality GENOTYPE_QUALITY\n  \
              \                      Filter sites with no genotypes above this quality\n\
              \                        (default: 50)\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ''
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
            \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n     \
            \         input filter [filter_args] [filter [filter_args]] ...\n    \
            \        \nvcf_filter.py: error: argument input: can't open 'input': [Errno\
            \ 2] No such file or directory: 'input'\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: vcf_filter.py
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - --no-filtered
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-short-circuit
            description: ''
            args: !EmptyFlagArg {}
          parent: *id007
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ''
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
            \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n     \
            \         input filter [filter_args] [filter [filter_args]] ...\n    \
            \        \nvcf_filter.py: error: argument input: can't open 'this': [Errno\
            \ 2] No such file or directory: 'this'\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
          \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n       \
          \       input filter [filter_args] [filter [filter_args]] ...\n        \
          \    \n\nFilter a VCF file\n\npositional arguments:\n  input           \
          \      File to process (use - for STDIN) (default: None)\n\noptional arguments:\n\
          \  -h, --help            Show this help message and exit. (default: False)\n\
          \  --no-short-circuit    Do not stop filter processing on a site if any\
          \ filter\n                        is triggered (default: False)\n  --output\
          \ OUTPUT       Filename to output [STDOUT] (default:\n                 \
          \       <_io.TextIOWrapper name='<stdout>' mode='w'\n                  \
          \      encoding='ANSI_X3.4-1968'>)\n  --no-filtered         Output only\
          \ sites passing the filters (default: False)\n  --local-script LOCAL_SCRIPT\n\
          \                        Python file in current working directory with the\n\
          \                        filter classes (default: None)\n\navg-dps:\n  Threshold\
          \ average read depth per sample (read_depth / sample_count)\n\n  --avg-depth-per-sample\
          \ AVG_DEPTH_PER_SAMPLE\n                        Minimum required average\
          \ coverage per sample (default:\n                        3)\n\ndps:\n  Threshold\
          \ read depth per sample\n\n  --depth-per-sample DEPTH_PER_SAMPLE\n     \
          \                   Minimum required coverage in each sample (default: 5)\n\
          \neb:\n  Filter sites that look like correlated sequencing errors. Some\
          \ sequencing\n  technologies, notably pyrosequencing, produce mutation hotspots\
          \ where\n  there is a constant level of noise, producing some reference\
          \ and some\n  heterozygote calls. This filter computes a Bayes Factor for\
          \ each site by\n  comparing the binomial likelihood of the observed allelic\
          \ depths under: *\n  A model with constant error equal to the MAF. * A model\
          \ where each sample\n  is the ploidy reported by the caller. The test value\
          \ is the log of the\n  bayes factor. Higher values are more likely to be\
          \ errors. Note: this\n  filter requires rpy2\n\n  --eblr EBLR          \
          \ Filter sites above this error log odds ratio (default:\n             \
          \           -10)\n\nsq:\n  Filter low quailty sites\n\n  --site-quality\
          \ SITE_QUALITY\n                        Filter sites below this quality\
          \ (default: 30)\n\nsnp-only:\n  Choose only SNP variants\n\nmgq:\n  Filters\
          \ sites with only low quality variants. It is possible to have a\n  high\
          \ site quality with many low quality calls. This filter demands at\n  least\
          \ one call be above a threshold quality.\n\n  --genotype-quality GENOTYPE_QUALITY\n\
          \                        Filter sites with no genotypes above this quality\n\
          \                        (default: 50)\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ''
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
        \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n         \
        \     input filter [filter_args] [filter [filter_args]] ...\n            \n\
        vcf_filter.py: error: argument input: can't open 'input': [Errno 2] No such\
        \ file or directory: 'input'\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: vcf_filter.py
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - --no-filtered
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-short-circuit
        description: ''
        args: !EmptyFlagArg {}
      parent: *id008
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ''
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n\
        \              [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n         \
        \     input filter [filter_args] [filter [filter_args]] ...\n            \n\
        vcf_filter.py: error: argument input: can't open 'this': [Errno 2] No such\
        \ file or directory: 'this'\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n \
      \             [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n            \
      \  input filter [filter_args] [filter [filter_args]] ...\n            \n\nFilter\
      \ a VCF file\n\npositional arguments:\n  input                 File to process\
      \ (use - for STDIN) (default: None)\n\noptional arguments:\n  -h, --help   \
      \         Show this help message and exit. (default: False)\n  --no-short-circuit\
      \    Do not stop filter processing on a site if any filter\n               \
      \         is triggered (default: False)\n  --output OUTPUT       Filename to\
      \ output [STDOUT] (default:\n                        <_io.TextIOWrapper name='<stdout>'\
      \ mode='w'\n                        encoding='ANSI_X3.4-1968'>)\n  --no-filtered\
      \         Output only sites passing the filters (default: False)\n  --local-script\
      \ LOCAL_SCRIPT\n                        Python file in current working directory\
      \ with the\n                        filter classes (default: None)\n\navg-dps:\n\
      \  Threshold average read depth per sample (read_depth / sample_count)\n\n \
      \ --avg-depth-per-sample AVG_DEPTH_PER_SAMPLE\n                        Minimum\
      \ required average coverage per sample (default:\n                        3)\n\
      \ndps:\n  Threshold read depth per sample\n\n  --depth-per-sample DEPTH_PER_SAMPLE\n\
      \                        Minimum required coverage in each sample (default:\
      \ 5)\n\neb:\n  Filter sites that look like correlated sequencing errors. Some\
      \ sequencing\n  technologies, notably pyrosequencing, produce mutation hotspots\
      \ where\n  there is a constant level of noise, producing some reference and\
      \ some\n  heterozygote calls. This filter computes a Bayes Factor for each site\
      \ by\n  comparing the binomial likelihood of the observed allelic depths under:\
      \ *\n  A model with constant error equal to the MAF. * A model where each sample\n\
      \  is the ploidy reported by the caller. The test value is the log of the\n\
      \  bayes factor. Higher values are more likely to be errors. Note: this\n  filter\
      \ requires rpy2\n\n  --eblr EBLR           Filter sites above this error log\
      \ odds ratio (default:\n                        -10)\n\nsq:\n  Filter low quailty\
      \ sites\n\n  --site-quality SITE_QUALITY\n                        Filter sites\
      \ below this quality (default: 30)\n\nsnp-only:\n  Choose only SNP variants\n\
      \nmgq:\n  Filters sites with only low quality variants. It is possible to have\
      \ a\n  high site quality with many low quality calls. This filter demands at\n\
      \  least one call be above a threshold quality.\n\n  --genotype-quality GENOTYPE_QUALITY\n\
      \                        Filter sites with no genotypes above this quality\n\
      \                        (default: 50)\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n   \
    \           [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n              input\
    \ filter [filter_args] [filter [filter_args]] ...\n            \nvcf_filter.py:\
    \ error: argument input: can't open 'input': [Errno 2] No such file or directory:\
    \ 'input'\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: vcf_filter.py
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --no-filtered
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-short-circuit
    description: ''
    args: !EmptyFlagArg {}
  parent: *id009
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n   \
    \           [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n              input\
    \ filter [filter_args] [filter [filter_args]] ...\n            \nvcf_filter.py:\
    \ error: argument input: can't open 'this': [Errno 2] No such file or directory:\
    \ 'this'\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: vcf_filter.py [-h] [--no-short-circuit] [--no-filtered]\n     \
  \         [--output OUTPUT] [--local-script LOCAL_SCRIPT]\n              input filter\
  \ [filter_args] [filter [filter_args]] ...\n            \n\nFilter a VCF file\n\n\
  positional arguments:\n  input                 File to process (use - for STDIN)\
  \ (default: None)\n\noptional arguments:\n  -h, --help            Show this help\
  \ message and exit. (default: False)\n  --no-short-circuit    Do not stop filter\
  \ processing on a site if any filter\n                        is triggered (default:\
  \ False)\n  --output OUTPUT       Filename to output [STDOUT] (default:\n      \
  \                  <_io.TextIOWrapper name='<stdout>' mode='w'\n               \
  \         encoding='ANSI_X3.4-1968'>)\n  --no-filtered         Output only sites\
  \ passing the filters (default: False)\n  --local-script LOCAL_SCRIPT\n        \
  \                Python file in current working directory with the\n           \
  \             filter classes (default: None)\n\navg-dps:\n  Threshold average read\
  \ depth per sample (read_depth / sample_count)\n\n  --avg-depth-per-sample AVG_DEPTH_PER_SAMPLE\n\
  \                        Minimum required average coverage per sample (default:\n\
  \                        3)\n\ndps:\n  Threshold read depth per sample\n\n  --depth-per-sample\
  \ DEPTH_PER_SAMPLE\n                        Minimum required coverage in each sample\
  \ (default: 5)\n\neb:\n  Filter sites that look like correlated sequencing errors.\
  \ Some sequencing\n  technologies, notably pyrosequencing, produce mutation hotspots\
  \ where\n  there is a constant level of noise, producing some reference and some\n\
  \  heterozygote calls. This filter computes a Bayes Factor for each site by\n  comparing\
  \ the binomial likelihood of the observed allelic depths under: *\n  A model with\
  \ constant error equal to the MAF. * A model where each sample\n  is the ploidy\
  \ reported by the caller. The test value is the log of the\n  bayes factor. Higher\
  \ values are more likely to be errors. Note: this\n  filter requires rpy2\n\n  --eblr\
  \ EBLR           Filter sites above this error log odds ratio (default:\n      \
  \                  -10)\n\nsq:\n  Filter low quailty sites\n\n  --site-quality SITE_QUALITY\n\
  \                        Filter sites below this quality (default: 30)\n\nsnp-only:\n\
  \  Choose only SNP variants\n\nmgq:\n  Filters sites with only low quality variants.\
  \ It is possible to have a\n  high site quality with many low quality calls. This\
  \ filter demands at\n  least one call be above a threshold quality.\n\n  --genotype-quality\
  \ GENOTYPE_QUALITY\n                        Filter sites with no genotypes above\
  \ this quality\n                        (default: 50)\n"
generated_using: *id004
docker_image:
