!Command
command:
- extract-partitions.py
positional:
- !Positional
  optional: false
  position: 0
  name: output_filename_prefix
  description: input_partition_filename
named:
- !Flag
  optional: true
  synonyms:
  - --info
  description: print citation information
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  - --max-size
  description: 'Max group size (n sequences) (default: 1000000)'
  args: !SimpleFlagArg
    name: MAX_SIZE
- !Flag
  optional: true
  synonyms:
  - -m
  - --min-partition-size
  description: 'Minimum partition size worth keeping (default: 5)'
  args: !SimpleFlagArg
    name: MIN_PART_SIZE
- !Flag
  optional: true
  synonyms:
  - -n
  - --no-output-groups
  description: 'Do not actually output groups files. (default: True)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -U
  - --output-unassigned
  description: 'Output unassigned sequences, too (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --force
  description: 'Overwrite output file if it exists (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gzip
  description: 'Compress output using gzip (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bzip
  description: 'Compress output using bzip2 (default: False)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: extract-partitions.py [--version] [--info] [-h] [-X MAX_SIZE]\n\
  \                             [-m MIN_PART_SIZE] [-n] [-U] [-f]\n              \
  \               [--gzip | --bzip]\n                             output_filename_prefix\
  \ input_partition_filename\n                             [input_partition_filename\
  \ ...]\n\nSeparate sequences that are annotated with partitions into grouped files.\n\
  \npositional arguments:\n  output_filename_prefix\n  input_partition_filename\n\n\
  optional arguments:\n  --version             show program's version number and exit\n\
  \  --info                print citation information\n  -h, --help            show\
  \ this help message and exit\n  -X MAX_SIZE, --max-size MAX_SIZE\n             \
  \           Max group size (n sequences) (default: 1000000)\n  -m MIN_PART_SIZE,\
  \ --min-partition-size MIN_PART_SIZE\n                        Minimum partition\
  \ size worth keeping (default: 5)\n  -n, --no-output-groups\n                  \
  \      Do not actually output groups files. (default: True)\n  -U, --output-unassigned\n\
  \                        Output unassigned sequences, too (default: False)\n  -f,\
  \ --force           Overwrite output file if it exists (default: False)\n  --gzip\
  \                Compress output using gzip (default: False)\n  --bzip         \
  \       Compress output using bzip2 (default: False)\n\n Example (results will be\
  \ in \"example.group0000.fa\"):\n\n    load-graph.py -k 20 example tests/test-data/random-20-a.fa\n\
  \    partition-graph.py example\n    merge-partitions.py -k 20 example\n    annotate-partitions.py\
  \ -k 20 example tests/test-data/random-20-a.fa\n    extract-partitions.py example\
  \ random-20-a.fa.part\n\n(`extract-partitions.py` will produce a partition size\
  \ distribution in\n<base>.dist. The columns are: (1) number of reads, (2) count\
  \ of partitions with\nn reads, (3) cumulative sum of partitions, (4) cumulative\
  \ sum of reads.)\n"
generated_using:
- --help
docker_image:
