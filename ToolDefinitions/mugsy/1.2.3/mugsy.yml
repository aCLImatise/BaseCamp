!Command
command:
- mugsy
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -p
  description: '|prefix       prefix for output files'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --directory
  description: "used to store output and temporary\nfiles. Must be a absolute path"
  args: !SimpleFlagArg
    name: directory
- !Flag
  optional: true
  synonyms:
  - -d
  - --distance
  description: "maximum distance along a single sequence (bp) for\nchaining anchors\
    \ into locally colinear blocks (LCBs).  This is\nused by the segmentation step\
    \ synchain-mugsy. Default is 1000bp."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --minlength
  description: "span of an aligned region in a colinear\nblock (bp). This is used\
    \ by the segmentation step\nsynchain-mugsy. Default is 30bp."
  args: !SimpleFlagArg
    name: minimum
- !Flag
  optional: true
  synonyms:
  - -duplications
  description: '- Detect and report duplications. 0 - Skip. Default is 0.'
  args: !SimpleFlagArg
    name: '1'
- !Flag
  optional: true
  synonyms:
  - -nucmeropts
  description: "passed through to the Nucmer\npackage. Eg. -nucmeropts \"-l 15\" sets\
    \ the minimum MUM length in\nNUCmer to 15. See the Nucmer documentation at\nhttp://mummer.sf.net\
    \ for more information.  Default is -l 15."
  args: !SimpleFlagArg
    name: options
- !Flag
  optional: true
  synonyms:
  - -allownestedlcbs.
  description: "=false. Places each multi-genome anchor\nin exactly one LCB; the longest\
    \ spanning LCB"
  args: !SimpleFlagArg
    name: Default
- !Flag
  optional: true
  synonyms:
  - -plot
  description: "genome dot plots in GNUplot format. Overlays LCBS\nonto pairwise plots\
    \ from mummerplot. Display of draft genomes in\nthese plots is not supported."
  args: !SimpleFlagArg
    name: output
- !Flag
  optional: true
  synonyms:
  - -fullsearch
  description: "a complete all pairs Nucmer search with each\nsequence as a reference\
    \ and query (n^2-1 total searches). Default\nis one direction only (n^2-1/2 searches)."
  args: !SimpleFlagArg
    name: Run
- !Flag
  optional: true
  synonyms:
  - -refine
  description: "an second iteration of Mugsy on each LCB to refine the\nalignment\
    \ using either Mugsy (--refine mugsy), FSA (--refine\nfsa), Pecan (--refine pecan),\
    \ MLAGAN (--refine mlagan). Requires\nnecessary tools are in your path:\nfsa:\
    \ fsa\npecan: muscle,exonerate, in the path. classpath set for bp.pecan.Pecan.\n\
    mlagan: mlagan.sh"
  args: !SimpleFlagArg
    name: run
- !Flag
  optional: true
  synonyms:
  - -debug
  description: debug level. > 2 verbose
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    mugsy - a multiple whole genome aligner\n\nUSAGE\n    mugsy\
  \ [-p output prefix] multifasta_genome1.fsa multifasta_genome2.fsa\n    ... multifasta_genomeN.fsa\n\
  \nSYNOPSIS\n    Mugsy is multiple whole genome aligner. Mugsy uses Nucmer for pairwise\n\
  \    alignment, a custom graph based segmentation procedure for identifying\n  \
  \  LCBs (synchain-mugsy), and a segment-based progressive multiple\n    alignment\
  \ strategy from Seqan::TCoffee. Mugsy accepts draft genomes in\n    the form of\
  \ multi-FASTA files. Mugsy does not require a reference genome\n    and is robust\
  \ in the presence of large scale genome flux and genome\n    rearrangments. Mugsy\
  \ performs best on closely related genomes and has\n    been used to align several\
  \ dozens bacterial genomes.\n\n    Mugsy outputs a series of alignments in MAF format.\n\
  \n    See http://mugsy.sf.net for more information\n\nINPUT\n    Input is one or\
  \ more (multi)FASTA files, one per genome. Each file\n    should contain all the\
  \ sequences for a single organism/species. The\n    filename is used as the genome\
  \ name.\n\n    Limitations on FASTA input: input FASTA headers must not contain\
  \ ':' or\n    '-' ambiguity characters are converted to N in output\n\n    Common\
  \ options:\n\n        -p|prefix       prefix for output files\n\n        --directory\
  \ directory used to store output and temporary\n          files. Must be a absolute\
  \ path\n\n        -d|--distance   maximum distance along a single sequence (bp)\
  \ for\n         chaining anchors into locally colinear blocks (LCBs).  This is\n\
  \         used by the segmentation step synchain-mugsy. Default is 1000bp.\n\n \
  \       -c|--minlength minimum span of an aligned region in a colinear\n       \
  \  block (bp). This is used by the segmentation step\n         synchain-mugsy. Default\
  \ is 30bp.\n\n        -duplications 1 - Detect and report duplications. 0 - Skip.\
  \ Default is 0.\n\n    Other options:\n\n        -nucmeropts options passed through\
  \ to the Nucmer\n         package. Eg. -nucmeropts \"-l 15\" sets the minimum MUM\
  \ length in\n         NUCmer to 15. See the Nucmer documentation at\n         http://mummer.sf.net\
  \ for more information.  Default is -l 15.\n\n        -allownestedlcbs. Default=false.\
  \ Places each multi-genome anchor\n         in exactly one LCB; the longest spanning\
  \ LCB\n\n        -plot output genome dot plots in GNUplot format. Overlays LCBS\n\
  \         onto pairwise plots from mummerplot. Display of draft genomes in\n   \
  \      these plots is not supported.\n\n        -fullsearch Run a complete all pairs\
  \ Nucmer search with each\n         sequence as a reference and query (n^2-1 total\
  \ searches). Default\n         is one direction only (n^2-1/2 searches).\n\n   \
  \     -refine run an second iteration of Mugsy on each LCB to refine the\n     \
  \    alignment using either Mugsy (--refine mugsy), FSA (--refine\n         fsa),\
  \ Pecan (--refine pecan), MLAGAN (--refine mlagan). Requires\n         necessary\
  \ tools are in your path:  \n         fsa: fsa\n         pecan: muscle,exonerate,\
  \ in the path. classpath set for bp.pecan.Pecan.\n         mlagan: mlagan.sh\n\n\
  \n        -debug           debug level. > 2 verbose\n\nOUTPUT\n    Primary output\
  \ is MAF format.\n\n    Utilities for parsing MAF are available at the UCSC genome\
  \ browser and\n    in the multiz,TBA toolkit. GMAJ is a popular visualization tool\
  \ for MAF.\n\nMORE INFO\n    This script is a wrapper that invokes an all-against-all\
  \ Nucmer search\n    and the mugsy aligner. The two primary components of the aligner\
  \ can\n    also be run independently\n\n    1) mugsyWGA\n\n    Generates a whole\
  \ genome alignment (WGA) from a library of pairwise\n    alignments in XMFA format.\
  \ Implemented with the refined segment graph\n    and progressive consistency-based\
  \ alignment procedure described in\n    Seqan::TCoffee (Rausch et al 2008). Invokes\
  \ synchain-mugsy to segment\n    the input genomes into alignable regions.\n\n \
  \   2) synchain-mugsy\n\n    Derives a segmentation of genome anchors that fulfill\
  \ --distance and\n    --minlength criteria. Anchors can be any oriented features\
  \ that span two\n    or more of the input genomes. The output is a set of locally\
  \ colinear\n    blocks (LCBs)\n\nUsing Mugsy with other aligners\n    Mugsy supports\
  \ realignment of LCBs using FSA,Pecan, MLAGAN. For FSA,\n    make sure FSA is in\
  \ your PATH and run with --refine fsa\n\nFor more information\n    http://www.sf.net/mugsy.\n\
  \n    AUTHOR: Sam Angiuoli angiuoli@cs.umd.edu 2009\n\n"
generated_using:
- --help
docker_image:
