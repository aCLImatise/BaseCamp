&id002 !Command
command:
- eagle
- convert
positional: []
named:
- !Flag
  description: "[SAMPLES [SAMPLES ...]]\nlimit the output creation to these samples"
  synonyms:
  - --samples
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "the reference in fasta format to extract a variant\nmotifs information\n"
  synonyms:
  - --ref
  args: !SimpleFlagArg
    name: REF
  optional: true
parent: &id001 !Command
  command:
  - eagle
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - eagle
    - meta
    positional:
    - !Positional
      description: the eagle-data-file
      position: 0
      name: input
      optional: false
    - !Positional
      description: the name of the meta information
      position: 1
      name: name
      optional: false
    named:
    - !Flag
      description: write this value as meta information
      synonyms:
      - -s
      args: !SimpleFlagArg
        name: S
      optional: true
    - !Flag
      description: delete the meta information
      synonyms:
      - --delete
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "[STORELIST]\na list containing key value pairs to store\n"
      synonyms:
      - --storelist
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: eagle meta [-h] [-s S] [--delete] [--storelist [STORELIST]]\n\
      \                  input [name]\n\npositional arguments:\n  input          \
      \       the eagle-data-file\n  name                  the name of the meta information\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -s S                  write this value as meta information\n  --delete  \
      \            delete the meta information\n  --storelist [STORELIST]\n      \
      \                  a list containing key value pairs to store\n"
    generated_using: &id003
    - --help
  - *id002
  - !Command
    command:
    - eagle
    - interface
    positional: []
    named:
    - !Flag
      description: 'port (default: 8000)'
      synonyms:
      - --port
      - -p
      args: !SimpleFlagArg
        name: PORT
      optional: true
    - !Flag
      description: listen for external connections
      synonyms:
      - --public
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: disable debug messages
      synonyms:
      - --nodebug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: config file to use.
      synonyms:
      - --config
      - -c
      args: !SimpleFlagArg
        name: CONFIG
      optional: true
    - !Flag
      description: "use up to M parallel processes to serve HTTP requests\n(default=1).\n"
      synonyms:
      - --processes
      - -m
      args: !SimpleFlagArg
        name: PROCESSES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: eagle interface [-h] [--port PORT] [--public] [--nodebug] --config\n\
      \                       CONFIG [--processes PROCESSES]\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --port PORT, -p\
      \ PORT  port (default: 8000)\n  --public              listen for external connections\n\
      \  --nodebug             disable debug messages\n  --config CONFIG, -c CONFIG\n\
      \                        config file to use.\n  --processes PROCESSES, -m PROCESSES\n\
      \                        use up to M parallel processes to serve HTTP requests\n\
      \                        (default=1).\n"
    generated_using: *id003
  - !Command
    command:
    - eagle
    - files
    positional:
    - !Positional
      description: ''
      position: 0
      name: eagle
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: eagle [-h] {interface,convert,meta,extract} ...\neagle: error:\
      \ argument command: invalid choice: 'files' (choose from 'interface', 'convert',\
      \ 'meta', 'extract')\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: eagle [-h] {interface,convert,meta,extract} ...\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n\nsubcommands:\n  valid\
    \ subcommands\n\n  {interface,convert,meta,extract}\n    interface           run\
    \ the EAGLE interface service\n    convert             convert a vcf file to the\
    \ eagle format\n    meta                read or write meta information to eagle\
    \ formatted\n                        files\n    extract             extract meta\
    \ information from bam\n"
  generated_using: *id003
subcommands:
- !Command
  command:
  - eagle
  - convert
  - input
  positional:
  - !Positional
    description: ''
    position: 0
    name: eagle
    optional: false
  - !Positional
    description: ''
    position: 1
    name: convert
    optional: false
  - !Positional
    description: ''
    position: 2
    name: SAMPLES
    optional: true
  named:
  - !Flag
    description: ''
    synonyms:
    - --ref
    args: !SimpleFlagArg
      name: REF
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --samples
    args: !EmptyFlagArg {}
    optional: true
  parent: *id002
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: eagle convert [-h] [--samples [SAMPLES [SAMPLES ...]]] [--ref\
    \ REF]\n                     input outdir\neagle convert: error: the following\
    \ arguments are required: outdir\n"
  generated_using: &id004 []
- !Command
  command:
  - eagle
  - convert
  - outdir
  positional:
  - !Positional
    description: ''
    position: 0
    name: eagle
    optional: false
  - !Positional
    description: ''
    position: 1
    name: convert
    optional: false
  - !Positional
    description: ''
    position: 2
    name: SAMPLES
    optional: true
  named:
  - !Flag
    description: ''
    synonyms:
    - --ref
    args: !SimpleFlagArg
      name: REF
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --samples
    args: !EmptyFlagArg {}
    optional: true
  parent: *id002
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: eagle convert [-h] [--samples [SAMPLES [SAMPLES ...]]] [--ref\
    \ REF]\n                     input outdir\neagle convert: error: the following\
    \ arguments are required: outdir\n"
  generated_using: *id004
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: eagle convert [-h] [--samples [SAMPLES [SAMPLES ...]]] [--ref REF]\n\
  \                     input outdir\n\npositional arguments:\n  input           \
  \      the input in vcf format\n  outdir                the output directory\n\n\
  optional arguments:\n  -h, --help            show this help message and exit\n \
  \ --samples [SAMPLES [SAMPLES ...]]\n                        limit the output creation\
  \ to these samples\n  --ref REF             the reference in fasta format to extract\
  \ a variant\n                        motifs information\n"
generated_using: *id003
