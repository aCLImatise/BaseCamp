!Command
command:
- blocksplit
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --input-file
  description: "The input VCF/BCF file(s) (use file:sample to\nspecify a sample)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -o
  description: "[ --output ] arg        Write a bed file giving the locations of\n\
    overlapping blocks (use - for stdout)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  description: "[ --regions ] arg       Use a bed file for getting a subset of regions\n\
    (traversal via tabix)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -T
  description: "[ --targets ] arg       Use a bed file for getting a subset of targets\n\
    (streaming the whole file, ignoring things outside\nthe bed regions)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: '[ --location ] arg      The location / subset.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: '[ --limit-records ] arg Maximum number of records to process'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: '[ --message-every ] arg Print a message every N records.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  description: '[ --window ] arg        Overlap window length.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -b
  description: '[ --nblocks ] arg       Maximum number of blocks to break into (32).'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: '[ --nvars ] arg         Minimum number of variants per block (100).'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: '[ --apply-filters ] arg Apply filtering in VCF.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: Verbose output.
  args: !SimpleFlagArg
    name: arg
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: '[ --help ]              produce help message'
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Show version
  args: !EmptyFlagArg {}
help_text: "Allowed options:\n  -h [ --help ]              produce help message\n\
  \  --version                  Show version\n  --input-file arg           The input\
  \ VCF/BCF file(s) (use file:sample to \n                             specify a sample)\n\
  \  -o [ --output ] arg        Write a bed file giving the locations of \n      \
  \                       overlapping blocks (use - for stdout).\n  -R [ --regions\
  \ ] arg       Use a bed file for getting a subset of regions \n                \
  \             (traversal via tabix).\n  -T [ --targets ] arg       Use a bed file\
  \ for getting a subset of targets \n                             (streaming the\
  \ whole file, ignoring things outside\n                             the bed regions).\n\
  \  -l [ --location ] arg      The location / subset.\n  -L [ --limit-records ] arg\
  \ Maximum number of records to process\n  -m [ --message-every ] arg Print a message\
  \ every N records.\n  -w [ --window ] arg        Overlap window length.\n  -b [\
  \ --nblocks ] arg       Maximum number of blocks to break into (32).\n  -v [ --nvars\
  \ ] arg         Minimum number of variants per block (100).\n  -f [ --apply-filters\
  \ ] arg Apply filtering in VCF.\n  --verbose arg              Verbose output.\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/hap.py:0.3.14--py27h5c5a3ab_0
