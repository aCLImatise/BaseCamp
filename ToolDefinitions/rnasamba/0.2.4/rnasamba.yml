!Command
command: &id001
- rnasamba
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - rnasamba
  - train
  positional:
  - !Positional
    description: "output HDF5 file containing weights of the newly\ntrained RNAsamba\
      \ network."
    position: 0
    name: output_file
    optional: false
  - !Positional
    description: "input FASTA file containing sequences of protein-\ncoding transcripts."
    position: 1
    name: coding_file
    optional: false
  - !Positional
    description: input FASTA file containing sequences of noncoding
    position: 2
    name: noncoding_file
    optional: false
  - !Positional
    description: 'optional arguments:'
    position: 3
    name: transcripts.
    optional: false
  named:
  - !Flag
    description: "number of epochs after lowest validation loss before\nstopping training\
      \ (a fraction of 0.1 of the training\nset is set apart for validation and the\
      \ model with the\nlowest validation loss will be saved). (default: 0)"
    synonyms:
    - -s
    - --early_stopping
    args: !SimpleFlagArg
      name: EARLY_STOPPING
    optional: true
  - !Flag
    description: 'number of samples per gradient update. (default: 128)'
    synonyms:
    - -b
    - --batch_size
    args: !SimpleFlagArg
      name: BATCH_SIZE
    optional: true
  - !Flag
    description: 'number of epochs to train the model. (default: 40)'
    synonyms:
    - -e
    - --epochs
    args: !SimpleFlagArg
      name: EPOCHS
    optional: true
  - !Flag
    description: "print the progress of the training. 0 = silent, 1 =\ncurrent step,\
      \ 2 = progress bar, 3 = one line per\nepoch. (default: 0)\n"
    synonyms:
    - -v
    - --verbose
    args: !ChoiceFlagArg
      choices: !!set
        '0':
        '2':
        '1':
        '3':
    optional: true
  parent: &id006 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: "output HDF5 file containing weights of the newly\ntrained RNAsamba\
          \ network."
        position: 0
        name: output_file
        optional: false
      - !Positional
        description: "input FASTA file containing sequences of protein-\ncoding transcripts."
        position: 1
        name: coding_file
        optional: false
      - !Positional
        description: input FASTA file containing sequences of noncoding
        position: 2
        name: noncoding_file
        optional: false
      - !Positional
        description: 'optional arguments:'
        position: 3
        name: transcripts.
        optional: false
      named:
      - !Flag
        description: "number of epochs after lowest validation loss before\nstopping\
          \ training (a fraction of 0.1 of the training\nset is set apart for validation\
          \ and the model with the\nlowest validation loss will be saved). (default:\
          \ 0)"
        synonyms:
        - -s
        - --early_stopping
        args: !SimpleFlagArg
          name: EARLY_STOPPING
        optional: true
      - !Flag
        description: 'number of samples per gradient update. (default: 128)'
        synonyms:
        - -b
        - --batch_size
        args: !SimpleFlagArg
          name: BATCH_SIZE
        optional: true
      - !Flag
        description: 'number of epochs to train the model. (default: 40)'
        synonyms:
        - -e
        - --epochs
        args: !SimpleFlagArg
          name: EPOCHS
        optional: true
      - !Flag
        description: "print the progress of the training. 0 = silent, 1 =\ncurrent\
          \ step, 2 = progress bar, 3 = one line per\nepoch. (default: 0)\n"
        synonyms:
        - -v
        - --verbose
        args: !ChoiceFlagArg
          choices: !!set
            ? "1"
            ? "0"
            ? "2"
            ? "3"
        optional: true
      parent: &id003 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            description: "output HDF5 file containing weights of the newly\ntrained\
              \ RNAsamba network."
            position: 0
            name: output_file
            optional: false
          - !Positional
            description: "input FASTA file containing sequences of protein-\ncoding\
              \ transcripts."
            position: 1
            name: coding_file
            optional: false
          - !Positional
            description: input FASTA file containing sequences of noncoding
            position: 2
            name: noncoding_file
            optional: false
          - !Positional
            description: 'optional arguments:'
            position: 3
            name: transcripts.
            optional: false
          named:
          - !Flag
            description: "number of epochs after lowest validation loss before\nstopping\
              \ training (a fraction of 0.1 of the training\nset is set apart for\
              \ validation and the model with the\nlowest validation loss will be\
              \ saved). (default: 0)"
            synonyms:
            - -s
            - --early_stopping
            args: !SimpleFlagArg
              name: EARLY_STOPPING
            optional: true
          - !Flag
            description: 'number of samples per gradient update. (default: 128)'
            synonyms:
            - -b
            - --batch_size
            args: !SimpleFlagArg
              name: BATCH_SIZE
            optional: true
          - !Flag
            description: 'number of epochs to train the model. (default: 40)'
            synonyms:
            - -e
            - --epochs
            args: !SimpleFlagArg
              name: EPOCHS
            optional: true
          - !Flag
            description: "print the progress of the training. 0 = silent, 1 =\ncurrent\
              \ step, 2 = progress bar, 3 = one line per\nepoch. (default: 0)\n"
            synonyms:
            - -v
            - --verbose
            args: !ChoiceFlagArg
              choices: !!set
                ? "3"
                ? "1"
                ? "2"
                ? "0"
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: rnasamba train [-h] [--version] [-s EARLY_STOPPING] [-b\
            \ BATCH_SIZE]\n                      [-e EPOCHS] [-v {0,1,2,3}]\n    \
            \                  output_file coding_file noncoding_file\n\nTrain a new\
            \ classification model.\n\npositional arguments:\n  output_file      \
            \     output HDF5 file containing weights of the newly\n             \
            \           trained RNAsamba network.\n  coding_file           input FASTA\
            \ file containing sequences of protein-\n                        coding\
            \ transcripts.\n  noncoding_file        input FASTA file containing sequences\
            \ of noncoding\n                        transcripts.\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --version\
            \             show program's version number and exit\n  -s EARLY_STOPPING,\
            \ --early_stopping EARLY_STOPPING\n                        number of epochs\
            \ after lowest validation loss before\n                        stopping\
            \ training (a fraction of 0.1 of the training\n                      \
            \  set is set apart for validation and the model with the\n          \
            \              lowest validation loss will be saved). (default: 0)\n \
            \ -b BATCH_SIZE, --batch_size BATCH_SIZE\n                        number\
            \ of samples per gradient update. (default: 128)\n  -e EPOCHS, --epochs\
            \ EPOCHS\n                        number of epochs to train the model.\
            \ (default: 40)\n  -v {0,1,2,3}, --verbose {0,1,2,3}\n               \
            \         print the progress of the training. 0 = silent, 1 =\n      \
            \                  current step, 2 = progress bar, 3 = one line per\n\
            \                        epoch. (default: 0)\n"
          generated_using: &id004
          - --help
        - !Command
          command: &id005
          - rnasamba
          - classify
          positional:
          - !Positional
            description: output TSV file containing the results of the
            position: 0
            name: output_file
            optional: false
          - !Positional
            description: fasta_file            input FASTA file containing transcript
              sequences.
            position: 1
            name: classification.
            optional: false
          - !Positional
            description: "input HDF5 file(s) containing weights of a trained\nRNAsamba\
              \ network (if more than a file is provided, an\nensembling of the models\
              \ will be performed)."
            position: 2
            name: weights
            optional: false
          named:
          - !Flag
            description: "output FASTA file containing translated sequences for\n\
              the predicted coding ORFs. (default: None)"
            synonyms:
            - -p
            - --protein_fasta
            args: !SimpleFlagArg
              name: PROTEIN_FASTA
            optional: true
          - !Flag
            description: "print the progress of the classification. 0 = silent,\n\
              1 = current step. (default: 0)\n"
            synonyms:
            - -v
            - --verbose
            args: !ChoiceFlagArg
              choices: !!set
                ? "1"
                ? "0"
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: rnasamba classify [-h] [--version] [-p PROTEIN_FASTA]\
            \ [-v {0,1}]\n                         output_file fasta_file weights\
            \ [weights ...]\n\nClassify sequences from a input FASTA file.\n\npositional\
            \ arguments:\n  output_file           output TSV file containing the results\
            \ of the\n                        classification.\n  fasta_file      \
            \      input FASTA file containing transcript sequences.\n  weights  \
            \             input HDF5 file(s) containing weights of a trained\n   \
            \                     RNAsamba network (if more than a file is provided,\
            \ an\n                        ensembling of the models will be performed).\n\
            \noptional arguments:\n  -h, --help            show this help message\
            \ and exit\n  --version             show program's version number and\
            \ exit\n  -p PROTEIN_FASTA, --protein_fasta PROTEIN_FASTA\n          \
            \              output FASTA file containing translated sequences for\n\
            \                        the predicted coding ORFs. (default: None)\n\
            \  -v {0,1}, --verbose {0,1}\n                        print the progress\
            \ of the classification. 0 = silent,\n                        1 = current\
            \ step. (default: 0)\n"
          generated_using: *id004
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: show program's version number and exit
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: rnasamba [-h] [--version] {classify,train} ...\n\nCoding\
          \ potential calculation using deep learning.\n\npositional arguments:\n\
          \  {classify,train}\n    classify        classify sequences from a input\
          \ FASTA file.\n    train           train a new classification model.\n\n\
          optional arguments:\n  -h, --help        show this help message and exit\n\
          \  --version         show program's version number and exit\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: rnasamba train [-h] [--version] [-s EARLY_STOPPING] [-b BATCH_SIZE]\n\
        \                      [-e EPOCHS] [-v {0,1,2,3}]\n                      output_file\
        \ coding_file noncoding_file\n\nTrain a new classification model.\n\npositional\
        \ arguments:\n  output_file           output HDF5 file containing weights\
        \ of the newly\n                        trained RNAsamba network.\n  coding_file\
        \           input FASTA file containing sequences of protein-\n          \
        \              coding transcripts.\n  noncoding_file        input FASTA file\
        \ containing sequences of noncoding\n                        transcripts.\n\
        \noptional arguments:\n  -h, --help            show this help message and\
        \ exit\n  --version             show program's version number and exit\n \
        \ -s EARLY_STOPPING, --early_stopping EARLY_STOPPING\n                   \
        \     number of epochs after lowest validation loss before\n             \
        \           stopping training (a fraction of 0.1 of the training\n       \
        \                 set is set apart for validation and the model with the\n\
        \                        lowest validation loss will be saved). (default:\
        \ 0)\n  -b BATCH_SIZE, --batch_size BATCH_SIZE\n                        number\
        \ of samples per gradient update. (default: 128)\n  -e EPOCHS, --epochs EPOCHS\n\
        \                        number of epochs to train the model. (default: 40)\n\
        \  -v {0,1,2,3}, --verbose {0,1,2,3}\n                        print the progress\
        \ of the training. 0 = silent, 1 =\n                        current step,\
        \ 2 = progress bar, 3 = one line per\n                        epoch. (default:\
        \ 0)\n"
      generated_using: *id004
    - !Command
      command: *id005
      positional:
      - !Positional
        description: output TSV file containing the results of the
        position: 0
        name: output_file
        optional: false
      - !Positional
        description: fasta_file            input FASTA file containing transcript
          sequences.
        position: 1
        name: classification.
        optional: false
      - !Positional
        description: "input HDF5 file(s) containing weights of a trained\nRNAsamba\
          \ network (if more than a file is provided, an\nensembling of the models\
          \ will be performed)."
        position: 2
        name: weights
        optional: false
      named:
      - !Flag
        description: "output FASTA file containing translated sequences for\nthe predicted\
          \ coding ORFs. (default: None)"
        synonyms:
        - -p
        - --protein_fasta
        args: !SimpleFlagArg
          name: PROTEIN_FASTA
        optional: true
      - !Flag
        description: "print the progress of the classification. 0 = silent,\n1 = current\
          \ step. (default: 0)\n"
        synonyms:
        - -v
        - --verbose
        args: !ChoiceFlagArg
          choices: !!set
            ? "1"
            ? "0"
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: rnasamba classify [-h] [--version] [-p PROTEIN_FASTA] [-v\
        \ {0,1}]\n                         output_file fasta_file weights [weights\
        \ ...]\n\nClassify sequences from a input FASTA file.\n\npositional arguments:\n\
        \  output_file           output TSV file containing the results of the\n \
        \                       classification.\n  fasta_file            input FASTA\
        \ file containing transcript sequences.\n  weights               input HDF5\
        \ file(s) containing weights of a trained\n                        RNAsamba\
        \ network (if more than a file is provided, an\n                        ensembling\
        \ of the models will be performed).\n\noptional arguments:\n  -h, --help \
        \           show this help message and exit\n  --version             show\
        \ program's version number and exit\n  -p PROTEIN_FASTA, --protein_fasta PROTEIN_FASTA\n\
        \                        output FASTA file containing translated sequences\
        \ for\n                        the predicted coding ORFs. (default: None)\n\
        \  -v {0,1}, --verbose {0,1}\n                        print the progress of\
        \ the classification. 0 = silent,\n                        1 = current step.\
        \ (default: 0)\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: rnasamba [-h] [--version] {classify,train} ...\n\nCoding potential\
      \ calculation using deep learning.\n\npositional arguments:\n  {classify,train}\n\
      \    classify        classify sequences from a input FASTA file.\n    train\
      \           train a new classification model.\n\noptional arguments:\n  -h,\
      \ --help        show this help message and exit\n  --version         show program's\
      \ version number and exit\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: rnasamba train [-h] [--version] [-s EARLY_STOPPING] [-b BATCH_SIZE]\n\
    \                      [-e EPOCHS] [-v {0,1,2,3}]\n                      output_file\
    \ coding_file noncoding_file\n\nTrain a new classification model.\n\npositional\
    \ arguments:\n  output_file           output HDF5 file containing weights of the\
    \ newly\n                        trained RNAsamba network.\n  coding_file    \
    \       input FASTA file containing sequences of protein-\n                  \
    \      coding transcripts.\n  noncoding_file        input FASTA file containing\
    \ sequences of noncoding\n                        transcripts.\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  --version        \
    \     show program's version number and exit\n  -s EARLY_STOPPING, --early_stopping\
    \ EARLY_STOPPING\n                        number of epochs after lowest validation\
    \ loss before\n                        stopping training (a fraction of 0.1 of\
    \ the training\n                        set is set apart for validation and the\
    \ model with the\n                        lowest validation loss will be saved).\
    \ (default: 0)\n  -b BATCH_SIZE, --batch_size BATCH_SIZE\n                   \
    \     number of samples per gradient update. (default: 128)\n  -e EPOCHS, --epochs\
    \ EPOCHS\n                        number of epochs to train the model. (default:\
    \ 40)\n  -v {0,1,2,3}, --verbose {0,1,2,3}\n                        print the\
    \ progress of the training. 0 = silent, 1 =\n                        current step,\
    \ 2 = progress bar, 3 = one line per\n                        epoch. (default:\
    \ 0)\n"
  generated_using: *id004
- !Command
  command: *id005
  positional:
  - !Positional
    description: output TSV file containing the results of the
    position: 0
    name: output_file
    optional: false
  - !Positional
    description: fasta_file            input FASTA file containing transcript sequences.
    position: 1
    name: classification.
    optional: false
  - !Positional
    description: "input HDF5 file(s) containing weights of a trained\nRNAsamba network\
      \ (if more than a file is provided, an\nensembling of the models will be performed)."
    position: 2
    name: weights
    optional: false
  named:
  - !Flag
    description: "output FASTA file containing translated sequences for\nthe predicted\
      \ coding ORFs. (default: None)"
    synonyms:
    - -p
    - --protein_fasta
    args: !SimpleFlagArg
      name: PROTEIN_FASTA
    optional: true
  - !Flag
    description: "print the progress of the classification. 0 = silent,\n1 = current\
      \ step. (default: 0)\n"
    synonyms:
    - -v
    - --verbose
    args: !ChoiceFlagArg
      choices: !!set
        '0':
        '1':
    optional: true
  parent: *id006
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: rnasamba classify [-h] [--version] [-p PROTEIN_FASTA] [-v {0,1}]\n\
    \                         output_file fasta_file weights [weights ...]\n\nClassify\
    \ sequences from a input FASTA file.\n\npositional arguments:\n  output_file \
    \          output TSV file containing the results of the\n                   \
    \     classification.\n  fasta_file            input FASTA file containing transcript\
    \ sequences.\n  weights               input HDF5 file(s) containing weights of\
    \ a trained\n                        RNAsamba network (if more than a file is\
    \ provided, an\n                        ensembling of the models will be performed).\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  --version             show program's version number and exit\n  -p PROTEIN_FASTA,\
    \ --protein_fasta PROTEIN_FASTA\n                        output FASTA file containing\
    \ translated sequences for\n                        the predicted coding ORFs.\
    \ (default: None)\n  -v {0,1}, --verbose {0,1}\n                        print\
    \ the progress of the classification. 0 = silent,\n                        1 =\
    \ current step. (default: 0)\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: rnasamba [-h] [--version] {classify,train} ...\n\nCoding potential\
  \ calculation using deep learning.\n\npositional arguments:\n  {classify,train}\n\
  \    classify        classify sequences from a input FASTA file.\n    train    \
  \       train a new classification model.\n\noptional arguments:\n  -h, --help \
  \       show this help message and exit\n  --version         show program's version\
  \ number and exit\n"
generated_using: *id004
