&id001 !Command
command:
- rnasamba
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - rnasamba
  - classify
  positional:
  - !Positional
    optional: false
    position: 0
    name: output_file
    description: output TSV file containing the results of the
  - !Positional
    optional: false
    position: 1
    name: classification.
    description: fasta_file            input FASTA file containing transcript sequences.
  - !Positional
    optional: false
    position: 2
    name: weights
    description: "input HDF5 file(s) containing weights of a trained\nRNAsamba network\
      \ (if more than a file is provided, an\nensembling of the models will be performed)."
  named:
  - !Flag
    optional: true
    synonyms:
    - -p
    - --protein_fasta
    description: "output FASTA file containing translated sequences for\nthe predicted\
      \ coding ORFs. (default: None)"
    args: !SimpleFlagArg
      name: PROTEIN_FASTA
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: "print the progress of the classification. 0 = silent,\n1 = current\
      \ step. (default: 0)\n"
    args: !ChoiceFlagArg
      choices: !!set
        '1':
        '0':
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: rnasamba classify [-h] [--version] [-p PROTEIN_FASTA] [-v {0,1}]\n\
    \                         output_file fasta_file weights [weights ...]\n\nClassify\
    \ sequences from a input FASTA file.\n\npositional arguments:\n  output_file \
    \          output TSV file containing the results of the\n                   \
    \     classification.\n  fasta_file            input FASTA file containing transcript\
    \ sequences.\n  weights               input HDF5 file(s) containing weights of\
    \ a trained\n                        RNAsamba network (if more than a file is\
    \ provided, an\n                        ensembling of the models will be performed).\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  --version             show program's version number and exit\n  -p PROTEIN_FASTA,\
    \ --protein_fasta PROTEIN_FASTA\n                        output FASTA file containing\
    \ translated sequences for\n                        the predicted coding ORFs.\
    \ (default: None)\n  -v {0,1}, --verbose {0,1}\n                        print\
    \ the progress of the classification. 0 = silent,\n                        1 =\
    \ current step. (default: 0)\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/rnasamba:0.2.5--py36hc5360cc_0
- !Command
  command:
  - rnasamba
  - train
  positional:
  - !Positional
    optional: false
    position: 0
    name: output_file
    description: "output HDF5 file containing weights of the newly\ntrained RNAsamba\
      \ network."
  - !Positional
    optional: false
    position: 1
    name: coding_file
    description: "input FASTA file containing sequences of protein-\ncoding transcripts."
  - !Positional
    optional: false
    position: 2
    name: noncoding_file
    description: input FASTA file containing sequences of noncoding
  - !Positional
    optional: false
    position: 3
    name: transcripts.
    description: 'optional arguments:'
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    - --early_stopping
    description: "number of epochs after lowest validation loss before\nstopping training\
      \ (a fraction of 0.1 of the training\nset is set apart for validation and the\
      \ model with the\nlowest validation loss will be saved). (default: 0)"
    args: !SimpleFlagArg
      name: EARLY_STOPPING
  - !Flag
    optional: true
    synonyms:
    - -b
    - --batch_size
    description: 'number of samples per gradient update. (default: 128)'
    args: !SimpleFlagArg
      name: BATCH_SIZE
  - !Flag
    optional: true
    synonyms:
    - -e
    - --epochs
    description: 'number of epochs to train the model. (default: 40)'
    args: !SimpleFlagArg
      name: EPOCHS
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: "print the progress of the training. 0 = silent, 1 =\ncurrent step,\
      \ 2 = progress bar, 3 = one line per\nepoch. (default: 0)\n"
    args: !ChoiceFlagArg
      choices: !!set
        '1':
        '3':
        '2':
        '0':
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: rnasamba train [-h] [--version] [-s EARLY_STOPPING] [-b BATCH_SIZE]\n\
    \                      [-e EPOCHS] [-v {0,1,2,3}]\n                      output_file\
    \ coding_file noncoding_file\n\nTrain a new classification model.\n\npositional\
    \ arguments:\n  output_file           output HDF5 file containing weights of the\
    \ newly\n                        trained RNAsamba network.\n  coding_file    \
    \       input FASTA file containing sequences of protein-\n                  \
    \      coding transcripts.\n  noncoding_file        input FASTA file containing\
    \ sequences of noncoding\n                        transcripts.\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  --version        \
    \     show program's version number and exit\n  -s EARLY_STOPPING, --early_stopping\
    \ EARLY_STOPPING\n                        number of epochs after lowest validation\
    \ loss before\n                        stopping training (a fraction of 0.1 of\
    \ the training\n                        set is set apart for validation and the\
    \ model with the\n                        lowest validation loss will be saved).\
    \ (default: 0)\n  -b BATCH_SIZE, --batch_size BATCH_SIZE\n                   \
    \     number of samples per gradient update. (default: 128)\n  -e EPOCHS, --epochs\
    \ EPOCHS\n                        number of epochs to train the model. (default:\
    \ 40)\n  -v {0,1,2,3}, --verbose {0,1,2,3}\n                        print the\
    \ progress of the training. 0 = silent, 1 =\n                        current step,\
    \ 2 = progress bar, 3 = one line per\n                        epoch. (default:\
    \ 0)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/rnasamba:0.2.5--py36hc5360cc_0
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: rnasamba [-h] [--version] {classify,train} ...\n\nCoding potential\
  \ calculation using deep learning.\n\npositional arguments:\n  {classify,train}\n\
  \    classify        classify sequences from a input FASTA file.\n    train    \
  \       train a new classification model.\n\noptional arguments:\n  -h, --help \
  \       show this help message and exit\n  --version         show program's version\
  \ number and exit\n"
generated_using: *id002
docker_image: quay.io/biocontainers/rnasamba:0.2.5--py36hc5360cc_0
