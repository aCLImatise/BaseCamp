!Command
command:
- visualize_rna.py
positional:
- !Positional
  description: "One or more files containing one or more RNAs each.\nSupported Filetypes\
    \ are: pdb files, forgi cg files"
  position: 0
  name: rna
  optional: false
named:
- !Flag
  description: "Allow pseudoknots when extracting the structure from\nPDB files."
  synonyms:
  - --pseudoknots
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "When reading pdb-files: Only extract the given\nchain(s). Comma-seperated"
  synonyms:
  - --chains
  args: !SimpleFlagArg
    name: CHAINS
  optional: true
- !Flag
  description: "When reading a single chain from a pdb-files: Enforce\nthe secondary\
    \ structure given as dotbracket string.\n(This only works, if --chain is given!)"
  synonyms:
  - --pdb-secondary-structure
  args: !SimpleFlagArg
    name: PDB_SECONDARY_STRUCTURE
  optional: true
- !Flag
  description: "What program to use for detecting basepairs in PDB/\nMMCIF structures.\
    \ This commandline option overrides\nthe value in the config file (if present).If\
    \ this is\nnot present and no config-file is given, we try to\ndetect the installed\
    \ programs."
  synonyms:
  - --pdb-annotation-tool
  args: !SimpleFlagArg
    name: PDB_ANNOTATION_TOOL
  optional: true
- !Flag
  description: "Usually, if modified residues/ ligand with an unknown\n3-letter code\
    \ are encountered in PDB files, they are\nremoved from the chain and a log message\
    \ of severity\nINFO is issued. With this option, we first try to\nquery the PDBeChem\
    \ database for the 3-letter code, to\nsee whether or not it is a modified residue\
    \ that can\nbe converted to its standard parent and should be part\nof the chain."
  synonyms:
  - --pdb-allow-www-query
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Show verbose output (Output logged at level\nlogging.INFO)"
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[DEBUG]       A comma-seperated list of logger names for which debug\n\
    output will be activated.WARNING: If you misspell the\nlogger name, this argument\
    \ will be ignored"
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[QUIET], --quiet [QUIET]\nA comma-seperated list of logger names for\
    \ which only\nmessages logged at the level 'CRITICAL' will be\nshown.Use this\
    \ without arguments if everything should\nbe quiet.\n"
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - --keep-length-one-stems
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "show this help message and exit\n--keep-length-one-stems\nFor all\
    \ input formats except forgi bg/cg files, this\ncontrolls whether stems of length\
    \ one are dissolved to\nunpaired regions (default) or kept (if this option is\n\
    present). In the case of input in forgi-format, the\nRNA from the file is not\
    \ modified.\n--thin-cylinders THIN_CYLINDERS\nMake coarse_grain RNA thinner\n\
    --virtual-atoms       Display the virtual atoms\n--virtual-residues    Display\
    \ the virtual residues as spheres\n--only-elements ONLY_ELEMENTS\nDisplay only\
    \ these elements, separated by commas\n--no-loops            Don't display the\
    \ coarse-grain hairpin loops\n--longrange           Display long-range interactions\n\
    --stem-color STEM_COLOR\nThe default stem color in coarse-grain drawings\n--multiloop-color\
    \ MULTILOOP_COLOR\nThe default multiloop color in coarse-grain drawings\n-x, --text\
    \            Add labels indicating the element names to the figure.\n--labels\
    \ LABELS       Add labels to elements. Expects a comma seperated\nstring of element:label,\
    \ like 'm0:LookHere' to display\n'LookHere' at the center of 'm0'.\n--sidechain-atoms\
    \     Include the sidechain atoms. Automatically enables\n--virtual-atoms\n--rainbow\
    \             Color virtual atoms (if displayed) depending on the\nnucleotide\
    \ position.\n--element-colors ELEMENT_COLORS\nSpecify a color for certain elements\
    \ (comma-separated\nelement names or element_name:color)Example: \"m1,m2\"\n(makes\
    \ m1, m2 purple) or\n\"m0:red,m1:green,s0:AA11GG,default:black\", where\n\"AA11GG\"\
    \ is a hex value and \"default\" addresses all\nother elements. Warning: colors\
    \ not understood by\nPYMOL will be interpreted as black.\n--align            \
    \   Align the RNAs (if multiple are provided)\n-o OUTPUT, --output OUTPUT\nCreate\
    \ a picture of the scene and exit\n--batch               Start pymol in batch\
    \ mode"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: visualize_rna.py [-h] [--keep-length-one-stems] [--pseudoknots]\n\
  \                        [--chains CHAINS]\n                        [--pdb-secondary-structure\
  \ PDB_SECONDARY_STRUCTURE]\n                        [--pdb-annotation-tool PDB_ANNOTATION_TOOL]\n\
  \                        [--pdb-allow-www-query] [-v] [--debug [DEBUG]]\n      \
  \                  [-q [QUIET]] [--thin-cylinders THIN_CYLINDERS]\n            \
  \            [--virtual-atoms] [--virtual-residues]\n                        [--only-elements\
  \ ONLY_ELEMENTS] [--no-loops]\n                        [--longrange] [--stem-color\
  \ STEM_COLOR]\n                        [--multiloop-color MULTILOOP_COLOR] [-x]\n\
  \                        [--labels LABELS] [--sidechain-atoms] [--rainbow]\n   \
  \                     [--element-colors ELEMENT_COLORS] [--align]\n            \
  \            [-o OUTPUT] [--batch]\n                        rna [rna ...]\n\nVisualize\
  \ a 3D structure in pymol.\n\npositional arguments:\n  rna                   One\
  \ or more files containing one or more RNAs each.\n                        Supported\
  \ Filetypes are: pdb files, forgi cg files\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  --keep-length-one-stems\n      \
  \                  For all input formats except forgi bg/cg files, this\n      \
  \                  controlls whether stems of length one are dissolved to\n    \
  \                    unpaired regions (default) or kept (if this option is\n   \
  \                     present). In the case of input in forgi-format, the\n    \
  \                    RNA from the file is not modified.\n  --thin-cylinders THIN_CYLINDERS\n\
  \                        Make coarse_grain RNA thinner\n  --virtual-atoms      \
  \ Display the virtual atoms\n  --virtual-residues    Display the virtual residues\
  \ as spheres\n  --only-elements ONLY_ELEMENTS\n                        Display only\
  \ these elements, separated by commas\n  --no-loops            Don't display the\
  \ coarse-grain hairpin loops\n  --longrange           Display long-range interactions\n\
  \  --stem-color STEM_COLOR\n                        The default stem color in coarse-grain\
  \ drawings\n  --multiloop-color MULTILOOP_COLOR\n                        The default\
  \ multiloop color in coarse-grain drawings\n  -x, --text            Add labels indicating\
  \ the element names to the figure.\n  --labels LABELS       Add labels to elements.\
  \ Expects a comma seperated\n                        string of element:label, like\
  \ 'm0:LookHere' to display\n                        'LookHere' at the center of\
  \ 'm0'.\n  --sidechain-atoms     Include the sidechain atoms. Automatically enables\n\
  \                        --virtual-atoms\n  --rainbow             Color virtual\
  \ atoms (if displayed) depending on the\n                        nucleotide position.\n\
  \  --element-colors ELEMENT_COLORS\n                        Specify a color for\
  \ certain elements (comma-separated\n                        element names or element_name:color)Example:\
  \ \"m1,m2\"\n                        (makes m1, m2 purple) or\n                \
  \        \"m0:red,m1:green,s0:AA11GG,default:black\", where\n                  \
  \      \"AA11GG\" is a hex value and \"default\" addresses all\n               \
  \         other elements. Warning: colors not understood by\n                  \
  \      PYMOL will be interpreted as black.\n  --align               Align the RNAs\
  \ (if multiple are provided)\n  -o OUTPUT, --output OUTPUT\n                   \
  \     Create a picture of the scene and exit\n  --batch               Start pymol\
  \ in batch mode\n\nOptions for loading of PDB files:\n  These options only take\
  \ effect, if the input RNA is in pdb file format.\n\n  --pseudoknots         Allow\
  \ pseudoknots when extracting the structure from\n                        PDB files.\n\
  \  --chains CHAINS       When reading pdb-files: Only extract the given\n      \
  \                  chain(s). Comma-seperated\n  --pdb-secondary-structure PDB_SECONDARY_STRUCTURE\n\
  \                        When reading a single chain from a pdb-files: Enforce\n\
  \                        the secondary structure given as dotbracket string.\n \
  \                       (This only works, if --chain is given!)\n  --pdb-annotation-tool\
  \ PDB_ANNOTATION_TOOL\n                        What program to use for detecting\
  \ basepairs in PDB/\n                        MMCIF structures. This commandline\
  \ option overrides\n                        the value in the config file (if present).If\
  \ this is\n                        not present and no config-file is given, we try\
  \ to\n                        detect the installed programs.\n  --pdb-allow-www-query\n\
  \                        Usually, if modified residues/ ligand with an unknown\n\
  \                        3-letter code are encountered in PDB files, they are\n\
  \                        removed from the chain and a log message of severity\n\
  \                        INFO is issued. With this option, we first try to\n   \
  \                     query the PDBeChem database for the 3-letter code, to\n  \
  \                      see whether or not it is a modified residue that can\n  \
  \                      be converted to its standard parent and should be part\n\
  \                        of the chain.\n\nControl verbosity of logging output:\n\
  \  -v, --verbose         Show verbose output (Output logged at level\n         \
  \               logging.INFO)\n  --debug [DEBUG]       A comma-seperated list of\
  \ logger names for which debug\n                        output will be activated.WARNING:\
  \ If you misspell the\n                        logger name, this argument will be\
  \ ignored\n  -q [QUIET], --quiet [QUIET]\n                        A comma-seperated\
  \ list of logger names for which only\n                        messages logged at\
  \ the level 'CRITICAL' will be\n                        shown.Use this without arguments\
  \ if everything should\n                        be quiet.\n"
generated_using:
- --help
