!Command
command: &id001
- novolrcorrector
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - novolrcorrector
  - Read
  positional:
  - !Positional
    optional: false
    position: 0
    name: ps
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: ',COL2=HEADER     Select columns for display'
    args: !SimpleFlagArg
      name: COL1
  parent: &id012 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: ps
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ',COL2=HEADER     Select columns for display'
        args: !SimpleFlagArg
          name: COL1
      parent: &id011 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: ps
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ',COL2=HEADER     Select columns for display'
            args: !SimpleFlagArg
              name: COL1
          parent: &id010 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: ps
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ',COL2=HEADER     Select columns for display'
                args: !SimpleFlagArg
                  name: COL1
              parent: &id009 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ps
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ',COL2=HEADER     Select columns for display'
                    args: !SimpleFlagArg
                      name: COL1
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - -in
                      description: the input BAM file [stdin]
                      args: !SimpleFlagArg
                        name: BAM filename
                    - !Flag
                      optional: true
                      synonyms:
                      - -out
                      description: "the output file as alternative\nto stdout. [stdout]"
                      args: !SimpleFlagArg
                        name: filename
                    - !Flag
                      optional: true
                      synonyms:
                      - -region
                      description: "genomic region\n(chr:99..[chr:]999). Index file\
                        \ is\nrecommended for better performance, and is\nused automatically\
                        \ if it exists. See\n'bamtools help index' for more details\
                        \ on\ncreating one"
                      args: !SimpleFlagArg
                        name: REGION
                    - !Flag
                      optional: true
                      synonyms:
                      - -fasta
                      description: "Original Pacbio FASTA reads\nfile as used in alignment\
                        \ process."
                      args: !SimpleFlagArg
                        name: FASTA filename
                    - !Flag
                      optional: true
                      synonyms:
                      - -use
                      description: "Fraction of alignments to use\nwhen calling a\
                        \ consensus base. Chooses the\nalignments with the lowest\
                        \ Alignment Score\nplus Single End Penalty. [0.3300]"
                      args: !SimpleFlagArg
                        name: 0.0 to 1.0
                    - !Flag
                      optional: true
                      synonyms:
                      - -atLeast
                      description: "Use at least this many\nalignments if fraction\
                        \ rule would use less\nalignments. [4]"
                      args: !SimpleFlagArg
                        name: unsigned int
                    - !Flag
                      optional: true
                      synonyms:
                      - -atMost
                      description: "Don't use more this many\nalignments even if fraction\
                        \ rule would use\nmore alignments. [50]"
                      args: !SimpleFlagArg
                        name: unsigned int
                    - !Flag
                      optional: true
                      synonyms:
                      - -minCover
                      description: "Only correct if we have at\nleast this many alignments.\
                        \ [2]"
                      args: !SimpleFlagArg
                        name: unsigned int
                    - !Flag
                      optional: true
                      synonyms:
                      - -sePenalty
                      description: "Penalty applied to improper\npairs and single\
                        \ end reads when ranking\nalignments. [70]"
                      args: !SimpleFlagArg
                        name: unsigned int
                    - !Flag
                      optional: true
                      synonyms:
                      - -fullLR
                      description: "Output full length of Long\nRead read including\
                        \ uncorrected bases.\nDefault trims uncorrected ends of reads."
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -SVSplit
                      description: "Split Reads at locii not\ncovered by a proper\
                        \ pair. Default is not\nto split the reads."
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -uncorrectedLR
                      description: "Output all Long Reads\nincluding those with no\
                        \ alignments.\nDefault is to skip output of reads with no\n\
                        alignments."
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -fq
                      description: "Output is in FASTQ, Default is\nFASTA format."
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -baseq
                      description: "Assumed phred scaled base\nquality for input fasta.\
                        \ [10]"
                      args: !SimpleFlagArg
                        name: unsigned int
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ps
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: ',COL2=HEADER     Select columns for display'
                        args: !SimpleFlagArg
                          name: COL1
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                        \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                        \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect\
                        \ columns for display\n\nError: novolrcorrector requires a\
                        \ valid NovoLR license.\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - novolrcorrector
                      - Novocraft
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ps
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: ',COL2=HEADER     Select columns for display'
                        args: !SimpleFlagArg
                          name: COL1
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                        \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                        \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect\
                        \ columns for display\n\nError: novolrcorrector requires a\
                        \ valid NovoLR license.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - novolrcorrector
                      - Corrector
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ps
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: ',COL2=HEADER     Select columns for display'
                        args: !SimpleFlagArg
                          name: COL1
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                        \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                        \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect\
                        \ columns for display\n\nError: novolrcorrector requires a\
                        \ valid NovoLR license.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - novolrcorrector
                      - Long
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ps
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: ',COL2=HEADER     Select columns for display'
                        args: !SimpleFlagArg
                          name: COL1
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                        \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                        \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect\
                        \ columns for display\n\nError: novolrcorrector requires a\
                        \ valid NovoLR license.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - novolrcorrector
                      - format-specific
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ps
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: ',COL2=HEADER     Select columns for display'
                        args: !SimpleFlagArg
                          name: COL1
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                        \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                        \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect\
                        \ columns for display\n\nError: novolrcorrector requires a\
                        \ valid NovoLR license.\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - --help
                      - -h
                      description: shows this help text
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "Description: Prints consensus corrected long reads\
                      \ for improved assemblies..\n\nUsage: Novocraft Long Read Corrector\
                      \ [-in <filename>] [-out <filename>]  [-region <REGION>] [format-specific\
                      \ options]\n\nOptions::\n  -in <BAM filename>              \
                      \  the input BAM file [stdin]\n  -out <filename>           \
                      \        the output file as alternative\n                  \
                      \                  to stdout. [stdout]\n  -region <REGION> \
                      \                 genomic region\n                         \
                      \           (chr:99..[chr:]999). Index file is\n           \
                      \                         recommended for better performance,\
                      \ and is\n                                    used automatically\
                      \ if it exists. See\n                                    'bamtools\
                      \ help index' for more details on\n                        \
                      \            creating one\n  -fasta <FASTA filename>       \
                      \    Original Pacbio FASTA reads\n                         \
                      \           file as used in alignment process.\n  -use <0.0\
                      \ to 1.0>                 Fraction of alignments to use\n  \
                      \                                  when calling a consensus\
                      \ base. Chooses the\n                                    alignments\
                      \ with the lowest Alignment Score\n                        \
                      \            plus Single End Penalty. [0.3300]\n  -atLeast <unsigned\
                      \ int>           Use at least this many\n                  \
                      \                  alignments if fraction rule would use less\n\
                      \                                    alignments. [4]\n  -atMost\
                      \ <unsigned int>            Don't use more this many\n     \
                      \                               alignments even if fraction\
                      \ rule would use\n                                    more alignments.\
                      \ [50]\n  -minCover <unsigned int>          Only correct if\
                      \ we have at\n                                    least this\
                      \ many alignments. [2]\n  -sePenalty <unsigned int>        \
                      \ Penalty applied to improper\n                            \
                      \        pairs and single end reads when ranking\n         \
                      \                           alignments. [70]\n  -fullLR    \
                      \                       Output full length of Long\n       \
                      \                             Read read including uncorrected\
                      \ bases.\n                                    Default trims\
                      \ uncorrected ends of reads.\n  -SVSplit                   \
                      \       Split Reads at locii not\n                         \
                      \           covered by a proper pair. Default is not\n     \
                      \                               to split the reads.\n  -uncorrectedLR\
                      \                    Output all Long Reads\n               \
                      \                     including those with no alignments.\n\
                      \                                    Default is to skip output\
                      \ of reads with no\n                                    alignments.\n\
                      \  -fq                               Output is in FASTQ, Default\
                      \ is\n                                    FASTA format.\n  -baseq\
                      \ <unsigned int>             Assumed phred scaled base\n   \
                      \                                 quality for input fasta. [10]\n\
                      \nHelp:\n  --help, -h                        shows this help\
                      \ text\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                    \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                    \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns\
                    \ for display\n\nError: novolrcorrector requires a valid NovoLR\
                    \ license.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ps
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ',COL2=HEADER     Select columns for display'
                    args: !SimpleFlagArg
                      name: COL1
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                    \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                    \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns\
                    \ for display\n\nError: novolrcorrector requires a valid NovoLR\
                    \ license.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ps
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ',COL2=HEADER     Select columns for display'
                    args: !SimpleFlagArg
                      name: COL1
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                    \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                    \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns\
                    \ for display\n\nError: novolrcorrector requires a valid NovoLR\
                    \ license.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ps
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ',COL2=HEADER     Select columns for display'
                    args: !SimpleFlagArg
                      name: COL1
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                    \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                    \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns\
                    \ for display\n\nError: novolrcorrector requires a valid NovoLR\
                    \ license.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ps
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ',COL2=HEADER     Select columns for display'
                    args: !SimpleFlagArg
                      name: COL1
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23\
                    \ 01:24:27 UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\
                    \nShow list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns\
                    \ for display\n\nError: novolrcorrector requires a valid NovoLR\
                    \ license.\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Description: Prints consensus corrected long reads for\
                  \ improved assemblies..\n\nUsage: Novocraft Long Read Corrector\
                  \ [-in <filename>] [-out <filename>]  [-region <REGION>] [format-specific\
                  \ options]\n\nOptions::\n  -in <BAM filename>                the\
                  \ input BAM file [stdin]\n  -out <filename>                   the\
                  \ output file as alternative\n                                 \
                  \   to stdout. [stdout]\n  -region <REGION>                  genomic\
                  \ region\n                                    (chr:99..[chr:]999).\
                  \ Index file is\n                                    recommended\
                  \ for better performance, and is\n                             \
                  \       used automatically if it exists. See\n                 \
                  \                   'bamtools help index' for more details on\n\
                  \                                    creating one\n  -fasta <FASTA\
                  \ filename>           Original Pacbio FASTA reads\n            \
                  \                        file as used in alignment process.\n  -use\
                  \ <0.0 to 1.0>                 Fraction of alignments to use\n \
                  \                                   when calling a consensus base.\
                  \ Chooses the\n                                    alignments with\
                  \ the lowest Alignment Score\n                                 \
                  \   plus Single End Penalty. [0.3300]\n  -atLeast <unsigned int>\
                  \           Use at least this many\n                           \
                  \         alignments if fraction rule would use less\n         \
                  \                           alignments. [4]\n  -atMost <unsigned\
                  \ int>            Don't use more this many\n                   \
                  \                 alignments even if fraction rule would use\n \
                  \                                   more alignments. [50]\n  -minCover\
                  \ <unsigned int>          Only correct if we have at\n         \
                  \                           least this many alignments. [2]\n  -sePenalty\
                  \ <unsigned int>         Penalty applied to improper\n         \
                  \                           pairs and single end reads when ranking\n\
                  \                                    alignments. [70]\n  -fullLR\
                  \                           Output full length of Long\n       \
                  \                             Read read including uncorrected bases.\n\
                  \                                    Default trims uncorrected ends\
                  \ of reads.\n  -SVSplit                          Split Reads at\
                  \ locii not\n                                    covered by a proper\
                  \ pair. Default is not\n                                    to split\
                  \ the reads.\n  -uncorrectedLR                    Output all Long\
                  \ Reads\n                                    including those with\
                  \ no alignments.\n                                    Default is\
                  \ to skip output of reads with no\n                            \
                  \        alignments.\n  -fq                               Output\
                  \ is in FASTQ, Default is\n                                    FASTA\
                  \ format.\n  -baseq <unsigned int>             Assumed phred scaled\
                  \ base\n                                    quality for input fasta.\
                  \ [10]\n\nHelp:\n  --help, -h                        shows this\
                  \ help text\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
                \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow\
                \ list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\
                \nError: novolrcorrector requires a valid NovoLR license.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: ps
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ',COL2=HEADER     Select columns for display'
                args: !SimpleFlagArg
                  name: COL1
              parent: *id009
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
                \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow\
                \ list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\
                \nError: novolrcorrector requires a valid NovoLR license.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: ps
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ',COL2=HEADER     Select columns for display'
                args: !SimpleFlagArg
                  name: COL1
              parent: *id009
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
                \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow\
                \ list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\
                \nError: novolrcorrector requires a valid NovoLR license.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: ps
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ',COL2=HEADER     Select columns for display'
                args: !SimpleFlagArg
                  name: COL1
              parent: *id009
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
                \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow\
                \ list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\
                \nError: novolrcorrector requires a valid NovoLR license.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional:
              - !Positional
                optional: false
                position: 0
                name: ps
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ',COL2=HEADER     Select columns for display'
                args: !SimpleFlagArg
                  name: COL1
              parent: *id009
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
                \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow\
                \ list of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\
                \nError: novolrcorrector requires a valid NovoLR license.\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Description: Prints consensus corrected long reads for improved\
              \ assemblies..\n\nUsage: Novocraft Long Read Corrector [-in <filename>]\
              \ [-out <filename>]  [-region <REGION>] [format-specific options]\n\n\
              Options::\n  -in <BAM filename>                the input BAM file [stdin]\n\
              \  -out <filename>                   the output file as alternative\n\
              \                                    to stdout. [stdout]\n  -region\
              \ <REGION>                  genomic region\n                       \
              \             (chr:99..[chr:]999). Index file is\n                 \
              \                   recommended for better performance, and is\n   \
              \                                 used automatically if it exists. See\n\
              \                                    'bamtools help index' for more\
              \ details on\n                                    creating one\n  -fasta\
              \ <FASTA filename>           Original Pacbio FASTA reads\n         \
              \                           file as used in alignment process.\n  -use\
              \ <0.0 to 1.0>                 Fraction of alignments to use\n     \
              \                               when calling a consensus base. Chooses\
              \ the\n                                    alignments with the lowest\
              \ Alignment Score\n                                    plus Single End\
              \ Penalty. [0.3300]\n  -atLeast <unsigned int>           Use at least\
              \ this many\n                                    alignments if fraction\
              \ rule would use less\n                                    alignments.\
              \ [4]\n  -atMost <unsigned int>            Don't use more this many\n\
              \                                    alignments even if fraction rule\
              \ would use\n                                    more alignments. [50]\n\
              \  -minCover <unsigned int>          Only correct if we have at\n  \
              \                                  least this many alignments. [2]\n\
              \  -sePenalty <unsigned int>         Penalty applied to improper\n \
              \                                   pairs and single end reads when\
              \ ranking\n                                    alignments. [70]\n  -fullLR\
              \                           Output full length of Long\n           \
              \                         Read read including uncorrected bases.\n \
              \                                   Default trims uncorrected ends of\
              \ reads.\n  -SVSplit                          Split Reads at locii not\n\
              \                                    covered by a proper pair. Default\
              \ is not\n                                    to split the reads.\n\
              \  -uncorrectedLR                    Output all Long Reads\n       \
              \                             including those with no alignments.\n\
              \                                    Default is to skip output of reads\
              \ with no\n                                    alignments.\n  -fq  \
              \                             Output is in FASTQ, Default is\n     \
              \                               FASTA format.\n  -baseq <unsigned int>\
              \             Assumed phred scaled base\n                          \
              \          quality for input fasta. [10]\n\nHelp:\n  --help, -h    \
              \                    shows this help text\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
            \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
            \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\n\
            Error: novolrcorrector requires a valid NovoLR license.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: ps
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ',COL2=HEADER     Select columns for display'
            args: !SimpleFlagArg
              name: COL1
          parent: *id010
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
            \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
            \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\n\
            Error: novolrcorrector requires a valid NovoLR license.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: ps
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ',COL2=HEADER     Select columns for display'
            args: !SimpleFlagArg
              name: COL1
          parent: *id010
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
            \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
            \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\n\
            Error: novolrcorrector requires a valid NovoLR license.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: ps
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ',COL2=HEADER     Select columns for display'
            args: !SimpleFlagArg
              name: COL1
          parent: *id010
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
            \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
            \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\n\
            Error: novolrcorrector requires a valid NovoLR license.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional:
          - !Positional
            optional: false
            position: 0
            name: ps
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ',COL2=HEADER     Select columns for display'
            args: !SimpleFlagArg
              name: COL1
          parent: *id010
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
            \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
            \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\n\
            Error: novolrcorrector requires a valid NovoLR license.\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Description: Prints consensus corrected long reads for improved\
          \ assemblies..\n\nUsage: Novocraft Long Read Corrector [-in <filename>]\
          \ [-out <filename>]  [-region <REGION>] [format-specific options]\n\nOptions::\n\
          \  -in <BAM filename>                the input BAM file [stdin]\n  -out\
          \ <filename>                   the output file as alternative\n        \
          \                            to stdout. [stdout]\n  -region <REGION>   \
          \               genomic region\n                                    (chr:99..[chr:]999).\
          \ Index file is\n                                    recommended for better\
          \ performance, and is\n                                    used automatically\
          \ if it exists. See\n                                    'bamtools help\
          \ index' for more details on\n                                    creating\
          \ one\n  -fasta <FASTA filename>           Original Pacbio FASTA reads\n\
          \                                    file as used in alignment process.\n\
          \  -use <0.0 to 1.0>                 Fraction of alignments to use\n   \
          \                                 when calling a consensus base. Chooses\
          \ the\n                                    alignments with the lowest Alignment\
          \ Score\n                                    plus Single End Penalty. [0.3300]\n\
          \  -atLeast <unsigned int>           Use at least this many\n          \
          \                          alignments if fraction rule would use less\n\
          \                                    alignments. [4]\n  -atMost <unsigned\
          \ int>            Don't use more this many\n                           \
          \         alignments even if fraction rule would use\n                 \
          \                   more alignments. [50]\n  -minCover <unsigned int>  \
          \        Only correct if we have at\n                                  \
          \  least this many alignments. [2]\n  -sePenalty <unsigned int>        \
          \ Penalty applied to improper\n                                    pairs\
          \ and single end reads when ranking\n                                  \
          \  alignments. [70]\n  -fullLR                           Output full length\
          \ of Long\n                                    Read read including uncorrected\
          \ bases.\n                                    Default trims uncorrected\
          \ ends of reads.\n  -SVSplit                          Split Reads at locii\
          \ not\n                                    covered by a proper pair. Default\
          \ is not\n                                    to split the reads.\n  -uncorrectedLR\
          \                    Output all Long Reads\n                           \
          \         including those with no alignments.\n                        \
          \            Default is to skip output of reads with no\n              \
          \                      alignments.\n  -fq                              \
          \ Output is in FASTQ, Default is\n                                    FASTA\
          \ format.\n  -baseq <unsigned int>             Assumed phred scaled base\n\
          \                                    quality for input fasta. [10]\n\nHelp:\n\
          \  --help, -h                        shows this help text\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
        \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
        \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError:\
        \ novolrcorrector requires a valid NovoLR license.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: ps
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ',COL2=HEADER     Select columns for display'
        args: !SimpleFlagArg
          name: COL1
      parent: *id011
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
        \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
        \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError:\
        \ novolrcorrector requires a valid NovoLR license.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: ps
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ',COL2=HEADER     Select columns for display'
        args: !SimpleFlagArg
          name: COL1
      parent: *id011
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
        \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
        \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError:\
        \ novolrcorrector requires a valid NovoLR license.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: ps
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ',COL2=HEADER     Select columns for display'
        args: !SimpleFlagArg
          name: COL1
      parent: *id011
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
        \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
        \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError:\
        \ novolrcorrector requires a valid NovoLR license.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional:
      - !Positional
        optional: false
        position: 0
        name: ps
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ',COL2=HEADER     Select columns for display'
        args: !SimpleFlagArg
          name: COL1
      parent: *id011
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27\
        \ UTC) multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list\
        \ of processes\n\n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError:\
        \ novolrcorrector requires a valid NovoLR license.\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Description: Prints consensus corrected long reads for improved assemblies..\n\
      \nUsage: Novocraft Long Read Corrector [-in <filename>] [-out <filename>]  [-region\
      \ <REGION>] [format-specific options]\n\nOptions::\n  -in <BAM filename>   \
      \             the input BAM file [stdin]\n  -out <filename>                \
      \   the output file as alternative\n                                    to stdout.\
      \ [stdout]\n  -region <REGION>                  genomic region\n           \
      \                         (chr:99..[chr:]999). Index file is\n             \
      \                       recommended for better performance, and is\n       \
      \                             used automatically if it exists. See\n       \
      \                             'bamtools help index' for more details on\n  \
      \                                  creating one\n  -fasta <FASTA filename> \
      \          Original Pacbio FASTA reads\n                                   \
      \ file as used in alignment process.\n  -use <0.0 to 1.0>                 Fraction\
      \ of alignments to use\n                                    when calling a consensus\
      \ base. Chooses the\n                                    alignments with the\
      \ lowest Alignment Score\n                                    plus Single End\
      \ Penalty. [0.3300]\n  -atLeast <unsigned int>           Use at least this many\n\
      \                                    alignments if fraction rule would use less\n\
      \                                    alignments. [4]\n  -atMost <unsigned int>\
      \            Don't use more this many\n                                    alignments\
      \ even if fraction rule would use\n                                    more\
      \ alignments. [50]\n  -minCover <unsigned int>          Only correct if we have\
      \ at\n                                    least this many alignments. [2]\n\
      \  -sePenalty <unsigned int>         Penalty applied to improper\n         \
      \                           pairs and single end reads when ranking\n      \
      \                              alignments. [70]\n  -fullLR                 \
      \          Output full length of Long\n                                    Read\
      \ read including uncorrected bases.\n                                    Default\
      \ trims uncorrected ends of reads.\n  -SVSplit                          Split\
      \ Reads at locii not\n                                    covered by a proper\
      \ pair. Default is not\n                                    to split the reads.\n\
      \  -uncorrectedLR                    Output all Long Reads\n               \
      \                     including those with no alignments.\n                \
      \                    Default is to skip output of reads with no\n          \
      \                          alignments.\n  -fq                              \
      \ Output is in FASTQ, Default is\n                                    FASTA\
      \ format.\n  -baseq <unsigned int>             Assumed phred scaled base\n \
      \                                   quality for input fasta. [10]\n\nHelp:\n\
      \  --help, -h                        shows this help text\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27 UTC)\
    \ multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list of processes\n\
    \n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError: novolrcorrector\
    \ requires a valid NovoLR license.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: ps
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: ',COL2=HEADER     Select columns for display'
    args: !SimpleFlagArg
      name: COL1
  parent: *id012
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27 UTC)\
    \ multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list of processes\n\
    \n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError: novolrcorrector\
    \ requires a valid NovoLR license.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: ps
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: ',COL2=HEADER     Select columns for display'
    args: !SimpleFlagArg
      name: COL1
  parent: *id012
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27 UTC)\
    \ multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list of processes\n\
    \n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError: novolrcorrector\
    \ requires a valid NovoLR license.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: ps
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: ',COL2=HEADER     Select columns for display'
    args: !SimpleFlagArg
      name: COL1
  parent: *id012
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27 UTC)\
    \ multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list of processes\n\
    \n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError: novolrcorrector\
    \ requires a valid NovoLR license.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional:
  - !Positional
    optional: false
    position: 0
    name: ps
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: ',COL2=HEADER     Select columns for display'
    args: !SimpleFlagArg
      name: COL1
  parent: *id012
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "ps: invalid option -- 'p'\nBusyBox v1.22.1 (2014-05-23 01:24:27 UTC)\
    \ multi-call binary.\n\nUsage: ps [-o COL1,COL2=HEADER]\n\nShow list of processes\n\
    \n\t-o COL1,COL2=HEADER\tSelect columns for display\n\nError: novolrcorrector\
    \ requires a valid NovoLR license.\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Description: Prints consensus corrected long reads for improved assemblies..\n\
  \nUsage: Novocraft Long Read Corrector [-in <filename>] [-out <filename>]  [-region\
  \ <REGION>] [format-specific options]\n\nOptions::\n  -in <BAM filename>       \
  \         the input BAM file [stdin]\n  -out <filename>                   the output\
  \ file as alternative\n                                    to stdout. [stdout]\n\
  \  -region <REGION>                  genomic region\n                          \
  \          (chr:99..[chr:]999). Index file is\n                                \
  \    recommended for better performance, and is\n                              \
  \      used automatically if it exists. See\n                                  \
  \  'bamtools help index' for more details on\n                                 \
  \   creating one\n  -fasta <FASTA filename>           Original Pacbio FASTA reads\n\
  \                                    file as used in alignment process.\n  -use\
  \ <0.0 to 1.0>                 Fraction of alignments to use\n                 \
  \                   when calling a consensus base. Chooses the\n               \
  \                     alignments with the lowest Alignment Score\n             \
  \                       plus Single End Penalty. [0.3300]\n  -atLeast <unsigned\
  \ int>           Use at least this many\n                                    alignments\
  \ if fraction rule would use less\n                                    alignments.\
  \ [4]\n  -atMost <unsigned int>            Don't use more this many\n          \
  \                          alignments even if fraction rule would use\n        \
  \                            more alignments. [50]\n  -minCover <unsigned int> \
  \         Only correct if we have at\n                                    least\
  \ this many alignments. [2]\n  -sePenalty <unsigned int>         Penalty applied\
  \ to improper\n                                    pairs and single end reads when\
  \ ranking\n                                    alignments. [70]\n  -fullLR     \
  \                      Output full length of Long\n                            \
  \        Read read including uncorrected bases.\n                              \
  \      Default trims uncorrected ends of reads.\n  -SVSplit                    \
  \      Split Reads at locii not\n                                    covered by\
  \ a proper pair. Default is not\n                                    to split the\
  \ reads.\n  -uncorrectedLR                    Output all Long Reads\n          \
  \                          including those with no alignments.\n               \
  \                     Default is to skip output of reads with no\n             \
  \                       alignments.\n  -fq                               Output\
  \ is in FASTQ, Default is\n                                    FASTA format.\n \
  \ -baseq <unsigned int>             Assumed phred scaled base\n                \
  \                    quality for input fasta. [10]\n\nHelp:\n  --help, -h      \
  \                  shows this help text\n"
generated_using: *id004
docker_image:
