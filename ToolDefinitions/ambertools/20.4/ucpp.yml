!Command
command:
- ucpp
positional:
- !Positional
  optional: true
  position: 0
  name: file
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -C
  description: keep comments in output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: keep '#' when no cpp directive is recognized
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: do not emit line numbers
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -lg
  description: emit gcc-like line numbers
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -CC
  description: disable C++-like comments
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  - -na
  - -a0
  description: handle (or not) assertions
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -V
  description: disable macros with extra arguments
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  description: understand UTF-8 in source
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  description: enable -a, -u and -Y
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c90
  description: mimic C90 behaviour
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: disable trigraph support
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -wt
  description: emit a final warning when trigaphs are encountered
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -wtt
  description: emit warnings for each trigaph encountered
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -wa
  description: emit warnings that are usually useless
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w0
  description: disable standard warnings
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -I
  description: add 'directory' before the standard include path
  args: !SimpleFlagArg
    name: directory
- !Flag
  optional: true
  synonyms:
  - -J
  description: add 'directory' after the standard include path
  args: !SimpleFlagArg
    name: directory
- !Flag
  optional: true
  synonyms:
  - -zI
  description: do not use the standard include path
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  description: emit Makefile-like dependencies instead of normal output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Ma
  description: emit also dependancies for system files
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: store output in file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -Umacro
  description: undefine 'macro'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Afoo
  description: (bar)      assert foo(bar)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Bfoo
  description: (bar)      unassert foo(bar)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Y
  description: predefine system-dependant macros
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Z
  description: do not predefine special macros
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: emit defined macros
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: emit assertions
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: print version number and settings
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: show this help
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: ucpp [options] [file]\nlanguage options:\n  -C              keep\
  \ comments in output\n  -s              keep '#' when no cpp directive is recognized\n\
  \  -l              do not emit line numbers\n  -lg             emit gcc-like line\
  \ numbers\n  -CC             disable C++-like comments\n  -a, -na, -a0    handle\
  \ (or not) assertions\n  -V              disable macros with extra arguments\n \
  \ -u              understand UTF-8 in source\n  -X              enable -a, -u and\
  \ -Y\n  -c90            mimic C90 behaviour\n  -t              disable trigraph\
  \ support\nwarning options:\n  -wt             emit a final warning when trigaphs\
  \ are encountered\n  -wtt            emit warnings for each trigaph encountered\n\
  \  -wa             emit warnings that are usually useless\n  -w0             disable\
  \ standard warnings\ndirectory options:\n  -I directory    add 'directory' before\
  \ the standard include path\n  -J directory    add 'directory' after the standard\
  \ include path\n  -zI             do not use the standard include path\n  -M   \
  \           emit Makefile-like dependencies instead of normal output\n  -Ma    \
  \         emit also dependancies for system files\n  -o file         store output\
  \ in file\nmacro and assertion options:\n  -Dmacro         predefine 'macro'\n \
  \ -Dmacro=def     predefine 'macro' with 'def' content\n  -Umacro         undefine\
  \ 'macro'\n  -Afoo(bar)      assert foo(bar)\n  -Bfoo(bar)      unassert foo(bar)\n\
  \  -Y              predefine system-dependant macros\n  -Z              do not predefine\
  \ special macros\n  -d              emit defined macros\n  -e              emit\
  \ assertions\nmisc options:\n  -v              print version number and settings\n\
  \  -h              show this help\n"
generated_using:
- -h
docker_image:
