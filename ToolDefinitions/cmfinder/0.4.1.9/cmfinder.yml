!Command
command:
- cmfinder
positional:
- !Positional
  optional: false
  position: 0
  name: seqfile in
  description: ''
- !Positional
  optional: false
  position: 1
  name: cmfile output
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -c
  description: ': the candidate file'
  args: !SimpleFlagArg
    name: candidate file
- !Flag
  optional: true
  synonyms:
  - -a
  description: ': the initial motif alignment'
  args: !SimpleFlagArg
    name: align file
- !Flag
  optional: true
  synonyms:
  - -i
  description: ': the initial covariance model'
  args: !SimpleFlagArg
    name: cm file
- !Flag
  optional: true
  synonyms:
  - -o
  description: ': the output motif structural alignment in stockholm format'
  args: !SimpleFlagArg
    name: align file
- !Flag
  optional: true
  synonyms:
  - -v
  description: ': print intermediate alignments'
  args: !SimpleFlagArg
    name: verbose
- !Flag
  optional: true
  synonyms:
  - --g
  description: ': the gap threshold to determine the conserved column'
  args: !SimpleFlagArg
    name: gap threshold
- !Flag
  optional: true
  synonyms:
  - --hmm
  description: ': apply HMM filter'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cmzasha
  description: ': apply cmzasha filter'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --update
  description: ': Update instead of scanning for new candidates at each iteration'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --informat
  description: ': specify that input alignment is in format <s>'
  args: !SimpleFlagArg
    name: s
- !Flag
  optional: true
  synonyms:
  - --fragmentary
  description: ': account for fragmentary input sequences'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -options
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': print short help and version info'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "cmfinder: learning motif covariance model for unaligned sequences\n\n\t\
  \t\t\t\t   Usage: cmfinder [-options] <seqfile in> <cmfile output> \n\t\t\t\t\t\
  \   where options are:\n\t\t\t\t\t   -c <candidate file>: the candidate file \n\t\
  \t\t\t\t   -a <align file>    : the initial motif alignment \n\t\t\t\t\t   -i <cm\
  \ file>       : the initial covariance model\n\t\t\t\t\t   -o <align file>    :\
  \ the output motif structural alignment in stockholm format \n\t\t\t\t\t   -v verbose\
  \         : print intermediate alignments \n\t\t\t\t\t\t   -h                 :\
  \ print short help and version info\n\t\t\t\t\t   \n\t\t\t\t\t\tExpert, in development,\
  \ or infrequently used options are:\n\t\t\t\t\t\t\t\t--g <gap threshold> : the gap\
  \ threshold to determine the conserved column\n\t\t\t\t\t\t--hmm               :\
  \ apply HMM filter \n\t\t\t\t\t\t--cmzasha           : apply cmzasha filter \n\t\
  \t\t\t\t\t\t\t\t\t--update            : Update instead of scanning for new candidates\
  \ at each iteration \n\t\t\t\t\t\t--informat <s>: specify that input alignment is\
  \ in format <s>\n\t\t\t\t\t\t--fragmentary : account for fragmentary input sequences\n\
  \t\t\t\t\t\t\n"
generated_using:
- -h
docker_image:
