!Command
command:
- scanpy-run-umap
positional:
- !Positional
  optional: false
  position: 0
  name: table.
  description: --init-pos TEXT                 How to initialize the low dimensional
- !Positional
  optional: false
  position: 0
  name: optimization.
  description: --alpha FLOAT                   The initial learning rate for the embedding
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --input-format
  description: "[anndata|loom]\nInput object format.  [default: anndata]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -F
  - --output-format
  description: "[anndata|loom|zarr]\nOutput object format.  [default: anndata]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --zarr-chunk-size
  description: Chunk size for writing output in zarr
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - -b
  - --loom-write-obsm-varm
  description: "Write obsm and varm to the Loom file?\n[default: False]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  - --export-mtx
  description: "When specified, using it as prefix for\nexporting mtx files. If not\
    \ empty and not\nending with \"/\" or \"_\", a \"_\" will be\nappended."
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - --show-obj
  description: "[stdout|stderr]      Print output object summary info to\nspecified\
    \ stream."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --neighbors-key
  description: "If not specified, look in .uns[‘neighbors’]\nfor neighbors settings\
    \ and\n.obsp[‘connectivities’], .obsp[‘distances’]\nfor connectivities and distances\n\
    respectively (default storage places for\npp.neighbors). If specified, look in\n\
    .uns[neighbors_key] for neighbors settings\nand .obsp[.uns[neighbors_key][‘connectivitie\n\
    s_key’]],\n.obsp[.uns[neighbors_key][‘distances_key’]]\nfor connectivities and\
    \ distances\nrespectively."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - -S
  - --random-state
  description: "Seed for random number generator.  [default:\n0]"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --key-added
  description: Key under which to add the computed results
  args: !OptionalFlagArg
    names:
    - TEXT
    - TEXT...
    separator: ','
- !Flag
  optional: true
  synonyms:
  - -E
  - --export-embedding
  description: Export embeddings in a tab-separated text
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --min-dist
  description: "The effective minimum distance between\nembedded points. Smaller values\
    \ will result\nin a more clustered embedding, while larger\nvalues will results\
    \ in a more even dispersal\nof points.  [default: 0.5]"
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --spread
  description: "The effective scale of embedded points,\nwhich determines the scale\
    \ at which embedded\npoints will be spread out.  [default: 1.0]"
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --n-components
  description: "The number of dimensions of the embedding.\n[default: 2]"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --maxiter
  description: The number of iterations of the
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --gamma
  description: "Weighting applied to negative samples in low\ndimensional embedding\
    \ optimization.\n[default: 1.0]"
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --negative-sample-rate
  description: "The number of negative edge samples to use\nper positive edge sample\
    \ in optimizing the\nlow dimensional embedding.  [default: 5]"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --method
  description: "[umap|rapids]          Use the original ‘umap’ implementation, or\n\
    ‘rapids’ (experimental, GPU only).\n[default: umap]"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: scanpy-run-umap [OPTIONS] <input_obj> <output_obj>\n\n  Embed the\
  \ neighborhood graph using UMAP.\n\n  <input_obj>:   input file in format specfied\
  \ by --input-format\n  <output_obj>:  output file in format specfied by --output-format\n\
  \nOptions:\n  -f, --input-format [anndata|loom]\n                              \
  \    Input object format.  [default: anndata]\n  -F, --output-format [anndata|loom|zarr]\n\
  \                                  Output object format.  [default: anndata]\n \
  \ -z, --zarr-chunk-size INTEGER   Chunk size for writing output in zarr\n      \
  \                            format.  [default: 1000]\n\n  -b, --loom-write-obsm-varm\
  \      Write obsm and varm to the Loom file?\n                                 \
  \ [default: False]\n\n  -X, --export-mtx PATH           When specified, using it\
  \ as prefix for\n                                  exporting mtx files. If not empty\
  \ and not\n                                  ending with \"/\" or \"_\", a \"_\"\
  \ will be\n                                  appended.\n\n  --show-obj [stdout|stderr]\
  \      Print output object summary info to\n                                  specified\
  \ stream.\n\n  --neighbors-key TEXT            If not specified, look in .uns[‘neighbors’]\n\
  \                                  for neighbors settings and\n                \
  \                  .obsp[‘connectivities’], .obsp[‘distances’]\n               \
  \                   for connectivities and distances\n                         \
  \         respectively (default storage places for\n                           \
  \       pp.neighbors). If specified, look in\n                                 \
  \ .uns[neighbors_key] for neighbors settings\n                                 \
  \ and .obsp[.uns[neighbors_key][‘connectivitie\n                               \
  \   s_key’]],\n                                  .obsp[.uns[neighbors_key][‘distances_key’]]\n\
  \                                  for connectivities and distances\n          \
  \                        respectively.\n\n  -S, --random-state INTEGER      Seed\
  \ for random number generator.  [default:\n                                  0]\n\
  \n  --key-added TEXT[,TEXT...]      Key under which to add the computed results\n\
  \  -E, --export-embedding FILE     Export embeddings in a tab-separated text\n \
  \                                 table.\n\n  --init-pos TEXT                 How\
  \ to initialize the low dimensional\n                                  embedding.\
  \ Can be \"spectral\", \"paga\" or\n                                  \"random\"\
  , or any key of `.obsm`.  [default:\n                                  spectral]\n\
  \n  --min-dist FLOAT                The effective minimum distance between\n   \
  \                               embedded points. Smaller values will result\n  \
  \                                in a more clustered embedding, while larger\n \
  \                                 values will results in a more even dispersal\n\
  \                                  of points.  [default: 0.5]\n\n  --spread FLOAT\
  \                  The effective scale of embedded points,\n                   \
  \               which determines the scale at which embedded\n                 \
  \                 points will be spread out.  [default: 1.0]\n\n  --n-components\
  \ INTEGER          The number of dimensions of the embedding.\n                \
  \                  [default: 2]\n\n  --maxiter INTEGER               The number\
  \ of iterations of the\n                                  optimization.\n\n  --alpha\
  \ FLOAT                   The initial learning rate for the embedding\n        \
  \                          optimization.  [default: 1.0]\n\n  --gamma FLOAT    \
  \               Weighting applied to negative samples in low\n                 \
  \                 dimensional embedding optimization.\n                        \
  \          [default: 1.0]\n\n  --negative-sample-rate INTEGER  The number of negative\
  \ edge samples to use\n                                  per positive edge sample\
  \ in optimizing the\n                                  low dimensional embedding.\
  \  [default: 5]\n\n  --method [umap|rapids]          Use the original ‘umap’ implementation,\
  \ or\n                                  ‘rapids’ (experimental, GPU only).\n   \
  \                               [default: umap]\n\n  --help                    \
  \      Show this message and exit.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/scanpy-scripts:0.3.3--pyhdfd78af_2
