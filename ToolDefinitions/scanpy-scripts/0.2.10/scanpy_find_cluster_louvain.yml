!Command
command:
- scanpy-find-cluster
- louvain
positional:
- !Positional
  optional: false
  position: 0
  name: table.
  description: --use-graph TEXT                Slot name under `.uns` that contains
    the KNN
- !Positional
  optional: false
  position: 0
  name: graph.
  description: '[default: True]'
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --input-format
  description: "[anndata|loom]\nInput object format.  [default: anndata]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -F
  - --output-format
  description: "[anndata|loom|zarr]\nOutput object format.  [default: anndata]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --zarr-chunk-size
  description: Chunk size for writing output in zarr
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - -X
  - --export-mtx
  description: "When specified, using it as prefix for\nexporting mtx files. If not\
    \ empty and not\nending with \"/\" or \"_\", a \"_\" will be\nappended."
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - --show-obj
  description: "[stdout|stderr]      Print output object summary info to\nspecified\
    \ stream."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --export-cluster
  description: Export embeddings in a tab-separated text
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --directed
  - --undirected
  description: Interpret the adjacency matrix as directed
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --use-weights
  description: "Use weights from KNN graph.  [default:\nFalse]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --restrict-to
  description: "<TEXT TEXT[,TEXT...]>...\nRestrict the clustering to the categories\n\
    within the key for sample annotation, in the\nform of \"obs_key list_of_categories\"\
    .\n[default: None, None]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  - --random-state
  description: "Seed for random number generator.  [default:\n0]"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --key-added
  description: Key under which to add the computed results
  args: !OptionalFlagArg
    names:
    - TEXT
    - TEXT...
    separator: ','
- !Flag
  optional: true
  synonyms:
  - --flavor
  description: "[vtraag|igraph]        Choose between two packages for computing\n\
    the clustering. \"vtraag\" is much powerful,\nand the default.  [default: vtraag]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --resolution
  description: "For the default flavor \"vtraag\", you can\nprovide a resolution.\
    \ Higher resolution\nmeans finding more and smaller clusters.\n[default: 1]"
  args: !OptionalFlagArg
    names:
    - FLOAT
    - FLOAT...
    separator: ','
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: scanpy-find-cluster louvain [OPTIONS] <input_obj> <output_obj>\n\
  \n  Find clusters by Louvain algorithm.\n\n  <input_obj>:   input file in format\
  \ specfied by --input-format\n  <output_obj>:  output file in format specfied by\
  \ --output-format\n\nOptions:\n  -f, --input-format [anndata|loom]\n           \
  \                       Input object format.  [default: anndata]\n  -F, --output-format\
  \ [anndata|loom|zarr]\n                                  Output object format. \
  \ [default: anndata]\n  -z, --zarr-chunk-size INTEGER   Chunk size for writing output\
  \ in zarr\n                                  format.  [default: 1000]\n  -X, --export-mtx\
  \ PATH           When specified, using it as prefix for\n                      \
  \            exporting mtx files. If not empty and not\n                       \
  \           ending with \"/\" or \"_\", a \"_\" will be\n                      \
  \            appended.\n  --show-obj [stdout|stderr]      Print output object summary\
  \ info to\n                                  specified stream.\n  --export-cluster\
  \ FILE           Export embeddings in a tab-separated text\n                   \
  \               table.\n  --use-graph TEXT                Slot name under `.uns`\
  \ that contains the KNN\n                                  graph of which sparse\
  \ adjacency matrix is\n                                  used for clustering.  [default:\
  \ neighbors]\n  --directed / --undirected       Interpret the adjacency matrix as\
  \ directed\n                                  graph.  [default: True]\n  --use-weights\
  \                   Use weights from KNN graph.  [default:\n                   \
  \               False]\n  --restrict-to <TEXT TEXT[,TEXT...]>...\n             \
  \                     Restrict the clustering to the categories\n              \
  \                    within the key for sample annotation, in the\n            \
  \                      form of \"obs_key list_of_categories\".\n               \
  \                   [default: None, None]\n  -S, --random-state INTEGER      Seed\
  \ for random number generator.  [default:\n                                  0]\n\
  \  --key-added TEXT[,TEXT...]      Key under which to add the computed results\n\
  \  --flavor [vtraag|igraph]        Choose between two packages for computing\n \
  \                                 the clustering. \"vtraag\" is much powerful,\n\
  \                                  and the default.  [default: vtraag]\n  -r, --resolution\
  \ FLOAT[,FLOAT...]\n                                  For the default flavor \"\
  vtraag\", you can\n                                  provide a resolution. Higher\
  \ resolution\n                                  means finding more and smaller clusters.\n\
  \                                  [default: 1]\n  --help                      \
  \    Show this message and exit.\n"
generated_using:
- --help
docker_image:
