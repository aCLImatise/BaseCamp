!Command
command:
- slice2py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -UNAME
  description: Remove any definition for NAME.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -IDIR
  description: Put DIR in the include file search path.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -E
  description: Print preprocessor output on stdout.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --output-dir
  description: Create files in the directory DIR.
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: Print debug messages.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --depend
  description: Generate Makefile dependencies.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --depend-xml
  description: Generate dependencies in XML format.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --depend-file
  description: Write dependencies to FILE instead of standard output.
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --all
  description: Generate code for Slice definitions in included files.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --checksum
  description: Generate checksums for Slice definitions.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --prefix
  description: Prepend filenames of Python modules with PREFIX.
  args: !SimpleFlagArg
    name: PREFIX
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Show this message.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: Display the Ice version.
  args: !EmptyFlagArg {}
help_text: "Usage: /usr/local/bin/slice2py [options] slice-files...\nOptions:\n-h,\
  \ --help               Show this message.\n-v, --version            Display the\
  \ Ice version.\n-DNAME                   Define NAME as 1.\n-DNAME=DEF         \
  \      Define NAME as DEF.\n-UNAME                   Remove any definition for NAME.\n\
  -IDIR                    Put DIR in the include file search path.\n-E          \
  \             Print preprocessor output on stdout.\n--output-dir DIR         Create\
  \ files in the directory DIR.\n-d, --debug              Print debug messages.\n\
  --depend                 Generate Makefile dependencies.\n--depend-xml         \
  \    Generate dependencies in XML format.\n--depend-file FILE       Write dependencies\
  \ to FILE instead of standard output.\n--all                    Generate code for\
  \ Slice definitions in included files.\n--checksum               Generate checksums\
  \ for Slice definitions.\n--prefix PREFIX          Prepend filenames of Python modules\
  \ with PREFIX.\n"
generated_using:
- --help
docker_image:
