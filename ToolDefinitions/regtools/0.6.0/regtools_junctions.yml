!Command
command: &id001
- regtools
- junctions
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - regtools
  - junctions
  - annotate
  positional:
  - !Positional
    optional: false
    position: 0
    name: junctions.bed
    description: ''
  - !Positional
    optional: false
    position: 1
    name: ref.fa
    description: ''
  - !Positional
    optional: false
    position: 2
    name: annotations.gtf
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -S
    description: single exon genes
    args: !SimpleFlagArg
      name: include
  - !Flag
    optional: true
    synonyms:
    - -o
    description: The file to write output to. [STDOUT]
    args: !SimpleFlagArg
      name: FILE
  parent: &id011 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: junctions.bed
        description: ''
      - !Positional
        optional: false
        position: 1
        name: ref.fa
        description: ''
      - !Positional
        optional: false
        position: 2
        name: annotations.gtf
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -S
        description: single exon genes
        args: !SimpleFlagArg
          name: include
      - !Flag
        optional: true
        synonyms:
        - -o
        description: The file to write output to. [STDOUT]
        args: !SimpleFlagArg
          name: FILE
      parent: &id010 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: junctions.bed
            description: ''
          - !Positional
            optional: false
            position: 1
            name: ref.fa
            description: ''
          - !Positional
            optional: false
            position: 2
            name: annotations.gtf
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -S
            description: single exon genes
            args: !SimpleFlagArg
              name: include
          - !Flag
            optional: true
            synonyms:
            - -o
            description: The file to write output to. [STDOUT]
            args: !SimpleFlagArg
              name: FILE
          parent: &id009 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: junctions.bed
                description: ''
              - !Positional
                optional: false
                position: 1
                name: ref.fa
                description: ''
              - !Positional
                optional: false
                position: 2
                name: annotations.gtf
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -S
                description: single exon genes
                args: !SimpleFlagArg
                  name: include
              - !Flag
                optional: true
                synonyms:
                - -o
                description: The file to write output to. [STDOUT]
                args: !SimpleFlagArg
                  name: FILE
              parent: &id008 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: junctions.bed
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: ref.fa
                    description: ''
                  - !Positional
                    optional: false
                    position: 2
                    name: annotations.gtf
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -S
                    description: single exon genes
                    args: !SimpleFlagArg
                      name: include
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: The file to write output to. [STDOUT]
                    args: !SimpleFlagArg
                      name: FILE
                  parent: &id004 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent: &id003 !Command
                      command:
                      - regtools
                      positional: []
                      named: []
                      parent:
                      subcommands:
                      - !Command
                        command:
                        - regtools
                        - cis-ase
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: command
                          description: ''
                        named: []
                        parent: *id003
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Usage:\t\tregtools cis-ase <command> [options]\n\
                          Command:\tidentify\t\tIdentify cis ase.\n\n"
                        generated_using: &id006
                        - --help
                        docker_image:
                      - *id004
                      - &id005 !Command
                        command:
                        - regtools
                        - cis-splice-effects
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - regtools
                          - cis-splice-effects
                          - associate
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: variants.vcf
                            description: ''
                          - !Positional
                            optional: false
                            position: 1
                            name: junctions.bed
                            description: ''
                          - !Positional
                            optional: false
                            position: 2
                            name: ref.fa
                            description: ''
                          - !Positional
                            optional: false
                            position: 3
                            name: annotations.gtf
                            description: ''
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - -o
                            description: Output file containing the aberrant splice
                              junctions with annotations. [STDOUT]
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -v
                            description: Output file containing variants annotated
                              as splice relevant (VCF format).
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -j
                            description: Output file containing the aberrant junctions
                              in BED12 format.
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -a
                            description: "Minimum anchor length. Junctions which satisfy\
                              \ a minimum\nanchor length on both sides are reported.\
                              \ [8]"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -m
                            description: Minimum intron length. [70]
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -M
                            description: Maximum intron length. [500000]
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -w
                            description: "Window size in b.p to identify splicing\
                              \ events in.\nThe tool identifies events in variant.start\
                              \ +/- w basepairs.\nDefault behaviour is to look at\
                              \ the window between previous and next exons."
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -e
                            description: "Maximum distance from the start/end of an\
                              \ exon\nto annotate a variant as relevant to splicing,\
                              \ the variant\nis in exonic space, i.e a coding variant.\
                              \ [3]"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -i
                            description: "Maximum distance from the start/end of an\
                              \ exon\nto annotate a variant as relevant to splicing,\
                              \ the variant\nis in intronic space. [2]"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -I
                            description: Annotate variants in intronic space within
                              a transcript(not to be used with -i).
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - -E
                            description: Annotate variants in exonic space within
                              a transcript(not to be used with -e).
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - -S
                            description: Don't skip single exon transcripts.
                            args: !EmptyFlagArg {}
                          parent: *id005
                          subcommands: []
                          usage: []
                          help_flag:
                          usage_flag:
                          version_flag:
                          help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nassociate:\
                            \ invalid option -- '-'\nUsage:\t\tregtools cis-splice-effects\
                            \ associate [options] variants.vcf junctions.bed ref.fa\
                            \ annotations.gtf\nOptions:\n\t\t-o STR\tOutput file containing\
                            \ the aberrant splice junctions with annotations. [STDOUT]\n\
                            \t\t-v STR\tOutput file containing variants annotated\
                            \ as splice relevant (VCF format).\n\t\t-j STR\tOutput\
                            \ file containing the aberrant junctions in BED12 format.\n\
                            \t\t-a INT\tMinimum anchor length. Junctions which satisfy\
                            \ a minimum \n\t\t\t anchor length on both sides are reported.\
                            \ [8]\n\t\t-m INT\tMinimum intron length. [70]\n\t\t-M\
                            \ INT\tMaximum intron length. [500000]\n\t\t-w INT\tWindow\
                            \ size in b.p to identify splicing events in.\n\t\t\t\
                            \ The tool identifies events in variant.start +/- w basepairs.\n\
                            \t\t\t Default behaviour is to look at the window between\
                            \ previous and next exons.\n\t\t-e INT\tMaximum distance\
                            \ from the start/end of an exon \n\t\t\t to annotate a\
                            \ variant as relevant to splicing, the variant \n\t\t\t\
                            \ is in exonic space, i.e a coding variant. [3]\n\t\t\
                            -i INT\tMaximum distance from the start/end of an exon\
                            \ \n\t\t\t to annotate a variant as relevant to splicing,\
                            \ the variant \n\t\t\t is in intronic space. [2]\n\t\t\
                            -I\tAnnotate variants in intronic space within a transcript(not\
                            \ to be used with -i).\n\t\t-E\tAnnotate variants in exonic\
                            \ space within a transcript(not to be used with -e).\n\
                            \t\t-S\tDon't skip single exon transcripts.\n\nError parsing\
                            \ inputs!(1)\n\n\n"
                          generated_using: *id006
                          docker_image:
                        - !Command
                          command:
                          - regtools
                          - cis-splice-effects
                          - identify
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: variants.vcf
                            description: ''
                          - !Positional
                            optional: false
                            position: 1
                            name: alignments.bam
                            description: ''
                          - !Positional
                            optional: false
                            position: 2
                            name: ref.fa
                            description: ''
                          - !Positional
                            optional: false
                            position: 3
                            name: annotations.gtf
                            description: ''
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - -o
                            description: Output file containing the aberrant splice
                              junctions with annotations. [STDOUT]
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -v
                            description: Output file containing variants annotated
                              as splice relevant (VCF format).
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -j
                            description: Output file containing the aberrant junctions
                              in BED12 format.
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -s
                            description: "Strand specificity of RNA library preparation\n\
                              (0 = unstranded, 1 = first-strand/RF, 2, = second-strand/FR).\
                              \ REQUIRED"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -t
                            description: Tag used in bam to label strand. [XS]
                            args: !SimpleFlagArg
                              name: STR
                          - !Flag
                            optional: true
                            synonyms:
                            - -a
                            description: "Minimum anchor length. Junctions which satisfy\
                              \ a minimum\nanchor length on both sides are reported.\
                              \ [8]"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -m
                            description: Minimum intron length. [70]
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -M
                            description: Maximum intron length. [500000]
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -w
                            description: "Window size in b.p to identify splicing\
                              \ events in.\nThe tool identifies events in variant.start\
                              \ +/- w basepairs.\nDefault behaviour is to look at\
                              \ the window between previous and next exons."
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -e
                            description: "Maximum distance from the start/end of an\
                              \ exon\nto annotate a variant as relevant to splicing,\
                              \ the variant\nis in exonic space, i.e a coding variant.\
                              \ [3]"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -i
                            description: "Maximum distance from the start/end of an\
                              \ exon\nto annotate a variant as relevant to splicing,\
                              \ the variant\nis in intronic space. [2]"
                            args: !SimpleFlagArg
                              name: INT
                          - !Flag
                            optional: true
                            synonyms:
                            - -I
                            description: Annotate variants in intronic space within
                              a transcript(not to be used with -i).
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - -E
                            description: Annotate variants in exonic space within
                              a transcript(not to be used with -e).
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - -S
                            description: Don't skip single exon transcripts.
                            args: !EmptyFlagArg {}
                          parent: *id005
                          subcommands: []
                          usage: []
                          help_flag:
                          usage_flag:
                          version_flag:
                          help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nidentify:\
                            \ invalid option -- '-'\nUsage:\t\tregtools cis-splice-effects\
                            \ identify [options] variants.vcf alignments.bam ref.fa\
                            \ annotations.gtf\nOptions:\n\t\t-o STR\tOutput file containing\
                            \ the aberrant splice junctions with annotations. [STDOUT]\n\
                            \t\t-v STR\tOutput file containing variants annotated\
                            \ as splice relevant (VCF format).\n\t\t-j STR\tOutput\
                            \ file containing the aberrant junctions in BED12 format.\n\
                            \t\t-s INT\tStrand specificity of RNA library preparation\
                            \ \n\t\t\t (0 = unstranded, 1 = first-strand/RF, 2, =\
                            \ second-strand/FR). REQUIRED\n\t\t-t STR\tTag used in\
                            \ bam to label strand. [XS]\n\t\t-a INT\tMinimum anchor\
                            \ length. Junctions which satisfy a minimum \n\t\t\t anchor\
                            \ length on both sides are reported. [8]\n\t\t-m INT\t\
                            Minimum intron length. [70]\n\t\t-M INT\tMaximum intron\
                            \ length. [500000]\n\t\t-w INT\tWindow size in b.p to\
                            \ identify splicing events in.\n\t\t\t The tool identifies\
                            \ events in variant.start +/- w basepairs.\n\t\t\t Default\
                            \ behaviour is to look at the window between previous\
                            \ and next exons.\n\t\t-e INT\tMaximum distance from the\
                            \ start/end of an exon \n\t\t\t to annotate a variant\
                            \ as relevant to splicing, the variant \n\t\t\t is in\
                            \ exonic space, i.e a coding variant. [3]\n\t\t-i INT\t\
                            Maximum distance from the start/end of an exon \n\t\t\t\
                            \ to annotate a variant as relevant to splicing, the variant\
                            \ \n\t\t\t is in intronic space. [2]\n\t\t-I\tAnnotate\
                            \ variants in intronic space within a transcript(not to\
                            \ be used with -i).\n\t\t-E\tAnnotate variants in exonic\
                            \ space within a transcript(not to be used with -e).\n\
                            \t\t-S\tDon't skip single exon transcripts.\n\nError parsing\
                            \ inputs!(1)\n\n\n"
                          generated_using: *id006
                          docker_image:
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Usage:\t\tregtools cis-splice-effects <command>\
                          \ [options]\nCommand:\tidentify\t\tIdentify cis splicing\
                          \ effects.\n\t\tassociate\tAssociate extracted junctions\
                          \ with variants\n\n"
                        generated_using: *id006
                        docker_image:
                      - !Command
                        command:
                        - regtools
                        - variants
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: command
                          description: ''
                        named: []
                        parent: *id003
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Usage:\t\tregtools variants <command> [options]\n\
                          Command:\tannotate\t\tAnnotate variants with splicing information.\n\
                          \n"
                        generated_using: *id006
                        docker_image:
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nUsage:\t\t\
                        regtools <command> [options]\nCommand:\tjunctions\t\tTools\
                        \ that operate on feature junctions (e.g. exon-exon junctions\
                        \ from RNA-seq).\n\t\tcis-ase\t\t\tTools related to allele\
                        \ specific expression in cis.\n\t\tcis-splice-effects\tTools\
                        \ related to splicing effects of variants.\n\t\tvariants\t\
                        \tTools that operate on variants.\n\n"
                      generated_using: *id006
                      docker_image:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: junctions.bed
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: ref.fa
                        description: ''
                      - !Positional
                        optional: false
                        position: 2
                        name: annotations.gtf
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -S
                        description: single exon genes
                        args: !SimpleFlagArg
                          name: include
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: The file to write output to. [STDOUT]
                        args: !SimpleFlagArg
                          name: FILE
                      parent: *id004
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nannotate:\
                        \ invalid option -- '-'\nUsage:\t\tregtools junctions annotate\
                        \ [options] junctions.bed ref.fa annotations.gtf\nOptions:\t\
                        -S include single exon genes\n\t\t-o FILE\tThe file to write\
                        \ output to. [STDOUT]\n\nError parsing inputs!(1)\n\n\n"
                      generated_using: *id006
                      docker_image:
                    - !Command
                      command: &id007
                      - regtools
                      - junctions
                      - extract
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: indexed_alignments.bam
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        description: "Minimum anchor length. Junctions which satisfy\
                          \ a minimum\nanchor length on both sides are reported. [8]"
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -m
                        description: Minimum intron length. [70]
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -M
                        description: Maximum intron length. [500000]
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: The file to write output to. [STDOUT]
                        args: !SimpleFlagArg
                          name: FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -r
                        description: "The region to identify junctions\nin \"chr:start-end\"\
                          \ format. Entire BAM by default."
                        args: !SimpleFlagArg
                          name: STR
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: "Strand specificity of RNA library preparation\n\
                          (0 = unstranded, 1 = first-strand/RF, 2, = second-strand/FR).\
                          \ REQUIRED"
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: Tag used in bam to label strand. [XS]
                        args: !SimpleFlagArg
                          name: STR
                      parent: *id004
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nextract:\
                        \ invalid option -- '-'\nUsage:\t\tregtools junctions extract\
                        \ [options] indexed_alignments.bam\nOptions:\n\t\t-a INT\t\
                        Minimum anchor length. Junctions which satisfy a minimum \n\
                        \t\t\t anchor length on both sides are reported. [8]\n\t\t\
                        -m INT\tMinimum intron length. [70]\n\t\t-M INT\tMaximum intron\
                        \ length. [500000]\n\t\t-o FILE\tThe file to write output\
                        \ to. [STDOUT]\n\t\t-r STR\tThe region to identify junctions\
                        \ \n\t\t\t in \"chr:start-end\" format. Entire BAM by default.\n\
                        \t\t-s INT\tStrand specificity of RNA library preparation\
                        \ \n\t\t\t (0 = unstranded, 1 = first-strand/RF, 2, = second-strand/FR).\
                        \ REQUIRED\n\t\t-t STR\tTag used in bam to label strand. [XS]\n\
                        \nError parsing inputs!(1)\n\n\n"
                      generated_using: *id006
                      docker_image:
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "Usage:\t\tregtools junctions <command> [options]\n\
                      Command:\textract\t\tIdentify exon-exon junctions from alignments.\n\
                      \t\tannotate\tAnnotate the junctions.\n\n"
                    generated_using: *id006
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nannotate: invalid\
                    \ option -- '-'\nUsage:\t\tregtools junctions annotate [options]\
                    \ junctions.bed ref.fa annotations.gtf\nOptions:\t-S include single\
                    \ exon genes\n\t\t-o FILE\tThe file to write output to. [STDOUT]\n\
                    \nError parsing inputs!(1)\n\n\n"
                  generated_using: *id006
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: indexed_alignments.bam
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    description: "Minimum anchor length. Junctions which satisfy a\
                      \ minimum\nanchor length on both sides are reported. [8]"
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -m
                    description: Minimum intron length. [70]
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -M
                    description: Maximum intron length. [500000]
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: The file to write output to. [STDOUT]
                    args: !SimpleFlagArg
                      name: FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -r
                    description: "The region to identify junctions\nin \"chr:start-end\"\
                      \ format. Entire BAM by default."
                    args: !SimpleFlagArg
                      name: STR
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: "Strand specificity of RNA library preparation\n\
                      (0 = unstranded, 1 = first-strand/RF, 2, = second-strand/FR).\
                      \ REQUIRED"
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: Tag used in bam to label strand. [XS]
                    args: !SimpleFlagArg
                      name: STR
                  parent: *id004
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nextract: invalid\
                    \ option -- '-'\nUsage:\t\tregtools junctions extract [options]\
                    \ indexed_alignments.bam\nOptions:\n\t\t-a INT\tMinimum anchor\
                    \ length. Junctions which satisfy a minimum \n\t\t\t anchor length\
                    \ on both sides are reported. [8]\n\t\t-m INT\tMinimum intron\
                    \ length. [70]\n\t\t-M INT\tMaximum intron length. [500000]\n\t\
                    \t-o FILE\tThe file to write output to. [STDOUT]\n\t\t-r STR\t\
                    The region to identify junctions \n\t\t\t in \"chr:start-end\"\
                    \ format. Entire BAM by default.\n\t\t-s INT\tStrand specificity\
                    \ of RNA library preparation \n\t\t\t (0 = unstranded, 1 = first-strand/RF,\
                    \ 2, = second-strand/FR). REQUIRED\n\t\t-t STR\tTag used in bam\
                    \ to label strand. [XS]\n\nError parsing inputs!(1)\n\n\n"
                  generated_using: *id006
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Usage:\t\tregtools junctions <command> [options]\nCommand:\t\
                  extract\t\tIdentify exon-exon junctions from alignments.\n\t\tannotate\t\
                  Annotate the junctions.\n\n"
                generated_using: *id006
                docker_image:
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nannotate: invalid\
                \ option -- '-'\nUsage:\t\tregtools junctions annotate [options] junctions.bed\
                \ ref.fa annotations.gtf\nOptions:\t-S include single exon genes\n\
                \t\t-o FILE\tThe file to write output to. [STDOUT]\n\nError parsing\
                \ inputs!(1)\n\n\n"
              generated_using: *id006
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: indexed_alignments.bam
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -a
                description: "Minimum anchor length. Junctions which satisfy a minimum\n\
                  anchor length on both sides are reported. [8]"
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -m
                description: Minimum intron length. [70]
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -M
                description: Maximum intron length. [500000]
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -o
                description: The file to write output to. [STDOUT]
                args: !SimpleFlagArg
                  name: FILE
              - !Flag
                optional: true
                synonyms:
                - -r
                description: "The region to identify junctions\nin \"chr:start-end\"\
                  \ format. Entire BAM by default."
                args: !SimpleFlagArg
                  name: STR
              - !Flag
                optional: true
                synonyms:
                - -s
                description: "Strand specificity of RNA library preparation\n(0 =\
                  \ unstranded, 1 = first-strand/RF, 2, = second-strand/FR). REQUIRED"
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -t
                description: Tag used in bam to label strand. [XS]
                args: !SimpleFlagArg
                  name: STR
              parent: *id008
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nextract: invalid\
                \ option -- '-'\nUsage:\t\tregtools junctions extract [options] indexed_alignments.bam\n\
                Options:\n\t\t-a INT\tMinimum anchor length. Junctions which satisfy\
                \ a minimum \n\t\t\t anchor length on both sides are reported. [8]\n\
                \t\t-m INT\tMinimum intron length. [70]\n\t\t-M INT\tMaximum intron\
                \ length. [500000]\n\t\t-o FILE\tThe file to write output to. [STDOUT]\n\
                \t\t-r STR\tThe region to identify junctions \n\t\t\t in \"chr:start-end\"\
                \ format. Entire BAM by default.\n\t\t-s INT\tStrand specificity of\
                \ RNA library preparation \n\t\t\t (0 = unstranded, 1 = first-strand/RF,\
                \ 2, = second-strand/FR). REQUIRED\n\t\t-t STR\tTag used in bam to\
                \ label strand. [XS]\n\nError parsing inputs!(1)\n\n\n"
              generated_using: *id006
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Usage:\t\tregtools junctions <command> [options]\nCommand:\t\
              extract\t\tIdentify exon-exon junctions from alignments.\n\t\tannotate\t\
              Annotate the junctions.\n\n"
            generated_using: *id006
            docker_image:
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nannotate: invalid option\
            \ -- '-'\nUsage:\t\tregtools junctions annotate [options] junctions.bed\
            \ ref.fa annotations.gtf\nOptions:\t-S include single exon genes\n\t\t\
            -o FILE\tThe file to write output to. [STDOUT]\n\nError parsing inputs!(1)\n\
            \n\n"
          generated_using: *id006
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: indexed_alignments.bam
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -a
            description: "Minimum anchor length. Junctions which satisfy a minimum\n\
              anchor length on both sides are reported. [8]"
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -m
            description: Minimum intron length. [70]
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -M
            description: Maximum intron length. [500000]
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -o
            description: The file to write output to. [STDOUT]
            args: !SimpleFlagArg
              name: FILE
          - !Flag
            optional: true
            synonyms:
            - -r
            description: "The region to identify junctions\nin \"chr:start-end\" format.\
              \ Entire BAM by default."
            args: !SimpleFlagArg
              name: STR
          - !Flag
            optional: true
            synonyms:
            - -s
            description: "Strand specificity of RNA library preparation\n(0 = unstranded,\
              \ 1 = first-strand/RF, 2, = second-strand/FR). REQUIRED"
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -t
            description: Tag used in bam to label strand. [XS]
            args: !SimpleFlagArg
              name: STR
          parent: *id009
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nextract: invalid option\
            \ -- '-'\nUsage:\t\tregtools junctions extract [options] indexed_alignments.bam\n\
            Options:\n\t\t-a INT\tMinimum anchor length. Junctions which satisfy a\
            \ minimum \n\t\t\t anchor length on both sides are reported. [8]\n\t\t\
            -m INT\tMinimum intron length. [70]\n\t\t-M INT\tMaximum intron length.\
            \ [500000]\n\t\t-o FILE\tThe file to write output to. [STDOUT]\n\t\t-r\
            \ STR\tThe region to identify junctions \n\t\t\t in \"chr:start-end\"\
            \ format. Entire BAM by default.\n\t\t-s INT\tStrand specificity of RNA\
            \ library preparation \n\t\t\t (0 = unstranded, 1 = first-strand/RF, 2,\
            \ = second-strand/FR). REQUIRED\n\t\t-t STR\tTag used in bam to label\
            \ strand. [XS]\n\nError parsing inputs!(1)\n\n\n"
          generated_using: *id006
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage:\t\tregtools junctions <command> [options]\nCommand:\textract\t\
          \tIdentify exon-exon junctions from alignments.\n\t\tannotate\tAnnotate\
          \ the junctions.\n\n"
        generated_using: *id006
        docker_image:
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nannotate: invalid option\
        \ -- '-'\nUsage:\t\tregtools junctions annotate [options] junctions.bed ref.fa\
        \ annotations.gtf\nOptions:\t-S include single exon genes\n\t\t-o FILE\tThe\
        \ file to write output to. [STDOUT]\n\nError parsing inputs!(1)\n\n\n"
      generated_using: *id006
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: indexed_alignments.bam
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -a
        description: "Minimum anchor length. Junctions which satisfy a minimum\nanchor\
          \ length on both sides are reported. [8]"
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -m
        description: Minimum intron length. [70]
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -M
        description: Maximum intron length. [500000]
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -o
        description: The file to write output to. [STDOUT]
        args: !SimpleFlagArg
          name: FILE
      - !Flag
        optional: true
        synonyms:
        - -r
        description: "The region to identify junctions\nin \"chr:start-end\" format.\
          \ Entire BAM by default."
        args: !SimpleFlagArg
          name: STR
      - !Flag
        optional: true
        synonyms:
        - -s
        description: "Strand specificity of RNA library preparation\n(0 = unstranded,\
          \ 1 = first-strand/RF, 2, = second-strand/FR). REQUIRED"
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -t
        description: Tag used in bam to label strand. [XS]
        args: !SimpleFlagArg
          name: STR
      parent: *id010
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nextract: invalid option --\
        \ '-'\nUsage:\t\tregtools junctions extract [options] indexed_alignments.bam\n\
        Options:\n\t\t-a INT\tMinimum anchor length. Junctions which satisfy a minimum\
        \ \n\t\t\t anchor length on both sides are reported. [8]\n\t\t-m INT\tMinimum\
        \ intron length. [70]\n\t\t-M INT\tMaximum intron length. [500000]\n\t\t-o\
        \ FILE\tThe file to write output to. [STDOUT]\n\t\t-r STR\tThe region to identify\
        \ junctions \n\t\t\t in \"chr:start-end\" format. Entire BAM by default.\n\
        \t\t-s INT\tStrand specificity of RNA library preparation \n\t\t\t (0 = unstranded,\
        \ 1 = first-strand/RF, 2, = second-strand/FR). REQUIRED\n\t\t-t STR\tTag used\
        \ in bam to label strand. [XS]\n\nError parsing inputs!(1)\n\n\n"
      generated_using: *id006
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage:\t\tregtools junctions <command> [options]\nCommand:\textract\t\
      \tIdentify exon-exon junctions from alignments.\n\t\tannotate\tAnnotate the\
      \ junctions.\n\n"
    generated_using: *id006
    docker_image:
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nannotate: invalid option -- '-'\n\
    Usage:\t\tregtools junctions annotate [options] junctions.bed ref.fa annotations.gtf\n\
    Options:\t-S include single exon genes\n\t\t-o FILE\tThe file to write output\
    \ to. [STDOUT]\n\nError parsing inputs!(1)\n\n\n"
  generated_using: *id006
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: indexed_alignments.bam
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -a
    description: "Minimum anchor length. Junctions which satisfy a minimum\nanchor\
      \ length on both sides are reported. [8]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -m
    description: Minimum intron length. [70]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -M
    description: Maximum intron length. [500000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -o
    description: The file to write output to. [STDOUT]
    args: !SimpleFlagArg
      name: FILE
  - !Flag
    optional: true
    synonyms:
    - -r
    description: "The region to identify junctions\nin \"chr:start-end\" format. Entire\
      \ BAM by default."
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -s
    description: "Strand specificity of RNA library preparation\n(0 = unstranded,\
      \ 1 = first-strand/RF, 2, = second-strand/FR). REQUIRED"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -t
    description: Tag used in bam to label strand. [XS]
    args: !SimpleFlagArg
      name: STR
  parent: *id011
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nextract: invalid option -- '-'\n\
    Usage:\t\tregtools junctions extract [options] indexed_alignments.bam\nOptions:\n\
    \t\t-a INT\tMinimum anchor length. Junctions which satisfy a minimum \n\t\t\t\
    \ anchor length on both sides are reported. [8]\n\t\t-m INT\tMinimum intron length.\
    \ [70]\n\t\t-M INT\tMaximum intron length. [500000]\n\t\t-o FILE\tThe file to\
    \ write output to. [STDOUT]\n\t\t-r STR\tThe region to identify junctions \n\t\
    \t\t in \"chr:start-end\" format. Entire BAM by default.\n\t\t-s INT\tStrand specificity\
    \ of RNA library preparation \n\t\t\t (0 = unstranded, 1 = first-strand/RF, 2,\
    \ = second-strand/FR). REQUIRED\n\t\t-t STR\tTag used in bam to label strand.\
    \ [XS]\n\nError parsing inputs!(1)\n\n\n"
  generated_using: *id006
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage:\t\tregtools junctions <command> [options]\nCommand:\textract\t\t\
  Identify exon-exon junctions from alignments.\n\t\tannotate\tAnnotate the junctions.\n\
  \n"
generated_using: *id006
docker_image:
