!Command
command:
- rapmap
- quasimap
positional:
- !Positional
  optional: false
  position: 0
  name: rapmap
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --index
  description: (required)  The location of the quasiindex
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - '-1'
  - --leftMates
  description: The location of the left paired-end reads
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - '-2'
  - --rightMates
  description: The location of the right paired-end reads
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - -r
  - --unmatedReads
  description: The location of single-end reads
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: 'The output file (default: stdout)'
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - -x
  - --compressed
  description: Compress the output SAM file using zlib
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --numThreads
  description: Number of threads to use
  args: !SimpleFlagArg
    name: positive integer
- !Flag
  optional: true
  synonyms:
  - -s
  - --selAln
  description: Perform selective alignment to validate mapping hits
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mimicBT2
  description: "[only with selAln]: mimic Bowtie2-like default params but with\n--no-mixed\
    \ and --no-discordant"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mimicStrictBT2
  description: "[only with selAln]: mimic strict Bowtie2-like default params (e.g.\n\
    like those recommended for running RSEM)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minScoreFrac
  description: "<ratio in (0,1]>\n[only with selAln]: minimum score fraction for a\
    \ valid alignment"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --maxMMPExtension
  description: "1>\n[only with selAln or with chaining]: maximum allowable MMP extension"
  args: !SimpleFlagArg
    name: 'positive integer '
- !Flag
  optional: true
  synonyms:
  - --consensusSlack
  description: "<ratio in (0,1]>\n[only with selAln]: consensus slack to apply during\
    \ mapping"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ma
  description: '[only with selAln]: match score'
  args: !SimpleFlagArg
    name: positive integer
- !Flag
  optional: true
  synonyms:
  - --mm
  description: '[only with selAln]: mismatch penalty'
  args: !SimpleFlagArg
    name: negative integer
- !Flag
  optional: true
  synonyms:
  - --go
  description: '[only with selAln]: gap open penalty'
  args: !SimpleFlagArg
    name: positive integer
- !Flag
  optional: true
  synonyms:
  - --ge
  description: '[only with selAln]: gap extend penalty'
  args: !SimpleFlagArg
    name: positive integer
- !Flag
  optional: true
  synonyms:
  - --dpBandwidth
  description: '[only with selAln]: bandwidth to use in extension alignment'
  args: !SimpleFlagArg
    name: positive integer
- !Flag
  optional: true
  synonyms:
  - --noOrphans
  description: discard orphaned mappings
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --noDovetail
  description: discard dovetailing mappings
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --recoverOrphans
  description: perform orphan recovery to try and recover endpoints of orphaned reads
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hardFilter
  description: "[only with selAln]: apply hard filter to only return best alignments\n\
    for each read"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  - --writeUnmapped
  description: include unmapped reads in the output SAM records
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: Disable all console output apart from warnings and errors
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --chaining
  description: Score the hits to find the best chain
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --fuzzyIntersection
  description: Find paired-end mapping locations using fuzzy intersection
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --noStrictCheck
  description: "Don't perform extra checks to try and assure that only equally \"\
    best\"\nmappings for a read are reported"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --noSensitive
  description: Perform a less sensitive quasi-mapping by enabling NIP skipping
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  description: "<double in [0,1]>,  --quasiCoverage <double in [0,1]>\nRequire that\
    \ this fraction of a read is covered by MMPs before it is\nconsidered mappable."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  - --maxNumHits
  description: Reads mapping to more than this many loci are discarded
  args: !SimpleFlagArg
    name: positive integer
- !Flag
  optional: true
  synonyms:
  - -n
  - --noOutput
  description: Don't write out any alignments (for speed testing purposes)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Displays usage information and exits.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Displays version information and exits.
  args: !EmptyFlagArg {}
help_text: "\nUSAGE: \n\n   rapmap  -i <path> [-1 <path>] [-2 <path>] [-r <path>]\
  \ [-o <path>] [-x]\n           [-t <positive integer>] [-s] [--mimicBT2] [--mimicStrictBT2]\n\
  \           [--minScoreFrac <ratio in (0,1]>] [--maxMMPExtension <positive\n   \
  \        integer > 1>] [--consensusSlack <ratio in (0,1]>] [--ma\n           <positive\
  \ integer>] [--mm <negative integer>] [--go <positive\n           integer>] [--ge\
  \ <positive integer>] [--dpBandwidth <positive\n           integer>] [--noOrphans]\
  \ [--noDovetail] [--recoverOrphans]\n           [--hardFilter] [-u] [-q] [-c] [-f]\
  \ [--noStrictCheck]\n           [--noSensitive] [-z <double in [0,1]>] [-m <positive\
  \ integer>]\n           [-n] [--] [--version] [-h]\n\n\nWhere: \n\n   -i <path>,\
  \  --index <path>\n     (required)  The location of the quasiindex\n\n   -1 <path>,\
  \  --leftMates <path>\n     The location of the left paired-end reads\n\n   -2 <path>,\
  \  --rightMates <path>\n     The location of the right paired-end reads\n\n   -r\
  \ <path>,  --unmatedReads <path>\n     The location of single-end reads\n\n   -o\
  \ <path>,  --output <path>\n     The output file (default: stdout)\n\n   -x,  --compressed\n\
  \     Compress the output SAM file using zlib\n\n   -t <positive integer>,  --numThreads\
  \ <positive integer>\n     Number of threads to use\n\n   -s,  --selAln\n     Perform\
  \ selective alignment to validate mapping hits\n\n   --mimicBT2\n     [only with\
  \ selAln]: mimic Bowtie2-like default params but with\n     --no-mixed and --no-discordant\n\
  \n   --mimicStrictBT2\n     [only with selAln]: mimic strict Bowtie2-like default\
  \ params (e.g.\n     like those recommended for running RSEM)\n\n   --minScoreFrac\
  \ <ratio in (0,1]>\n     [only with selAln]: minimum score fraction for a valid\
  \ alignment\n\n   --maxMMPExtension <positive integer > 1>\n     [only with selAln\
  \ or with chaining]: maximum allowable MMP extension\n\n   --consensusSlack <ratio\
  \ in (0,1]>\n     [only with selAln]: consensus slack to apply during mapping\n\n\
  \   --ma <positive integer>\n     [only with selAln]: match score\n\n   --mm <negative\
  \ integer>\n     [only with selAln]: mismatch penalty\n\n   --go <positive integer>\n\
  \     [only with selAln]: gap open penalty\n\n   --ge <positive integer>\n     [only\
  \ with selAln]: gap extend penalty\n\n   --dpBandwidth <positive integer>\n    \
  \ [only with selAln]: bandwidth to use in extension alignment\n\n   --noOrphans\n\
  \     discard orphaned mappings\n\n   --noDovetail\n     discard dovetailing mappings\n\
  \n   --recoverOrphans\n     perform orphan recovery to try and recover endpoints\
  \ of orphaned reads\n\n   --hardFilter\n     [only with selAln]: apply hard filter\
  \ to only return best alignments\n     for each read\n\n   -u,  --writeUnmapped\n\
  \     include unmapped reads in the output SAM records\n\n   -q,  --quiet\n    \
  \ Disable all console output apart from warnings and errors\n\n   -c,  --chaining\n\
  \     Score the hits to find the best chain\n\n   -f,  --fuzzyIntersection\n   \
  \  Find paired-end mapping locations using fuzzy intersection\n\n   --noStrictCheck\n\
  \     Don't perform extra checks to try and assure that only equally \"best\"\n\
  \     mappings for a read are reported\n\n   --noSensitive\n     Perform a less\
  \ sensitive quasi-mapping by enabling NIP skipping\n\n   -z <double in [0,1]>, \
  \ --quasiCoverage <double in [0,1]>\n     Require that this fraction of a read is\
  \ covered by MMPs before it is\n     considered mappable.\n\n   -m <positive integer>,\
  \  --maxNumHits <positive integer>\n     Reads mapping to more than this many loci\
  \ are discarded\n\n   -n,  --noOutput\n     Don't write out any alignments (for\
  \ speed testing purposes)\n\n   --,  --ignore_rest\n     Ignores the rest of the\
  \ labeled arguments following this flag.\n\n   --version\n     Displays version\
  \ information and exits.\n\n   -h,  --help\n     Displays usage information and\
  \ exits.\n\n\n   RapMap Mapper\n\n"
generated_using:
- --help
docker_image:
