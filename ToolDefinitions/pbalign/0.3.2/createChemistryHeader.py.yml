!Command
command: &id001
- createChemistryHeader.py
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - createChemistryHeader.py
  - input_alignment_file
  positional:
  - !Positional
    optional: false
    position: 0
    name: getChemistryHeader.py
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --bas_files
    description: ''
    args: !RepeatFlagArg
      name: BAS_FILES
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: ''
    args: !EmptyFlagArg {}
  parent: &id009 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: getChemistryHeader.py
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - --bas_files
        description: ''
        args: !RepeatFlagArg
          name: BAS_FILES
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: &id008 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: getChemistryHeader.py
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - --bas_files
            description: ''
            args: !RepeatFlagArg
              name: BAS_FILES
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: &id007 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: getChemistryHeader.py
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - --bas_files
                description: ''
                args: !RepeatFlagArg
                  name: BAS_FILES
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: &id006 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: getChemistryHeader.py
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --bas_files
                    description: ''
                    args: !RepeatFlagArg
                      name: BAS_FILES
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - --debug
                      description: 'Output detailed log information. (default: False)'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --bas_files
                      description: "The bas or bax files containing the reads that\
                        \ were\naligned in the input_alignment_file. Also can be a\n\
                        fofn of bas or bax files. (default: None)\n"
                      args: !RepeatFlagArg
                        name: BAS_FILES
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: getChemistryHeader.py
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --bas_files
                        description: ''
                        args: !RepeatFlagArg
                          name: BAS_FILES
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ''
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                        \ BAS_FILES\n                             [BAS_FILES ...]\n\
                        \                             input_alignment_file output_header_file\n\
                        getChemistryHeader.py: error: argument input_alignment_file:\
                        \ File must end with .sam or .bam. input_alignment_file doesn't\
                        \ end with either of those.\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - createChemistryHeader.py
                      - output_header_file
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: getChemistryHeader.py
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --bas_files
                        description: ''
                        args: !RepeatFlagArg
                          name: BAS_FILES
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ''
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                        \ BAS_FILES\n                             [BAS_FILES ...]\n\
                        \                             input_alignment_file output_header_file\n\
                        getChemistryHeader.py: error: argument input_alignment_file:\
                        \ File must end with .sam or .bam. output_header_file doesn't\
                        \ end with either of those.\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                      \ BAS_FILES\n                             [BAS_FILES ...]\n\
                      \                             input_alignment_file output_header_file\n\
                      \ncreateChemistryHeader creates a SAM header that contains the\
                      \ chemistry\ninformation used by Quiver.\n\npositional arguments:\n\
                      \  input_alignment_file  A SAM or BAM file produced by BLASR.\n\
                      \  output_header_file    Name of the SAM or BAM header file\
                      \ that will be\n                        created with chemistry\
                      \ information loaded.\n\noptional arguments:\n  -h, --help \
                      \           show this help message and exit\n  --debug     \
                      \          Output detailed log information. (default: False)\n\
                      \  --bas_files BAS_FILES [BAS_FILES ...]\n                 \
                      \       The bas or bax files containing the reads that were\n\
                      \                        aligned in the input_alignment_file.\
                      \ Also can be a\n                        fofn of bas or bax\
                      \ files. (default: None)\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ''
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                    \ BAS_FILES\n                             [BAS_FILES ...]\n  \
                    \                           input_alignment_file output_header_file\n\
                    getChemistryHeader.py: error: argument input_alignment_file: File\
                    \ must end with .sam or .bam. input_alignment_file doesn't end\
                    \ with either of those.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: getChemistryHeader.py
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --bas_files
                    description: ''
                    args: !RepeatFlagArg
                      name: BAS_FILES
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ''
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                    \ BAS_FILES\n                             [BAS_FILES ...]\n  \
                    \                           input_alignment_file output_header_file\n\
                    getChemistryHeader.py: error: argument input_alignment_file: File\
                    \ must end with .sam or .bam. output_header_file doesn't end with\
                    \ either of those.\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                  \ BAS_FILES\n                             [BAS_FILES ...]\n    \
                  \                         input_alignment_file output_header_file\n\
                  \ncreateChemistryHeader creates a SAM header that contains the chemistry\n\
                  information used by Quiver.\n\npositional arguments:\n  input_alignment_file\
                  \  A SAM or BAM file produced by BLASR.\n  output_header_file  \
                  \  Name of the SAM or BAM header file that will be\n           \
                  \             created with chemistry information loaded.\n\noptional\
                  \ arguments:\n  -h, --help            show this help message and\
                  \ exit\n  --debug               Output detailed log information.\
                  \ (default: False)\n  --bas_files BAS_FILES [BAS_FILES ...]\n  \
                  \                      The bas or bax files containing the reads\
                  \ that were\n                        aligned in the input_alignment_file.\
                  \ Also can be a\n                        fofn of bas or bax files.\
                  \ (default: None)\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ''
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                \ BAS_FILES\n                             [BAS_FILES ...]\n      \
                \                       input_alignment_file output_header_file\n\
                getChemistryHeader.py: error: argument input_alignment_file: File\
                \ must end with .sam or .bam. input_alignment_file doesn't end with\
                \ either of those.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: getChemistryHeader.py
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - --bas_files
                description: ''
                args: !RepeatFlagArg
                  name: BAS_FILES
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              parent: *id006
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ''
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files\
                \ BAS_FILES\n                             [BAS_FILES ...]\n      \
                \                       input_alignment_file output_header_file\n\
                getChemistryHeader.py: error: argument input_alignment_file: File\
                \ must end with .sam or .bam. output_header_file doesn't end with\
                \ either of those.\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
              \                             [BAS_FILES ...]\n                    \
              \         input_alignment_file output_header_file\n\ncreateChemistryHeader\
              \ creates a SAM header that contains the chemistry\ninformation used\
              \ by Quiver.\n\npositional arguments:\n  input_alignment_file  A SAM\
              \ or BAM file produced by BLASR.\n  output_header_file    Name of the\
              \ SAM or BAM header file that will be\n                        created\
              \ with chemistry information loaded.\n\noptional arguments:\n  -h, --help\
              \            show this help message and exit\n  --debug            \
              \   Output detailed log information. (default: False)\n  --bas_files\
              \ BAS_FILES [BAS_FILES ...]\n                        The bas or bax\
              \ files containing the reads that were\n                        aligned\
              \ in the input_alignment_file. Also can be a\n                     \
              \   fofn of bas or bax files. (default: None)\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ''
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
            \                             [BAS_FILES ...]\n                      \
            \       input_alignment_file output_header_file\ngetChemistryHeader.py:\
            \ error: argument input_alignment_file: File must end with .sam or .bam.\
            \ input_alignment_file doesn't end with either of those.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: getChemistryHeader.py
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - --bas_files
            description: ''
            args: !RepeatFlagArg
              name: BAS_FILES
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          parent: *id007
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ''
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
            \                             [BAS_FILES ...]\n                      \
            \       input_alignment_file output_header_file\ngetChemistryHeader.py:\
            \ error: argument input_alignment_file: File must end with .sam or .bam.\
            \ output_header_file doesn't end with either of those.\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
          \                             [BAS_FILES ...]\n                        \
          \     input_alignment_file output_header_file\n\ncreateChemistryHeader creates\
          \ a SAM header that contains the chemistry\ninformation used by Quiver.\n\
          \npositional arguments:\n  input_alignment_file  A SAM or BAM file produced\
          \ by BLASR.\n  output_header_file    Name of the SAM or BAM header file\
          \ that will be\n                        created with chemistry information\
          \ loaded.\n\noptional arguments:\n  -h, --help            show this help\
          \ message and exit\n  --debug               Output detailed log information.\
          \ (default: False)\n  --bas_files BAS_FILES [BAS_FILES ...]\n          \
          \              The bas or bax files containing the reads that were\n   \
          \                     aligned in the input_alignment_file. Also can be a\n\
          \                        fofn of bas or bax files. (default: None)\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ''
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
        \                             [BAS_FILES ...]\n                          \
        \   input_alignment_file output_header_file\ngetChemistryHeader.py: error:\
        \ argument input_alignment_file: File must end with .sam or .bam. input_alignment_file\
        \ doesn't end with either of those.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: getChemistryHeader.py
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - --bas_files
        description: ''
        args: !RepeatFlagArg
          name: BAS_FILES
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      parent: *id008
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ''
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
        \                             [BAS_FILES ...]\n                          \
        \   input_alignment_file output_header_file\ngetChemistryHeader.py: error:\
        \ argument input_alignment_file: File must end with .sam or .bam. output_header_file\
        \ doesn't end with either of those.\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
      \                             [BAS_FILES ...]\n                            \
      \ input_alignment_file output_header_file\n\ncreateChemistryHeader creates a\
      \ SAM header that contains the chemistry\ninformation used by Quiver.\n\npositional\
      \ arguments:\n  input_alignment_file  A SAM or BAM file produced by BLASR.\n\
      \  output_header_file    Name of the SAM or BAM header file that will be\n \
      \                       created with chemistry information loaded.\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --debug\
      \               Output detailed log information. (default: False)\n  --bas_files\
      \ BAS_FILES [BAS_FILES ...]\n                        The bas or bax files containing\
      \ the reads that were\n                        aligned in the input_alignment_file.\
      \ Also can be a\n                        fofn of bas or bax files. (default:\
      \ None)\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
    \                             [BAS_FILES ...]\n                             input_alignment_file\
    \ output_header_file\ngetChemistryHeader.py: error: argument input_alignment_file:\
    \ File must end with .sam or .bam. input_alignment_file doesn't end with either\
    \ of those.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: getChemistryHeader.py
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --bas_files
    description: ''
    args: !RepeatFlagArg
      name: BAS_FILES
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: ''
    args: !EmptyFlagArg {}
  parent: *id009
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n\
    \                             [BAS_FILES ...]\n                             input_alignment_file\
    \ output_header_file\ngetChemistryHeader.py: error: argument input_alignment_file:\
    \ File must end with .sam or .bam. output_header_file doesn't end with either\
    \ of those.\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: getChemistryHeader.py [-h] [--debug] --bas_files BAS_FILES\n  \
  \                           [BAS_FILES ...]\n                             input_alignment_file\
  \ output_header_file\n\ncreateChemistryHeader creates a SAM header that contains\
  \ the chemistry\ninformation used by Quiver.\n\npositional arguments:\n  input_alignment_file\
  \  A SAM or BAM file produced by BLASR.\n  output_header_file    Name of the SAM\
  \ or BAM header file that will be\n                        created with chemistry\
  \ information loaded.\n\noptional arguments:\n  -h, --help            show this\
  \ help message and exit\n  --debug               Output detailed log information.\
  \ (default: False)\n  --bas_files BAS_FILES [BAS_FILES ...]\n                  \
  \      The bas or bax files containing the reads that were\n                   \
  \     aligned in the input_alignment_file. Also can be a\n                     \
  \   fofn of bas or bax files. (default: None)\n"
generated_using: *id004
docker_image:
