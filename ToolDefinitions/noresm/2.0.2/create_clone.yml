!Command
command:
- create_clone
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: Print debug information (very verbose) to file /create_clone.log
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Add additional context (time and file) to log messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --silent
  description: Print only warnings and error messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --case
  - -case
  description: "(required) Specify a new case name. If not a full pathname,\nthe new\
    \ case will be created under then current working directory."
  args: !SimpleFlagArg
    name: CASE
- !Flag
  optional: true
  synonyms:
  - --clone
  - -clone
  description: "(required) Specify a case to be cloned. If not a full pathname,\n\
    the case to be cloned is assumed to be under then current working directory."
  args: !SimpleFlagArg
    name: CLONE
- !Flag
  optional: true
  synonyms:
  - --user-mods-dir
  description: "Full pathname to a directory containing any combination of user_nl_*\
    \ files\nand shell_commands script (typically containing xmlchange commands).\n\
    The directory can also contain an SourceMods/ directory with the same structure\n\
    as would be found in a case directory. If this argument is used in conjunction\n\
    with the --keepexe flag, then no changes will be permitted to the env_build.xml\n\
    in the newly created case directory."
  args: !SimpleFlagArg
    name: USER_MODS_DIR
- !Flag
  optional: true
  synonyms:
  - --keepexe
  - -keepexe
  description: "Sets EXEROOT to point to original build. It is HIGHLY recommended\n\
    that the original case be built BEFORE cloning it if the --keepexe flag is specfied.\n\
    This flag will make the SourceMods/ directory in the newly created case directory\
    \ a\nsymbolic link to the SourceMods/ directory in the original case directory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mach-dir
  - -mach_dir
  description: "Specify the locations of the Machines directory, other than the default.\n\
    The default is CIMEROOT/machines."
  args: !SimpleFlagArg
    name: MACH_DIR
- !Flag
  optional: true
  synonyms:
  - --project
  - -project
  description: "Specify a project id. The default is the user-specified environment\
    \ variable\nvariable PROJECT or ACCOUNT or read from ~/.cesm_proj."
  args: !SimpleFlagArg
    name: PROJECT
- !Flag
  optional: true
  synonyms:
  - --cime-output-root
  description: "Specify the root output directory. The default is the setting in the\
    \ original\ncase directory. NOTE: create_clone will fail if this directory is\
    \ not writable.\n"
  args: !SimpleFlagArg
    name: CIME_OUTPUT_ROOT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: create_clone [-h] [-d] [-v] [-s] --case CASE --clone CLONE\n  \
  \                  [--user-mods-dir USER_MODS_DIR] [--keepexe]\n               \
  \     [--mach-dir MACH_DIR] [--project PROJECT]\n                    [--cime-output-root\
  \ CIME_OUTPUT_ROOT]\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n  -d, --debug           Print debug information (very verbose)\
  \ to file /create_clone.log\n  -v, --verbose         Add additional context (time\
  \ and file) to log messages\n  -s, --silent          Print only warnings and error\
  \ messages\n  --case CASE, -case CASE\n                        (required) Specify\
  \ a new case name. If not a full pathname, \n                        the new case\
  \ will be created under then current working directory.\n  --clone CLONE, -clone\
  \ CLONE\n                        (required) Specify a case to be cloned. If not\
  \ a full pathname, \n                        the case to be cloned is assumed to\
  \ be under then current working directory.\n  --user-mods-dir USER_MODS_DIR\n  \
  \                      Full pathname to a directory containing any combination of\
  \ user_nl_* files \n                        and shell_commands script (typically\
  \ containing xmlchange commands). \n                        The directory can also\
  \ contain an SourceMods/ directory with the same structure \n                  \
  \      as would be found in a case directory. If this argument is used in conjunction\
  \ \n                        with the --keepexe flag, then no changes will be permitted\
  \ to the env_build.xml \n                        in the newly created case directory.\
  \ \n  --keepexe, -keepexe   Sets EXEROOT to point to original build. It is HIGHLY\
  \ recommended \n                        that the original case be built BEFORE cloning\
  \ it if the --keepexe flag is specfied. \n                        This flag will\
  \ make the SourceMods/ directory in the newly created case directory a \n      \
  \                  symbolic link to the SourceMods/ directory in the original case\
  \ directory. \n  --mach-dir MACH_DIR, -mach_dir MACH_DIR\n                     \
  \   Specify the locations of the Machines directory, other than the default. \n\
  \                        The default is CIMEROOT/machines.\n  --project PROJECT,\
  \ -project PROJECT\n                        Specify a project id. The default is\
  \ the user-specified environment variable\n                        variable PROJECT\
  \ or ACCOUNT or read from ~/.cesm_proj.\n  --cime-output-root CIME_OUTPUT_ROOT\n\
  \                        Specify the root output directory. The default is the setting\
  \ in the original\n                        case directory. NOTE: create_clone will\
  \ fail if this directory is not writable.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/noresm:2.0.2--py37pl5262h736fc29_0
