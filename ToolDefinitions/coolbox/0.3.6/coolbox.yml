&id001 !Command
command:
- coolbox
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - coolbox
  - gen_notebook
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --notes
    description: "=\e[4mNOTES\e[0m\nDefault: True\nGenerate markdown notes in notebook\
      \ or not."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --figsave
    description: "=\e[4mFIGSAVE\e[0m\nDefault: True\nGenerate codes for saving figure\
      \ or not."
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "INFO: Showing help with the command 'coolbox gen_notebook -- --help'.\n\
    \n\e[1mNAME\e[0m\n    coolbox gen_notebook - Generate The notebook contain codes\
    \ for run coolbox browser.\n\n\e[1mSYNOPSIS\e[0m\n    coolbox gen_notebook \e\
    [4mNOTEBOOK_PATH\e[0m <flags>\n\n\e[1mDESCRIPTION\e[0m\n    Generate The notebook\
    \ contain codes for run coolbox browser.\n\n\e[1mPOSITIONAL ARGUMENTS\e[0m\n \
    \   \e[1m\e[4mNOTEBOOK_PATH\e[0m\e[0m\n        The output notebook path.\n\n\e\
    [1mFLAGS\e[0m\n    --notes=\e[4mNOTES\e[0m\n        Default: True\n        Generate\
    \ markdown notes in notebook or not.\n    --figsave=\e[4mFIGSAVE\e[0m\n      \
    \  Default: True\n        Generate codes for saving figure or not.\n\n\e[1mNOTES\e\
    [0m\n    You can also use flags syntax for POSITIONAL ARGUMENTS\n"
  generated_using: &id005
  - --help
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - show_doc
  positional:
  - !Positional
    optional: false
    position: 0
    name: ELEM_STR
    description: ''
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
    \ argument: elem_str\nUsage: coolbox show_doc ELEM_STR\n\nFor detailed information\
    \ on this command, run:\n  coolbox show_doc --help\n"
  generated_using: &id004 []
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- &id002 !Command
  command:
  - coolbox
  - add
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - coolbox
    - add
    - ELEM_STR
    positional:
    - !Positional
      optional: false
      position: 0
      name: current_range
      description: frames
    - !Positional
      optional: false
      position: 0
      name: add
      description: 'Add a Element(Track, Coverage, Feature), for example: coolbox
        add XAxis'
    - !Positional
      optional: false
      position: 1
      name: end_with
      description: End the with block
    - !Positional
      optional: false
      position: 2
      name: gen_notebook
      description: Generate The notebook contain codes for run coolbox browser.
    - !Positional
      optional: false
      position: 3
      name: goto
      description: Goto a genome range.
    - !Positional
      optional: false
      position: 4
      name: joint_view
      description: Start a new frame positioned at the specified frame_pos in the
        final joint view. The center frame should be a single Cool, HicMat, DotHic
        track.
    - !Positional
      optional: false
      position: 5
      name: load_module
      description: 'Import custom tracks from a module/package for example:'
    - !Positional
      optional: false
      position: 6
      name: plot
      description: Draw a figure within a genome range and save to file
    - !Positional
      optional: false
      position: 7
      name: print_source
      description: Print the browser composing code.
    - !Positional
      optional: false
      position: 8
      name: run_jupyter
      description: Create a notebook according to command line, then start a jupyter
        process.
    - !Positional
      optional: false
      position: 9
      name: run_webapp
      description: Run a independent coolbox browser web app. (Create notebook and
        run voila)
    - !Positional
      optional: false
      position: 10
      name: set_genome
      description: Set reference genome for browser object.
    - !Positional
      optional: false
      position: 11
      name: show_doc
      description: 'Print the document of specified Element type. For example: coolbox
        show_doc Cool'
    - !Positional
      optional: false
      position: 12
      name: source
      description: "start_with\nStart a 'with' block, apply the element to all elements\
        \ within the block."
    - !Positional
      optional: false
      position: 13
      name: version
      description: print coolbox version
    - !Positional
      optional: false
      position: 0
      name: frame_pos
      description: genome
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    coolbox add ELEM_STR -h - CoolBox Command Line\
      \ Interface\n\n\e[1mSYNOPSIS\e[0m\n    coolbox add ELEM_STR -h - \e[4mGROUP\e\
      [0m | \e[4mCOMMAND\e[0m | \e[4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e[0m\n    You\
      \ can use this cli to create coolbox browser instance,\n    visualize your data\
      \ directly in shell.\n\n    example:\n\n    1. Draw tracks within a genome range,\
      \ save figure to a pdf file:\n\n        $ coolbox add XAxis - add BigWig test.bw\
      \ - goto \"chr1:5000000-6000000\" - plot test.pdf\n\n    2. Generate a notebook\
      \ and run jupyter to open browser:\n\n        $ coolbox add XAxis - add BigWig\
      \ test.bw - goto \"chr1:5000000-6000000\" - run_jupyter\n\n    3. Run a independent\
      \ web application.\n\n        $ coolbox add XAxis - add BigWig test.bw - goto\
      \ \"chr1:5000000-6000000\" - run_webapp\n\n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e\
      [0m\e[0m is one of the following:\n\n     current_range\n\n     frames\n\n\e\
      [1mCOMMANDS\e[0m\n    \e[1m\e[4mCOMMAND\e[0m\e[0m is one of the following:\n\
      \n     add\n       Add a Element(Track, Coverage, Feature), for example: coolbox\
      \ add XAxis\n\n     end_with\n       End the with block\n\n     gen_notebook\n\
      \       Generate The notebook contain codes for run coolbox browser.\n\n   \
      \  goto\n       Goto a genome range.\n\n     joint_view\n       Start a new\
      \ frame positioned at the specified frame_pos in the final joint view. The center\
      \ frame should be a single Cool, HicMat, DotHic track.\n\n     load_module\n\
      \       Import custom tracks from a module/package for example:\n\n     plot\n\
      \       Draw a figure within a genome range and save to file\n\n     print_source\n\
      \       Print the browser composing code.\n\n     run_jupyter\n       Create\
      \ a notebook according to command line, then start a jupyter process.\n\n  \
      \   run_webapp\n       Run a independent coolbox browser web app. (Create notebook\
      \ and run voila)\n\n     set_genome\n       Set reference genome for browser\
      \ object.\n\n     show_doc\n       Print the document of specified Element type.\
      \ For example: coolbox show_doc Cool\n\n     source\n\n     start_with\n   \
      \    Start a 'with' block, apply the element to all elements within the block.\n\
      \n     version\n       print coolbox version\n\n\e[1mVALUES\e[0m\n    \e[1m\e\
      [4mVALUE\e[0m\e[0m is one of the following:\n\n     frame_pos\n\n     genome\n"
    generated_using: &id003
    - -h
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - add
    - ARGS
    positional:
    - !Positional
      optional: false
      position: 0
      name: current_range
      description: frames
    - !Positional
      optional: false
      position: 0
      name: add
      description: 'Add a Element(Track, Coverage, Feature), for example: coolbox
        add XAxis'
    - !Positional
      optional: false
      position: 1
      name: end_with
      description: End the with block
    - !Positional
      optional: false
      position: 2
      name: gen_notebook
      description: Generate The notebook contain codes for run coolbox browser.
    - !Positional
      optional: false
      position: 3
      name: goto
      description: Goto a genome range.
    - !Positional
      optional: false
      position: 4
      name: joint_view
      description: Start a new frame positioned at the specified frame_pos in the
        final joint view. The center frame should be a single Cool, HicMat, DotHic
        track.
    - !Positional
      optional: false
      position: 5
      name: load_module
      description: 'Import custom tracks from a module/package for example:'
    - !Positional
      optional: false
      position: 6
      name: plot
      description: Draw a figure within a genome range and save to file
    - !Positional
      optional: false
      position: 7
      name: print_source
      description: Print the browser composing code.
    - !Positional
      optional: false
      position: 8
      name: run_jupyter
      description: Create a notebook according to command line, then start a jupyter
        process.
    - !Positional
      optional: false
      position: 9
      name: run_webapp
      description: Run a independent coolbox browser web app. (Create notebook and
        run voila)
    - !Positional
      optional: false
      position: 10
      name: set_genome
      description: Set reference genome for browser object.
    - !Positional
      optional: false
      position: 11
      name: show_doc
      description: 'Print the document of specified Element type. For example: coolbox
        show_doc Cool'
    - !Positional
      optional: false
      position: 12
      name: source
      description: "start_with\nStart a 'with' block, apply the element to all elements\
        \ within the block."
    - !Positional
      optional: false
      position: 13
      name: version
      description: print coolbox version
    - !Positional
      optional: false
      position: 0
      name: frame_pos
      description: genome
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    coolbox add ARGS -h - CoolBox Command Line Interface\n\
      \n\e[1mSYNOPSIS\e[0m\n    coolbox add ARGS -h - \e[4mGROUP\e[0m | \e[4mCOMMAND\e\
      [0m | \e[4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e[0m\n    You can use this cli to\
      \ create coolbox browser instance,\n    visualize your data directly in shell.\n\
      \n    example:\n\n    1. Draw tracks within a genome range, save figure to a\
      \ pdf file:\n\n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
      \ - plot test.pdf\n\n    2. Generate a notebook and run jupyter to open browser:\n\
      \n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
      \ - run_jupyter\n\n    3. Run a independent web application.\n\n        $ coolbox\
      \ add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\" - run_webapp\n\
      \n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e[0m\e[0m is one of the following:\n\
      \n     current_range\n\n     frames\n\n\e[1mCOMMANDS\e[0m\n    \e[1m\e[4mCOMMAND\e\
      [0m\e[0m is one of the following:\n\n     add\n       Add a Element(Track, Coverage,\
      \ Feature), for example: coolbox add XAxis\n\n     end_with\n       End the\
      \ with block\n\n     gen_notebook\n       Generate The notebook contain codes\
      \ for run coolbox browser.\n\n     goto\n       Goto a genome range.\n\n   \
      \  joint_view\n       Start a new frame positioned at the specified frame_pos\
      \ in the final joint view. The center frame should be a single Cool, HicMat,\
      \ DotHic track.\n\n     load_module\n       Import custom tracks from a module/package\
      \ for example:\n\n     plot\n       Draw a figure within a genome range and\
      \ save to file\n\n     print_source\n       Print the browser composing code.\n\
      \n     run_jupyter\n       Create a notebook according to command line, then\
      \ start a jupyter process.\n\n     run_webapp\n       Run a independent coolbox\
      \ browser web app. (Create notebook and run voila)\n\n     set_genome\n    \
      \   Set reference genome for browser object.\n\n     show_doc\n       Print\
      \ the document of specified Element type. For example: coolbox show_doc Cool\n\
      \n     source\n\n     start_with\n       Start a 'with' block, apply the element\
      \ to all elements within the block.\n\n     version\n       print coolbox version\n\
      \n\e[1mVALUES\e[0m\n    \e[1m\e[4mVALUE\e[0m\e[0m is one of the following:\n\
      \n     frame_pos\n\n     genome\n"
    generated_using: *id003
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - add
    - flags
    positional:
    - !Positional
      optional: false
      position: 0
      name: current_range
      description: frames
    - !Positional
      optional: false
      position: 0
      name: add
      description: 'Add a Element(Track, Coverage, Feature), for example: coolbox
        add XAxis'
    - !Positional
      optional: false
      position: 1
      name: end_with
      description: End the with block
    - !Positional
      optional: false
      position: 2
      name: gen_notebook
      description: Generate The notebook contain codes for run coolbox browser.
    - !Positional
      optional: false
      position: 3
      name: goto
      description: Goto a genome range.
    - !Positional
      optional: false
      position: 4
      name: joint_view
      description: Start a new frame positioned at the specified frame_pos in the
        final joint view. The center frame should be a single Cool, HicMat, DotHic
        track.
    - !Positional
      optional: false
      position: 5
      name: load_module
      description: 'Import custom tracks from a module/package for example:'
    - !Positional
      optional: false
      position: 6
      name: plot
      description: Draw a figure within a genome range and save to file
    - !Positional
      optional: false
      position: 7
      name: print_source
      description: Print the browser composing code.
    - !Positional
      optional: false
      position: 8
      name: run_jupyter
      description: Create a notebook according to command line, then start a jupyter
        process.
    - !Positional
      optional: false
      position: 9
      name: run_webapp
      description: Run a independent coolbox browser web app. (Create notebook and
        run voila)
    - !Positional
      optional: false
      position: 10
      name: set_genome
      description: Set reference genome for browser object.
    - !Positional
      optional: false
      position: 11
      name: show_doc
      description: 'Print the document of specified Element type. For example: coolbox
        show_doc Cool'
    - !Positional
      optional: false
      position: 12
      name: source
      description: "start_with\nStart a 'with' block, apply the element to all elements\
        \ within the block."
    - !Positional
      optional: false
      position: 13
      name: version
      description: print coolbox version
    - !Positional
      optional: false
      position: 0
      name: frame_pos
      description: genome
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    coolbox add flags -h - CoolBox Command Line Interface\n\
      \n\e[1mSYNOPSIS\e[0m\n    coolbox add flags -h - \e[4mGROUP\e[0m | \e[4mCOMMAND\e\
      [0m | \e[4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e[0m\n    You can use this cli to\
      \ create coolbox browser instance,\n    visualize your data directly in shell.\n\
      \n    example:\n\n    1. Draw tracks within a genome range, save figure to a\
      \ pdf file:\n\n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
      \ - plot test.pdf\n\n    2. Generate a notebook and run jupyter to open browser:\n\
      \n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
      \ - run_jupyter\n\n    3. Run a independent web application.\n\n        $ coolbox\
      \ add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\" - run_webapp\n\
      \n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e[0m\e[0m is one of the following:\n\
      \n     current_range\n\n     frames\n\n\e[1mCOMMANDS\e[0m\n    \e[1m\e[4mCOMMAND\e\
      [0m\e[0m is one of the following:\n\n     add\n       Add a Element(Track, Coverage,\
      \ Feature), for example: coolbox add XAxis\n\n     end_with\n       End the\
      \ with block\n\n     gen_notebook\n       Generate The notebook contain codes\
      \ for run coolbox browser.\n\n     goto\n       Goto a genome range.\n\n   \
      \  joint_view\n       Start a new frame positioned at the specified frame_pos\
      \ in the final joint view. The center frame should be a single Cool, HicMat,\
      \ DotHic track.\n\n     load_module\n       Import custom tracks from a module/package\
      \ for example:\n\n     plot\n       Draw a figure within a genome range and\
      \ save to file\n\n     print_source\n       Print the browser composing code.\n\
      \n     run_jupyter\n       Create a notebook according to command line, then\
      \ start a jupyter process.\n\n     run_webapp\n       Run a independent coolbox\
      \ browser web app. (Create notebook and run voila)\n\n     set_genome\n    \
      \   Set reference genome for browser object.\n\n     show_doc\n       Print\
      \ the document of specified Element type. For example: coolbox show_doc Cool\n\
      \n     source\n\n     start_with\n       Start a 'with' block, apply the element\
      \ to all elements within the block.\n\n     version\n       print coolbox version\n\
      \n\e[1mVALUES\e[0m\n    \e[1m\e[4mVALUE\e[0m\e[0m is one of the following:\n\
      \n     frame_pos\n\n     genome\n"
    generated_using: *id003
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
    \ argument: elem_str\nUsage: coolbox add ELEM_STR <flags> [ARGS]...\n  flags are\
    \ accepted\n\nFor detailed information on this command, run:\n  coolbox add --\
    \ --help\n"
  generated_using: *id004
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - joint_view
  positional:
  - !Positional
    optional: false
    position: 0
    name: current_range
    description: frames
  - !Positional
    optional: false
    position: 0
    name: add
    description: 'Add a Element(Track, Coverage, Feature), for example: coolbox add
      XAxis'
  - !Positional
    optional: false
    position: 1
    name: end_with
    description: End the with block
  - !Positional
    optional: false
    position: 2
    name: gen_notebook
    description: Generate The notebook contain codes for run coolbox browser.
  - !Positional
    optional: false
    position: 3
    name: goto
    description: Goto a genome range.
  - !Positional
    optional: false
    position: 4
    name: joint_view
    description: Start a new frame positioned at the specified frame_pos in the final
      joint view. The center frame should be a single Cool, HicMat, DotHic track.
  - !Positional
    optional: false
    position: 5
    name: load_module
    description: 'Import custom tracks from a module/package for example:'
  - !Positional
    optional: false
    position: 6
    name: plot
    description: Draw a figure within a genome range and save to file
  - !Positional
    optional: false
    position: 7
    name: print_source
    description: Print the browser composing code.
  - !Positional
    optional: false
    position: 8
    name: run_jupyter
    description: Create a notebook according to command line, then start a jupyter
      process.
  - !Positional
    optional: false
    position: 9
    name: run_webapp
    description: Run a independent coolbox browser web app. (Create notebook and run
      voila)
  - !Positional
    optional: false
    position: 10
    name: set_genome
    description: Set reference genome for browser object.
  - !Positional
    optional: false
    position: 11
    name: show_doc
    description: 'Print the document of specified Element type. For example: coolbox
      show_doc Cool'
  - !Positional
    optional: false
    position: 12
    name: source
    description: "start_with\nStart a 'with' block, apply the element to all elements\
      \ within the block."
  - !Positional
    optional: false
    position: 13
    name: version
    description: print coolbox version
  - !Positional
    optional: false
    position: 0
    name: frame_pos
    description: genome
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1mNAME\e[0m\n    coolbox joint_view - CoolBox Command Line Interface\n\
    \n\e[1mSYNOPSIS\e[0m\n    coolbox joint_view - \e[4mGROUP\e[0m | \e[4mCOMMAND\e\
    [0m | \e[4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e[0m\n    You can use this cli to create\
    \ coolbox browser instance,\n    visualize your data directly in shell.\n\n  \
    \  example:\n\n    1. Draw tracks within a genome range, save figure to a pdf\
    \ file:\n\n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
    \ - plot test.pdf\n\n    2. Generate a notebook and run jupyter to open browser:\n\
    \n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
    \ - run_jupyter\n\n    3. Run a independent web application.\n\n        $ coolbox\
    \ add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\" - run_webapp\n\
    \n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e[0m\e[0m is one of the following:\n\n\
    \     current_range\n\n     frames\n\n\e[1mCOMMANDS\e[0m\n    \e[1m\e[4mCOMMAND\e\
    [0m\e[0m is one of the following:\n\n     add\n       Add a Element(Track, Coverage,\
    \ Feature), for example: coolbox add XAxis\n\n     end_with\n       End the with\
    \ block\n\n     gen_notebook\n       Generate The notebook contain codes for run\
    \ coolbox browser.\n\n     goto\n       Goto a genome range.\n\n     joint_view\n\
    \       Start a new frame positioned at the specified frame_pos in the final joint\
    \ view. The center frame should be a single Cool, HicMat, DotHic track.\n\n  \
    \   load_module\n       Import custom tracks from a module/package for example:\n\
    \n     plot\n       Draw a figure within a genome range and save to file\n\n \
    \    print_source\n       Print the browser composing code.\n\n     run_jupyter\n\
    \       Create a notebook according to command line, then start a jupyter process.\n\
    \n     run_webapp\n       Run a independent coolbox browser web app. (Create notebook\
    \ and run voila)\n\n     set_genome\n       Set reference genome for browser object.\n\
    \n     show_doc\n       Print the document of specified Element type. For example:\
    \ coolbox show_doc Cool\n\n     source\n\n     start_with\n       Start a 'with'\
    \ block, apply the element to all elements within the block.\n\n     version\n\
    \       print coolbox version\n\n\e[1mVALUES\e[0m\n    \e[1m\e[4mVALUE\e[0m\e\
    [0m is one of the following:\n\n     frame_pos\n\n     genome\n"
  generated_using: *id004
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - load_module
  positional:
  - !Positional
    optional: false
    position: 0
    name: MOD_STR
    description: ''
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
    \ argument: mod_str\nUsage: coolbox load_module MOD_STR\n\nFor detailed information\
    \ on this command, run:\n  coolbox load_module --help\n"
  generated_using: *id004
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - run_jupyter
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --jupyter_args
    description: "=\e[4mJUPYTER_ARGS\e[0m\nDefault: '--ip=0.0.0.0'\nArguments for\
      \ run jupyter.\n"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "INFO: Showing help with the command 'coolbox run_jupyter -- --help'.\n\
    \n\e[1mNAME\e[0m\n    coolbox run_jupyter - Create a notebook according to command\
    \ line, then start a jupyter process.\n\n\e[1mSYNOPSIS\e[0m\n    coolbox run_jupyter\
    \ <flags>\n\n\e[1mDESCRIPTION\e[0m\n    Create a notebook according to command\
    \ line, then start a jupyter process.\n\n\e[1mFLAGS\e[0m\n    --jupyter_args=\e\
    [4mJUPYTER_ARGS\e[0m\n        Default: '--ip=0.0.0.0'\n        Arguments for run\
    \ jupyter.\n"
  generated_using: *id005
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- &id006 !Command
  command:
  - coolbox
  - set_genome
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - coolbox
    - set_genome
    - GENOME
    positional:
    - !Positional
      optional: false
      position: 0
      name: current_range
      description: frames
    - !Positional
      optional: false
      position: 0
      name: add
      description: 'Add a Element(Track, Coverage, Feature), for example: coolbox
        add XAxis'
    - !Positional
      optional: false
      position: 1
      name: end_with
      description: End the with block
    - !Positional
      optional: false
      position: 2
      name: gen_notebook
      description: Generate The notebook contain codes for run coolbox browser.
    - !Positional
      optional: false
      position: 3
      name: goto
      description: Goto a genome range.
    - !Positional
      optional: false
      position: 4
      name: joint_view
      description: Start a new frame positioned at the specified frame_pos in the
        final joint view. The center frame should be a single Cool, HicMat, DotHic
        track.
    - !Positional
      optional: false
      position: 5
      name: load_module
      description: 'Import custom tracks from a module/package for example:'
    - !Positional
      optional: false
      position: 6
      name: plot
      description: Draw a figure within a genome range and save to file
    - !Positional
      optional: false
      position: 7
      name: print_source
      description: Print the browser composing code.
    - !Positional
      optional: false
      position: 8
      name: run_jupyter
      description: Create a notebook according to command line, then start a jupyter
        process.
    - !Positional
      optional: false
      position: 9
      name: run_webapp
      description: Run a independent coolbox browser web app. (Create notebook and
        run voila)
    - !Positional
      optional: false
      position: 10
      name: set_genome
      description: Set reference genome for browser object.
    - !Positional
      optional: false
      position: 11
      name: show_doc
      description: 'Print the document of specified Element type. For example: coolbox
        show_doc Cool'
    - !Positional
      optional: false
      position: 12
      name: source
      description: "start_with\nStart a 'with' block, apply the element to all elements\
        \ within the block."
    - !Positional
      optional: false
      position: 13
      name: version
      description: print coolbox version
    - !Positional
      optional: false
      position: 0
      name: frame_pos
      description: genome
    named: []
    parent: *id006
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "INFO: Showing help with the command 'coolbox set_genome GENOME --\
      \ --help'.\n\n\e[1mNAME\e[0m\n    coolbox set_genome GENOME - CoolBox Command\
      \ Line Interface\n\n\e[1mSYNOPSIS\e[0m\n    coolbox set_genome GENOME \e[4mGROUP\e\
      [0m | \e[4mCOMMAND\e[0m | \e[4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e[0m\n    You\
      \ can use this cli to create coolbox browser instance,\n    visualize your data\
      \ directly in shell.\n\n    example:\n\n    1. Draw tracks within a genome range,\
      \ save figure to a pdf file:\n\n        $ coolbox add XAxis - add BigWig test.bw\
      \ - goto \"chr1:5000000-6000000\" - plot test.pdf\n\n    2. Generate a notebook\
      \ and run jupyter to open browser:\n\n        $ coolbox add XAxis - add BigWig\
      \ test.bw - goto \"chr1:5000000-6000000\" - run_jupyter\n\n    3. Run a independent\
      \ web application.\n\n        $ coolbox add XAxis - add BigWig test.bw - goto\
      \ \"chr1:5000000-6000000\" - run_webapp\n\n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e\
      [0m\e[0m is one of the following:\n\n     current_range\n\n     frames\n\n\e\
      [1mCOMMANDS\e[0m\n    \e[1m\e[4mCOMMAND\e[0m\e[0m is one of the following:\n\
      \n     add\n       Add a Element(Track, Coverage, Feature), for example: coolbox\
      \ add XAxis\n\n     end_with\n       End the with block\n\n     gen_notebook\n\
      \       Generate The notebook contain codes for run coolbox browser.\n\n   \
      \  goto\n       Goto a genome range.\n\n     joint_view\n       Start a new\
      \ frame positioned at the specified frame_pos in the final joint view. The center\
      \ frame should be a single Cool, HicMat, DotHic track.\n\n     load_module\n\
      \       Import custom tracks from a module/package for example:\n\n     plot\n\
      \       Draw a figure within a genome range and save to file\n\n     print_source\n\
      \       Print the browser composing code.\n\n     run_jupyter\n       Create\
      \ a notebook according to command line, then start a jupyter process.\n\n  \
      \   run_webapp\n       Run a independent coolbox browser web app. (Create notebook\
      \ and run voila)\n\n     set_genome\n       Set reference genome for browser\
      \ object.\n\n     show_doc\n       Print the document of specified Element type.\
      \ For example: coolbox show_doc Cool\n\n     source\n\n     start_with\n   \
      \    Start a 'with' block, apply the element to all elements within the block.\n\
      \n     version\n       print coolbox version\n\n\e[1mVALUES\e[0m\n    \e[1m\e\
      [4mVALUE\e[0m\e[0m is one of the following:\n\n     frame_pos\n\n     genome\n"
    generated_using: *id005
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
    \ argument: genome\nUsage: coolbox set_genome GENOME\n\nFor detailed information\
    \ on this command, run:\n  coolbox set_genome --help\n"
  generated_using: *id004
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - run_webapp
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --voila_args
    description: "=\e[4mVOILA_ARGS\e[0m\nDefault: '--Voila.ip=0.0.0.0'\nArguments\
      \ for run jupyter.\n"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "INFO: Showing help with the command 'coolbox run_webapp -- --help'.\n\
    \n\e[1mNAME\e[0m\n    coolbox run_webapp - Run a independent coolbox browser web\
    \ app. (Create notebook and run voila)\n\n\e[1mSYNOPSIS\e[0m\n    coolbox run_webapp\
    \ <flags>\n\n\e[1mDESCRIPTION\e[0m\n    Run a independent coolbox browser web\
    \ app. (Create notebook and run voila)\n\n\e[1mFLAGS\e[0m\n    --voila_args=\e\
    [4mVOILA_ARGS\e[0m\n        Default: '--Voila.ip=0.0.0.0'\n        Arguments for\
    \ run jupyter.\n"
  generated_using: *id005
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - plot
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --genome_range
    description: "=\e[4mGENOME_RANGE\e[0m\nType: Optional[]\nDefault: None\nGenome\
      \ range string, like \"chr9:4000000-6000000\"."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --genome_range2
    description: "=\e[4mGENOME_RANGE2\e[0m\nType: Optional[]\nDefault: None\nGenome\
      \ range string, like \"chr9:4000000-6000000\"."
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "INFO: Showing help with the command 'coolbox plot -- --help'.\n\n\e\
    [1mNAME\e[0m\n    coolbox plot - Draw a figure within a genome range and save\
    \ to file\n\n\e[1mSYNOPSIS\e[0m\n    coolbox plot \e[4mFIG_PATH\e[0m <flags>\n\
    \n\e[1mDESCRIPTION\e[0m\n    Draw a figure within a genome range and save to file\n\
    \n\e[1mPOSITIONAL ARGUMENTS\e[0m\n    \e[1m\e[4mFIG_PATH\e[0m\e[0m\n        Figure\
    \ save path\n\n\e[1mFLAGS\e[0m\n    --genome_range=\e[4mGENOME_RANGE\e[0m\n  \
    \      Type: Optional[]\n        Default: None\n        Genome range string, like\
    \ \"chr9:4000000-6000000\".\n    --genome_range2=\e[4mGENOME_RANGE2\e[0m\n   \
    \     Type: Optional[]\n        Default: None\n        Genome range string, like\
    \ \"chr9:4000000-6000000\".\n\n\e[1mNOTES\e[0m\n    You can also use flags syntax\
    \ for POSITIONAL ARGUMENTS\n"
  generated_using: *id005
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- &id007 !Command
  command:
  - coolbox
  - current_range
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - coolbox
    - current_range
    - extend
    positional:
    - !Positional
      optional: false
      position: 0
      name: ITERABLE
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: iterable\nUsage: coolbox current_range extend ITERABLE\n\nFor detailed\
      \ information on this command, run:\n  coolbox current_range extend --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - count
    positional:
    - !Positional
      optional: false
      position: 0
      name: VALUE
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: value\nUsage: coolbox current_range count VALUE\n\nFor detailed\
      \ information on this command, run:\n  coolbox current_range count --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - append
    positional:
    - !Positional
      optional: false
      position: 0
      name: OBJECT
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: object\nUsage: coolbox current_range append OBJECT\n\nFor detailed\
      \ information on this command, run:\n  coolbox current_range append --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - insert
    positional:
    - !Positional
      optional: false
      position: 0
      name: INDEX
      description: ''
    - !Positional
      optional: false
      position: 1
      name: OBJECT
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: index\nUsage: coolbox current_range insert INDEX OBJECT\n\nFor detailed\
      \ information on this command, run:\n  coolbox current_range insert --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - copy
    positional:
    - !Positional
      optional: false
      position: 0
      name: command|index
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mUnable to index into component with argument:\
      \ --usage\nUsage: coolbox current_range copy <command|index>\n  available commands:\
      \    append | clear | copy | count | extend | index |\n                    \
      \     insert | pop | remove | reverse | sort\n  available indexes:     0, 1\n\
      \nFor detailed information on this command, run:\n  coolbox current_range copy\
      \ --help\n"
    generated_using:
    - --usage
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - sort
    positional: []
    named:
    - !Flag
      optional: true
      synonyms:
      - --key
      description: "=\e[4mKEY\e[0m"
      args: !EmptyFlagArg {}
    - !Flag
      optional: true
      synonyms:
      - --reverse
      description: "=\e[4mREVERSE\e[0m"
      args: !EmptyFlagArg {}
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "INFO: Showing help with the command 'coolbox current_range sort --\
      \ --help'.\n\n\e[1mNAME\e[0m\n    coolbox current_range sort - Sort the list\
      \ in ascending order and return None.\n\n\e[1mSYNOPSIS\e[0m\n    coolbox current_range\
      \ sort <flags>\n\n\e[1mDESCRIPTION\e[0m\n    The sort is in-place (i.e. the\
      \ list itself is modified) and stable (i.e. the\n    order of two equal elements\
      \ is maintained).\n\n    If a key function is given, apply it once to each list\
      \ item and sort them,\n    ascending or descending, according to their function\
      \ values.\n\n    The reverse flag can be set to sort in descending order.\n\n\
      \e[1mFLAGS\e[0m\n    --key=\e[4mKEY\e[0m\n    --reverse=\e[4mREVERSE\e[0m\n"
    generated_using: *id005
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - remove
    positional:
    - !Positional
      optional: false
      position: 0
      name: VALUE
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: value\nUsage: coolbox current_range remove VALUE\n\nFor detailed\
      \ information on this command, run:\n  coolbox current_range remove --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - index
    positional:
    - !Positional
      optional: false
      position: 0
      name: VALUE
      description: ''
    - !Positional
      optional: false
      position: 1
      name: START
      description: ''
    - !Positional
      optional: false
      position: 2
      name: STOP
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: value\nUsage: coolbox current_range index VALUE START STOP\n\nFor\
      \ detailed information on this command, run:\n  coolbox current_range index\
      \ --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  - !Command
    command:
    - coolbox
    - current_range
    - pop
    positional:
    - !Positional
      optional: false
      position: 0
      name: INDEX
      description: ''
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1m\e[31mERROR: \e[0mThe function received no value for the required\
      \ argument: index\nUsage: coolbox current_range pop INDEX\n\nFor detailed information\
      \ on this command, run:\n  coolbox current_range pop --help\n"
    generated_using: *id004
    docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "INFO: Showing help with the command 'coolbox current_range -- --help'.\n\
    \n\e[1mNAME\e[0m\n    coolbox current_range\n\n\e[1mSYNOPSIS\e[0m\n    coolbox\
    \ current_range \e[4mCOMMAND\e[0m | \e[4mINDEX\e[0m\n\n\e[1mCOMMANDS\e[0m\n  \
    \  \e[1m\e[4mCOMMAND\e[0m\e[0m is one of the following:\n\n     append\n     \
    \  Append object to the end of the list.\n\n     clear\n       Remove all items\
    \ from list.\n\n     copy\n       Return a shallow copy of the list.\n\n     count\n\
    \       Return number of occurrences of value.\n\n     extend\n       Extend list\
    \ by appending elements from the iterable.\n\n     index\n       Return first\
    \ index of value.\n\n     insert\n       Insert object before index.\n\n     pop\n\
    \       Remove and return item at index (default last).\n\n     remove\n     \
    \  Remove first occurrence of value.\n\n     reverse\n       Reverse *IN PLACE*.\n\
    \n     sort\n       Sort the list in ascending order and return None.\n\n\e[1mINDEXES\e\
    [0m\n    \e[1m\e[4mINDEX\e[0m\e[0m is one of the following:\n\n     0, 1\n"
  generated_using: *id005
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
- !Command
  command:
  - coolbox
  - goto
  positional:
  - !Positional
    optional: false
    position: 0
    name: current_range
    description: frames
  - !Positional
    optional: false
    position: 0
    name: add
    description: 'Add a Element(Track, Coverage, Feature), for example: coolbox add
      XAxis'
  - !Positional
    optional: false
    position: 1
    name: end_with
    description: End the with block
  - !Positional
    optional: false
    position: 2
    name: gen_notebook
    description: Generate The notebook contain codes for run coolbox browser.
  - !Positional
    optional: false
    position: 3
    name: goto
    description: Goto a genome range.
  - !Positional
    optional: false
    position: 4
    name: joint_view
    description: Start a new frame positioned at the specified frame_pos in the final
      joint view. The center frame should be a single Cool, HicMat, DotHic track.
  - !Positional
    optional: false
    position: 5
    name: load_module
    description: 'Import custom tracks from a module/package for example:'
  - !Positional
    optional: false
    position: 6
    name: plot
    description: Draw a figure within a genome range and save to file
  - !Positional
    optional: false
    position: 7
    name: print_source
    description: Print the browser composing code.
  - !Positional
    optional: false
    position: 8
    name: run_jupyter
    description: Create a notebook according to command line, then start a jupyter
      process.
  - !Positional
    optional: false
    position: 9
    name: run_webapp
    description: Run a independent coolbox browser web app. (Create notebook and run
      voila)
  - !Positional
    optional: false
    position: 10
    name: set_genome
    description: Set reference genome for browser object.
  - !Positional
    optional: false
    position: 11
    name: show_doc
    description: 'Print the document of specified Element type. For example: coolbox
      show_doc Cool'
  - !Positional
    optional: false
    position: 12
    name: source
    description: "start_with\nStart a 'with' block, apply the element to all elements\
      \ within the block."
  - !Positional
    optional: false
    position: 13
    name: version
    description: print coolbox version
  - !Positional
    optional: false
    position: 0
    name: frame_pos
    description: genome
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1mNAME\e[0m\n    coolbox goto - CoolBox Command Line Interface\n\n\
    \e[1mSYNOPSIS\e[0m\n    coolbox goto - \e[4mGROUP\e[0m | \e[4mCOMMAND\e[0m | \e\
    [4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e[0m\n    You can use this cli to create coolbox\
    \ browser instance,\n    visualize your data directly in shell.\n\n    example:\n\
    \n    1. Draw tracks within a genome range, save figure to a pdf file:\n\n   \
    \     $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
    \ - plot test.pdf\n\n    2. Generate a notebook and run jupyter to open browser:\n\
    \n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
    \ - run_jupyter\n\n    3. Run a independent web application.\n\n        $ coolbox\
    \ add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\" - run_webapp\n\
    \n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e[0m\e[0m is one of the following:\n\n\
    \     current_range\n\n     frames\n\n\e[1mCOMMANDS\e[0m\n    \e[1m\e[4mCOMMAND\e\
    [0m\e[0m is one of the following:\n\n     add\n       Add a Element(Track, Coverage,\
    \ Feature), for example: coolbox add XAxis\n\n     end_with\n       End the with\
    \ block\n\n     gen_notebook\n       Generate The notebook contain codes for run\
    \ coolbox browser.\n\n     goto\n       Goto a genome range.\n\n     joint_view\n\
    \       Start a new frame positioned at the specified frame_pos in the final joint\
    \ view. The center frame should be a single Cool, HicMat, DotHic track.\n\n  \
    \   load_module\n       Import custom tracks from a module/package for example:\n\
    \n     plot\n       Draw a figure within a genome range and save to file\n\n \
    \    print_source\n       Print the browser composing code.\n\n     run_jupyter\n\
    \       Create a notebook according to command line, then start a jupyter process.\n\
    \n     run_webapp\n       Run a independent coolbox browser web app. (Create notebook\
    \ and run voila)\n\n     set_genome\n       Set reference genome for browser object.\n\
    \n     show_doc\n       Print the document of specified Element type. For example:\
    \ coolbox show_doc Cool\n\n     source\n\n     start_with\n       Start a 'with'\
    \ block, apply the element to all elements within the block.\n\n     version\n\
    \       print coolbox version\n\n\e[1mVALUES\e[0m\n    \e[1m\e[4mVALUE\e[0m\e\
    [0m is one of the following:\n\n     frame_pos\n\n     genome\n"
  generated_using: *id004
  docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    coolbox - CoolBox Command Line Interface\n\n\e[1mSYNOPSIS\e\
  [0m\n    coolbox - \e[4mGROUP\e[0m | \e[4mCOMMAND\e[0m | \e[4mVALUE\e[0m\n\n\e[1mDESCRIPTION\e\
  [0m\n    You can use this cli to create coolbox browser instance,\n    visualize\
  \ your data directly in shell.\n\n    example:\n\n    1. Draw tracks within a genome\
  \ range, save figure to a pdf file:\n\n        $ coolbox add XAxis - add BigWig\
  \ test.bw - goto \"chr1:5000000-6000000\" - plot test.pdf\n\n    2. Generate a notebook\
  \ and run jupyter to open browser:\n\n        $ coolbox add XAxis - add BigWig test.bw\
  \ - goto \"chr1:5000000-6000000\" - run_jupyter\n\n    3. Run a independent web\
  \ application.\n\n        $ coolbox add XAxis - add BigWig test.bw - goto \"chr1:5000000-6000000\"\
  \ - run_webapp\n\n\e[1mGROUPS\e[0m\n    \e[1m\e[4mGROUP\e[0m\e[0m is one of the\
  \ following:\n\n     current_range\n\n     frames\n\n\e[1mCOMMANDS\e[0m\n    \e\
  [1m\e[4mCOMMAND\e[0m\e[0m is one of the following:\n\n     add\n       Add a Element(Track,\
  \ Coverage, Feature), for example: coolbox add XAxis\n\n     end_with\n       End\
  \ the with block\n\n     gen_notebook\n       Generate The notebook contain codes\
  \ for run coolbox browser.\n\n     goto\n       Goto a genome range.\n\n     joint_view\n\
  \       Start a new frame positioned at the specified frame_pos in the final joint\
  \ view. The center frame should be a single Cool, HicMat, DotHic track.\n\n    \
  \ load_module\n       Import custom tracks from a module/package for example:\n\n\
  \     plot\n       Draw a figure within a genome range and save to file\n\n    \
  \ print_source\n       Print the browser composing code.\n\n     run_jupyter\n \
  \      Create a notebook according to command line, then start a jupyter process.\n\
  \n     run_webapp\n       Run a independent coolbox browser web app. (Create notebook\
  \ and run voila)\n\n     set_genome\n       Set reference genome for browser object.\n\
  \n     show_doc\n       Print the document of specified Element type. For example:\
  \ coolbox show_doc Cool\n\n     source\n\n     start_with\n       Start a 'with'\
  \ block, apply the element to all elements within the block.\n\n     version\n \
  \      print coolbox version\n\n\e[1mVALUES\e[0m\n    \e[1m\e[4mVALUE\e[0m\e[0m\
  \ is one of the following:\n\n     frame_pos\n\n     genome\n"
generated_using: *id004
docker_image: quay.io/biocontainers/coolbox:0.3.6--py_0
