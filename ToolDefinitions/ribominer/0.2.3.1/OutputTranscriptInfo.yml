!Command
command:
- OutputTranscriptInfo
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -c
  - --coordinateFile
  description: "The file should contain the coordinate of start and\nstop codon of\
    \ each transcript. Generated by\nRiboCode.[required]"
  args: !SimpleFlagArg
    name: COORFILE
- !Flag
  optional: true
  synonyms:
  - -g
  - --gtfFile
  description: Reference gene annotation in gtf format.[required]
  args: !SimpleFlagArg
    name: GTFFILE
- !Flag
  optional: true
  synonyms:
  - -f
  - --transcriptFile
  description: "transcript file with fasta format generated by\nRiboCode.[required]"
  args: !SimpleFlagArg
    name: TRANSCRIPTFILE
- !Flag
  optional: true
  synonyms:
  - -o
  - --output-longest-transcrpts
  description: Longest transcripts information.
  args: !SimpleFlagArg
    name: LONGESTTRANSINFO
- !Flag
  optional: true
  synonyms:
  - -O
  - --output-all-transcrpts
  description: "All transcripts information.\n"
  args: !SimpleFlagArg
    name: ALLTRANSINFO
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: python OutputTranscriptInfo [options]\n\nAuthor: Li Fajin\n\n\n\
  \n\nOptions:\n  --version             show program's version number and exit\n \
  \ -h, --help            show this help message and exit\n  -c COORFILE, --coordinateFile=COORFILE\n\
  \                        The file should contain the coordinate of start and\n \
  \                       stop codon of each transcript. Generated by\n          \
  \              RiboCode.[required]\n  -g GTFFILE, --gtfFile=GTFFILE\n          \
  \              Reference gene annotation in gtf format.[required]\n  -f TRANSCRIPTFILE,\
  \ --transcriptFile=TRANSCRIPTFILE\n                        transcript file with\
  \ fasta format generated by\n                        RiboCode.[required]\n  -o LONGESTTRANSINFO,\
  \ --output-longest-transcrpts=LONGESTTRANSINFO\n                        Longest\
  \ transcripts information.\n  -O ALLTRANSINFO, --output-all-transcrpts=ALLTRANSINFO\n\
  \                        All transcripts information.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0
