!Command
command: &id001
- chakin
- load
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - chakin
  - load
  - interpro
  positional:
  - !Positional
    optional: false
    position: 0
    name: uniquename
    description: --skip_missing     Skip lines with unknown features or GO id instead
      of
  named:
  - !Flag
    optional: true
    synonyms:
    - --parse_go
    description: Load GO annotation to the database
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --re_name
    description: "Regular expression to extract the feature name from the\ninput file\
      \ (first capturing group will be used)."
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --query_type
    description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig')\
      \ of the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --match_on_name
    description: Match features using their name instead of their
    args: !EmptyFlagArg {}
  parent: &id017 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: uniquename
        description: --skip_missing     Skip lines with unknown features or GO id
          instead of
      named:
      - !Flag
        optional: true
        synonyms:
        - --parse_go
        description: Load GO annotation to the database
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --re_name
        description: "Regular expression to extract the feature name from the\ninput\
          \ file (first capturing group will be used)."
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --query_type
        description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig')\
          \ of the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --match_on_name
        description: Match features using their name instead of their
        args: !EmptyFlagArg {}
      parent: &id016 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: uniquename
            description: --skip_missing     Skip lines with unknown features or GO
              id instead of
          named:
          - !Flag
            optional: true
            synonyms:
            - --parse_go
            description: Load GO annotation to the database
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --re_name
            description: "Regular expression to extract the feature name from the\n\
              input file (first capturing group will be used)."
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --query_type
            description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
              'contig') of the query. It must be a valid Sequence\nOntology term.\
              \  [default: polypeptide]"
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --match_on_name
            description: Match features using their name instead of their
            args: !EmptyFlagArg {}
          parent: &id015 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: uniquename
                description: --skip_missing     Skip lines with unknown features or
                  GO id instead of
              named:
              - !Flag
                optional: true
                synonyms:
                - --parse_go
                description: Load GO annotation to the database
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --re_name
                description: "Regular expression to extract the feature name from\
                  \ the\ninput file (first capturing group will be used)."
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --query_type
                description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                  'contig') of the query. It must be a valid Sequence\nOntology term.\
                  \  [default: polypeptide]"
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --match_on_name
                description: Match features using their name instead of their
                args: !EmptyFlagArg {}
              parent: &id014 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: uniquename
                    description: --skip_missing     Skip lines with unknown features
                      or GO id instead of
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --parse_go
                    description: Load GO annotation to the database
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --re_name
                    description: "Regular expression to extract the feature name from\
                      \ the\ninput file (first capturing group will be used)."
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --query_type
                    description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                      'contig') of the query. It must be a valid Sequence\nOntology\
                      \ term.  [default: polypeptide]"
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --match_on_name
                    description: Match features using their name instead of their
                    args: !EmptyFlagArg {}
                  parent: &id009 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent: &id003 !Command
                      command:
                      - chakin
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --verbose
                        description: Enables verbose mode.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --instance
                        description: "Name of instance in /root/.chakin.yml. This\
                          \ parameter\ncan also be set via the environment variable\n\
                          CHADO_INSTANCE  [default: __default; required]"
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        - --path
                        description: config file path
                        args: !SimpleFlagArg
                          name: TEXT
                      parent:
                      subcommands:
                      - &id004 !Command
                        command:
                        - chakin
                        - export
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - chakin
                          - export
                          - export_fasta
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --file
                            description: If true, write to files in CWD
                            args: !EmptyFlagArg {}
                          parent: *id004
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin export export_fasta [OPTIONS]\
                            \ ORGANISM_ID\n\n  Export reference sequences as fasta.\n\
                            \n  Output:\n\n      None\n\nOptions:\n  --file      If\
                            \ true, write to files in CWD\n  -h, --help  Show this\
                            \ message and exit.\n"
                          generated_using: &id005
                          - --help
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - export
                          - export_gbk
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named: []
                          parent: *id004
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin export export_gbk [OPTIONS] ORGANISM_ID\n\
                            \n  Export organism features as genbank\n\n  Output:\n\
                            \n      None\n\nOptions:\n  -h, --help  Show this message\
                            \ and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - export
                          - export_gff3
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named: []
                          parent: *id004
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin export export_gff3 [OPTIONS] ORGANISM_ID\n\
                            \n  Export organism features as GFF3\n\n  Output:\n\n\
                            \      None\n\nOptions:\n  -h, --help  Show this message\
                            \ and exit.\n"
                          generated_using: *id005
                          docker_image:
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          - --help
                          description: Show this message and exit.
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "Usage: chakin export [OPTIONS] COMMAND [ARGS]...\n\
                          \n  Export data from the chado database\n\nOptions:\n  -h,\
                          \ --help  Show this message and exit.\n\nCommands:\n  export_fasta\
                          \  Export reference sequences as fasta.\n  export_gbk  \
                          \  Export organism features as genbank Output: None\n  export_gff3\
                          \   Export organism features as GFF3 Output: None\n"
                        generated_using: *id005
                        docker_image:
                      - &id006 !Command
                        command:
                        - chakin
                        - phylogeny
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - chakin
                          - phylogeny
                          - load_tree
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: NEWICK
                            description: ''
                          - !Positional
                            optional: false
                            position: 1
                            name: ANALYSIS_ID
                            description: ''
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --name
                            description: "The name given to the phylotree entry in\
                              \ the database\n(default=<filename>)"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --xref_db
                            description: "The name of the db to link dbxrefs for the\
                              \ trees\n(default: \"null\")  [default: null]"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --xref_accession
                            description: "The accession to use for dbxrefs for the\
                              \ trees\n(assumed same as name unless otherwise specified)"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --match_on_name
                            description: "Match polypeptide features using their name\
                              \ instead\nof their uniquename"
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --prefix
                            description: "Comma-separated list of prefix to be removed\
                              \ from\nidentifiers (e.g species prefixes when loading\n\
                              OrthoFinder output)"
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id006
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin phylogeny load_tree [OPTIONS]\
                            \ NEWICK ANALYSIS_ID\n\n  Load a phylogenetic tree (Newick\
                            \ format) into Chado db\n\n  Output:\n\n      Number of\
                            \ inserted trees\n\nOptions:\n  --name TEXT          \
                            \  The name given to the phylotree entry in the database\n\
                            \                         (default=<filename>)\n\n  --xref_db\
                            \ TEXT         The name of the db to link dbxrefs for\
                            \ the trees\n                         (default: \"null\"\
                            )  [default: null]\n\n  --xref_accession TEXT  The accession\
                            \ to use for dbxrefs for the trees\n                 \
                            \        (assumed same as name unless otherwise specified)\n\
                            \n  --match_on_name        Match polypeptide features\
                            \ using their name instead\n                         of\
                            \ their uniquename\n\n  --prefix TEXT          Comma-separated\
                            \ list of prefix to be removed from\n                \
                            \         identifiers (e.g species prefixes when loading\n\
                            \                         OrthoFinder output)\n\n  -h,\
                            \ --help             Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - phylogeny
                          - gene_order
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --nuke
                            description: Removes all previous gene ordering data
                            args: !EmptyFlagArg {}
                          parent: *id006
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin phylogeny gene_order [OPTIONS]\n\
                            \n  Orders all the genes in the database by their order\
                            \ on their respective\n  chromosomes in the gene_order\
                            \ table (for use in\n  https://github.com/legumeinfo/lis_context_viewer/).\n\
                            \n  Output:\n\n      None\n\nOptions:\n  --nuke      Removes\
                            \ all previous gene ordering data\n  -h, --help  Show\
                            \ this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - phylogeny
                          - gene_families
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --family_name
                            description: Restrict to families beginning with given
                              prefix
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --nuke
                            description: Removes all previous gene families data
                            args: !EmptyFlagArg {}
                          parent: *id006
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin phylogeny gene_families [OPTIONS]\n\
                            \n  Adds an entry in the featureprop table in a chado\
                            \ database for each family\n  a gene belongs to (for use\
                            \ in\n  https://github.com/legumeinfo/lis_context_viewer/).\n\
                            \n  Output:\n\n      None\n\nOptions:\n  --family_name\
                            \ TEXT  Restrict to families beginning with given prefix\n\
                            \  --nuke              Removes all previous gene families\
                            \ data\n  -h, --help          Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          - --help
                          description: Show this message and exit.
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "Usage: chakin phylogeny [OPTIONS] COMMAND [ARGS]...\n\
                          \n  Access to the chado phylogeny content\n\nOptions:\n\
                          \  -h, --help  Show this message and exit.\n\nCommands:\n\
                          \  add_cvterms    Make sure required cvterms are loaded\
                          \ Output: created...\n  gene_families  Adds an entry in\
                          \ the featureprop table in a chado database...\n  gene_order\
                          \     Orders all the genes in the database by their order\
                          \ on...\n  load_tree      Load a phylogenetic tree (Newick\
                          \ format) into Chado db...\n"
                        generated_using: *id005
                        docker_image:
                      - &id007 !Command
                        command:
                        - chakin
                        - organism
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - chakin
                          - organism
                          - add_organism
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: GENUS
                            description: ''
                          - !Positional
                            optional: false
                            position: 1
                            name: SPECIES
                            description: ''
                          - !Positional
                            optional: false
                            position: 2
                            name: COMMON
                            description: ''
                          - !Positional
                            optional: false
                            position: 3
                            name: ABBR
                            description: ''
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --comment
                            description: A comment / description
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id007
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin organism add_organism [OPTIONS]\
                            \ GENUS SPECIES COMMON ABBR\n\n  Add a new organism to\
                            \ the Chado database\n\n  Output:\n\n      Organism information\n\
                            \nOptions:\n  --comment TEXT  A comment / description\n\
                            \  -h, --help      Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - organism
                          - delete_organisms
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --organism_id
                            description: organism_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --genus
                            description: genus filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --species
                            description: species filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --common
                            description: common filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --abbr
                            description: abbr filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --comment
                            description: comment filter
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id007
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin organism delete_organisms [OPTIONS]\n\
                            \n  Delete all organisms\n\n  Output:\n\n      None\n\n\
                            Options:\n  --organism_id INTEGER  organism_id filter\n\
                            \  --genus TEXT           genus filter\n  --species TEXT\
                            \         species filter\n  --common TEXT          common\
                            \ filter\n  --abbr TEXT            abbr filter\n  --comment\
                            \ TEXT         comment filter\n  -h, --help          \
                            \   Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - organism
                          - delete_all_organisms
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --confirm
                            description: Confirm that you really do want to delete
                              ALL of the organisms.
                            args: !EmptyFlagArg {}
                          parent: *id007
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin organism delete_all_organisms\
                            \ [OPTIONS]\n\n  Delete all organisms\n\n  Output:\n\n\
                            \      None\n\nOptions:\n  --confirm   Confirm that you\
                            \ really do want to delete ALL of the organisms.\n  -h,\
                            \ --help  Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - organism
                          - get_organisms
                          positional: []
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --organism_id
                            description: organism_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --genus
                            description: genus filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --species
                            description: species filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --common
                            description: common filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --abbr
                            description: abbr filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --comment
                            description: comment filter
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id007
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin organism get_organisms [OPTIONS]\n\
                            \n  Get all or some organisms\n\n  Output:\n\n      Organisms\
                            \ information\n\nOptions:\n  --organism_id INTEGER  organism_id\
                            \ filter\n  --genus TEXT           genus filter\n  --species\
                            \ TEXT         species filter\n  --common TEXT       \
                            \   common filter\n  --abbr TEXT            abbr filter\n\
                            \  --comment TEXT         comment filter\n  -h, --help\
                            \             Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          - --help
                          description: Show this message and exit.
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "Usage: chakin organism [OPTIONS] COMMAND [ARGS]...\n\
                          \n  Access to the chado organism table\n\nOptions:\n  -h,\
                          \ --help  Show this message and exit.\n\nCommands:\n  add_organism\
                          \          Add a new organism to the Chado database Output:...\n\
                          \  delete_all_organisms  Delete all organisms Output: None\n\
                          \  delete_organisms      Delete all organisms Output: None\n\
                          \  get_organisms         Get all or some organisms Output:\
                          \ Organisms...\n"
                        generated_using: *id005
                        docker_image:
                      - &id008 !Command
                        command:
                        - chakin
                        - feature
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - get_features
                          positional: []
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --organism_id
                            description: organism_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --analysis_id
                            description: analysis_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --name
                            description: name filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --uniquename
                            description: uniquename filter
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature get_features [OPTIONS]\n\
                            \n  Get all or some features\n\n  Output:\n\n      Features\
                            \ information\n\nOptions:\n  --organism_id INTEGER  organism_id\
                            \ filter\n  --analysis_id INTEGER  analysis_id filter\n\
                            \  --name TEXT            name filter\n  --uniquename\
                            \ TEXT      uniquename filter\n  -h, --help          \
                            \   Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - load_featureprops
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: uniquename
                            description: -h, --help           Show this message and
                              exit.
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --feature_type
                            description: "Type of the target features in sequence\
                              \ ontology (will\nspeed up loading if specified)"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --match_on_name
                            description: Match features using their name instead of
                              their
                            args: !EmptyFlagArg {}
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag:
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature load_featureprops [OPTIONS]\
                            \ TAB_FILE ANALYSIS_ID\n                             \
                            \           ORGANISM_ID PROP_TYPE\n\n  Load feature properties\
                            \ from a tabular file (Column1: feature name or\n  uniquename,\
                            \ Column2: property value)\n\n  Output:\n\n      Number\
                            \ of inserted featureprop\n\nOptions:\n  --feature_type\
                            \ TEXT  Type of the target features in sequence ontology\
                            \ (will\n                       speed up loading if specified)\n\
                            \n  --match_on_name      Match features using their name\
                            \ instead of their\n                       uniquename\n\
                            \n  -h, --help           Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - get_feature_analyses
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: FEATURE_ID
                            description: ''
                          named: []
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature get_feature_analyses [OPTIONS]\
                            \ FEATURE_ID\n\n  Get analyses associated with a feature\n\
                            \n  Output:\n\n      Feature analyses\n\nOptions:\n  -h,\
                            \ --help  Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - load_go
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: uniquename
                            description: --name_column INTEGER  Column containing
                              the feature identifiers (2, 3, 10
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --query_type
                            description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                              'contig') of the query. It must be a valid Sequence\n\
                              Ontology term.  [default: polypeptide]"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --match_on_name
                            description: Match features using their name instead of
                              their
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --go_column
                            description: "Column containing the GO id (default=5).\
                              \  [default:\n5]"
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_name
                            description: "Regular expression to extract the feature\
                              \ name from\nthe input file (first capturing group will\
                              \ be used)."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --skip_missing
                            description: "Skip lines with unknown features or GO id\
                              \ instead of\naborting everything."
                            args: !EmptyFlagArg {}
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature load_go [OPTIONS] INPUT\
                            \ ORGANISM_ID ANALYSIS_ID\n\n  Load GO annotation from\
                            \ a tabular file\n\n  Output:\n\n      Number of inserted\
                            \ GO terms\n\nOptions:\n  --query_type TEXT      The feature\
                            \ type (e.g. 'gene', 'mRNA', 'polypeptide',\n        \
                            \                 'contig') of the query. It must be a\
                            \ valid Sequence\n                         Ontology term.\
                            \  [default: polypeptide]\n\n  --match_on_name       \
                            \ Match features using their name instead of their\n \
                            \                        uniquename\n\n  --name_column\
                            \ INTEGER  Column containing the feature identifiers (2,\
                            \ 3, 10\n                         or 11; default=2). \
                            \ [default: 2]\n\n  --go_column INTEGER    Column containing\
                            \ the GO id (default=5).  [default:\n                \
                            \         5]\n\n  --re_name TEXT         Regular expression\
                            \ to extract the feature name from\n                 \
                            \        the input file (first capturing group will be\
                            \ used).\n\n  --skip_missing         Skip lines with unknown\
                            \ features or GO id instead of\n                     \
                            \    aborting everything.\n\n  -h, --help            \
                            \ Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - get_feature_cvterms
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: FEATURE_ID
                            description: ''
                          named: []
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature get_feature_cvterms [OPTIONS]\
                            \ FEATURE_ID\n\n  Get cvterms associated with a feature\n\
                            \n  Output:\n\n      Feature cvterms\n\nOptions:\n  -h,\
                            \ --help  Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - load_gff
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --landmark_type
                            description: "Type of the landmarks (will speed up loading\
                              \ if\nprovided, e.g. contig, should be a term of the\n\
                              Sequence ontology)"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_protein
                            description: "Replacement string for the protein name\
                              \ using\ncapturing groups defined by --re_protein_capture"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_protein_capture
                            description: "Regular expression to capture groups in\
                              \ mRNA name\nto use in --re_protein (e.g. \"^(.*?)-R([A-Z]+)$\"\
                              ,\ndefault=\"^(.*?)$\")  [default: ^(.*?)$]"
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --fasta
                            description: "Path to a Fasta containing sequences for\
                              \ some\nfeatures. When creating a feature, if its\n\
                              sequence is in this fasta file it will be loaded.\n\
                              Otherwise for mRNA and polypeptides it will be\ncomputed\
                              \ from the genome sequence (if available),\notherwise\
                              \ it will be left empty."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --no_seq_compute
                            description: "Disable the computation of mRNA and polypeptides\n\
                              sequences based on genome sequence and positions."
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --quiet
                            description: Hide progress information
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --add_only
                            description: "Use this flag if you're not updating existing\n\
                              features, but just adding new features to the\nselected\
                              \ analysis and organism. It will speedup\nloading, and\
                              \ reduce memory usage, but might\nproduce errors in\
                              \ case of already existing\nfeature."
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --protein_id_attr
                            description: "Attribute containing the protein uniquename.\
                              \ It\nis searched at the mRNA level, and if not found\n\
                              at CDS level."
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature load_gff [OPTIONS] GFF\
                            \ ANALYSIS_ID ORGANISM_ID\n\n  Load features from a gff\
                            \ file\n\n  Output:\n\n      None\n\nOptions:\n  --landmark_type\
                            \ TEXT       Type of the landmarks (will speed up loading\
                            \ if\n                             provided, e.g. contig,\
                            \ should be a term of the\n                          \
                            \   Sequence ontology)\n\n  --re_protein TEXT        \
                            \  Replacement string for the protein name using\n   \
                            \                          capturing groups defined by\
                            \ --re_protein_capture\n\n  --re_protein_capture TEXT\
                            \  Regular expression to capture groups in mRNA name\n\
                            \                             to use in --re_protein (e.g.\
                            \ \"^(.*?)-R([A-Z]+)$\",\n                           \
                            \  default=\"^(.*?)$\")  [default: ^(.*?)$]\n\n  --fasta\
                            \ TEXT               Path to a Fasta containing sequences\
                            \ for some\n                             features. When\
                            \ creating a feature, if its\n                       \
                            \      sequence is in this fasta file it will be loaded.\n\
                            \                             Otherwise for mRNA and polypeptides\
                            \ it will be\n                             computed from\
                            \ the genome sequence (if available),\n              \
                            \               otherwise it will be left empty.\n\n \
                            \ --no_seq_compute           Disable the computation of\
                            \ mRNA and polypeptides\n                            \
                            \ sequences based on genome sequence and positions.\n\n\
                            \  --quiet                    Hide progress information\n\
                            \  --add_only                 Use this flag if you're\
                            \ not updating existing\n                            \
                            \ features, but just adding new features to the\n    \
                            \                         selected analysis and organism.\
                            \ It will speedup\n                             loading,\
                            \ and reduce memory usage, but might\n               \
                            \              produce errors in case of already existing\n\
                            \                             feature.\n\n  --protein_id_attr\
                            \ TEXT     Attribute containing the protein uniquename.\
                            \ It\n                             is searched at the\
                            \ mRNA level, and if not found\n                     \
                            \        at CDS level.\n\n  -h, --help               \
                            \  Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - delete_features
                          positional: []
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --organism_id
                            description: organism_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --analysis_id
                            description: analysis_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --name
                            description: name filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --uniquename
                            description: uniquename filter
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature delete_features [OPTIONS]\n\
                            \n  Get all or some features\n\n  Output:\n\n      Features\
                            \ information\n\nOptions:\n  --organism_id INTEGER  organism_id\
                            \ filter\n  --analysis_id INTEGER  analysis_id filter\n\
                            \  --name TEXT            name filter\n  --uniquename\
                            \ TEXT      uniquename filter\n  -h, --help          \
                            \   Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - feature
                          - load_fasta
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: FASTA
                            description: ''
                          - !Positional
                            optional: false
                            position: 1
                            name: ORGANISM_ID
                            description: ''
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --sequence_type
                            description: 'Sequence type  [default: contig]'
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --analysis_id
                            description: Analysis ID
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_name
                            description: "Regular expression to extract the feature\
                              \ name from\nthe fasta sequence id (first capturing\
                              \ group will be\nused)."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_uniquename
                            description: "Regular expression to extract the feature\
                              \ name from\nthe fasta sequence id (first capturing\
                              \ group will be\nused)."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --match_on_name
                            description: "Match existing features using their name\
                              \ instead of\ntheir uniquename"
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --update
                            description: "Update existing feature with new sequence\
                              \ instead of\nthrowing an error"
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --db
                            description: External database to cross reference to.
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_db_accession
                            description: "Regular expression to extract an external\
                              \ database\naccession from the fasta sequence id (first\n\
                              capturing group will be used)."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --rel_type
                            description: "Relation type to parent feature ('part_of'\
                              \ or\n'derives_from')."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --re_parent
                            description: "Regular expression to extract parent uniquename\
                              \ from\nthe fasta sequence id (first capturing group\
                              \ will be\nused)."
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --parent_type
                            description: Sequence type of the parent feature
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id008
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin feature load_fasta [OPTIONS] FASTA\
                            \ ORGANISM_ID\n\n  Load features from a fasta file\n\n\
                            \  Output:\n\n      Number of inserted sequences\n\nOptions:\n\
                            \  --sequence_type TEXT    Sequence type  [default: contig]\n\
                            \  --analysis_id INTEGER   Analysis ID\n  --re_name TEXT\
                            \          Regular expression to extract the feature name\
                            \ from\n                          the fasta sequence id\
                            \ (first capturing group will be\n                   \
                            \       used).\n\n  --re_uniquename TEXT    Regular expression\
                            \ to extract the feature name from\n                 \
                            \         the fasta sequence id (first capturing group\
                            \ will be\n                          used).\n\n  --match_on_name\
                            \         Match existing features using their name instead\
                            \ of\n                          their uniquename\n\n \
                            \ --update                Update existing feature with\
                            \ new sequence instead of\n                          throwing\
                            \ an error\n\n  --db INTEGER            External database\
                            \ to cross reference to.\n  --re_db_accession TEXT  Regular\
                            \ expression to extract an external database\n       \
                            \                   accession from the fasta sequence\
                            \ id (first\n                          capturing group\
                            \ will be used).\n\n  --rel_type TEXT         Relation\
                            \ type to parent feature ('part_of' or\n             \
                            \             'derives_from').\n\n  --re_parent TEXT \
                            \       Regular expression to extract parent uniquename\
                            \ from\n                          the fasta sequence id\
                            \ (first capturing group will be\n                   \
                            \       used).\n\n  --parent_type TEXT      Sequence type\
                            \ of the parent feature\n  -h, --help              Show\
                            \ this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          - --help
                          description: Show this message and exit.
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "Usage: chakin feature [OPTIONS] COMMAND [ARGS]...\n\
                          \n  Access to the chado features\n\nOptions:\n  -h, --help\
                          \  Show this message and exit.\n\nCommands:\n  delete_features\
                          \       Get all or some features Output: Features...\n \
                          \ get_feature_analyses  Get analyses associated with a feature\
                          \ Output:...\n  get_feature_cvterms   Get cvterms associated\
                          \ with a feature Output:...\n  get_features          Get\
                          \ all or some features Output: Features...\n  load_fasta\
                          \            Load features from a fasta file Output: Number\
                          \ of...\n  load_featureprops     Load feature properties\
                          \ from a tabular file...\n  load_gff              Load features\
                          \ from a gff file Output: None\n  load_go              \
                          \ Load GO annotation from a tabular file Output:...\n"
                        generated_using: *id005
                        docker_image:
                      - !Command
                        command:
                        - chakin
                        - scripts.
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: chakin
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: COMMAND
                          description: ''
                        - !Positional
                          optional: true
                          position: 2
                          name: ARGS
                          description: ''
                        named: []
                        parent: *id003
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Problem loading command scripts., exception No\
                          \ module named 'chakin.commands.cmd_scripts'\nUsage: chakin\
                          \ [OPTIONS] COMMAND [ARGS]...\nTry 'chakin -h' for help.\n\
                          \nError: No such command 'scripts.'.\n"
                        generated_using: *id005
                        docker_image:
                      - *id009
                      - &id010 !Command
                        command:
                        - chakin
                        - analysis
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - chakin
                          - analysis
                          - get_analyses
                          positional: []
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --analysis_id
                            description: analysis_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --name
                            description: analysis name filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --program
                            description: analysis program filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --programversion
                            description: analysis programversion filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --algorithm
                            description: analysis algorithm filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourcename
                            description: analysis sourcename filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourceversion
                            description: analysis sourceversion filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourceuri
                            description: analysis sourceuri filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --description
                            description: analysis description
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id010
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin analysis get_analyses [OPTIONS]\n\
                            \n  Get all or some analyses\n\n  Output:\n\n      Analysis\
                            \ information\n\nOptions:\n  --analysis_id INTEGER  analysis_id\
                            \ filter\n  --name TEXT            analysis name filter\n\
                            \  --program TEXT         analysis program filter\n  --programversion\
                            \ TEXT  analysis programversion filter\n  --algorithm\
                            \ TEXT       analysis algorithm filter\n  --sourcename\
                            \ TEXT      analysis sourcename filter\n  --sourceversion\
                            \ TEXT   analysis sourceversion filter\n  --sourceuri\
                            \ TEXT       analysis sourceuri filter\n  --description\
                            \ TEXT     analysis description\n  -h, --help        \
                            \     Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - analysis
                          - delete_analyses
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --analysis_id
                            description: analysis_id filter
                            args: !SimpleFlagArg
                              name: INTEGER
                          - !Flag
                            optional: true
                            synonyms:
                            - --name
                            description: analysis name filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --program
                            description: analysis program filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --programversion
                            description: analysis programversion filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --algorithm
                            description: analysis algorithm filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourcename
                            description: analysis sourcename filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourceversion
                            description: analysis sourceversion filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourceuri
                            description: analysis sourceuri filter
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --description
                            description: analysis description
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id010
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin analysis delete_analyses [OPTIONS]\n\
                            \n  Delete analysis\n\n  Output:\n\n      None\n\nOptions:\n\
                            \  --analysis_id INTEGER  analysis_id filter\n  --name\
                            \ TEXT            analysis name filter\n  --program TEXT\
                            \         analysis program filter\n  --programversion\
                            \ TEXT  analysis programversion filter\n  --algorithm\
                            \ TEXT       analysis algorithm filter\n  --sourcename\
                            \ TEXT      analysis sourcename filter\n  --sourceversion\
                            \ TEXT   analysis sourceversion filter\n  --sourceuri\
                            \ TEXT       analysis sourceuri filter\n  --description\
                            \ TEXT     analysis description\n  -h, --help        \
                            \     Show this message and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - analysis
                          - add_analysis
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: SOURCENAME
                            description: Create an analysis
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --algorithm
                            description: analysis algorithm
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourceversion
                            description: analysis sourceversion
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --sourceuri
                            description: analysis sourceuri
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --description
                            description: analysis description
                            args: !SimpleFlagArg
                              name: TEXT
                          - !Flag
                            optional: true
                            synonyms:
                            - --date_executed
                            description: analysis date_executed (yyyy-mm-dd)
                            args: !SimpleFlagArg
                              name: TEXT
                          parent: *id010
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin analysis add_analysis [OPTIONS]\
                            \ NAME PROGRAM PROGRAMVERSION\n                      \
                            \              SOURCENAME\n\n  Create an analysis\n\n\
                            \  Output:\n\n      Analysis information\n\nOptions:\n\
                            \  --algorithm TEXT      analysis algorithm\n  --sourceversion\
                            \ TEXT  analysis sourceversion\n  --sourceuri TEXT   \
                            \   analysis sourceuri\n  --description TEXT    analysis\
                            \ description\n  --date_executed TEXT  analysis date_executed\
                            \ (yyyy-mm-dd)\n  -h, --help            Show this message\
                            \ and exit.\n"
                          generated_using: *id005
                          docker_image:
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          - --help
                          description: Show this message and exit.
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "Usage: chakin analysis [OPTIONS] COMMAND [ARGS]...\n\
                          \n  Access to the chado analysis table\n\nOptions:\n  -h,\
                          \ --help  Show this message and exit.\n\nCommands:\n  add_analysis\
                          \     Create an analysis Output: Analysis information\n\
                          \  delete_analyses  Delete analysis Output: None\n  get_analyses\
                          \     Get all or some analyses Output: Analysis information\n"
                        generated_using: *id005
                        docker_image:
                      - &id011 !Command
                        command:
                        - chakin
                        - util
                        positional: []
                        named: []
                        parent: *id003
                        subcommands:
                        - !Command
                          command:
                          - chakin
                          - util
                          - launch_docker_image
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named:
                          - !Flag
                            optional: true
                            synonyms:
                            - --background
                            description: Launch the image in the background
                            args: !EmptyFlagArg {}
                          - !Flag
                            optional: true
                            synonyms:
                            - --no_yeast
                            description: Disable loading of example yeast data
                            args: !EmptyFlagArg {}
                          parent: *id011
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin util launch_docker_image [OPTIONS]\n\
                            \n  Launch a chado docker image.\n\n  Output:\n\n    \
                            \  None\n\nOptions:\n  --background  Launch the image\
                            \ in the background\n  --no_yeast    Disable loading of\
                            \ example yeast data\n  -h, --help    Show this message\
                            \ and exit.\n"
                          generated_using: *id005
                          docker_image:
                        - !Command
                          command:
                          - chakin
                          - util
                          - dbshell
                          positional:
                          - !Positional
                            optional: false
                            position: 0
                            name: None
                            description: 'Options:'
                          named: []
                          parent: *id011
                          subcommands: []
                          usage: []
                          help_flag: !Flag
                            optional: true
                            synonyms:
                            - -h
                            - --help
                            description: Show this message and exit.
                            args: !EmptyFlagArg {}
                          usage_flag:
                          version_flag:
                          help_text: "Usage: chakin util dbshell [OPTIONS]\n\n  Open\
                            \ a psql session to the database\n\n  Output:\n\n    \
                            \  None\n\nOptions:\n  -h, --help  Show this message and\
                            \ exit.\n"
                          generated_using: *id005
                          docker_image:
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          - --help
                          description: Show this message and exit.
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "Usage: chakin util [OPTIONS] COMMAND [ARGS]...\n\
                          \n  Some chado utilities\n\nOptions:\n  -h, --help  Show\
                          \ this message and exit.\n\nCommands:\n  dbshell       \
                          \       Open a psql session to the database Output: None\n\
                          \  launch_docker_image  Launch a chado docker image.\n"
                        generated_using: *id005
                        docker_image:
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Show this message and exit.
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        description: Show the version and exit.
                        args: !EmptyFlagArg {}
                      help_text: "Usage: chakin [OPTIONS] COMMAND [ARGS]...\n\n  Command\
                        \ line wrappers around Python-Chado functions. While this\
                        \ sounds\n  unexciting, with chakin and jq you can easily\
                        \ build powerful command line\n  scripts.\n\nOptions:\n  --version\
                        \            Show the version and exit.\n  -v, --verbose \
                        \       Enables verbose mode.\n  -i, --instance TEXT  Name\
                        \ of instance in /root/.chakin.yml. This parameter\n     \
                        \                  can also be set via the environment variable\n\
                        \                       CHADO_INSTANCE  [default: __default;\
                        \ required]\n\n  -f, --path TEXT      config file path\n \
                        \ -h, --help           Show this message and exit.\n\nCommands:\n\
                        \  init        Help initialize global configuration (in home\
                        \ directory)\n  organism    Access to the chado organism table\n\
                        \  export      Export data from the chado database\n  util\
                        \        Some chado utilities\n  analysis    Access to the\
                        \ chado analysis table\n  feature     Access to the chado\
                        \ features\n  phylogeny   Access to the chado phylogeny content\n\
                        \  load\n  expression  Interact with expressions\n"
                      generated_using: *id005
                      docker_image:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: uniquename
                        description: --skip_missing     Skip lines with unknown features
                          or GO id instead of
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --parse_go
                        description: Load GO annotation to the database
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --re_name
                        description: "Regular expression to extract the feature name\
                          \ from the\ninput file (first capturing group will be used)."
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --query_type
                        description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                          'contig') of the query. It must be a valid Sequence\nOntology\
                          \ term.  [default: polypeptide]"
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --match_on_name
                        description: Match features using their name instead of their
                        args: !EmptyFlagArg {}
                      parent: *id009
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Show this message and exit.
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Usage: chakin load interpro [OPTIONS] ANALYSIS_ID\
                        \ ORGANISM_ID INPUT\n\n  Load an InterProScan analysis, in\
                        \ the same way as does the\n  tripal_analysis_intepro module\n\
                        \n  Output:\n\n      Number of processed hits\n\nOptions:\n\
                        \  --parse_go         Load GO annotation to the database\n\
                        \  --re_name TEXT     Regular expression to extract the feature\
                        \ name from the\n                     input file (first capturing\
                        \ group will be used).\n\n  --query_type TEXT  The feature\
                        \ type (e.g. 'gene', 'mRNA', 'polypeptide',\n            \
                        \         'contig') of the query. It must be a valid Sequence\n\
                        \                     Ontology term.  [default: polypeptide]\n\
                        \n  --match_on_name    Match features using their name instead\
                        \ of their\n                     uniquename\n\n  --skip_missing\
                        \     Skip lines with unknown features or GO id instead of\n\
                        \                     aborting everything.\n\n  -h, --help\
                        \         Show this message and exit.\n"
                      generated_using: *id005
                      docker_image:
                    - !Command
                      command: &id012
                      - chakin
                      - load
                      - go
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: uniquename
                        description: --name_column INTEGER  Column containing the
                          feature identifiers (2, 3, 10
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --query_type
                        description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                          'contig') of the query. It must be a valid Sequence\nOntology\
                          \ term.  [default: polypeptide]"
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --match_on_name
                        description: Match features using their name instead of their
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --go_column
                        description: "Column containing the GO id (default=5).  [default:\n\
                          5]"
                        args: !SimpleFlagArg
                          name: INTEGER
                      - !Flag
                        optional: true
                        synonyms:
                        - --re_name
                        description: "Regular expression to extract the feature name\
                          \ from\nthe input file (first capturing group will be used)."
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --skip_missing
                        description: "Skip lines with unknown features or GO id instead\
                          \ of\naborting everything."
                        args: !EmptyFlagArg {}
                      parent: *id009
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Show this message and exit.
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Usage: chakin load go [OPTIONS] INPUT ORGANISM_ID\
                        \ ANALYSIS_ID\n\n  Load GO annotation from a tabular file,\
                        \ in the same way as does the\n  tripal_analysis_go module\n\
                        \n  Output:\n\n      Number of inserted GO terms\n\nOptions:\n\
                        \  --query_type TEXT      The feature type (e.g. 'gene', 'mRNA',\
                        \ 'polypeptide',\n                         'contig') of the\
                        \ query. It must be a valid Sequence\n                   \
                        \      Ontology term.  [default: polypeptide]\n\n  --match_on_name\
                        \        Match features using their name instead of their\n\
                        \                         uniquename\n\n  --name_column INTEGER\
                        \  Column containing the feature identifiers (2, 3, 10\n \
                        \                        or 11; default=2).  [default: 2]\n\
                        \n  --go_column INTEGER    Column containing the GO id (default=5).\
                        \  [default:\n                         5]\n\n  --re_name TEXT\
                        \         Regular expression to extract the feature name from\n\
                        \                         the input file (first capturing\
                        \ group will be used).\n\n  --skip_missing         Skip lines\
                        \ with unknown features or GO id instead of\n            \
                        \             aborting everything.\n\n  -h, --help       \
                        \      Show this message and exit.\n"
                      generated_using: *id005
                      docker_image:
                    - !Command
                      command: &id013
                      - chakin
                      - load
                      - blast
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: module
                        description: "Output:\nNumber of processed hits"
                      - !Positional
                        optional: false
                        position: 0
                        name: uniquename
                        description: --skip_missing        Skip lines with unknown
                          features or GO id instead of
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --blastdb
                        description: "Name of the database blasted against (must be\
                          \ in the\nChado db table)"
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --blastdb_id
                        description: "ID of the database blasted against (must be\
                          \ in the\nChado db table)"
                        args: !SimpleFlagArg
                          name: INTEGER
                      - !Flag
                        optional: true
                        synonyms:
                        - --re_name
                        description: "Regular expression to extract the feature name\
                          \ from\nthe input file (first capturing group will be used)."
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --query_type
                        description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                          'contig') of the query. It must be a valid Sequence\nOntology\
                          \ term.  [default: polypeptide]"
                        args: !SimpleFlagArg
                          name: TEXT
                      - !Flag
                        optional: true
                        synonyms:
                        - --match_on_name
                        description: Match features using their name instead of their
                        args: !EmptyFlagArg {}
                      parent: *id009
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Show this message and exit.
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID\
                        \ INPUT\n\n  Load a blast analysis, in the same way as does\
                        \ the tripal_analysis_blast\n  module\n\n  Output:\n\n   \
                        \   Number of processed hits\n\nOptions:\n  --blastdb TEXT\
                        \        Name of the database blasted against (must be in\
                        \ the\n                        Chado db table)\n\n  --blastdb_id\
                        \ INTEGER  ID of the database blasted against (must be in\
                        \ the\n                        Chado db table)\n\n  --re_name\
                        \ TEXT        Regular expression to extract the feature name\
                        \ from\n                        the input file (first capturing\
                        \ group will be used).\n\n  --query_type TEXT     The feature\
                        \ type (e.g. 'gene', 'mRNA', 'polypeptide',\n            \
                        \            'contig') of the query. It must be a valid Sequence\n\
                        \                        Ontology term.  [default: polypeptide]\n\
                        \n  --match_on_name       Match features using their name\
                        \ instead of their\n                        uniquename\n\n\
                        \  --skip_missing        Skip lines with unknown features\
                        \ or GO id instead of\n                        aborting everything.\n\
                        \n  -h, --help            Show this message and exit.\n"
                      generated_using: *id005
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: Show this message and exit.
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "Usage: chakin load [OPTIONS] COMMAND [ARGS]...\n\n\
                      Options:\n  -h, --help  Show this message and exit.\n\nCommands:\n\
                      \  blast     Load a blast analysis, in the same way as does\
                      \ the...\n  go        Load GO annotation from a tabular file,\
                      \ in the same way as does...\n  interpro  Load an InterProScan\
                      \ analysis, in the same way as does the...\n"
                    generated_using: *id005
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Show this message and exit.
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Usage: chakin load interpro [OPTIONS] ANALYSIS_ID ORGANISM_ID\
                    \ INPUT\n\n  Load an InterProScan analysis, in the same way as\
                    \ does the\n  tripal_analysis_intepro module\n\n  Output:\n\n\
                    \      Number of processed hits\n\nOptions:\n  --parse_go    \
                    \     Load GO annotation to the database\n  --re_name TEXT   \
                    \  Regular expression to extract the feature name from the\n \
                    \                    input file (first capturing group will be\
                    \ used).\n\n  --query_type TEXT  The feature type (e.g. 'gene',\
                    \ 'mRNA', 'polypeptide',\n                     'contig') of the\
                    \ query. It must be a valid Sequence\n                     Ontology\
                    \ term.  [default: polypeptide]\n\n  --match_on_name    Match\
                    \ features using their name instead of their\n               \
                    \      uniquename\n\n  --skip_missing     Skip lines with unknown\
                    \ features or GO id instead of\n                     aborting\
                    \ everything.\n\n  -h, --help         Show this message and exit.\n"
                  generated_using: *id005
                  docker_image:
                - !Command
                  command: *id012
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: uniquename
                    description: --name_column INTEGER  Column containing the feature
                      identifiers (2, 3, 10
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --query_type
                    description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                      'contig') of the query. It must be a valid Sequence\nOntology\
                      \ term.  [default: polypeptide]"
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --match_on_name
                    description: Match features using their name instead of their
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --go_column
                    description: "Column containing the GO id (default=5).  [default:\n\
                      5]"
                    args: !SimpleFlagArg
                      name: INTEGER
                  - !Flag
                    optional: true
                    synonyms:
                    - --re_name
                    description: "Regular expression to extract the feature name from\n\
                      the input file (first capturing group will be used)."
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --skip_missing
                    description: "Skip lines with unknown features or GO id instead\
                      \ of\naborting everything."
                    args: !EmptyFlagArg {}
                  parent: *id009
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Show this message and exit.
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Usage: chakin load go [OPTIONS] INPUT ORGANISM_ID ANALYSIS_ID\n\
                    \n  Load GO annotation from a tabular file, in the same way as\
                    \ does the\n  tripal_analysis_go module\n\n  Output:\n\n     \
                    \ Number of inserted GO terms\n\nOptions:\n  --query_type TEXT\
                    \      The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                    \                         'contig') of the query. It must be a\
                    \ valid Sequence\n                         Ontology term.  [default:\
                    \ polypeptide]\n\n  --match_on_name        Match features using\
                    \ their name instead of their\n                         uniquename\n\
                    \n  --name_column INTEGER  Column containing the feature identifiers\
                    \ (2, 3, 10\n                         or 11; default=2).  [default:\
                    \ 2]\n\n  --go_column INTEGER    Column containing the GO id (default=5).\
                    \  [default:\n                         5]\n\n  --re_name TEXT\
                    \         Regular expression to extract the feature name from\n\
                    \                         the input file (first capturing group\
                    \ will be used).\n\n  --skip_missing         Skip lines with unknown\
                    \ features or GO id instead of\n                         aborting\
                    \ everything.\n\n  -h, --help             Show this message and\
                    \ exit.\n"
                  generated_using: *id005
                  docker_image:
                - !Command
                  command: *id013
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: module
                    description: "Output:\nNumber of processed hits"
                  - !Positional
                    optional: false
                    position: 0
                    name: uniquename
                    description: --skip_missing        Skip lines with unknown features
                      or GO id instead of
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --blastdb
                    description: "Name of the database blasted against (must be in\
                      \ the\nChado db table)"
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --blastdb_id
                    description: "ID of the database blasted against (must be in the\n\
                      Chado db table)"
                    args: !SimpleFlagArg
                      name: INTEGER
                  - !Flag
                    optional: true
                    synonyms:
                    - --re_name
                    description: "Regular expression to extract the feature name from\n\
                      the input file (first capturing group will be used)."
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --query_type
                    description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                      'contig') of the query. It must be a valid Sequence\nOntology\
                      \ term.  [default: polypeptide]"
                    args: !SimpleFlagArg
                      name: TEXT
                  - !Flag
                    optional: true
                    synonyms:
                    - --match_on_name
                    description: Match features using their name instead of their
                    args: !EmptyFlagArg {}
                  parent: *id009
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Show this message and exit.
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID\
                    \ INPUT\n\n  Load a blast analysis, in the same way as does the\
                    \ tripal_analysis_blast\n  module\n\n  Output:\n\n      Number\
                    \ of processed hits\n\nOptions:\n  --blastdb TEXT        Name\
                    \ of the database blasted against (must be in the\n          \
                    \              Chado db table)\n\n  --blastdb_id INTEGER  ID of\
                    \ the database blasted against (must be in the\n             \
                    \           Chado db table)\n\n  --re_name TEXT        Regular\
                    \ expression to extract the feature name from\n              \
                    \          the input file (first capturing group will be used).\n\
                    \n  --query_type TEXT     The feature type (e.g. 'gene', 'mRNA',\
                    \ 'polypeptide',\n                        'contig') of the query.\
                    \ It must be a valid Sequence\n                        Ontology\
                    \ term.  [default: polypeptide]\n\n  --match_on_name       Match\
                    \ features using their name instead of their\n               \
                    \         uniquename\n\n  --skip_missing        Skip lines with\
                    \ unknown features or GO id instead of\n                     \
                    \   aborting everything.\n\n  -h, --help            Show this\
                    \ message and exit.\n"
                  generated_using: *id005
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Usage: chakin load [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n\
                  \  -h, --help  Show this message and exit.\n\nCommands:\n  blast\
                  \     Load a blast analysis, in the same way as does the...\n  go\
                  \        Load GO annotation from a tabular file, in the same way\
                  \ as does...\n  interpro  Load an InterProScan analysis, in the\
                  \ same way as does the...\n"
                generated_using: *id005
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Show this message and exit.
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Usage: chakin load interpro [OPTIONS] ANALYSIS_ID ORGANISM_ID\
                \ INPUT\n\n  Load an InterProScan analysis, in the same way as does\
                \ the\n  tripal_analysis_intepro module\n\n  Output:\n\n      Number\
                \ of processed hits\n\nOptions:\n  --parse_go         Load GO annotation\
                \ to the database\n  --re_name TEXT     Regular expression to extract\
                \ the feature name from the\n                     input file (first\
                \ capturing group will be used).\n\n  --query_type TEXT  The feature\
                \ type (e.g. 'gene', 'mRNA', 'polypeptide',\n                    \
                \ 'contig') of the query. It must be a valid Sequence\n          \
                \           Ontology term.  [default: polypeptide]\n\n  --match_on_name\
                \    Match features using their name instead of their\n          \
                \           uniquename\n\n  --skip_missing     Skip lines with unknown\
                \ features or GO id instead of\n                     aborting everything.\n\
                \n  -h, --help         Show this message and exit.\n"
              generated_using: *id005
              docker_image:
            - !Command
              command: *id012
              positional:
              - !Positional
                optional: false
                position: 0
                name: uniquename
                description: --name_column INTEGER  Column containing the feature
                  identifiers (2, 3, 10
              named:
              - !Flag
                optional: true
                synonyms:
                - --query_type
                description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                  'contig') of the query. It must be a valid Sequence\nOntology term.\
                  \  [default: polypeptide]"
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --match_on_name
                description: Match features using their name instead of their
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --go_column
                description: "Column containing the GO id (default=5).  [default:\n\
                  5]"
                args: !SimpleFlagArg
                  name: INTEGER
              - !Flag
                optional: true
                synonyms:
                - --re_name
                description: "Regular expression to extract the feature name from\n\
                  the input file (first capturing group will be used)."
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --skip_missing
                description: "Skip lines with unknown features or GO id instead of\n\
                  aborting everything."
                args: !EmptyFlagArg {}
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Show this message and exit.
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Usage: chakin load go [OPTIONS] INPUT ORGANISM_ID ANALYSIS_ID\n\
                \n  Load GO annotation from a tabular file, in the same way as does\
                \ the\n  tripal_analysis_go module\n\n  Output:\n\n      Number of\
                \ inserted GO terms\n\nOptions:\n  --query_type TEXT      The feature\
                \ type (e.g. 'gene', 'mRNA', 'polypeptide',\n                    \
                \     'contig') of the query. It must be a valid Sequence\n      \
                \                   Ontology term.  [default: polypeptide]\n\n  --match_on_name\
                \        Match features using their name instead of their\n      \
                \                   uniquename\n\n  --name_column INTEGER  Column\
                \ containing the feature identifiers (2, 3, 10\n                 \
                \        or 11; default=2).  [default: 2]\n\n  --go_column INTEGER\
                \    Column containing the GO id (default=5).  [default:\n       \
                \                  5]\n\n  --re_name TEXT         Regular expression\
                \ to extract the feature name from\n                         the input\
                \ file (first capturing group will be used).\n\n  --skip_missing \
                \        Skip lines with unknown features or GO id instead of\n  \
                \                       aborting everything.\n\n  -h, --help     \
                \        Show this message and exit.\n"
              generated_using: *id005
              docker_image:
            - !Command
              command: *id013
              positional:
              - !Positional
                optional: false
                position: 0
                name: module
                description: "Output:\nNumber of processed hits"
              - !Positional
                optional: false
                position: 0
                name: uniquename
                description: --skip_missing        Skip lines with unknown features
                  or GO id instead of
              named:
              - !Flag
                optional: true
                synonyms:
                - --blastdb
                description: "Name of the database blasted against (must be in the\n\
                  Chado db table)"
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --blastdb_id
                description: "ID of the database blasted against (must be in the\n\
                  Chado db table)"
                args: !SimpleFlagArg
                  name: INTEGER
              - !Flag
                optional: true
                synonyms:
                - --re_name
                description: "Regular expression to extract the feature name from\n\
                  the input file (first capturing group will be used)."
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --query_type
                description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                  'contig') of the query. It must be a valid Sequence\nOntology term.\
                  \  [default: polypeptide]"
                args: !SimpleFlagArg
                  name: TEXT
              - !Flag
                optional: true
                synonyms:
                - --match_on_name
                description: Match features using their name instead of their
                args: !EmptyFlagArg {}
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Show this message and exit.
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID\
                \ INPUT\n\n  Load a blast analysis, in the same way as does the tripal_analysis_blast\n\
                \  module\n\n  Output:\n\n      Number of processed hits\n\nOptions:\n\
                \  --blastdb TEXT        Name of the database blasted against (must\
                \ be in the\n                        Chado db table)\n\n  --blastdb_id\
                \ INTEGER  ID of the database blasted against (must be in the\n  \
                \                      Chado db table)\n\n  --re_name TEXT       \
                \ Regular expression to extract the feature name from\n          \
                \              the input file (first capturing group will be used).\n\
                \n  --query_type TEXT     The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
                \                        'contig') of the query. It must be a valid\
                \ Sequence\n                        Ontology term.  [default: polypeptide]\n\
                \n  --match_on_name       Match features using their name instead\
                \ of their\n                        uniquename\n\n  --skip_missing\
                \        Skip lines with unknown features or GO id instead of\n  \
                \                      aborting everything.\n\n  -h, --help      \
                \      Show this message and exit.\n"
              generated_using: *id005
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Usage: chakin load [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n\
              \  -h, --help  Show this message and exit.\n\nCommands:\n  blast   \
              \  Load a blast analysis, in the same way as does the...\n  go     \
              \   Load GO annotation from a tabular file, in the same way as does...\n\
              \  interpro  Load an InterProScan analysis, in the same way as does\
              \ the...\n"
            generated_using: *id005
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Show this message and exit.
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Usage: chakin load interpro [OPTIONS] ANALYSIS_ID ORGANISM_ID\
            \ INPUT\n\n  Load an InterProScan analysis, in the same way as does the\n\
            \  tripal_analysis_intepro module\n\n  Output:\n\n      Number of processed\
            \ hits\n\nOptions:\n  --parse_go         Load GO annotation to the database\n\
            \  --re_name TEXT     Regular expression to extract the feature name from\
            \ the\n                     input file (first capturing group will be\
            \ used).\n\n  --query_type TEXT  The feature type (e.g. 'gene', 'mRNA',\
            \ 'polypeptide',\n                     'contig') of the query. It must\
            \ be a valid Sequence\n                     Ontology term.  [default:\
            \ polypeptide]\n\n  --match_on_name    Match features using their name\
            \ instead of their\n                     uniquename\n\n  --skip_missing\
            \     Skip lines with unknown features or GO id instead of\n         \
            \            aborting everything.\n\n  -h, --help         Show this message\
            \ and exit.\n"
          generated_using: *id005
          docker_image:
        - !Command
          command: *id012
          positional:
          - !Positional
            optional: false
            position: 0
            name: uniquename
            description: --name_column INTEGER  Column containing the feature identifiers
              (2, 3, 10
          named:
          - !Flag
            optional: true
            synonyms:
            - --query_type
            description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
              'contig') of the query. It must be a valid Sequence\nOntology term.\
              \  [default: polypeptide]"
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --match_on_name
            description: Match features using their name instead of their
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --go_column
            description: "Column containing the GO id (default=5).  [default:\n5]"
            args: !SimpleFlagArg
              name: INTEGER
          - !Flag
            optional: true
            synonyms:
            - --re_name
            description: "Regular expression to extract the feature name from\nthe\
              \ input file (first capturing group will be used)."
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --skip_missing
            description: "Skip lines with unknown features or GO id instead of\naborting\
              \ everything."
            args: !EmptyFlagArg {}
          parent: *id015
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Show this message and exit.
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Usage: chakin load go [OPTIONS] INPUT ORGANISM_ID ANALYSIS_ID\n\
            \n  Load GO annotation from a tabular file, in the same way as does the\n\
            \  tripal_analysis_go module\n\n  Output:\n\n      Number of inserted\
            \ GO terms\n\nOptions:\n  --query_type TEXT      The feature type (e.g.\
            \ 'gene', 'mRNA', 'polypeptide',\n                         'contig') of\
            \ the query. It must be a valid Sequence\n                         Ontology\
            \ term.  [default: polypeptide]\n\n  --match_on_name        Match features\
            \ using their name instead of their\n                         uniquename\n\
            \n  --name_column INTEGER  Column containing the feature identifiers (2,\
            \ 3, 10\n                         or 11; default=2).  [default: 2]\n\n\
            \  --go_column INTEGER    Column containing the GO id (default=5).  [default:\n\
            \                         5]\n\n  --re_name TEXT         Regular expression\
            \ to extract the feature name from\n                         the input\
            \ file (first capturing group will be used).\n\n  --skip_missing     \
            \    Skip lines with unknown features or GO id instead of\n          \
            \               aborting everything.\n\n  -h, --help             Show\
            \ this message and exit.\n"
          generated_using: *id005
          docker_image:
        - !Command
          command: *id013
          positional:
          - !Positional
            optional: false
            position: 0
            name: module
            description: "Output:\nNumber of processed hits"
          - !Positional
            optional: false
            position: 0
            name: uniquename
            description: --skip_missing        Skip lines with unknown features or
              GO id instead of
          named:
          - !Flag
            optional: true
            synonyms:
            - --blastdb
            description: "Name of the database blasted against (must be in the\nChado\
              \ db table)"
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --blastdb_id
            description: "ID of the database blasted against (must be in the\nChado\
              \ db table)"
            args: !SimpleFlagArg
              name: INTEGER
          - !Flag
            optional: true
            synonyms:
            - --re_name
            description: "Regular expression to extract the feature name from\nthe\
              \ input file (first capturing group will be used)."
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --query_type
            description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
              'contig') of the query. It must be a valid Sequence\nOntology term.\
              \  [default: polypeptide]"
            args: !SimpleFlagArg
              name: TEXT
          - !Flag
            optional: true
            synonyms:
            - --match_on_name
            description: Match features using their name instead of their
            args: !EmptyFlagArg {}
          parent: *id015
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Show this message and exit.
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID INPUT\n\
            \n  Load a blast analysis, in the same way as does the tripal_analysis_blast\n\
            \  module\n\n  Output:\n\n      Number of processed hits\n\nOptions:\n\
            \  --blastdb TEXT        Name of the database blasted against (must be\
            \ in the\n                        Chado db table)\n\n  --blastdb_id INTEGER\
            \  ID of the database blasted against (must be in the\n              \
            \          Chado db table)\n\n  --re_name TEXT        Regular expression\
            \ to extract the feature name from\n                        the input\
            \ file (first capturing group will be used).\n\n  --query_type TEXT  \
            \   The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n          \
            \              'contig') of the query. It must be a valid Sequence\n \
            \                       Ontology term.  [default: polypeptide]\n\n  --match_on_name\
            \       Match features using their name instead of their\n           \
            \             uniquename\n\n  --skip_missing        Skip lines with unknown\
            \ features or GO id instead of\n                        aborting everything.\n\
            \n  -h, --help            Show this message and exit.\n"
          generated_using: *id005
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage: chakin load [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n \
          \ -h, --help  Show this message and exit.\n\nCommands:\n  blast     Load\
          \ a blast analysis, in the same way as does the...\n  go        Load GO\
          \ annotation from a tabular file, in the same way as does...\n  interpro\
          \  Load an InterProScan analysis, in the same way as does the...\n"
        generated_using: *id005
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Show this message and exit.
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Usage: chakin load interpro [OPTIONS] ANALYSIS_ID ORGANISM_ID INPUT\n\
        \n  Load an InterProScan analysis, in the same way as does the\n  tripal_analysis_intepro\
        \ module\n\n  Output:\n\n      Number of processed hits\n\nOptions:\n  --parse_go\
        \         Load GO annotation to the database\n  --re_name TEXT     Regular\
        \ expression to extract the feature name from the\n                     input\
        \ file (first capturing group will be used).\n\n  --query_type TEXT  The feature\
        \ type (e.g. 'gene', 'mRNA', 'polypeptide',\n                     'contig')\
        \ of the query. It must be a valid Sequence\n                     Ontology\
        \ term.  [default: polypeptide]\n\n  --match_on_name    Match features using\
        \ their name instead of their\n                     uniquename\n\n  --skip_missing\
        \     Skip lines with unknown features or GO id instead of\n             \
        \        aborting everything.\n\n  -h, --help         Show this message and\
        \ exit.\n"
      generated_using: *id005
      docker_image:
    - !Command
      command: *id012
      positional:
      - !Positional
        optional: false
        position: 0
        name: uniquename
        description: --name_column INTEGER  Column containing the feature identifiers
          (2, 3, 10
      named:
      - !Flag
        optional: true
        synonyms:
        - --query_type
        description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig')\
          \ of the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --match_on_name
        description: Match features using their name instead of their
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --go_column
        description: "Column containing the GO id (default=5).  [default:\n5]"
        args: !SimpleFlagArg
          name: INTEGER
      - !Flag
        optional: true
        synonyms:
        - --re_name
        description: "Regular expression to extract the feature name from\nthe input\
          \ file (first capturing group will be used)."
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --skip_missing
        description: "Skip lines with unknown features or GO id instead of\naborting\
          \ everything."
        args: !EmptyFlagArg {}
      parent: *id016
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Show this message and exit.
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Usage: chakin load go [OPTIONS] INPUT ORGANISM_ID ANALYSIS_ID\n\n\
        \  Load GO annotation from a tabular file, in the same way as does the\n \
        \ tripal_analysis_go module\n\n  Output:\n\n      Number of inserted GO terms\n\
        \nOptions:\n  --query_type TEXT      The feature type (e.g. 'gene', 'mRNA',\
        \ 'polypeptide',\n                         'contig') of the query. It must\
        \ be a valid Sequence\n                         Ontology term.  [default:\
        \ polypeptide]\n\n  --match_on_name        Match features using their name\
        \ instead of their\n                         uniquename\n\n  --name_column\
        \ INTEGER  Column containing the feature identifiers (2, 3, 10\n         \
        \                or 11; default=2).  [default: 2]\n\n  --go_column INTEGER\
        \    Column containing the GO id (default=5).  [default:\n               \
        \          5]\n\n  --re_name TEXT         Regular expression to extract the\
        \ feature name from\n                         the input file (first capturing\
        \ group will be used).\n\n  --skip_missing         Skip lines with unknown\
        \ features or GO id instead of\n                         aborting everything.\n\
        \n  -h, --help             Show this message and exit.\n"
      generated_using: *id005
      docker_image:
    - !Command
      command: *id013
      positional:
      - !Positional
        optional: false
        position: 0
        name: module
        description: "Output:\nNumber of processed hits"
      - !Positional
        optional: false
        position: 0
        name: uniquename
        description: --skip_missing        Skip lines with unknown features or GO
          id instead of
      named:
      - !Flag
        optional: true
        synonyms:
        - --blastdb
        description: "Name of the database blasted against (must be in the\nChado\
          \ db table)"
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --blastdb_id
        description: "ID of the database blasted against (must be in the\nChado db\
          \ table)"
        args: !SimpleFlagArg
          name: INTEGER
      - !Flag
        optional: true
        synonyms:
        - --re_name
        description: "Regular expression to extract the feature name from\nthe input\
          \ file (first capturing group will be used)."
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --query_type
        description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig')\
          \ of the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
        args: !SimpleFlagArg
          name: TEXT
      - !Flag
        optional: true
        synonyms:
        - --match_on_name
        description: Match features using their name instead of their
        args: !EmptyFlagArg {}
      parent: *id016
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Show this message and exit.
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID INPUT\n\
        \n  Load a blast analysis, in the same way as does the tripal_analysis_blast\n\
        \  module\n\n  Output:\n\n      Number of processed hits\n\nOptions:\n  --blastdb\
        \ TEXT        Name of the database blasted against (must be in the\n     \
        \                   Chado db table)\n\n  --blastdb_id INTEGER  ID of the database\
        \ blasted against (must be in the\n                        Chado db table)\n\
        \n  --re_name TEXT        Regular expression to extract the feature name from\n\
        \                        the input file (first capturing group will be used).\n\
        \n  --query_type TEXT     The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
        \                        'contig') of the query. It must be a valid Sequence\n\
        \                        Ontology term.  [default: polypeptide]\n\n  --match_on_name\
        \       Match features using their name instead of their\n               \
        \         uniquename\n\n  --skip_missing        Skip lines with unknown features\
        \ or GO id instead of\n                        aborting everything.\n\n  -h,\
        \ --help            Show this message and exit.\n"
      generated_using: *id005
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: chakin load [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h,\
      \ --help  Show this message and exit.\n\nCommands:\n  blast     Load a blast\
      \ analysis, in the same way as does the...\n  go        Load GO annotation from\
      \ a tabular file, in the same way as does...\n  interpro  Load an InterProScan\
      \ analysis, in the same way as does the...\n"
    generated_using: *id005
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Show this message and exit.
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Usage: chakin load interpro [OPTIONS] ANALYSIS_ID ORGANISM_ID INPUT\n\
    \n  Load an InterProScan analysis, in the same way as does the\n  tripal_analysis_intepro\
    \ module\n\n  Output:\n\n      Number of processed hits\n\nOptions:\n  --parse_go\
    \         Load GO annotation to the database\n  --re_name TEXT     Regular expression\
    \ to extract the feature name from the\n                     input file (first\
    \ capturing group will be used).\n\n  --query_type TEXT  The feature type (e.g.\
    \ 'gene', 'mRNA', 'polypeptide',\n                     'contig') of the query.\
    \ It must be a valid Sequence\n                     Ontology term.  [default:\
    \ polypeptide]\n\n  --match_on_name    Match features using their name instead\
    \ of their\n                     uniquename\n\n  --skip_missing     Skip lines\
    \ with unknown features or GO id instead of\n                     aborting everything.\n\
    \n  -h, --help         Show this message and exit.\n"
  generated_using: *id005
  docker_image:
- !Command
  command: *id012
  positional:
  - !Positional
    optional: false
    position: 0
    name: uniquename
    description: --name_column INTEGER  Column containing the feature identifiers
      (2, 3, 10
  named:
  - !Flag
    optional: true
    synonyms:
    - --query_type
    description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig')\
      \ of the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --match_on_name
    description: Match features using their name instead of their
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --go_column
    description: "Column containing the GO id (default=5).  [default:\n5]"
    args: !SimpleFlagArg
      name: INTEGER
  - !Flag
    optional: true
    synonyms:
    - --re_name
    description: "Regular expression to extract the feature name from\nthe input file\
      \ (first capturing group will be used)."
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --skip_missing
    description: "Skip lines with unknown features or GO id instead of\naborting everything."
    args: !EmptyFlagArg {}
  parent: *id017
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Show this message and exit.
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Usage: chakin load go [OPTIONS] INPUT ORGANISM_ID ANALYSIS_ID\n\n  Load\
    \ GO annotation from a tabular file, in the same way as does the\n  tripal_analysis_go\
    \ module\n\n  Output:\n\n      Number of inserted GO terms\n\nOptions:\n  --query_type\
    \ TEXT      The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n          \
    \               'contig') of the query. It must be a valid Sequence\n        \
    \                 Ontology term.  [default: polypeptide]\n\n  --match_on_name\
    \        Match features using their name instead of their\n                  \
    \       uniquename\n\n  --name_column INTEGER  Column containing the feature identifiers\
    \ (2, 3, 10\n                         or 11; default=2).  [default: 2]\n\n  --go_column\
    \ INTEGER    Column containing the GO id (default=5).  [default:\n           \
    \              5]\n\n  --re_name TEXT         Regular expression to extract the\
    \ feature name from\n                         the input file (first capturing\
    \ group will be used).\n\n  --skip_missing         Skip lines with unknown features\
    \ or GO id instead of\n                         aborting everything.\n\n  -h,\
    \ --help             Show this message and exit.\n"
  generated_using: *id005
  docker_image:
- !Command
  command: *id013
  positional:
  - !Positional
    optional: false
    position: 0
    name: module
    description: "Output:\nNumber of processed hits"
  - !Positional
    optional: false
    position: 0
    name: uniquename
    description: --skip_missing        Skip lines with unknown features or GO id instead
      of
  named:
  - !Flag
    optional: true
    synonyms:
    - --blastdb
    description: "Name of the database blasted against (must be in the\nChado db table)"
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --blastdb_id
    description: "ID of the database blasted against (must be in the\nChado db table)"
    args: !SimpleFlagArg
      name: INTEGER
  - !Flag
    optional: true
    synonyms:
    - --re_name
    description: "Regular expression to extract the feature name from\nthe input file\
      \ (first capturing group will be used)."
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --query_type
    description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig')\
      \ of the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
    args: !SimpleFlagArg
      name: TEXT
  - !Flag
    optional: true
    synonyms:
    - --match_on_name
    description: Match features using their name instead of their
    args: !EmptyFlagArg {}
  parent: *id017
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Show this message and exit.
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID INPUT\n\n\
    \  Load a blast analysis, in the same way as does the tripal_analysis_blast\n\
    \  module\n\n  Output:\n\n      Number of processed hits\n\nOptions:\n  --blastdb\
    \ TEXT        Name of the database blasted against (must be in the\n         \
    \               Chado db table)\n\n  --blastdb_id INTEGER  ID of the database\
    \ blasted against (must be in the\n                        Chado db table)\n\n\
    \  --re_name TEXT        Regular expression to extract the feature name from\n\
    \                        the input file (first capturing group will be used).\n\
    \n  --query_type TEXT     The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n\
    \                        'contig') of the query. It must be a valid Sequence\n\
    \                        Ontology term.  [default: polypeptide]\n\n  --match_on_name\
    \       Match features using their name instead of their\n                   \
    \     uniquename\n\n  --skip_missing        Skip lines with unknown features or\
    \ GO id instead of\n                        aborting everything.\n\n  -h, --help\
    \            Show this message and exit.\n"
  generated_using: *id005
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: chakin load [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h, --help\
  \  Show this message and exit.\n\nCommands:\n  blast     Load a blast analysis,\
  \ in the same way as does the...\n  go        Load GO annotation from a tabular\
  \ file, in the same way as does...\n  interpro  Load an InterProScan analysis, in\
  \ the same way as does the...\n"
generated_using: *id005
docker_image:
