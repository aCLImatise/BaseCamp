!Command
command:
- cnvpytor
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - -download
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -root
  args: !RepeatFlagArg
    name: ROOT
  optional: true
- !Flag
  description: ''
  synonyms:
  - -version
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "show this help message and exit\n-version, --version   show version\
    \ number and exit\n-root ROOT [ROOT ...], --root ROOT [ROOT ...]\nCNVnator hd5\
    \ file: data storage for all calculations\n-download, --download_resources\ndownload\
    \ resource files\n-chrom CHROM [CHROM ...], --chrom CHROM [CHROM ...]\nlist of\
    \ chromosomes to apply calculation\n-v {none,debug,info,warning,error,d,e,i,w},\
    \ --verbose {none,debug,info,warning,error,d,e,i,w}\nverbose level: debug, info\
    \ (default), warning, error\n-log LOG_FILE, --log_file LOG_FILE\nlog file\n-j\
    \ MAX_CORES, --max_cores MAX_CORES\nmaximal number of cores to use in calculation\n\
    -rd RD [RD ...], --rd RD [RD ...]\nread bam/sam/cram and store read depth information\n\
    -T REFERENCE_FILENAME, --reference_filename REFERENCE_FILENAME\nreference fasta\
    \ for CRAM\n-gc GC, --gc GC       read fasta file and store GC/AT content\n-cgc\
    \ COPY_GC, --copy_gc COPY_GC\ncopy GC/AT content from another cnvnator file\n\
    -his HIS [HIS ...], --his HIS [HIS ...]\ncreate histograms for specified bin size\
    \ (multiple bin\nsizes separate by space)\n-stat STAT [STAT ...], --stat STAT\
    \ [STAT ...]\ncalculate statistics for specified bin size (multiple\nbin sizes\
    \ separate by space)\n-partition PARTITION [PARTITION ...], --partition PARTITION\
    \ [PARTITION ...]\ncalculate segmentation for specified bin size\n(multiple bin\
    \ sizes separate by space)\n-call CALL [CALL ...], --call CALL [CALL ...]\nCNV\
    \ caller: [baf] bin_size [bin_size2 ...] (multiple\nbin sizes separate by space)\n\
    -vcf VCF [VCF ...], -snp VCF [VCF ...], --vcf VCF [VCF ...]\nread SNP data from\
    \ vcf files\n-somatic_snv SOMATIC_SNV [SOMATIC_SNV ...], --somatic_snv SOMATIC_SNV\
    \ [SOMATIC_SNV ...]\nread SNP data from vcf files\n-vcf2rd RD_FROM_VCF, --rd_from_vcf\
    \ RD_FROM_VCF\nread SNP data from vcf files\n-noAD, --no_snp_counts\nread positions\
    \ of snps, not counts (AD tag)\n-ad AD_TAG, --ad_tag AD_TAG\ncounts tag (default:\
    \ AD)\n-gt GT_TAG, --gt_tag GT_TAG\ngenotype tag (default: GT)\n-dp DP_TAG, --dp_tag\
    \ DP_TAG\nread depth tag (default: DP)\n-callset CALLSET, --callset CALLSET\n\
    name for somatic VCF signal\n-pileup PILEUP_BAM [PILEUP_BAM ...], --pileup_bam\
    \ PILEUP_BAM [PILEUP_BAM ...]\ncalculate SNP counts from bam files\n-snp2rd, --rd_from_snp\n\
    calculate RD from SNP counts\n-mask MASK, --mask MASK\nread fasta mask file and\
    \ flag SNPs in P region\n-mask_snps, --mask_snps\nflag SNPs in P region\n-mask_snvs\
    \ MASK_SNVS, --mask_snvs MASK_SNVS\nflag SNVs in P region\n-idvar IDVAR, --idvar\
    \ IDVAR\nread vcf file and flag SNPs that exist in database\nfile\n-baf BAF [BAF\
    \ ...], --baf BAF [BAF ...]\ncreate BAF histograms for specified bin size (multiple\n\
    bin sizes separate by space)\n-nomask, --no_mask    do not use P mask in BAF histograms\n\
    -useid, --use_id      use id flag filtering in SNP histograms\n-usephase, --use_phase\n\
    use information about phase while processing SNP data\n-reducenoise, --reduce_noise\n\
    reduce noise in processing SNP data\n-blw BAF_LIKELIHOOD_WIDTH, --baf_likelihood_width\
    \ BAF_LIKELIHOOD_WIDTH\nlikelihood width used in processing SNP data\n(default=0.8)\n\
    -plot PLOT [PLOT ...], --plot PLOT [PLOT ...]\nplotting\n-view VIEW, --view VIEW\n\
    Enters interactive ploting mode\n-panels {rd,baf,likelihood} [{rd,baf,likelihood}\
    \ ...], --panels {rd,baf,likelihood} [{rd,baf,likelihood} ...]\nplot panels (with\
    \ -plot regions)\n-style {Solarize_Light2,_classic_test_patch,bmh,classic,dark_background,fast,fivethirtyeight,ggplot,grayscale,seaborn,seaborn-bright,seaborn-colorblind,seaborn-dark,seaborn-dark-palette,seaborn-darkgrid,seaborn-deep,seaborn-muted,seaborn-notebook,seaborn-paper,seaborn-pastel,seaborn-poster,seaborn-talk,seaborn-ticks,seaborn-white,seaborn-whitegrid,tableau-colorblind10},\
    \ --plot_style {Solarize_Light2,_classic_test_patch,bmh,classic,dark_background,fast,fivethirtyeight,ggplot,grayscale,seaborn,seaborn-bright,seaborn-colorblind,seaborn-dark,seaborn-dark-palette,seaborn-darkgrid,seaborn-deep,seaborn-muted,seaborn-notebook,seaborn-paper,seaborn-pastel,seaborn-poster,seaborn-talk,seaborn-ticks,seaborn-white,seaborn-whitegrid,tableau-colorblind10}\n\
    available plot styles: Solarize_Light2,\n_classic_test_patch, bmh, classic, dark_background,\n\
    fast, fivethirtyeight, ggplot, grayscale, seaborn,\nseaborn-bright, seaborn-colorblind,\
    \ seaborn-dark,\nseaborn-dark-palette, seaborn-darkgrid, seaborn-deep,\nseaborn-muted,\
    \ seaborn-notebook, seaborn-paper,\nseaborn-pastel, seaborn-poster, seaborn-talk,\
    \ seaborn-\nticks, seaborn-white, seaborn-whitegrid, tableau-\ncolorblind10\n\
    -o PLOT_OUTPUT_FILE, --plot_output_file PLOT_OUTPUT_FILE\noutput filename prefix\
    \ and extension\n-anim ANIMATION, --animation ANIMATION\nanimation folder/prefix\n\
    -make_gc_file, --make_gc_genome_file\nused with -gc will create genome gc file\n\
    -make_mask_file, --make_mask_genome_file\nused with -mask will create genome mask\
    \ file\n-rd_use_mask, --use_mask_with_rd\nused P mask in RD histograms\n-nogc,\
    \ --no_gc_corr   do not use GC correction in RD histograms\n-rg REFERENCE_GENOME,\
    \ --reference_genome REFERENCE_GENOME\nManually set reference genome\n-sample\
    \ VCF_SAMPLE, --vcf_sample VCF_SAMPLE\nSample name in vcf file\n-conf REFERENCE_GENOMES_CONF,\
    \ --reference_genomes_conf REFERENCE_GENOMES_CONF\nConfiguration with reference\
    \ genomes\n-ls, --ls             list pytor file(s) content\n-info [INFO [INFO\
    \ ...]], --info [INFO [INFO ...]]\nprint statistics for pythor file(s)\n-comp\
    \ [COMPARE [COMPARE ...]], --compare [COMPARE [COMPARE ...]]\ncompere two regions:\
    \ -comp reg1 reg2 [n_bins]\n-genotype [GENOTYPE [GENOTYPE ...]], --genotype [GENOTYPE\
    \ [GENOTYPE ...]]\n-meta, --metadata     list Metadata\n-export [EXPORT [EXPORT\
    \ ...]], --export [EXPORT [EXPORT ...]]\nExport to jbrowse and cnvnator\n"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: cnvpytor [-h] [-version] [-root ROOT [ROOT ...]] [-download]\n\
  \                [-chrom CHROM [CHROM ...]]\n                [-v {none,debug,info,warning,error,d,e,i,w}]\
  \ [-log LOG_FILE]\n                [-j MAX_CORES] [-rd RD [RD ...]] [-T REFERENCE_FILENAME]\n\
  \                [-gc GC] [-cgc COPY_GC] [-his HIS [HIS ...]]\n                [-stat\
  \ STAT [STAT ...]] [-partition PARTITION [PARTITION ...]]\n                [-call\
  \ CALL [CALL ...]] [-vcf VCF [VCF ...]]\n                [-somatic_snv SOMATIC_SNV\
  \ [SOMATIC_SNV ...]]\n                [-vcf2rd RD_FROM_VCF] [-noAD] [-ad AD_TAG]\
  \ [-gt GT_TAG]\n                [-dp DP_TAG] [-callset CALLSET]\n              \
  \  [-pileup PILEUP_BAM [PILEUP_BAM ...]] [-snp2rd] [-mask MASK]\n              \
  \  [-mask_snps] [-mask_snvs MASK_SNVS] [-idvar IDVAR]\n                [-baf BAF\
  \ [BAF ...]] [-nomask] [-useid] [-usephase]\n                [-reducenoise] [-blw\
  \ BAF_LIKELIHOOD_WIDTH]\n                [-plot PLOT [PLOT ...]] [-view VIEW]\n\
  \                [-panels {rd,baf,likelihood} [{rd,baf,likelihood} ...]]\n     \
  \           [-style {Solarize_Light2,_classic_test_patch,bmh,classic,dark_background,fast,fivethirtyeight,ggplot,grayscale,seaborn,seaborn-bright,seaborn-colorblind,seaborn-dark,seaborn-dark-palette,seaborn-darkgrid,seaborn-deep,seaborn-muted,seaborn-notebook,seaborn-paper,seaborn-pastel,seaborn-poster,seaborn-talk,seaborn-ticks,seaborn-white,seaborn-whitegrid,tableau-colorblind10}]\n\
  \                [-o PLOT_OUTPUT_FILE] [-anim ANIMATION] [-make_gc_file]\n     \
  \           [-make_mask_file] [-rd_use_mask] [-nogc]\n                [-rg REFERENCE_GENOME]\
  \ [-sample VCF_SAMPLE]\n                [-conf REFERENCE_GENOMES_CONF] [-ls] [-info\
  \ [INFO [INFO ...]]]\n                [-comp [COMPARE [COMPARE ...]]]\n        \
  \        [-genotype [GENOTYPE [GENOTYPE ...]]] [-meta]\n                [-export\
  \ [EXPORT [EXPORT ...]]]\n\nLite version of the CNVnator written in Python. A tool\
  \ for CNV discovery from\ndepth of read mapping.\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -version, --version   show version\
  \ number and exit\n  -root ROOT [ROOT ...], --root ROOT [ROOT ...]\n           \
  \             CNVnator hd5 file: data storage for all calculations\n  -download,\
  \ --download_resources\n                        download resource files\n  -chrom\
  \ CHROM [CHROM ...], --chrom CHROM [CHROM ...]\n                        list of\
  \ chromosomes to apply calculation\n  -v {none,debug,info,warning,error,d,e,i,w},\
  \ --verbose {none,debug,info,warning,error,d,e,i,w}\n                        verbose\
  \ level: debug, info (default), warning, error\n  -log LOG_FILE, --log_file LOG_FILE\n\
  \                        log file\n  -j MAX_CORES, --max_cores MAX_CORES\n     \
  \                   maximal number of cores to use in calculation\n  -rd RD [RD\
  \ ...], --rd RD [RD ...]\n                        read bam/sam/cram and store read\
  \ depth information\n  -T REFERENCE_FILENAME, --reference_filename REFERENCE_FILENAME\n\
  \                        reference fasta for CRAM\n  -gc GC, --gc GC       read\
  \ fasta file and store GC/AT content\n  -cgc COPY_GC, --copy_gc COPY_GC\n      \
  \                  copy GC/AT content from another cnvnator file\n  -his HIS [HIS\
  \ ...], --his HIS [HIS ...]\n                        create histograms for specified\
  \ bin size (multiple bin\n                        sizes separate by space)\n  -stat\
  \ STAT [STAT ...], --stat STAT [STAT ...]\n                        calculate statistics\
  \ for specified bin size (multiple\n                        bin sizes separate by\
  \ space)\n  -partition PARTITION [PARTITION ...], --partition PARTITION [PARTITION\
  \ ...]\n                        calculate segmentation for specified bin size\n\
  \                        (multiple bin sizes separate by space)\n  -call CALL [CALL\
  \ ...], --call CALL [CALL ...]\n                        CNV caller: [baf] bin_size\
  \ [bin_size2 ...] (multiple\n                        bin sizes separate by space)\n\
  \  -vcf VCF [VCF ...], -snp VCF [VCF ...], --vcf VCF [VCF ...]\n               \
  \         read SNP data from vcf files\n  -somatic_snv SOMATIC_SNV [SOMATIC_SNV\
  \ ...], --somatic_snv SOMATIC_SNV [SOMATIC_SNV ...]\n                        read\
  \ SNP data from vcf files\n  -vcf2rd RD_FROM_VCF, --rd_from_vcf RD_FROM_VCF\n  \
  \                      read SNP data from vcf files\n  -noAD, --no_snp_counts\n\
  \                        read positions of snps, not counts (AD tag)\n  -ad AD_TAG,\
  \ --ad_tag AD_TAG\n                        counts tag (default: AD)\n  -gt GT_TAG,\
  \ --gt_tag GT_TAG\n                        genotype tag (default: GT)\n  -dp DP_TAG,\
  \ --dp_tag DP_TAG\n                        read depth tag (default: DP)\n  -callset\
  \ CALLSET, --callset CALLSET\n                        name for somatic VCF signal\n\
  \  -pileup PILEUP_BAM [PILEUP_BAM ...], --pileup_bam PILEUP_BAM [PILEUP_BAM ...]\n\
  \                        calculate SNP counts from bam files\n  -snp2rd, --rd_from_snp\n\
  \                        calculate RD from SNP counts\n  -mask MASK, --mask MASK\n\
  \                        read fasta mask file and flag SNPs in P region\n  -mask_snps,\
  \ --mask_snps\n                        flag SNPs in P region\n  -mask_snvs MASK_SNVS,\
  \ --mask_snvs MASK_SNVS\n                        flag SNVs in P region\n  -idvar\
  \ IDVAR, --idvar IDVAR\n                        read vcf file and flag SNPs that\
  \ exist in database\n                        file\n  -baf BAF [BAF ...], --baf BAF\
  \ [BAF ...]\n                        create BAF histograms for specified bin size\
  \ (multiple\n                        bin sizes separate by space)\n  -nomask, --no_mask\
  \    do not use P mask in BAF histograms\n  -useid, --use_id      use id flag filtering\
  \ in SNP histograms\n  -usephase, --use_phase\n                        use information\
  \ about phase while processing SNP data\n  -reducenoise, --reduce_noise\n      \
  \                  reduce noise in processing SNP data\n  -blw BAF_LIKELIHOOD_WIDTH,\
  \ --baf_likelihood_width BAF_LIKELIHOOD_WIDTH\n                        likelihood\
  \ width used in processing SNP data\n                        (default=0.8)\n  -plot\
  \ PLOT [PLOT ...], --plot PLOT [PLOT ...]\n                        plotting\n  -view\
  \ VIEW, --view VIEW\n                        Enters interactive ploting mode\n \
  \ -panels {rd,baf,likelihood} [{rd,baf,likelihood} ...], --panels {rd,baf,likelihood}\
  \ [{rd,baf,likelihood} ...]\n                        plot panels (with -plot regions)\n\
  \  -style {Solarize_Light2,_classic_test_patch,bmh,classic,dark_background,fast,fivethirtyeight,ggplot,grayscale,seaborn,seaborn-bright,seaborn-colorblind,seaborn-dark,seaborn-dark-palette,seaborn-darkgrid,seaborn-deep,seaborn-muted,seaborn-notebook,seaborn-paper,seaborn-pastel,seaborn-poster,seaborn-talk,seaborn-ticks,seaborn-white,seaborn-whitegrid,tableau-colorblind10},\
  \ --plot_style {Solarize_Light2,_classic_test_patch,bmh,classic,dark_background,fast,fivethirtyeight,ggplot,grayscale,seaborn,seaborn-bright,seaborn-colorblind,seaborn-dark,seaborn-dark-palette,seaborn-darkgrid,seaborn-deep,seaborn-muted,seaborn-notebook,seaborn-paper,seaborn-pastel,seaborn-poster,seaborn-talk,seaborn-ticks,seaborn-white,seaborn-whitegrid,tableau-colorblind10}\n\
  \                        available plot styles: Solarize_Light2,\n             \
  \           _classic_test_patch, bmh, classic, dark_background,\n              \
  \          fast, fivethirtyeight, ggplot, grayscale, seaborn,\n                \
  \        seaborn-bright, seaborn-colorblind, seaborn-dark,\n                   \
  \     seaborn-dark-palette, seaborn-darkgrid, seaborn-deep,\n                  \
  \      seaborn-muted, seaborn-notebook, seaborn-paper,\n                       \
  \ seaborn-pastel, seaborn-poster, seaborn-talk, seaborn-\n                     \
  \   ticks, seaborn-white, seaborn-whitegrid, tableau-\n                        colorblind10\n\
  \  -o PLOT_OUTPUT_FILE, --plot_output_file PLOT_OUTPUT_FILE\n                  \
  \      output filename prefix and extension\n  -anim ANIMATION, --animation ANIMATION\n\
  \                        animation folder/prefix\n  -make_gc_file, --make_gc_genome_file\n\
  \                        used with -gc will create genome gc file\n  -make_mask_file,\
  \ --make_mask_genome_file\n                        used with -mask will create genome\
  \ mask file\n  -rd_use_mask, --use_mask_with_rd\n                        used P\
  \ mask in RD histograms\n  -nogc, --no_gc_corr   do not use GC correction in RD\
  \ histograms\n  -rg REFERENCE_GENOME, --reference_genome REFERENCE_GENOME\n    \
  \                    Manually set reference genome\n  -sample VCF_SAMPLE, --vcf_sample\
  \ VCF_SAMPLE\n                        Sample name in vcf file\n  -conf REFERENCE_GENOMES_CONF,\
  \ --reference_genomes_conf REFERENCE_GENOMES_CONF\n                        Configuration\
  \ with reference genomes\n  -ls, --ls             list pytor file(s) content\n \
  \ -info [INFO [INFO ...]], --info [INFO [INFO ...]]\n                        print\
  \ statistics for pythor file(s)\n  -comp [COMPARE [COMPARE ...]], --compare [COMPARE\
  \ [COMPARE ...]]\n                        compere two regions: -comp reg1 reg2 [n_bins]\n\
  \  -genotype [GENOTYPE [GENOTYPE ...]], --genotype [GENOTYPE [GENOTYPE ...]]\n \
  \ -meta, --metadata     list Metadata\n  -export [EXPORT [EXPORT ...]], --export\
  \ [EXPORT [EXPORT ...]]\n                        Export to jbrowse and cnvnator\n"
generated_using:
- --help
