!Command
command: &id001
- wordLine
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - wordLine
  - inFile
  positional: []
  named:
  - !Flag
    description: not a valid option
    synonyms:
    - -h
    args: !SimpleFlagArg
      name: is
    optional: true
  parent: !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        description: not a valid option
        synonyms:
        - -h
        args: !SimpleFlagArg
          name: is
        optional: true
      parent: !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            description: not a valid option
            synonyms:
            - -h
            args: !SimpleFlagArg
              name: is
            optional: true
          parent: !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                description: not a valid option
                synonyms:
                - -h
                args: !SimpleFlagArg
                  name: is
                optional: true
              parent: &id003 !Command
                command: *id001
                positional: []
                named:
                - !Flag
                  description: '- Break up words based on C symbol rules rather than
                    white space'
                  synonyms:
                  - -csym
                  args: !EmptyFlagArg {}
                  optional: true
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    description: not a valid option
                    synonyms:
                    - -h
                    args: !SimpleFlagArg
                      name: is
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "-h is not a valid option\n"
                  generated_using: &id004
                  - -h
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "wordLine - chop up words by white space and output them\
                  \ with one\nword to each line.\nusage:\n    wordLine inFile(s)\n\
                  Output will go to stdout.Options:\n    -csym - Break up words based\
                  \ on C symbol rules rather than white space\n\n"
                generated_using: &id005 []
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "-h is not a valid option\n"
              generated_using: *id004
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "wordLine - chop up words by white space and output them with\
              \ one\nword to each line.\nusage:\n    wordLine inFile(s)\nOutput will\
              \ go to stdout.Options:\n    -csym - Break up words based on C symbol\
              \ rules rather than white space\n\n"
            generated_using: *id005
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "-h is not a valid option\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "wordLine - chop up words by white space and output them with one\n\
          word to each line.\nusage:\n    wordLine inFile(s)\nOutput will go to stdout.Options:\n\
          \    -csym - Break up words based on C symbol rules rather than white space\n\
          \n"
        generated_using: *id005
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "-h is not a valid option\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "wordLine - chop up words by white space and output them with one\n\
      word to each line.\nusage:\n    wordLine inFile(s)\nOutput will go to stdout.Options:\n\
      \    -csym - Break up words based on C symbol rules rather than white space\n\
      \n"
    generated_using: *id005
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "-h is not a valid option\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "wordLine - chop up words by white space and output them with one\nword\
  \ to each line.\nusage:\n    wordLine inFile(s)\nOutput will go to stdout.Options:\n\
  \    -csym - Break up words based on C symbol rules rather than white space\n\n"
generated_using: *id005
