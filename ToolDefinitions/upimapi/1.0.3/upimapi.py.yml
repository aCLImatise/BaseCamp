!Command
command:
- upimapi.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: "Input filename - can be a list of IDs (one per line)\nor a BLAST TSV\
    \ file - if so, specify with the --blast\nparameter. If no file is given as input,\
    \ will read\nfrom command line input"
  args: !SimpleFlagArg
    name: INPUT
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: filename of output
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - --excel
  description: Will produce output in EXCEL format (default is TSV)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -anncols
  - --annotation-columns
  description: List of UniProt columns to obtain information from
  args: !SimpleFlagArg
    name: ANNOTATION_COLUMNS
- !Flag
  optional: true
  synonyms:
  - -anndbs
  - --annotation-databases
  description: "List of databases to cross-check with UniProt\ninformation"
  args: !SimpleFlagArg
    name: ANNOTATION_DATABASES
- !Flag
  optional: true
  synonyms:
  - --blast
  description: If input file is in BLAST TSV format
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --full-id
  description: "If IDs are in 'full' format: tr|XXX|XXX"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fasta
  description: Output will be generated in FASTA format
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --step
  description: "How many IDs to submit per request to the API (default\nis 1000)"
  args: !SimpleFlagArg
    name: STEP
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: upimapi.py [-h] [-i INPUT] [-o OUTPUT] [--excel]\n            \
  \      [-anncols ANNOTATION_COLUMNS] [-anndbs ANNOTATION_DATABASES]\n          \
  \        [--blast] [--full-id] [--fasta] [--step STEP] [-v]\n\nUniProt Id Mapping\
  \ through API\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -i INPUT, --input INPUT\n                        Input filename -\
  \ can be a list of IDs (one per line)\n                        or a BLAST TSV file\
  \ - if so, specify with the --blast\n                        parameter. If no file\
  \ is given as input, will read\n                        from command line input\n\
  \  -o OUTPUT, --output OUTPUT\n                        filename of output\n  --excel\
  \               Will produce output in EXCEL format (default is TSV)\n  -anncols\
  \ ANNOTATION_COLUMNS, --annotation-columns ANNOTATION_COLUMNS\n                \
  \        List of UniProt columns to obtain information from\n  -anndbs ANNOTATION_DATABASES,\
  \ --annotation-databases ANNOTATION_DATABASES\n                        List of databases\
  \ to cross-check with UniProt\n                        information\n  --blast  \
  \             If input file is in BLAST TSV format\n  --full-id             If IDs\
  \ are in 'full' format: tr|XXX|XXX\n  --fasta               Output will be generated\
  \ in FASTA format\n  --step STEP           How many IDs to submit per request to\
  \ the API (default\n                        is 1000)\n  -v, --version         show\
  \ program's version number and exit\n\nA tool for retrieving information from UniProt.\n"
generated_using:
- --help
docker_image:
