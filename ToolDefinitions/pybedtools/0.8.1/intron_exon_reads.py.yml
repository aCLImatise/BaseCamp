!Command
command:
- intron_exon_reads.py
positional:
- !Positional
  optional: false
  position: 0
  name: Example
  description: ''
- !Positional
  optional: false
  position: 1
  name: from
  description: ''
- !Positional
  optional: false
  position: 2
  name: pybedtools
  description: ''
- !Positional
  optional: false
  position: 3
  name: documentation
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --gff
  description: GFF or GTF file containing annotations
  args: !SimpleFlagArg
    name: GFF
- !Flag
  optional: true
  synonyms:
  - --bam
  description: BAM file containing reads to be counted
  args: !SimpleFlagArg
    name: BAM
- !Flag
  optional: true
  synonyms:
  - --stranded
  description: "Use strand-specific merging and overlap. Default is to\nignore strand"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --processes
  description: Number of processes to use in parallel.
  args: !SimpleFlagArg
    name: PROCESSES
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Verbose (goes to stderr)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: \nExample from pybedtools documentation: find reads in introns\
  \ and exons using\nmultiple CPUs.\n\nPrints a tab-separated file containing class\
  \ (exon, intron, both) and number of\nreads in each class.\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --gff GFF          \
  \   GFF or GTF file containing annotations\n  --bam BAM             BAM file containing\
  \ reads to be counted\n  --stranded            Use strand-specific merging and overlap.\
  \ Default is to\n                        ignore strand\n  --processes PROCESSES\n\
  \                        Number of processes to use in parallel.\n  -v, --verbose\
  \         Verbose (goes to stderr)\n"
generated_using:
- --help
docker_image:
