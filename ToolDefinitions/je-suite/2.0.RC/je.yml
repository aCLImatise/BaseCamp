!Command
command: &id001
- je
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - je
  - dropseq
  positional:
  - !Positional
    description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'"
    position: 0
    name: becomes
    optional: false
  - !Positional
    description: 'Required. '
    position: 0
    name: path.
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: &id013 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'"
        position: 0
        name: becomes
        optional: false
      - !Positional
        description: 'Required. '
        position: 0
        name: path.
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: &id012 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'"
            position: 0
            name: becomes
            optional: false
          - !Positional
            description: 'Required. '
            position: 0
            name: path.
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: &id011 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'"
                position: 0
                name: becomes
                optional: false
              - !Positional
                description: 'Required. '
                position: 0
                name: path.
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: &id003 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    description: WITH_QUALITY_IN_READNAME=Boolean
                    position: 0
                    name: Required.
                    optional: false
                  - !Positional
                    description: "'...:ATGCAT333423212322:...' instead of '...:ATGCAT:...'"
                    position: 0
                    name: like
                    optional: false
                  - !Positional
                    description: MAX_N=Integer
                    position: 0
                    name: Required.
                    optional: false
                  - !Positional
                    description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'"
                    position: 0
                    name: becomes
                    optional: false
                  - !Positional
                    description: 'Required. '
                    position: 0
                    name: path.
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jedropseq\
                    \ [options]\n\nReformat Drop-seq files into a single fastq file.\
                    \ DROP-seq produces 2 fastq files : one (F1) contains the cell\
                    \ barcode (usually 12 bp, LEN) followed by a UMI (usually 8bp,\
                    \ ULEN) while the second (F2) contains the RNA sequence. The output\
                    \ file is similar to F2 but holds the parsed barcode and UMI in\
                    \ read names.\nInput fastq file(s) can be in gzip compressed format\
                    \ (end in .gz). See help for a detailled description of all options.\n\
                    \nExample: \n\tje dropseq F1=file.fastq.gz F2=file.fastq.gz LEN=12\
                    \ ULEN=8 O=/path/to/resultdir/out.fastq.gz\n\nVersion: 2.0.RC\n\
                    \n\nOptions:\n\n--help\n-h                            Displays\
                    \ options specific to this tool.\n\n--stdhelp\n-H            \
                    \                Displays options specific to this tool AND options\
                    \ common to all Picard command line \n                       \
                    \       tools.\n\n--version                     Displays program\
                    \ version.\n\nFASTQ_FILE1=File\nF1=File                      \
                    \ Input fastq file (optionally gzipped) for first read. This read\
                    \ contains the cell barcode \n                              followed\
                    \ by the UMI. Quality encoding must be Phred+33 (Standard).  Required.\
                    \ \n\nFASTQ_FILE2=File\nF2=File                       Input fastq\
                    \ file (optionally gzipped) for the second read. Quality encoding\
                    \ must be \n                              Phred+33 (Standard).\
                    \  Required. \n\nBCLEN=Integer\nLEN=Integer                  \
                    \ Length of the cell barcode sequence in read 1.\n           \
                    \                     Required. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
                    WQ=Boolean                    Should quality string of barcode\
                    \ and UMI also be injected in read names.\n                  \
                    \            If true, the quality string is translated into 2\
                    \ digits number and a e.g. UMI will look \n                  \
                    \            like\n                              \t '...:ATGCAT333423212322:...'\
                    \ instead of '...:ATGCAT:...'\n                              This\
                    \ option is particularly useful with the retag module that knows\
                    \ how to extract \n                              quality numbers\
                    \ into BAM tags.  Default value: false. This option can be set\
                    \ to 'null' to \n                              clear the default\
                    \ value. Possible values: {true, false} \n\nUCLEN=Integer\nULEN=Integer\
                    \                  Length of the UMI sequence in read 1 found\
                    \ right after the cell barcode.\n                            \
                    \    Required. \n\nMAX_N=Integer\nN=Integer                  \
                    \   Maximum number of N's in the cell barcode sequence. If the\
                    \ cell barcode has this number \n                            \
                    \  or more N in the sequence, the read is ignored.\n         \
                    \                       Default value: 6. This option can be set\
                    \ to 'null' to clear the default value. \n\nREAD_NAME_REPLACE_CHAR=String\n\
                    RCHAR=String                  Replace spaces in read name/header\
                    \ using provided character.\n                              This\
                    \ is needed when you need to retain ADDed barcode in read name/header\
                    \ during mapping \n                              as everything\
                    \ after space in read name is usually clipped in BAM files.\n\
                    \                              For example, with RCHAR=':' :\n\
                    \                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ 1:N:0:'\n                              \tbecomes\n         \
                    \                     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'\n\
                    \                                Default value: :. This option\
                    \ can be set to 'null' to clear the default value. \n\nRESULT_FILENAME_1=String\n\
                    O=String                      Result file name with headers modified.\n\
                    \                              \n                            \
                    \  Can either be a name (in which case the file will be created\
                    \ in the output dir) or a full \n                            \
                    \  path.\n                                Required. \n\nFORCE=Boolean\
                    \                 Allows overwriting existing files.\n       \
                    \                         Default value: false. This option can\
                    \ be set to 'null' to clear the default value. \n            \
                    \                  Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
                    GZ=Boolean                    Compress output using gzip and append\
                    \ a .gz extension to the result filename if necessary.\n     \
                    \                           Default value: true. This option can\
                    \ be set to 'null' to clear the default value. \n            \
                    \                  Possible values: {true, false} \n\n"
                  generated_using: &id004
                  - --help
                - !Command
                  command: &id005
                  - je
                  - demultiplex
                  positional:
                  - !Positional
                    description: 'Required. '
                    position: 0
                    name: data.
                    optional: false
                  - !Positional
                    description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
                    position: 0
                    name: Or
                    optional: false
                  - !Positional
                    description: 'the second barcode might be a random barcode (UMI)
                      to tell apart PCR artefacts from real '
                    position: 0
                    name: while
                    optional: false
                  - !Positional
                    description: 'Another example is when both barcodes should be
                      used in a combined fashion to resolve the '
                    position: 1
                    name: duplicates.
                    optional: false
                  - !Positional
                    description: In the first example, you should use BPOS=BOTH BRED=false
                      BM=READ_1.
                    position: 2
                    name: sample.
                    optional: false
                  - !Positional
                    description: 'values can be given here using the syntax MM=X:Z
                      where X and Z are 2 integers to use for '
                    position: 0
                    name: distinct
                    optional: false
                  - !Positional
                    description: "Default value: Standard. This option can be set\
                      \ to 'null' to clear the default value. "
                    position: 0
                    name: detected.
                    optional: false
                  - !Positional
                    description: 'N.B: this file will have a size of about one of
                      the fastq input files.  Default value: '
                    position: 0
                    name: barcoded.
                    optional: false
                  - !Positional
                    description: "FORCE=Boolean                 Allows to overwrite\
                      \ existing files (system rights still apply).\nDefault value:\
                      \ false. This option can be set to 'null' to clear the default\
                      \ value."
                    position: 1
                    name: null.
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jemultiplexer\
                    \ [options]\n\n\tFastq files demultiplexer for in-line barcoded\
                    \ Illumina Fastq files.\n\tInput fastq files can be in gzip compressed\
                    \ (end in .gz). \n\tBy default output files are gzipped and have\
                    \ names following the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]'\
                    \ unless you gave file\n\t names to use within the barcode description\
                    \ file.\nExample:\n\t je demultiplex F1=fastq_1.txt.gz BF=barcodes.bs\
                    \ O=/path/to/jemultiplexer-results/ \nVersion: 2.0.RC\n\n\nOptions:\n\
                    \n--help\n-h                            Displays options specific\
                    \ to this tool.\n\n--stdhelp\n-H                            Displays\
                    \ options specific to this tool AND options common to all Picard\
                    \ command line \n                              tools.\n\n--version\
                    \                     Displays program version.\n\nFASTQ_FILE1=File\n\
                    F1=File                       Input fastq file (optionally gzipped)\
                    \ for single end data, or first read in paired end \n        \
                    \                      data.\n                               \
                    \ Required. \n\nFASTQ_FILE2=File\nF2=File                    \
                    \   Input fastq file (optionally gzipped) for the second read\
                    \ of paired end data.\n                                Default\
                    \ value: null. \n\nBARCODE_FILE=File\nBF=File                \
                    \       Barcode file describing sequence list and sample names.\
                    \ Tab-delimited file with 2 \n                              columns,\
                    \ with the sample in col1 and the corresponding barcode in col2.\n\
                    \                              Simple barcode file format : 2\
                    \ tab-delimited colums\n                              \tIf multiple\
                    \ barcode map to the same sample, either line can be duplicated\
                    \ e.g.\n                              \t\tsample1\tATAT\n    \
                    \                          \t\tsample1\tGAGG\n               \
                    \               \t\tsample2\tCCAA\n                          \
                    \    \t\tsample2\tTGTG\n                              \tOr barcodes\
                    \ can be combined using the OR operator '|' i.e. the file above\
                    \ can be \n                              re-written like\n   \
                    \                            \t\tsample1\tATAT|GAGG\n        \
                    \                      \t\tsample2\tCCAA|TGTG\n              \
                    \                \tFinally, for the special situation of paired-end\
                    \ data in which barcodes differ at both \n                   \
                    \           ends (ie BPOS=BOTH BRED=false BM=BOTH , see BRED option\
                    \ description), barcodes for read_1 \n                       \
                    \       and read_2 can be distinguished using a ':' separator\
                    \ i.e. \n                              \t\tsample1\tATAT:GAGG\n\
                    \                              \t\tsample2\tCCAA:TGTG\n      \
                    \                        \tThis above syntax means that sample\
                    \ 1 is encoded with ATAT barcode at read_1 AND GAGG \n       \
                    \                       barcode at read_2. Note that you can still\
                    \ combine barcodes using | e.g. \n                           \
                    \   \t\tsample1\tATAT|GAGG:CCAA|TGTG\n                       \
                    \       \twould mean that sample 1 is mapped by the combination\
                    \ of barcode: ATAT OR GAGG at read_1 \n                      \
                    \        AND CCAA OR TGTG at read_2.\n                       \
                    \       Extended barcode file format : 3 (single-end) or 4 (paired-end)\
                    \ tab-delimited colums\n                              \tsame as\
                    \ the simple barcode file format but the extra columns contains\
                    \ the file name(s) \n                              to use to name\
                    \ output files. A unique extra column is expected for single-end\
                    \ while 2 \n                              extra columns are expected\
                    \ for paired-end. In case, lines are duplicated (multiple \n \
                    \                             barcodesmapping the same sample),\
                    \ the same file name should be indicated in the third \n     \
                    \                         (and fourth) column(s). \n         \
                    \                     \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
                    \                              \t\tsample1\tGAGG\tspl1_1.txt.gz\t\
                    spl1_2.txt.gz\n                              \t\tsample2\tCCAA\t\
                    spl2_1.txt.gz\tspl2_2.txt.gz\n                              \t\
                    Or\n                              \t\tsample1 \t ATAT|GAGG:CCAA|TGTG\
                    \ \t spl1_1.txt.gz \t spl1_2.txt.gz\n                        \
                    \      Ns in barcode sequence are allowed and are used to flag\
                    \ positions that should be ignored \n                        \
                    \      in sample matching \n                              \t i.e.\
                    \ they will be clipped off the read sequence (like in iCLIP protocol).\
                    \  Required.  \n                              Cannot be used in\
                    \ conjuction with option(s) USE_EMBASE (EM)\n\nBARCODE_READ_POS=BarcodePosition\n\
                    BPOS=BarcodePosition          For paired-end data, where to expect\
                    \ the barcode(s) :\n                              \t * READ_1\
                    \ (beginning of read from FASTQ_FILE_1), \n                  \
                    \             \t * READ_2 (beginning of read from FASTQ_FILE_2),\n\
                    \                              \t * BOTH (beginning of both reads).\n\
                    \                              Automatically set to READ_1 in\
                    \ single end mode.\n                                Default value:\
                    \ BOTH. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {READ_1,\
                    \ READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String           \
                    \         Length of the barcode sequences, optional. Taken from\
                    \ barcode file when not given.\n                             \
                    \ In situations where BARCODE_READ_POS == BOTH AND REDUNDANT_BARCODES=false,\
                    \ two distinct \n                              length can be provided\
                    \ using the syntax LEN=X:Z where X and Z are 2 integers representing\
                    \ \n                              the barcode length for read_1\
                    \ and read_2 respectively.\n                                Default\
                    \ value: null. \n\nBARCODE_FOR_SAMPLE_MATCHING=BarcodePosition\n\
                    BM=BarcodePosition            Indicates which barcode(s) should\
                    \ be used for sample lookup\n                              Automatically\
                    \ set to READ_1 in single end mode. \n                       \
                    \       For paired-end data and when BARCODE_READ_POS == BOTH,\
                    \ which barcode should be used to \n                         \
                    \     resolve sample :\n                              \t- use\
                    \ BM=READ_1 (beginning of read from FASTQ_FILE_1) if only this\
                    \ read should be used \n                              for sample\
                    \ matching,\n                              \t- use BM=READ_2 (beginning\
                    \ of read from FASTQ_FILE_2) if only this read should be used\
                    \ \n                              for sample matching,\n     \
                    \                         \t- use BM=BOTH (beginning of both reads)\
                    \ if both should be used \n                              When\
                    \ BM=BOTH, the behaviour is different based on the value of REDUNDANT_BARCODES\
                    \ : \n                              \t\tIf REDUNDANT_BARCODES=true,\
                    \ the two barcodes are considered to map to the same sample \n\
                    \                              and 'Je demultiplex' uses the two\
                    \ barcodes according to the STRICT value.\n                  \
                    \            \t\tIf REDUNDANT_BARCODES=false, the barcode file\
                    \ should map a couple of barcode to each \n                  \
                    \            sample (e.g. sample1 => AGAGTG:TTGATA) and 'Je demultiplex'\
                    \ needs both barcodes to find \n                             \
                    \ the relevant sample. Note that this is the only situation in\
                    \ which all barcode matching \n                              options\
                    \ (MM, MMD, Q) accept different values for both barcodes in the\
                    \ form X:Z where X \n                              and Z are 2\
                    \ integers.\n                                Default value: BOTH.\
                    \ This option can be set to 'null' to clear the default value.\
                    \ \n                              Possible values: {READ_1, READ_2,\
                    \ BOTH, NONE} \n\nREDUNDANT_BARCODES=Boolean\nBRED=Boolean   \
                    \               This option only applies for paired-end data with\
                    \ BARCODE_READ_POS set to 'BOTH'\n                           \
                    \   Indicates if both read's barcodes encode redundant information\
                    \ or if barcodes are \n                              supposed\
                    \ to be identical at both ends (or to resolve to the same sample\
                    \ when a pool of \n                              barcodes is used\
                    \ per sample).\n                               \tWhen REDUNDANT_BARCODES=false,\
                    \ the 2 barcodes potentially encode\n                        \
                    \       different information. For example, only one of the barcodes\
                    \ encodes the sample identity \n                             \
                    \ while \n                              the second barcode might\
                    \ be a random barcode (UMI) to tell apart PCR artefacts from real\
                    \ \n                              duplicates.\n              \
                    \                Another example is when both barcodes should\
                    \ be used in a combined fashion to resolve the \n            \
                    \                  sample.\n                              In the\
                    \ first example, you should use BPOS=BOTH BRED=false BM=READ_1.\n\
                    \                              In the second example, you should\
                    \ have BPOS=BOTH BRED=false BM=BOTH. \n                      \
                    \        Note that with BPOS=BOTH BRED=true BM=BOTH, the behavior\
                    \ would be different as \n                              'demultiplex'\
                    \ would then check the STRICT option to perform sample resolution.\n\
                    \                              Importantly, when BARCODE_READ_POS\
                    \ (BPOS) == BOTH AND REDUNDANT_BARCODES=false, BLEN, \n      \
                    \                        barcode matching options (MM, MMD, Q)\
                    \ and read trimming/clipping options (XT, ZT) accept \n      \
                    \                        different values for both barcodes in\
                    \ the form X:Z where X and Z are 2 integers.\n               \
                    \                 Default value: true. This option can be set\
                    \ to 'null' to clear the default value. \n                   \
                    \           Possible values: {true, false} \n\nSTRICT=Boolean\n\
                    S=Boolean                     For paired-end data and when two\
                    \ distinct barcodes/indices are used to encode samples,\n    \
                    \                           this option tells if both barcodes\
                    \ should resolve to the same sample.\n                       \
                    \        When true and if only one of the two reads has a barcode\
                    \ match, the read pair is \n                              'unassigned'.\n\
                    \                               When false and if only one of\
                    \ the two reads has a barcode match, the read pair is \n     \
                    \                         assigned to the\n                  \
                    \             corresponding sample\n                         \
                    \     When reads resolve to different samples, the read pair is\
                    \ always 'unassigned'.\n                                Default\
                    \ value: false. This option can be set to 'null' to clear the\
                    \ default value. \n                              Possible values:\
                    \ {true, false} \n\nMAX_MISMATCHES=String\nMM=String         \
                    \            Maximum mismatches for a barcode to be considered\
                    \ a match. In situations where both \n                       \
                    \       barcodes are used for sample matching i.e. BPOS=BOTH BM=BOTH\
                    \ (or 2 INDEX_FILE given), two \n                            \
                    \  distinct\n                               values can be given\
                    \ here using the syntax MM=X:Z where X and Z are 2 integers to\
                    \ use for \n                              read_1 and read_2 respectively.\n\
                    \                              MM=null is like MM=0\n        \
                    \                        Default value: 1. This option can be\
                    \ set to 'null' to clear the default value. \n\nMIN_MISMATCH_DELTA=String\n\
                    MMD=String                    Minimum difference between the number\
                    \ of mismatches against the best and the second best \n      \
                    \                        barcode. When MMD is not respected, the\
                    \ read remains unassigned.\n                              When\
                    \ two distinct barcodes are used for sample matching (dual encoding),\
                    \ two distinct \n                              values can be given\
                    \ using the syntax MMD=X:Z where X and Z are 2 integers to use\
                    \ for \n                              first (e.g. from read_1\
                    \ or index_1)\n                              MMD=null is like\
                    \ MMD=0\n                                Default value: 1. This\
                    \ option can be set to 'null' to clear the default value. \n\n\
                    MIN_BASE_QUALITY=String\nQ=String                      Minimum\
                    \ base quality during barcode matching: bases which quality is\
                    \ less than this \n                              cutoff are always\
                    \ considered as a mismatch.When two distinct barcodes are used\
                    \ for sample \n                              matching (dual encoding),\
                    \ two distinct values can be given using the syntax Q=X:Z where\
                    \ X \n                              and Z are 2 integers to use\
                    \ for first (e.g. from read_1 or index_1) and second barcode \n\
                    \                              (e.g. from read_2 or index_2) respectively.\n\
                    \                              Q=null is like Q=0.\n         \
                    \                       Default value: 10. This option can be\
                    \ set to 'null' to clear the default value. \n\nXTRIMLEN=String\n\
                    XT=String                     Optional extra number of base to\
                    \ be trimmed right after the barcode (only used if \n        \
                    \                      CLIP_BARCODE=true). \n                \
                    \              When running paired-end, two distinct values can\
                    \ be given using the syntax XT=X:Z where X \n                \
                    \              and Z are 2 integers to use for read_1 and read_2\
                    \ respectively. Note that even when \n                       \
                    \       BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given\
                    \ to trim the read w/o barcode as to \n                      \
                    \        end up with reads of the same length (note that this\
                    \ can also be operated using ZT). If a \n                    \
                    \          unique value is given, e.g. XT=1, while running paired-end\
                    \ the following rule applies :\n                             \
                    \  \t(1) BPOS=READ_1 or BPOS=READ_2, no trim is applied at the\
                    \ read w/o barcode \n                              \t(2) BPOS=BOTH,\
                    \ the value is used for both reads.\n                        \
                    \      Note that XT=null is like XT=0.\n                     \
                    \           Default value: 0. This option can be set to 'null'\
                    \ to clear the default value. \n\nZTRIMLEN=String\nZT=String \
                    \                    Optional extra number of bases to be trimmed\
                    \ from the read end i.e. 3' end.\n                           \
                    \   When running paired-end, two distinct values can be given\
                    \ here using the syntax ZT=X:Z \n                            \
                    \  where X and Z are 2 integers to use for read_1 and read_2 respectively.\
                    \ Note that even \n                              when BPOS=READ_1\
                    \ or BPOS=READ_2, a X:Y synthax can be given to trim the read\
                    \ w/o barcode \n                              as to end up with\
                    \ reads of the same length (note that this can also be operated\
                    \ using \n                              XT). Note that if a single\
                    \ value is passed, the value always applies to both reads in \n\
                    \                              paired-end mode without further\
                    \ consideration.\n                              ZT=null is like\
                    \ ZT=0.\n                                Default value: 0. This\
                    \ option can be set to 'null' to clear the default value. \n\n\
                    CLIP_BARCODE=Boolean\nC=Boolean                     Clip barcode\
                    \ sequence from read sequence, as well as XTRIMLEN (and ZTRIMLEN)\
                    \ bases if \n                              applicable, before\
                    \ writing to output file.\n                               If false,\
                    \ reads are written without modification to output file. \n  \
                    \                            Apply to both barcodes when BPOS=BOTH.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\n\
                    ADD=Boolean                   Add barcode at the end of the read\
                    \ header. Apply to both barcodes when BPOS=BOTH.\n           \
                    \                   \tIf true, the string ':barcode' is added\
                    \ at the end of the read header with a ':' added \n          \
                    \                    only if current read header does not end\
                    \ with ':'.\n                              \tIf both reads of\
                    \ the pair have a barcode (i.e. BARCODE_READ_POS == BOTH), thenthe\
                    \ second \n                              read also has its own\
                    \ matched barcode written. Else, the read without a barcode receives\
                    \ \n                              the barcode from the barcoded\
                    \ read.\n                              \tFor example :\n     \
                    \                         \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ 2:N:0:'\n                              \tbecomes\n         \
                    \                     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ 2:N:0:BARCODE'\n                              \n           \
                    \                   \tWhen barcodes containing random positions,\
                    \ i.e. 'N', (for example like \tin the iCLIP \n              \
                    \                protocol) or are UMIs, the added sequence is\
                    \ the sequence clipped from the read and NOT \n              \
                    \                the matched barcode.\n                      \
                    \          Default value: true. This option can be set to 'null'\
                    \ to clear the default value. \n                             \
                    \ Possible values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\n\
                    SAME_HEADERS=Boolean          Makes sure that headers of both\
                    \ reads of a pair are identical, using the following read \n \
                    \                             header pattern (for both reads of\
                    \ a pair) :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ SAMPLEBARCODE_READ1:SAMPLEBARCODE_READ2(if \n              \
                    \                applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2This\
                    \ option only makes sense in \n                              paired\
                    \ end mode and ADD=true. Some (if not all) mappers will indeed\
                    \ complain when the \n                              read headers\
                    \ are not identical. When molecular barcodes are present in reads\
                    \ (either as \n                              additional barcodes\
                    \ or as degenerate barcodes ie with 'N') and the RCHAR is used,\
                    \ you \n                              will end with (problematic)\
                    \ read headers like this :\n                              \t\t\
                    HISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
                    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
                    \                              SAME_HEADERS=true will instead\
                    \ generates the following identical header for both reads :\n\
                    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
                    \                              \tNote that we also clipped the\
                    \ useless '1:N:0' and '3:N:0' has they will also result in \n\
                    \                              generating different headers.\n\
                    \                              \t\t Important : this option will\
                    \ force RCHAR=: UNLESS you specify RCHAR=null ; in which \n  \
                    \                            case a space will be preserved ie\
                    \ : \n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994\
                    \ TAGAACAC:TGGAGTAG:CGTTGTAT\n                               \
                    \ Default value: true. This option can be set to 'null' to clear\
                    \ the default value. \n                              Possible\
                    \ values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String\
                    \                  Replace spaces in read name/header using provided\
                    \ character. This is particularly handy \n                   \
                    \           when you need to retain\t ADDed barcode in read name/header\
                    \ during mapping (everything \n                              after\
                    \ space in read name is usually clipped in BAM files).\tFor example,\
                    \ with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ 2:N:0:'\n                              \tbecomes\n         \
                    \                     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
                    \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
                    V=FastqQualityFormat          A value describing how the quality\
                    \ values are encoded in the fastq.  Either 'Solexa' for \n   \
                    \                           pre-pipeline 1.3 style scores (solexa\
                    \ scaling + 66), 'Illumina' for pipeline 1.3 and \n          \
                    \                    above (phred scaling + 64) or 'Standard'\
                    \ for phred scaled scores with a character shift \n          \
                    \                    of 33.  If this value is not specified (or\
                    \ 'null' is given), the quality format will be \n            \
                    \                  detected.\n                               \
                    \ Default value: Standard. This option can be set to 'null' to\
                    \ clear the default value. \n                              Possible\
                    \ values: {Solexa, Illumina, Standard} \n\nOUTPUT_DIR=File\nO=File\
                    \                        Output directory. By default, output\
                    \ files are written in running directory.\n                  \
                    \              Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
                    UN=Boolean                    Should un-assigned reads be saved\
                    \ in files or simply ignored. File names are \n              \
                    \                automatically created or can be given using UF1\
                    \ & UF2 options.\n                                Default value:\
                    \ true. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nUNASSIGNED_FILE_NAME_1=String\nUF1=String       \
                    \             Name of the file in which to write unassigned reads\
                    \ from FILE1.Either a name (in which \n                      \
                    \        case the file will be created in the output dir) or full\
                    \ path.\n                                Default value: unassigned_1.txt.\
                    \ This option can be set to 'null' to clear the default \n   \
                    \                           value. \n\nUNASSIGNED_FILE_NAME_2=String\n\
                    UF2=String                    Name of the file in which to write\
                    \ unassigned reads from FILE2.Either a name (in which \n     \
                    \                         case the file will be created in the\
                    \ output dir) or full path.\n                                Default\
                    \ value: unassigned_2.txt. This option can be set to 'null' to\
                    \ clear the default \n                              value. \n\n\
                    METRICS_FILE_NAME=String\nM=String                      File name\
                    \ where to write demultiplexing statistics. Either a name (in\
                    \ which case the file \n                              will be\
                    \ created in the output dir) or an absolute path.\n          \
                    \                      Default value: jemultiplexer_out_stats.txt.\
                    \ This option can be set to 'null' to clear \n               \
                    \               the default value. \n\nBARCODE_DIAG_FILE=String\n\
                    DIAG=String                   Name for a barcode match reporting\
                    \ file (not generated by default).Either a name (in \n       \
                    \                       which case the file will be created in\
                    \ the output dir) or full path. This file will \n            \
                    \                  contain a line per read pair with the barcode\
                    \ best matching the read subsequence or \n                   \
                    \           'null' when no match is found according to matching\
                    \ parameters ; and the final selected \n                     \
                    \         sample. This file is useful for debugging or further\
                    \ processing in case both ends are \n                        \
                    \      barcoded.\n                              N.B: this file\
                    \ will have a size of about one of the fastq input files.  Default\
                    \ value: \n                              null. \n\nFORCE=Boolean\
                    \                 Allows to overwrite existing files (system rights\
                    \ still apply).\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                \
                    \    Compress output files using gzip.\n                     \
                    \           Default value: true. This option can be set to 'null'\
                    \ to clear the default value. \n                             \
                    \ Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
                    \   Change the default extension of created fastq files, eg 'fastqsanger'.\
                    \ By default uses \n                              the file extension\
                    \ from input fastq file. If result file names are given in the\
                    \ barcode \n                              file, this option is\
                    \ only used to adapt the unassigned file names. When using \n\
                    \                              compression, a .gz is always appended\
                    \ to file names and should not be specified in \n            \
                    \                  FASTQ_FILE_EXTENSION i.e. \n              \
                    \                use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
                    \                                Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                    ASYNC=Boolean                 Use one thread per Fastq Writer.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nSTATS_ONLY=Boolean\
                    \            Only produces metric and diagnostic reports i.e.\
                    \ no output fastq file produced.\n                           \
                    \     Default value: false. This option can be set to 'null' to\
                    \ clear the default value. \n                              Possible\
                    \ values: {true, false} \n\nUSE_EMBASE=Boolean\nEM=Boolean   \
                    \                 Enables emBASE mode i.e fetch information from\
                    \ emBASE and place demultiplexed files \n                    \
                    \          directly in emBASE repository structure.\n        \
                    \                      This option is mutually exclusive with\
                    \ BARCODE_FILE.\n                              Note : this option\
                    \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
                    \ (all \n                              other user options supported).\n\
                    \                                Default value: false. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false}  Cannot\
                    \ be used in conjuction with option(s) BARCODE_FILE \n       \
                    \                       (BF)\n\n"
                  generated_using: *id004
                - !Command
                  command: &id006
                  - je
                  - clip
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: Jeclipper
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jeclipper\
                    \ [options]\n\nReads records in the supplied FASTQ file(s) according\
                    \ to specified read layouts (RL option) and write output FASTQ\
                    \ file(s) according to supplied output layouts (OL option).\n\n\
                    Version: 2.0.RC\n\n\nOptions:\n\n--help\n-h                  \
                    \          Displays options specific to this tool.\n\n--stdhelp\n\
                    -H                            Displays options specific to this\
                    \ tool AND options common to all Picard command line \n      \
                    \                        tools.\n\n--version                 \
                    \    Displays program version.\n\nFASTQ=File\nF=File         \
                    \               Input fastq file (optionally gzipped)  Default\
                    \ value: null. This option must be specified \n              \
                    \                at least 1 times. \n\nREAD_LAYOUT=String\nRL=String\
                    \                     Describes the read layout(s) e.g. 'RL=<BARCODE1:6><SAMPLE:x>'\
                    \ of input fastq file(s). The \n                             \
                    \ input fastq files and read layouts are mached up by order on\
                    \ the command line.\n                              Read layouts\
                    \ are only needed for complex layouts but one must provide read\
                    \ layouts for \n                              ALL or NONE of the\
                    \ input fastq files.\n                              Read layouts\
                    \ are made of <UMIn:X>, <BARCODEn:X>, <SAMPLEn:X> blocks to describe\
                    \ blocks of \n                              type UMI, BARCODE\
                    \ or SAMPLE with : \n                                  * 'n' the\
                    \ unique block index (an index must be unique across all read\
                    \ layouts for \n                              each index or each\
                    \ block type), use the same index to specify redundant blocks\
                    \ e.g. use \n                              <BARCODE1:6> in two\
                    \ different layouts to specify that the barcode found in both\
                    \ reads are \n                              the same\n       \
                    \                          * 'X' : either a number indicating\
                    \ the length of the UMI, BARCODE or SAMPLE block or a \n     \
                    \                         negative number e.g. -2 to specify the\
                    \ last 2 bases should be ignored/clipped) or the \n          \
                    \                    letter 'x' to specify to take the sequence\
                    \ till the end of read. Importantly, the 'x' or \n           \
                    \                   negative length shotcut can only be used in\
                    \ the last block of a read layout (i.e. \n                   \
                    \           <BARCODE1:x><SAMPLE1:20> is not allowed)\n       \
                    \                       \n                                Default\
                    \ value: null. This option may be specified 0 or more times. \n\
                    \nOUTPUT_LAYOUT=String\nOL=String                     Describes\
                    \ the output file layout(s) using the slots defined in read layouts\
                    \ and ':' to \n                              delimitate three\
                    \ parts e.g. 'OL=1::' : \n                              \t1.The\
                    \ number in the first part (i.e. from '1:' above) is the output\
                    \ file index and it \n                              must be unique\
                    \ across all 'OL' inputs. Inferred from order in comamnd line\
                    \ when not given\n                              \t2.The second\
                    \ part (i.e. '' above) is the read header layout ; when writing\
                    \ multiple UMI \n                              and BARCODE slots\
                    \ in output read headers, these are always separated with the\
                    \ RCHAR (':' \n                              by defaults).\n \
                    \                             \t3.The third part (i.e. '' above)\
                    \ is the read sequence layout.\n                             \
                    \   Default value: null. This option may be specified 0 or more\
                    \ times. \n\nWITH_QUALITY_IN_READNAME=Boolean\nWQ=Boolean    \
                    \                Should quality string also be injected in read\
                    \ names. Only applies to READBAR and UMI \n                  \
                    \            described in the read name slot of output layout\
                    \ \n                              If turned on, the quality string\
                    \ is translated into 2 digits number and a e.g. UMI will \n  \
                    \                            look like\n                     \
                    \         \t '...:ATGCAT333423212322:...' instead of '...:ATGCAT:...'\n\
                    \                              This option is particularly useful\
                    \ with the retag module that knows how to extract \n         \
                    \                     quality numbers into BAM tags.  Default\
                    \ value: false. This option can be set to 'null' to \n       \
                    \                       clear the default value. Possible values:\
                    \ {true, false} \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\n\
                    OWID=Boolean                  Should the output layout number\
                    \ (output layout first slot) be injected in the filename ?\n \
                    \                             Only used in absence of explicit\
                    \ file names in the barcode file.\n                          \
                    \      Default value: true. This option can be set to 'null' to\
                    \ clear the default value. \n                              Possible\
                    \ values: {true, false} \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
                    OWHL=Boolean                  Should the output layout used for\
                    \ the read name (output layout second slot,in short \n       \
                    \                       format) be injected in the filename ?\
                    \ When true, each ouput file name contains e.g. \n           \
                    \                   '_B1U1' for OL='1::'  \n                 \
                    \             Only used in absence of explicit file names in the\
                    \ barcode file.\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
                    OWSL=Boolean                  Should the output layout used for\
                    \ the read sequence (output layout third slot, in short \n   \
                    \                           format) be injected in the filename\
                    \ ?When true, each ouput file name contains e.g. '_S1' \n    \
                    \                          for OL='1::'  \n                  \
                    \            Only used in absence of explicit file names in the\
                    \ barcode file.\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nOUTPUT_DIR=File\nO=File                        Output\
                    \ directory. By default, output files are written in running directory.\n\
                    \                                Default value: null. \n\nFORCE=Boolean\
                    \                 Allows to overwrite existing files (system rights\
                    \ still apply).\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                \
                    \    Compress output files using gzip.\n                     \
                    \           Default value: true. This option can be set to 'null'\
                    \ to clear the default value. \n                             \
                    \ Possible values: {true, false} \n\nREAD_NAME_SEPARATOR_CHAR=String\n\
                    SEP=String                    Separator character used to concatenate\
                    \ barcodes and umis in read header\n                         \
                    \       Default value: :. This option can be set to 'null' to\
                    \ clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
                    V=FastqQualityFormat          A value describing how the quality\
                    \ values are encoded in the fastq files.  Either \n          \
                    \                    'Solexa' for pre-pipeline 1.3 style scores\
                    \ (solexa scaling + 66), 'Illumina' for pipeline \n          \
                    \                    1.3 and above (phred scaling + 64) or 'Standard'\
                    \ for phred scaled scores with a character \n                \
                    \              shift of 33.  If this value is not specified (or\
                    \ 'null' is given), the quality format is \n                 \
                    \             assumed to be will the 'Standard' for phred scale.\n\
                    \                                Default value: null. Possible\
                    \ values: {Solexa, Illumina, Standard} \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\n\
                    TEST=Boolean                  test mode ie code execution stops\
                    \ right before read demultiplexing starts btu after \n       \
                    \                       comamnd line validation  Default value:\
                    \ false. This option can be set to 'null' to clear \n        \
                    \                      the default value. Possible values: {true,\
                    \ false} \n\nFASTQ_FILE_EXTENSION=String   Change the default\
                    \ extension of created fastq files, eg 'fastqsanger'. By default\
                    \ uses \n                              the file extension from\
                    \ input fastq file. If result file names are given in the barcode\
                    \ \n                              file, this option is only used\
                    \ to adapt the unassigned file names. When using \n          \
                    \                    compression, a .gz is always appended to\
                    \ file names and should not be specified in \n               \
                    \               FASTQ_FILE_EXTENSION i.e. \n                 \
                    \             use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
                    \                                Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                    ASYNC=Boolean                 Use one thread per Fastq Writer.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\n"
                  generated_using: *id004
                - !Command
                  command: &id007
                  - je
                  - retag
                  positional:
                  - !Positional
                    description: 'Counting starts at 1 and negative numbers can be
                      used to start counting from the end '
                    position: 0
                    name: header.
                    optional: false
                  - !Positional
                    description: "a hyphen ('-'). The order of concatenation follows\
                      \ the order of UMI_SLOT in the command "
                    position: 0
                    name: using
                    optional: false
                  - !Positional
                    description: 'For example, consider the following read name that
                      lists 3 different sequence codes in '
                    position: 1
                    name: line.
                    optional: false
                  - !Positional
                    description: 'ACTCTAC,TCTGTAC,ACTGTAG  '
                    position: 0
                    name: ACTGTAC
                    optional: false
                  - !Positional
                    description: 'RGPG=String                   Read Group program
                      group; only considered when RG=true  Default value: null. '
                    position: 0
                    name: null.
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: TagFromReadName\
                    \ [options]\n\nExtracts barcode and UMI sequence(s) embedded in\
                    \ read names and tag reads with proper BAM tag.\nVersion: 2.0.RC\n\
                    \n\nOptions:\n\n--help\n-h                            Displays\
                    \ options specific to this tool.\n\n--stdhelp\n-H            \
                    \                Displays options specific to this tool AND options\
                    \ common to all Picard command line \n                       \
                    \       tools.\n\n--version                     Displays program\
                    \ version.\n\nINPUT=File\nI=File                        Input\
                    \ SAM/BAM file  Required. \n\nOUTPUT=File\nO=File            \
                    \            Output SAM/BAM file  Required. \n\nBC_SLOT=Integer\
                    \               Where to find the BARCODE(s) in the read name\
                    \ once read name has been tokenized using the \n             \
                    \                 SPLIT character (e.g. ':'). \n             \
                    \                 This option can be specified multiple time when\
                    \ multiple BARCODES are present in read \n                   \
                    \           header.\n                              Counting starts\
                    \ at 1 and negative numbers can be used to start counting from\
                    \ the end \n                              (last token is '-1').\n\
                    \                              BARCODE(s) extracted from read\
                    \ name are used to assemble a 'BC:Z:GATCCTAG' tag (BC is \n  \
                    \                            default, see BC_TAG). \n        \
                    \                      Following SAM specifications, in the case\
                    \ of multiple barcodes, all the barcodes are \n              \
                    \                concatenated using \n                       \
                    \       a hyphen ('-') between the barcodes. The order of concatenation\
                    \ follows the order of \n                              BC_SLOT\
                    \ in the command line.\n                              For example,\
                    \ consider the following read name that lists 3 different barcodes\
                    \ in the end \n                              : \n            \
                    \                  \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
                    \ \n                              \t to indicate that the three\
                    \ slots contain barcodes, use \n                             \
                    \ \t\t BC_SLOT=-1 BC_SLOT=-2 BC_SLOT=-3 ; which will result as\
                    \ BC:Z:AAGGTACG-GATCCTAG-CGATGTTT\n                          \
                    \    \t if only the 2 last ones should be considered, use \n \
                    \                             \t\t BC_SLOT=-1 BC_SLOT=-2 ; which\
                    \ will result as BC:Z:AAGGTACG-GATCCTAG\t Note that BC_SLOT \n\
                    \                              order matters as : \n         \
                    \                     \t\t BC_SLOT=-2 BC_SLOT=-1 ; would result\
                    \ as BC:Z:GATCCTAG-AAGGTACG  Default value: null. \n         \
                    \                     This option may be specified 0 or more times.\
                    \ \n\nUMI_SLOT=Integer              Where to find the UMI(s) in\
                    \ the read name once read name has been tokenized using the \n\
                    \                              SPLIT character (e.g. ':'). \n\
                    \                              This option can be specified multiple\
                    \ time when multiple UMIs are present in read header.\n      \
                    \                        Counting starts at 1 and negative numbers\
                    \ can be used to start counting from the end \n              \
                    \                (last token is '-1').\n                     \
                    \         UMI(s) extracted from read name are used to assemble\
                    \ both a RX and OX tag e.g. \n                              'RX:Z:GATCCTAG'\
                    \ tag. \n                              Following SAM specifications,\
                    \ in the case of multiple UMIs, all the UMIs are concatenated\
                    \ \n                              using \n                   \
                    \           a hyphen ('-'). The order of concatenation follows\
                    \ the order of UMI_SLOT in the command \n                    \
                    \          line.\n                              For example, consider\
                    \ the following read name that lists 3 different sequence codes\
                    \ in \n                              the end : \n            \
                    \                  \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
                    \ \n                              \t to indicate that the 2 last\
                    \ slots contain UMIs, use \n                              \t\t\
                    \ UMI_SLOT=-1 UMI_SLOT=-2 ; which will result as RX:Z:AAGGTACG-GATCCTAG\t\
                    \ Note that \n                              UMI_SLOT order matters\
                    \ as : \n                              \t\t UMI_SLOT=-2 UMI_SLOT=-1\
                    \ ; would result as RX:Z:GATCCTAG-AAGGTACG  Default value: null.\
                    \ \n                              This option may be specified\
                    \ 0 or more times. \n\nCLUSTERED_CODES_FILE=File\nCC=File    \
                    \                   Group of barcodes (clusters) for on-the-fly\
                    \ correction of the BARCODEs. This file \n                   \
                    \           contains mapping between the barcodes sequences\n\
                    \                              as originally found in the FASTQ\
                    \ reads (and in the read name of the input BAM) and the \n   \
                    \                           corrected sample barcode\n       \
                    \                       sequences (e.g. as identified by clustering\
                    \ with mismatches using tools like starcode or \n            \
                    \                  vsearch ) \n                              that\
                    \ should be written in the BC tag in place of the original sequence.\n\
                    \                              If provided, the BARCODE sequence(s)\
                    \ extracted from read name are converted to the 'real' \n    \
                    \                          barcodes according\n              \
                    \                to the mapping described in this file. If the\
                    \ sequence is not found in the supplied \n                   \
                    \           mapping file, the read is either\n               \
                    \               trashed or kept (according to option KEEP_UNASSIGNED_BARCODES),\
                    \ in which case the value \n                              defined\
                    \ by UNASSIGNED_BARCODE_VALUE\n                              is\
                    \ used.\n                              Format: two column text\
                    \ file, one cluster per line with the real barcode in the first\
                    \ \n                              line and the comma separated\n\
                    \                              list of codes in the second column\
                    \ i.e. :\n                              \t\t ACTGTAC \tACTCTAC,TCTGTAC,ACTGTAG\
                    \  \n                              All the codes MUST have the\
                    \ same length  Default value: null. \n\nKEEP_UNASSIGNED_BARCODES=Boolean\n\
                    KUP=Boolean                   Should read be keep when no mapping\
                    \ was defined for the orginal barcode sequence in \n         \
                    \                     provided CLUSTERED_CODES_FILE.\n       \
                    \                       If false, the read is not written in output\
                    \ file.  Default value: true. This option can \n             \
                    \                 be set to 'null' to clear the default value.\
                    \ Possible values: {true, false} \n\nUNASSIGNED_BARCODE_VALUE=String\n\
                    UBV=String                    Value to use for the BARCODE tag\
                    \ when CLUSTERED_CODES_FILE was provided and no mapping \n   \
                    \                           was defined for the orginal barcode\
                    \ sequence.  Default value: NA. This option can be set \n    \
                    \                          to 'null' to clear the default value.\
                    \ \n\nTRIM_HEADERS=Boolean\nT=Boolean                     Should\
                    \ barcode/UMIs information be removed from read names in the output\
                    \ BAM ?   Default \n                              value: false.\
                    \ This option can be set to 'null' to clear the default value.\
                    \ Possible \n                              values: {true, false}\
                    \ \n\nTSLOTS=Integer\nTSLOTS=Integer                Where to find\
                    \ *all* barcode(s) and UMIs in the read name once has been tokenized\
                    \ using \n                              the SPLIT character (e.g.\
                    \ ':'). \n                              This option is only considered\
                    \ when TRIM_HEADERS=true and should only be used when \n     \
                    \                         UMI_SLOT and BC_SLOT do not\n      \
                    \                        describe all the slots that should be\
                    \ trimmed. When TSLOTS is ommited while \n                   \
                    \           TRIM_HEADERS=true, the values\n                  \
                    \            of UMI_SLOT and BC_SLOT apply.\n                \
                    \              IMPORTANT : counting starts at 1 and negative numbers\
                    \ can be used to start counting from \n                      \
                    \        the end.\n                              See UMI_SLOT\
                    \ help for examples.  Default value: null. This option may be\
                    \ specified 0 or \n                              more times. \n\
                    \nSPLIT_CHAR=String\nSPLIT=String                  Character to\
                    \ use to split up the read header line, default is ':'.  Default\
                    \ value: :. \n                              This option can be\
                    \ set to 'null' to clear the default value. \n\nBC_TAG=String\
                    \                 SAM Tag to use to store barcode(s) sequences\
                    \ extracted from barcode slots (BC by \n                     \
                    \         default). Do not change unless you have good reasons\
                    \ to.  Default value: BC. This option \n                     \
                    \         can be set to 'null' to clear the default value. \n\n\
                    QT_TAG=String                 SAM Tag to use to store barcode(s)\
                    \ quality score extracted from barcode slots (QT by \n       \
                    \                       default). Do not change unless you have\
                    \ good reasons to.  Default value: QT. This option \n        \
                    \                      can be set to 'null' to clear the default\
                    \ value. \n\nWITH_RX=Boolean               Should the RX (and\
                    \ QX when relevant) SAM Tag(s) be used to store UMI(s) sequence\
                    \ (and \n                              quality) extracted from\
                    \ UMI slots. Set to FALSE if you don't want these tags to be set.\
                    \   \n                              Default value: true. This\
                    \ option can be set to 'null' to clear the default value. \n \
                    \                             Possible values: {true, false} \n\
                    \nWITH_OX=Boolean               Should the OX (and BZ when relevant)\
                    \ SAM Tag(s) be used to store UMI(s) sequence (and \n        \
                    \                      quality) extracted from UMI slots. Set\
                    \ to FALSE if you don't want these tags to be set.   \n      \
                    \                        Default value: true. This option can\
                    \ be set to 'null' to clear the default value. \n            \
                    \                  Possible values: {true, false} \n\nUMI_SEQ_TAG=String\
                    \            SAM Tag to use to store original UMI(s) sequence\
                    \ extracted from UMI slots (instead of RX \n                 \
                    \             / OX)  Default value: null. \n\nUMI_QUAL_TAG=String\
                    \           SAM Tag to use to store original UMI(s) sequence extracted\
                    \ from UMI slots (instead of QX \n                           \
                    \   / BZ)  Default value: null. \n\nADD_RG=Boolean\nARG=Boolean\
                    \                   Should a read group be created for each barcode.\
                    \ This option is only considered when \n                     \
                    \         providing a CLUSTERED_CODES_FILE.  Default value: false.\
                    \ This option can be set to 'null' \n                        \
                    \      to clear the default value. Possible values: {true, false}\
                    \ \n\nRGPL=String                   Read Group platform (e.g.\
                    \ illumina, solid) ; only considered when RG=true  Default value:\
                    \ \n                              null. \n\nRGPG=String      \
                    \             Read Group program group; only considered when RG=true\
                    \  Default value: null. \n\nPROGRAM_RECORD_ID=String\nPG=String\
                    \                     The program record ID for the @PG record(s)\
                    \ created by this program. Set to null to \n                 \
                    \             disable PG record creation.  This string may have\
                    \ a suffix appended to avoid collision \n                    \
                    \          with other program record IDs.  Default value: TagFromReadName.\
                    \ This option can be set to \n                              'null'\
                    \ to clear the default value. \n\nPROGRAM_GROUP_VERSION=String\n\
                    PG_VERSION=String             Value of VN tag of PG record to\
                    \ be created. If not specified, the version will be \n       \
                    \                       detected automatically.  Default value:\
                    \ null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
                    \             Value of CL tag of PG record to be created. If not\
                    \ supplied the command line will be \n                       \
                    \       detected automatically.  Default value: null. \n\nPROGRAM_GROUP_NAME=String\n\
                    PG_NAME=String                Value of PN tag of PG record to\
                    \ be created.  Default value: TagFromReadName. This option \n\
                    \                              can be set to 'null' to clear the\
                    \ default value. \n\nCOMMENT=String\nCO=String               \
                    \      Comment(s) to include in the output file's header.  Default\
                    \ value: null. This option may \n                            \
                    \  be specified 0 or more times. \n\n"
                  generated_using: *id004
                - !Command
                  command: &id008
                  - je
                  - demultiplex-illu
                  positional:
                  - !Positional
                    description: 'Required. '
                    position: 0
                    name: data.
                    optional: false
                  - !Positional
                    description: INDEX_FILE2=File
                    position: 0
                    name: Required.
                    optional: false
                  - !Positional
                    description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
                    position: 0
                    name: Or
                    optional: false
                  - !Positional
                    description: 'Indicates if both index barcodes encode redundant
                      information i.e. if both barcodes are '
                    position: 0
                    name: provided.
                    optional: false
                  - !Positional
                    description: 'values can be given here using the syntax MM=X:Z
                      where X and Z are 2 integers to use for '
                    position: 0
                    name: distinct
                    optional: false
                  - !Positional
                    description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'"
                    position: 0
                    name: becomes
                    optional: false
                  - !Positional
                    description: "Default value: Standard. This option can be set\
                      \ to 'null' to clear the default value. "
                    position: 0
                    name: detected.
                    optional: false
                  - !Positional
                    description: 'N.B: this file will have a size of about one of
                      the fastq input files.  Default value: '
                    position: 0
                    name: barcoded.
                    optional: false
                  - !Positional
                    description: "FORCE=Boolean                 Allows to overwrite\
                      \ existing files (system rights still apply).\nDefault value:\
                      \ false. This option can be set to 'null' to clear the default\
                      \ value."
                    position: 1
                    name: null.
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: JemultiplexerIllumina\
                    \ [options]\n\n\tFastq files demultiplexer for Illumina Fastq\
                    \ files using Illumina Index files.\n\tFastq files (reads and\
                    \ index) can be in gzip compressed (end in .gz). \n\tBy default\
                    \ output files are gzipped and have names following the pattern\
                    \ \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]' unless\
                    \ you gave file\n\t names to use within the barcode description\
                    \ file.\nExample : \n\t je demultiplex-illu F1=fastq_1.txt.gz\
                    \ I1=index_1.txt.gz BF=barcodes.bs O=~/Desktop/test-jemultiplexer2/\
                    \ \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h              \
                    \              Displays options specific to this tool.\n\n--stdhelp\n\
                    -H                            Displays options specific to this\
                    \ tool AND options common to all Picard command line \n      \
                    \                        tools.\n\n--version                 \
                    \    Displays program version.\n\nFASTQ_FILE1=File\nF1=File  \
                    \                     Input fastq file (optionally gzipped) for\
                    \ single end data, or first read in paired end \n            \
                    \                  data.\n                                Required.\
                    \ \n\nFASTQ_FILE2=File\nF2=File                       Input fastq\
                    \ file (optionally gzipped) for the second read of paired end\
                    \ data.\n                                Default value: null.\
                    \ \n\nINDEX_FILE1=File\nI1=File                       Fastq file\
                    \ for index 1 (barcode) reads, optionally gzipped.\n         \
                    \                       Required. \n\nINDEX_FILE2=File\nI2=File\
                    \                       Fastq file for index 2 (barcode) reads,\
                    \ optionally gzipped.\n                              A INDEX_FILE1\
                    \ MUST be provided when INDEX_FILE2 is given. This situation corresponds\
                    \ to \n                              Illumina dual indexing.\n\
                    \                                Default value: null. \n\nBARCODE_FILE=File\n\
                    BF=File                       Barcode file describing sequence\
                    \ list and sample names. Tab-delimited file with 2 \n        \
                    \                      columns, with the sample in col1 and the\
                    \ corresponding barcode in col2.\n                           \
                    \   Simple barcode file format : 2 tab-delimited colums\n    \
                    \                          \tIf multiple barcode map to the same\
                    \ sample, either line can be duplicated e.g.\n               \
                    \               \t\tsample1\tATAT\n                          \
                    \    \t\tsample1\tGAGG\n                              \t\tsample2\t\
                    CCAA\n                              \t\tsample2\tTGTG\n      \
                    \                        \tOr barcodes can be combined using the\
                    \ OR operator '|' i.e. the file above can be \n              \
                    \                re-written like\n                           \
                    \    \t\tsample1\tATAT|GAGG\n                              \t\t\
                    sample2\tCCAA|TGTG\n                              \tFinally, for\
                    \ the special situation of paired-end data in which barcodes differ\
                    \ at both \n                              ends (ie BPOS=BOTH BRED=false\
                    \ BM=BOTH , see BRED option description), barcodes for read_1\
                    \ \n                              and read_2 can be distinguished\
                    \ using a ':' separator i.e. \n                              \t\
                    \tsample1\tATAT:GAGG\n                              \t\tsample2\t\
                    CCAA:TGTG\n                              \tThis above syntax means\
                    \ that sample 1 is encoded with ATAT barcode at read_1 AND GAGG\
                    \ \n                              barcode at read_2. Note that\
                    \ you can still combine barcodes using | e.g. \n             \
                    \                 \t\tsample1\tATAT|GAGG:CCAA|TGTG\n         \
                    \                     \twould mean that sample 1 is mapped by\
                    \ the combination of barcode: ATAT OR GAGG at read_1 \n      \
                    \                        AND CCAA OR TGTG at read_2.\n       \
                    \                       Extended barcode file format : 3 (single-end)\
                    \ or 4 (paired-end) tab-delimited colums\n                   \
                    \           \tsame as the simple barcode file format but the extra\
                    \ columns contains the file name(s) \n                       \
                    \       to use to name output files. A unique extra column is\
                    \ expected for single-end while 2 \n                         \
                    \     extra columns are expected for paired-end. In case, lines\
                    \ are duplicated (multiple \n                              barcodesmapping\
                    \ the same sample), the same file name should be indicated in\
                    \ the third \n                              (and fourth) column(s).\
                    \ \n                              \t\tsample1\tATAT\tspl1_1.txt.gz\t\
                    spl1_2.txt.gz\n                              \t\tsample1\tGAGG\t\
                    spl1_1.txt.gz\tspl1_2.txt.gz\n                              \t\
                    \tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n              \
                    \                \tOr\n                              \t\tsample1\
                    \ \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n \
                    \                             Ns in barcode sequence are allowed\
                    \ and are used to flag positions that should be ignored \n   \
                    \                           in sample matching \n            \
                    \                  \t i.e. they will be clipped off the read sequence\
                    \ (like in iCLIP protocol).  Required.  \n                   \
                    \           Cannot be used in conjuction with option(s) USE_EMBASE\
                    \ (EM)\n\nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition\
                    \          Indicates the location of additional barcodes present\
                    \ in the read(s). Setting this option \n                     \
                    \         implies setting the LEN option.\n                  \
                    \            \tImportantly, these additional barcodes must not\
                    \ encode sample identity information but \n                  \
                    \            used for \n                              \te.g. molecular\
                    \ barcoding (UMIs) or for any purpose other than sample identity\
                    \ encoding.  \n                              Default value: BOTH.\
                    \ This option can be set to 'null' to clear the default value.\
                    \ \n                              Possible values: {READ_1, READ_2,\
                    \ BOTH, NONE} \n\nBCLEN=String\nLEN=String                   \
                    \ Length of the additional barcodes present in the read(s) as\
                    \ indicated by the BPOS option. \n                           \
                    \   Two distinct length can be provided using the syntax LEN=X:Z\
                    \ where X and Z are 2 integers \n                            \
                    \  representing the barcode length for read_1 and read_2 respectively.\n\
                    \                              Only relevant when BPOS != NONE.\
                    \  Default value: null. \n\nREDUNDANT_BARCODES=Boolean\nBRED=Boolean\
                    \                  This option only applies for paired-end data\
                    \ with *both* INDEX_FILE1 and INDEX_FILE2 \n                 \
                    \             provided.\n                              Indicates\
                    \ if both index barcodes encode redundant information i.e. if\
                    \ both barcodes are \n                              supposed to\
                    \ be identical (or resolve to the same sample when a pool of barcodes\
                    \ is used \n                              per sample).\n     \
                    \                          \tWhen BRED=true, the STRICT option\
                    \ guides the sample lookup behavior\tWhen BRED=false, \n     \
                    \                         barcodes are combined prior to sample\
                    \ lookup.\n                                Default value: true.\
                    \ This option can be set to 'null' to clear the default value.\
                    \ \n                              Possible values: {true, false}\
                    \ \n\nSTRICT=Boolean\nS=Boolean                     For paired-end\
                    \ data and when two distinct barcodes/indices are used to encode\
                    \ samples,\n                               this option tells if\
                    \ both barcodes should resolve to the same sample.\n         \
                    \                      When true and if only one of the two reads\
                    \ has a barcode match, the read pair is \n                   \
                    \           'unassigned'.\n                               When\
                    \ false and if only one of the two reads has a barcode match,\
                    \ the read pair is \n                              assigned to\
                    \ the\n                               corresponding sample\n \
                    \                             When reads resolve to different\
                    \ samples, the read pair is always 'unassigned'.\n           \
                    \                     Default value: false. This option can be\
                    \ set to 'null' to clear the default value. \n               \
                    \               Possible values: {true, false} \n\nMAX_MISMATCHES=String\n\
                    MM=String                     Maximum mismatches for a barcode\
                    \ to be considered a match. In situations where both \n      \
                    \                        barcodes are used for sample matching\
                    \ i.e. BPOS=BOTH BM=BOTH (or 2 INDEX_FILE given), two \n     \
                    \                         distinct\n                         \
                    \      values can be given here using the syntax MM=X:Z where\
                    \ X and Z are 2 integers to use for \n                       \
                    \       read_1 and read_2 respectively.\n                    \
                    \          MM=null is like MM=0\n                            \
                    \    Default value: 1. This option can be set to 'null' to clear\
                    \ the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String\
                    \                    Minimum difference between the number of\
                    \ mismatches against the best and the second best \n         \
                    \                     barcode. When MMD is not respected, the\
                    \ read remains unassigned.\n                              When\
                    \ two distinct barcodes are used for sample matching (dual encoding),\
                    \ two distinct \n                              values can be given\
                    \ using the syntax MMD=X:Z where X and Z are 2 integers to use\
                    \ for \n                              first (e.g. from read_1\
                    \ or index_1)\n                              MMD=null is like\
                    \ MMD=0\n                                Default value: 1. This\
                    \ option can be set to 'null' to clear the default value. \n\n\
                    MIN_BASE_QUALITY=String\nQ=String                      Minimum\
                    \ base quality during barcode matching: bases which quality is\
                    \ less than this \n                              cutoff are always\
                    \ considered as a mismatch.When two distinct barcodes are used\
                    \ for sample \n                              matching (dual encoding),\
                    \ two distinct values can be given using the syntax Q=X:Z where\
                    \ X \n                              and Z are 2 integers to use\
                    \ for first (e.g. from read_1 or index_1) and second barcode \n\
                    \                              (e.g. from read_2 or index_2) respectively.\n\
                    \                              Q=null is like Q=0.\n         \
                    \                       Default value: 10. This option can be\
                    \ set to 'null' to clear the default value. \n\nXTRIMLEN=String\n\
                    XT=String                     Optional extra number of base to\
                    \ be trimmed right after the barcode (only used if \n        \
                    \                      CLIP_BARCODE=true). \n                \
                    \              When running paired-end, two distinct values can\
                    \ be given using the syntax XT=X:Z where X \n                \
                    \              and Z are 2 integers to use for read_1 and read_2\
                    \ respectively. Note that even when \n                       \
                    \       BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given\
                    \ to trim the read w/o barcode as to \n                      \
                    \        end up with reads of the same length (note that this\
                    \ can also be operated using ZT). If a \n                    \
                    \          unique value is given, e.g. XT=1, while running paired-end\
                    \ the following rule applies :\n                             \
                    \  \t(1) BPOS=READ_1 or BPOS=READ_2, no trim is applied at the\
                    \ read w/o barcode \n                              \t(2) BPOS=BOTH,\
                    \ the value is used for both reads.\n                        \
                    \      Note that XT=null is like XT=0.\n                     \
                    \           Default value: 0. This option can be set to 'null'\
                    \ to clear the default value. \n\nZTRIMLEN=String\nZT=String \
                    \                    Optional extra number of bases to be trimmed\
                    \ from the read end i.e. 3' end.\n                           \
                    \   When running paired-end, two distinct values can be given\
                    \ here using the syntax ZT=X:Z \n                            \
                    \  where X and Z are 2 integers to use for read_1 and read_2 respectively.\
                    \ Note that even \n                              when BPOS=READ_1\
                    \ or BPOS=READ_2, a X:Y synthax can be given to trim the read\
                    \ w/o barcode \n                              as to end up with\
                    \ reads of the same length (note that this can also be operated\
                    \ using \n                              XT). Note that if a single\
                    \ value is passed, the value always applies to both reads in \n\
                    \                              paired-end mode without further\
                    \ consideration.\n                              ZT=null is like\
                    \ ZT=0.\n                                Default value: 0. This\
                    \ option can be set to 'null' to clear the default value. \n\n\
                    CLIP_BARCODE=Boolean\nC=Boolean                     Clip barcode\
                    \ sequence from read sequence, as well as XTRIMLEN (and ZTRIMLEN)\
                    \ bases if \n                              applicable, before\
                    \ writing to output file.\n                               If false,\
                    \ reads are written without modification to output file. \n  \
                    \                            Apply to both barcodes when BPOS=BOTH.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\n\
                    ADD=Boolean                   Add matched barcode at the end of\
                    \ the read header. Applies to both index when INDEX_FILE2 \n \
                    \                             is also provided.\n            \
                    \                  \tFirst the sample encoding barcodes from I1\
                    \ (and I2 when relevant) are added to the read \n            \
                    \                  headers like \n                           \
                    \   \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:I1_BARCODE:I2_BARCODE'\n\
                    \                              \tThen, if BPOS!=NONE, the additional\
                    \ barcodes (UMIs) clipped from the read(s) are added \n      \
                    \                        to their own header, like \n        \
                    \                      \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ \n                              2:N:0:I1_BARCODE:I2_BARCODE:CLIPPED_SEQ_FROMREAD'\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\n\
                    SAME_HEADERS=Boolean          Makes sure that headers of both\
                    \ reads of a pair are identical, using the following read \n \
                    \                             header pattern (for both reads of\
                    \ a pair) :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ I1_BARCODE:I2_BARCODE(if \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2\
                    \ \n                              This option only makes sense\
                    \ in paired end mode and ADD=true. Some (if not all) mappers \n\
                    \                              will indeed complain when the read\
                    \ headers are not identical. When molecular barcodes are \n  \
                    \                            present in reads and the RCHAR is\
                    \ used, you will end with (problematic) read headers like \n \
                    \                             this :\n                       \
                    \       \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
                    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
                    \                              SAME_HEADERS=true will instead\
                    \ genetates the following identical header for both reads :\n\
                    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
                    \                              Note that we also clipped the useless\
                    \ '1:N:0' and '3:N:0' has they will also result in \n        \
                    \                      generating different headers\n        \
                    \                      \t Important : this option will force RCHAR=:\
                    \ UNLESS you specify RCHAR=null ; in which \n                \
                    \              case a space will be preserved ie : \n        \
                    \                      \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994\
                    \ TAGAACAC:TGGAGTAG:CGTTGTAT\n                               \
                    \ Default value: true. This option can be set to 'null' to clear\
                    \ the default value. \n                              Possible\
                    \ values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String\
                    \                  Replace spaces in read name/header using provided\
                    \ character. This is particularly handy \n                   \
                    \           when you need to retain\t ADDed barcode in read name/header\
                    \ during mapping (everything \n                              after\
                    \ space in read name is usually clipped in BAM files).\tFor example,\
                    \ with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                    \ 2:N:0:'\n                              \tbecomes\n         \
                    \                     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
                    \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
                    V=FastqQualityFormat          A value describing how the quality\
                    \ values are encoded in the fastq.  Either 'Solexa' for \n   \
                    \                           pre-pipeline 1.3 style scores (solexa\
                    \ scaling + 66), 'Illumina' for pipeline 1.3 and \n          \
                    \                    above (phred scaling + 64) or 'Standard'\
                    \ for phred scaled scores with a character shift \n          \
                    \                    of 33.  If this value is not specified (or\
                    \ 'null' is given), the quality format will be \n            \
                    \                  detected.\n                               \
                    \ Default value: Standard. This option can be set to 'null' to\
                    \ clear the default value. \n                              Possible\
                    \ values: {Solexa, Illumina, Standard} \n\nOUTPUT_DIR=File\nO=File\
                    \                        Output directory. By default, output\
                    \ files are written in running directory.\n                  \
                    \              Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
                    UN=Boolean                    Should un-assigned reads be saved\
                    \ in files or simply ignored. File names are \n              \
                    \                automatically created or can be given using UF1\
                    \ & UF2 options.\n                                Default value:\
                    \ true. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nUNASSIGNED_FILE_NAME_1=String\nUF1=String       \
                    \             Name of the file in which to write unassigned reads\
                    \ from FILE1.Either a name (in which \n                      \
                    \        case the file will be created in the output dir) or full\
                    \ path.\n                                Default value: unassigned_1.txt.\
                    \ This option can be set to 'null' to clear the default \n   \
                    \                           value. \n\nUNASSIGNED_FILE_NAME_2=String\n\
                    UF2=String                    Name of the file in which to write\
                    \ unassigned reads from FILE2.Either a name (in which \n     \
                    \                         case the file will be created in the\
                    \ output dir) or full path.\n                                Default\
                    \ value: unassigned_2.txt. This option can be set to 'null' to\
                    \ clear the default \n                              value. \n\n\
                    METRICS_FILE_NAME=String\nM=String                      File name\
                    \ where to write demultiplexing statistics. Either a name (in\
                    \ which case the file \n                              will be\
                    \ created in the output dir) or an absolute path.\n          \
                    \                      Default value: jemultiplexer_out_stats.txt.\
                    \ This option can be set to 'null' to clear \n               \
                    \               the default value. \n\nBARCODE_DIAG_FILE=String\n\
                    DIAG=String                   Name for a barcode match reporting\
                    \ file (not generated by default).Either a name (in \n       \
                    \                       which case the file will be created in\
                    \ the output dir) or full path. This file will \n            \
                    \                  contain a line per read pair with the barcode\
                    \ best matching the read subsequence or \n                   \
                    \           'null' when no match is found according to matching\
                    \ parameters ; and the final selected \n                     \
                    \         sample. This file is useful for debugging or further\
                    \ processing in case both ends are \n                        \
                    \      barcoded.\n                              N.B: this file\
                    \ will have a size of about one of the fastq input files.  Default\
                    \ value: \n                              null. \n\nFORCE=Boolean\
                    \                 Allows to overwrite existing files (system rights\
                    \ still apply).\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                \
                    \    Compress output files using gzip.\n                     \
                    \           Default value: true. This option can be set to 'null'\
                    \ to clear the default value. \n                             \
                    \ Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
                    \   Change the default extension of created fastq files, eg 'fastqsanger'.\
                    \ By default uses \n                              the file extension\
                    \ from input fastq file. If result file names are given in the\
                    \ barcode \n                              file, this option is\
                    \ only used to adapt the unassigned file names. When using \n\
                    \                              compression, a .gz is always appended\
                    \ to file names and should not be specified in \n            \
                    \                  FASTQ_FILE_EXTENSION i.e. \n              \
                    \                use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
                    \                                Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                    ASYNC=Boolean                 Use one thread per Fastq Writer.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nSTATS_ONLY=Boolean\
                    \            Only produces metric and diagnostic reports i.e.\
                    \ no output fastq file produced.\n                           \
                    \     Default value: false. This option can be set to 'null' to\
                    \ clear the default value. \n                              Possible\
                    \ values: {true, false} \n\nUSE_EMBASE=Boolean\nEM=Boolean   \
                    \                 Enables emBASE mode i.e fetch information from\
                    \ emBASE and place demultiplexed files \n                    \
                    \          directly in emBASE repository structure.\n        \
                    \                      This option is mutually exclusive with\
                    \ BARCODE_FILE.\n                              Note : this option\
                    \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
                    \ (all \n                              other user options supported).\n\
                    \                                Default value: false. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false}  Cannot\
                    \ be used in conjuction with option(s) BARCODE_FILE \n       \
                    \                       (BF)\n\n"
                  generated_using: *id004
                - !Command
                  command: &id009
                  - je
                  - debarcode
                  positional:
                  - !Positional
                    description: 'In this format, a simple BARCODE slot is expected
                      in the ReadLayout and NO headers are '
                    position: 0
                    name: col2.
                    optional: false
                  - !Positional
                    description: "sample1 ATAT|GAGG:CCAA|TGTG\n3. Extended barcode\
                      \ file format : 3 (single-end) or 4 (paired-end) tab-delimited\
                      \ colums\nsame as the simple barcode file format but the extra\
                      \ columns contains the file name(s)"
                    position: 0
                    name: e.g.
                    optional: false
                  - !Positional
                    description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
                    position: 0
                    name: Or
                    optional: false
                  - !Positional
                    description: Cannot be used in conjuction with option(s) USE_EMBASE
                      (EM)
                    position: 1
                    name: Required.
                    optional: false
                  - !Positional
                    description: "When provided, Je expects as many 'OF=' as output\
                      \ layouts ('OL=...') parameters or "
                    position: 0
                    name: formats.
                    optional: false
                  - !Positional
                    description: 'Default value: null. '
                    position: 0
                    name: barcoded.
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: DemultiplexCLI\
                    \ [options]\n\nUsage: program [options...]\n\nVersion: 2.0.RC\n\
                    \n\nOptions:\n\n--help\n-h                            Displays\
                    \ options specific to this tool.\n\n--stdhelp\n-H            \
                    \                Displays options specific to this tool AND options\
                    \ common to all Picard command line \n                       \
                    \       tools.\n\n--version                     Displays program\
                    \ version.\n\nFASTQ=File\nF=File                        Input\
                    \ fastq file (optionally gzipped)  Default value: null. This option\
                    \ must be specified \n                              at least 1\
                    \ times. \n\nBARCODE_FILE=File\nBF=File                      \
                    \ Barcode file (tsv) matching sample names to barcode combination.\
                    \ \n                              \n                         \
                    \        ### GENERAL Barcode File Format \n                  \
                    \            In this format, the file structure is governed with\
                    \ headers:\n                              \t* the 'SAMPLE' column\
                    \ lists the sample names\n                              \t* the\
                    \ 'BARCODEn' columns list the matching BARCODE from the BARCODEn\
                    \ slot (where n is a \n                              number, see\
                    \ RL option). \n                              \t    It is mandatory\
                    \ to have as many 'BARCODEn' columns as described BARCODE slots\
                    \ in \n                              READ LAYOUTS. Here again,\
                    \ barcodes can be combined using the OR operator '|'\n       \
                    \                       \t* the optional 'OUTn' columns (where\
                    \ n is a number) list the output file names for this \n      \
                    \                        sample and matching output number.\n\
                    \                              \n                            \
                    \     ### SIMPLE Barcode File Format (for backward compatibility)\
                    \ ; please see the GENERAL \n                              format\
                    \ described above \n                              The file must\
                    \ have 2 columns with the sample in col1 and the corresponding\
                    \ barcode in \n                              col2.\n         \
                    \                     In this format, a simple BARCODE slot is\
                    \ expected in the ReadLayout and NO headers are \n           \
                    \                   needed e.g. :\n                          \
                    \    \t\tsample1\tGAGG\n                              \t\tsample2\t\
                    CCAA\n                              \tThe format accept the following\
                    \ shortcuts: \n                              \t1. If multiple\
                    \ barcodes map to the same sample, either lines can be duplicated\
                    \ e.g.\n                              \t\tsample1\tATAT\n    \
                    \                          \t\tsample1\tGAGG\n               \
                    \               \t\tsample2\tCCAA\n                          \
                    \    \t\tsample2\tTGTG\n                              \tOr barcodes\
                    \ can be combined using the OR operator '|' i.e. the file above\
                    \ can be \n                              re-written like\n   \
                    \                            \t\tsample1\tATAT|GAGG\n        \
                    \                      \t\tsample2\tCCAA|TGTG\n              \
                    \                \t2. For the special situation of paired-end\
                    \ data in which barcodes differ at both ends \n              \
                    \                i.e. with BARCODE1 and BARCODE2 described for\
                    \ read one and two respectively, barcodes for \n             \
                    \                 BARCODE1 and BARCODE2 can be distinguished using\
                    \ a ':' separator i.e. \n                              \t\tsample1\t\
                    ATAT:GAGG\n                              \t\tsample2\tCCAA:TGTG\n\
                    \                              \tThis above syntax means that\
                    \ sample 1 is encoded with ATAT barcode from BARCODE1 slot \n\
                    \                              AND GAGG barcode from BARCODE2\
                    \ slot. Note that you can still combine barcodes using | \n  \
                    \                            e.g. \n                         \
                    \     \t\tsample1\tATAT|GAGG:CCAA|TGTG\n                     \
                    \         \t3. Extended barcode file format : 3 (single-end) or\
                    \ 4 (paired-end) tab-delimited colums\n                      \
                    \        \tsame as the simple barcode file format but the extra\
                    \ columns contains the file name(s) \n                       \
                    \       to use to name output files. A unique extra column is\
                    \ expected for single-end while 2 \n                         \
                    \     extra columns are expected for paired-end. In case lines\
                    \ are duplicated (multiple \n                              barcodes\
                    \ mapping the same sample), the same file name should be indicated\
                    \ in the third \n                              (and fourth) column(s).\
                    \ \n                              \t\tsample1\tATAT\tspl1_1.txt.gz\t\
                    spl1_2.txt.gz\n                              \t\tsample1\tGAGG\t\
                    spl1_1.txt.gz\tspl1_2.txt.gz\n                              \t\
                    \tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n              \
                    \                \tOr\n                              \t\tsample1\
                    \ \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n \
                    \                               Required.  Cannot be used in conjuction\
                    \ with option(s) USE_EMBASE (EM)\n\nREAD_LAYOUT=String\nRL=String\
                    \                     Describes the read layout(s) of input fastq\
                    \ file(s) e.g. RL='<BARCODE:6><SAMPLE:x>' \n                 \
                    \             describes a read with a barcode in the first 6 bases\
                    \ followed by the sample sequence ('x' \n                    \
                    \          means 'till the end', see below). You MUST single quote\
                    \ the pattern \n                              (RL='<BARCODE:6><SAMPLE:x>')\
                    \ as '>' have special meaning in unix.The input fastq files \n\
                    \                              and read layouts are mached up\
                    \ by order on the command line.\n                            \
                    \  Read layouts are only needed for complex layouts but one must\
                    \ provide read layouts for \n                              ALL\
                    \ or NONE of the input fastq files.\n                        \
                    \      ## READ LAYOUT FORMAT DESCRIPTION:/nRead layouts are made\
                    \ of <UMIn:X>, <BARCODEn:X>, \n                              <SAMPLEn:X>\
                    \ blocks to describe blocks of type UMI, BARCODE or SAMPLE with\
                    \ : \n                                  * 'n' the unique block\
                    \ index (an index must be unique across all read layouts for \n\
                    \                              each index or each block type),\
                    \ use the same index to specify redundant blocks e.g. use \n \
                    \                             <BARCODE1:6> in two different layouts\
                    \ to specify that the barcode found in both reads are \n     \
                    \                         the same\n                         \
                    \        * 'X' : either a number indicating the length of the\
                    \ UMI, BARCODE or SAMPLE block or a \n                       \
                    \       negative number e.g. -2 to specify the last 2 bases should\
                    \ be ignored/clipped) or the \n                              letter\
                    \ 'x' to specify to take the sequence till the end of read. Importantly,\
                    \ the 'x' or \n                              negative length shortcuts\
                    \ can *only* be used in the last block of a read layout (i.e.\
                    \ \n                              <BARCODE1:x><SAMPLE1:20> is\
                    \ not allowed)\n                              In addition, layouts\
                    \ can contain N or fixed bases like in 'NN<BARCODE1:6>NNNN<SAMPLE1:x>'\
                    \ \n                              where the Ns tell Je to skip\
                    \ 2 and 4 bases before extracting the barcode & sample \n    \
                    \                          sequence respectively.\n          \
                    \                    \n                              ## OMIITING\
                    \ READ LAYOUT IN THE COMMAND LINE:/nWhen no read layout is provided,\
                    \ the \n                              following defaults apply\
                    \ :\n                                 * 1 input fastq: single\
                    \ end with layout <BARCODE1:X><SAMPLE1:x> where X is inferred\
                    \ \n                              from barcode file\n        \
                    \                         * 2 input fastqs: \n               \
                    \                      - paired end with redundant barcode if\
                    \ barcode file describes a single BARCODE \n                 \
                    \             i.e. <BARCODE1:X><SAMPLE1:x> and <BARCODE1:X><SAMPLE2:x>,\
                    \ where X is inferred from \n                              barcode\
                    \ file\n                                     - paired end with\
                    \ non redundant barcode if barcode file describes two BARCODE\
                    \ \n                              column i.e. <BARCODE1:X><SAMPLE1:x>\
                    \ and <BARCODE2:Y><SAMPLE2:x>, where X and Y are \n          \
                    \                    inferred from barcode file\n            \
                    \                         - single end with index file if barcode\
                    \ file describes a single BARCODE and second \n              \
                    \                fastq file has reads of length < 10 + barcode_length\n\
                    \                                 * 3 input fastqs: \n       \
                    \                              - paired end with an index file\
                    \ i.e. <SAMPLE1:x>, <SAMPLE2:x> and <BARCODE1:X> \n          \
                    \                    when barcode file has a single BARCODE column\
                    \ (X is inferred from barcode file)\n                        \
                    \             - single end with two index files i.e. <SAMPLE1:x>,\
                    \ <BARCODE1:X> and <BARCODE2:Y> \n                           \
                    \   when barcode file has two BARCODE columns (X,Y is inferred\
                    \ from barcode file)\n                                 * 4 input\
                    \ fastqs: paired end with either \n                          \
                    \            - 2 non-redundant index files i.e. <SAMPLE1:x>, <SAMPLE2:x>,\
                    \ <BARCODE1:X>, \n                              <BARCODE2:Y> if\
                    \ the barcode file has two BARCODE columns or a ATGC:GCTAGC syntax\
                    \ (X,Y \n                              inferred from barcode file)\
                    \ \n                                     - 2 redundant index files\
                    \ <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X> and <BARCODE1:X> \n \
                    \                             if the barcode file has a single\
                    \ BARCODE column (X inferred from barcode file)\n            \
                    \                  \n                                Default value:\
                    \ null. This option may be specified 0 or more times. \n\nOUTPUT_LAYOUT=String\n\
                    OL=String                     Describes the output file layout(s)\
                    \ using the slots defined in read layouts (, , ) and \n      \
                    \                        are made of three distinct parts separated\
                    \ with ':'.\n                              In addition to , ,\
                    \ ,  is used as a synonym to  to indicate that the real sequence\
                    \  should \n                              be written (as opposed\
                    \ to writting the barcode when usign ). \n                   \
                    \           An output layout looks like '1::' where the three\
                    \ mandatory parts (':'-separated) are :\n                    \
                    \          \t- The number in the first part (i.e. from '1:' above)\
                    \ is the output file index and it \n                         \
                    \     must be unique across all 'OL' inputs. \n              \
                    \                \t- The second part (i.e. '' above) is the read\
                    \ header layout; when writing multiple UMI \n                \
                    \              and BARCODE slots in output read headers, these\
                    \ are always separated with the RCHAR (':' \n                \
                    \              by defaults).\n                              \t\
                    - The third part (i.e. '' above) is the read sequence layout.\
                    \ Note that here  and  are \n                              fully\
                    \ synonyms as the real sequence (i.e READBAR) is always written\n\
                    \                              \n                            \
                    \  Important: You MUST single quote the pattern (OL='1::') as\
                    \ '>' have special meaning in \n                             \
                    \ unix.An output file is created for each sample and each OL index.\
                    \ Output file names \n                              default to\
                    \ samplename_outputfileindex with the original fastq file extensions\n\
                    \                              \n                            \
                    \  ## OMIITING OUTPUT LAYOUT IN THE COMMAND LINE:/n  When no OL\
                    \ is described, Je considers \n                              an\
                    \ output file should be created for each input FASTQ (containing\
                    \ a SAMPLE slot) and for \n                              each\
                    \ sample.\n                               In this scenario:\n\
                    \                              \t1. The output files only contain\
                    \ the SAMPLE slot unless CLIP is set to false\n              \
                    \                \t2. The barcode(s) and sample names are injected\
                    \ in the output file names according to \n                   \
                    \           the pattern 'FASTQFILENAMEn_SAMPLENAME_BARCODES.ORIGINALEXTENSIONS'\
                    \ ) \n                              \t3. Unless ADD is set to\
                    \ false, all BARCODE and UMI slots (if any) are placed in the\
                    \ \n                              fastq headers following their\
                    \ slot index i.e. BARCODE1:...:BARCODEn:UMI1:UMI2:...:UMIn \n\
                    \                              and are separated with ':'.\n \
                    \                             ## SHORT LAYOUT FORMAT \n      \
                    \                        The output layout can be specified in\
                    \ a concise way using 'S','B', 'R' and 'U' for \n            \
                    \                  SAMPLE, BARCODE, READBAR and UMI, respectively.\
                    \ In this format, the surounding '' are \n                   \
                    \           also omitted. For example 'OL=1:B1U1U2:S1' is a synonym\
                    \ of 'OL=1::'  Default value: null. \n                       \
                    \       This option may be specified 0 or more times. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
                    WQ=Boolean                    Set to True to keep Phred sequence\
                    \ qualities in output read names. \n                         \
                    \     This option only applies to BARCODE, READBAR and UMI described\
                    \ in the read name slot of \n                              output\
                    \ layout. For BARCODE, the equivalent READBAR quality is used.\
                    \ In case of redundant \n                              slots,\
                    \ the best found quality is used.\n                          \
                    \    The quality string is translated into 2 digits number representing\
                    \ the quality scores on \n                              the Phred\
                    \ scale and a e.g. UMI will look like\n                      \
                    \        \t '...:ATGCAT333023212322:...' instead of '...:ATGCAT:...'\n\
                    \                              This option is particularly useful\
                    \ with the retag module that knows how to extract \n         \
                    \                     quality numbers into BAM tags.  Default\
                    \ value: false. This option can be set to 'null' to \n       \
                    \                       clear the default value. Possible values:\
                    \ {true, false} \n\nOUTPUT_DIR=File\nO=File                  \
                    \      Output directory. By default, output files are written\
                    \ in running directory.\n                                Default\
                    \ value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\nUN=Boolean  \
                    \                  Should un-assigned reads be saved in files\
                    \ or simply ignored. File names are \n                       \
                    \       automatically created or can be given using UF option.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nUNASSIGNED_FILE=String\n\
                    UF=String                     Name of unassigned files in which\
                    \ to write unassigned reads. When provided, Je expects as \n \
                    \                             many UF files as input FASTQ files.\
                    \ UF options are matched up with FASTQ options \n            \
                    \                  following the order they are defined on the\
                    \ command line.\n                              Either a name (in\
                    \ which case the file will be created in the output dir) or full\
                    \ path.\n                                Default value: null.\
                    \ This option may be specified 0 or more times. \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\n\
                    OWID=Boolean                  Should the output layout number\
                    \ (output layout first slot) be injected in the filename ?\n \
                    \                             Only used in absence of explicit\
                    \ file names in the barcode file.\n                          \
                    \      Default value: true. This option can be set to 'null' to\
                    \ clear the default value. \n                              Possible\
                    \ values: {true, false} \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
                    OWHL=Boolean                  Should the output layout used for\
                    \ the read name (output layout second slot,in short \n       \
                    \                       format) be injected in the filename ?\
                    \ When true, each ouput file name contains e.g. \n           \
                    \                   '_B1U1' for OL='1::'  \n                 \
                    \             Only used in absence of explicit file names in the\
                    \ barcode file.\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
                    OWSL=Boolean                  Should the output layout used for\
                    \ the read sequence (output layout third slot, in short \n   \
                    \                           format) be injected in the filename\
                    \ ?When true, each ouput file name contains e.g. '_S1' \n    \
                    \                          for OL='1::'  \n                  \
                    \            Only used in absence of explicit file names in the\
                    \ barcode file.\n                                Default value:\
                    \ false. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nOUTPUT_FILE=String\nOF=String                   \
                    \  Tells Je to write **all** assigned reads in the same output\
                    \ file(s) i.e. use this option \n                            \
                    \  when you do NOT want to create per-sample demultiplexed files\
                    \ but rather want to keep all \n                             \
                    \ reads in the same file while barcode information is gathered\
                    \ and injected in output \n                              formats.\n\
                    \                               When provided, Je expects as many\
                    \ 'OF=' as output layouts ('OL=...') parameters or \n        \
                    \                      'FASTQ=input' files when OL is not provided\n\
                    \                              . OF options are matched up with\
                    \ OL/FASTQ options following the order in which they are \n  \
                    \                            defined on the command line.\n  \
                    \                            OF expects either a name (in which\
                    \ case the file will be created in the output dir) or an \n  \
                    \                            absolute path.\n                \
                    \                Default value: null. This option may be specified\
                    \ 0 or more times. \n\nMAX_MISMATCHES=String\nMM=String      \
                    \               Maximum mismatches for a barcode to be considered\
                    \ a match. Either exactly one or multiple \n                 \
                    \             values (with format MM=X:Y:Z). \n              \
                    \                When multiple values are provided, Je expects\
                    \ exactly one value for each BARCODE (with \n                \
                    \              distinct indices) described in the barcode file/read\
                    \ layouts.\n                              Values (X,Y,Z) are matched\
                    \ up with the sorted list of BARCODES (i.e.  X for BARCODE1, Y\
                    \ \n                              for BARCODE2 and Z for BARCODE3)\n\
                    \                                Default value: 1. This option\
                    \ can be set to 'null' to clear the default value. \n\nMIN_MISMATCH_DELTA=String\n\
                    MMD=String                    Minimum difference between the number\
                    \ of mismatches against the best and the second best \n      \
                    \                        barcode. When MMD is not respected, the\
                    \ read remains unassigned.\n                              Either\
                    \ exactly one or multiple values (with format MMD=X:Y:Z). When\
                    \ multiple values are \n                              provided,\
                    \ Je expects exactly one value for each BARCODE (with distinct\
                    \ indices) described \n                              in the barcode\
                    \ file/read layouts.\n                              Values (X,Y,Z)\
                    \ are matched up with the sorted list of BARCODES (i.e.  X for\
                    \ BARCODE1, Y \n                              for BARCODE2 and\
                    \ Z for BARCODE3)\n                                Default value:\
                    \ 1. This option can be set to 'null' to clear the default value.\
                    \ \n\nMIN_BASE_QUALITY=String\nQ=String                      Minimum\
                    \ base quality during barcode matching: bases which quality is\
                    \ less than this \n                              cutoff are always\
                    \ considered as a mismatch.Either exactly one or multiple values\
                    \ (with \n                              format Q=X:Y:Z). When\
                    \ multiple values are provided, Je expects exactly one value for\
                    \ each \n                              BARCODE (with distinct\
                    \ indices) described in the barcode file/read layouts.\n     \
                    \                         Values (X,Y,Z) are matched up with the\
                    \ sorted list of BARCODES (i.e.  X for BARCODE1, Y \n        \
                    \                      for BARCODE2 and Z for BARCODE3)\n    \
                    \                            Default value: 10. This option can\
                    \ be set to 'null' to clear the default value. \n\nSTRICT=Boolean\n\
                    S=Boolean                     When reads have redundant BARCODE\
                    \ slots, this option tells how to handle situation when \n   \
                    \                           the read sequence do not resolve to\
                    \ the same sample.\n                               When true,\
                    \ the read pair is always 'unassigned'.\n                    \
                    \           When false, the read pair is assigned to the sample\
                    \ with the lowest overall mismatch sum\n                     \
                    \           Default value: false. This option can be set to 'null'\
                    \ to clear the default value. \n                             \
                    \ Possible values: {true, false} \n\nFORCE=Boolean           \
                    \      Allows to overwrite existing files (system rights still\
                    \ apply).\n                                Default value: false.\
                    \ This option can be set to 'null' to clear the default value.\
                    \ \n                              Possible values: {true, false}\
                    \ \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                    Compress\
                    \ output files using gzip.\n                                Default\
                    \ value: true. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nCLIP=Boolean                  In absence of output\
                    \ layout, tell if barcode and UMI sequences should be clipped\
                    \ off read \n                              sequence before writing\
                    \ to output file.\n                               If false, reads\
                    \ are written without modification to output file.  Default value:\
                    \ true. \n                              This option can be set\
                    \ to 'null' to clear the default value. Possible values: {true,\
                    \ \n                              false} \n\nADD=Boolean     \
                    \              In absence of output layout, tell if barcode and\
                    \ UMI sequences should be added at the end \n                \
                    \              of the read header.\n                         \
                    \     BARCODE and UMI slots (in this order) are concatenated using\
                    \ the character defined by the \n                            \
                    \  SEP option\n                                Default value:\
                    \ true. This option can be set to 'null' to clear the default\
                    \ value. \n                              Possible values: {true,\
                    \ false} \n\nREAD_NAME_SEPARATOR_CHAR=String\nSEP=String     \
                    \               Separator character used to concatenate barcodes\
                    \ and umis in read header\n                                Default\
                    \ value: :. This option can be set to 'null' to clear the default\
                    \ value. \n\nQUALITY_FORMAT=FastqQualityFormat\nV=FastqQualityFormat\
                    \          A value describing how the quality values are encoded\
                    \ in the fastq files.  Either \n                             \
                    \ 'Solexa' for pre-pipeline 1.3 style scores (solexa scaling +\
                    \ 66), 'Illumina' for pipeline \n                            \
                    \  1.3 and above (phred scaling + 64) or 'Standard' for phred\
                    \ scaled scores with a character \n                          \
                    \    shift of 33.  If this value is not specified (or 'null' is\
                    \ given), the quality format is \n                           \
                    \   assumed to be will the 'Standard' for phred scale.\n     \
                    \                           Default value: null. Possible values:\
                    \ {Solexa, Illumina, Standard} \n\nMETRICS_FILE_NAME=String\n\
                    M=String                      File name where to write demultiplexing\
                    \ statistics. Either a name (in which case the file \n       \
                    \                       will be created in the output dir) or\
                    \ an absolute path.\n                                Default value:\
                    \ jemultiplexer_out_stats.txt. This option can be set to 'null'\
                    \ to clear \n                              the default value.\
                    \ \n\nBARCODE_DIAG_FILE=String\nDIAG=String                  \
                    \ Name for a barcode match reporting file (not generated by default).Either\
                    \ a name (in \n                              which case the file\
                    \ will be created in the output dir) or full path. This file will\
                    \ \n                              contain a line per read set\
                    \ with the barcodes best matching the read subsequences or \n\
                    \                              'null' when no match is found according\
                    \ to matching parameters ; and the final selected \n         \
                    \                     sample. This file is useful for debugging\
                    \ or further processing in case both ends are \n             \
                    \                 barcoded.\n                                Default\
                    \ value: null. \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\nTEST=Boolean\
                    \                  test mode ie code execution stops right before\
                    \ read demultiplexing starts but after \n                    \
                    \          command line validation  Default value: false. This\
                    \ option can be set to 'null' to clear \n                    \
                    \          the default value. Possible values: {true, false} \n\
                    \nFASTQ_FILE_EXTENSION=String   Change the default extension of\
                    \ created fastq files, eg 'fastqsanger'. By default uses \n  \
                    \                            the file extension from input fastq\
                    \ file. If result file names are given in the barcode \n     \
                    \                         file, this option is only used to adapt\
                    \ the unassigned file names. When using \n                   \
                    \           compression, a .gz is always appended to file names\
                    \ and should not be specified in \n                          \
                    \    FASTQ_FILE_EXTENSION i.e. \n                            \
                    \  use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
                    \                                Default value: null. \n\nINPUT_FASTQ_COMPRESSION=Boolean\n\
                    \                              Indicates if the input fastq files\
                    \ are gzipped. Please use this option when file names \n     \
                    \                         are compressed but lack the typical\
                    \ '.gz' extension. \n                                Default value:\
                    \ null. Possible values: {true, false} \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                    ASYNC=Boolean                 Use one thread per Fastq Writer.\n\
                    \                                Default value: true. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false} \n\nUSE_EMBASE=Boolean\n\
                    EM=Boolean                    Enables emBASE mode i.e fetch information\
                    \ from emBASE and place demultiplexed files \n               \
                    \               directly in emBASE repository structure.\n   \
                    \                           This option is mutually exclusive\
                    \ with BARCODE_FILE.\n                              Note : this\
                    \ option forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
                    \ (all \n                              other user options supported).\n\
                    \                                Default value: false. This option\
                    \ can be set to 'null' to clear the default value. \n        \
                    \                      Possible values: {true, false}  Cannot\
                    \ be used in conjuction with option(s) BARCODE_FILE \n       \
                    \                       (BF)\n\n"
                  generated_using: *id004
                - !Command
                  command: &id010
                  - je
                  - markdupes
                  positional:
                  - !Positional
                    description: SPLIT_CHAR=String
                    position: 0
                    name: times.
                    optional: false
                  - !Positional
                    description: COMMENT=String
                    position: 0
                    name: value.
                    optional: false
                  named:
                  - !Flag
                    description: Displays options specific to this tool.
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --stdhelp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Displays options specific to this tool AND options\
                      \ common to all Picard command line\ntools."
                    synonyms:
                    - -H
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Displays program version.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: MarkDuplicatesWithMolecularCode\
                    \ [options]\n\nExamines aligned records in the supplied SAM or\
                    \ BAM file to locate duplicate molecules taking into account molecular\
                    \ barcodes (Unique Molecular Identifiers or UMIs) found in read\
                    \ header. All records are then either written to the output file\
                    \ with the duplicate records flagged or trashed.\nExample :\n\t\
                    \ je markdupes INPUT=file_with_dupes.bam OUTPUT=result.bam MM=1\n\
                    Version: 2.0.RC\n\n\nOptions:\n\n--help\n-h                  \
                    \          Displays options specific to this tool.\n\n--stdhelp\n\
                    -H                            Displays options specific to this\
                    \ tool AND options common to all Picard command line \n      \
                    \                        tools.\n\n--version                 \
                    \    Displays program version.\n\nINPUT=String\nI=String     \
                    \                 One or more input SAM or BAM files to analyze.\
                    \ Must be coordinate sorted.  Default value: \n              \
                    \                null. This option may be specified 0 or more\
                    \ times. \n\nOUTPUT=File\nO=File                        The output\
                    \ file to write marked records to  Required. \n\nMISMATCHES=Integer\n\
                    MM=Integer                    Number of MisMatches (inclusive)\
                    \ to still consider two Unique Molecular Identifiers \n      \
                    \                        (UMIs) identical i.e. this option buffers\
                    \ for sequencing errors.Indeed, in case of a \n              \
                    \                sequencing error, 2 duplicate reads would not\
                    \ be considered duplicates anymore.Note that \n              \
                    \                N are not considered mismatches during comparison\
                    \ ie ATTNGG and NTTANG are seen as the \n                    \
                    \          same barcode and these two reads would be flagged duplicates.This\
                    \ option takes a single \n                              value\
                    \ even when several barcodes are present (see SLOTS). Note that\
                    \ when declaring \n                              several barcodes\
                    \ (see SLOTS) AND providing a predefined set of barcodes (see\
                    \ BC option), \n                              the MM value is\
                    \ applicable in each lookup. When a predefined set of barcodes\
                    \ is NOT \n                              given, the different\
                    \ barcodes (SLOTS) are concatenated first and the MM value is\
                    \ \n                              therefore considered *overall*\
                    \ as the concatenated code is seen as a unique code.\n       \
                    \                       MM=null is like MM=0\n               \
                    \               Use the minimum Hamming distance of the original\
                    \ barcode set (if applicable).  Required. \n\nMAX_NUMBER_OF_N=Integer\n\
                    MAX_N=Integer                 Maximum number of Ns a molecular\
                    \ code can contain (inclusive). Above this value, reads \n   \
                    \                           are placed in a UNDEF group.More precisely,\
                    \ these 'too degenarate' codes will not :\n                  \
                    \            \t * be compared to the list of predefined codes\
                    \ [predefined code list situation ie BC \n                   \
                    \           option given] nor \n                             \
                    \ \t * be considered as a potential independent code [no predefined\
                    \ code list situation ie \n                              BC option\
                    \ not given]\n                              Default value is the\
                    \ MISMATCHES number.\n                               Note that\
                    \ when declaring several barcodes (see SLOTS) AND providing a\
                    \ predefined set of \n                              barcodes (see\
                    \ BC option), the MAX_N value is applicable to each barcode. When\
                    \ a \n                              predefined set of barcodes\
                    \ is NOT given, the different barcodes (SLOTS) are concatenated\
                    \ \n                              first and the MAX_N value is\
                    \ therefore considered *overall*.  Default value: null. \n\nSLOTS=Integer\n\
                    SLOTS=Integer                 Where to find the UMIs (and only\
                    \ the UMIs) in the read name once read name has been \n      \
                    \                        tokenized using the SPLIT character (e.g.\
                    \ ':'). \n                              By default, the UMI is\
                    \ considered to be found at the end of the read header i.e. after\
                    \ \n                              the last ':'. Use this option\
                    \ to indicate other or additional UMI positions (e.g. \n     \
                    \                         multiple UMIs present in read header.\n\
                    \                              IMPORTANT : counting starts at\
                    \ 1 and negative numbers can be used to start counting from \n\
                    \                              the end.\n                    \
                    \          For example, consider the following read name that\
                    \ lists 3 different barcodes in the end \n                   \
                    \           : \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
                    \ \n                              \t to indicate that the three\
                    \ barcodes are molecular codes, use \n                       \
                    \       \t\tSLOTS=-1 SLOTS=-2 SLOTS=-3\n                     \
                    \         \t if only the 2 last ones should be considered (the\
                    \ third one being a sample encoding \n                       \
                    \       barcode), use \n                              \t\tSLOTS=-1\
                    \ SLOTS=-2\t N.B.: UMI usage can be deactivate by explicitely\
                    \ setting SLOTS=null \n                              in the command\
                    \ line\n                                Default value: null. This\
                    \ option may be specified 0 or more times. \n\nBARCODE_FILE=File\n\
                    BC=File                       Pre-defined list of UMIs that can\
                    \ be expected. Format: one column text file, one barcode \n  \
                    \                            per line. All UMIs MUST have the\
                    \ same length.   Default value: null. \n\nMETRICS_FILE=File\n\
                    M=File                        File to write duplication metrics\
                    \ to  Required. \n\nREMOVE_DUPLICATES=Boolean     If true do not\
                    \ write duplicates to the output file instead of writing them\
                    \ with \n                              appropriate flags set.\
                    \  Default value: false. This option can be set to 'null' to clear\
                    \ \n                              the default value. Possible\
                    \ values: {true, false} \n\nASSUME_SORTED=Boolean\nAS=Boolean\
                    \                    If true, assume that the input file is coordinate\
                    \ sorted even if the header says \n                          \
                    \    otherwise. Deprecated, used ASSUME_SORT_ORDER=coordinate\
                    \ instead.  Default value: false. \n                         \
                    \     This option can be set to 'null' to clear the default value.\
                    \ Possible values: {true, \n                              false}\
                    \  Cannot be used in conjuction with option(s) ASSUME_SORT_ORDER\
                    \ (ASO)\n\nTRIM_HEADERS=Boolean\nT=Boolean                   \
                    \  Should barcode information be removed from read names in the\
                    \ output BAM ? This is usefull \n                            \
                    \  to save storage space.\n                                Default\
                    \ value: false. This option can be set to 'null' to clear the\
                    \ default value. \n                              Possible values:\
                    \ {true, false} \n\nTSLOTS=Integer\nTSLOTS=Integer           \
                    \     Where to find *all* barcode(s) (i.e. sample encoding and\
                    \ UMIs) in the read name once has \n                         \
                    \     been tokenized using the SPLIT character (e.g. ':'). \n\
                    \                              This option is only considered\
                    \ when TRIM_HEADERS=true. When TSLOTS is ommited while \n    \
                    \                          TRIM_HEADERS=true, the values of SLOTS\
                    \ apply.\n                              IMPORTANT : counting starts\
                    \ at 1 and negative numbers can be used to start counting from\
                    \ \n                              the end.\n                 \
                    \             See SLOT help for examples.  Default value: null.\
                    \ This option may be specified 0 or more \n                  \
                    \            times. \n\nSPLIT_CHAR=String\nSPLIT=String      \
                    \            Character to use to split up the read header line,\
                    \ default is ':'.  Default value: :. \n                      \
                    \        This option can be set to 'null' to clear the default\
                    \ value. \n\nASSUME_SORT_ORDER=SortOrder\nASO=SortOrder      \
                    \           If not null, assume that the input file has this order\
                    \ even if the header says otherwise.  \n                     \
                    \         Default value: null. Possible values: {unsorted, queryname,\
                    \ coordinate, duplicate, \n                              unknown}\
                    \  Cannot be used in conjuction with option(s) ASSUME_SORTED (AS)\n\
                    \nDUPLICATE_SCORING_STRATEGY=ScoringStrategy\nDS=ScoringStrategy\
                    \            The scoring strategy for choosing the non-duplicate\
                    \ among candidates.  Default value: \n                       \
                    \       SUM_OF_BASE_QUALITIES. This option can be set to 'null'\
                    \ to clear the default value. \n                             \
                    \ Possible values: {SUM_OF_BASE_QUALITIES, TOTAL_MAPPED_REFERENCE_LENGTH,\
                    \ RANDOM} \n\nPROGRAM_RECORD_ID=String\nPG=String            \
                    \         The program record ID for the @PG record(s) created\
                    \ by this program. Set to null to \n                         \
                    \     disable PG record creation.  This string may have a suffix\
                    \ appended to avoid collision \n                             \
                    \ with other program record IDs.  Default value: MarkDuplicates.\
                    \ This option can be set to \n                              'null'\
                    \ to clear the default value. \n\nPROGRAM_GROUP_VERSION=String\n\
                    PG_VERSION=String             Value of VN tag of PG record to\
                    \ be created. If not specified, the version will be \n       \
                    \                       detected automatically.  Default value:\
                    \ null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
                    \             Value of CL tag of PG record to be created. If not\
                    \ supplied the command line will be \n                       \
                    \       detected automatically.  Default value: null. \n\nPROGRAM_GROUP_NAME=String\n\
                    PG_NAME=String                Value of PN tag of PG record to\
                    \ be created.  Default value: \n                             \
                    \ MarkDuplicatesWithMolecularCode. This option can be set to 'null'\
                    \ to clear the default \n                              value.\
                    \ \n\nCOMMENT=String\nCO=String                     Comment(s)\
                    \ to include in the output file's header.  Default value: null.\
                    \ This option may \n                              be specified\
                    \ 0 or more times. \n\nREAD_NAME_REGEX=String        Regular expression\
                    \ that can be used to parse read names in the incoming SAM file.\
                    \ Read \n                              names are parsed to extract\
                    \ three variables: tile/region, x coordinate and y coordinate.\
                    \ \n                              These values are used to estimate\
                    \ the rate of optical duplication in order to give a more \n \
                    \                             accurate estimated library size.\
                    \ Set this option to null to disable optical duplicate \n    \
                    \                          detection, e.g. for RNA-seq or other\
                    \ data where duplicate sets are extremely large and \n       \
                    \                       estimating library complexity is not an\
                    \ aim. Note that without optical duplicate counts, \n        \
                    \                      library size estimation will be inaccurate.\
                    \ The regular expression should contain three \n             \
                    \                 capture groups for the three variables, in order.\
                    \ It must match the entire read name. \n                     \
                    \         Note that if the default regex is specified, a regex\
                    \ match is not actually done, but \n                         \
                    \     instead the read name  is split on colon character. For\
                    \ 5 element names, the 3rd, 4th and \n                       \
                    \       5th elements are assumed to be tile, x and y values. For\
                    \ 7 element names (CASAVA 1.8), \n                           \
                    \   the 5th, 6th, and 7th elements are assumed to be tile, x and\
                    \ y values.  Default value: \n                              <optimized\
                    \ capture of last three ':' separated fields as numeric values>.\
                    \ This option can \n                              be set to 'null'\
                    \ to clear the default value. \n\nOPTICAL_DUPLICATE_PIXEL_DISTANCE=Integer\n\
                    \                              The maximum offset between two\
                    \ duplicate clusters in order to consider them optical \n    \
                    \                          duplicates. The default is appropriate\
                    \ for unpatterned versions of the Illumina platform. \n      \
                    \                        For the patterned flowcell models, 2500\
                    \ is moreappropriate. For other platforms and \n             \
                    \                 models, users should experiment to find what\
                    \ works best.  Default value: 100. This option \n            \
                    \                  can be set to 'null' to clear the default value.\
                    \ \n\nMAX_FILE_HANDLES_FOR_READ_ENDS_MAP=Integer\nMAX_FILE_HANDLES=Integer\
                    \      Maximum number of file handles to keep open when spilling\
                    \ read ends to disk. Set this \n                             \
                    \ number a little lower than the per-process maximum number of\
                    \ file that may be open. This \n                             \
                    \ number can be found by executing the 'ulimit -n' command on\
                    \ a Unix system.  Default \n                              value:\
                    \ 8000. This option can be set to 'null' to clear the default\
                    \ value. \n\nSORTING_COLLECTION_SIZE_RATIO=Double\n          \
                    \                    This number, plus the maximum RAM available\
                    \ to the JVM, determine the memory footprint \n              \
                    \                used by some of the sorting collections.  If\
                    \ you are running out of memory, try reducing \n             \
                    \                 this number.  Default value: 0.25. This option\
                    \ can be set to 'null' to clear the default \n               \
                    \               value. \n\n"
                  generated_using: *id004
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Usage:   je <command> [options] \n\nwith command in :\
                  \ \n\t clip      \t\t clips barcodes/UMIs from fastq sequence and\
                  \ places them in read name headers \n\t debarcode \t\t demultiplexes\
                  \ fastq file(s) into user-defined output files, with optional handling\
                  \ of molecular barcodes\n\t demultiplex \t\t demultiplexes fastq\
                  \ file(s) with Je 1.x implementation, with optional handling of\
                  \ molecular barcodes for further use in 'dupes' module\n\t demultiplex-illu\
                  \ \t demultiplexes fastq file(s) using Illumina Index files with\
                  \ Je 1.x implementation, with optional handling of molecular barcodes\
                  \ for further use in 'dupes' module\n\t markdupes     \t\t removes\
                  \ read duplicates based on molecular barcodes found in read name\
                  \ headers (as produced by clip or plex)\n\t dropseq    \t\t clips\
                  \ cell barcode and UMI from read 1 and adds them to header of read\
                  \ 2. This command is for processing drop-seq results.\n\t retag\
                  \    \t\t extracts barcode and UMI sequence(s) embedded in read\
                  \ names and tag reads with proper BAM tag.\n\nVersion : 2.0.RC\n"
                generated_using: *id004
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jedropseq\
                \ [options]\n\nReformat Drop-seq files into a single fastq file. DROP-seq\
                \ produces 2 fastq files : one (F1) contains the cell barcode (usually\
                \ 12 bp, LEN) followed by a UMI (usually 8bp, ULEN) while the second\
                \ (F2) contains the RNA sequence. The output file is similar to F2\
                \ but holds the parsed barcode and UMI in read names.\nInput fastq\
                \ file(s) can be in gzip compressed format (end in .gz). See help\
                \ for a detailled description of all options.\n\nExample: \n\tje dropseq\
                \ F1=file.fastq.gz F2=file.fastq.gz LEN=12 ULEN=8 O=/path/to/resultdir/out.fastq.gz\n\
                \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                    \
                \        Displays options specific to this tool.\n\n--stdhelp\n-H\
                \                            Displays options specific to this tool\
                \ AND options common to all Picard command line \n               \
                \               tools.\n\n--version                     Displays program\
                \ version.\n\nFASTQ_FILE1=File\nF1=File                       Input\
                \ fastq file (optionally gzipped) for first read. This read contains\
                \ the cell barcode \n                              followed by the\
                \ UMI. Quality encoding must be Phred+33 (Standard).  Required. \n\
                \nFASTQ_FILE2=File\nF2=File                       Input fastq file\
                \ (optionally gzipped) for the second read. Quality encoding must\
                \ be \n                              Phred+33 (Standard).  Required.\
                \ \n\nBCLEN=Integer\nLEN=Integer                   Length of the cell\
                \ barcode sequence in read 1.\n                                Required.\
                \ \n\nWITH_QUALITY_IN_READNAME=Boolean\nWQ=Boolean               \
                \     Should quality string of barcode and UMI also be injected in\
                \ read names.\n                              If true, the quality\
                \ string is translated into 2 digits number and a e.g. UMI will look\
                \ \n                              like\n                         \
                \     \t '...:ATGCAT333423212322:...' instead of '...:ATGCAT:...'\n\
                \                              This option is particularly useful\
                \ with the retag module that knows how to extract \n             \
                \                 quality numbers into BAM tags.  Default value: false.\
                \ This option can be set to 'null' to \n                         \
                \     clear the default value. Possible values: {true, false} \n\n\
                UCLEN=Integer\nULEN=Integer                  Length of the UMI sequence\
                \ in read 1 found right after the cell barcode.\n                \
                \                Required. \n\nMAX_N=Integer\nN=Integer          \
                \           Maximum number of N's in the cell barcode sequence. If\
                \ the cell barcode has this number \n                            \
                \  or more N in the sequence, the read is ignored.\n             \
                \                   Default value: 6. This option can be set to 'null'\
                \ to clear the default value. \n\nREAD_NAME_REPLACE_CHAR=String\n\
                RCHAR=String                  Replace spaces in read name/header using\
                \ provided character.\n                              This is needed\
                \ when you need to retain ADDed barcode in read name/header during\
                \ mapping \n                              as everything after space\
                \ in read name is usually clipped in BAM files.\n                \
                \              For example, with RCHAR=':' :\n                   \
                \           \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 1:N:0:'\n\
                \                              \tbecomes\n                       \
                \       \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'\n\
                \                                Default value: :. This option can\
                \ be set to 'null' to clear the default value. \n\nRESULT_FILENAME_1=String\n\
                O=String                      Result file name with headers modified.\n\
                \                              \n                              Can\
                \ either be a name (in which case the file will be created in the\
                \ output dir) or a full \n                              path.\n  \
                \                              Required. \n\nFORCE=Boolean       \
                \          Allows overwriting existing files.\n                  \
                \              Default value: false. This option can be set to 'null'\
                \ to clear the default value. \n                              Possible\
                \ values: {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean     \
                \               Compress output using gzip and append a .gz extension\
                \ to the result filename if necessary.\n                         \
                \       Default value: true. This option can be set to 'null' to clear\
                \ the default value. \n                              Possible values:\
                \ {true, false} \n\n"
              generated_using: *id004
            - !Command
              command: *id005
              positional:
              - !Positional
                description: 'Required. '
                position: 0
                name: data.
                optional: false
              - !Positional
                description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
                position: 0
                name: Or
                optional: false
              - !Positional
                description: 'the second barcode might be a random barcode (UMI) to
                  tell apart PCR artefacts from real '
                position: 0
                name: while
                optional: false
              - !Positional
                description: 'Another example is when both barcodes should be used
                  in a combined fashion to resolve the '
                position: 1
                name: duplicates.
                optional: false
              - !Positional
                description: In the first example, you should use BPOS=BOTH BRED=false
                  BM=READ_1.
                position: 2
                name: sample.
                optional: false
              - !Positional
                description: 'values can be given here using the syntax MM=X:Z where
                  X and Z are 2 integers to use for '
                position: 0
                name: distinct
                optional: false
              - !Positional
                description: "Default value: Standard. This option can be set to 'null'\
                  \ to clear the default value. "
                position: 0
                name: detected.
                optional: false
              - !Positional
                description: 'N.B: this file will have a size of about one of the
                  fastq input files.  Default value: '
                position: 0
                name: barcoded.
                optional: false
              - !Positional
                description: "FORCE=Boolean                 Allows to overwrite existing\
                  \ files (system rights still apply).\nDefault value: false. This\
                  \ option can be set to 'null' to clear the default value."
                position: 1
                name: null.
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jemultiplexer\
                \ [options]\n\n\tFastq files demultiplexer for in-line barcoded Illumina\
                \ Fastq files.\n\tInput fastq files can be in gzip compressed (end\
                \ in .gz). \n\tBy default output files are gzipped and have names\
                \ following the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]'\
                \ unless you gave file\n\t names to use within the barcode description\
                \ file.\nExample:\n\t je demultiplex F1=fastq_1.txt.gz BF=barcodes.bs\
                \ O=/path/to/jemultiplexer-results/ \nVersion: 2.0.RC\n\n\nOptions:\n\
                \n--help\n-h                            Displays options specific\
                \ to this tool.\n\n--stdhelp\n-H                            Displays\
                \ options specific to this tool AND options common to all Picard command\
                \ line \n                              tools.\n\n--version       \
                \              Displays program version.\n\nFASTQ_FILE1=File\nF1=File\
                \                       Input fastq file (optionally gzipped) for\
                \ single end data, or first read in paired end \n                \
                \              data.\n                                Required. \n\
                \nFASTQ_FILE2=File\nF2=File                       Input fastq file\
                \ (optionally gzipped) for the second read of paired end data.\n \
                \                               Default value: null. \n\nBARCODE_FILE=File\n\
                BF=File                       Barcode file describing sequence list\
                \ and sample names. Tab-delimited file with 2 \n                 \
                \             columns, with the sample in col1 and the corresponding\
                \ barcode in col2.\n                              Simple barcode file\
                \ format : 2 tab-delimited colums\n                              \t\
                If multiple barcode map to the same sample, either line can be duplicated\
                \ e.g.\n                              \t\tsample1\tATAT\n        \
                \                      \t\tsample1\tGAGG\n                       \
                \       \t\tsample2\tCCAA\n                              \t\tsample2\t\
                TGTG\n                              \tOr barcodes can be combined\
                \ using the OR operator '|' i.e. the file above can be \n        \
                \                      re-written like\n                         \
                \      \t\tsample1\tATAT|GAGG\n                              \t\t\
                sample2\tCCAA|TGTG\n                              \tFinally, for the\
                \ special situation of paired-end data in which barcodes differ at\
                \ both \n                              ends (ie BPOS=BOTH BRED=false\
                \ BM=BOTH , see BRED option description), barcodes for read_1 \n \
                \                             and read_2 can be distinguished using\
                \ a ':' separator i.e. \n                              \t\tsample1\t\
                ATAT:GAGG\n                              \t\tsample2\tCCAA:TGTG\n\
                \                              \tThis above syntax means that sample\
                \ 1 is encoded with ATAT barcode at read_1 AND GAGG \n           \
                \                   barcode at read_2. Note that you can still combine\
                \ barcodes using | e.g. \n                              \t\tsample1\t\
                ATAT|GAGG:CCAA|TGTG\n                              \twould mean that\
                \ sample 1 is mapped by the combination of barcode: ATAT OR GAGG at\
                \ read_1 \n                              AND CCAA OR TGTG at read_2.\n\
                \                              Extended barcode file format : 3 (single-end)\
                \ or 4 (paired-end) tab-delimited colums\n                       \
                \       \tsame as the simple barcode file format but the extra columns\
                \ contains the file name(s) \n                              to use\
                \ to name output files. A unique extra column is expected for single-end\
                \ while 2 \n                              extra columns are expected\
                \ for paired-end. In case, lines are duplicated (multiple \n     \
                \                         barcodesmapping the same sample), the same\
                \ file name should be indicated in the third \n                  \
                \            (and fourth) column(s). \n                          \
                \    \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n           \
                \                   \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
                \                              \t\tsample2\tCCAA\tspl2_1.txt.gz\t\
                spl2_2.txt.gz\n                              \tOr\n              \
                \                \t\tsample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz\
                \ \t spl1_2.txt.gz\n                              Ns in barcode sequence\
                \ are allowed and are used to flag positions that should be ignored\
                \ \n                              in sample matching \n          \
                \                    \t i.e. they will be clipped off the read sequence\
                \ (like in iCLIP protocol).  Required.  \n                       \
                \       Cannot be used in conjuction with option(s) USE_EMBASE (EM)\n\
                \nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition         \
                \ For paired-end data, where to expect the barcode(s) :\n        \
                \                      \t * READ_1 (beginning of read from FASTQ_FILE_1),\
                \ \n                               \t * READ_2 (beginning of read\
                \ from FASTQ_FILE_2),\n                              \t * BOTH (beginning\
                \ of both reads).\n                              Automatically set\
                \ to READ_1 in single end mode.\n                                Default\
                \ value: BOTH. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {READ_1,\
                \ READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String               \
                \     Length of the barcode sequences, optional. Taken from barcode\
                \ file when not given.\n                              In situations\
                \ where BARCODE_READ_POS == BOTH AND REDUNDANT_BARCODES=false, two\
                \ distinct \n                              length can be provided\
                \ using the syntax LEN=X:Z where X and Z are 2 integers representing\
                \ \n                              the barcode length for read_1 and\
                \ read_2 respectively.\n                                Default value:\
                \ null. \n\nBARCODE_FOR_SAMPLE_MATCHING=BarcodePosition\nBM=BarcodePosition\
                \            Indicates which barcode(s) should be used for sample\
                \ lookup\n                              Automatically set to READ_1\
                \ in single end mode. \n                              For paired-end\
                \ data and when BARCODE_READ_POS == BOTH, which barcode should be\
                \ used to \n                              resolve sample :\n     \
                \                         \t- use BM=READ_1 (beginning of read from\
                \ FASTQ_FILE_1) if only this read should be used \n              \
                \                for sample matching,\n                          \
                \    \t- use BM=READ_2 (beginning of read from FASTQ_FILE_2) if only\
                \ this read should be used \n                              for sample\
                \ matching,\n                              \t- use BM=BOTH (beginning\
                \ of both reads) if both should be used \n                       \
                \       When BM=BOTH, the behaviour is different based on the value\
                \ of REDUNDANT_BARCODES : \n                              \t\tIf REDUNDANT_BARCODES=true,\
                \ the two barcodes are considered to map to the same sample \n   \
                \                           and 'Je demultiplex' uses the two barcodes\
                \ according to the STRICT value.\n                              \t\
                \tIf REDUNDANT_BARCODES=false, the barcode file should map a couple\
                \ of barcode to each \n                              sample (e.g.\
                \ sample1 => AGAGTG:TTGATA) and 'Je demultiplex' needs both barcodes\
                \ to find \n                              the relevant sample. Note\
                \ that this is the only situation in which all barcode matching \n\
                \                              options (MM, MMD, Q) accept different\
                \ values for both barcodes in the form X:Z where X \n            \
                \                  and Z are 2 integers.\n                       \
                \         Default value: BOTH. This option can be set to 'null' to\
                \ clear the default value. \n                              Possible\
                \ values: {READ_1, READ_2, BOTH, NONE} \n\nREDUNDANT_BARCODES=Boolean\n\
                BRED=Boolean                  This option only applies for paired-end\
                \ data with BARCODE_READ_POS set to 'BOTH'\n                     \
                \         Indicates if both read's barcodes encode redundant information\
                \ or if barcodes are \n                              supposed to be\
                \ identical at both ends (or to resolve to the same sample when a\
                \ pool of \n                              barcodes is used per sample).\n\
                \                               \tWhen REDUNDANT_BARCODES=false, the\
                \ 2 barcodes potentially encode\n                               different\
                \ information. For example, only one of the barcodes encodes the sample\
                \ identity \n                              while \n              \
                \                the second barcode might be a random barcode (UMI)\
                \ to tell apart PCR artefacts from real \n                       \
                \       duplicates.\n                              Another example\
                \ is when both barcodes should be used in a combined fashion to resolve\
                \ the \n                              sample.\n                  \
                \            In the first example, you should use BPOS=BOTH BRED=false\
                \ BM=READ_1.\n                              In the second example,\
                \ you should have BPOS=BOTH BRED=false BM=BOTH. \n               \
                \               Note that with BPOS=BOTH BRED=true BM=BOTH, the behavior\
                \ would be different as \n                              'demultiplex'\
                \ would then check the STRICT option to perform sample resolution.\n\
                \                              Importantly, when BARCODE_READ_POS\
                \ (BPOS) == BOTH AND REDUNDANT_BARCODES=false, BLEN, \n          \
                \                    barcode matching options (MM, MMD, Q) and read\
                \ trimming/clipping options (XT, ZT) accept \n                   \
                \           different values for both barcodes in the form X:Z where\
                \ X and Z are 2 integers.\n                                Default\
                \ value: true. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {true, false}\
                \ \n\nSTRICT=Boolean\nS=Boolean                     For paired-end\
                \ data and when two distinct barcodes/indices are used to encode samples,\n\
                \                               this option tells if both barcodes\
                \ should resolve to the same sample.\n                           \
                \    When true and if only one of the two reads has a barcode match,\
                \ the read pair is \n                              'unassigned'.\n\
                \                               When false and if only one of the\
                \ two reads has a barcode match, the read pair is \n             \
                \                 assigned to the\n                              \
                \ corresponding sample\n                              When reads resolve\
                \ to different samples, the read pair is always 'unassigned'.\n  \
                \                              Default value: false. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nMAX_MISMATCHES=String\n\
                MM=String                     Maximum mismatches for a barcode to\
                \ be considered a match. In situations where both \n             \
                \                 barcodes are used for sample matching i.e. BPOS=BOTH\
                \ BM=BOTH (or 2 INDEX_FILE given), two \n                        \
                \      distinct\n                               values can be given\
                \ here using the syntax MM=X:Z where X and Z are 2 integers to use\
                \ for \n                              read_1 and read_2 respectively.\n\
                \                              MM=null is like MM=0\n            \
                \                    Default value: 1. This option can be set to 'null'\
                \ to clear the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String\
                \                    Minimum difference between the number of mismatches\
                \ against the best and the second best \n                        \
                \      barcode. When MMD is not respected, the read remains unassigned.\n\
                \                              When two distinct barcodes are used\
                \ for sample matching (dual encoding), two distinct \n           \
                \                   values can be given using the syntax MMD=X:Z where\
                \ X and Z are 2 integers to use for \n                           \
                \   first (e.g. from read_1 or index_1)\n                        \
                \      MMD=null is like MMD=0\n                                Default\
                \ value: 1. This option can be set to 'null' to clear the default\
                \ value. \n\nMIN_BASE_QUALITY=String\nQ=String                   \
                \   Minimum base quality during barcode matching: bases which quality\
                \ is less than this \n                              cutoff are always\
                \ considered as a mismatch.When two distinct barcodes are used for\
                \ sample \n                              matching (dual encoding),\
                \ two distinct values can be given using the syntax Q=X:Z where X\
                \ \n                              and Z are 2 integers to use for\
                \ first (e.g. from read_1 or index_1) and second barcode \n      \
                \                        (e.g. from read_2 or index_2) respectively.\n\
                \                              Q=null is like Q=0.\n             \
                \                   Default value: 10. This option can be set to 'null'\
                \ to clear the default value. \n\nXTRIMLEN=String\nXT=String     \
                \                Optional extra number of base to be trimmed right\
                \ after the barcode (only used if \n                             \
                \ CLIP_BARCODE=true). \n                              When running\
                \ paired-end, two distinct values can be given using the syntax XT=X:Z\
                \ where X \n                              and Z are 2 integers to\
                \ use for read_1 and read_2 respectively. Note that even when \n \
                \                             BPOS=READ_1 or BPOS=READ_2, a X:Y synthax\
                \ can be given to trim the read w/o barcode as to \n             \
                \                 end up with reads of the same length (note that\
                \ this can also be operated using ZT). If a \n                   \
                \           unique value is given, e.g. XT=1, while running paired-end\
                \ the following rule applies :\n                               \t\
                (1) BPOS=READ_1 or BPOS=READ_2, no trim is applied at the read w/o\
                \ barcode \n                              \t(2) BPOS=BOTH, the value\
                \ is used for both reads.\n                              Note that\
                \ XT=null is like XT=0.\n                                Default value:\
                \ 0. This option can be set to 'null' to clear the default value.\
                \ \n\nZTRIMLEN=String\nZT=String                     Optional extra\
                \ number of bases to be trimmed from the read end i.e. 3' end.\n \
                \                             When running paired-end, two distinct\
                \ values can be given here using the syntax ZT=X:Z \n            \
                \                  where X and Z are 2 integers to use for read_1\
                \ and read_2 respectively. Note that even \n                     \
                \         when BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given\
                \ to trim the read w/o barcode \n                              as\
                \ to end up with reads of the same length (note that this can also\
                \ be operated using \n                              XT). Note that\
                \ if a single value is passed, the value always applies to both reads\
                \ in \n                              paired-end mode without further\
                \ consideration.\n                              ZT=null is like ZT=0.\n\
                \                                Default value: 0. This option can\
                \ be set to 'null' to clear the default value. \n\nCLIP_BARCODE=Boolean\n\
                C=Boolean                     Clip barcode sequence from read sequence,\
                \ as well as XTRIMLEN (and ZTRIMLEN) bases if \n                 \
                \             applicable, before writing to output file.\n       \
                \                        If false, reads are written without modification\
                \ to output file. \n                              Apply to both barcodes\
                \ when BPOS=BOTH.\n                                Default value:\
                \ true. This option can be set to 'null' to clear the default value.\
                \ \n                              Possible values: {true, false} \n\
                \nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean                   Add\
                \ barcode at the end of the read header. Apply to both barcodes when\
                \ BPOS=BOTH.\n                              \tIf true, the string\
                \ ':barcode' is added at the end of the read header with a ':' added\
                \ \n                              only if current read header does\
                \ not end with ':'.\n                              \tIf both reads\
                \ of the pair have a barcode (i.e. BARCODE_READ_POS == BOTH), thenthe\
                \ second \n                              read also has its own matched\
                \ barcode written. Else, the read without a barcode receives \n  \
                \                            the barcode from the barcoded read.\n\
                \                              \tFor example :\n                 \
                \             \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:'\n\
                \                              \tbecomes\n                       \
                \       \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:BARCODE'\n\
                \                              \n                              \t\
                When barcodes containing random positions, i.e. 'N', (for example\
                \ like \tin the iCLIP \n                              protocol) or\
                \ are UMIs, the added sequence is the sequence clipped from the read\
                \ and NOT \n                              the matched barcode.\n \
                \                               Default value: true. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\n\
                SAME_HEADERS=Boolean          Makes sure that headers of both reads\
                \ of a pair are identical, using the following read \n           \
                \                   header pattern (for both reads of a pair) :\n\
                \                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                \ SAMPLEBARCODE_READ1:SAMPLEBARCODE_READ2(if \n                  \
                \            applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2This\
                \ option only makes sense in \n                              paired\
                \ end mode and ADD=true. Some (if not all) mappers will indeed complain\
                \ when the \n                              read headers are not identical.\
                \ When molecular barcodes are present in reads (either as \n     \
                \                         additional barcodes or as degenerate barcodes\
                \ ie with 'N') and the RCHAR is used, you \n                     \
                \         will end with (problematic) read headers like this :\n \
                \                             \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
                \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
                \                              SAME_HEADERS=true will instead generates\
                \ the following identical header for both reads :\n              \
                \                \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
                \                              \tNote that we also clipped the useless\
                \ '1:N:0' and '3:N:0' has they will also result in \n            \
                \                  generating different headers.\n               \
                \               \t\t Important : this option will force RCHAR=: UNLESS\
                \ you specify RCHAR=null ; in which \n                           \
                \   case a space will be preserved ie : \n                       \
                \       \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994 TAGAACAC:TGGAGTAG:CGTTGTAT\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\n\
                RCHAR=String                  Replace spaces in read name/header using\
                \ provided character. This is particularly handy \n              \
                \                when you need to retain\t ADDed barcode in read name/header\
                \ during mapping (everything \n                              after\
                \ space in read name is usually clipped in BAM files).\tFor example,\
                \ with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                \ 2:N:0:'\n                              \tbecomes\n             \
                \                 \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
                \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
                V=FastqQualityFormat          A value describing how the quality values\
                \ are encoded in the fastq.  Either 'Solexa' for \n              \
                \                pre-pipeline 1.3 style scores (solexa scaling + 66),\
                \ 'Illumina' for pipeline 1.3 and \n                             \
                \ above (phred scaling + 64) or 'Standard' for phred scaled scores\
                \ with a character shift \n                              of 33.  If\
                \ this value is not specified (or 'null' is given), the quality format\
                \ will be \n                              detected.\n            \
                \                    Default value: Standard. This option can be set\
                \ to 'null' to clear the default value. \n                       \
                \       Possible values: {Solexa, Illumina, Standard} \n\nOUTPUT_DIR=File\n\
                O=File                        Output directory. By default, output\
                \ files are written in running directory.\n                      \
                \          Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
                UN=Boolean                    Should un-assigned reads be saved in\
                \ files or simply ignored. File names are \n                     \
                \         automatically created or can be given using UF1 & UF2 options.\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\n\
                UF1=String                    Name of the file in which to write unassigned\
                \ reads from FILE1.Either a name (in which \n                    \
                \          case the file will be created in the output dir) or full\
                \ path.\n                                Default value: unassigned_1.txt.\
                \ This option can be set to 'null' to clear the default \n       \
                \                       value. \n\nUNASSIGNED_FILE_NAME_2=String\n\
                UF2=String                    Name of the file in which to write unassigned\
                \ reads from FILE2.Either a name (in which \n                    \
                \          case the file will be created in the output dir) or full\
                \ path.\n                                Default value: unassigned_2.txt.\
                \ This option can be set to 'null' to clear the default \n       \
                \                       value. \n\nMETRICS_FILE_NAME=String\nM=String\
                \                      File name where to write demultiplexing statistics.\
                \ Either a name (in which case the file \n                       \
                \       will be created in the output dir) or an absolute path.\n\
                \                                Default value: jemultiplexer_out_stats.txt.\
                \ This option can be set to 'null' to clear \n                   \
                \           the default value. \n\nBARCODE_DIAG_FILE=String\nDIAG=String\
                \                   Name for a barcode match reporting file (not generated\
                \ by default).Either a name (in \n                              which\
                \ case the file will be created in the output dir) or full path. This\
                \ file will \n                              contain a line per read\
                \ pair with the barcode best matching the read subsequence or \n \
                \                             'null' when no match is found according\
                \ to matching parameters ; and the final selected \n             \
                \                 sample. This file is useful for debugging or further\
                \ processing in case both ends are \n                            \
                \  barcoded.\n                              N.B: this file will have\
                \ a size of about one of the fastq input files.  Default value: \n\
                \                              null. \n\nFORCE=Boolean           \
                \      Allows to overwrite existing files (system rights still apply).\n\
                \                                Default value: false. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
                GZ=Boolean                    Compress output files using gzip.\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
                \   Change the default extension of created fastq files, eg 'fastqsanger'.\
                \ By default uses \n                              the file extension\
                \ from input fastq file. If result file names are given in the barcode\
                \ \n                              file, this option is only used to\
                \ adapt the unassigned file names. When using \n                 \
                \             compression, a .gz is always appended to file names\
                \ and should not be specified in \n                              FASTQ_FILE_EXTENSION\
                \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq\
                \ and NOT FASTQ_FILE_EXTENSION=fastq.gz\n                        \
                \        Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                ASYNC=Boolean                 Use one thread per Fastq Writer.\n \
                \                               Default value: true. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nSTATS_ONLY=Boolean\
                \            Only produces metric and diagnostic reports i.e. no output\
                \ fastq file produced.\n                                Default value:\
                \ false. This option can be set to 'null' to clear the default value.\
                \ \n                              Possible values: {true, false} \n\
                \nUSE_EMBASE=Boolean\nEM=Boolean                    Enables emBASE\
                \ mode i.e fetch information from emBASE and place demultiplexed files\
                \ \n                              directly in emBASE repository structure.\n\
                \                              This option is mutually exclusive with\
                \ BARCODE_FILE.\n                              Note : this option\
                \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
                \ (all \n                              other user options supported).\n\
                \                                Default value: false. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false}  Cannot be used\
                \ in conjuction with option(s) BARCODE_FILE \n                   \
                \           (BF)\n\n"
              generated_using: *id004
            - !Command
              command: *id006
              positional:
              - !Positional
                description: ''
                position: 0
                name: Jeclipper
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jeclipper\
                \ [options]\n\nReads records in the supplied FASTQ file(s) according\
                \ to specified read layouts (RL option) and write output FASTQ file(s)\
                \ according to supplied output layouts (OL option).\n\nVersion: 2.0.RC\n\
                \n\nOptions:\n\n--help\n-h                            Displays options\
                \ specific to this tool.\n\n--stdhelp\n-H                        \
                \    Displays options specific to this tool AND options common to\
                \ all Picard command line \n                              tools.\n\
                \n--version                     Displays program version.\n\nFASTQ=File\n\
                F=File                        Input fastq file (optionally gzipped)\
                \  Default value: null. This option must be specified \n         \
                \                     at least 1 times. \n\nREAD_LAYOUT=String\nRL=String\
                \                     Describes the read layout(s) e.g. 'RL=<BARCODE1:6><SAMPLE:x>'\
                \ of input fastq file(s). The \n                              input\
                \ fastq files and read layouts are mached up by order on the command\
                \ line.\n                              Read layouts are only needed\
                \ for complex layouts but one must provide read layouts for \n   \
                \                           ALL or NONE of the input fastq files.\n\
                \                              Read layouts are made of <UMIn:X>,\
                \ <BARCODEn:X>, <SAMPLEn:X> blocks to describe blocks of \n      \
                \                        type UMI, BARCODE or SAMPLE with : \n   \
                \                               * 'n' the unique block index (an index\
                \ must be unique across all read layouts for \n                  \
                \            each index or each block type), use the same index to\
                \ specify redundant blocks e.g. use \n                           \
                \   <BARCODE1:6> in two different layouts to specify that the barcode\
                \ found in both reads are \n                              the same\n\
                \                                 * 'X' : either a number indicating\
                \ the length of the UMI, BARCODE or SAMPLE block or a \n         \
                \                     negative number e.g. -2 to specify the last\
                \ 2 bases should be ignored/clipped) or the \n                   \
                \           letter 'x' to specify to take the sequence till the end\
                \ of read. Importantly, the 'x' or \n                            \
                \  negative length shotcut can only be used in the last block of a\
                \ read layout (i.e. \n                              <BARCODE1:x><SAMPLE1:20>\
                \ is not allowed)\n                              \n              \
                \                  Default value: null. This option may be specified\
                \ 0 or more times. \n\nOUTPUT_LAYOUT=String\nOL=String           \
                \          Describes the output file layout(s) using the slots defined\
                \ in read layouts and ':' to \n                              delimitate\
                \ three parts e.g. 'OL=1::' : \n                              \t1.The\
                \ number in the first part (i.e. from '1:' above) is the output file\
                \ index and it \n                              must be unique across\
                \ all 'OL' inputs. Inferred from order in comamnd line when not given\n\
                \                              \t2.The second part (i.e. '' above)\
                \ is the read header layout ; when writing multiple UMI \n       \
                \                       and BARCODE slots in output read headers,\
                \ these are always separated with the RCHAR (':' \n              \
                \                by defaults).\n                              \t3.The\
                \ third part (i.e. '' above) is the read sequence layout.\n      \
                \                          Default value: null. This option may be\
                \ specified 0 or more times. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
                WQ=Boolean                    Should quality string also be injected\
                \ in read names. Only applies to READBAR and UMI \n              \
                \                described in the read name slot of output layout\
                \ \n                              If turned on, the quality string\
                \ is translated into 2 digits number and a e.g. UMI will \n      \
                \                        look like\n                             \
                \ \t '...:ATGCAT333423212322:...' instead of '...:ATGCAT:...'\n  \
                \                            This option is particularly useful with\
                \ the retag module that knows how to extract \n                  \
                \            quality numbers into BAM tags.  Default value: false.\
                \ This option can be set to 'null' to \n                         \
                \     clear the default value. Possible values: {true, false} \n\n\
                ADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\nOWID=Boolean          \
                \        Should the output layout number (output layout first slot)\
                \ be injected in the filename ?\n                              Only\
                \ used in absence of explicit file names in the barcode file.\n  \
                \                              Default value: true. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
                OWHL=Boolean                  Should the output layout used for the\
                \ read name (output layout second slot,in short \n               \
                \               format) be injected in the filename ? When true, each\
                \ ouput file name contains e.g. \n                              '_B1U1'\
                \ for OL='1::'  \n                              Only used in absence\
                \ of explicit file names in the barcode file.\n                  \
                \              Default value: false. This option can be set to 'null'\
                \ to clear the default value. \n                              Possible\
                \ values: {true, false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
                OWSL=Boolean                  Should the output layout used for the\
                \ read sequence (output layout third slot, in short \n           \
                \                   format) be injected in the filename ?When true,\
                \ each ouput file name contains e.g. '_S1' \n                    \
                \          for OL='1::'  \n                              Only used\
                \ in absence of explicit file names in the barcode file.\n       \
                \                         Default value: false. This option can be\
                \ set to 'null' to clear the default value. \n                   \
                \           Possible values: {true, false} \n\nOUTPUT_DIR=File\nO=File\
                \                        Output directory. By default, output files\
                \ are written in running directory.\n                            \
                \    Default value: null. \n\nFORCE=Boolean                 Allows\
                \ to overwrite existing files (system rights still apply).\n     \
                \                           Default value: false. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
                GZ=Boolean                    Compress output files using gzip.\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nREAD_NAME_SEPARATOR_CHAR=String\n\
                SEP=String                    Separator character used to concatenate\
                \ barcodes and umis in read header\n                             \
                \   Default value: :. This option can be set to 'null' to clear the\
                \ default value. \n\nQUALITY_FORMAT=FastqQualityFormat\nV=FastqQualityFormat\
                \          A value describing how the quality values are encoded in\
                \ the fastq files.  Either \n                              'Solexa'\
                \ for pre-pipeline 1.3 style scores (solexa scaling + 66), 'Illumina'\
                \ for pipeline \n                              1.3 and above (phred\
                \ scaling + 64) or 'Standard' for phred scaled scores with a character\
                \ \n                              shift of 33.  If this value is not\
                \ specified (or 'null' is given), the quality format is \n       \
                \                       assumed to be will the 'Standard' for phred\
                \ scale.\n                                Default value: null. Possible\
                \ values: {Solexa, Illumina, Standard} \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\n\
                TEST=Boolean                  test mode ie code execution stops right\
                \ before read demultiplexing starts btu after \n                 \
                \             comamnd line validation  Default value: false. This\
                \ option can be set to 'null' to clear \n                        \
                \      the default value. Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
                \   Change the default extension of created fastq files, eg 'fastqsanger'.\
                \ By default uses \n                              the file extension\
                \ from input fastq file. If result file names are given in the barcode\
                \ \n                              file, this option is only used to\
                \ adapt the unassigned file names. When using \n                 \
                \             compression, a .gz is always appended to file names\
                \ and should not be specified in \n                              FASTQ_FILE_EXTENSION\
                \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq\
                \ and NOT FASTQ_FILE_EXTENSION=fastq.gz\n                        \
                \        Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                ASYNC=Boolean                 Use one thread per Fastq Writer.\n \
                \                               Default value: true. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\n"
              generated_using: *id004
            - !Command
              command: *id007
              positional:
              - !Positional
                description: 'Counting starts at 1 and negative numbers can be used
                  to start counting from the end '
                position: 0
                name: header.
                optional: false
              - !Positional
                description: "a hyphen ('-'). The order of concatenation follows the\
                  \ order of UMI_SLOT in the command "
                position: 0
                name: using
                optional: false
              - !Positional
                description: 'For example, consider the following read name that lists
                  3 different sequence codes in '
                position: 1
                name: line.
                optional: false
              - !Positional
                description: 'ACTCTAC,TCTGTAC,ACTGTAG  '
                position: 0
                name: ACTGTAC
                optional: false
              - !Positional
                description: 'RGPG=String                   Read Group program group;
                  only considered when RG=true  Default value: null. '
                position: 0
                name: null.
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: TagFromReadName\
                \ [options]\n\nExtracts barcode and UMI sequence(s) embedded in read\
                \ names and tag reads with proper BAM tag.\nVersion: 2.0.RC\n\n\n\
                Options:\n\n--help\n-h                            Displays options\
                \ specific to this tool.\n\n--stdhelp\n-H                        \
                \    Displays options specific to this tool AND options common to\
                \ all Picard command line \n                              tools.\n\
                \n--version                     Displays program version.\n\nINPUT=File\n\
                I=File                        Input SAM/BAM file  Required. \n\nOUTPUT=File\n\
                O=File                        Output SAM/BAM file  Required. \n\n\
                BC_SLOT=Integer               Where to find the BARCODE(s) in the\
                \ read name once read name has been tokenized using the \n       \
                \                       SPLIT character (e.g. ':'). \n           \
                \                   This option can be specified multiple time when\
                \ multiple BARCODES are present in read \n                       \
                \       header.\n                              Counting starts at\
                \ 1 and negative numbers can be used to start counting from the end\
                \ \n                              (last token is '-1').\n        \
                \                      BARCODE(s) extracted from read name are used\
                \ to assemble a 'BC:Z:GATCCTAG' tag (BC is \n                    \
                \          default, see BC_TAG). \n                              Following\
                \ SAM specifications, in the case of multiple barcodes, all the barcodes\
                \ are \n                              concatenated using \n      \
                \                        a hyphen ('-') between the barcodes. The\
                \ order of concatenation follows the order of \n                 \
                \             BC_SLOT in the command line.\n                     \
                \         For example, consider the following read name that lists\
                \ 3 different barcodes in the end \n                             \
                \ : \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
                \ \n                              \t to indicate that the three slots\
                \ contain barcodes, use \n                              \t\t BC_SLOT=-1\
                \ BC_SLOT=-2 BC_SLOT=-3 ; which will result as BC:Z:AAGGTACG-GATCCTAG-CGATGTTT\n\
                \                              \t if only the 2 last ones should be\
                \ considered, use \n                              \t\t BC_SLOT=-1\
                \ BC_SLOT=-2 ; which will result as BC:Z:AAGGTACG-GATCCTAG\t Note\
                \ that BC_SLOT \n                              order matters as :\
                \ \n                              \t\t BC_SLOT=-2 BC_SLOT=-1 ; would\
                \ result as BC:Z:GATCCTAG-AAGGTACG  Default value: null. \n      \
                \                        This option may be specified 0 or more times.\
                \ \n\nUMI_SLOT=Integer              Where to find the UMI(s) in the\
                \ read name once read name has been tokenized using the \n       \
                \                       SPLIT character (e.g. ':'). \n           \
                \                   This option can be specified multiple time when\
                \ multiple UMIs are present in read header.\n                    \
                \          Counting starts at 1 and negative numbers can be used to\
                \ start counting from the end \n                              (last\
                \ token is '-1').\n                              UMI(s) extracted\
                \ from read name are used to assemble both a RX and OX tag e.g. \n\
                \                              'RX:Z:GATCCTAG' tag. \n           \
                \                   Following SAM specifications, in the case of multiple\
                \ UMIs, all the UMIs are concatenated \n                         \
                \     using \n                              a hyphen ('-'). The order\
                \ of concatenation follows the order of UMI_SLOT in the command \n\
                \                              line.\n                           \
                \   For example, consider the following read name that lists 3 different\
                \ sequence codes in \n                              the end : \n \
                \                             \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
                \ \n                              \t to indicate that the 2 last slots\
                \ contain UMIs, use \n                              \t\t UMI_SLOT=-1\
                \ UMI_SLOT=-2 ; which will result as RX:Z:AAGGTACG-GATCCTAG\t Note\
                \ that \n                              UMI_SLOT order matters as :\
                \ \n                              \t\t UMI_SLOT=-2 UMI_SLOT=-1 ; would\
                \ result as RX:Z:GATCCTAG-AAGGTACG  Default value: null. \n      \
                \                        This option may be specified 0 or more times.\
                \ \n\nCLUSTERED_CODES_FILE=File\nCC=File                       Group\
                \ of barcodes (clusters) for on-the-fly correction of the BARCODEs.\
                \ This file \n                              contains mapping between\
                \ the barcodes sequences\n                              as originally\
                \ found in the FASTQ reads (and in the read name of the input BAM)\
                \ and the \n                              corrected sample barcode\n\
                \                              sequences (e.g. as identified by clustering\
                \ with mismatches using tools like starcode or \n                \
                \              vsearch ) \n                              that should\
                \ be written in the BC tag in place of the original sequence.\n  \
                \                            If provided, the BARCODE sequence(s)\
                \ extracted from read name are converted to the 'real' \n        \
                \                      barcodes according\n                      \
                \        to the mapping described in this file. If the sequence is\
                \ not found in the supplied \n                              mapping\
                \ file, the read is either\n                              trashed\
                \ or kept (according to option KEEP_UNASSIGNED_BARCODES), in which\
                \ case the value \n                              defined by UNASSIGNED_BARCODE_VALUE\n\
                \                              is used.\n                        \
                \      Format: two column text file, one cluster per line with the\
                \ real barcode in the first \n                              line and\
                \ the comma separated\n                              list of codes\
                \ in the second column i.e. :\n                              \t\t\
                \ ACTGTAC \tACTCTAC,TCTGTAC,ACTGTAG  \n                          \
                \    All the codes MUST have the same length  Default value: null.\
                \ \n\nKEEP_UNASSIGNED_BARCODES=Boolean\nKUP=Boolean              \
                \     Should read be keep when no mapping was defined for the orginal\
                \ barcode sequence in \n                              provided CLUSTERED_CODES_FILE.\n\
                \                              If false, the read is not written in\
                \ output file.  Default value: true. This option can \n          \
                \                    be set to 'null' to clear the default value.\
                \ Possible values: {true, false} \n\nUNASSIGNED_BARCODE_VALUE=String\n\
                UBV=String                    Value to use for the BARCODE tag when\
                \ CLUSTERED_CODES_FILE was provided and no mapping \n            \
                \                  was defined for the orginal barcode sequence. \
                \ Default value: NA. This option can be set \n                   \
                \           to 'null' to clear the default value. \n\nTRIM_HEADERS=Boolean\n\
                T=Boolean                     Should barcode/UMIs information be removed\
                \ from read names in the output BAM ?   Default \n               \
                \               value: false. This option can be set to 'null' to\
                \ clear the default value. Possible \n                           \
                \   values: {true, false} \n\nTSLOTS=Integer\nTSLOTS=Integer     \
                \           Where to find *all* barcode(s) and UMIs in the read name\
                \ once has been tokenized using \n                              the\
                \ SPLIT character (e.g. ':'). \n                              This\
                \ option is only considered when TRIM_HEADERS=true and should only\
                \ be used when \n                              UMI_SLOT and BC_SLOT\
                \ do not\n                              describe all the slots that\
                \ should be trimmed. When TSLOTS is ommited while \n             \
                \                 TRIM_HEADERS=true, the values\n                \
                \              of UMI_SLOT and BC_SLOT apply.\n                  \
                \            IMPORTANT : counting starts at 1 and negative numbers\
                \ can be used to start counting from \n                          \
                \    the end.\n                              See UMI_SLOT help for\
                \ examples.  Default value: null. This option may be specified 0 or\
                \ \n                              more times. \n\nSPLIT_CHAR=String\n\
                SPLIT=String                  Character to use to split up the read\
                \ header line, default is ':'.  Default value: :. \n             \
                \                 This option can be set to 'null' to clear the default\
                \ value. \n\nBC_TAG=String                 SAM Tag to use to store\
                \ barcode(s) sequences extracted from barcode slots (BC by \n    \
                \                          default). Do not change unless you have\
                \ good reasons to.  Default value: BC. This option \n            \
                \                  can be set to 'null' to clear the default value.\
                \ \n\nQT_TAG=String                 SAM Tag to use to store barcode(s)\
                \ quality score extracted from barcode slots (QT by \n           \
                \                   default). Do not change unless you have good reasons\
                \ to.  Default value: QT. This option \n                         \
                \     can be set to 'null' to clear the default value. \n\nWITH_RX=Boolean\
                \               Should the RX (and QX when relevant) SAM Tag(s) be\
                \ used to store UMI(s) sequence (and \n                          \
                \    quality) extracted from UMI slots. Set to FALSE if you don't\
                \ want these tags to be set.   \n                              Default\
                \ value: true. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {true, false}\
                \ \n\nWITH_OX=Boolean               Should the OX (and BZ when relevant)\
                \ SAM Tag(s) be used to store UMI(s) sequence (and \n            \
                \                  quality) extracted from UMI slots. Set to FALSE\
                \ if you don't want these tags to be set.   \n                   \
                \           Default value: true. This option can be set to 'null'\
                \ to clear the default value. \n                              Possible\
                \ values: {true, false} \n\nUMI_SEQ_TAG=String            SAM Tag\
                \ to use to store original UMI(s) sequence extracted from UMI slots\
                \ (instead of RX \n                              / OX)  Default value:\
                \ null. \n\nUMI_QUAL_TAG=String           SAM Tag to use to store\
                \ original UMI(s) sequence extracted from UMI slots (instead of QX\
                \ \n                              / BZ)  Default value: null. \n\n\
                ADD_RG=Boolean\nARG=Boolean                   Should a read group\
                \ be created for each barcode. This option is only considered when\
                \ \n                              providing a CLUSTERED_CODES_FILE.\
                \  Default value: false. This option can be set to 'null' \n     \
                \                         to clear the default value. Possible values:\
                \ {true, false} \n\nRGPL=String                   Read Group platform\
                \ (e.g. illumina, solid) ; only considered when RG=true  Default value:\
                \ \n                              null. \n\nRGPG=String          \
                \         Read Group program group; only considered when RG=true \
                \ Default value: null. \n\nPROGRAM_RECORD_ID=String\nPG=String   \
                \                  The program record ID for the @PG record(s) created\
                \ by this program. Set to null to \n                             \
                \ disable PG record creation.  This string may have a suffix appended\
                \ to avoid collision \n                              with other program\
                \ record IDs.  Default value: TagFromReadName. This option can be\
                \ set to \n                              'null' to clear the default\
                \ value. \n\nPROGRAM_GROUP_VERSION=String\nPG_VERSION=String     \
                \        Value of VN tag of PG record to be created. If not specified,\
                \ the version will be \n                              detected automatically.\
                \  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
                \             Value of CL tag of PG record to be created. If not supplied\
                \ the command line will be \n                              detected\
                \ automatically.  Default value: null. \n\nPROGRAM_GROUP_NAME=String\n\
                PG_NAME=String                Value of PN tag of PG record to be created.\
                \  Default value: TagFromReadName. This option \n                \
                \              can be set to 'null' to clear the default value. \n\
                \nCOMMENT=String\nCO=String                     Comment(s) to include\
                \ in the output file's header.  Default value: null. This option may\
                \ \n                              be specified 0 or more times. \n\
                \n"
              generated_using: *id004
            - !Command
              command: *id008
              positional:
              - !Positional
                description: 'Required. '
                position: 0
                name: data.
                optional: false
              - !Positional
                description: INDEX_FILE2=File
                position: 0
                name: Required.
                optional: false
              - !Positional
                description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
                position: 0
                name: Or
                optional: false
              - !Positional
                description: 'Indicates if both index barcodes encode redundant information
                  i.e. if both barcodes are '
                position: 0
                name: provided.
                optional: false
              - !Positional
                description: 'values can be given here using the syntax MM=X:Z where
                  X and Z are 2 integers to use for '
                position: 0
                name: distinct
                optional: false
              - !Positional
                description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'"
                position: 0
                name: becomes
                optional: false
              - !Positional
                description: "Default value: Standard. This option can be set to 'null'\
                  \ to clear the default value. "
                position: 0
                name: detected.
                optional: false
              - !Positional
                description: 'N.B: this file will have a size of about one of the
                  fastq input files.  Default value: '
                position: 0
                name: barcoded.
                optional: false
              - !Positional
                description: "FORCE=Boolean                 Allows to overwrite existing\
                  \ files (system rights still apply).\nDefault value: false. This\
                  \ option can be set to 'null' to clear the default value."
                position: 1
                name: null.
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: JemultiplexerIllumina\
                \ [options]\n\n\tFastq files demultiplexer for Illumina Fastq files\
                \ using Illumina Index files.\n\tFastq files (reads and index) can\
                \ be in gzip compressed (end in .gz). \n\tBy default output files\
                \ are gzipped and have names following the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]'\
                \ unless you gave file\n\t names to use within the barcode description\
                \ file.\nExample : \n\t je demultiplex-illu F1=fastq_1.txt.gz I1=index_1.txt.gz\
                \ BF=barcodes.bs O=~/Desktop/test-jemultiplexer2/ \nVersion: 2.0.RC\n\
                \n\nOptions:\n\n--help\n-h                            Displays options\
                \ specific to this tool.\n\n--stdhelp\n-H                        \
                \    Displays options specific to this tool AND options common to\
                \ all Picard command line \n                              tools.\n\
                \n--version                     Displays program version.\n\nFASTQ_FILE1=File\n\
                F1=File                       Input fastq file (optionally gzipped)\
                \ for single end data, or first read in paired end \n            \
                \                  data.\n                                Required.\
                \ \n\nFASTQ_FILE2=File\nF2=File                       Input fastq\
                \ file (optionally gzipped) for the second read of paired end data.\n\
                \                                Default value: null. \n\nINDEX_FILE1=File\n\
                I1=File                       Fastq file for index 1 (barcode) reads,\
                \ optionally gzipped.\n                                Required. \n\
                \nINDEX_FILE2=File\nI2=File                       Fastq file for index\
                \ 2 (barcode) reads, optionally gzipped.\n                       \
                \       A INDEX_FILE1 MUST be provided when INDEX_FILE2 is given.\
                \ This situation corresponds to \n                              Illumina\
                \ dual indexing.\n                                Default value: null.\
                \ \n\nBARCODE_FILE=File\nBF=File                       Barcode file\
                \ describing sequence list and sample names. Tab-delimited file with\
                \ 2 \n                              columns, with the sample in col1\
                \ and the corresponding barcode in col2.\n                       \
                \       Simple barcode file format : 2 tab-delimited colums\n    \
                \                          \tIf multiple barcode map to the same sample,\
                \ either line can be duplicated e.g.\n                           \
                \   \t\tsample1\tATAT\n                              \t\tsample1\t\
                GAGG\n                              \t\tsample2\tCCAA\n          \
                \                    \t\tsample2\tTGTG\n                         \
                \     \tOr barcodes can be combined using the OR operator '|' i.e.\
                \ the file above can be \n                              re-written\
                \ like\n                               \t\tsample1\tATAT|GAGG\n  \
                \                            \t\tsample2\tCCAA|TGTG\n            \
                \                  \tFinally, for the special situation of paired-end\
                \ data in which barcodes differ at both \n                       \
                \       ends (ie BPOS=BOTH BRED=false BM=BOTH , see BRED option description),\
                \ barcodes for read_1 \n                              and read_2 can\
                \ be distinguished using a ':' separator i.e. \n                 \
                \             \t\tsample1\tATAT:GAGG\n                           \
                \   \t\tsample2\tCCAA:TGTG\n                              \tThis above\
                \ syntax means that sample 1 is encoded with ATAT barcode at read_1\
                \ AND GAGG \n                              barcode at read_2. Note\
                \ that you can still combine barcodes using | e.g. \n            \
                \                  \t\tsample1\tATAT|GAGG:CCAA|TGTG\n            \
                \                  \twould mean that sample 1 is mapped by the combination\
                \ of barcode: ATAT OR GAGG at read_1 \n                          \
                \    AND CCAA OR TGTG at read_2.\n                              Extended\
                \ barcode file format : 3 (single-end) or 4 (paired-end) tab-delimited\
                \ colums\n                              \tsame as the simple barcode\
                \ file format but the extra columns contains the file name(s) \n \
                \                             to use to name output files. A unique\
                \ extra column is expected for single-end while 2 \n             \
                \                 extra columns are expected for paired-end. In case,\
                \ lines are duplicated (multiple \n                              barcodesmapping\
                \ the same sample), the same file name should be indicated in the\
                \ third \n                              (and fourth) column(s). \n\
                \                              \t\tsample1\tATAT\tspl1_1.txt.gz\t\
                spl1_2.txt.gz\n                              \t\tsample1\tGAGG\tspl1_1.txt.gz\t\
                spl1_2.txt.gz\n                              \t\tsample2\tCCAA\tspl2_1.txt.gz\t\
                spl2_2.txt.gz\n                              \tOr\n              \
                \                \t\tsample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz\
                \ \t spl1_2.txt.gz\n                              Ns in barcode sequence\
                \ are allowed and are used to flag positions that should be ignored\
                \ \n                              in sample matching \n          \
                \                    \t i.e. they will be clipped off the read sequence\
                \ (like in iCLIP protocol).  Required.  \n                       \
                \       Cannot be used in conjuction with option(s) USE_EMBASE (EM)\n\
                \nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition         \
                \ Indicates the location of additional barcodes present in the read(s).\
                \ Setting this option \n                              implies setting\
                \ the LEN option.\n                              \tImportantly, these\
                \ additional barcodes must not encode sample identity information\
                \ but \n                              used for \n                \
                \              \te.g. molecular barcoding (UMIs) or for any purpose\
                \ other than sample identity encoding.  \n                       \
                \       Default value: BOTH. This option can be set to 'null' to clear\
                \ the default value. \n                              Possible values:\
                \ {READ_1, READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String      \
                \              Length of the additional barcodes present in the read(s)\
                \ as indicated by the BPOS option. \n                            \
                \  Two distinct length can be provided using the syntax LEN=X:Z where\
                \ X and Z are 2 integers \n                              representing\
                \ the barcode length for read_1 and read_2 respectively.\n       \
                \                       Only relevant when BPOS != NONE.  Default\
                \ value: null. \n\nREDUNDANT_BARCODES=Boolean\nBRED=Boolean      \
                \            This option only applies for paired-end data with *both*\
                \ INDEX_FILE1 and INDEX_FILE2 \n                              provided.\n\
                \                              Indicates if both index barcodes encode\
                \ redundant information i.e. if both barcodes are \n             \
                \                 supposed to be identical (or resolve to the same\
                \ sample when a pool of barcodes is used \n                      \
                \        per sample).\n                               \tWhen BRED=true,\
                \ the STRICT option guides the sample lookup behavior\tWhen BRED=false,\
                \ \n                              barcodes are combined prior to sample\
                \ lookup.\n                                Default value: true. This\
                \ option can be set to 'null' to clear the default value. \n     \
                \                         Possible values: {true, false} \n\nSTRICT=Boolean\n\
                S=Boolean                     For paired-end data and when two distinct\
                \ barcodes/indices are used to encode samples,\n                 \
                \              this option tells if both barcodes should resolve to\
                \ the same sample.\n                               When true and if\
                \ only one of the two reads has a barcode match, the read pair is\
                \ \n                              'unassigned'.\n                \
                \               When false and if only one of the two reads has a\
                \ barcode match, the read pair is \n                             \
                \ assigned to the\n                               corresponding sample\n\
                \                              When reads resolve to different samples,\
                \ the read pair is always 'unassigned'.\n                        \
                \        Default value: false. This option can be set to 'null' to\
                \ clear the default value. \n                              Possible\
                \ values: {true, false} \n\nMAX_MISMATCHES=String\nMM=String     \
                \                Maximum mismatches for a barcode to be considered\
                \ a match. In situations where both \n                           \
                \   barcodes are used for sample matching i.e. BPOS=BOTH BM=BOTH (or\
                \ 2 INDEX_FILE given), two \n                              distinct\n\
                \                               values can be given here using the\
                \ syntax MM=X:Z where X and Z are 2 integers to use for \n       \
                \                       read_1 and read_2 respectively.\n        \
                \                      MM=null is like MM=0\n                    \
                \            Default value: 1. This option can be set to 'null' to\
                \ clear the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String\
                \                    Minimum difference between the number of mismatches\
                \ against the best and the second best \n                        \
                \      barcode. When MMD is not respected, the read remains unassigned.\n\
                \                              When two distinct barcodes are used\
                \ for sample matching (dual encoding), two distinct \n           \
                \                   values can be given using the syntax MMD=X:Z where\
                \ X and Z are 2 integers to use for \n                           \
                \   first (e.g. from read_1 or index_1)\n                        \
                \      MMD=null is like MMD=0\n                                Default\
                \ value: 1. This option can be set to 'null' to clear the default\
                \ value. \n\nMIN_BASE_QUALITY=String\nQ=String                   \
                \   Minimum base quality during barcode matching: bases which quality\
                \ is less than this \n                              cutoff are always\
                \ considered as a mismatch.When two distinct barcodes are used for\
                \ sample \n                              matching (dual encoding),\
                \ two distinct values can be given using the syntax Q=X:Z where X\
                \ \n                              and Z are 2 integers to use for\
                \ first (e.g. from read_1 or index_1) and second barcode \n      \
                \                        (e.g. from read_2 or index_2) respectively.\n\
                \                              Q=null is like Q=0.\n             \
                \                   Default value: 10. This option can be set to 'null'\
                \ to clear the default value. \n\nXTRIMLEN=String\nXT=String     \
                \                Optional extra number of base to be trimmed right\
                \ after the barcode (only used if \n                             \
                \ CLIP_BARCODE=true). \n                              When running\
                \ paired-end, two distinct values can be given using the syntax XT=X:Z\
                \ where X \n                              and Z are 2 integers to\
                \ use for read_1 and read_2 respectively. Note that even when \n \
                \                             BPOS=READ_1 or BPOS=READ_2, a X:Y synthax\
                \ can be given to trim the read w/o barcode as to \n             \
                \                 end up with reads of the same length (note that\
                \ this can also be operated using ZT). If a \n                   \
                \           unique value is given, e.g. XT=1, while running paired-end\
                \ the following rule applies :\n                               \t\
                (1) BPOS=READ_1 or BPOS=READ_2, no trim is applied at the read w/o\
                \ barcode \n                              \t(2) BPOS=BOTH, the value\
                \ is used for both reads.\n                              Note that\
                \ XT=null is like XT=0.\n                                Default value:\
                \ 0. This option can be set to 'null' to clear the default value.\
                \ \n\nZTRIMLEN=String\nZT=String                     Optional extra\
                \ number of bases to be trimmed from the read end i.e. 3' end.\n \
                \                             When running paired-end, two distinct\
                \ values can be given here using the syntax ZT=X:Z \n            \
                \                  where X and Z are 2 integers to use for read_1\
                \ and read_2 respectively. Note that even \n                     \
                \         when BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given\
                \ to trim the read w/o barcode \n                              as\
                \ to end up with reads of the same length (note that this can also\
                \ be operated using \n                              XT). Note that\
                \ if a single value is passed, the value always applies to both reads\
                \ in \n                              paired-end mode without further\
                \ consideration.\n                              ZT=null is like ZT=0.\n\
                \                                Default value: 0. This option can\
                \ be set to 'null' to clear the default value. \n\nCLIP_BARCODE=Boolean\n\
                C=Boolean                     Clip barcode sequence from read sequence,\
                \ as well as XTRIMLEN (and ZTRIMLEN) bases if \n                 \
                \             applicable, before writing to output file.\n       \
                \                        If false, reads are written without modification\
                \ to output file. \n                              Apply to both barcodes\
                \ when BPOS=BOTH.\n                                Default value:\
                \ true. This option can be set to 'null' to clear the default value.\
                \ \n                              Possible values: {true, false} \n\
                \nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean                   Add\
                \ matched barcode at the end of the read header. Applies to both index\
                \ when INDEX_FILE2 \n                              is also provided.\n\
                \                              \tFirst the sample encoding barcodes\
                \ from I1 (and I2 when relevant) are added to the read \n        \
                \                      headers like \n                           \
                \   \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:I1_BARCODE:I2_BARCODE'\n\
                \                              \tThen, if BPOS!=NONE, the additional\
                \ barcodes (UMIs) clipped from the read(s) are added \n          \
                \                    to their own header, like \n                \
                \              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 \n  \
                \                            2:N:0:I1_BARCODE:I2_BARCODE:CLIPPED_SEQ_FROMREAD'\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\n\
                SAME_HEADERS=Boolean          Makes sure that headers of both reads\
                \ of a pair are identical, using the following read \n           \
                \                   header pattern (for both reads of a pair) :\n\
                \                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                \ I1_BARCODE:I2_BARCODE(if \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2\
                \ \n                              This option only makes sense in\
                \ paired end mode and ADD=true. Some (if not all) mappers \n     \
                \                         will indeed complain when the read headers\
                \ are not identical. When molecular barcodes are \n              \
                \                present in reads and the RCHAR is used, you will\
                \ end with (problematic) read headers like \n                    \
                \          this :\n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
                \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
                \                              SAME_HEADERS=true will instead genetates\
                \ the following identical header for both reads :\n              \
                \                \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
                \                              Note that we also clipped the useless\
                \ '1:N:0' and '3:N:0' has they will also result in \n            \
                \                  generating different headers\n                \
                \              \t Important : this option will force RCHAR=: UNLESS\
                \ you specify RCHAR=null ; in which \n                           \
                \   case a space will be preserved ie : \n                       \
                \       \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994 TAGAACAC:TGGAGTAG:CGTTGTAT\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\n\
                RCHAR=String                  Replace spaces in read name/header using\
                \ provided character. This is particularly handy \n              \
                \                when you need to retain\t ADDed barcode in read name/header\
                \ during mapping (everything \n                              after\
                \ space in read name is usually clipped in BAM files).\tFor example,\
                \ with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
                \ 2:N:0:'\n                              \tbecomes\n             \
                \                 \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
                \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
                V=FastqQualityFormat          A value describing how the quality values\
                \ are encoded in the fastq.  Either 'Solexa' for \n              \
                \                pre-pipeline 1.3 style scores (solexa scaling + 66),\
                \ 'Illumina' for pipeline 1.3 and \n                             \
                \ above (phred scaling + 64) or 'Standard' for phred scaled scores\
                \ with a character shift \n                              of 33.  If\
                \ this value is not specified (or 'null' is given), the quality format\
                \ will be \n                              detected.\n            \
                \                    Default value: Standard. This option can be set\
                \ to 'null' to clear the default value. \n                       \
                \       Possible values: {Solexa, Illumina, Standard} \n\nOUTPUT_DIR=File\n\
                O=File                        Output directory. By default, output\
                \ files are written in running directory.\n                      \
                \          Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
                UN=Boolean                    Should un-assigned reads be saved in\
                \ files or simply ignored. File names are \n                     \
                \         automatically created or can be given using UF1 & UF2 options.\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\n\
                UF1=String                    Name of the file in which to write unassigned\
                \ reads from FILE1.Either a name (in which \n                    \
                \          case the file will be created in the output dir) or full\
                \ path.\n                                Default value: unassigned_1.txt.\
                \ This option can be set to 'null' to clear the default \n       \
                \                       value. \n\nUNASSIGNED_FILE_NAME_2=String\n\
                UF2=String                    Name of the file in which to write unassigned\
                \ reads from FILE2.Either a name (in which \n                    \
                \          case the file will be created in the output dir) or full\
                \ path.\n                                Default value: unassigned_2.txt.\
                \ This option can be set to 'null' to clear the default \n       \
                \                       value. \n\nMETRICS_FILE_NAME=String\nM=String\
                \                      File name where to write demultiplexing statistics.\
                \ Either a name (in which case the file \n                       \
                \       will be created in the output dir) or an absolute path.\n\
                \                                Default value: jemultiplexer_out_stats.txt.\
                \ This option can be set to 'null' to clear \n                   \
                \           the default value. \n\nBARCODE_DIAG_FILE=String\nDIAG=String\
                \                   Name for a barcode match reporting file (not generated\
                \ by default).Either a name (in \n                              which\
                \ case the file will be created in the output dir) or full path. This\
                \ file will \n                              contain a line per read\
                \ pair with the barcode best matching the read subsequence or \n \
                \                             'null' when no match is found according\
                \ to matching parameters ; and the final selected \n             \
                \                 sample. This file is useful for debugging or further\
                \ processing in case both ends are \n                            \
                \  barcoded.\n                              N.B: this file will have\
                \ a size of about one of the fastq input files.  Default value: \n\
                \                              null. \n\nFORCE=Boolean           \
                \      Allows to overwrite existing files (system rights still apply).\n\
                \                                Default value: false. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
                GZ=Boolean                    Compress output files using gzip.\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
                \   Change the default extension of created fastq files, eg 'fastqsanger'.\
                \ By default uses \n                              the file extension\
                \ from input fastq file. If result file names are given in the barcode\
                \ \n                              file, this option is only used to\
                \ adapt the unassigned file names. When using \n                 \
                \             compression, a .gz is always appended to file names\
                \ and should not be specified in \n                              FASTQ_FILE_EXTENSION\
                \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq\
                \ and NOT FASTQ_FILE_EXTENSION=fastq.gz\n                        \
                \        Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                ASYNC=Boolean                 Use one thread per Fastq Writer.\n \
                \                               Default value: true. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nSTATS_ONLY=Boolean\
                \            Only produces metric and diagnostic reports i.e. no output\
                \ fastq file produced.\n                                Default value:\
                \ false. This option can be set to 'null' to clear the default value.\
                \ \n                              Possible values: {true, false} \n\
                \nUSE_EMBASE=Boolean\nEM=Boolean                    Enables emBASE\
                \ mode i.e fetch information from emBASE and place demultiplexed files\
                \ \n                              directly in emBASE repository structure.\n\
                \                              This option is mutually exclusive with\
                \ BARCODE_FILE.\n                              Note : this option\
                \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
                \ (all \n                              other user options supported).\n\
                \                                Default value: false. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false}  Cannot be used\
                \ in conjuction with option(s) BARCODE_FILE \n                   \
                \           (BF)\n\n"
              generated_using: *id004
            - !Command
              command: *id009
              positional:
              - !Positional
                description: 'In this format, a simple BARCODE slot is expected in
                  the ReadLayout and NO headers are '
                position: 0
                name: col2.
                optional: false
              - !Positional
                description: "sample1 ATAT|GAGG:CCAA|TGTG\n3. Extended barcode file\
                  \ format : 3 (single-end) or 4 (paired-end) tab-delimited colums\n\
                  same as the simple barcode file format but the extra columns contains\
                  \ the file name(s)"
                position: 0
                name: e.g.
                optional: false
              - !Positional
                description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
                position: 0
                name: Or
                optional: false
              - !Positional
                description: Cannot be used in conjuction with option(s) USE_EMBASE
                  (EM)
                position: 1
                name: Required.
                optional: false
              - !Positional
                description: "When provided, Je expects as many 'OF=' as output layouts\
                  \ ('OL=...') parameters or "
                position: 0
                name: formats.
                optional: false
              - !Positional
                description: 'Default value: null. '
                position: 0
                name: barcoded.
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: DemultiplexCLI\
                \ [options]\n\nUsage: program [options...]\n\nVersion: 2.0.RC\n\n\n\
                Options:\n\n--help\n-h                            Displays options\
                \ specific to this tool.\n\n--stdhelp\n-H                        \
                \    Displays options specific to this tool AND options common to\
                \ all Picard command line \n                              tools.\n\
                \n--version                     Displays program version.\n\nFASTQ=File\n\
                F=File                        Input fastq file (optionally gzipped)\
                \  Default value: null. This option must be specified \n         \
                \                     at least 1 times. \n\nBARCODE_FILE=File\nBF=File\
                \                       Barcode file (tsv) matching sample names to\
                \ barcode combination. \n                              \n        \
                \                         ### GENERAL Barcode File Format \n     \
                \                         In this format, the file structure is governed\
                \ with headers:\n                              \t* the 'SAMPLE' column\
                \ lists the sample names\n                              \t* the 'BARCODEn'\
                \ columns list the matching BARCODE from the BARCODEn slot (where\
                \ n is a \n                              number, see RL option). \n\
                \                              \t    It is mandatory to have as many\
                \ 'BARCODEn' columns as described BARCODE slots in \n            \
                \                  READ LAYOUTS. Here again, barcodes can be combined\
                \ using the OR operator '|'\n                              \t* the\
                \ optional 'OUTn' columns (where n is a number) list the output file\
                \ names for this \n                              sample and matching\
                \ output number.\n                              \n               \
                \                  ### SIMPLE Barcode File Format (for backward compatibility)\
                \ ; please see the GENERAL \n                              format\
                \ described above \n                              The file must have\
                \ 2 columns with the sample in col1 and the corresponding barcode\
                \ in \n                              col2.\n                     \
                \         In this format, a simple BARCODE slot is expected in the\
                \ ReadLayout and NO headers are \n                              needed\
                \ e.g. :\n                              \t\tsample1\tGAGG\n      \
                \                        \t\tsample2\tCCAA\n                     \
                \         \tThe format accept the following shortcuts: \n        \
                \                      \t1. If multiple barcodes map to the same sample,\
                \ either lines can be duplicated e.g.\n                          \
                \    \t\tsample1\tATAT\n                              \t\tsample1\t\
                GAGG\n                              \t\tsample2\tCCAA\n          \
                \                    \t\tsample2\tTGTG\n                         \
                \     \tOr barcodes can be combined using the OR operator '|' i.e.\
                \ the file above can be \n                              re-written\
                \ like\n                               \t\tsample1\tATAT|GAGG\n  \
                \                            \t\tsample2\tCCAA|TGTG\n            \
                \                  \t2. For the special situation of paired-end data\
                \ in which barcodes differ at both ends \n                       \
                \       i.e. with BARCODE1 and BARCODE2 described for read one and\
                \ two respectively, barcodes for \n                              BARCODE1\
                \ and BARCODE2 can be distinguished using a ':' separator i.e. \n\
                \                              \t\tsample1\tATAT:GAGG\n          \
                \                    \t\tsample2\tCCAA:TGTG\n                    \
                \          \tThis above syntax means that sample 1 is encoded with\
                \ ATAT barcode from BARCODE1 slot \n                             \
                \ AND GAGG barcode from BARCODE2 slot. Note that you can still combine\
                \ barcodes using | \n                              e.g. \n       \
                \                       \t\tsample1\tATAT|GAGG:CCAA|TGTG\n       \
                \                       \t3. Extended barcode file format : 3 (single-end)\
                \ or 4 (paired-end) tab-delimited colums\n                       \
                \       \tsame as the simple barcode file format but the extra columns\
                \ contains the file name(s) \n                              to use\
                \ to name output files. A unique extra column is expected for single-end\
                \ while 2 \n                              extra columns are expected\
                \ for paired-end. In case lines are duplicated (multiple \n      \
                \                        barcodes mapping the same sample), the same\
                \ file name should be indicated in the third \n                  \
                \            (and fourth) column(s). \n                          \
                \    \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n           \
                \                   \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
                \                              \t\tsample2\tCCAA\tspl2_1.txt.gz\t\
                spl2_2.txt.gz\n                              \tOr\n              \
                \                \t\tsample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz\
                \ \t spl1_2.txt.gz\n                                Required.  Cannot\
                \ be used in conjuction with option(s) USE_EMBASE (EM)\n\nREAD_LAYOUT=String\n\
                RL=String                     Describes the read layout(s) of input\
                \ fastq file(s) e.g. RL='<BARCODE:6><SAMPLE:x>' \n               \
                \               describes a read with a barcode in the first 6 bases\
                \ followed by the sample sequence ('x' \n                        \
                \      means 'till the end', see below). You MUST single quote the\
                \ pattern \n                              (RL='<BARCODE:6><SAMPLE:x>')\
                \ as '>' have special meaning in unix.The input fastq files \n   \
                \                           and read layouts are mached up by order\
                \ on the command line.\n                              Read layouts\
                \ are only needed for complex layouts but one must provide read layouts\
                \ for \n                              ALL or NONE of the input fastq\
                \ files.\n                              ## READ LAYOUT FORMAT DESCRIPTION:/nRead\
                \ layouts are made of <UMIn:X>, <BARCODEn:X>, \n                 \
                \             <SAMPLEn:X> blocks to describe blocks of type UMI, BARCODE\
                \ or SAMPLE with : \n                                  * 'n' the unique\
                \ block index (an index must be unique across all read layouts for\
                \ \n                              each index or each block type),\
                \ use the same index to specify redundant blocks e.g. use \n     \
                \                         <BARCODE1:6> in two different layouts to\
                \ specify that the barcode found in both reads are \n            \
                \                  the same\n                                 * 'X'\
                \ : either a number indicating the length of the UMI, BARCODE or SAMPLE\
                \ block or a \n                              negative number e.g.\
                \ -2 to specify the last 2 bases should be ignored/clipped) or the\
                \ \n                              letter 'x' to specify to take the\
                \ sequence till the end of read. Importantly, the 'x' or \n      \
                \                        negative length shortcuts can *only* be used\
                \ in the last block of a read layout (i.e. \n                    \
                \          <BARCODE1:x><SAMPLE1:20> is not allowed)\n            \
                \                  In addition, layouts can contain N or fixed bases\
                \ like in 'NN<BARCODE1:6>NNNN<SAMPLE1:x>' \n                     \
                \         where the Ns tell Je to skip 2 and 4 bases before extracting\
                \ the barcode & sample \n                              sequence respectively.\n\
                \                              \n                              ##\
                \ OMIITING READ LAYOUT IN THE COMMAND LINE:/nWhen no read layout is\
                \ provided, the \n                              following defaults\
                \ apply :\n                                 * 1 input fastq: single\
                \ end with layout <BARCODE1:X><SAMPLE1:x> where X is inferred \n \
                \                             from barcode file\n                \
                \                 * 2 input fastqs: \n                           \
                \          - paired end with redundant barcode if barcode file describes\
                \ a single BARCODE \n                              i.e. <BARCODE1:X><SAMPLE1:x>\
                \ and <BARCODE1:X><SAMPLE2:x>, where X is inferred from \n       \
                \                       barcode file\n                           \
                \          - paired end with non redundant barcode if barcode file\
                \ describes two BARCODE \n                              column i.e.\
                \ <BARCODE1:X><SAMPLE1:x> and <BARCODE2:Y><SAMPLE2:x>, where X and\
                \ Y are \n                              inferred from barcode file\n\
                \                                     - single end with index file\
                \ if barcode file describes a single BARCODE and second \n       \
                \                       fastq file has reads of length < 10 + barcode_length\n\
                \                                 * 3 input fastqs: \n           \
                \                          - paired end with an index file i.e. <SAMPLE1:x>,\
                \ <SAMPLE2:x> and <BARCODE1:X> \n                              when\
                \ barcode file has a single BARCODE column (X is inferred from barcode\
                \ file)\n                                     - single end with two\
                \ index files i.e. <SAMPLE1:x>, <BARCODE1:X> and <BARCODE2:Y> \n \
                \                             when barcode file has two BARCODE columns\
                \ (X,Y is inferred from barcode file)\n                          \
                \       * 4 input fastqs: paired end with either \n              \
                \                        - 2 non-redundant index files i.e. <SAMPLE1:x>,\
                \ <SAMPLE2:x>, <BARCODE1:X>, \n                              <BARCODE2:Y>\
                \ if the barcode file has two BARCODE columns or a ATGC:GCTAGC syntax\
                \ (X,Y \n                              inferred from barcode file)\
                \ \n                                     - 2 redundant index files\
                \ <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X> and <BARCODE1:X> \n     \
                \                         if the barcode file has a single BARCODE\
                \ column (X inferred from barcode file)\n                        \
                \      \n                                Default value: null. This\
                \ option may be specified 0 or more times. \n\nOUTPUT_LAYOUT=String\n\
                OL=String                     Describes the output file layout(s)\
                \ using the slots defined in read layouts (, , ) and \n          \
                \                    are made of three distinct parts separated with\
                \ ':'.\n                              In addition to , , ,  is used\
                \ as a synonym to  to indicate that the real sequence  should \n \
                \                             be written (as opposed to writting the\
                \ barcode when usign ). \n                              An output\
                \ layout looks like '1::' where the three mandatory parts (':'-separated)\
                \ are :\n                              \t- The number in the first\
                \ part (i.e. from '1:' above) is the output file index and it \n \
                \                             must be unique across all 'OL' inputs.\
                \ \n                              \t- The second part (i.e. '' above)\
                \ is the read header layout; when writing multiple UMI \n        \
                \                      and BARCODE slots in output read headers, these\
                \ are always separated with the RCHAR (':' \n                    \
                \          by defaults).\n                              \t- The third\
                \ part (i.e. '' above) is the read sequence layout. Note that here\
                \  and  are \n                              fully synonyms as the\
                \ real sequence (i.e READBAR) is always written\n                \
                \              \n                              Important: You MUST\
                \ single quote the pattern (OL='1::') as '>' have special meaning\
                \ in \n                              unix.An output file is created\
                \ for each sample and each OL index. Output file names \n        \
                \                      default to samplename_outputfileindex with\
                \ the original fastq file extensions\n                           \
                \   \n                              ## OMIITING OUTPUT LAYOUT IN THE\
                \ COMMAND LINE:/n  When no OL is described, Je considers \n      \
                \                        an output file should be created for each\
                \ input FASTQ (containing a SAMPLE slot) and for \n              \
                \                each sample.\n                               In this\
                \ scenario:\n                              \t1. The output files only\
                \ contain the SAMPLE slot unless CLIP is set to false\n          \
                \                    \t2. The barcode(s) and sample names are injected\
                \ in the output file names according to \n                       \
                \       the pattern 'FASTQFILENAMEn_SAMPLENAME_BARCODES.ORIGINALEXTENSIONS'\
                \ ) \n                              \t3. Unless ADD is set to false,\
                \ all BARCODE and UMI slots (if any) are placed in the \n        \
                \                      fastq headers following their slot index i.e.\
                \ BARCODE1:...:BARCODEn:UMI1:UMI2:...:UMIn \n                    \
                \          and are separated with ':'.\n                         \
                \     ## SHORT LAYOUT FORMAT \n                              The output\
                \ layout can be specified in a concise way using 'S','B', 'R' and\
                \ 'U' for \n                              SAMPLE, BARCODE, READBAR\
                \ and UMI, respectively. In this format, the surounding '' are \n\
                \                              also omitted. For example 'OL=1:B1U1U2:S1'\
                \ is a synonym of 'OL=1::'  Default value: null. \n              \
                \                This option may be specified 0 or more times. \n\n\
                WITH_QUALITY_IN_READNAME=Boolean\nWQ=Boolean                    Set\
                \ to True to keep Phred sequence qualities in output read names. \n\
                \                              This option only applies to BARCODE,\
                \ READBAR and UMI described in the read name slot of \n          \
                \                    output layout. For BARCODE, the equivalent READBAR\
                \ quality is used. In case of redundant \n                       \
                \       slots, the best found quality is used.\n                 \
                \             The quality string is translated into 2 digits number\
                \ representing the quality scores on \n                          \
                \    the Phred scale and a e.g. UMI will look like\n             \
                \                 \t '...:ATGCAT333023212322:...' instead of '...:ATGCAT:...'\n\
                \                              This option is particularly useful\
                \ with the retag module that knows how to extract \n             \
                \                 quality numbers into BAM tags.  Default value: false.\
                \ This option can be set to 'null' to \n                         \
                \     clear the default value. Possible values: {true, false} \n\n\
                OUTPUT_DIR=File\nO=File                        Output directory. By\
                \ default, output files are written in running directory.\n      \
                \                          Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
                UN=Boolean                    Should un-assigned reads be saved in\
                \ files or simply ignored. File names are \n                     \
                \         automatically created or can be given using UF option.\n\
                \                                Default value: true. This option\
                \ can be set to 'null' to clear the default value. \n            \
                \                  Possible values: {true, false} \n\nUNASSIGNED_FILE=String\n\
                UF=String                     Name of unassigned files in which to\
                \ write unassigned reads. When provided, Je expects as \n        \
                \                      many UF files as input FASTQ files. UF options\
                \ are matched up with FASTQ options \n                           \
                \   following the order they are defined on the command line.\n  \
                \                            Either a name (in which case the file\
                \ will be created in the output dir) or full path.\n             \
                \                   Default value: null. This option may be specified\
                \ 0 or more times. \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\n\
                OWID=Boolean                  Should the output layout number (output\
                \ layout first slot) be injected in the filename ?\n             \
                \                 Only used in absence of explicit file names in the\
                \ barcode file.\n                                Default value: true.\
                \ This option can be set to 'null' to clear the default value. \n\
                \                              Possible values: {true, false} \n\n\
                ADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWHL=Boolean       \
                \           Should the output layout used for the read name (output\
                \ layout second slot,in short \n                              format)\
                \ be injected in the filename ? When true, each ouput file name contains\
                \ e.g. \n                              '_B1U1' for OL='1::'  \n  \
                \                            Only used in absence of explicit file\
                \ names in the barcode file.\n                                Default\
                \ value: false. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {true, false}\
                \ \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWSL=Boolean\
                \                  Should the output layout used for the read sequence\
                \ (output layout third slot, in short \n                         \
                \     format) be injected in the filename ?When true, each ouput file\
                \ name contains e.g. '_S1' \n                              for OL='1::'\
                \  \n                              Only used in absence of explicit\
                \ file names in the barcode file.\n                              \
                \  Default value: false. This option can be set to 'null' to clear\
                \ the default value. \n                              Possible values:\
                \ {true, false} \n\nOUTPUT_FILE=String\nOF=String                \
                \     Tells Je to write **all** assigned reads in the same output\
                \ file(s) i.e. use this option \n                              when\
                \ you do NOT want to create per-sample demultiplexed files but rather\
                \ want to keep all \n                              reads in the same\
                \ file while barcode information is gathered and injected in output\
                \ \n                              formats.\n                     \
                \          When provided, Je expects as many 'OF=' as output layouts\
                \ ('OL=...') parameters or \n                              'FASTQ=input'\
                \ files when OL is not provided\n                              . OF\
                \ options are matched up with OL/FASTQ options following the order\
                \ in which they are \n                              defined on the\
                \ command line.\n                              OF expects either a\
                \ name (in which case the file will be created in the output dir)\
                \ or an \n                              absolute path.\n         \
                \                       Default value: null. This option may be specified\
                \ 0 or more times. \n\nMAX_MISMATCHES=String\nMM=String          \
                \           Maximum mismatches for a barcode to be considered a match.\
                \ Either exactly one or multiple \n                              values\
                \ (with format MM=X:Y:Z). \n                              When multiple\
                \ values are provided, Je expects exactly one value for each BARCODE\
                \ (with \n                              distinct indices) described\
                \ in the barcode file/read layouts.\n                            \
                \  Values (X,Y,Z) are matched up with the sorted list of BARCODES\
                \ (i.e.  X for BARCODE1, Y \n                              for BARCODE2\
                \ and Z for BARCODE3)\n                                Default value:\
                \ 1. This option can be set to 'null' to clear the default value.\
                \ \n\nMIN_MISMATCH_DELTA=String\nMMD=String                    Minimum\
                \ difference between the number of mismatches against the best and\
                \ the second best \n                              barcode. When MMD\
                \ is not respected, the read remains unassigned.\n               \
                \               Either exactly one or multiple values (with format\
                \ MMD=X:Y:Z). When multiple values are \n                        \
                \      provided, Je expects exactly one value for each BARCODE (with\
                \ distinct indices) described \n                              in the\
                \ barcode file/read layouts.\n                              Values\
                \ (X,Y,Z) are matched up with the sorted list of BARCODES (i.e.  X\
                \ for BARCODE1, Y \n                              for BARCODE2 and\
                \ Z for BARCODE3)\n                                Default value:\
                \ 1. This option can be set to 'null' to clear the default value.\
                \ \n\nMIN_BASE_QUALITY=String\nQ=String                      Minimum\
                \ base quality during barcode matching: bases which quality is less\
                \ than this \n                              cutoff are always considered\
                \ as a mismatch.Either exactly one or multiple values (with \n   \
                \                           format Q=X:Y:Z). When multiple values\
                \ are provided, Je expects exactly one value for each \n         \
                \                     BARCODE (with distinct indices) described in\
                \ the barcode file/read layouts.\n                              Values\
                \ (X,Y,Z) are matched up with the sorted list of BARCODES (i.e.  X\
                \ for BARCODE1, Y \n                              for BARCODE2 and\
                \ Z for BARCODE3)\n                                Default value:\
                \ 10. This option can be set to 'null' to clear the default value.\
                \ \n\nSTRICT=Boolean\nS=Boolean                     When reads have\
                \ redundant BARCODE slots, this option tells how to handle situation\
                \ when \n                              the read sequence do not resolve\
                \ to the same sample.\n                               When true, the\
                \ read pair is always 'unassigned'.\n                            \
                \   When false, the read pair is assigned to the sample with the lowest\
                \ overall mismatch sum\n                                Default value:\
                \ false. This option can be set to 'null' to clear the default value.\
                \ \n                              Possible values: {true, false} \n\
                \nFORCE=Boolean                 Allows to overwrite existing files\
                \ (system rights still apply).\n                                Default\
                \ value: false. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {true, false}\
                \ \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                    Compress\
                \ output files using gzip.\n                                Default\
                \ value: true. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {true, false}\
                \ \n\nCLIP=Boolean                  In absence of output layout, tell\
                \ if barcode and UMI sequences should be clipped off read \n     \
                \                         sequence before writing to output file.\n\
                \                               If false, reads are written without\
                \ modification to output file.  Default value: true. \n          \
                \                    This option can be set to 'null' to clear the\
                \ default value. Possible values: {true, \n                      \
                \        false} \n\nADD=Boolean                   In absence of output\
                \ layout, tell if barcode and UMI sequences should be added at the\
                \ end \n                              of the read header.\n      \
                \                        BARCODE and UMI slots (in this order) are\
                \ concatenated using the character defined by the \n             \
                \                 SEP option\n                                Default\
                \ value: true. This option can be set to 'null' to clear the default\
                \ value. \n                              Possible values: {true, false}\
                \ \n\nREAD_NAME_SEPARATOR_CHAR=String\nSEP=String                \
                \    Separator character used to concatenate barcodes and umis in\
                \ read header\n                                Default value: :. This\
                \ option can be set to 'null' to clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
                V=FastqQualityFormat          A value describing how the quality values\
                \ are encoded in the fastq files.  Either \n                     \
                \         'Solexa' for pre-pipeline 1.3 style scores (solexa scaling\
                \ + 66), 'Illumina' for pipeline \n                              1.3\
                \ and above (phred scaling + 64) or 'Standard' for phred scaled scores\
                \ with a character \n                              shift of 33.  If\
                \ this value is not specified (or 'null' is given), the quality format\
                \ is \n                              assumed to be will the 'Standard'\
                \ for phred scale.\n                                Default value:\
                \ null. Possible values: {Solexa, Illumina, Standard} \n\nMETRICS_FILE_NAME=String\n\
                M=String                      File name where to write demultiplexing\
                \ statistics. Either a name (in which case the file \n           \
                \                   will be created in the output dir) or an absolute\
                \ path.\n                                Default value: jemultiplexer_out_stats.txt.\
                \ This option can be set to 'null' to clear \n                   \
                \           the default value. \n\nBARCODE_DIAG_FILE=String\nDIAG=String\
                \                   Name for a barcode match reporting file (not generated\
                \ by default).Either a name (in \n                              which\
                \ case the file will be created in the output dir) or full path. This\
                \ file will \n                              contain a line per read\
                \ set with the barcodes best matching the read subsequences or \n\
                \                              'null' when no match is found according\
                \ to matching parameters ; and the final selected \n             \
                \                 sample. This file is useful for debugging or further\
                \ processing in case both ends are \n                            \
                \  barcoded.\n                                Default value: null.\
                \ \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\nTEST=Boolean         \
                \         test mode ie code execution stops right before read demultiplexing\
                \ starts but after \n                              command line validation\
                \  Default value: false. This option can be set to 'null' to clear\
                \ \n                              the default value. Possible values:\
                \ {true, false} \n\nFASTQ_FILE_EXTENSION=String   Change the default\
                \ extension of created fastq files, eg 'fastqsanger'. By default uses\
                \ \n                              the file extension from input fastq\
                \ file. If result file names are given in the barcode \n         \
                \                     file, this option is only used to adapt the\
                \ unassigned file names. When using \n                           \
                \   compression, a .gz is always appended to file names and should\
                \ not be specified in \n                              FASTQ_FILE_EXTENSION\
                \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq\
                \ and NOT FASTQ_FILE_EXTENSION=fastq.gz\n                        \
                \        Default value: null. \n\nINPUT_FASTQ_COMPRESSION=Boolean\n\
                \                              Indicates if the input fastq files\
                \ are gzipped. Please use this option when file names \n         \
                \                     are compressed but lack the typical '.gz' extension.\
                \ \n                                Default value: null. Possible\
                \ values: {true, false} \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
                ASYNC=Boolean                 Use one thread per Fastq Writer.\n \
                \                               Default value: true. This option can\
                \ be set to 'null' to clear the default value. \n                \
                \              Possible values: {true, false} \n\nUSE_EMBASE=Boolean\n\
                EM=Boolean                    Enables emBASE mode i.e fetch information\
                \ from emBASE and place demultiplexed files \n                   \
                \           directly in emBASE repository structure.\n           \
                \                   This option is mutually exclusive with BARCODE_FILE.\n\
                \                              Note : this option forces O=null GZ=true\
                \ UN=true UF1=null UF2=null STATS_ONLY=false (all \n             \
                \                 other user options supported).\n               \
                \                 Default value: false. This option can be set to\
                \ 'null' to clear the default value. \n                          \
                \    Possible values: {true, false}  Cannot be used in conjuction\
                \ with option(s) BARCODE_FILE \n                              (BF)\n\
                \n"
              generated_using: *id004
            - !Command
              command: *id010
              positional:
              - !Positional
                description: SPLIT_CHAR=String
                position: 0
                name: times.
                optional: false
              - !Positional
                description: COMMENT=String
                position: 0
                name: value.
                optional: false
              named:
              - !Flag
                description: "Displays options specific to this tool AND options common\
                  \ to all Picard command line\ntools."
                synonyms:
                - -H
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag: !Flag
                description: Displays program version.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: MarkDuplicatesWithMolecularCode\
                \ [options]\n\nExamines aligned records in the supplied SAM or BAM\
                \ file to locate duplicate molecules taking into account molecular\
                \ barcodes (Unique Molecular Identifiers or UMIs) found in read header.\
                \ All records are then either written to the output file with the\
                \ duplicate records flagged or trashed.\nExample :\n\t je markdupes\
                \ INPUT=file_with_dupes.bam OUTPUT=result.bam MM=1\nVersion: 2.0.RC\n\
                \n\nOptions:\n\n--help\n-h                            Displays options\
                \ specific to this tool.\n\n--stdhelp\n-H                        \
                \    Displays options specific to this tool AND options common to\
                \ all Picard command line \n                              tools.\n\
                \n--version                     Displays program version.\n\nINPUT=String\n\
                I=String                      One or more input SAM or BAM files to\
                \ analyze. Must be coordinate sorted.  Default value: \n         \
                \                     null. This option may be specified 0 or more\
                \ times. \n\nOUTPUT=File\nO=File                        The output\
                \ file to write marked records to  Required. \n\nMISMATCHES=Integer\n\
                MM=Integer                    Number of MisMatches (inclusive) to\
                \ still consider two Unique Molecular Identifiers \n             \
                \                 (UMIs) identical i.e. this option buffers for sequencing\
                \ errors.Indeed, in case of a \n                              sequencing\
                \ error, 2 duplicate reads would not be considered duplicates anymore.Note\
                \ that \n                              N are not considered mismatches\
                \ during comparison ie ATTNGG and NTTANG are seen as the \n      \
                \                        same barcode and these two reads would be\
                \ flagged duplicates.This option takes a single \n               \
                \               value even when several barcodes are present (see\
                \ SLOTS). Note that when declaring \n                            \
                \  several barcodes (see SLOTS) AND providing a predefined set of\
                \ barcodes (see BC option), \n                              the MM\
                \ value is applicable in each lookup. When a predefined set of barcodes\
                \ is NOT \n                              given, the different barcodes\
                \ (SLOTS) are concatenated first and the MM value is \n          \
                \                    therefore considered *overall* as the concatenated\
                \ code is seen as a unique code.\n                              MM=null\
                \ is like MM=0\n                              Use the minimum Hamming\
                \ distance of the original barcode set (if applicable).  Required.\
                \ \n\nMAX_NUMBER_OF_N=Integer\nMAX_N=Integer                 Maximum\
                \ number of Ns a molecular code can contain (inclusive). Above this\
                \ value, reads \n                              are placed in a UNDEF\
                \ group.More precisely, these 'too degenarate' codes will not :\n\
                \                              \t * be compared to the list of predefined\
                \ codes [predefined code list situation ie BC \n                 \
                \             option given] nor \n                              \t\
                \ * be considered as a potential independent code [no predefined code\
                \ list situation ie \n                              BC option not\
                \ given]\n                              Default value is the MISMATCHES\
                \ number.\n                               Note that when declaring\
                \ several barcodes (see SLOTS) AND providing a predefined set of \n\
                \                              barcodes (see BC option), the MAX_N\
                \ value is applicable to each barcode. When a \n                 \
                \             predefined set of barcodes is NOT given, the different\
                \ barcodes (SLOTS) are concatenated \n                           \
                \   first and the MAX_N value is therefore considered *overall*. \
                \ Default value: null. \n\nSLOTS=Integer\nSLOTS=Integer          \
                \       Where to find the UMIs (and only the UMIs) in the read name\
                \ once read name has been \n                              tokenized\
                \ using the SPLIT character (e.g. ':'). \n                       \
                \       By default, the UMI is considered to be found at the end of\
                \ the read header i.e. after \n                              the last\
                \ ':'. Use this option to indicate other or additional UMI positions\
                \ (e.g. \n                              multiple UMIs present in read\
                \ header.\n                              IMPORTANT : counting starts\
                \ at 1 and negative numbers can be used to start counting from \n\
                \                              the end.\n                        \
                \      For example, consider the following read name that lists 3\
                \ different barcodes in the end \n                              :\
                \ \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
                \ \n                              \t to indicate that the three barcodes\
                \ are molecular codes, use \n                              \t\tSLOTS=-1\
                \ SLOTS=-2 SLOTS=-3\n                              \t if only the\
                \ 2 last ones should be considered (the third one being a sample encoding\
                \ \n                              barcode), use \n               \
                \               \t\tSLOTS=-1 SLOTS=-2\t N.B.: UMI usage can be deactivate\
                \ by explicitely setting SLOTS=null \n                           \
                \   in the command line\n                                Default value:\
                \ null. This option may be specified 0 or more times. \n\nBARCODE_FILE=File\n\
                BC=File                       Pre-defined list of UMIs that can be\
                \ expected. Format: one column text file, one barcode \n         \
                \                     per line. All UMIs MUST have the same length.\
                \   Default value: null. \n\nMETRICS_FILE=File\nM=File           \
                \             File to write duplication metrics to  Required. \n\n\
                REMOVE_DUPLICATES=Boolean     If true do not write duplicates to the\
                \ output file instead of writing them with \n                    \
                \          appropriate flags set.  Default value: false. This option\
                \ can be set to 'null' to clear \n                              the\
                \ default value. Possible values: {true, false} \n\nASSUME_SORTED=Boolean\n\
                AS=Boolean                    If true, assume that the input file\
                \ is coordinate sorted even if the header says \n                \
                \              otherwise. Deprecated, used ASSUME_SORT_ORDER=coordinate\
                \ instead.  Default value: false. \n                             \
                \ This option can be set to 'null' to clear the default value. Possible\
                \ values: {true, \n                              false}  Cannot be\
                \ used in conjuction with option(s) ASSUME_SORT_ORDER (ASO)\n\nTRIM_HEADERS=Boolean\n\
                T=Boolean                     Should barcode information be removed\
                \ from read names in the output BAM ? This is usefull \n         \
                \                     to save storage space.\n                   \
                \             Default value: false. This option can be set to 'null'\
                \ to clear the default value. \n                              Possible\
                \ values: {true, false} \n\nTSLOTS=Integer\nTSLOTS=Integer       \
                \         Where to find *all* barcode(s) (i.e. sample encoding and\
                \ UMIs) in the read name once has \n                             \
                \ been tokenized using the SPLIT character (e.g. ':'). \n        \
                \                      This option is only considered when TRIM_HEADERS=true.\
                \ When TSLOTS is ommited while \n                              TRIM_HEADERS=true,\
                \ the values of SLOTS apply.\n                              IMPORTANT\
                \ : counting starts at 1 and negative numbers can be used to start\
                \ counting from \n                              the end.\n       \
                \                       See SLOT help for examples.  Default value:\
                \ null. This option may be specified 0 or more \n                \
                \              times. \n\nSPLIT_CHAR=String\nSPLIT=String        \
                \          Character to use to split up the read header line, default\
                \ is ':'.  Default value: :. \n                              This\
                \ option can be set to 'null' to clear the default value. \n\nASSUME_SORT_ORDER=SortOrder\n\
                ASO=SortOrder                 If not null, assume that the input file\
                \ has this order even if the header says otherwise.  \n          \
                \                    Default value: null. Possible values: {unsorted,\
                \ queryname, coordinate, duplicate, \n                           \
                \   unknown}  Cannot be used in conjuction with option(s) ASSUME_SORTED\
                \ (AS)\n\nDUPLICATE_SCORING_STRATEGY=ScoringStrategy\nDS=ScoringStrategy\
                \            The scoring strategy for choosing the non-duplicate among\
                \ candidates.  Default value: \n                              SUM_OF_BASE_QUALITIES.\
                \ This option can be set to 'null' to clear the default value. \n\
                \                              Possible values: {SUM_OF_BASE_QUALITIES,\
                \ TOTAL_MAPPED_REFERENCE_LENGTH, RANDOM} \n\nPROGRAM_RECORD_ID=String\n\
                PG=String                     The program record ID for the @PG record(s)\
                \ created by this program. Set to null to \n                     \
                \         disable PG record creation.  This string may have a suffix\
                \ appended to avoid collision \n                              with\
                \ other program record IDs.  Default value: MarkDuplicates. This option\
                \ can be set to \n                              'null' to clear the\
                \ default value. \n\nPROGRAM_GROUP_VERSION=String\nPG_VERSION=String\
                \             Value of VN tag of PG record to be created. If not specified,\
                \ the version will be \n                              detected automatically.\
                \  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
                \             Value of CL tag of PG record to be created. If not supplied\
                \ the command line will be \n                              detected\
                \ automatically.  Default value: null. \n\nPROGRAM_GROUP_NAME=String\n\
                PG_NAME=String                Value of PN tag of PG record to be created.\
                \  Default value: \n                              MarkDuplicatesWithMolecularCode.\
                \ This option can be set to 'null' to clear the default \n       \
                \                       value. \n\nCOMMENT=String\nCO=String     \
                \                Comment(s) to include in the output file's header.\
                \  Default value: null. This option may \n                       \
                \       be specified 0 or more times. \n\nREAD_NAME_REGEX=String \
                \       Regular expression that can be used to parse read names in\
                \ the incoming SAM file. Read \n                              names\
                \ are parsed to extract three variables: tile/region, x coordinate\
                \ and y coordinate. \n                              These values are\
                \ used to estimate the rate of optical duplication in order to give\
                \ a more \n                              accurate estimated library\
                \ size. Set this option to null to disable optical duplicate \n  \
                \                            detection, e.g. for RNA-seq or other\
                \ data where duplicate sets are extremely large and \n           \
                \                   estimating library complexity is not an aim. Note\
                \ that without optical duplicate counts, \n                      \
                \        library size estimation will be inaccurate. The regular expression\
                \ should contain three \n                              capture groups\
                \ for the three variables, in order. It must match the entire read\
                \ name. \n                              Note that if the default regex\
                \ is specified, a regex match is not actually done, but \n       \
                \                       instead the read name  is split on colon character.\
                \ For 5 element names, the 3rd, 4th and \n                       \
                \       5th elements are assumed to be tile, x and y values. For 7\
                \ element names (CASAVA 1.8), \n                              the\
                \ 5th, 6th, and 7th elements are assumed to be tile, x and y values.\
                \  Default value: \n                              <optimized capture\
                \ of last three ':' separated fields as numeric values>. This option\
                \ can \n                              be set to 'null' to clear the\
                \ default value. \n\nOPTICAL_DUPLICATE_PIXEL_DISTANCE=Integer\n  \
                \                            The maximum offset between two duplicate\
                \ clusters in order to consider them optical \n                  \
                \            duplicates. The default is appropriate for unpatterned\
                \ versions of the Illumina platform. \n                          \
                \    For the patterned flowcell models, 2500 is moreappropriate. For\
                \ other platforms and \n                              models, users\
                \ should experiment to find what works best.  Default value: 100.\
                \ This option \n                              can be set to 'null'\
                \ to clear the default value. \n\nMAX_FILE_HANDLES_FOR_READ_ENDS_MAP=Integer\n\
                MAX_FILE_HANDLES=Integer      Maximum number of file handles to keep\
                \ open when spilling read ends to disk. Set this \n              \
                \                number a little lower than the per-process maximum\
                \ number of file that may be open. This \n                       \
                \       number can be found by executing the 'ulimit -n' command on\
                \ a Unix system.  Default \n                              value: 8000.\
                \ This option can be set to 'null' to clear the default value. \n\n\
                SORTING_COLLECTION_SIZE_RATIO=Double\n                           \
                \   This number, plus the maximum RAM available to the JVM, determine\
                \ the memory footprint \n                              used by some\
                \ of the sorting collections.  If you are running out of memory, try\
                \ reducing \n                              this number.  Default value:\
                \ 0.25. This option can be set to 'null' to clear the default \n \
                \                             value. \n\n"
              generated_using: *id004
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Usage:   je <command> [options] \n\nwith command in : \n\t\
              \ clip      \t\t clips barcodes/UMIs from fastq sequence and places\
              \ them in read name headers \n\t debarcode \t\t demultiplexes fastq\
              \ file(s) into user-defined output files, with optional handling of\
              \ molecular barcodes\n\t demultiplex \t\t demultiplexes fastq file(s)\
              \ with Je 1.x implementation, with optional handling of molecular barcodes\
              \ for further use in 'dupes' module\n\t demultiplex-illu \t demultiplexes\
              \ fastq file(s) using Illumina Index files with Je 1.x implementation,\
              \ with optional handling of molecular barcodes for further use in 'dupes'\
              \ module\n\t markdupes     \t\t removes read duplicates based on molecular\
              \ barcodes found in read name headers (as produced by clip or plex)\n\
              \t dropseq    \t\t clips cell barcode and UMI from read 1 and adds them\
              \ to header of read 2. This command is for processing drop-seq results.\n\
              \t retag    \t\t extracts barcode and UMI sequence(s) embedded in read\
              \ names and tag reads with proper BAM tag.\n\nVersion : 2.0.RC\n"
            generated_using: *id004
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jedropseq [options]\n\
            \nReformat Drop-seq files into a single fastq file. DROP-seq produces\
            \ 2 fastq files : one (F1) contains the cell barcode (usually 12 bp, LEN)\
            \ followed by a UMI (usually 8bp, ULEN) while the second (F2) contains\
            \ the RNA sequence. The output file is similar to F2 but holds the parsed\
            \ barcode and UMI in read names.\nInput fastq file(s) can be in gzip compressed\
            \ format (end in .gz). See help for a detailled description of all options.\n\
            \nExample: \n\tje dropseq F1=file.fastq.gz F2=file.fastq.gz LEN=12 ULEN=8\
            \ O=/path/to/resultdir/out.fastq.gz\n\nVersion: 2.0.RC\n\n\nOptions:\n\
            \n--help\n-h                            Displays options specific to this\
            \ tool.\n\n--stdhelp\n-H                            Displays options specific\
            \ to this tool AND options common to all Picard command line \n      \
            \                        tools.\n\n--version                     Displays\
            \ program version.\n\nFASTQ_FILE1=File\nF1=File                      \
            \ Input fastq file (optionally gzipped) for first read. This read contains\
            \ the cell barcode \n                              followed by the UMI.\
            \ Quality encoding must be Phred+33 (Standard).  Required. \n\nFASTQ_FILE2=File\n\
            F2=File                       Input fastq file (optionally gzipped) for\
            \ the second read. Quality encoding must be \n                       \
            \       Phred+33 (Standard).  Required. \n\nBCLEN=Integer\nLEN=Integer\
            \                   Length of the cell barcode sequence in read 1.\n \
            \                               Required. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
            WQ=Boolean                    Should quality string of barcode and UMI\
            \ also be injected in read names.\n                              If true,\
            \ the quality string is translated into 2 digits number and a e.g. UMI\
            \ will look \n                              like\n                   \
            \           \t '...:ATGCAT333423212322:...' instead of '...:ATGCAT:...'\n\
            \                              This option is particularly useful with\
            \ the retag module that knows how to extract \n                      \
            \        quality numbers into BAM tags.  Default value: false. This option\
            \ can be set to 'null' to \n                              clear the default\
            \ value. Possible values: {true, false} \n\nUCLEN=Integer\nULEN=Integer\
            \                  Length of the UMI sequence in read 1 found right after\
            \ the cell barcode.\n                                Required. \n\nMAX_N=Integer\n\
            N=Integer                     Maximum number of N's in the cell barcode\
            \ sequence. If the cell barcode has this number \n                   \
            \           or more N in the sequence, the read is ignored.\n        \
            \                        Default value: 6. This option can be set to 'null'\
            \ to clear the default value. \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String\
            \                  Replace spaces in read name/header using provided character.\n\
            \                              This is needed when you need to retain\
            \ ADDed barcode in read name/header during mapping \n                \
            \              as everything after space in read name is usually clipped\
            \ in BAM files.\n                              For example, with RCHAR=':'\
            \ :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
            \ 1:N:0:'\n                              \tbecomes\n                 \
            \             \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'\n\
            \                                Default value: :. This option can be\
            \ set to 'null' to clear the default value. \n\nRESULT_FILENAME_1=String\n\
            O=String                      Result file name with headers modified.\n\
            \                              \n                              Can either\
            \ be a name (in which case the file will be created in the output dir)\
            \ or a full \n                              path.\n                  \
            \              Required. \n\nFORCE=Boolean                 Allows overwriting\
            \ existing files.\n                                Default value: false.\
            \ This option can be set to 'null' to clear the default value. \n    \
            \                          Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
            GZ=Boolean                    Compress output using gzip and append a\
            \ .gz extension to the result filename if necessary.\n               \
            \                 Default value: true. This option can be set to 'null'\
            \ to clear the default value. \n                              Possible\
            \ values: {true, false} \n\n"
          generated_using: *id004
        - !Command
          command: *id005
          positional:
          - !Positional
            description: 'Required. '
            position: 0
            name: data.
            optional: false
          - !Positional
            description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
            position: 0
            name: Or
            optional: false
          - !Positional
            description: 'the second barcode might be a random barcode (UMI) to tell
              apart PCR artefacts from real '
            position: 0
            name: while
            optional: false
          - !Positional
            description: 'Another example is when both barcodes should be used in
              a combined fashion to resolve the '
            position: 1
            name: duplicates.
            optional: false
          - !Positional
            description: In the first example, you should use BPOS=BOTH BRED=false
              BM=READ_1.
            position: 2
            name: sample.
            optional: false
          - !Positional
            description: 'values can be given here using the syntax MM=X:Z where X
              and Z are 2 integers to use for '
            position: 0
            name: distinct
            optional: false
          - !Positional
            description: "Default value: Standard. This option can be set to 'null'\
              \ to clear the default value. "
            position: 0
            name: detected.
            optional: false
          - !Positional
            description: 'N.B: this file will have a size of about one of the fastq
              input files.  Default value: '
            position: 0
            name: barcoded.
            optional: false
          - !Positional
            description: "FORCE=Boolean                 Allows to overwrite existing\
              \ files (system rights still apply).\nDefault value: false. This option\
              \ can be set to 'null' to clear the default value."
            position: 1
            name: null.
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jemultiplexer\
            \ [options]\n\n\tFastq files demultiplexer for in-line barcoded Illumina\
            \ Fastq files.\n\tInput fastq files can be in gzip compressed (end in\
            \ .gz). \n\tBy default output files are gzipped and have names following\
            \ the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]' unless\
            \ you gave file\n\t names to use within the barcode description file.\n\
            Example:\n\t je demultiplex F1=fastq_1.txt.gz BF=barcodes.bs O=/path/to/jemultiplexer-results/\
            \ \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                      \
            \      Displays options specific to this tool.\n\n--stdhelp\n-H      \
            \                      Displays options specific to this tool AND options\
            \ common to all Picard command line \n                              tools.\n\
            \n--version                     Displays program version.\n\nFASTQ_FILE1=File\n\
            F1=File                       Input fastq file (optionally gzipped) for\
            \ single end data, or first read in paired end \n                    \
            \          data.\n                                Required. \n\nFASTQ_FILE2=File\n\
            F2=File                       Input fastq file (optionally gzipped) for\
            \ the second read of paired end data.\n                              \
            \  Default value: null. \n\nBARCODE_FILE=File\nBF=File               \
            \        Barcode file describing sequence list and sample names. Tab-delimited\
            \ file with 2 \n                              columns, with the sample\
            \ in col1 and the corresponding barcode in col2.\n                   \
            \           Simple barcode file format : 2 tab-delimited colums\n    \
            \                          \tIf multiple barcode map to the same sample,\
            \ either line can be duplicated e.g.\n                              \t\
            \tsample1\tATAT\n                              \t\tsample1\tGAGG\n   \
            \                           \t\tsample2\tCCAA\n                      \
            \        \t\tsample2\tTGTG\n                              \tOr barcodes\
            \ can be combined using the OR operator '|' i.e. the file above can be\
            \ \n                              re-written like\n                  \
            \             \t\tsample1\tATAT|GAGG\n                              \t\
            \tsample2\tCCAA|TGTG\n                              \tFinally, for the\
            \ special situation of paired-end data in which barcodes differ at both\
            \ \n                              ends (ie BPOS=BOTH BRED=false BM=BOTH\
            \ , see BRED option description), barcodes for read_1 \n             \
            \                 and read_2 can be distinguished using a ':' separator\
            \ i.e. \n                              \t\tsample1\tATAT:GAGG\n      \
            \                        \t\tsample2\tCCAA:TGTG\n                    \
            \          \tThis above syntax means that sample 1 is encoded with ATAT\
            \ barcode at read_1 AND GAGG \n                              barcode at\
            \ read_2. Note that you can still combine barcodes using | e.g. \n   \
            \                           \t\tsample1\tATAT|GAGG:CCAA|TGTG\n       \
            \                       \twould mean that sample 1 is mapped by the combination\
            \ of barcode: ATAT OR GAGG at read_1 \n                              AND\
            \ CCAA OR TGTG at read_2.\n                              Extended barcode\
            \ file format : 3 (single-end) or 4 (paired-end) tab-delimited colums\n\
            \                              \tsame as the simple barcode file format\
            \ but the extra columns contains the file name(s) \n                 \
            \             to use to name output files. A unique extra column is expected\
            \ for single-end while 2 \n                              extra columns\
            \ are expected for paired-end. In case, lines are duplicated (multiple\
            \ \n                              barcodesmapping the same sample), the\
            \ same file name should be indicated in the third \n                 \
            \             (and fourth) column(s). \n                             \
            \ \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n                  \
            \            \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n       \
            \                       \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n\
            \                              \tOr\n                              \t\t\
            sample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n   \
            \                           Ns in barcode sequence are allowed and are\
            \ used to flag positions that should be ignored \n                   \
            \           in sample matching \n                              \t i.e.\
            \ they will be clipped off the read sequence (like in iCLIP protocol).\
            \  Required.  \n                              Cannot be used in conjuction\
            \ with option(s) USE_EMBASE (EM)\n\nBARCODE_READ_POS=BarcodePosition\n\
            BPOS=BarcodePosition          For paired-end data, where to expect the\
            \ barcode(s) :\n                              \t * READ_1 (beginning of\
            \ read from FASTQ_FILE_1), \n                               \t * READ_2\
            \ (beginning of read from FASTQ_FILE_2),\n                           \
            \   \t * BOTH (beginning of both reads).\n                           \
            \   Automatically set to READ_1 in single end mode.\n                \
            \                Default value: BOTH. This option can be set to 'null'\
            \ to clear the default value. \n                              Possible\
            \ values: {READ_1, READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String  \
            \                  Length of the barcode sequences, optional. Taken from\
            \ barcode file when not given.\n                              In situations\
            \ where BARCODE_READ_POS == BOTH AND REDUNDANT_BARCODES=false, two distinct\
            \ \n                              length can be provided using the syntax\
            \ LEN=X:Z where X and Z are 2 integers representing \n               \
            \               the barcode length for read_1 and read_2 respectively.\n\
            \                                Default value: null. \n\nBARCODE_FOR_SAMPLE_MATCHING=BarcodePosition\n\
            BM=BarcodePosition            Indicates which barcode(s) should be used\
            \ for sample lookup\n                              Automatically set to\
            \ READ_1 in single end mode. \n                              For paired-end\
            \ data and when BARCODE_READ_POS == BOTH, which barcode should be used\
            \ to \n                              resolve sample :\n              \
            \                \t- use BM=READ_1 (beginning of read from FASTQ_FILE_1)\
            \ if only this read should be used \n                              for\
            \ sample matching,\n                              \t- use BM=READ_2 (beginning\
            \ of read from FASTQ_FILE_2) if only this read should be used \n     \
            \                         for sample matching,\n                     \
            \         \t- use BM=BOTH (beginning of both reads) if both should be\
            \ used \n                              When BM=BOTH, the behaviour is\
            \ different based on the value of REDUNDANT_BARCODES : \n            \
            \                  \t\tIf REDUNDANT_BARCODES=true, the two barcodes are\
            \ considered to map to the same sample \n                            \
            \  and 'Je demultiplex' uses the two barcodes according to the STRICT\
            \ value.\n                              \t\tIf REDUNDANT_BARCODES=false,\
            \ the barcode file should map a couple of barcode to each \n         \
            \                     sample (e.g. sample1 => AGAGTG:TTGATA) and 'Je demultiplex'\
            \ needs both barcodes to find \n                              the relevant\
            \ sample. Note that this is the only situation in which all barcode matching\
            \ \n                              options (MM, MMD, Q) accept different\
            \ values for both barcodes in the form X:Z where X \n                \
            \              and Z are 2 integers.\n                               \
            \ Default value: BOTH. This option can be set to 'null' to clear the default\
            \ value. \n                              Possible values: {READ_1, READ_2,\
            \ BOTH, NONE} \n\nREDUNDANT_BARCODES=Boolean\nBRED=Boolean           \
            \       This option only applies for paired-end data with BARCODE_READ_POS\
            \ set to 'BOTH'\n                              Indicates if both read's\
            \ barcodes encode redundant information or if barcodes are \n        \
            \                      supposed to be identical at both ends (or to resolve\
            \ to the same sample when a pool of \n                              barcodes\
            \ is used per sample).\n                               \tWhen REDUNDANT_BARCODES=false,\
            \ the 2 barcodes potentially encode\n                               different\
            \ information. For example, only one of the barcodes encodes the sample\
            \ identity \n                              while \n                  \
            \            the second barcode might be a random barcode (UMI) to tell\
            \ apart PCR artefacts from real \n                              duplicates.\n\
            \                              Another example is when both barcodes should\
            \ be used in a combined fashion to resolve the \n                    \
            \          sample.\n                              In the first example,\
            \ you should use BPOS=BOTH BRED=false BM=READ_1.\n                   \
            \           In the second example, you should have BPOS=BOTH BRED=false\
            \ BM=BOTH. \n                              Note that with BPOS=BOTH BRED=true\
            \ BM=BOTH, the behavior would be different as \n                     \
            \         'demultiplex' would then check the STRICT option to perform\
            \ sample resolution.\n                              Importantly, when\
            \ BARCODE_READ_POS (BPOS) == BOTH AND REDUNDANT_BARCODES=false, BLEN,\
            \ \n                              barcode matching options (MM, MMD, Q)\
            \ and read trimming/clipping options (XT, ZT) accept \n              \
            \                different values for both barcodes in the form X:Z where\
            \ X and Z are 2 integers.\n                                Default value:\
            \ true. This option can be set to 'null' to clear the default value. \n\
            \                              Possible values: {true, false} \n\nSTRICT=Boolean\n\
            S=Boolean                     For paired-end data and when two distinct\
            \ barcodes/indices are used to encode samples,\n                     \
            \          this option tells if both barcodes should resolve to the same\
            \ sample.\n                               When true and if only one of\
            \ the two reads has a barcode match, the read pair is \n             \
            \                 'unassigned'.\n                               When false\
            \ and if only one of the two reads has a barcode match, the read pair\
            \ is \n                              assigned to the\n               \
            \                corresponding sample\n                              When\
            \ reads resolve to different samples, the read pair is always 'unassigned'.\n\
            \                                Default value: false. This option can\
            \ be set to 'null' to clear the default value. \n                    \
            \          Possible values: {true, false} \n\nMAX_MISMATCHES=String\n\
            MM=String                     Maximum mismatches for a barcode to be considered\
            \ a match. In situations where both \n                              barcodes\
            \ are used for sample matching i.e. BPOS=BOTH BM=BOTH (or 2 INDEX_FILE\
            \ given), two \n                              distinct\n             \
            \                  values can be given here using the syntax MM=X:Z where\
            \ X and Z are 2 integers to use for \n                              read_1\
            \ and read_2 respectively.\n                              MM=null is like\
            \ MM=0\n                                Default value: 1. This option\
            \ can be set to 'null' to clear the default value. \n\nMIN_MISMATCH_DELTA=String\n\
            MMD=String                    Minimum difference between the number of\
            \ mismatches against the best and the second best \n                 \
            \             barcode. When MMD is not respected, the read remains unassigned.\n\
            \                              When two distinct barcodes are used for\
            \ sample matching (dual encoding), two distinct \n                   \
            \           values can be given using the syntax MMD=X:Z where X and Z\
            \ are 2 integers to use for \n                              first (e.g.\
            \ from read_1 or index_1)\n                              MMD=null is like\
            \ MMD=0\n                                Default value: 1. This option\
            \ can be set to 'null' to clear the default value. \n\nMIN_BASE_QUALITY=String\n\
            Q=String                      Minimum base quality during barcode matching:\
            \ bases which quality is less than this \n                           \
            \   cutoff are always considered as a mismatch.When two distinct barcodes\
            \ are used for sample \n                              matching (dual encoding),\
            \ two distinct values can be given using the syntax Q=X:Z where X \n \
            \                             and Z are 2 integers to use for first (e.g.\
            \ from read_1 or index_1) and second barcode \n                      \
            \        (e.g. from read_2 or index_2) respectively.\n               \
            \               Q=null is like Q=0.\n                                Default\
            \ value: 10. This option can be set to 'null' to clear the default value.\
            \ \n\nXTRIMLEN=String\nXT=String                     Optional extra number\
            \ of base to be trimmed right after the barcode (only used if \n     \
            \                         CLIP_BARCODE=true). \n                     \
            \         When running paired-end, two distinct values can be given using\
            \ the syntax XT=X:Z where X \n                              and Z are\
            \ 2 integers to use for read_1 and read_2 respectively. Note that even\
            \ when \n                              BPOS=READ_1 or BPOS=READ_2, a X:Y\
            \ synthax can be given to trim the read w/o barcode as to \n         \
            \                     end up with reads of the same length (note that\
            \ this can also be operated using ZT). If a \n                       \
            \       unique value is given, e.g. XT=1, while running paired-end the\
            \ following rule applies :\n                               \t(1) BPOS=READ_1\
            \ or BPOS=READ_2, no trim is applied at the read w/o barcode \n      \
            \                        \t(2) BPOS=BOTH, the value is used for both reads.\n\
            \                              Note that XT=null is like XT=0.\n     \
            \                           Default value: 0. This option can be set to\
            \ 'null' to clear the default value. \n\nZTRIMLEN=String\nZT=String  \
            \                   Optional extra number of bases to be trimmed from\
            \ the read end i.e. 3' end.\n                              When running\
            \ paired-end, two distinct values can be given here using the syntax ZT=X:Z\
            \ \n                              where X and Z are 2 integers to use\
            \ for read_1 and read_2 respectively. Note that even \n              \
            \                when BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be\
            \ given to trim the read w/o barcode \n                              as\
            \ to end up with reads of the same length (note that this can also be\
            \ operated using \n                              XT). Note that if a single\
            \ value is passed, the value always applies to both reads in \n      \
            \                        paired-end mode without further consideration.\n\
            \                              ZT=null is like ZT=0.\n               \
            \                 Default value: 0. This option can be set to 'null' to\
            \ clear the default value. \n\nCLIP_BARCODE=Boolean\nC=Boolean       \
            \              Clip barcode sequence from read sequence, as well as XTRIMLEN\
            \ (and ZTRIMLEN) bases if \n                              applicable,\
            \ before writing to output file.\n                               If false,\
            \ reads are written without modification to output file. \n          \
            \                    Apply to both barcodes when BPOS=BOTH.\n        \
            \                        Default value: true. This option can be set to\
            \ 'null' to clear the default value. \n                              Possible\
            \ values: {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean\
            \                   Add barcode at the end of the read header. Apply to\
            \ both barcodes when BPOS=BOTH.\n                              \tIf true,\
            \ the string ':barcode' is added at the end of the read header with a\
            \ ':' added \n                              only if current read header\
            \ does not end with ':'.\n                              \tIf both reads\
            \ of the pair have a barcode (i.e. BARCODE_READ_POS == BOTH), thenthe\
            \ second \n                              read also has its own matched\
            \ barcode written. Else, the read without a barcode receives \n      \
            \                        the barcode from the barcoded read.\n       \
            \                       \tFor example :\n                            \
            \  \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:'\n           \
            \                   \tbecomes\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
            \ 2:N:0:BARCODE'\n                              \n                   \
            \           \tWhen barcodes containing random positions, i.e. 'N', (for\
            \ example like \tin the iCLIP \n                              protocol)\
            \ or are UMIs, the added sequence is the sequence clipped from the read\
            \ and NOT \n                              the matched barcode.\n     \
            \                           Default value: true. This option can be set\
            \ to 'null' to clear the default value. \n                           \
            \   Possible values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\n\
            SAME_HEADERS=Boolean          Makes sure that headers of both reads of\
            \ a pair are identical, using the following read \n                  \
            \            header pattern (for both reads of a pair) :\n           \
            \                   \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 SAMPLEBARCODE_READ1:SAMPLEBARCODE_READ2(if\
            \ \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2This\
            \ option only makes sense in \n                              paired end\
            \ mode and ADD=true. Some (if not all) mappers will indeed complain when\
            \ the \n                              read headers are not identical.\
            \ When molecular barcodes are present in reads (either as \n         \
            \                     additional barcodes or as degenerate barcodes ie\
            \ with 'N') and the RCHAR is used, you \n                            \
            \  will end with (problematic) read headers like this :\n            \
            \                  \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
            \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
            \                              SAME_HEADERS=true will instead generates\
            \ the following identical header for both reads :\n                  \
            \            \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
            \                              \tNote that we also clipped the useless\
            \ '1:N:0' and '3:N:0' has they will also result in \n                \
            \              generating different headers.\n                       \
            \       \t\t Important : this option will force RCHAR=: UNLESS you specify\
            \ RCHAR=null ; in which \n                              case a space will\
            \ be preserved ie : \n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994\
            \ TAGAACAC:TGGAGTAG:CGTTGTAT\n                                Default\
            \ value: true. This option can be set to 'null' to clear the default value.\
            \ \n                              Possible values: {true, false} \n\n\
            READ_NAME_REPLACE_CHAR=String\nRCHAR=String                  Replace spaces\
            \ in read name/header using provided character. This is particularly handy\
            \ \n                              when you need to retain\t ADDed barcode\
            \ in read name/header during mapping (everything \n                  \
            \            after space in read name is usually clipped in BAM files).\t\
            For example, with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
            \ 2:N:0:'\n                              \tbecomes\n                 \
            \             \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
            \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
            V=FastqQualityFormat          A value describing how the quality values\
            \ are encoded in the fastq.  Either 'Solexa' for \n                  \
            \            pre-pipeline 1.3 style scores (solexa scaling + 66), 'Illumina'\
            \ for pipeline 1.3 and \n                              above (phred scaling\
            \ + 64) or 'Standard' for phred scaled scores with a character shift \n\
            \                              of 33.  If this value is not specified\
            \ (or 'null' is given), the quality format will be \n                \
            \              detected.\n                                Default value:\
            \ Standard. This option can be set to 'null' to clear the default value.\
            \ \n                              Possible values: {Solexa, Illumina,\
            \ Standard} \n\nOUTPUT_DIR=File\nO=File                        Output\
            \ directory. By default, output files are written in running directory.\n\
            \                                Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
            UN=Boolean                    Should un-assigned reads be saved in files\
            \ or simply ignored. File names are \n                              automatically\
            \ created or can be given using UF1 & UF2 options.\n                 \
            \               Default value: true. This option can be set to 'null'\
            \ to clear the default value. \n                              Possible\
            \ values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\nUF1=String\
            \                    Name of the file in which to write unassigned reads\
            \ from FILE1.Either a name (in which \n                              case\
            \ the file will be created in the output dir) or full path.\n        \
            \                        Default value: unassigned_1.txt. This option\
            \ can be set to 'null' to clear the default \n                       \
            \       value. \n\nUNASSIGNED_FILE_NAME_2=String\nUF2=String         \
            \           Name of the file in which to write unassigned reads from FILE2.Either\
            \ a name (in which \n                              case the file will\
            \ be created in the output dir) or full path.\n                      \
            \          Default value: unassigned_2.txt. This option can be set to\
            \ 'null' to clear the default \n                              value. \n\
            \nMETRICS_FILE_NAME=String\nM=String                      File name where\
            \ to write demultiplexing statistics. Either a name (in which case the\
            \ file \n                              will be created in the output dir)\
            \ or an absolute path.\n                                Default value:\
            \ jemultiplexer_out_stats.txt. This option can be set to 'null' to clear\
            \ \n                              the default value. \n\nBARCODE_DIAG_FILE=String\n\
            DIAG=String                   Name for a barcode match reporting file\
            \ (not generated by default).Either a name (in \n                    \
            \          which case the file will be created in the output dir) or full\
            \ path. This file will \n                              contain a line\
            \ per read pair with the barcode best matching the read subsequence or\
            \ \n                              'null' when no match is found according\
            \ to matching parameters ; and the final selected \n                 \
            \             sample. This file is useful for debugging or further processing\
            \ in case both ends are \n                              barcoded.\n  \
            \                            N.B: this file will have a size of about\
            \ one of the fastq input files.  Default value: \n                   \
            \           null. \n\nFORCE=Boolean                 Allows to overwrite\
            \ existing files (system rights still apply).\n                      \
            \          Default value: false. This option can be set to 'null' to clear\
            \ the default value. \n                              Possible values:\
            \ {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                 \
            \   Compress output files using gzip.\n                              \
            \  Default value: true. This option can be set to 'null' to clear the\
            \ default value. \n                              Possible values: {true,\
            \ false} \n\nFASTQ_FILE_EXTENSION=String   Change the default extension\
            \ of created fastq files, eg 'fastqsanger'. By default uses \n       \
            \                       the file extension from input fastq file. If result\
            \ file names are given in the barcode \n                             \
            \ file, this option is only used to adapt the unassigned file names. When\
            \ using \n                              compression, a .gz is always appended\
            \ to file names and should not be specified in \n                    \
            \          FASTQ_FILE_EXTENSION i.e. \n                              use\
            \ FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n \
            \                               Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
            ASYNC=Boolean                 Use one thread per Fastq Writer.\n     \
            \                           Default value: true. This option can be set\
            \ to 'null' to clear the default value. \n                           \
            \   Possible values: {true, false} \n\nSTATS_ONLY=Boolean            Only\
            \ produces metric and diagnostic reports i.e. no output fastq file produced.\n\
            \                                Default value: false. This option can\
            \ be set to 'null' to clear the default value. \n                    \
            \          Possible values: {true, false} \n\nUSE_EMBASE=Boolean\nEM=Boolean\
            \                    Enables emBASE mode i.e fetch information from emBASE\
            \ and place demultiplexed files \n                              directly\
            \ in emBASE repository structure.\n                              This\
            \ option is mutually exclusive with BARCODE_FILE.\n                  \
            \            Note : this option forces O=null GZ=true UN=true UF1=null\
            \ UF2=null STATS_ONLY=false (all \n                              other\
            \ user options supported).\n                                Default value:\
            \ false. This option can be set to 'null' to clear the default value.\
            \ \n                              Possible values: {true, false}  Cannot\
            \ be used in conjuction with option(s) BARCODE_FILE \n               \
            \               (BF)\n\n"
          generated_using: *id004
        - !Command
          command: *id006
          positional:
          - !Positional
            description: ''
            position: 0
            name: Jeclipper
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jeclipper [options]\n\
            \nReads records in the supplied FASTQ file(s) according to specified read\
            \ layouts (RL option) and write output FASTQ file(s) according to supplied\
            \ output layouts (OL option).\n\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n\
            -h                            Displays options specific to this tool.\n\
            \n--stdhelp\n-H                            Displays options specific to\
            \ this tool AND options common to all Picard command line \n         \
            \                     tools.\n\n--version                     Displays\
            \ program version.\n\nFASTQ=File\nF=File                        Input\
            \ fastq file (optionally gzipped)  Default value: null. This option must\
            \ be specified \n                              at least 1 times. \n\n\
            READ_LAYOUT=String\nRL=String                     Describes the read layout(s)\
            \ e.g. 'RL=<BARCODE1:6><SAMPLE:x>' of input fastq file(s). The \n    \
            \                          input fastq files and read layouts are mached\
            \ up by order on the command line.\n                              Read\
            \ layouts are only needed for complex layouts but one must provide read\
            \ layouts for \n                              ALL or NONE of the input\
            \ fastq files.\n                              Read layouts are made of\
            \ <UMIn:X>, <BARCODEn:X>, <SAMPLEn:X> blocks to describe blocks of \n\
            \                              type UMI, BARCODE or SAMPLE with : \n \
            \                                 * 'n' the unique block index (an index\
            \ must be unique across all read layouts for \n                      \
            \        each index or each block type), use the same index to specify\
            \ redundant blocks e.g. use \n                              <BARCODE1:6>\
            \ in two different layouts to specify that the barcode found in both reads\
            \ are \n                              the same\n                     \
            \            * 'X' : either a number indicating the length of the UMI,\
            \ BARCODE or SAMPLE block or a \n                              negative\
            \ number e.g. -2 to specify the last 2 bases should be ignored/clipped)\
            \ or the \n                              letter 'x' to specify to take\
            \ the sequence till the end of read. Importantly, the 'x' or \n      \
            \                        negative length shotcut can only be used in the\
            \ last block of a read layout (i.e. \n                              <BARCODE1:x><SAMPLE1:20>\
            \ is not allowed)\n                              \n                  \
            \              Default value: null. This option may be specified 0 or\
            \ more times. \n\nOUTPUT_LAYOUT=String\nOL=String                    \
            \ Describes the output file layout(s) using the slots defined in read\
            \ layouts and ':' to \n                              delimitate three\
            \ parts e.g. 'OL=1::' : \n                              \t1.The number\
            \ in the first part (i.e. from '1:' above) is the output file index and\
            \ it \n                              must be unique across all 'OL' inputs.\
            \ Inferred from order in comamnd line when not given\n               \
            \               \t2.The second part (i.e. '' above) is the read header\
            \ layout ; when writing multiple UMI \n                              and\
            \ BARCODE slots in output read headers, these are always separated with\
            \ the RCHAR (':' \n                              by defaults).\n     \
            \                         \t3.The third part (i.e. '' above) is the read\
            \ sequence layout.\n                                Default value: null.\
            \ This option may be specified 0 or more times. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
            WQ=Boolean                    Should quality string also be injected in\
            \ read names. Only applies to READBAR and UMI \n                     \
            \         described in the read name slot of output layout \n        \
            \                      If turned on, the quality string is translated\
            \ into 2 digits number and a e.g. UMI will \n                        \
            \      look like\n                              \t '...:ATGCAT333423212322:...'\
            \ instead of '...:ATGCAT:...'\n                              This option\
            \ is particularly useful with the retag module that knows how to extract\
            \ \n                              quality numbers into BAM tags.  Default\
            \ value: false. This option can be set to 'null' to \n               \
            \               clear the default value. Possible values: {true, false}\
            \ \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\nOWID=Boolean        \
            \          Should the output layout number (output layout first slot)\
            \ be injected in the filename ?\n                              Only used\
            \ in absence of explicit file names in the barcode file.\n           \
            \                     Default value: true. This option can be set to 'null'\
            \ to clear the default value. \n                              Possible\
            \ values: {true, false} \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
            OWHL=Boolean                  Should the output layout used for the read\
            \ name (output layout second slot,in short \n                        \
            \      format) be injected in the filename ? When true, each ouput file\
            \ name contains e.g. \n                              '_B1U1' for OL='1::'\
            \  \n                              Only used in absence of explicit file\
            \ names in the barcode file.\n                                Default\
            \ value: false. This option can be set to 'null' to clear the default\
            \ value. \n                              Possible values: {true, false}\
            \ \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWSL=Boolean   \
            \               Should the output layout used for the read sequence (output\
            \ layout third slot, in short \n                              format)\
            \ be injected in the filename ?When true, each ouput file name contains\
            \ e.g. '_S1' \n                              for OL='1::'  \n        \
            \                      Only used in absence of explicit file names in\
            \ the barcode file.\n                                Default value: false.\
            \ This option can be set to 'null' to clear the default value. \n    \
            \                          Possible values: {true, false} \n\nOUTPUT_DIR=File\n\
            O=File                        Output directory. By default, output files\
            \ are written in running directory.\n                                Default\
            \ value: null. \n\nFORCE=Boolean                 Allows to overwrite existing\
            \ files (system rights still apply).\n                               \
            \ Default value: false. This option can be set to 'null' to clear the\
            \ default value. \n                              Possible values: {true,\
            \ false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                    Compress\
            \ output files using gzip.\n                                Default value:\
            \ true. This option can be set to 'null' to clear the default value. \n\
            \                              Possible values: {true, false} \n\nREAD_NAME_SEPARATOR_CHAR=String\n\
            SEP=String                    Separator character used to concatenate\
            \ barcodes and umis in read header\n                                Default\
            \ value: :. This option can be set to 'null' to clear the default value.\
            \ \n\nQUALITY_FORMAT=FastqQualityFormat\nV=FastqQualityFormat        \
            \  A value describing how the quality values are encoded in the fastq\
            \ files.  Either \n                              'Solexa' for pre-pipeline\
            \ 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline \n \
            \                             1.3 and above (phred scaling + 64) or 'Standard'\
            \ for phred scaled scores with a character \n                        \
            \      shift of 33.  If this value is not specified (or 'null' is given),\
            \ the quality format is \n                              assumed to be\
            \ will the 'Standard' for phred scale.\n                             \
            \   Default value: null. Possible values: {Solexa, Illumina, Standard}\
            \ \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\nTEST=Boolean             \
            \     test mode ie code execution stops right before read demultiplexing\
            \ starts btu after \n                              comamnd line validation\
            \  Default value: false. This option can be set to 'null' to clear \n\
            \                              the default value. Possible values: {true,\
            \ false} \n\nFASTQ_FILE_EXTENSION=String   Change the default extension\
            \ of created fastq files, eg 'fastqsanger'. By default uses \n       \
            \                       the file extension from input fastq file. If result\
            \ file names are given in the barcode \n                             \
            \ file, this option is only used to adapt the unassigned file names. When\
            \ using \n                              compression, a .gz is always appended\
            \ to file names and should not be specified in \n                    \
            \          FASTQ_FILE_EXTENSION i.e. \n                              use\
            \ FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n \
            \                               Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
            ASYNC=Boolean                 Use one thread per Fastq Writer.\n     \
            \                           Default value: true. This option can be set\
            \ to 'null' to clear the default value. \n                           \
            \   Possible values: {true, false} \n\n"
          generated_using: *id004
        - !Command
          command: *id007
          positional:
          - !Positional
            description: 'Counting starts at 1 and negative numbers can be used to
              start counting from the end '
            position: 0
            name: header.
            optional: false
          - !Positional
            description: "a hyphen ('-'). The order of concatenation follows the order\
              \ of UMI_SLOT in the command "
            position: 0
            name: using
            optional: false
          - !Positional
            description: 'For example, consider the following read name that lists
              3 different sequence codes in '
            position: 1
            name: line.
            optional: false
          - !Positional
            description: 'ACTCTAC,TCTGTAC,ACTGTAG  '
            position: 0
            name: ACTGTAC
            optional: false
          - !Positional
            description: 'RGPG=String                   Read Group program group;
              only considered when RG=true  Default value: null. '
            position: 0
            name: null.
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: TagFromReadName\
            \ [options]\n\nExtracts barcode and UMI sequence(s) embedded in read names\
            \ and tag reads with proper BAM tag.\nVersion: 2.0.RC\n\n\nOptions:\n\n\
            --help\n-h                            Displays options specific to this\
            \ tool.\n\n--stdhelp\n-H                            Displays options specific\
            \ to this tool AND options common to all Picard command line \n      \
            \                        tools.\n\n--version                     Displays\
            \ program version.\n\nINPUT=File\nI=File                        Input\
            \ SAM/BAM file  Required. \n\nOUTPUT=File\nO=File                    \
            \    Output SAM/BAM file  Required. \n\nBC_SLOT=Integer              \
            \ Where to find the BARCODE(s) in the read name once read name has been\
            \ tokenized using the \n                              SPLIT character\
            \ (e.g. ':'). \n                              This option can be specified\
            \ multiple time when multiple BARCODES are present in read \n        \
            \                      header.\n                              Counting\
            \ starts at 1 and negative numbers can be used to start counting from\
            \ the end \n                              (last token is '-1').\n    \
            \                          BARCODE(s) extracted from read name are used\
            \ to assemble a 'BC:Z:GATCCTAG' tag (BC is \n                        \
            \      default, see BC_TAG). \n                              Following\
            \ SAM specifications, in the case of multiple barcodes, all the barcodes\
            \ are \n                              concatenated using \n          \
            \                    a hyphen ('-') between the barcodes. The order of\
            \ concatenation follows the order of \n                              BC_SLOT\
            \ in the command line.\n                              For example, consider\
            \ the following read name that lists 3 different barcodes in the end \n\
            \                              : \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
            \ \n                              \t to indicate that the three slots\
            \ contain barcodes, use \n                              \t\t BC_SLOT=-1\
            \ BC_SLOT=-2 BC_SLOT=-3 ; which will result as BC:Z:AAGGTACG-GATCCTAG-CGATGTTT\n\
            \                              \t if only the 2 last ones should be considered,\
            \ use \n                              \t\t BC_SLOT=-1 BC_SLOT=-2 ; which\
            \ will result as BC:Z:AAGGTACG-GATCCTAG\t Note that BC_SLOT \n       \
            \                       order matters as : \n                        \
            \      \t\t BC_SLOT=-2 BC_SLOT=-1 ; would result as BC:Z:GATCCTAG-AAGGTACG\
            \  Default value: null. \n                              This option may\
            \ be specified 0 or more times. \n\nUMI_SLOT=Integer              Where\
            \ to find the UMI(s) in the read name once read name has been tokenized\
            \ using the \n                              SPLIT character (e.g. ':').\
            \ \n                              This option can be specified multiple\
            \ time when multiple UMIs are present in read header.\n              \
            \                Counting starts at 1 and negative numbers can be used\
            \ to start counting from the end \n                              (last\
            \ token is '-1').\n                              UMI(s) extracted from\
            \ read name are used to assemble both a RX and OX tag e.g. \n        \
            \                      'RX:Z:GATCCTAG' tag. \n                       \
            \       Following SAM specifications, in the case of multiple UMIs, all\
            \ the UMIs are concatenated \n                              using \n \
            \                             a hyphen ('-'). The order of concatenation\
            \ follows the order of UMI_SLOT in the command \n                    \
            \          line.\n                              For example, consider\
            \ the following read name that lists 3 different sequence codes in \n\
            \                              the end : \n                          \
            \    \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
            \ \n                              \t to indicate that the 2 last slots\
            \ contain UMIs, use \n                              \t\t UMI_SLOT=-1 UMI_SLOT=-2\
            \ ; which will result as RX:Z:AAGGTACG-GATCCTAG\t Note that \n       \
            \                       UMI_SLOT order matters as : \n               \
            \               \t\t UMI_SLOT=-2 UMI_SLOT=-1 ; would result as RX:Z:GATCCTAG-AAGGTACG\
            \  Default value: null. \n                              This option may\
            \ be specified 0 or more times. \n\nCLUSTERED_CODES_FILE=File\nCC=File\
            \                       Group of barcodes (clusters) for on-the-fly correction\
            \ of the BARCODEs. This file \n                              contains\
            \ mapping between the barcodes sequences\n                           \
            \   as originally found in the FASTQ reads (and in the read name of the\
            \ input BAM) and the \n                              corrected sample\
            \ barcode\n                              sequences (e.g. as identified\
            \ by clustering with mismatches using tools like starcode or \n      \
            \                        vsearch ) \n                              that\
            \ should be written in the BC tag in place of the original sequence.\n\
            \                              If provided, the BARCODE sequence(s) extracted\
            \ from read name are converted to the 'real' \n                      \
            \        barcodes according\n                              to the mapping\
            \ described in this file. If the sequence is not found in the supplied\
            \ \n                              mapping file, the read is either\n \
            \                             trashed or kept (according to option KEEP_UNASSIGNED_BARCODES),\
            \ in which case the value \n                              defined by UNASSIGNED_BARCODE_VALUE\n\
            \                              is used.\n                            \
            \  Format: two column text file, one cluster per line with the real barcode\
            \ in the first \n                              line and the comma separated\n\
            \                              list of codes in the second column i.e.\
            \ :\n                              \t\t ACTGTAC \tACTCTAC,TCTGTAC,ACTGTAG\
            \  \n                              All the codes MUST have the same length\
            \  Default value: null. \n\nKEEP_UNASSIGNED_BARCODES=Boolean\nKUP=Boolean\
            \                   Should read be keep when no mapping was defined for\
            \ the orginal barcode sequence in \n                              provided\
            \ CLUSTERED_CODES_FILE.\n                              If false, the read\
            \ is not written in output file.  Default value: true. This option can\
            \ \n                              be set to 'null' to clear the default\
            \ value. Possible values: {true, false} \n\nUNASSIGNED_BARCODE_VALUE=String\n\
            UBV=String                    Value to use for the BARCODE tag when CLUSTERED_CODES_FILE\
            \ was provided and no mapping \n                              was defined\
            \ for the orginal barcode sequence.  Default value: NA. This option can\
            \ be set \n                              to 'null' to clear the default\
            \ value. \n\nTRIM_HEADERS=Boolean\nT=Boolean                     Should\
            \ barcode/UMIs information be removed from read names in the output BAM\
            \ ?   Default \n                              value: false. This option\
            \ can be set to 'null' to clear the default value. Possible \n       \
            \                       values: {true, false} \n\nTSLOTS=Integer\nTSLOTS=Integer\
            \                Where to find *all* barcode(s) and UMIs in the read name\
            \ once has been tokenized using \n                              the SPLIT\
            \ character (e.g. ':'). \n                              This option is\
            \ only considered when TRIM_HEADERS=true and should only be used when\
            \ \n                              UMI_SLOT and BC_SLOT do not\n      \
            \                        describe all the slots that should be trimmed.\
            \ When TSLOTS is ommited while \n                              TRIM_HEADERS=true,\
            \ the values\n                              of UMI_SLOT and BC_SLOT apply.\n\
            \                              IMPORTANT : counting starts at 1 and negative\
            \ numbers can be used to start counting from \n                      \
            \        the end.\n                              See UMI_SLOT help for\
            \ examples.  Default value: null. This option may be specified 0 or \n\
            \                              more times. \n\nSPLIT_CHAR=String\nSPLIT=String\
            \                  Character to use to split up the read header line,\
            \ default is ':'.  Default value: :. \n                              This\
            \ option can be set to 'null' to clear the default value. \n\nBC_TAG=String\
            \                 SAM Tag to use to store barcode(s) sequences extracted\
            \ from barcode slots (BC by \n                              default).\
            \ Do not change unless you have good reasons to.  Default value: BC. This\
            \ option \n                              can be set to 'null' to clear\
            \ the default value. \n\nQT_TAG=String                 SAM Tag to use\
            \ to store barcode(s) quality score extracted from barcode slots (QT by\
            \ \n                              default). Do not change unless you have\
            \ good reasons to.  Default value: QT. This option \n                \
            \              can be set to 'null' to clear the default value. \n\nWITH_RX=Boolean\
            \               Should the RX (and QX when relevant) SAM Tag(s) be used\
            \ to store UMI(s) sequence (and \n                              quality)\
            \ extracted from UMI slots. Set to FALSE if you don't want these tags\
            \ to be set.   \n                              Default value: true. This\
            \ option can be set to 'null' to clear the default value. \n         \
            \                     Possible values: {true, false} \n\nWITH_OX=Boolean\
            \               Should the OX (and BZ when relevant) SAM Tag(s) be used\
            \ to store UMI(s) sequence (and \n                              quality)\
            \ extracted from UMI slots. Set to FALSE if you don't want these tags\
            \ to be set.   \n                              Default value: true. This\
            \ option can be set to 'null' to clear the default value. \n         \
            \                     Possible values: {true, false} \n\nUMI_SEQ_TAG=String\
            \            SAM Tag to use to store original UMI(s) sequence extracted\
            \ from UMI slots (instead of RX \n                              / OX)\
            \  Default value: null. \n\nUMI_QUAL_TAG=String           SAM Tag to use\
            \ to store original UMI(s) sequence extracted from UMI slots (instead\
            \ of QX \n                              / BZ)  Default value: null. \n\
            \nADD_RG=Boolean\nARG=Boolean                   Should a read group be\
            \ created for each barcode. This option is only considered when \n   \
            \                           providing a CLUSTERED_CODES_FILE.  Default\
            \ value: false. This option can be set to 'null' \n                  \
            \            to clear the default value. Possible values: {true, false}\
            \ \n\nRGPL=String                   Read Group platform (e.g. illumina,\
            \ solid) ; only considered when RG=true  Default value: \n           \
            \                   null. \n\nRGPG=String                   Read Group\
            \ program group; only considered when RG=true  Default value: null. \n\
            \nPROGRAM_RECORD_ID=String\nPG=String                     The program\
            \ record ID for the @PG record(s) created by this program. Set to null\
            \ to \n                              disable PG record creation.  This\
            \ string may have a suffix appended to avoid collision \n            \
            \                  with other program record IDs.  Default value: TagFromReadName.\
            \ This option can be set to \n                              'null' to\
            \ clear the default value. \n\nPROGRAM_GROUP_VERSION=String\nPG_VERSION=String\
            \             Value of VN tag of PG record to be created. If not specified,\
            \ the version will be \n                              detected automatically.\
            \  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
            \             Value of CL tag of PG record to be created. If not supplied\
            \ the command line will be \n                              detected automatically.\
            \  Default value: null. \n\nPROGRAM_GROUP_NAME=String\nPG_NAME=String\
            \                Value of PN tag of PG record to be created.  Default\
            \ value: TagFromReadName. This option \n                             \
            \ can be set to 'null' to clear the default value. \n\nCOMMENT=String\n\
            CO=String                     Comment(s) to include in the output file's\
            \ header.  Default value: null. This option may \n                   \
            \           be specified 0 or more times. \n\n"
          generated_using: *id004
        - !Command
          command: *id008
          positional:
          - !Positional
            description: 'Required. '
            position: 0
            name: data.
            optional: false
          - !Positional
            description: INDEX_FILE2=File
            position: 0
            name: Required.
            optional: false
          - !Positional
            description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
            position: 0
            name: Or
            optional: false
          - !Positional
            description: 'Indicates if both index barcodes encode redundant information
              i.e. if both barcodes are '
            position: 0
            name: provided.
            optional: false
          - !Positional
            description: 'values can be given here using the syntax MM=X:Z where X
              and Z are 2 integers to use for '
            position: 0
            name: distinct
            optional: false
          - !Positional
            description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'"
            position: 0
            name: becomes
            optional: false
          - !Positional
            description: "Default value: Standard. This option can be set to 'null'\
              \ to clear the default value. "
            position: 0
            name: detected.
            optional: false
          - !Positional
            description: 'N.B: this file will have a size of about one of the fastq
              input files.  Default value: '
            position: 0
            name: barcoded.
            optional: false
          - !Positional
            description: "FORCE=Boolean                 Allows to overwrite existing\
              \ files (system rights still apply).\nDefault value: false. This option\
              \ can be set to 'null' to clear the default value."
            position: 1
            name: null.
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: JemultiplexerIllumina\
            \ [options]\n\n\tFastq files demultiplexer for Illumina Fastq files using\
            \ Illumina Index files.\n\tFastq files (reads and index) can be in gzip\
            \ compressed (end in .gz). \n\tBy default output files are gzipped and\
            \ have names following the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]'\
            \ unless you gave file\n\t names to use within the barcode description\
            \ file.\nExample : \n\t je demultiplex-illu F1=fastq_1.txt.gz I1=index_1.txt.gz\
            \ BF=barcodes.bs O=~/Desktop/test-jemultiplexer2/ \nVersion: 2.0.RC\n\n\
            \nOptions:\n\n--help\n-h                            Displays options specific\
            \ to this tool.\n\n--stdhelp\n-H                            Displays options\
            \ specific to this tool AND options common to all Picard command line\
            \ \n                              tools.\n\n--version                \
            \     Displays program version.\n\nFASTQ_FILE1=File\nF1=File         \
            \              Input fastq file (optionally gzipped) for single end data,\
            \ or first read in paired end \n                              data.\n\
            \                                Required. \n\nFASTQ_FILE2=File\nF2=File\
            \                       Input fastq file (optionally gzipped) for the\
            \ second read of paired end data.\n                                Default\
            \ value: null. \n\nINDEX_FILE1=File\nI1=File                       Fastq\
            \ file for index 1 (barcode) reads, optionally gzipped.\n            \
            \                    Required. \n\nINDEX_FILE2=File\nI2=File         \
            \              Fastq file for index 2 (barcode) reads, optionally gzipped.\n\
            \                              A INDEX_FILE1 MUST be provided when INDEX_FILE2\
            \ is given. This situation corresponds to \n                         \
            \     Illumina dual indexing.\n                                Default\
            \ value: null. \n\nBARCODE_FILE=File\nBF=File                       Barcode\
            \ file describing sequence list and sample names. Tab-delimited file with\
            \ 2 \n                              columns, with the sample in col1 and\
            \ the corresponding barcode in col2.\n                              Simple\
            \ barcode file format : 2 tab-delimited colums\n                     \
            \         \tIf multiple barcode map to the same sample, either line can\
            \ be duplicated e.g.\n                              \t\tsample1\tATAT\n\
            \                              \t\tsample1\tGAGG\n                   \
            \           \t\tsample2\tCCAA\n                              \t\tsample2\t\
            TGTG\n                              \tOr barcodes can be combined using\
            \ the OR operator '|' i.e. the file above can be \n                  \
            \            re-written like\n                               \t\tsample1\t\
            ATAT|GAGG\n                              \t\tsample2\tCCAA|TGTG\n    \
            \                          \tFinally, for the special situation of paired-end\
            \ data in which barcodes differ at both \n                           \
            \   ends (ie BPOS=BOTH BRED=false BM=BOTH , see BRED option description),\
            \ barcodes for read_1 \n                              and read_2 can be\
            \ distinguished using a ':' separator i.e. \n                        \
            \      \t\tsample1\tATAT:GAGG\n                              \t\tsample2\t\
            CCAA:TGTG\n                              \tThis above syntax means that\
            \ sample 1 is encoded with ATAT barcode at read_1 AND GAGG \n        \
            \                      barcode at read_2. Note that you can still combine\
            \ barcodes using | e.g. \n                              \t\tsample1\t\
            ATAT|GAGG:CCAA|TGTG\n                              \twould mean that sample\
            \ 1 is mapped by the combination of barcode: ATAT OR GAGG at read_1 \n\
            \                              AND CCAA OR TGTG at read_2.\n         \
            \                     Extended barcode file format : 3 (single-end) or\
            \ 4 (paired-end) tab-delimited colums\n                              \t\
            same as the simple barcode file format but the extra columns contains\
            \ the file name(s) \n                              to use to name output\
            \ files. A unique extra column is expected for single-end while 2 \n \
            \                             extra columns are expected for paired-end.\
            \ In case, lines are duplicated (multiple \n                         \
            \     barcodesmapping the same sample), the same file name should be indicated\
            \ in the third \n                              (and fourth) column(s).\
            \ \n                              \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
            \                              \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
            \                              \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n\
            \                              \tOr\n                              \t\t\
            sample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n   \
            \                           Ns in barcode sequence are allowed and are\
            \ used to flag positions that should be ignored \n                   \
            \           in sample matching \n                              \t i.e.\
            \ they will be clipped off the read sequence (like in iCLIP protocol).\
            \  Required.  \n                              Cannot be used in conjuction\
            \ with option(s) USE_EMBASE (EM)\n\nBARCODE_READ_POS=BarcodePosition\n\
            BPOS=BarcodePosition          Indicates the location of additional barcodes\
            \ present in the read(s). Setting this option \n                     \
            \         implies setting the LEN option.\n                          \
            \    \tImportantly, these additional barcodes must not encode sample identity\
            \ information but \n                              used for \n        \
            \                      \te.g. molecular barcoding (UMIs) or for any purpose\
            \ other than sample identity encoding.  \n                           \
            \   Default value: BOTH. This option can be set to 'null' to clear the\
            \ default value. \n                              Possible values: {READ_1,\
            \ READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String                   \
            \ Length of the additional barcodes present in the read(s) as indicated\
            \ by the BPOS option. \n                              Two distinct length\
            \ can be provided using the syntax LEN=X:Z where X and Z are 2 integers\
            \ \n                              representing the barcode length for\
            \ read_1 and read_2 respectively.\n                              Only\
            \ relevant when BPOS != NONE.  Default value: null. \n\nREDUNDANT_BARCODES=Boolean\n\
            BRED=Boolean                  This option only applies for paired-end\
            \ data with *both* INDEX_FILE1 and INDEX_FILE2 \n                    \
            \          provided.\n                              Indicates if both\
            \ index barcodes encode redundant information i.e. if both barcodes are\
            \ \n                              supposed to be identical (or resolve\
            \ to the same sample when a pool of barcodes is used \n              \
            \                per sample).\n                               \tWhen BRED=true,\
            \ the STRICT option guides the sample lookup behavior\tWhen BRED=false,\
            \ \n                              barcodes are combined prior to sample\
            \ lookup.\n                                Default value: true. This option\
            \ can be set to 'null' to clear the default value. \n                \
            \              Possible values: {true, false} \n\nSTRICT=Boolean\nS=Boolean\
            \                     For paired-end data and when two distinct barcodes/indices\
            \ are used to encode samples,\n                               this option\
            \ tells if both barcodes should resolve to the same sample.\n        \
            \                       When true and if only one of the two reads has\
            \ a barcode match, the read pair is \n                              'unassigned'.\n\
            \                               When false and if only one of the two\
            \ reads has a barcode match, the read pair is \n                     \
            \         assigned to the\n                               corresponding\
            \ sample\n                              When reads resolve to different\
            \ samples, the read pair is always 'unassigned'.\n                   \
            \             Default value: false. This option can be set to 'null' to\
            \ clear the default value. \n                              Possible values:\
            \ {true, false} \n\nMAX_MISMATCHES=String\nMM=String                 \
            \    Maximum mismatches for a barcode to be considered a match. In situations\
            \ where both \n                              barcodes are used for sample\
            \ matching i.e. BPOS=BOTH BM=BOTH (or 2 INDEX_FILE given), two \n    \
            \                          distinct\n                               values\
            \ can be given here using the syntax MM=X:Z where X and Z are 2 integers\
            \ to use for \n                              read_1 and read_2 respectively.\n\
            \                              MM=null is like MM=0\n                \
            \                Default value: 1. This option can be set to 'null' to\
            \ clear the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String \
            \                   Minimum difference between the number of mismatches\
            \ against the best and the second best \n                            \
            \  barcode. When MMD is not respected, the read remains unassigned.\n\
            \                              When two distinct barcodes are used for\
            \ sample matching (dual encoding), two distinct \n                   \
            \           values can be given using the syntax MMD=X:Z where X and Z\
            \ are 2 integers to use for \n                              first (e.g.\
            \ from read_1 or index_1)\n                              MMD=null is like\
            \ MMD=0\n                                Default value: 1. This option\
            \ can be set to 'null' to clear the default value. \n\nMIN_BASE_QUALITY=String\n\
            Q=String                      Minimum base quality during barcode matching:\
            \ bases which quality is less than this \n                           \
            \   cutoff are always considered as a mismatch.When two distinct barcodes\
            \ are used for sample \n                              matching (dual encoding),\
            \ two distinct values can be given using the syntax Q=X:Z where X \n \
            \                             and Z are 2 integers to use for first (e.g.\
            \ from read_1 or index_1) and second barcode \n                      \
            \        (e.g. from read_2 or index_2) respectively.\n               \
            \               Q=null is like Q=0.\n                                Default\
            \ value: 10. This option can be set to 'null' to clear the default value.\
            \ \n\nXTRIMLEN=String\nXT=String                     Optional extra number\
            \ of base to be trimmed right after the barcode (only used if \n     \
            \                         CLIP_BARCODE=true). \n                     \
            \         When running paired-end, two distinct values can be given using\
            \ the syntax XT=X:Z where X \n                              and Z are\
            \ 2 integers to use for read_1 and read_2 respectively. Note that even\
            \ when \n                              BPOS=READ_1 or BPOS=READ_2, a X:Y\
            \ synthax can be given to trim the read w/o barcode as to \n         \
            \                     end up with reads of the same length (note that\
            \ this can also be operated using ZT). If a \n                       \
            \       unique value is given, e.g. XT=1, while running paired-end the\
            \ following rule applies :\n                               \t(1) BPOS=READ_1\
            \ or BPOS=READ_2, no trim is applied at the read w/o barcode \n      \
            \                        \t(2) BPOS=BOTH, the value is used for both reads.\n\
            \                              Note that XT=null is like XT=0.\n     \
            \                           Default value: 0. This option can be set to\
            \ 'null' to clear the default value. \n\nZTRIMLEN=String\nZT=String  \
            \                   Optional extra number of bases to be trimmed from\
            \ the read end i.e. 3' end.\n                              When running\
            \ paired-end, two distinct values can be given here using the syntax ZT=X:Z\
            \ \n                              where X and Z are 2 integers to use\
            \ for read_1 and read_2 respectively. Note that even \n              \
            \                when BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be\
            \ given to trim the read w/o barcode \n                              as\
            \ to end up with reads of the same length (note that this can also be\
            \ operated using \n                              XT). Note that if a single\
            \ value is passed, the value always applies to both reads in \n      \
            \                        paired-end mode without further consideration.\n\
            \                              ZT=null is like ZT=0.\n               \
            \                 Default value: 0. This option can be set to 'null' to\
            \ clear the default value. \n\nCLIP_BARCODE=Boolean\nC=Boolean       \
            \              Clip barcode sequence from read sequence, as well as XTRIMLEN\
            \ (and ZTRIMLEN) bases if \n                              applicable,\
            \ before writing to output file.\n                               If false,\
            \ reads are written without modification to output file. \n          \
            \                    Apply to both barcodes when BPOS=BOTH.\n        \
            \                        Default value: true. This option can be set to\
            \ 'null' to clear the default value. \n                              Possible\
            \ values: {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean\
            \                   Add matched barcode at the end of the read header.\
            \ Applies to both index when INDEX_FILE2 \n                          \
            \    is also provided.\n                              \tFirst the sample\
            \ encoding barcodes from I1 (and I2 when relevant) are added to the read\
            \ \n                              headers like \n                    \
            \          \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:I1_BARCODE:I2_BARCODE'\n\
            \                              \tThen, if BPOS!=NONE, the additional barcodes\
            \ (UMIs) clipped from the read(s) are added \n                       \
            \       to their own header, like \n                              \t\t\
            '@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 \n                         \
            \     2:N:0:I1_BARCODE:I2_BARCODE:CLIPPED_SEQ_FROMREAD'\n            \
            \                    Default value: true. This option can be set to 'null'\
            \ to clear the default value. \n                              Possible\
            \ values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\nSAME_HEADERS=Boolean\
            \          Makes sure that headers of both reads of a pair are identical,\
            \ using the following read \n                              header pattern\
            \ (for both reads of a pair) :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
            \ I1_BARCODE:I2_BARCODE(if \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2\
            \ \n                              This option only makes sense in paired\
            \ end mode and ADD=true. Some (if not all) mappers \n                \
            \              will indeed complain when the read headers are not identical.\
            \ When molecular barcodes are \n                              present\
            \ in reads and the RCHAR is used, you will end with (problematic) read\
            \ headers like \n                              this :\n              \
            \                \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
            \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
            \                              SAME_HEADERS=true will instead genetates\
            \ the following identical header for both reads :\n                  \
            \            \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
            \                              Note that we also clipped the useless '1:N:0'\
            \ and '3:N:0' has they will also result in \n                        \
            \      generating different headers\n                              \t\
            \ Important : this option will force RCHAR=: UNLESS you specify RCHAR=null\
            \ ; in which \n                              case a space will be preserved\
            \ ie : \n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994\
            \ TAGAACAC:TGGAGTAG:CGTTGTAT\n                                Default\
            \ value: true. This option can be set to 'null' to clear the default value.\
            \ \n                              Possible values: {true, false} \n\n\
            READ_NAME_REPLACE_CHAR=String\nRCHAR=String                  Replace spaces\
            \ in read name/header using provided character. This is particularly handy\
            \ \n                              when you need to retain\t ADDed barcode\
            \ in read name/header during mapping (everything \n                  \
            \            after space in read name is usually clipped in BAM files).\t\
            For example, with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
            \ 2:N:0:'\n                              \tbecomes\n                 \
            \             \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
            \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
            V=FastqQualityFormat          A value describing how the quality values\
            \ are encoded in the fastq.  Either 'Solexa' for \n                  \
            \            pre-pipeline 1.3 style scores (solexa scaling + 66), 'Illumina'\
            \ for pipeline 1.3 and \n                              above (phred scaling\
            \ + 64) or 'Standard' for phred scaled scores with a character shift \n\
            \                              of 33.  If this value is not specified\
            \ (or 'null' is given), the quality format will be \n                \
            \              detected.\n                                Default value:\
            \ Standard. This option can be set to 'null' to clear the default value.\
            \ \n                              Possible values: {Solexa, Illumina,\
            \ Standard} \n\nOUTPUT_DIR=File\nO=File                        Output\
            \ directory. By default, output files are written in running directory.\n\
            \                                Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
            UN=Boolean                    Should un-assigned reads be saved in files\
            \ or simply ignored. File names are \n                              automatically\
            \ created or can be given using UF1 & UF2 options.\n                 \
            \               Default value: true. This option can be set to 'null'\
            \ to clear the default value. \n                              Possible\
            \ values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\nUF1=String\
            \                    Name of the file in which to write unassigned reads\
            \ from FILE1.Either a name (in which \n                              case\
            \ the file will be created in the output dir) or full path.\n        \
            \                        Default value: unassigned_1.txt. This option\
            \ can be set to 'null' to clear the default \n                       \
            \       value. \n\nUNASSIGNED_FILE_NAME_2=String\nUF2=String         \
            \           Name of the file in which to write unassigned reads from FILE2.Either\
            \ a name (in which \n                              case the file will\
            \ be created in the output dir) or full path.\n                      \
            \          Default value: unassigned_2.txt. This option can be set to\
            \ 'null' to clear the default \n                              value. \n\
            \nMETRICS_FILE_NAME=String\nM=String                      File name where\
            \ to write demultiplexing statistics. Either a name (in which case the\
            \ file \n                              will be created in the output dir)\
            \ or an absolute path.\n                                Default value:\
            \ jemultiplexer_out_stats.txt. This option can be set to 'null' to clear\
            \ \n                              the default value. \n\nBARCODE_DIAG_FILE=String\n\
            DIAG=String                   Name for a barcode match reporting file\
            \ (not generated by default).Either a name (in \n                    \
            \          which case the file will be created in the output dir) or full\
            \ path. This file will \n                              contain a line\
            \ per read pair with the barcode best matching the read subsequence or\
            \ \n                              'null' when no match is found according\
            \ to matching parameters ; and the final selected \n                 \
            \             sample. This file is useful for debugging or further processing\
            \ in case both ends are \n                              barcoded.\n  \
            \                            N.B: this file will have a size of about\
            \ one of the fastq input files.  Default value: \n                   \
            \           null. \n\nFORCE=Boolean                 Allows to overwrite\
            \ existing files (system rights still apply).\n                      \
            \          Default value: false. This option can be set to 'null' to clear\
            \ the default value. \n                              Possible values:\
            \ {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                 \
            \   Compress output files using gzip.\n                              \
            \  Default value: true. This option can be set to 'null' to clear the\
            \ default value. \n                              Possible values: {true,\
            \ false} \n\nFASTQ_FILE_EXTENSION=String   Change the default extension\
            \ of created fastq files, eg 'fastqsanger'. By default uses \n       \
            \                       the file extension from input fastq file. If result\
            \ file names are given in the barcode \n                             \
            \ file, this option is only used to adapt the unassigned file names. When\
            \ using \n                              compression, a .gz is always appended\
            \ to file names and should not be specified in \n                    \
            \          FASTQ_FILE_EXTENSION i.e. \n                              use\
            \ FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n \
            \                               Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
            ASYNC=Boolean                 Use one thread per Fastq Writer.\n     \
            \                           Default value: true. This option can be set\
            \ to 'null' to clear the default value. \n                           \
            \   Possible values: {true, false} \n\nSTATS_ONLY=Boolean            Only\
            \ produces metric and diagnostic reports i.e. no output fastq file produced.\n\
            \                                Default value: false. This option can\
            \ be set to 'null' to clear the default value. \n                    \
            \          Possible values: {true, false} \n\nUSE_EMBASE=Boolean\nEM=Boolean\
            \                    Enables emBASE mode i.e fetch information from emBASE\
            \ and place demultiplexed files \n                              directly\
            \ in emBASE repository structure.\n                              This\
            \ option is mutually exclusive with BARCODE_FILE.\n                  \
            \            Note : this option forces O=null GZ=true UN=true UF1=null\
            \ UF2=null STATS_ONLY=false (all \n                              other\
            \ user options supported).\n                                Default value:\
            \ false. This option can be set to 'null' to clear the default value.\
            \ \n                              Possible values: {true, false}  Cannot\
            \ be used in conjuction with option(s) BARCODE_FILE \n               \
            \               (BF)\n\n"
          generated_using: *id004
        - !Command
          command: *id009
          positional:
          - !Positional
            description: 'In this format, a simple BARCODE slot is expected in the
              ReadLayout and NO headers are '
            position: 0
            name: col2.
            optional: false
          - !Positional
            description: "sample1 ATAT|GAGG:CCAA|TGTG\n3. Extended barcode file format\
              \ : 3 (single-end) or 4 (paired-end) tab-delimited colums\nsame as the\
              \ simple barcode file format but the extra columns contains the file\
              \ name(s)"
            position: 0
            name: e.g.
            optional: false
          - !Positional
            description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
            position: 0
            name: Or
            optional: false
          - !Positional
            description: Cannot be used in conjuction with option(s) USE_EMBASE (EM)
            position: 1
            name: Required.
            optional: false
          - !Positional
            description: "When provided, Je expects as many 'OF=' as output layouts\
              \ ('OL=...') parameters or "
            position: 0
            name: formats.
            optional: false
          - !Positional
            description: 'Default value: null. '
            position: 0
            name: barcoded.
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: DemultiplexCLI\
            \ [options]\n\nUsage: program [options...]\n\nVersion: 2.0.RC\n\n\nOptions:\n\
            \n--help\n-h                            Displays options specific to this\
            \ tool.\n\n--stdhelp\n-H                            Displays options specific\
            \ to this tool AND options common to all Picard command line \n      \
            \                        tools.\n\n--version                     Displays\
            \ program version.\n\nFASTQ=File\nF=File                        Input\
            \ fastq file (optionally gzipped)  Default value: null. This option must\
            \ be specified \n                              at least 1 times. \n\n\
            BARCODE_FILE=File\nBF=File                       Barcode file (tsv) matching\
            \ sample names to barcode combination. \n                            \
            \  \n                                 ### GENERAL Barcode File Format\
            \ \n                              In this format, the file structure is\
            \ governed with headers:\n                              \t* the 'SAMPLE'\
            \ column lists the sample names\n                              \t* the\
            \ 'BARCODEn' columns list the matching BARCODE from the BARCODEn slot\
            \ (where n is a \n                              number, see RL option).\
            \ \n                              \t    It is mandatory to have as many\
            \ 'BARCODEn' columns as described BARCODE slots in \n                \
            \              READ LAYOUTS. Here again, barcodes can be combined using\
            \ the OR operator '|'\n                              \t* the optional\
            \ 'OUTn' columns (where n is a number) list the output file names for\
            \ this \n                              sample and matching output number.\n\
            \                              \n                                 ###\
            \ SIMPLE Barcode File Format (for backward compatibility) ; please see\
            \ the GENERAL \n                              format described above \n\
            \                              The file must have 2 columns with the sample\
            \ in col1 and the corresponding barcode in \n                        \
            \      col2.\n                              In this format, a simple BARCODE\
            \ slot is expected in the ReadLayout and NO headers are \n           \
            \                   needed e.g. :\n                              \t\t\
            sample1\tGAGG\n                              \t\tsample2\tCCAA\n     \
            \                         \tThe format accept the following shortcuts:\
            \ \n                              \t1. If multiple barcodes map to the\
            \ same sample, either lines can be duplicated e.g.\n                 \
            \             \t\tsample1\tATAT\n                              \t\tsample1\t\
            GAGG\n                              \t\tsample2\tCCAA\n              \
            \                \t\tsample2\tTGTG\n                              \tOr\
            \ barcodes can be combined using the OR operator '|' i.e. the file above\
            \ can be \n                              re-written like\n           \
            \                    \t\tsample1\tATAT|GAGG\n                        \
            \      \t\tsample2\tCCAA|TGTG\n                              \t2. For\
            \ the special situation of paired-end data in which barcodes differ at\
            \ both ends \n                              i.e. with BARCODE1 and BARCODE2\
            \ described for read one and two respectively, barcodes for \n       \
            \                       BARCODE1 and BARCODE2 can be distinguished using\
            \ a ':' separator i.e. \n                              \t\tsample1\tATAT:GAGG\n\
            \                              \t\tsample2\tCCAA:TGTG\n              \
            \                \tThis above syntax means that sample 1 is encoded with\
            \ ATAT barcode from BARCODE1 slot \n                              AND\
            \ GAGG barcode from BARCODE2 slot. Note that you can still combine barcodes\
            \ using | \n                              e.g. \n                    \
            \          \t\tsample1\tATAT|GAGG:CCAA|TGTG\n                        \
            \      \t3. Extended barcode file format : 3 (single-end) or 4 (paired-end)\
            \ tab-delimited colums\n                              \tsame as the simple\
            \ barcode file format but the extra columns contains the file name(s)\
            \ \n                              to use to name output files. A unique\
            \ extra column is expected for single-end while 2 \n                 \
            \             extra columns are expected for paired-end. In case lines\
            \ are duplicated (multiple \n                              barcodes mapping\
            \ the same sample), the same file name should be indicated in the third\
            \ \n                              (and fourth) column(s). \n         \
            \                     \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
            \                              \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
            \                              \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n\
            \                              \tOr\n                              \t\t\
            sample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n   \
            \                             Required.  Cannot be used in conjuction\
            \ with option(s) USE_EMBASE (EM)\n\nREAD_LAYOUT=String\nRL=String    \
            \                 Describes the read layout(s) of input fastq file(s)\
            \ e.g. RL='<BARCODE:6><SAMPLE:x>' \n                              describes\
            \ a read with a barcode in the first 6 bases followed by the sample sequence\
            \ ('x' \n                              means 'till the end', see below).\
            \ You MUST single quote the pattern \n                              (RL='<BARCODE:6><SAMPLE:x>')\
            \ as '>' have special meaning in unix.The input fastq files \n       \
            \                       and read layouts are mached up by order on the\
            \ command line.\n                              Read layouts are only needed\
            \ for complex layouts but one must provide read layouts for \n       \
            \                       ALL or NONE of the input fastq files.\n      \
            \                        ## READ LAYOUT FORMAT DESCRIPTION:/nRead layouts\
            \ are made of <UMIn:X>, <BARCODEn:X>, \n                             \
            \ <SAMPLEn:X> blocks to describe blocks of type UMI, BARCODE or SAMPLE\
            \ with : \n                                  * 'n' the unique block index\
            \ (an index must be unique across all read layouts for \n            \
            \                  each index or each block type), use the same index\
            \ to specify redundant blocks e.g. use \n                            \
            \  <BARCODE1:6> in two different layouts to specify that the barcode found\
            \ in both reads are \n                              the same\n       \
            \                          * 'X' : either a number indicating the length\
            \ of the UMI, BARCODE or SAMPLE block or a \n                        \
            \      negative number e.g. -2 to specify the last 2 bases should be ignored/clipped)\
            \ or the \n                              letter 'x' to specify to take\
            \ the sequence till the end of read. Importantly, the 'x' or \n      \
            \                        negative length shortcuts can *only* be used\
            \ in the last block of a read layout (i.e. \n                        \
            \      <BARCODE1:x><SAMPLE1:20> is not allowed)\n                    \
            \          In addition, layouts can contain N or fixed bases like in 'NN<BARCODE1:6>NNNN<SAMPLE1:x>'\
            \ \n                              where the Ns tell Je to skip 2 and 4\
            \ bases before extracting the barcode & sample \n                    \
            \          sequence respectively.\n                              \n  \
            \                            ## OMIITING READ LAYOUT IN THE COMMAND LINE:/nWhen\
            \ no read layout is provided, the \n                              following\
            \ defaults apply :\n                                 * 1 input fastq:\
            \ single end with layout <BARCODE1:X><SAMPLE1:x> where X is inferred \n\
            \                              from barcode file\n                   \
            \              * 2 input fastqs: \n                                  \
            \   - paired end with redundant barcode if barcode file describes a single\
            \ BARCODE \n                              i.e. <BARCODE1:X><SAMPLE1:x>\
            \ and <BARCODE1:X><SAMPLE2:x>, where X is inferred from \n           \
            \                   barcode file\n                                   \
            \  - paired end with non redundant barcode if barcode file describes two\
            \ BARCODE \n                              column i.e. <BARCODE1:X><SAMPLE1:x>\
            \ and <BARCODE2:Y><SAMPLE2:x>, where X and Y are \n                  \
            \            inferred from barcode file\n                            \
            \         - single end with index file if barcode file describes a single\
            \ BARCODE and second \n                              fastq file has reads\
            \ of length < 10 + barcode_length\n                                 *\
            \ 3 input fastqs: \n                                     - paired end\
            \ with an index file i.e. <SAMPLE1:x>, <SAMPLE2:x> and <BARCODE1:X> \n\
            \                              when barcode file has a single BARCODE\
            \ column (X is inferred from barcode file)\n                         \
            \            - single end with two index files i.e. <SAMPLE1:x>, <BARCODE1:X>\
            \ and <BARCODE2:Y> \n                              when barcode file has\
            \ two BARCODE columns (X,Y is inferred from barcode file)\n          \
            \                       * 4 input fastqs: paired end with either \n  \
            \                                    - 2 non-redundant index files i.e.\
            \ <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X>, \n                         \
            \     <BARCODE2:Y> if the barcode file has two BARCODE columns or a ATGC:GCTAGC\
            \ syntax (X,Y \n                              inferred from barcode file)\
            \ \n                                     - 2 redundant index files <SAMPLE1:x>,\
            \ <SAMPLE2:x>, <BARCODE1:X> and <BARCODE1:X> \n                      \
            \        if the barcode file has a single BARCODE column (X inferred from\
            \ barcode file)\n                              \n                    \
            \            Default value: null. This option may be specified 0 or more\
            \ times. \n\nOUTPUT_LAYOUT=String\nOL=String                     Describes\
            \ the output file layout(s) using the slots defined in read layouts (,\
            \ , ) and \n                              are made of three distinct parts\
            \ separated with ':'.\n                              In addition to ,\
            \ , ,  is used as a synonym to  to indicate that the real sequence  should\
            \ \n                              be written (as opposed to writting the\
            \ barcode when usign ). \n                              An output layout\
            \ looks like '1::' where the three mandatory parts (':'-separated) are\
            \ :\n                              \t- The number in the first part (i.e.\
            \ from '1:' above) is the output file index and it \n                \
            \              must be unique across all 'OL' inputs. \n             \
            \                 \t- The second part (i.e. '' above) is the read header\
            \ layout; when writing multiple UMI \n                              and\
            \ BARCODE slots in output read headers, these are always separated with\
            \ the RCHAR (':' \n                              by defaults).\n     \
            \                         \t- The third part (i.e. '' above) is the read\
            \ sequence layout. Note that here  and  are \n                       \
            \       fully synonyms as the real sequence (i.e READBAR) is always written\n\
            \                              \n                              Important:\
            \ You MUST single quote the pattern (OL='1::') as '>' have special meaning\
            \ in \n                              unix.An output file is created for\
            \ each sample and each OL index. Output file names \n                \
            \              default to samplename_outputfileindex with the original\
            \ fastq file extensions\n                              \n            \
            \                  ## OMIITING OUTPUT LAYOUT IN THE COMMAND LINE:/n  When\
            \ no OL is described, Je considers \n                              an\
            \ output file should be created for each input FASTQ (containing a SAMPLE\
            \ slot) and for \n                              each sample.\n       \
            \                        In this scenario:\n                         \
            \     \t1. The output files only contain the SAMPLE slot unless CLIP is\
            \ set to false\n                              \t2. The barcode(s) and\
            \ sample names are injected in the output file names according to \n \
            \                             the pattern 'FASTQFILENAMEn_SAMPLENAME_BARCODES.ORIGINALEXTENSIONS'\
            \ ) \n                              \t3. Unless ADD is set to false, all\
            \ BARCODE and UMI slots (if any) are placed in the \n                \
            \              fastq headers following their slot index i.e. BARCODE1:...:BARCODEn:UMI1:UMI2:...:UMIn\
            \ \n                              and are separated with ':'.\n      \
            \                        ## SHORT LAYOUT FORMAT \n                   \
            \           The output layout can be specified in a concise way using\
            \ 'S','B', 'R' and 'U' for \n                              SAMPLE, BARCODE,\
            \ READBAR and UMI, respectively. In this format, the surounding '' are\
            \ \n                              also omitted. For example 'OL=1:B1U1U2:S1'\
            \ is a synonym of 'OL=1::'  Default value: null. \n                  \
            \            This option may be specified 0 or more times. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
            WQ=Boolean                    Set to True to keep Phred sequence qualities\
            \ in output read names. \n                              This option only\
            \ applies to BARCODE, READBAR and UMI described in the read name slot\
            \ of \n                              output layout. For BARCODE, the equivalent\
            \ READBAR quality is used. In case of redundant \n                   \
            \           slots, the best found quality is used.\n                 \
            \             The quality string is translated into 2 digits number representing\
            \ the quality scores on \n                              the Phred scale\
            \ and a e.g. UMI will look like\n                              \t '...:ATGCAT333023212322:...'\
            \ instead of '...:ATGCAT:...'\n                              This option\
            \ is particularly useful with the retag module that knows how to extract\
            \ \n                              quality numbers into BAM tags.  Default\
            \ value: false. This option can be set to 'null' to \n               \
            \               clear the default value. Possible values: {true, false}\
            \ \n\nOUTPUT_DIR=File\nO=File                        Output directory.\
            \ By default, output files are written in running directory.\n       \
            \                         Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
            UN=Boolean                    Should un-assigned reads be saved in files\
            \ or simply ignored. File names are \n                              automatically\
            \ created or can be given using UF option.\n                         \
            \       Default value: true. This option can be set to 'null' to clear\
            \ the default value. \n                              Possible values:\
            \ {true, false} \n\nUNASSIGNED_FILE=String\nUF=String                \
            \     Name of unassigned files in which to write unassigned reads. When\
            \ provided, Je expects as \n                              many UF files\
            \ as input FASTQ files. UF options are matched up with FASTQ options \n\
            \                              following the order they are defined on\
            \ the command line.\n                              Either a name (in which\
            \ case the file will be created in the output dir) or full path.\n   \
            \                             Default value: null. This option may be\
            \ specified 0 or more times. \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\n\
            OWID=Boolean                  Should the output layout number (output\
            \ layout first slot) be injected in the filename ?\n                 \
            \             Only used in absence of explicit file names in the barcode\
            \ file.\n                                Default value: true. This option\
            \ can be set to 'null' to clear the default value. \n                \
            \              Possible values: {true, false} \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
            OWHL=Boolean                  Should the output layout used for the read\
            \ name (output layout second slot,in short \n                        \
            \      format) be injected in the filename ? When true, each ouput file\
            \ name contains e.g. \n                              '_B1U1' for OL='1::'\
            \  \n                              Only used in absence of explicit file\
            \ names in the barcode file.\n                                Default\
            \ value: false. This option can be set to 'null' to clear the default\
            \ value. \n                              Possible values: {true, false}\
            \ \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWSL=Boolean   \
            \               Should the output layout used for the read sequence (output\
            \ layout third slot, in short \n                              format)\
            \ be injected in the filename ?When true, each ouput file name contains\
            \ e.g. '_S1' \n                              for OL='1::'  \n        \
            \                      Only used in absence of explicit file names in\
            \ the barcode file.\n                                Default value: false.\
            \ This option can be set to 'null' to clear the default value. \n    \
            \                          Possible values: {true, false} \n\nOUTPUT_FILE=String\n\
            OF=String                     Tells Je to write **all** assigned reads\
            \ in the same output file(s) i.e. use this option \n                 \
            \             when you do NOT want to create per-sample demultiplexed\
            \ files but rather want to keep all \n                              reads\
            \ in the same file while barcode information is gathered and injected\
            \ in output \n                              formats.\n               \
            \                When provided, Je expects as many 'OF=' as output layouts\
            \ ('OL=...') parameters or \n                              'FASTQ=input'\
            \ files when OL is not provided\n                              . OF options\
            \ are matched up with OL/FASTQ options following the order in which they\
            \ are \n                              defined on the command line.\n \
            \                             OF expects either a name (in which case\
            \ the file will be created in the output dir) or an \n               \
            \               absolute path.\n                                Default\
            \ value: null. This option may be specified 0 or more times. \n\nMAX_MISMATCHES=String\n\
            MM=String                     Maximum mismatches for a barcode to be considered\
            \ a match. Either exactly one or multiple \n                         \
            \     values (with format MM=X:Y:Z). \n                              When\
            \ multiple values are provided, Je expects exactly one value for each\
            \ BARCODE (with \n                              distinct indices) described\
            \ in the barcode file/read layouts.\n                              Values\
            \ (X,Y,Z) are matched up with the sorted list of BARCODES (i.e.  X for\
            \ BARCODE1, Y \n                              for BARCODE2 and Z for BARCODE3)\n\
            \                                Default value: 1. This option can be\
            \ set to 'null' to clear the default value. \n\nMIN_MISMATCH_DELTA=String\n\
            MMD=String                    Minimum difference between the number of\
            \ mismatches against the best and the second best \n                 \
            \             barcode. When MMD is not respected, the read remains unassigned.\n\
            \                              Either exactly one or multiple values (with\
            \ format MMD=X:Y:Z). When multiple values are \n                     \
            \         provided, Je expects exactly one value for each BARCODE (with\
            \ distinct indices) described \n                              in the barcode\
            \ file/read layouts.\n                              Values (X,Y,Z) are\
            \ matched up with the sorted list of BARCODES (i.e.  X for BARCODE1, Y\
            \ \n                              for BARCODE2 and Z for BARCODE3)\n \
            \                               Default value: 1. This option can be set\
            \ to 'null' to clear the default value. \n\nMIN_BASE_QUALITY=String\n\
            Q=String                      Minimum base quality during barcode matching:\
            \ bases which quality is less than this \n                           \
            \   cutoff are always considered as a mismatch.Either exactly one or multiple\
            \ values (with \n                              format Q=X:Y:Z). When multiple\
            \ values are provided, Je expects exactly one value for each \n      \
            \                        BARCODE (with distinct indices) described in\
            \ the barcode file/read layouts.\n                              Values\
            \ (X,Y,Z) are matched up with the sorted list of BARCODES (i.e.  X for\
            \ BARCODE1, Y \n                              for BARCODE2 and Z for BARCODE3)\n\
            \                                Default value: 10. This option can be\
            \ set to 'null' to clear the default value. \n\nSTRICT=Boolean\nS=Boolean\
            \                     When reads have redundant BARCODE slots, this option\
            \ tells how to handle situation when \n                              the\
            \ read sequence do not resolve to the same sample.\n                 \
            \              When true, the read pair is always 'unassigned'.\n    \
            \                           When false, the read pair is assigned to the\
            \ sample with the lowest overall mismatch sum\n                      \
            \          Default value: false. This option can be set to 'null' to clear\
            \ the default value. \n                              Possible values:\
            \ {true, false} \n\nFORCE=Boolean                 Allows to overwrite\
            \ existing files (system rights still apply).\n                      \
            \          Default value: false. This option can be set to 'null' to clear\
            \ the default value. \n                              Possible values:\
            \ {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                 \
            \   Compress output files using gzip.\n                              \
            \  Default value: true. This option can be set to 'null' to clear the\
            \ default value. \n                              Possible values: {true,\
            \ false} \n\nCLIP=Boolean                  In absence of output layout,\
            \ tell if barcode and UMI sequences should be clipped off read \n    \
            \                          sequence before writing to output file.\n \
            \                              If false, reads are written without modification\
            \ to output file.  Default value: true. \n                           \
            \   This option can be set to 'null' to clear the default value. Possible\
            \ values: {true, \n                              false} \n\nADD=Boolean\
            \                   In absence of output layout, tell if barcode and UMI\
            \ sequences should be added at the end \n                            \
            \  of the read header.\n                              BARCODE and UMI\
            \ slots (in this order) are concatenated using the character defined by\
            \ the \n                              SEP option\n                   \
            \             Default value: true. This option can be set to 'null' to\
            \ clear the default value. \n                              Possible values:\
            \ {true, false} \n\nREAD_NAME_SEPARATOR_CHAR=String\nSEP=String      \
            \              Separator character used to concatenate barcodes and umis\
            \ in read header\n                                Default value: :. This\
            \ option can be set to 'null' to clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
            V=FastqQualityFormat          A value describing how the quality values\
            \ are encoded in the fastq files.  Either \n                         \
            \     'Solexa' for pre-pipeline 1.3 style scores (solexa scaling + 66),\
            \ 'Illumina' for pipeline \n                              1.3 and above\
            \ (phred scaling + 64) or 'Standard' for phred scaled scores with a character\
            \ \n                              shift of 33.  If this value is not specified\
            \ (or 'null' is given), the quality format is \n                     \
            \         assumed to be will the 'Standard' for phred scale.\n       \
            \                         Default value: null. Possible values: {Solexa,\
            \ Illumina, Standard} \n\nMETRICS_FILE_NAME=String\nM=String         \
            \             File name where to write demultiplexing statistics. Either\
            \ a name (in which case the file \n                              will\
            \ be created in the output dir) or an absolute path.\n               \
            \                 Default value: jemultiplexer_out_stats.txt. This option\
            \ can be set to 'null' to clear \n                              the default\
            \ value. \n\nBARCODE_DIAG_FILE=String\nDIAG=String                   Name\
            \ for a barcode match reporting file (not generated by default).Either\
            \ a name (in \n                              which case the file will\
            \ be created in the output dir) or full path. This file will \n      \
            \                        contain a line per read set with the barcodes\
            \ best matching the read subsequences or \n                          \
            \    'null' when no match is found according to matching parameters ;\
            \ and the final selected \n                              sample. This\
            \ file is useful for debugging or further processing in case both ends\
            \ are \n                              barcoded.\n                    \
            \            Default value: null. \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\n\
            TEST=Boolean                  test mode ie code execution stops right\
            \ before read demultiplexing starts but after \n                     \
            \         command line validation  Default value: false. This option can\
            \ be set to 'null' to clear \n                              the default\
            \ value. Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
            \   Change the default extension of created fastq files, eg 'fastqsanger'.\
            \ By default uses \n                              the file extension from\
            \ input fastq file. If result file names are given in the barcode \n \
            \                             file, this option is only used to adapt\
            \ the unassigned file names. When using \n                           \
            \   compression, a .gz is always appended to file names and should not\
            \ be specified in \n                              FASTQ_FILE_EXTENSION\
            \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq\
            \ and NOT FASTQ_FILE_EXTENSION=fastq.gz\n                            \
            \    Default value: null. \n\nINPUT_FASTQ_COMPRESSION=Boolean\n      \
            \                        Indicates if the input fastq files are gzipped.\
            \ Please use this option when file names \n                          \
            \    are compressed but lack the typical '.gz' extension. \n         \
            \                       Default value: null. Possible values: {true, false}\
            \ \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\nASYNC=Boolean             \
            \    Use one thread per Fastq Writer.\n                              \
            \  Default value: true. This option can be set to 'null' to clear the\
            \ default value. \n                              Possible values: {true,\
            \ false} \n\nUSE_EMBASE=Boolean\nEM=Boolean                    Enables\
            \ emBASE mode i.e fetch information from emBASE and place demultiplexed\
            \ files \n                              directly in emBASE repository\
            \ structure.\n                              This option is mutually exclusive\
            \ with BARCODE_FILE.\n                              Note : this option\
            \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false (all\
            \ \n                              other user options supported).\n   \
            \                             Default value: false. This option can be\
            \ set to 'null' to clear the default value. \n                       \
            \       Possible values: {true, false}  Cannot be used in conjuction with\
            \ option(s) BARCODE_FILE \n                              (BF)\n\n"
          generated_using: *id004
        - !Command
          command: *id010
          positional:
          - !Positional
            description: SPLIT_CHAR=String
            position: 0
            name: times.
            optional: false
          - !Positional
            description: COMMENT=String
            position: 0
            name: value.
            optional: false
          named:
          - !Flag
            description: "Displays options specific to this tool AND options common\
              \ to all Picard command line\ntools."
            synonyms:
            - -H
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag: !Flag
            description: Displays program version.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: MarkDuplicatesWithMolecularCode\
            \ [options]\n\nExamines aligned records in the supplied SAM or BAM file\
            \ to locate duplicate molecules taking into account molecular barcodes\
            \ (Unique Molecular Identifiers or UMIs) found in read header. All records\
            \ are then either written to the output file with the duplicate records\
            \ flagged or trashed.\nExample :\n\t je markdupes INPUT=file_with_dupes.bam\
            \ OUTPUT=result.bam MM=1\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h\
            \                            Displays options specific to this tool.\n\
            \n--stdhelp\n-H                            Displays options specific to\
            \ this tool AND options common to all Picard command line \n         \
            \                     tools.\n\n--version                     Displays\
            \ program version.\n\nINPUT=String\nI=String                      One\
            \ or more input SAM or BAM files to analyze. Must be coordinate sorted.\
            \  Default value: \n                              null. This option may\
            \ be specified 0 or more times. \n\nOUTPUT=File\nO=File              \
            \          The output file to write marked records to  Required. \n\n\
            MISMATCHES=Integer\nMM=Integer                    Number of MisMatches\
            \ (inclusive) to still consider two Unique Molecular Identifiers \n  \
            \                            (UMIs) identical i.e. this option buffers\
            \ for sequencing errors.Indeed, in case of a \n                      \
            \        sequencing error, 2 duplicate reads would not be considered duplicates\
            \ anymore.Note that \n                              N are not considered\
            \ mismatches during comparison ie ATTNGG and NTTANG are seen as the \n\
            \                              same barcode and these two reads would\
            \ be flagged duplicates.This option takes a single \n                \
            \              value even when several barcodes are present (see SLOTS).\
            \ Note that when declaring \n                              several barcodes\
            \ (see SLOTS) AND providing a predefined set of barcodes (see BC option),\
            \ \n                              the MM value is applicable in each lookup.\
            \ When a predefined set of barcodes is NOT \n                        \
            \      given, the different barcodes (SLOTS) are concatenated first and\
            \ the MM value is \n                              therefore considered\
            \ *overall* as the concatenated code is seen as a unique code.\n     \
            \                         MM=null is like MM=0\n                     \
            \         Use the minimum Hamming distance of the original barcode set\
            \ (if applicable).  Required. \n\nMAX_NUMBER_OF_N=Integer\nMAX_N=Integer\
            \                 Maximum number of Ns a molecular code can contain (inclusive).\
            \ Above this value, reads \n                              are placed in\
            \ a UNDEF group.More precisely, these 'too degenarate' codes will not\
            \ :\n                              \t * be compared to the list of predefined\
            \ codes [predefined code list situation ie BC \n                     \
            \         option given] nor \n                              \t * be considered\
            \ as a potential independent code [no predefined code list situation ie\
            \ \n                              BC option not given]\n             \
            \                 Default value is the MISMATCHES number.\n          \
            \                     Note that when declaring several barcodes (see SLOTS)\
            \ AND providing a predefined set of \n                              barcodes\
            \ (see BC option), the MAX_N value is applicable to each barcode. When\
            \ a \n                              predefined set of barcodes is NOT\
            \ given, the different barcodes (SLOTS) are concatenated \n          \
            \                    first and the MAX_N value is therefore considered\
            \ *overall*.  Default value: null. \n\nSLOTS=Integer\nSLOTS=Integer  \
            \               Where to find the UMIs (and only the UMIs) in the read\
            \ name once read name has been \n                              tokenized\
            \ using the SPLIT character (e.g. ':'). \n                           \
            \   By default, the UMI is considered to be found at the end of the read\
            \ header i.e. after \n                              the last ':'. Use\
            \ this option to indicate other or additional UMI positions (e.g. \n \
            \                             multiple UMIs present in read header.\n\
            \                              IMPORTANT : counting starts at 1 and negative\
            \ numbers can be used to start counting from \n                      \
            \        the end.\n                              For example, consider\
            \ the following read name that lists 3 different barcodes in the end \n\
            \                              : \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
            \ \n                              \t to indicate that the three barcodes\
            \ are molecular codes, use \n                              \t\tSLOTS=-1\
            \ SLOTS=-2 SLOTS=-3\n                              \t if only the 2 last\
            \ ones should be considered (the third one being a sample encoding \n\
            \                              barcode), use \n                      \
            \        \t\tSLOTS=-1 SLOTS=-2\t N.B.: UMI usage can be deactivate by\
            \ explicitely setting SLOTS=null \n                              in the\
            \ command line\n                                Default value: null. This\
            \ option may be specified 0 or more times. \n\nBARCODE_FILE=File\nBC=File\
            \                       Pre-defined list of UMIs that can be expected.\
            \ Format: one column text file, one barcode \n                       \
            \       per line. All UMIs MUST have the same length.   Default value:\
            \ null. \n\nMETRICS_FILE=File\nM=File                        File to write\
            \ duplication metrics to  Required. \n\nREMOVE_DUPLICATES=Boolean    \
            \ If true do not write duplicates to the output file instead of writing\
            \ them with \n                              appropriate flags set.  Default\
            \ value: false. This option can be set to 'null' to clear \n         \
            \                     the default value. Possible values: {true, false}\
            \ \n\nASSUME_SORTED=Boolean\nAS=Boolean                    If true, assume\
            \ that the input file is coordinate sorted even if the header says \n\
            \                              otherwise. Deprecated, used ASSUME_SORT_ORDER=coordinate\
            \ instead.  Default value: false. \n                              This\
            \ option can be set to 'null' to clear the default value. Possible values:\
            \ {true, \n                              false}  Cannot be used in conjuction\
            \ with option(s) ASSUME_SORT_ORDER (ASO)\n\nTRIM_HEADERS=Boolean\nT=Boolean\
            \                     Should barcode information be removed from read\
            \ names in the output BAM ? This is usefull \n                       \
            \       to save storage space.\n                                Default\
            \ value: false. This option can be set to 'null' to clear the default\
            \ value. \n                              Possible values: {true, false}\
            \ \n\nTSLOTS=Integer\nTSLOTS=Integer                Where to find *all*\
            \ barcode(s) (i.e. sample encoding and UMIs) in the read name once has\
            \ \n                              been tokenized using the SPLIT character\
            \ (e.g. ':'). \n                              This option is only considered\
            \ when TRIM_HEADERS=true. When TSLOTS is ommited while \n            \
            \                  TRIM_HEADERS=true, the values of SLOTS apply.\n   \
            \                           IMPORTANT : counting starts at 1 and negative\
            \ numbers can be used to start counting from \n                      \
            \        the end.\n                              See SLOT help for examples.\
            \  Default value: null. This option may be specified 0 or more \n    \
            \                          times. \n\nSPLIT_CHAR=String\nSPLIT=String\
            \                  Character to use to split up the read header line,\
            \ default is ':'.  Default value: :. \n                              This\
            \ option can be set to 'null' to clear the default value. \n\nASSUME_SORT_ORDER=SortOrder\n\
            ASO=SortOrder                 If not null, assume that the input file\
            \ has this order even if the header says otherwise.  \n              \
            \                Default value: null. Possible values: {unsorted, queryname,\
            \ coordinate, duplicate, \n                              unknown}  Cannot\
            \ be used in conjuction with option(s) ASSUME_SORTED (AS)\n\nDUPLICATE_SCORING_STRATEGY=ScoringStrategy\n\
            DS=ScoringStrategy            The scoring strategy for choosing the non-duplicate\
            \ among candidates.  Default value: \n                              SUM_OF_BASE_QUALITIES.\
            \ This option can be set to 'null' to clear the default value. \n    \
            \                          Possible values: {SUM_OF_BASE_QUALITIES, TOTAL_MAPPED_REFERENCE_LENGTH,\
            \ RANDOM} \n\nPROGRAM_RECORD_ID=String\nPG=String                    \
            \ The program record ID for the @PG record(s) created by this program.\
            \ Set to null to \n                              disable PG record creation.\
            \  This string may have a suffix appended to avoid collision \n      \
            \                        with other program record IDs.  Default value:\
            \ MarkDuplicates. This option can be set to \n                       \
            \       'null' to clear the default value. \n\nPROGRAM_GROUP_VERSION=String\n\
            PG_VERSION=String             Value of VN tag of PG record to be created.\
            \ If not specified, the version will be \n                           \
            \   detected automatically.  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\n\
            PG_COMMAND=String             Value of CL tag of PG record to be created.\
            \ If not supplied the command line will be \n                        \
            \      detected automatically.  Default value: null. \n\nPROGRAM_GROUP_NAME=String\n\
            PG_NAME=String                Value of PN tag of PG record to be created.\
            \  Default value: \n                              MarkDuplicatesWithMolecularCode.\
            \ This option can be set to 'null' to clear the default \n           \
            \                   value. \n\nCOMMENT=String\nCO=String             \
            \        Comment(s) to include in the output file's header.  Default value:\
            \ null. This option may \n                              be specified 0\
            \ or more times. \n\nREAD_NAME_REGEX=String        Regular expression\
            \ that can be used to parse read names in the incoming SAM file. Read\
            \ \n                              names are parsed to extract three variables:\
            \ tile/region, x coordinate and y coordinate. \n                     \
            \         These values are used to estimate the rate of optical duplication\
            \ in order to give a more \n                              accurate estimated\
            \ library size. Set this option to null to disable optical duplicate \n\
            \                              detection, e.g. for RNA-seq or other data\
            \ where duplicate sets are extremely large and \n                    \
            \          estimating library complexity is not an aim. Note that without\
            \ optical duplicate counts, \n                              library size\
            \ estimation will be inaccurate. The regular expression should contain\
            \ three \n                              capture groups for the three variables,\
            \ in order. It must match the entire read name. \n                   \
            \           Note that if the default regex is specified, a regex match\
            \ is not actually done, but \n                              instead the\
            \ read name  is split on colon character. For 5 element names, the 3rd,\
            \ 4th and \n                              5th elements are assumed to\
            \ be tile, x and y values. For 7 element names (CASAVA 1.8), \n      \
            \                        the 5th, 6th, and 7th elements are assumed to\
            \ be tile, x and y values.  Default value: \n                        \
            \      <optimized capture of last three ':' separated fields as numeric\
            \ values>. This option can \n                              be set to 'null'\
            \ to clear the default value. \n\nOPTICAL_DUPLICATE_PIXEL_DISTANCE=Integer\n\
            \                              The maximum offset between two duplicate\
            \ clusters in order to consider them optical \n                      \
            \        duplicates. The default is appropriate for unpatterned versions\
            \ of the Illumina platform. \n                              For the patterned\
            \ flowcell models, 2500 is moreappropriate. For other platforms and \n\
            \                              models, users should experiment to find\
            \ what works best.  Default value: 100. This option \n               \
            \               can be set to 'null' to clear the default value. \n\n\
            MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=Integer\nMAX_FILE_HANDLES=Integer \
            \     Maximum number of file handles to keep open when spilling read ends\
            \ to disk. Set this \n                              number a little lower\
            \ than the per-process maximum number of file that may be open. This \n\
            \                              number can be found by executing the 'ulimit\
            \ -n' command on a Unix system.  Default \n                          \
            \    value: 8000. This option can be set to 'null' to clear the default\
            \ value. \n\nSORTING_COLLECTION_SIZE_RATIO=Double\n                  \
            \            This number, plus the maximum RAM available to the JVM, determine\
            \ the memory footprint \n                              used by some of\
            \ the sorting collections.  If you are running out of memory, try reducing\
            \ \n                              this number.  Default value: 0.25. This\
            \ option can be set to 'null' to clear the default \n                \
            \              value. \n\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage:   je <command> [options] \n\nwith command in : \n\t clip\
          \      \t\t clips barcodes/UMIs from fastq sequence and places them in read\
          \ name headers \n\t debarcode \t\t demultiplexes fastq file(s) into user-defined\
          \ output files, with optional handling of molecular barcodes\n\t demultiplex\
          \ \t\t demultiplexes fastq file(s) with Je 1.x implementation, with optional\
          \ handling of molecular barcodes for further use in 'dupes' module\n\t demultiplex-illu\
          \ \t demultiplexes fastq file(s) using Illumina Index files with Je 1.x\
          \ implementation, with optional handling of molecular barcodes for further\
          \ use in 'dupes' module\n\t markdupes     \t\t removes read duplicates based\
          \ on molecular barcodes found in read name headers (as produced by clip\
          \ or plex)\n\t dropseq    \t\t clips cell barcode and UMI from read 1 and\
          \ adds them to header of read 2. This command is for processing drop-seq\
          \ results.\n\t retag    \t\t extracts barcode and UMI sequence(s) embedded\
          \ in read names and tag reads with proper BAM tag.\n\nVersion : 2.0.RC\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jedropseq [options]\n\
        \nReformat Drop-seq files into a single fastq file. DROP-seq produces 2 fastq\
        \ files : one (F1) contains the cell barcode (usually 12 bp, LEN) followed\
        \ by a UMI (usually 8bp, ULEN) while the second (F2) contains the RNA sequence.\
        \ The output file is similar to F2 but holds the parsed barcode and UMI in\
        \ read names.\nInput fastq file(s) can be in gzip compressed format (end in\
        \ .gz). See help for a detailled description of all options.\n\nExample: \n\
        \tje dropseq F1=file.fastq.gz F2=file.fastq.gz LEN=12 ULEN=8 O=/path/to/resultdir/out.fastq.gz\n\
        \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                            Displays\
        \ options specific to this tool.\n\n--stdhelp\n-H                        \
        \    Displays options specific to this tool AND options common to all Picard\
        \ command line \n                              tools.\n\n--version       \
        \              Displays program version.\n\nFASTQ_FILE1=File\nF1=File    \
        \                   Input fastq file (optionally gzipped) for first read.\
        \ This read contains the cell barcode \n                              followed\
        \ by the UMI. Quality encoding must be Phred+33 (Standard).  Required. \n\n\
        FASTQ_FILE2=File\nF2=File                       Input fastq file (optionally\
        \ gzipped) for the second read. Quality encoding must be \n              \
        \                Phred+33 (Standard).  Required. \n\nBCLEN=Integer\nLEN=Integer\
        \                   Length of the cell barcode sequence in read 1.\n     \
        \                           Required. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
        WQ=Boolean                    Should quality string of barcode and UMI also\
        \ be injected in read names.\n                              If true, the quality\
        \ string is translated into 2 digits number and a e.g. UMI will look \n  \
        \                            like\n                              \t '...:ATGCAT333423212322:...'\
        \ instead of '...:ATGCAT:...'\n                              This option is\
        \ particularly useful with the retag module that knows how to extract \n \
        \                             quality numbers into BAM tags.  Default value:\
        \ false. This option can be set to 'null' to \n                          \
        \    clear the default value. Possible values: {true, false} \n\nUCLEN=Integer\n\
        ULEN=Integer                  Length of the UMI sequence in read 1 found right\
        \ after the cell barcode.\n                                Required. \n\n\
        MAX_N=Integer\nN=Integer                     Maximum number of N's in the\
        \ cell barcode sequence. If the cell barcode has this number \n          \
        \                    or more N in the sequence, the read is ignored.\n   \
        \                             Default value: 6. This option can be set to\
        \ 'null' to clear the default value. \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String\
        \                  Replace spaces in read name/header using provided character.\n\
        \                              This is needed when you need to retain ADDed\
        \ barcode in read name/header during mapping \n                          \
        \    as everything after space in read name is usually clipped in BAM files.\n\
        \                              For example, with RCHAR=':' :\n           \
        \                   \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 1:N:0:'\n\
        \                              \tbecomes\n                              \t\
        \t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'\n             \
        \                   Default value: :. This option can be set to 'null' to\
        \ clear the default value. \n\nRESULT_FILENAME_1=String\nO=String        \
        \              Result file name with headers modified.\n                 \
        \             \n                              Can either be a name (in which\
        \ case the file will be created in the output dir) or a full \n          \
        \                    path.\n                                Required. \n\n\
        FORCE=Boolean                 Allows overwriting existing files.\n       \
        \                         Default value: false. This option can be set to\
        \ 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean             \
        \       Compress output using gzip and append a .gz extension to the result\
        \ filename if necessary.\n                                Default value: true.\
        \ This option can be set to 'null' to clear the default value. \n        \
        \                      Possible values: {true, false} \n\n"
      generated_using: *id004
    - !Command
      command: *id005
      positional:
      - !Positional
        description: 'Required. '
        position: 0
        name: data.
        optional: false
      - !Positional
        description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
        position: 0
        name: Or
        optional: false
      - !Positional
        description: 'the second barcode might be a random barcode (UMI) to tell apart
          PCR artefacts from real '
        position: 0
        name: while
        optional: false
      - !Positional
        description: 'Another example is when both barcodes should be used in a combined
          fashion to resolve the '
        position: 1
        name: duplicates.
        optional: false
      - !Positional
        description: In the first example, you should use BPOS=BOTH BRED=false BM=READ_1.
        position: 2
        name: sample.
        optional: false
      - !Positional
        description: 'values can be given here using the syntax MM=X:Z where X and
          Z are 2 integers to use for '
        position: 0
        name: distinct
        optional: false
      - !Positional
        description: "Default value: Standard. This option can be set to 'null' to\
          \ clear the default value. "
        position: 0
        name: detected.
        optional: false
      - !Positional
        description: 'N.B: this file will have a size of about one of the fastq input
          files.  Default value: '
        position: 0
        name: barcoded.
        optional: false
      - !Positional
        description: "FORCE=Boolean                 Allows to overwrite existing files\
          \ (system rights still apply).\nDefault value: false. This option can be\
          \ set to 'null' to clear the default value."
        position: 1
        name: null.
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jemultiplexer [options]\n\
        \n\tFastq files demultiplexer for in-line barcoded Illumina Fastq files.\n\
        \tInput fastq files can be in gzip compressed (end in .gz). \n\tBy default\
        \ output files are gzipped and have names following the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]'\
        \ unless you gave file\n\t names to use within the barcode description file.\n\
        Example:\n\t je demultiplex F1=fastq_1.txt.gz BF=barcodes.bs O=/path/to/jemultiplexer-results/\
        \ \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                          \
        \  Displays options specific to this tool.\n\n--stdhelp\n-H              \
        \              Displays options specific to this tool AND options common to\
        \ all Picard command line \n                              tools.\n\n--version\
        \                     Displays program version.\n\nFASTQ_FILE1=File\nF1=File\
        \                       Input fastq file (optionally gzipped) for single end\
        \ data, or first read in paired end \n                              data.\n\
        \                                Required. \n\nFASTQ_FILE2=File\nF2=File \
        \                      Input fastq file (optionally gzipped) for the second\
        \ read of paired end data.\n                                Default value:\
        \ null. \n\nBARCODE_FILE=File\nBF=File                       Barcode file\
        \ describing sequence list and sample names. Tab-delimited file with 2 \n\
        \                              columns, with the sample in col1 and the corresponding\
        \ barcode in col2.\n                              Simple barcode file format\
        \ : 2 tab-delimited colums\n                              \tIf multiple barcode\
        \ map to the same sample, either line can be duplicated e.g.\n           \
        \                   \t\tsample1\tATAT\n                              \t\t\
        sample1\tGAGG\n                              \t\tsample2\tCCAA\n         \
        \                     \t\tsample2\tTGTG\n                              \t\
        Or barcodes can be combined using the OR operator '|' i.e. the file above\
        \ can be \n                              re-written like\n               \
        \                \t\tsample1\tATAT|GAGG\n                              \t\t\
        sample2\tCCAA|TGTG\n                              \tFinally, for the special\
        \ situation of paired-end data in which barcodes differ at both \n       \
        \                       ends (ie BPOS=BOTH BRED=false BM=BOTH , see BRED option\
        \ description), barcodes for read_1 \n                              and read_2\
        \ can be distinguished using a ':' separator i.e. \n                     \
        \         \t\tsample1\tATAT:GAGG\n                              \t\tsample2\t\
        CCAA:TGTG\n                              \tThis above syntax means that sample\
        \ 1 is encoded with ATAT barcode at read_1 AND GAGG \n                   \
        \           barcode at read_2. Note that you can still combine barcodes using\
        \ | e.g. \n                              \t\tsample1\tATAT|GAGG:CCAA|TGTG\n\
        \                              \twould mean that sample 1 is mapped by the\
        \ combination of barcode: ATAT OR GAGG at read_1 \n                      \
        \        AND CCAA OR TGTG at read_2.\n                              Extended\
        \ barcode file format : 3 (single-end) or 4 (paired-end) tab-delimited colums\n\
        \                              \tsame as the simple barcode file format but\
        \ the extra columns contains the file name(s) \n                         \
        \     to use to name output files. A unique extra column is expected for single-end\
        \ while 2 \n                              extra columns are expected for paired-end.\
        \ In case, lines are duplicated (multiple \n                             \
        \ barcodesmapping the same sample), the same file name should be indicated\
        \ in the third \n                              (and fourth) column(s). \n\
        \                              \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
        \                              \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n\
        \                              \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n\
        \                              \tOr\n                              \t\tsample1\
        \ \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n             \
        \                 Ns in barcode sequence are allowed and are used to flag\
        \ positions that should be ignored \n                              in sample\
        \ matching \n                              \t i.e. they will be clipped off\
        \ the read sequence (like in iCLIP protocol).  Required.  \n             \
        \                 Cannot be used in conjuction with option(s) USE_EMBASE (EM)\n\
        \nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition          For paired-end\
        \ data, where to expect the barcode(s) :\n                              \t\
        \ * READ_1 (beginning of read from FASTQ_FILE_1), \n                     \
        \          \t * READ_2 (beginning of read from FASTQ_FILE_2),\n          \
        \                    \t * BOTH (beginning of both reads).\n              \
        \                Automatically set to READ_1 in single end mode.\n       \
        \                         Default value: BOTH. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {READ_1, READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String              \
        \      Length of the barcode sequences, optional. Taken from barcode file\
        \ when not given.\n                              In situations where BARCODE_READ_POS\
        \ == BOTH AND REDUNDANT_BARCODES=false, two distinct \n                  \
        \            length can be provided using the syntax LEN=X:Z where X and Z\
        \ are 2 integers representing \n                              the barcode\
        \ length for read_1 and read_2 respectively.\n                           \
        \     Default value: null. \n\nBARCODE_FOR_SAMPLE_MATCHING=BarcodePosition\n\
        BM=BarcodePosition            Indicates which barcode(s) should be used for\
        \ sample lookup\n                              Automatically set to READ_1\
        \ in single end mode. \n                              For paired-end data\
        \ and when BARCODE_READ_POS == BOTH, which barcode should be used to \n  \
        \                            resolve sample :\n                          \
        \    \t- use BM=READ_1 (beginning of read from FASTQ_FILE_1) if only this\
        \ read should be used \n                              for sample matching,\n\
        \                              \t- use BM=READ_2 (beginning of read from FASTQ_FILE_2)\
        \ if only this read should be used \n                              for sample\
        \ matching,\n                              \t- use BM=BOTH (beginning of both\
        \ reads) if both should be used \n                              When BM=BOTH,\
        \ the behaviour is different based on the value of REDUNDANT_BARCODES : \n\
        \                              \t\tIf REDUNDANT_BARCODES=true, the two barcodes\
        \ are considered to map to the same sample \n                            \
        \  and 'Je demultiplex' uses the two barcodes according to the STRICT value.\n\
        \                              \t\tIf REDUNDANT_BARCODES=false, the barcode\
        \ file should map a couple of barcode to each \n                         \
        \     sample (e.g. sample1 => AGAGTG:TTGATA) and 'Je demultiplex' needs both\
        \ barcodes to find \n                              the relevant sample. Note\
        \ that this is the only situation in which all barcode matching \n       \
        \                       options (MM, MMD, Q) accept different values for both\
        \ barcodes in the form X:Z where X \n                              and Z are\
        \ 2 integers.\n                                Default value: BOTH. This option\
        \ can be set to 'null' to clear the default value. \n                    \
        \          Possible values: {READ_1, READ_2, BOTH, NONE} \n\nREDUNDANT_BARCODES=Boolean\n\
        BRED=Boolean                  This option only applies for paired-end data\
        \ with BARCODE_READ_POS set to 'BOTH'\n                              Indicates\
        \ if both read's barcodes encode redundant information or if barcodes are\
        \ \n                              supposed to be identical at both ends (or\
        \ to resolve to the same sample when a pool of \n                        \
        \      barcodes is used per sample).\n                               \tWhen\
        \ REDUNDANT_BARCODES=false, the 2 barcodes potentially encode\n          \
        \                     different information. For example, only one of the\
        \ barcodes encodes the sample identity \n                              while\
        \ \n                              the second barcode might be a random barcode\
        \ (UMI) to tell apart PCR artefacts from real \n                         \
        \     duplicates.\n                              Another example is when both\
        \ barcodes should be used in a combined fashion to resolve the \n        \
        \                      sample.\n                              In the first\
        \ example, you should use BPOS=BOTH BRED=false BM=READ_1.\n              \
        \                In the second example, you should have BPOS=BOTH BRED=false\
        \ BM=BOTH. \n                              Note that with BPOS=BOTH BRED=true\
        \ BM=BOTH, the behavior would be different as \n                         \
        \     'demultiplex' would then check the STRICT option to perform sample resolution.\n\
        \                              Importantly, when BARCODE_READ_POS (BPOS) ==\
        \ BOTH AND REDUNDANT_BARCODES=false, BLEN, \n                            \
        \  barcode matching options (MM, MMD, Q) and read trimming/clipping options\
        \ (XT, ZT) accept \n                              different values for both\
        \ barcodes in the form X:Z where X and Z are 2 integers.\n               \
        \                 Default value: true. This option can be set to 'null' to\
        \ clear the default value. \n                              Possible values:\
        \ {true, false} \n\nSTRICT=Boolean\nS=Boolean                     For paired-end\
        \ data and when two distinct barcodes/indices are used to encode samples,\n\
        \                               this option tells if both barcodes should\
        \ resolve to the same sample.\n                               When true and\
        \ if only one of the two reads has a barcode match, the read pair is \n  \
        \                            'unassigned'.\n                             \
        \  When false and if only one of the two reads has a barcode match, the read\
        \ pair is \n                              assigned to the\n              \
        \                 corresponding sample\n                              When\
        \ reads resolve to different samples, the read pair is always 'unassigned'.\n\
        \                                Default value: false. This option can be\
        \ set to 'null' to clear the default value. \n                           \
        \   Possible values: {true, false} \n\nMAX_MISMATCHES=String\nMM=String  \
        \                   Maximum mismatches for a barcode to be considered a match.\
        \ In situations where both \n                              barcodes are used\
        \ for sample matching i.e. BPOS=BOTH BM=BOTH (or 2 INDEX_FILE given), two\
        \ \n                              distinct\n                             \
        \  values can be given here using the syntax MM=X:Z where X and Z are 2 integers\
        \ to use for \n                              read_1 and read_2 respectively.\n\
        \                              MM=null is like MM=0\n                    \
        \            Default value: 1. This option can be set to 'null' to clear the\
        \ default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String               \
        \     Minimum difference between the number of mismatches against the best\
        \ and the second best \n                              barcode. When MMD is\
        \ not respected, the read remains unassigned.\n                          \
        \    When two distinct barcodes are used for sample matching (dual encoding),\
        \ two distinct \n                              values can be given using the\
        \ syntax MMD=X:Z where X and Z are 2 integers to use for \n              \
        \                first (e.g. from read_1 or index_1)\n                   \
        \           MMD=null is like MMD=0\n                                Default\
        \ value: 1. This option can be set to 'null' to clear the default value. \n\
        \nMIN_BASE_QUALITY=String\nQ=String                      Minimum base quality\
        \ during barcode matching: bases which quality is less than this \n      \
        \                        cutoff are always considered as a mismatch.When two\
        \ distinct barcodes are used for sample \n                              matching\
        \ (dual encoding), two distinct values can be given using the syntax Q=X:Z\
        \ where X \n                              and Z are 2 integers to use for\
        \ first (e.g. from read_1 or index_1) and second barcode \n              \
        \                (e.g. from read_2 or index_2) respectively.\n           \
        \                   Q=null is like Q=0.\n                                Default\
        \ value: 10. This option can be set to 'null' to clear the default value.\
        \ \n\nXTRIMLEN=String\nXT=String                     Optional extra number\
        \ of base to be trimmed right after the barcode (only used if \n         \
        \                     CLIP_BARCODE=true). \n                             \
        \ When running paired-end, two distinct values can be given using the syntax\
        \ XT=X:Z where X \n                              and Z are 2 integers to use\
        \ for read_1 and read_2 respectively. Note that even when \n             \
        \                 BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given to\
        \ trim the read w/o barcode as to \n                              end up with\
        \ reads of the same length (note that this can also be operated using ZT).\
        \ If a \n                              unique value is given, e.g. XT=1, while\
        \ running paired-end the following rule applies :\n                      \
        \         \t(1) BPOS=READ_1 or BPOS=READ_2, no trim is applied at the read\
        \ w/o barcode \n                              \t(2) BPOS=BOTH, the value is\
        \ used for both reads.\n                              Note that XT=null is\
        \ like XT=0.\n                                Default value: 0. This option\
        \ can be set to 'null' to clear the default value. \n\nZTRIMLEN=String\nZT=String\
        \                     Optional extra number of bases to be trimmed from the\
        \ read end i.e. 3' end.\n                              When running paired-end,\
        \ two distinct values can be given here using the syntax ZT=X:Z \n       \
        \                       where X and Z are 2 integers to use for read_1 and\
        \ read_2 respectively. Note that even \n                              when\
        \ BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given to trim the read\
        \ w/o barcode \n                              as to end up with reads of the\
        \ same length (note that this can also be operated using \n              \
        \                XT). Note that if a single value is passed, the value always\
        \ applies to both reads in \n                              paired-end mode\
        \ without further consideration.\n                              ZT=null is\
        \ like ZT=0.\n                                Default value: 0. This option\
        \ can be set to 'null' to clear the default value. \n\nCLIP_BARCODE=Boolean\n\
        C=Boolean                     Clip barcode sequence from read sequence, as\
        \ well as XTRIMLEN (and ZTRIMLEN) bases if \n                            \
        \  applicable, before writing to output file.\n                          \
        \     If false, reads are written without modification to output file. \n\
        \                              Apply to both barcodes when BPOS=BOTH.\n  \
        \                              Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean   \
        \                Add barcode at the end of the read header. Apply to both\
        \ barcodes when BPOS=BOTH.\n                              \tIf true, the string\
        \ ':barcode' is added at the end of the read header with a ':' added \n  \
        \                            only if current read header does not end with\
        \ ':'.\n                              \tIf both reads of the pair have a barcode\
        \ (i.e. BARCODE_READ_POS == BOTH), thenthe second \n                     \
        \         read also has its own matched barcode written. Else, the read without\
        \ a barcode receives \n                              the barcode from the\
        \ barcoded read.\n                              \tFor example :\n        \
        \                      \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:'\n\
        \                              \tbecomes\n                              \t\
        \t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:BARCODE'\n             \
        \                 \n                              \tWhen barcodes containing\
        \ random positions, i.e. 'N', (for example like \tin the iCLIP \n        \
        \                      protocol) or are UMIs, the added sequence is the sequence\
        \ clipped from the read and NOT \n                              the matched\
        \ barcode.\n                                Default value: true. This option\
        \ can be set to 'null' to clear the default value. \n                    \
        \          Possible values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\n\
        SAME_HEADERS=Boolean          Makes sure that headers of both reads of a pair\
        \ are identical, using the following read \n                             \
        \ header pattern (for both reads of a pair) :\n                          \
        \    \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 SAMPLEBARCODE_READ1:SAMPLEBARCODE_READ2(if\
        \ \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2This\
        \ option only makes sense in \n                              paired end mode\
        \ and ADD=true. Some (if not all) mappers will indeed complain when the \n\
        \                              read headers are not identical. When molecular\
        \ barcodes are present in reads (either as \n                            \
        \  additional barcodes or as degenerate barcodes ie with 'N') and the RCHAR\
        \ is used, you \n                              will end with (problematic)\
        \ read headers like this :\n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
        \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
        \                              SAME_HEADERS=true will instead generates the\
        \ following identical header for both reads :\n                          \
        \    \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
        \                              \tNote that we also clipped the useless '1:N:0'\
        \ and '3:N:0' has they will also result in \n                            \
        \  generating different headers.\n                              \t\t Important\
        \ : this option will force RCHAR=: UNLESS you specify RCHAR=null ; in which\
        \ \n                              case a space will be preserved ie : \n \
        \                             \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994 TAGAACAC:TGGAGTAG:CGTTGTAT\n\
        \                                Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String  \
        \                Replace spaces in read name/header using provided character.\
        \ This is particularly handy \n                              when you need\
        \ to retain\t ADDed barcode in read name/header during mapping (everything\
        \ \n                              after space in read name is usually clipped\
        \ in BAM files).\tFor example, with RCHAR=':' :\n                        \
        \      \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:'\n           \
        \                   \tbecomes\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
        \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
        V=FastqQualityFormat          A value describing how the quality values are\
        \ encoded in the fastq.  Either 'Solexa' for \n                          \
        \    pre-pipeline 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline\
        \ 1.3 and \n                              above (phred scaling + 64) or 'Standard'\
        \ for phred scaled scores with a character shift \n                      \
        \        of 33.  If this value is not specified (or 'null' is given), the\
        \ quality format will be \n                              detected.\n     \
        \                           Default value: Standard. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {Solexa, Illumina, Standard} \n\nOUTPUT_DIR=File\nO=File       \
        \                 Output directory. By default, output files are written in\
        \ running directory.\n                                Default value: null.\
        \ \n\nKEEP_UNASSIGNED_READ=Boolean\nUN=Boolean                    Should un-assigned\
        \ reads be saved in files or simply ignored. File names are \n           \
        \                   automatically created or can be given using UF1 & UF2\
        \ options.\n                                Default value: true. This option\
        \ can be set to 'null' to clear the default value. \n                    \
        \          Possible values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\n\
        UF1=String                    Name of the file in which to write unassigned\
        \ reads from FILE1.Either a name (in which \n                            \
        \  case the file will be created in the output dir) or full path.\n      \
        \                          Default value: unassigned_1.txt. This option can\
        \ be set to 'null' to clear the default \n                              value.\
        \ \n\nUNASSIGNED_FILE_NAME_2=String\nUF2=String                    Name of\
        \ the file in which to write unassigned reads from FILE2.Either a name (in\
        \ which \n                              case the file will be created in the\
        \ output dir) or full path.\n                                Default value:\
        \ unassigned_2.txt. This option can be set to 'null' to clear the default\
        \ \n                              value. \n\nMETRICS_FILE_NAME=String\nM=String\
        \                      File name where to write demultiplexing statistics.\
        \ Either a name (in which case the file \n                              will\
        \ be created in the output dir) or an absolute path.\n                   \
        \             Default value: jemultiplexer_out_stats.txt. This option can\
        \ be set to 'null' to clear \n                              the default value.\
        \ \n\nBARCODE_DIAG_FILE=String\nDIAG=String                   Name for a barcode\
        \ match reporting file (not generated by default).Either a name (in \n   \
        \                           which case the file will be created in the output\
        \ dir) or full path. This file will \n                              contain\
        \ a line per read pair with the barcode best matching the read subsequence\
        \ or \n                              'null' when no match is found according\
        \ to matching parameters ; and the final selected \n                     \
        \         sample. This file is useful for debugging or further processing\
        \ in case both ends are \n                              barcoded.\n      \
        \                        N.B: this file will have a size of about one of the\
        \ fastq input files.  Default value: \n                              null.\
        \ \n\nFORCE=Boolean                 Allows to overwrite existing files (system\
        \ rights still apply).\n                                Default value: false.\
        \ This option can be set to 'null' to clear the default value. \n        \
        \                      Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
        GZ=Boolean                    Compress output files using gzip.\n        \
        \                        Default value: true. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {true, false} \n\nFASTQ_FILE_EXTENSION=String   Change the default extension\
        \ of created fastq files, eg 'fastqsanger'. By default uses \n           \
        \                   the file extension from input fastq file. If result file\
        \ names are given in the barcode \n                              file, this\
        \ option is only used to adapt the unassigned file names. When using \n  \
        \                            compression, a .gz is always appended to file\
        \ names and should not be specified in \n                              FASTQ_FILE_EXTENSION\
        \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq and\
        \ NOT FASTQ_FILE_EXTENSION=fastq.gz\n                                Default\
        \ value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\nASYNC=Boolean    \
        \             Use one thread per Fastq Writer.\n                         \
        \       Default value: true. This option can be set to 'null' to clear the\
        \ default value. \n                              Possible values: {true, false}\
        \ \n\nSTATS_ONLY=Boolean            Only produces metric and diagnostic reports\
        \ i.e. no output fastq file produced.\n                                Default\
        \ value: false. This option can be set to 'null' to clear the default value.\
        \ \n                              Possible values: {true, false} \n\nUSE_EMBASE=Boolean\n\
        EM=Boolean                    Enables emBASE mode i.e fetch information from\
        \ emBASE and place demultiplexed files \n                              directly\
        \ in emBASE repository structure.\n                              This option\
        \ is mutually exclusive with BARCODE_FILE.\n                             \
        \ Note : this option forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
        \ (all \n                              other user options supported).\n  \
        \                              Default value: false. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false}  Cannot be used in conjuction with option(s) BARCODE_FILE\
        \ \n                              (BF)\n\n"
      generated_using: *id004
    - !Command
      command: *id006
      positional:
      - !Positional
        description: ''
        position: 0
        name: Jeclipper
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jeclipper [options]\n\
        \nReads records in the supplied FASTQ file(s) according to specified read\
        \ layouts (RL option) and write output FASTQ file(s) according to supplied\
        \ output layouts (OL option).\n\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n\
        -h                            Displays options specific to this tool.\n\n\
        --stdhelp\n-H                            Displays options specific to this\
        \ tool AND options common to all Picard command line \n                  \
        \            tools.\n\n--version                     Displays program version.\n\
        \nFASTQ=File\nF=File                        Input fastq file (optionally gzipped)\
        \  Default value: null. This option must be specified \n                 \
        \             at least 1 times. \n\nREAD_LAYOUT=String\nRL=String        \
        \             Describes the read layout(s) e.g. 'RL=<BARCODE1:6><SAMPLE:x>'\
        \ of input fastq file(s). The \n                              input fastq\
        \ files and read layouts are mached up by order on the command line.\n   \
        \                           Read layouts are only needed for complex layouts\
        \ but one must provide read layouts for \n                              ALL\
        \ or NONE of the input fastq files.\n                              Read layouts\
        \ are made of <UMIn:X>, <BARCODEn:X>, <SAMPLEn:X> blocks to describe blocks\
        \ of \n                              type UMI, BARCODE or SAMPLE with : \n\
        \                                  * 'n' the unique block index (an index\
        \ must be unique across all read layouts for \n                          \
        \    each index or each block type), use the same index to specify redundant\
        \ blocks e.g. use \n                              <BARCODE1:6> in two different\
        \ layouts to specify that the barcode found in both reads are \n         \
        \                     the same\n                                 * 'X' : either\
        \ a number indicating the length of the UMI, BARCODE or SAMPLE block or a\
        \ \n                              negative number e.g. -2 to specify the last\
        \ 2 bases should be ignored/clipped) or the \n                           \
        \   letter 'x' to specify to take the sequence till the end of read. Importantly,\
        \ the 'x' or \n                              negative length shotcut can only\
        \ be used in the last block of a read layout (i.e. \n                    \
        \          <BARCODE1:x><SAMPLE1:20> is not allowed)\n                    \
        \          \n                                Default value: null. This option\
        \ may be specified 0 or more times. \n\nOUTPUT_LAYOUT=String\nOL=String  \
        \                   Describes the output file layout(s) using the slots defined\
        \ in read layouts and ':' to \n                              delimitate three\
        \ parts e.g. 'OL=1::' : \n                              \t1.The number in\
        \ the first part (i.e. from '1:' above) is the output file index and it \n\
        \                              must be unique across all 'OL' inputs. Inferred\
        \ from order in comamnd line when not given\n                            \
        \  \t2.The second part (i.e. '' above) is the read header layout ; when writing\
        \ multiple UMI \n                              and BARCODE slots in output\
        \ read headers, these are always separated with the RCHAR (':' \n        \
        \                      by defaults).\n                              \t3.The\
        \ third part (i.e. '' above) is the read sequence layout.\n              \
        \                  Default value: null. This option may be specified 0 or\
        \ more times. \n\nWITH_QUALITY_IN_READNAME=Boolean\nWQ=Boolean           \
        \         Should quality string also be injected in read names. Only applies\
        \ to READBAR and UMI \n                              described in the read\
        \ name slot of output layout \n                              If turned on,\
        \ the quality string is translated into 2 digits number and a e.g. UMI will\
        \ \n                              look like\n                            \
        \  \t '...:ATGCAT333423212322:...' instead of '...:ATGCAT:...'\n         \
        \                     This option is particularly useful with the retag module\
        \ that knows how to extract \n                              quality numbers\
        \ into BAM tags.  Default value: false. This option can be set to 'null' to\
        \ \n                              clear the default value. Possible values:\
        \ {true, false} \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\nOWID=Boolean\
        \                  Should the output layout number (output layout first slot)\
        \ be injected in the filename ?\n                              Only used in\
        \ absence of explicit file names in the barcode file.\n                  \
        \              Default value: true. This option can be set to 'null' to clear\
        \ the default value. \n                              Possible values: {true,\
        \ false} \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWHL=Boolean  \
        \                Should the output layout used for the read name (output layout\
        \ second slot,in short \n                              format) be injected\
        \ in the filename ? When true, each ouput file name contains e.g. \n     \
        \                         '_B1U1' for OL='1::'  \n                       \
        \       Only used in absence of explicit file names in the barcode file.\n\
        \                                Default value: false. This option can be\
        \ set to 'null' to clear the default value. \n                           \
        \   Possible values: {true, false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
        OWSL=Boolean                  Should the output layout used for the read sequence\
        \ (output layout third slot, in short \n                              format)\
        \ be injected in the filename ?When true, each ouput file name contains e.g.\
        \ '_S1' \n                              for OL='1::'  \n                 \
        \             Only used in absence of explicit file names in the barcode file.\n\
        \                                Default value: false. This option can be\
        \ set to 'null' to clear the default value. \n                           \
        \   Possible values: {true, false} \n\nOUTPUT_DIR=File\nO=File           \
        \             Output directory. By default, output files are written in running\
        \ directory.\n                                Default value: null. \n\nFORCE=Boolean\
        \                 Allows to overwrite existing files (system rights still\
        \ apply).\n                                Default value: false. This option\
        \ can be set to 'null' to clear the default value. \n                    \
        \          Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean\
        \                    Compress output files using gzip.\n                 \
        \               Default value: true. This option can be set to 'null' to clear\
        \ the default value. \n                              Possible values: {true,\
        \ false} \n\nREAD_NAME_SEPARATOR_CHAR=String\nSEP=String                 \
        \   Separator character used to concatenate barcodes and umis in read header\n\
        \                                Default value: :. This option can be set\
        \ to 'null' to clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
        V=FastqQualityFormat          A value describing how the quality values are\
        \ encoded in the fastq files.  Either \n                              'Solexa'\
        \ for pre-pipeline 1.3 style scores (solexa scaling + 66), 'Illumina' for\
        \ pipeline \n                              1.3 and above (phred scaling +\
        \ 64) or 'Standard' for phred scaled scores with a character \n          \
        \                    shift of 33.  If this value is not specified (or 'null'\
        \ is given), the quality format is \n                              assumed\
        \ to be will the 'Standard' for phred scale.\n                           \
        \     Default value: null. Possible values: {Solexa, Illumina, Standard} \n\
        \nTEST_MODE_STOP_AFTER_PARSING=Boolean\nTEST=Boolean                  test\
        \ mode ie code execution stops right before read demultiplexing starts btu\
        \ after \n                              comamnd line validation  Default value:\
        \ false. This option can be set to 'null' to clear \n                    \
        \          the default value. Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
        \   Change the default extension of created fastq files, eg 'fastqsanger'.\
        \ By default uses \n                              the file extension from\
        \ input fastq file. If result file names are given in the barcode \n     \
        \                         file, this option is only used to adapt the unassigned\
        \ file names. When using \n                              compression, a .gz\
        \ is always appended to file names and should not be specified in \n     \
        \                         FASTQ_FILE_EXTENSION i.e. \n                   \
        \           use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
        \                                Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
        ASYNC=Boolean                 Use one thread per Fastq Writer.\n         \
        \                       Default value: true. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {true, false} \n\n"
      generated_using: *id004
    - !Command
      command: *id007
      positional:
      - !Positional
        description: 'Counting starts at 1 and negative numbers can be used to start
          counting from the end '
        position: 0
        name: header.
        optional: false
      - !Positional
        description: "a hyphen ('-'). The order of concatenation follows the order\
          \ of UMI_SLOT in the command "
        position: 0
        name: using
        optional: false
      - !Positional
        description: 'For example, consider the following read name that lists 3 different
          sequence codes in '
        position: 1
        name: line.
        optional: false
      - !Positional
        description: 'ACTCTAC,TCTGTAC,ACTGTAG  '
        position: 0
        name: ACTGTAC
        optional: false
      - !Positional
        description: 'RGPG=String                   Read Group program group; only
          considered when RG=true  Default value: null. '
        position: 0
        name: null.
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: TagFromReadName\
        \ [options]\n\nExtracts barcode and UMI sequence(s) embedded in read names\
        \ and tag reads with proper BAM tag.\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n\
        -h                            Displays options specific to this tool.\n\n\
        --stdhelp\n-H                            Displays options specific to this\
        \ tool AND options common to all Picard command line \n                  \
        \            tools.\n\n--version                     Displays program version.\n\
        \nINPUT=File\nI=File                        Input SAM/BAM file  Required.\
        \ \n\nOUTPUT=File\nO=File                        Output SAM/BAM file  Required.\
        \ \n\nBC_SLOT=Integer               Where to find the BARCODE(s) in the read\
        \ name once read name has been tokenized using the \n                    \
        \          SPLIT character (e.g. ':'). \n                              This\
        \ option can be specified multiple time when multiple BARCODES are present\
        \ in read \n                              header.\n                      \
        \        Counting starts at 1 and negative numbers can be used to start counting\
        \ from the end \n                              (last token is '-1').\n   \
        \                           BARCODE(s) extracted from read name are used to\
        \ assemble a 'BC:Z:GATCCTAG' tag (BC is \n                              default,\
        \ see BC_TAG). \n                              Following SAM specifications,\
        \ in the case of multiple barcodes, all the barcodes are \n              \
        \                concatenated using \n                              a hyphen\
        \ ('-') between the barcodes. The order of concatenation follows the order\
        \ of \n                              BC_SLOT in the command line.\n      \
        \                        For example, consider the following read name that\
        \ lists 3 different barcodes in the end \n                              :\
        \ \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
        \ \n                              \t to indicate that the three slots contain\
        \ barcodes, use \n                              \t\t BC_SLOT=-1 BC_SLOT=-2\
        \ BC_SLOT=-3 ; which will result as BC:Z:AAGGTACG-GATCCTAG-CGATGTTT\n    \
        \                          \t if only the 2 last ones should be considered,\
        \ use \n                              \t\t BC_SLOT=-1 BC_SLOT=-2 ; which will\
        \ result as BC:Z:AAGGTACG-GATCCTAG\t Note that BC_SLOT \n                \
        \              order matters as : \n                              \t\t BC_SLOT=-2\
        \ BC_SLOT=-1 ; would result as BC:Z:GATCCTAG-AAGGTACG  Default value: null.\
        \ \n                              This option may be specified 0 or more times.\
        \ \n\nUMI_SLOT=Integer              Where to find the UMI(s) in the read name\
        \ once read name has been tokenized using the \n                         \
        \     SPLIT character (e.g. ':'). \n                              This option\
        \ can be specified multiple time when multiple UMIs are present in read header.\n\
        \                              Counting starts at 1 and negative numbers can\
        \ be used to start counting from the end \n                              (last\
        \ token is '-1').\n                              UMI(s) extracted from read\
        \ name are used to assemble both a RX and OX tag e.g. \n                 \
        \             'RX:Z:GATCCTAG' tag. \n                              Following\
        \ SAM specifications, in the case of multiple UMIs, all the UMIs are concatenated\
        \ \n                              using \n                              a\
        \ hyphen ('-'). The order of concatenation follows the order of UMI_SLOT in\
        \ the command \n                              line.\n                    \
        \          For example, consider the following read name that lists 3 different\
        \ sequence codes in \n                              the end : \n         \
        \                     \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
        \ \n                              \t to indicate that the 2 last slots contain\
        \ UMIs, use \n                              \t\t UMI_SLOT=-1 UMI_SLOT=-2 ;\
        \ which will result as RX:Z:AAGGTACG-GATCCTAG\t Note that \n             \
        \                 UMI_SLOT order matters as : \n                         \
        \     \t\t UMI_SLOT=-2 UMI_SLOT=-1 ; would result as RX:Z:GATCCTAG-AAGGTACG\
        \  Default value: null. \n                              This option may be\
        \ specified 0 or more times. \n\nCLUSTERED_CODES_FILE=File\nCC=File      \
        \                 Group of barcodes (clusters) for on-the-fly correction of\
        \ the BARCODEs. This file \n                              contains mapping\
        \ between the barcodes sequences\n                              as originally\
        \ found in the FASTQ reads (and in the read name of the input BAM) and the\
        \ \n                              corrected sample barcode\n             \
        \                 sequences (e.g. as identified by clustering with mismatches\
        \ using tools like starcode or \n                              vsearch ) \n\
        \                              that should be written in the BC tag in place\
        \ of the original sequence.\n                              If provided, the\
        \ BARCODE sequence(s) extracted from read name are converted to the 'real'\
        \ \n                              barcodes according\n                   \
        \           to the mapping described in this file. If the sequence is not\
        \ found in the supplied \n                              mapping file, the\
        \ read is either\n                              trashed or kept (according\
        \ to option KEEP_UNASSIGNED_BARCODES), in which case the value \n        \
        \                      defined by UNASSIGNED_BARCODE_VALUE\n             \
        \                 is used.\n                              Format: two column\
        \ text file, one cluster per line with the real barcode in the first \n  \
        \                            line and the comma separated\n              \
        \                list of codes in the second column i.e. :\n             \
        \                 \t\t ACTGTAC \tACTCTAC,TCTGTAC,ACTGTAG  \n             \
        \                 All the codes MUST have the same length  Default value:\
        \ null. \n\nKEEP_UNASSIGNED_BARCODES=Boolean\nKUP=Boolean                \
        \   Should read be keep when no mapping was defined for the orginal barcode\
        \ sequence in \n                              provided CLUSTERED_CODES_FILE.\n\
        \                              If false, the read is not written in output\
        \ file.  Default value: true. This option can \n                         \
        \     be set to 'null' to clear the default value. Possible values: {true,\
        \ false} \n\nUNASSIGNED_BARCODE_VALUE=String\nUBV=String                 \
        \   Value to use for the BARCODE tag when CLUSTERED_CODES_FILE was provided\
        \ and no mapping \n                              was defined for the orginal\
        \ barcode sequence.  Default value: NA. This option can be set \n        \
        \                      to 'null' to clear the default value. \n\nTRIM_HEADERS=Boolean\n\
        T=Boolean                     Should barcode/UMIs information be removed from\
        \ read names in the output BAM ?   Default \n                            \
        \  value: false. This option can be set to 'null' to clear the default value.\
        \ Possible \n                              values: {true, false} \n\nTSLOTS=Integer\n\
        TSLOTS=Integer                Where to find *all* barcode(s) and UMIs in the\
        \ read name once has been tokenized using \n                             \
        \ the SPLIT character (e.g. ':'). \n                              This option\
        \ is only considered when TRIM_HEADERS=true and should only be used when \n\
        \                              UMI_SLOT and BC_SLOT do not\n             \
        \                 describe all the slots that should be trimmed. When TSLOTS\
        \ is ommited while \n                              TRIM_HEADERS=true, the\
        \ values\n                              of UMI_SLOT and BC_SLOT apply.\n \
        \                             IMPORTANT : counting starts at 1 and negative\
        \ numbers can be used to start counting from \n                          \
        \    the end.\n                              See UMI_SLOT help for examples.\
        \  Default value: null. This option may be specified 0 or \n             \
        \                 more times. \n\nSPLIT_CHAR=String\nSPLIT=String        \
        \          Character to use to split up the read header line, default is ':'.\
        \  Default value: :. \n                              This option can be set\
        \ to 'null' to clear the default value. \n\nBC_TAG=String                \
        \ SAM Tag to use to store barcode(s) sequences extracted from barcode slots\
        \ (BC by \n                              default). Do not change unless you\
        \ have good reasons to.  Default value: BC. This option \n               \
        \               can be set to 'null' to clear the default value. \n\nQT_TAG=String\
        \                 SAM Tag to use to store barcode(s) quality score extracted\
        \ from barcode slots (QT by \n                              default). Do not\
        \ change unless you have good reasons to.  Default value: QT. This option\
        \ \n                              can be set to 'null' to clear the default\
        \ value. \n\nWITH_RX=Boolean               Should the RX (and QX when relevant)\
        \ SAM Tag(s) be used to store UMI(s) sequence (and \n                    \
        \          quality) extracted from UMI slots. Set to FALSE if you don't want\
        \ these tags to be set.   \n                              Default value: true.\
        \ This option can be set to 'null' to clear the default value. \n        \
        \                      Possible values: {true, false} \n\nWITH_OX=Boolean\
        \               Should the OX (and BZ when relevant) SAM Tag(s) be used to\
        \ store UMI(s) sequence (and \n                              quality) extracted\
        \ from UMI slots. Set to FALSE if you don't want these tags to be set.   \n\
        \                              Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nUMI_SEQ_TAG=String            SAM Tag to use to\
        \ store original UMI(s) sequence extracted from UMI slots (instead of RX \n\
        \                              / OX)  Default value: null. \n\nUMI_QUAL_TAG=String\
        \           SAM Tag to use to store original UMI(s) sequence extracted from\
        \ UMI slots (instead of QX \n                              / BZ)  Default\
        \ value: null. \n\nADD_RG=Boolean\nARG=Boolean                   Should a\
        \ read group be created for each barcode. This option is only considered when\
        \ \n                              providing a CLUSTERED_CODES_FILE.  Default\
        \ value: false. This option can be set to 'null' \n                      \
        \        to clear the default value. Possible values: {true, false} \n\nRGPL=String\
        \                   Read Group platform (e.g. illumina, solid) ; only considered\
        \ when RG=true  Default value: \n                              null. \n\n\
        RGPG=String                   Read Group program group; only considered when\
        \ RG=true  Default value: null. \n\nPROGRAM_RECORD_ID=String\nPG=String  \
        \                   The program record ID for the @PG record(s) created by\
        \ this program. Set to null to \n                              disable PG\
        \ record creation.  This string may have a suffix appended to avoid collision\
        \ \n                              with other program record IDs.  Default\
        \ value: TagFromReadName. This option can be set to \n                   \
        \           'null' to clear the default value. \n\nPROGRAM_GROUP_VERSION=String\n\
        PG_VERSION=String             Value of VN tag of PG record to be created.\
        \ If not specified, the version will be \n                              detected\
        \ automatically.  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\n\
        PG_COMMAND=String             Value of CL tag of PG record to be created.\
        \ If not supplied the command line will be \n                            \
        \  detected automatically.  Default value: null. \n\nPROGRAM_GROUP_NAME=String\n\
        PG_NAME=String                Value of PN tag of PG record to be created.\
        \  Default value: TagFromReadName. This option \n                        \
        \      can be set to 'null' to clear the default value. \n\nCOMMENT=String\n\
        CO=String                     Comment(s) to include in the output file's header.\
        \  Default value: null. This option may \n                              be\
        \ specified 0 or more times. \n\n"
      generated_using: *id004
    - !Command
      command: *id008
      positional:
      - !Positional
        description: 'Required. '
        position: 0
        name: data.
        optional: false
      - !Positional
        description: INDEX_FILE2=File
        position: 0
        name: Required.
        optional: false
      - !Positional
        description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
        position: 0
        name: Or
        optional: false
      - !Positional
        description: 'Indicates if both index barcodes encode redundant information
          i.e. if both barcodes are '
        position: 0
        name: provided.
        optional: false
      - !Positional
        description: 'values can be given here using the syntax MM=X:Z where X and
          Z are 2 integers to use for '
        position: 0
        name: distinct
        optional: false
      - !Positional
        description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'"
        position: 0
        name: becomes
        optional: false
      - !Positional
        description: "Default value: Standard. This option can be set to 'null' to\
          \ clear the default value. "
        position: 0
        name: detected.
        optional: false
      - !Positional
        description: 'N.B: this file will have a size of about one of the fastq input
          files.  Default value: '
        position: 0
        name: barcoded.
        optional: false
      - !Positional
        description: "FORCE=Boolean                 Allows to overwrite existing files\
          \ (system rights still apply).\nDefault value: false. This option can be\
          \ set to 'null' to clear the default value."
        position: 1
        name: null.
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: JemultiplexerIllumina\
        \ [options]\n\n\tFastq files demultiplexer for Illumina Fastq files using\
        \ Illumina Index files.\n\tFastq files (reads and index) can be in gzip compressed\
        \ (end in .gz). \n\tBy default output files are gzipped and have names following\
        \ the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]' unless\
        \ you gave file\n\t names to use within the barcode description file.\nExample\
        \ : \n\t je demultiplex-illu F1=fastq_1.txt.gz I1=index_1.txt.gz BF=barcodes.bs\
        \ O=~/Desktop/test-jemultiplexer2/ \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n\
        -h                            Displays options specific to this tool.\n\n\
        --stdhelp\n-H                            Displays options specific to this\
        \ tool AND options common to all Picard command line \n                  \
        \            tools.\n\n--version                     Displays program version.\n\
        \nFASTQ_FILE1=File\nF1=File                       Input fastq file (optionally\
        \ gzipped) for single end data, or first read in paired end \n           \
        \                   data.\n                                Required. \n\n\
        FASTQ_FILE2=File\nF2=File                       Input fastq file (optionally\
        \ gzipped) for the second read of paired end data.\n                     \
        \           Default value: null. \n\nINDEX_FILE1=File\nI1=File           \
        \            Fastq file for index 1 (barcode) reads, optionally gzipped.\n\
        \                                Required. \n\nINDEX_FILE2=File\nI2=File \
        \                      Fastq file for index 2 (barcode) reads, optionally\
        \ gzipped.\n                              A INDEX_FILE1 MUST be provided when\
        \ INDEX_FILE2 is given. This situation corresponds to \n                 \
        \             Illumina dual indexing.\n                                Default\
        \ value: null. \n\nBARCODE_FILE=File\nBF=File                       Barcode\
        \ file describing sequence list and sample names. Tab-delimited file with\
        \ 2 \n                              columns, with the sample in col1 and the\
        \ corresponding barcode in col2.\n                              Simple barcode\
        \ file format : 2 tab-delimited colums\n                              \tIf\
        \ multiple barcode map to the same sample, either line can be duplicated e.g.\n\
        \                              \t\tsample1\tATAT\n                       \
        \       \t\tsample1\tGAGG\n                              \t\tsample2\tCCAA\n\
        \                              \t\tsample2\tTGTG\n                       \
        \       \tOr barcodes can be combined using the OR operator '|' i.e. the file\
        \ above can be \n                              re-written like\n         \
        \                      \t\tsample1\tATAT|GAGG\n                          \
        \    \t\tsample2\tCCAA|TGTG\n                              \tFinally, for\
        \ the special situation of paired-end data in which barcodes differ at both\
        \ \n                              ends (ie BPOS=BOTH BRED=false BM=BOTH ,\
        \ see BRED option description), barcodes for read_1 \n                   \
        \           and read_2 can be distinguished using a ':' separator i.e. \n\
        \                              \t\tsample1\tATAT:GAGG\n                  \
        \            \t\tsample2\tCCAA:TGTG\n                              \tThis\
        \ above syntax means that sample 1 is encoded with ATAT barcode at read_1\
        \ AND GAGG \n                              barcode at read_2. Note that you\
        \ can still combine barcodes using | e.g. \n                             \
        \ \t\tsample1\tATAT|GAGG:CCAA|TGTG\n                              \twould\
        \ mean that sample 1 is mapped by the combination of barcode: ATAT OR GAGG\
        \ at read_1 \n                              AND CCAA OR TGTG at read_2.\n\
        \                              Extended barcode file format : 3 (single-end)\
        \ or 4 (paired-end) tab-delimited colums\n                              \t\
        same as the simple barcode file format but the extra columns contains the\
        \ file name(s) \n                              to use to name output files.\
        \ A unique extra column is expected for single-end while 2 \n            \
        \                  extra columns are expected for paired-end. In case, lines\
        \ are duplicated (multiple \n                              barcodesmapping\
        \ the same sample), the same file name should be indicated in the third \n\
        \                              (and fourth) column(s). \n                \
        \              \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n         \
        \                     \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n  \
        \                            \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n\
        \                              \tOr\n                              \t\tsample1\
        \ \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n             \
        \                 Ns in barcode sequence are allowed and are used to flag\
        \ positions that should be ignored \n                              in sample\
        \ matching \n                              \t i.e. they will be clipped off\
        \ the read sequence (like in iCLIP protocol).  Required.  \n             \
        \                 Cannot be used in conjuction with option(s) USE_EMBASE (EM)\n\
        \nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition          Indicates\
        \ the location of additional barcodes present in the read(s). Setting this\
        \ option \n                              implies setting the LEN option.\n\
        \                              \tImportantly, these additional barcodes must\
        \ not encode sample identity information but \n                          \
        \    used for \n                              \te.g. molecular barcoding (UMIs)\
        \ or for any purpose other than sample identity encoding.  \n            \
        \                  Default value: BOTH. This option can be set to 'null' to\
        \ clear the default value. \n                              Possible values:\
        \ {READ_1, READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String              \
        \      Length of the additional barcodes present in the read(s) as indicated\
        \ by the BPOS option. \n                              Two distinct length\
        \ can be provided using the syntax LEN=X:Z where X and Z are 2 integers \n\
        \                              representing the barcode length for read_1\
        \ and read_2 respectively.\n                              Only relevant when\
        \ BPOS != NONE.  Default value: null. \n\nREDUNDANT_BARCODES=Boolean\nBRED=Boolean\
        \                  This option only applies for paired-end data with *both*\
        \ INDEX_FILE1 and INDEX_FILE2 \n                              provided.\n\
        \                              Indicates if both index barcodes encode redundant\
        \ information i.e. if both barcodes are \n                              supposed\
        \ to be identical (or resolve to the same sample when a pool of barcodes is\
        \ used \n                              per sample).\n                    \
        \           \tWhen BRED=true, the STRICT option guides the sample lookup behavior\t\
        When BRED=false, \n                              barcodes are combined prior\
        \ to sample lookup.\n                                Default value: true.\
        \ This option can be set to 'null' to clear the default value. \n        \
        \                      Possible values: {true, false} \n\nSTRICT=Boolean\n\
        S=Boolean                     For paired-end data and when two distinct barcodes/indices\
        \ are used to encode samples,\n                               this option\
        \ tells if both barcodes should resolve to the same sample.\n            \
        \                   When true and if only one of the two reads has a barcode\
        \ match, the read pair is \n                              'unassigned'.\n\
        \                               When false and if only one of the two reads\
        \ has a barcode match, the read pair is \n                              assigned\
        \ to the\n                               corresponding sample\n          \
        \                    When reads resolve to different samples, the read pair\
        \ is always 'unassigned'.\n                                Default value:\
        \ false. This option can be set to 'null' to clear the default value. \n \
        \                             Possible values: {true, false} \n\nMAX_MISMATCHES=String\n\
        MM=String                     Maximum mismatches for a barcode to be considered\
        \ a match. In situations where both \n                              barcodes\
        \ are used for sample matching i.e. BPOS=BOTH BM=BOTH (or 2 INDEX_FILE given),\
        \ two \n                              distinct\n                         \
        \      values can be given here using the syntax MM=X:Z where X and Z are\
        \ 2 integers to use for \n                              read_1 and read_2\
        \ respectively.\n                              MM=null is like MM=0\n    \
        \                            Default value: 1. This option can be set to 'null'\
        \ to clear the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String  \
        \                  Minimum difference between the number of mismatches against\
        \ the best and the second best \n                              barcode. When\
        \ MMD is not respected, the read remains unassigned.\n                   \
        \           When two distinct barcodes are used for sample matching (dual\
        \ encoding), two distinct \n                              values can be given\
        \ using the syntax MMD=X:Z where X and Z are 2 integers to use for \n    \
        \                          first (e.g. from read_1 or index_1)\n         \
        \                     MMD=null is like MMD=0\n                           \
        \     Default value: 1. This option can be set to 'null' to clear the default\
        \ value. \n\nMIN_BASE_QUALITY=String\nQ=String                      Minimum\
        \ base quality during barcode matching: bases which quality is less than this\
        \ \n                              cutoff are always considered as a mismatch.When\
        \ two distinct barcodes are used for sample \n                           \
        \   matching (dual encoding), two distinct values can be given using the syntax\
        \ Q=X:Z where X \n                              and Z are 2 integers to use\
        \ for first (e.g. from read_1 or index_1) and second barcode \n          \
        \                    (e.g. from read_2 or index_2) respectively.\n       \
        \                       Q=null is like Q=0.\n                            \
        \    Default value: 10. This option can be set to 'null' to clear the default\
        \ value. \n\nXTRIMLEN=String\nXT=String                     Optional extra\
        \ number of base to be trimmed right after the barcode (only used if \n  \
        \                            CLIP_BARCODE=true). \n                      \
        \        When running paired-end, two distinct values can be given using the\
        \ syntax XT=X:Z where X \n                              and Z are 2 integers\
        \ to use for read_1 and read_2 respectively. Note that even when \n      \
        \                        BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be\
        \ given to trim the read w/o barcode as to \n                            \
        \  end up with reads of the same length (note that this can also be operated\
        \ using ZT). If a \n                              unique value is given, e.g.\
        \ XT=1, while running paired-end the following rule applies :\n          \
        \                     \t(1) BPOS=READ_1 or BPOS=READ_2, no trim is applied\
        \ at the read w/o barcode \n                              \t(2) BPOS=BOTH,\
        \ the value is used for both reads.\n                              Note that\
        \ XT=null is like XT=0.\n                                Default value: 0.\
        \ This option can be set to 'null' to clear the default value. \n\nZTRIMLEN=String\n\
        ZT=String                     Optional extra number of bases to be trimmed\
        \ from the read end i.e. 3' end.\n                              When running\
        \ paired-end, two distinct values can be given here using the syntax ZT=X:Z\
        \ \n                              where X and Z are 2 integers to use for\
        \ read_1 and read_2 respectively. Note that even \n                      \
        \        when BPOS=READ_1 or BPOS=READ_2, a X:Y synthax can be given to trim\
        \ the read w/o barcode \n                              as to end up with reads\
        \ of the same length (note that this can also be operated using \n       \
        \                       XT). Note that if a single value is passed, the value\
        \ always applies to both reads in \n                              paired-end\
        \ mode without further consideration.\n                              ZT=null\
        \ is like ZT=0.\n                                Default value: 0. This option\
        \ can be set to 'null' to clear the default value. \n\nCLIP_BARCODE=Boolean\n\
        C=Boolean                     Clip barcode sequence from read sequence, as\
        \ well as XTRIMLEN (and ZTRIMLEN) bases if \n                            \
        \  applicable, before writing to output file.\n                          \
        \     If false, reads are written without modification to output file. \n\
        \                              Apply to both barcodes when BPOS=BOTH.\n  \
        \                              Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean   \
        \                Add matched barcode at the end of the read header. Applies\
        \ to both index when INDEX_FILE2 \n                              is also provided.\n\
        \                              \tFirst the sample encoding barcodes from I1\
        \ (and I2 when relevant) are added to the read \n                        \
        \      headers like \n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
        \ 2:N:0:I1_BARCODE:I2_BARCODE'\n                              \tThen, if BPOS!=NONE,\
        \ the additional barcodes (UMIs) clipped from the read(s) are added \n   \
        \                           to their own header, like \n                 \
        \             \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 \n           \
        \                   2:N:0:I1_BARCODE:I2_BARCODE:CLIPPED_SEQ_FROMREAD'\n  \
        \                              Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\nSAME_HEADERS=Boolean\
        \          Makes sure that headers of both reads of a pair are identical,\
        \ using the following read \n                              header pattern\
        \ (for both reads of a pair) :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
        \ I1_BARCODE:I2_BARCODE(if \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2\
        \ \n                              This option only makes sense in paired end\
        \ mode and ADD=true. Some (if not all) mappers \n                        \
        \      will indeed complain when the read headers are not identical. When\
        \ molecular barcodes are \n                              present in reads\
        \ and the RCHAR is used, you will end with (problematic) read headers like\
        \ \n                              this :\n                              \t\
        \tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n          \
        \                    \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
        \                              SAME_HEADERS=true will instead genetates the\
        \ following identical header for both reads :\n                          \
        \    \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
        \                              Note that we also clipped the useless '1:N:0'\
        \ and '3:N:0' has they will also result in \n                            \
        \  generating different headers\n                              \t Important\
        \ : this option will force RCHAR=: UNLESS you specify RCHAR=null ; in which\
        \ \n                              case a space will be preserved ie : \n \
        \                             \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994 TAGAACAC:TGGAGTAG:CGTTGTAT\n\
        \                                Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String  \
        \                Replace spaces in read name/header using provided character.\
        \ This is particularly handy \n                              when you need\
        \ to retain\t ADDed barcode in read name/header during mapping (everything\
        \ \n                              after space in read name is usually clipped\
        \ in BAM files).\tFor example, with RCHAR=':' :\n                        \
        \      \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:'\n           \
        \                   \tbecomes\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n\
        \                                Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
        V=FastqQualityFormat          A value describing how the quality values are\
        \ encoded in the fastq.  Either 'Solexa' for \n                          \
        \    pre-pipeline 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline\
        \ 1.3 and \n                              above (phred scaling + 64) or 'Standard'\
        \ for phred scaled scores with a character shift \n                      \
        \        of 33.  If this value is not specified (or 'null' is given), the\
        \ quality format will be \n                              detected.\n     \
        \                           Default value: Standard. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {Solexa, Illumina, Standard} \n\nOUTPUT_DIR=File\nO=File       \
        \                 Output directory. By default, output files are written in\
        \ running directory.\n                                Default value: null.\
        \ \n\nKEEP_UNASSIGNED_READ=Boolean\nUN=Boolean                    Should un-assigned\
        \ reads be saved in files or simply ignored. File names are \n           \
        \                   automatically created or can be given using UF1 & UF2\
        \ options.\n                                Default value: true. This option\
        \ can be set to 'null' to clear the default value. \n                    \
        \          Possible values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\n\
        UF1=String                    Name of the file in which to write unassigned\
        \ reads from FILE1.Either a name (in which \n                            \
        \  case the file will be created in the output dir) or full path.\n      \
        \                          Default value: unassigned_1.txt. This option can\
        \ be set to 'null' to clear the default \n                              value.\
        \ \n\nUNASSIGNED_FILE_NAME_2=String\nUF2=String                    Name of\
        \ the file in which to write unassigned reads from FILE2.Either a name (in\
        \ which \n                              case the file will be created in the\
        \ output dir) or full path.\n                                Default value:\
        \ unassigned_2.txt. This option can be set to 'null' to clear the default\
        \ \n                              value. \n\nMETRICS_FILE_NAME=String\nM=String\
        \                      File name where to write demultiplexing statistics.\
        \ Either a name (in which case the file \n                              will\
        \ be created in the output dir) or an absolute path.\n                   \
        \             Default value: jemultiplexer_out_stats.txt. This option can\
        \ be set to 'null' to clear \n                              the default value.\
        \ \n\nBARCODE_DIAG_FILE=String\nDIAG=String                   Name for a barcode\
        \ match reporting file (not generated by default).Either a name (in \n   \
        \                           which case the file will be created in the output\
        \ dir) or full path. This file will \n                              contain\
        \ a line per read pair with the barcode best matching the read subsequence\
        \ or \n                              'null' when no match is found according\
        \ to matching parameters ; and the final selected \n                     \
        \         sample. This file is useful for debugging or further processing\
        \ in case both ends are \n                              barcoded.\n      \
        \                        N.B: this file will have a size of about one of the\
        \ fastq input files.  Default value: \n                              null.\
        \ \n\nFORCE=Boolean                 Allows to overwrite existing files (system\
        \ rights still apply).\n                                Default value: false.\
        \ This option can be set to 'null' to clear the default value. \n        \
        \                      Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
        GZ=Boolean                    Compress output files using gzip.\n        \
        \                        Default value: true. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {true, false} \n\nFASTQ_FILE_EXTENSION=String   Change the default extension\
        \ of created fastq files, eg 'fastqsanger'. By default uses \n           \
        \                   the file extension from input fastq file. If result file\
        \ names are given in the barcode \n                              file, this\
        \ option is only used to adapt the unassigned file names. When using \n  \
        \                            compression, a .gz is always appended to file\
        \ names and should not be specified in \n                              FASTQ_FILE_EXTENSION\
        \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq and\
        \ NOT FASTQ_FILE_EXTENSION=fastq.gz\n                                Default\
        \ value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\nASYNC=Boolean    \
        \             Use one thread per Fastq Writer.\n                         \
        \       Default value: true. This option can be set to 'null' to clear the\
        \ default value. \n                              Possible values: {true, false}\
        \ \n\nSTATS_ONLY=Boolean            Only produces metric and diagnostic reports\
        \ i.e. no output fastq file produced.\n                                Default\
        \ value: false. This option can be set to 'null' to clear the default value.\
        \ \n                              Possible values: {true, false} \n\nUSE_EMBASE=Boolean\n\
        EM=Boolean                    Enables emBASE mode i.e fetch information from\
        \ emBASE and place demultiplexed files \n                              directly\
        \ in emBASE repository structure.\n                              This option\
        \ is mutually exclusive with BARCODE_FILE.\n                             \
        \ Note : this option forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false\
        \ (all \n                              other user options supported).\n  \
        \                              Default value: false. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false}  Cannot be used in conjuction with option(s) BARCODE_FILE\
        \ \n                              (BF)\n\n"
      generated_using: *id004
    - !Command
      command: *id009
      positional:
      - !Positional
        description: 'In this format, a simple BARCODE slot is expected in the ReadLayout
          and NO headers are '
        position: 0
        name: col2.
        optional: false
      - !Positional
        description: "sample1 ATAT|GAGG:CCAA|TGTG\n3. Extended barcode file format\
          \ : 3 (single-end) or 4 (paired-end) tab-delimited colums\nsame as the simple\
          \ barcode file format but the extra columns contains the file name(s)"
        position: 0
        name: e.g.
        optional: false
      - !Positional
        description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
        position: 0
        name: Or
        optional: false
      - !Positional
        description: Cannot be used in conjuction with option(s) USE_EMBASE (EM)
        position: 1
        name: Required.
        optional: false
      - !Positional
        description: "When provided, Je expects as many 'OF=' as output layouts ('OL=...')\
          \ parameters or "
        position: 0
        name: formats.
        optional: false
      - !Positional
        description: 'Default value: null. '
        position: 0
        name: barcoded.
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: DemultiplexCLI\
        \ [options]\n\nUsage: program [options...]\n\nVersion: 2.0.RC\n\n\nOptions:\n\
        \n--help\n-h                            Displays options specific to this\
        \ tool.\n\n--stdhelp\n-H                            Displays options specific\
        \ to this tool AND options common to all Picard command line \n          \
        \                    tools.\n\n--version                     Displays program\
        \ version.\n\nFASTQ=File\nF=File                        Input fastq file (optionally\
        \ gzipped)  Default value: null. This option must be specified \n        \
        \                      at least 1 times. \n\nBARCODE_FILE=File\nBF=File  \
        \                     Barcode file (tsv) matching sample names to barcode\
        \ combination. \n                              \n                        \
        \         ### GENERAL Barcode File Format \n                             \
        \ In this format, the file structure is governed with headers:\n         \
        \                     \t* the 'SAMPLE' column lists the sample names\n   \
        \                           \t* the 'BARCODEn' columns list the matching BARCODE\
        \ from the BARCODEn slot (where n is a \n                              number,\
        \ see RL option). \n                              \t    It is mandatory to\
        \ have as many 'BARCODEn' columns as described BARCODE slots in \n       \
        \                       READ LAYOUTS. Here again, barcodes can be combined\
        \ using the OR operator '|'\n                              \t* the optional\
        \ 'OUTn' columns (where n is a number) list the output file names for this\
        \ \n                              sample and matching output number.\n   \
        \                           \n                                 ### SIMPLE\
        \ Barcode File Format (for backward compatibility) ; please see the GENERAL\
        \ \n                              format described above \n              \
        \                The file must have 2 columns with the sample in col1 and\
        \ the corresponding barcode in \n                              col2.\n   \
        \                           In this format, a simple BARCODE slot is expected\
        \ in the ReadLayout and NO headers are \n                              needed\
        \ e.g. :\n                              \t\tsample1\tGAGG\n              \
        \                \t\tsample2\tCCAA\n                              \tThe format\
        \ accept the following shortcuts: \n                              \t1. If\
        \ multiple barcodes map to the same sample, either lines can be duplicated\
        \ e.g.\n                              \t\tsample1\tATAT\n                \
        \              \t\tsample1\tGAGG\n                              \t\tsample2\t\
        CCAA\n                              \t\tsample2\tTGTG\n                  \
        \            \tOr barcodes can be combined using the OR operator '|' i.e.\
        \ the file above can be \n                              re-written like\n\
        \                               \t\tsample1\tATAT|GAGG\n                 \
        \             \t\tsample2\tCCAA|TGTG\n                              \t2. For\
        \ the special situation of paired-end data in which barcodes differ at both\
        \ ends \n                              i.e. with BARCODE1 and BARCODE2 described\
        \ for read one and two respectively, barcodes for \n                     \
        \         BARCODE1 and BARCODE2 can be distinguished using a ':' separator\
        \ i.e. \n                              \t\tsample1\tATAT:GAGG\n          \
        \                    \t\tsample2\tCCAA:TGTG\n                            \
        \  \tThis above syntax means that sample 1 is encoded with ATAT barcode from\
        \ BARCODE1 slot \n                              AND GAGG barcode from BARCODE2\
        \ slot. Note that you can still combine barcodes using | \n              \
        \                e.g. \n                              \t\tsample1\tATAT|GAGG:CCAA|TGTG\n\
        \                              \t3. Extended barcode file format : 3 (single-end)\
        \ or 4 (paired-end) tab-delimited colums\n                              \t\
        same as the simple barcode file format but the extra columns contains the\
        \ file name(s) \n                              to use to name output files.\
        \ A unique extra column is expected for single-end while 2 \n            \
        \                  extra columns are expected for paired-end. In case lines\
        \ are duplicated (multiple \n                              barcodes mapping\
        \ the same sample), the same file name should be indicated in the third \n\
        \                              (and fourth) column(s). \n                \
        \              \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n         \
        \                     \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n  \
        \                            \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n\
        \                              \tOr\n                              \t\tsample1\
        \ \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n             \
        \                   Required.  Cannot be used in conjuction with option(s)\
        \ USE_EMBASE (EM)\n\nREAD_LAYOUT=String\nRL=String                     Describes\
        \ the read layout(s) of input fastq file(s) e.g. RL='<BARCODE:6><SAMPLE:x>'\
        \ \n                              describes a read with a barcode in the first\
        \ 6 bases followed by the sample sequence ('x' \n                        \
        \      means 'till the end', see below). You MUST single quote the pattern\
        \ \n                              (RL='<BARCODE:6><SAMPLE:x>') as '>' have\
        \ special meaning in unix.The input fastq files \n                       \
        \       and read layouts are mached up by order on the command line.\n   \
        \                           Read layouts are only needed for complex layouts\
        \ but one must provide read layouts for \n                              ALL\
        \ or NONE of the input fastq files.\n                              ## READ\
        \ LAYOUT FORMAT DESCRIPTION:/nRead layouts are made of <UMIn:X>, <BARCODEn:X>,\
        \ \n                              <SAMPLEn:X> blocks to describe blocks of\
        \ type UMI, BARCODE or SAMPLE with : \n                                  *\
        \ 'n' the unique block index (an index must be unique across all read layouts\
        \ for \n                              each index or each block type), use\
        \ the same index to specify redundant blocks e.g. use \n                 \
        \             <BARCODE1:6> in two different layouts to specify that the barcode\
        \ found in both reads are \n                              the same\n     \
        \                            * 'X' : either a number indicating the length\
        \ of the UMI, BARCODE or SAMPLE block or a \n                            \
        \  negative number e.g. -2 to specify the last 2 bases should be ignored/clipped)\
        \ or the \n                              letter 'x' to specify to take the\
        \ sequence till the end of read. Importantly, the 'x' or \n              \
        \                negative length shortcuts can *only* be used in the last\
        \ block of a read layout (i.e. \n                              <BARCODE1:x><SAMPLE1:20>\
        \ is not allowed)\n                              In addition, layouts can\
        \ contain N or fixed bases like in 'NN<BARCODE1:6>NNNN<SAMPLE1:x>' \n    \
        \                          where the Ns tell Je to skip 2 and 4 bases before\
        \ extracting the barcode & sample \n                              sequence\
        \ respectively.\n                              \n                        \
        \      ## OMIITING READ LAYOUT IN THE COMMAND LINE:/nWhen no read layout is\
        \ provided, the \n                              following defaults apply :\n\
        \                                 * 1 input fastq: single end with layout\
        \ <BARCODE1:X><SAMPLE1:x> where X is inferred \n                         \
        \     from barcode file\n                                 * 2 input fastqs:\
        \ \n                                     - paired end with redundant barcode\
        \ if barcode file describes a single BARCODE \n                          \
        \    i.e. <BARCODE1:X><SAMPLE1:x> and <BARCODE1:X><SAMPLE2:x>, where X is\
        \ inferred from \n                              barcode file\n           \
        \                          - paired end with non redundant barcode if barcode\
        \ file describes two BARCODE \n                              column i.e. <BARCODE1:X><SAMPLE1:x>\
        \ and <BARCODE2:Y><SAMPLE2:x>, where X and Y are \n                      \
        \        inferred from barcode file\n                                    \
        \ - single end with index file if barcode file describes a single BARCODE\
        \ and second \n                              fastq file has reads of length\
        \ < 10 + barcode_length\n                                 * 3 input fastqs:\
        \ \n                                     - paired end with an index file i.e.\
        \ <SAMPLE1:x>, <SAMPLE2:x> and <BARCODE1:X> \n                           \
        \   when barcode file has a single BARCODE column (X is inferred from barcode\
        \ file)\n                                     - single end with two index\
        \ files i.e. <SAMPLE1:x>, <BARCODE1:X> and <BARCODE2:Y> \n               \
        \               when barcode file has two BARCODE columns (X,Y is inferred\
        \ from barcode file)\n                                 * 4 input fastqs: paired\
        \ end with either \n                                      - 2 non-redundant\
        \ index files i.e. <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X>, \n            \
        \                  <BARCODE2:Y> if the barcode file has two BARCODE columns\
        \ or a ATGC:GCTAGC syntax (X,Y \n                              inferred from\
        \ barcode file) \n                                     - 2 redundant index\
        \ files <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X> and <BARCODE1:X> \n       \
        \                       if the barcode file has a single BARCODE column (X\
        \ inferred from barcode file)\n                              \n          \
        \                      Default value: null. This option may be specified 0\
        \ or more times. \n\nOUTPUT_LAYOUT=String\nOL=String                     Describes\
        \ the output file layout(s) using the slots defined in read layouts (, , )\
        \ and \n                              are made of three distinct parts separated\
        \ with ':'.\n                              In addition to , , ,  is used as\
        \ a synonym to  to indicate that the real sequence  should \n            \
        \                  be written (as opposed to writting the barcode when usign\
        \ ). \n                              An output layout looks like '1::' where\
        \ the three mandatory parts (':'-separated) are :\n                      \
        \        \t- The number in the first part (i.e. from '1:' above) is the output\
        \ file index and it \n                              must be unique across\
        \ all 'OL' inputs. \n                              \t- The second part (i.e.\
        \ '' above) is the read header layout; when writing multiple UMI \n      \
        \                        and BARCODE slots in output read headers, these are\
        \ always separated with the RCHAR (':' \n                              by\
        \ defaults).\n                              \t- The third part (i.e. '' above)\
        \ is the read sequence layout. Note that here  and  are \n               \
        \               fully synonyms as the real sequence (i.e READBAR) is always\
        \ written\n                              \n                              Important:\
        \ You MUST single quote the pattern (OL='1::') as '>' have special meaning\
        \ in \n                              unix.An output file is created for each\
        \ sample and each OL index. Output file names \n                         \
        \     default to samplename_outputfileindex with the original fastq file extensions\n\
        \                              \n                              ## OMIITING\
        \ OUTPUT LAYOUT IN THE COMMAND LINE:/n  When no OL is described, Je considers\
        \ \n                              an output file should be created for each\
        \ input FASTQ (containing a SAMPLE slot) and for \n                      \
        \        each sample.\n                               In this scenario:\n\
        \                              \t1. The output files only contain the SAMPLE\
        \ slot unless CLIP is set to false\n                              \t2. The\
        \ barcode(s) and sample names are injected in the output file names according\
        \ to \n                              the pattern 'FASTQFILENAMEn_SAMPLENAME_BARCODES.ORIGINALEXTENSIONS'\
        \ ) \n                              \t3. Unless ADD is set to false, all BARCODE\
        \ and UMI slots (if any) are placed in the \n                            \
        \  fastq headers following their slot index i.e. BARCODE1:...:BARCODEn:UMI1:UMI2:...:UMIn\
        \ \n                              and are separated with ':'.\n          \
        \                    ## SHORT LAYOUT FORMAT \n                           \
        \   The output layout can be specified in a concise way using 'S','B', 'R'\
        \ and 'U' for \n                              SAMPLE, BARCODE, READBAR and\
        \ UMI, respectively. In this format, the surounding '' are \n            \
        \                  also omitted. For example 'OL=1:B1U1U2:S1' is a synonym\
        \ of 'OL=1::'  Default value: null. \n                              This option\
        \ may be specified 0 or more times. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
        WQ=Boolean                    Set to True to keep Phred sequence qualities\
        \ in output read names. \n                              This option only applies\
        \ to BARCODE, READBAR and UMI described in the read name slot of \n      \
        \                        output layout. For BARCODE, the equivalent READBAR\
        \ quality is used. In case of redundant \n                              slots,\
        \ the best found quality is used.\n                              The quality\
        \ string is translated into 2 digits number representing the quality scores\
        \ on \n                              the Phred scale and a e.g. UMI will look\
        \ like\n                              \t '...:ATGCAT333023212322:...' instead\
        \ of '...:ATGCAT:...'\n                              This option is particularly\
        \ useful with the retag module that knows how to extract \n              \
        \                quality numbers into BAM tags.  Default value: false. This\
        \ option can be set to 'null' to \n                              clear the\
        \ default value. Possible values: {true, false} \n\nOUTPUT_DIR=File\nO=File\
        \                        Output directory. By default, output files are written\
        \ in running directory.\n                                Default value: null.\
        \ \n\nKEEP_UNASSIGNED_READ=Boolean\nUN=Boolean                    Should un-assigned\
        \ reads be saved in files or simply ignored. File names are \n           \
        \                   automatically created or can be given using UF option.\n\
        \                                Default value: true. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nUNASSIGNED_FILE=String\nUF=String            \
        \         Name of unassigned files in which to write unassigned reads. When\
        \ provided, Je expects as \n                              many UF files as\
        \ input FASTQ files. UF options are matched up with FASTQ options \n     \
        \                         following the order they are defined on the command\
        \ line.\n                              Either a name (in which case the file\
        \ will be created in the output dir) or full path.\n                     \
        \           Default value: null. This option may be specified 0 or more times.\
        \ \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\nOWID=Boolean            \
        \      Should the output layout number (output layout first slot) be injected\
        \ in the filename ?\n                              Only used in absence of\
        \ explicit file names in the barcode file.\n                             \
        \   Default value: true. This option can be set to 'null' to clear the default\
        \ value. \n                              Possible values: {true, false} \n\
        \nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWHL=Boolean             \
        \     Should the output layout used for the read name (output layout second\
        \ slot,in short \n                              format) be injected in the\
        \ filename ? When true, each ouput file name contains e.g. \n            \
        \                  '_B1U1' for OL='1::'  \n                              Only\
        \ used in absence of explicit file names in the barcode file.\n          \
        \                      Default value: false. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {true, false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWSL=Boolean\
        \                  Should the output layout used for the read sequence (output\
        \ layout third slot, in short \n                              format) be injected\
        \ in the filename ?When true, each ouput file name contains e.g. '_S1' \n\
        \                              for OL='1::'  \n                          \
        \    Only used in absence of explicit file names in the barcode file.\n  \
        \                              Default value: false. This option can be set\
        \ to 'null' to clear the default value. \n                              Possible\
        \ values: {true, false} \n\nOUTPUT_FILE=String\nOF=String                \
        \     Tells Je to write **all** assigned reads in the same output file(s)\
        \ i.e. use this option \n                              when you do NOT want\
        \ to create per-sample demultiplexed files but rather want to keep all \n\
        \                              reads in the same file while barcode information\
        \ is gathered and injected in output \n                              formats.\n\
        \                               When provided, Je expects as many 'OF=' as\
        \ output layouts ('OL=...') parameters or \n                             \
        \ 'FASTQ=input' files when OL is not provided\n                          \
        \    . OF options are matched up with OL/FASTQ options following the order\
        \ in which they are \n                              defined on the command\
        \ line.\n                              OF expects either a name (in which\
        \ case the file will be created in the output dir) or an \n              \
        \                absolute path.\n                                Default value:\
        \ null. This option may be specified 0 or more times. \n\nMAX_MISMATCHES=String\n\
        MM=String                     Maximum mismatches for a barcode to be considered\
        \ a match. Either exactly one or multiple \n                             \
        \ values (with format MM=X:Y:Z). \n                              When multiple\
        \ values are provided, Je expects exactly one value for each BARCODE (with\
        \ \n                              distinct indices) described in the barcode\
        \ file/read layouts.\n                              Values (X,Y,Z) are matched\
        \ up with the sorted list of BARCODES (i.e.  X for BARCODE1, Y \n        \
        \                      for BARCODE2 and Z for BARCODE3)\n                \
        \                Default value: 1. This option can be set to 'null' to clear\
        \ the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String           \
        \         Minimum difference between the number of mismatches against the\
        \ best and the second best \n                              barcode. When MMD\
        \ is not respected, the read remains unassigned.\n                       \
        \       Either exactly one or multiple values (with format MMD=X:Y:Z). When\
        \ multiple values are \n                              provided, Je expects\
        \ exactly one value for each BARCODE (with distinct indices) described \n\
        \                              in the barcode file/read layouts.\n       \
        \                       Values (X,Y,Z) are matched up with the sorted list\
        \ of BARCODES (i.e.  X for BARCODE1, Y \n                              for\
        \ BARCODE2 and Z for BARCODE3)\n                                Default value:\
        \ 1. This option can be set to 'null' to clear the default value. \n\nMIN_BASE_QUALITY=String\n\
        Q=String                      Minimum base quality during barcode matching:\
        \ bases which quality is less than this \n                              cutoff\
        \ are always considered as a mismatch.Either exactly one or multiple values\
        \ (with \n                              format Q=X:Y:Z). When multiple values\
        \ are provided, Je expects exactly one value for each \n                 \
        \             BARCODE (with distinct indices) described in the barcode file/read\
        \ layouts.\n                              Values (X,Y,Z) are matched up with\
        \ the sorted list of BARCODES (i.e.  X for BARCODE1, Y \n                \
        \              for BARCODE2 and Z for BARCODE3)\n                        \
        \        Default value: 10. This option can be set to 'null' to clear the\
        \ default value. \n\nSTRICT=Boolean\nS=Boolean                     When reads\
        \ have redundant BARCODE slots, this option tells how to handle situation\
        \ when \n                              the read sequence do not resolve to\
        \ the same sample.\n                               When true, the read pair\
        \ is always 'unassigned'.\n                               When false, the\
        \ read pair is assigned to the sample with the lowest overall mismatch sum\n\
        \                                Default value: false. This option can be\
        \ set to 'null' to clear the default value. \n                           \
        \   Possible values: {true, false} \n\nFORCE=Boolean                 Allows\
        \ to overwrite existing files (system rights still apply).\n             \
        \                   Default value: false. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                    Compress\
        \ output files using gzip.\n                                Default value:\
        \ true. This option can be set to 'null' to clear the default value. \n  \
        \                            Possible values: {true, false} \n\nCLIP=Boolean\
        \                  In absence of output layout, tell if barcode and UMI sequences\
        \ should be clipped off read \n                              sequence before\
        \ writing to output file.\n                               If false, reads\
        \ are written without modification to output file.  Default value: true. \n\
        \                              This option can be set to 'null' to clear the\
        \ default value. Possible values: {true, \n                              false}\
        \ \n\nADD=Boolean                   In absence of output layout, tell if barcode\
        \ and UMI sequences should be added at the end \n                        \
        \      of the read header.\n                              BARCODE and UMI\
        \ slots (in this order) are concatenated using the character defined by the\
        \ \n                              SEP option\n                           \
        \     Default value: true. This option can be set to 'null' to clear the default\
        \ value. \n                              Possible values: {true, false} \n\
        \nREAD_NAME_SEPARATOR_CHAR=String\nSEP=String                    Separator\
        \ character used to concatenate barcodes and umis in read header\n       \
        \                         Default value: :. This option can be set to 'null'\
        \ to clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\nV=FastqQualityFormat\
        \          A value describing how the quality values are encoded in the fastq\
        \ files.  Either \n                              'Solexa' for pre-pipeline\
        \ 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline \n     \
        \                         1.3 and above (phred scaling + 64) or 'Standard'\
        \ for phred scaled scores with a character \n                            \
        \  shift of 33.  If this value is not specified (or 'null' is given), the\
        \ quality format is \n                              assumed to be will the\
        \ 'Standard' for phred scale.\n                                Default value:\
        \ null. Possible values: {Solexa, Illumina, Standard} \n\nMETRICS_FILE_NAME=String\n\
        M=String                      File name where to write demultiplexing statistics.\
        \ Either a name (in which case the file \n                              will\
        \ be created in the output dir) or an absolute path.\n                   \
        \             Default value: jemultiplexer_out_stats.txt. This option can\
        \ be set to 'null' to clear \n                              the default value.\
        \ \n\nBARCODE_DIAG_FILE=String\nDIAG=String                   Name for a barcode\
        \ match reporting file (not generated by default).Either a name (in \n   \
        \                           which case the file will be created in the output\
        \ dir) or full path. This file will \n                              contain\
        \ a line per read set with the barcodes best matching the read subsequences\
        \ or \n                              'null' when no match is found according\
        \ to matching parameters ; and the final selected \n                     \
        \         sample. This file is useful for debugging or further processing\
        \ in case both ends are \n                              barcoded.\n      \
        \                          Default value: null. \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\n\
        TEST=Boolean                  test mode ie code execution stops right before\
        \ read demultiplexing starts but after \n                              command\
        \ line validation  Default value: false. This option can be set to 'null'\
        \ to clear \n                              the default value. Possible values:\
        \ {true, false} \n\nFASTQ_FILE_EXTENSION=String   Change the default extension\
        \ of created fastq files, eg 'fastqsanger'. By default uses \n           \
        \                   the file extension from input fastq file. If result file\
        \ names are given in the barcode \n                              file, this\
        \ option is only used to adapt the unassigned file names. When using \n  \
        \                            compression, a .gz is always appended to file\
        \ names and should not be specified in \n                              FASTQ_FILE_EXTENSION\
        \ i.e. \n                              use FASTQ_FILE_EXTENSION=fastq and\
        \ NOT FASTQ_FILE_EXTENSION=fastq.gz\n                                Default\
        \ value: null. \n\nINPUT_FASTQ_COMPRESSION=Boolean\n                     \
        \         Indicates if the input fastq files are gzipped. Please use this\
        \ option when file names \n                              are compressed but\
        \ lack the typical '.gz' extension. \n                                Default\
        \ value: null. Possible values: {true, false} \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
        ASYNC=Boolean                 Use one thread per Fastq Writer.\n         \
        \                       Default value: true. This option can be set to 'null'\
        \ to clear the default value. \n                              Possible values:\
        \ {true, false} \n\nUSE_EMBASE=Boolean\nEM=Boolean                    Enables\
        \ emBASE mode i.e fetch information from emBASE and place demultiplexed files\
        \ \n                              directly in emBASE repository structure.\n\
        \                              This option is mutually exclusive with BARCODE_FILE.\n\
        \                              Note : this option forces O=null GZ=true UN=true\
        \ UF1=null UF2=null STATS_ONLY=false (all \n                             \
        \ other user options supported).\n                                Default\
        \ value: false. This option can be set to 'null' to clear the default value.\
        \ \n                              Possible values: {true, false}  Cannot be\
        \ used in conjuction with option(s) BARCODE_FILE \n                      \
        \        (BF)\n\n"
      generated_using: *id004
    - !Command
      command: *id010
      positional:
      - !Positional
        description: SPLIT_CHAR=String
        position: 0
        name: times.
        optional: false
      - !Positional
        description: COMMENT=String
        position: 0
        name: value.
        optional: false
      named:
      - !Flag
        description: "Displays options specific to this tool AND options common to\
          \ all Picard command line\ntools."
        synonyms:
        - -H
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag: !Flag
        description: Displays program version.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: MarkDuplicatesWithMolecularCode\
        \ [options]\n\nExamines aligned records in the supplied SAM or BAM file to\
        \ locate duplicate molecules taking into account molecular barcodes (Unique\
        \ Molecular Identifiers or UMIs) found in read header. All records are then\
        \ either written to the output file with the duplicate records flagged or\
        \ trashed.\nExample :\n\t je markdupes INPUT=file_with_dupes.bam OUTPUT=result.bam\
        \ MM=1\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                      \
        \      Displays options specific to this tool.\n\n--stdhelp\n-H          \
        \                  Displays options specific to this tool AND options common\
        \ to all Picard command line \n                              tools.\n\n--version\
        \                     Displays program version.\n\nINPUT=String\nI=String\
        \                      One or more input SAM or BAM files to analyze. Must\
        \ be coordinate sorted.  Default value: \n                              null.\
        \ This option may be specified 0 or more times. \n\nOUTPUT=File\nO=File  \
        \                      The output file to write marked records to  Required.\
        \ \n\nMISMATCHES=Integer\nMM=Integer                    Number of MisMatches\
        \ (inclusive) to still consider two Unique Molecular Identifiers \n      \
        \                        (UMIs) identical i.e. this option buffers for sequencing\
        \ errors.Indeed, in case of a \n                              sequencing error,\
        \ 2 duplicate reads would not be considered duplicates anymore.Note that \n\
        \                              N are not considered mismatches during comparison\
        \ ie ATTNGG and NTTANG are seen as the \n                              same\
        \ barcode and these two reads would be flagged duplicates.This option takes\
        \ a single \n                              value even when several barcodes\
        \ are present (see SLOTS). Note that when declaring \n                   \
        \           several barcodes (see SLOTS) AND providing a predefined set of\
        \ barcodes (see BC option), \n                              the MM value is\
        \ applicable in each lookup. When a predefined set of barcodes is NOT \n \
        \                             given, the different barcodes (SLOTS) are concatenated\
        \ first and the MM value is \n                              therefore considered\
        \ *overall* as the concatenated code is seen as a unique code.\n         \
        \                     MM=null is like MM=0\n                             \
        \ Use the minimum Hamming distance of the original barcode set (if applicable).\
        \  Required. \n\nMAX_NUMBER_OF_N=Integer\nMAX_N=Integer                 Maximum\
        \ number of Ns a molecular code can contain (inclusive). Above this value,\
        \ reads \n                              are placed in a UNDEF group.More precisely,\
        \ these 'too degenarate' codes will not :\n                              \t\
        \ * be compared to the list of predefined codes [predefined code list situation\
        \ ie BC \n                              option given] nor \n             \
        \                 \t * be considered as a potential independent code [no predefined\
        \ code list situation ie \n                              BC option not given]\n\
        \                              Default value is the MISMATCHES number.\n \
        \                              Note that when declaring several barcodes (see\
        \ SLOTS) AND providing a predefined set of \n                            \
        \  barcodes (see BC option), the MAX_N value is applicable to each barcode.\
        \ When a \n                              predefined set of barcodes is NOT\
        \ given, the different barcodes (SLOTS) are concatenated \n              \
        \                first and the MAX_N value is therefore considered *overall*.\
        \  Default value: null. \n\nSLOTS=Integer\nSLOTS=Integer                 Where\
        \ to find the UMIs (and only the UMIs) in the read name once read name has\
        \ been \n                              tokenized using the SPLIT character\
        \ (e.g. ':'). \n                              By default, the UMI is considered\
        \ to be found at the end of the read header i.e. after \n                \
        \              the last ':'. Use this option to indicate other or additional\
        \ UMI positions (e.g. \n                              multiple UMIs present\
        \ in read header.\n                              IMPORTANT : counting starts\
        \ at 1 and negative numbers can be used to start counting from \n        \
        \                      the end.\n                              For example,\
        \ consider the following read name that lists 3 different barcodes in the\
        \ end \n                              : \n                              \t\
        \ HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG \n    \
        \                          \t to indicate that the three barcodes are molecular\
        \ codes, use \n                              \t\tSLOTS=-1 SLOTS=-2 SLOTS=-3\n\
        \                              \t if only the 2 last ones should be considered\
        \ (the third one being a sample encoding \n                              barcode),\
        \ use \n                              \t\tSLOTS=-1 SLOTS=-2\t N.B.: UMI usage\
        \ can be deactivate by explicitely setting SLOTS=null \n                 \
        \             in the command line\n                                Default\
        \ value: null. This option may be specified 0 or more times. \n\nBARCODE_FILE=File\n\
        BC=File                       Pre-defined list of UMIs that can be expected.\
        \ Format: one column text file, one barcode \n                           \
        \   per line. All UMIs MUST have the same length.   Default value: null. \n\
        \nMETRICS_FILE=File\nM=File                        File to write duplication\
        \ metrics to  Required. \n\nREMOVE_DUPLICATES=Boolean     If true do not write\
        \ duplicates to the output file instead of writing them with \n          \
        \                    appropriate flags set.  Default value: false. This option\
        \ can be set to 'null' to clear \n                              the default\
        \ value. Possible values: {true, false} \n\nASSUME_SORTED=Boolean\nAS=Boolean\
        \                    If true, assume that the input file is coordinate sorted\
        \ even if the header says \n                              otherwise. Deprecated,\
        \ used ASSUME_SORT_ORDER=coordinate instead.  Default value: false. \n   \
        \                           This option can be set to 'null' to clear the\
        \ default value. Possible values: {true, \n                              false}\
        \  Cannot be used in conjuction with option(s) ASSUME_SORT_ORDER (ASO)\n\n\
        TRIM_HEADERS=Boolean\nT=Boolean                     Should barcode information\
        \ be removed from read names in the output BAM ? This is usefull \n      \
        \                        to save storage space.\n                        \
        \        Default value: false. This option can be set to 'null' to clear the\
        \ default value. \n                              Possible values: {true, false}\
        \ \n\nTSLOTS=Integer\nTSLOTS=Integer                Where to find *all* barcode(s)\
        \ (i.e. sample encoding and UMIs) in the read name once has \n           \
        \                   been tokenized using the SPLIT character (e.g. ':'). \n\
        \                              This option is only considered when TRIM_HEADERS=true.\
        \ When TSLOTS is ommited while \n                              TRIM_HEADERS=true,\
        \ the values of SLOTS apply.\n                              IMPORTANT : counting\
        \ starts at 1 and negative numbers can be used to start counting from \n \
        \                             the end.\n                              See\
        \ SLOT help for examples.  Default value: null. This option may be specified\
        \ 0 or more \n                              times. \n\nSPLIT_CHAR=String\n\
        SPLIT=String                  Character to use to split up the read header\
        \ line, default is ':'.  Default value: :. \n                            \
        \  This option can be set to 'null' to clear the default value. \n\nASSUME_SORT_ORDER=SortOrder\n\
        ASO=SortOrder                 If not null, assume that the input file has\
        \ this order even if the header says otherwise.  \n                      \
        \        Default value: null. Possible values: {unsorted, queryname, coordinate,\
        \ duplicate, \n                              unknown}  Cannot be used in conjuction\
        \ with option(s) ASSUME_SORTED (AS)\n\nDUPLICATE_SCORING_STRATEGY=ScoringStrategy\n\
        DS=ScoringStrategy            The scoring strategy for choosing the non-duplicate\
        \ among candidates.  Default value: \n                              SUM_OF_BASE_QUALITIES.\
        \ This option can be set to 'null' to clear the default value. \n        \
        \                      Possible values: {SUM_OF_BASE_QUALITIES, TOTAL_MAPPED_REFERENCE_LENGTH,\
        \ RANDOM} \n\nPROGRAM_RECORD_ID=String\nPG=String                     The\
        \ program record ID for the @PG record(s) created by this program. Set to\
        \ null to \n                              disable PG record creation.  This\
        \ string may have a suffix appended to avoid collision \n                \
        \              with other program record IDs.  Default value: MarkDuplicates.\
        \ This option can be set to \n                              'null' to clear\
        \ the default value. \n\nPROGRAM_GROUP_VERSION=String\nPG_VERSION=String \
        \            Value of VN tag of PG record to be created. If not specified,\
        \ the version will be \n                              detected automatically.\
        \  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
        \             Value of CL tag of PG record to be created. If not supplied\
        \ the command line will be \n                              detected automatically.\
        \  Default value: null. \n\nPROGRAM_GROUP_NAME=String\nPG_NAME=String    \
        \            Value of PN tag of PG record to be created.  Default value: \n\
        \                              MarkDuplicatesWithMolecularCode. This option\
        \ can be set to 'null' to clear the default \n                           \
        \   value. \n\nCOMMENT=String\nCO=String                     Comment(s) to\
        \ include in the output file's header.  Default value: null. This option may\
        \ \n                              be specified 0 or more times. \n\nREAD_NAME_REGEX=String\
        \        Regular expression that can be used to parse read names in the incoming\
        \ SAM file. Read \n                              names are parsed to extract\
        \ three variables: tile/region, x coordinate and y coordinate. \n        \
        \                      These values are used to estimate the rate of optical\
        \ duplication in order to give a more \n                              accurate\
        \ estimated library size. Set this option to null to disable optical duplicate\
        \ \n                              detection, e.g. for RNA-seq or other data\
        \ where duplicate sets are extremely large and \n                        \
        \      estimating library complexity is not an aim. Note that without optical\
        \ duplicate counts, \n                              library size estimation\
        \ will be inaccurate. The regular expression should contain three \n     \
        \                         capture groups for the three variables, in order.\
        \ It must match the entire read name. \n                              Note\
        \ that if the default regex is specified, a regex match is not actually done,\
        \ but \n                              instead the read name  is split on colon\
        \ character. For 5 element names, the 3rd, 4th and \n                    \
        \          5th elements are assumed to be tile, x and y values. For 7 element\
        \ names (CASAVA 1.8), \n                              the 5th, 6th, and 7th\
        \ elements are assumed to be tile, x and y values.  Default value: \n    \
        \                          <optimized capture of last three ':' separated\
        \ fields as numeric values>. This option can \n                          \
        \    be set to 'null' to clear the default value. \n\nOPTICAL_DUPLICATE_PIXEL_DISTANCE=Integer\n\
        \                              The maximum offset between two duplicate clusters\
        \ in order to consider them optical \n                              duplicates.\
        \ The default is appropriate for unpatterned versions of the Illumina platform.\
        \ \n                              For the patterned flowcell models, 2500\
        \ is moreappropriate. For other platforms and \n                         \
        \     models, users should experiment to find what works best.  Default value:\
        \ 100. This option \n                              can be set to 'null' to\
        \ clear the default value. \n\nMAX_FILE_HANDLES_FOR_READ_ENDS_MAP=Integer\n\
        MAX_FILE_HANDLES=Integer      Maximum number of file handles to keep open\
        \ when spilling read ends to disk. Set this \n                           \
        \   number a little lower than the per-process maximum number of file that\
        \ may be open. This \n                              number can be found by\
        \ executing the 'ulimit -n' command on a Unix system.  Default \n        \
        \                      value: 8000. This option can be set to 'null' to clear\
        \ the default value. \n\nSORTING_COLLECTION_SIZE_RATIO=Double\n          \
        \                    This number, plus the maximum RAM available to the JVM,\
        \ determine the memory footprint \n                              used by some\
        \ of the sorting collections.  If you are running out of memory, try reducing\
        \ \n                              this number.  Default value: 0.25. This\
        \ option can be set to 'null' to clear the default \n                    \
        \          value. \n\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage:   je <command> [options] \n\nwith command in : \n\t clip  \
      \    \t\t clips barcodes/UMIs from fastq sequence and places them in read name\
      \ headers \n\t debarcode \t\t demultiplexes fastq file(s) into user-defined\
      \ output files, with optional handling of molecular barcodes\n\t demultiplex\
      \ \t\t demultiplexes fastq file(s) with Je 1.x implementation, with optional\
      \ handling of molecular barcodes for further use in 'dupes' module\n\t demultiplex-illu\
      \ \t demultiplexes fastq file(s) using Illumina Index files with Je 1.x implementation,\
      \ with optional handling of molecular barcodes for further use in 'dupes' module\n\
      \t markdupes     \t\t removes read duplicates based on molecular barcodes found\
      \ in read name headers (as produced by clip or plex)\n\t dropseq    \t\t clips\
      \ cell barcode and UMI from read 1 and adds them to header of read 2. This command\
      \ is for processing drop-seq results.\n\t retag    \t\t extracts barcode and\
      \ UMI sequence(s) embedded in read names and tag reads with proper BAM tag.\n\
      \nVersion : 2.0.RC\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jedropseq [options]\n\
    \nReformat Drop-seq files into a single fastq file. DROP-seq produces 2 fastq\
    \ files : one (F1) contains the cell barcode (usually 12 bp, LEN) followed by\
    \ a UMI (usually 8bp, ULEN) while the second (F2) contains the RNA sequence. The\
    \ output file is similar to F2 but holds the parsed barcode and UMI in read names.\n\
    Input fastq file(s) can be in gzip compressed format (end in .gz). See help for\
    \ a detailled description of all options.\n\nExample: \n\tje dropseq F1=file.fastq.gz\
    \ F2=file.fastq.gz LEN=12 ULEN=8 O=/path/to/resultdir/out.fastq.gz\n\nVersion:\
    \ 2.0.RC\n\n\nOptions:\n\n--help\n-h                            Displays options\
    \ specific to this tool.\n\n--stdhelp\n-H                            Displays\
    \ options specific to this tool AND options common to all Picard command line\
    \ \n                              tools.\n\n--version                     Displays\
    \ program version.\n\nFASTQ_FILE1=File\nF1=File                       Input fastq\
    \ file (optionally gzipped) for first read. This read contains the cell barcode\
    \ \n                              followed by the UMI. Quality encoding must be\
    \ Phred+33 (Standard).  Required. \n\nFASTQ_FILE2=File\nF2=File              \
    \         Input fastq file (optionally gzipped) for the second read. Quality encoding\
    \ must be \n                              Phred+33 (Standard).  Required. \n\n\
    BCLEN=Integer\nLEN=Integer                   Length of the cell barcode sequence\
    \ in read 1.\n                                Required. \n\nWITH_QUALITY_IN_READNAME=Boolean\n\
    WQ=Boolean                    Should quality string of barcode and UMI also be\
    \ injected in read names.\n                              If true, the quality\
    \ string is translated into 2 digits number and a e.g. UMI will look \n      \
    \                        like\n                              \t '...:ATGCAT333423212322:...'\
    \ instead of '...:ATGCAT:...'\n                              This option is particularly\
    \ useful with the retag module that knows how to extract \n                  \
    \            quality numbers into BAM tags.  Default value: false. This option\
    \ can be set to 'null' to \n                              clear the default value.\
    \ Possible values: {true, false} \n\nUCLEN=Integer\nULEN=Integer             \
    \     Length of the UMI sequence in read 1 found right after the cell barcode.\n\
    \                                Required. \n\nMAX_N=Integer\nN=Integer      \
    \               Maximum number of N's in the cell barcode sequence. If the cell\
    \ barcode has this number \n                              or more N in the sequence,\
    \ the read is ignored.\n                                Default value: 6. This\
    \ option can be set to 'null' to clear the default value. \n\nREAD_NAME_REPLACE_CHAR=String\n\
    RCHAR=String                  Replace spaces in read name/header using provided\
    \ character.\n                              This is needed when you need to retain\
    \ ADDed barcode in read name/header during mapping \n                        \
    \      as everything after space in read name is usually clipped in BAM files.\n\
    \                              For example, with RCHAR=':' :\n               \
    \               \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 1:N:0:'\n      \
    \                        \tbecomes\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:1:N:0:BARCODE'\n\
    \                                Default value: :. This option can be set to 'null'\
    \ to clear the default value. \n\nRESULT_FILENAME_1=String\nO=String         \
    \             Result file name with headers modified.\n                      \
    \        \n                              Can either be a name (in which case the\
    \ file will be created in the output dir) or a full \n                       \
    \       path.\n                                Required. \n\nFORCE=Boolean   \
    \              Allows overwriting existing files.\n                          \
    \      Default value: false. This option can be set to 'null' to clear the default\
    \ value. \n                              Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
    GZ=Boolean                    Compress output using gzip and append a .gz extension\
    \ to the result filename if necessary.\n                                Default\
    \ value: true. This option can be set to 'null' to clear the default value. \n\
    \                              Possible values: {true, false} \n\n"
  generated_using: *id004
- !Command
  command: *id005
  positional:
  - !Positional
    description: 'Required. '
    position: 0
    name: data.
    optional: false
  - !Positional
    description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
    position: 0
    name: Or
    optional: false
  - !Positional
    description: 'the second barcode might be a random barcode (UMI) to tell apart
      PCR artefacts from real '
    position: 0
    name: while
    optional: false
  - !Positional
    description: 'Another example is when both barcodes should be used in a combined
      fashion to resolve the '
    position: 1
    name: duplicates.
    optional: false
  - !Positional
    description: In the first example, you should use BPOS=BOTH BRED=false BM=READ_1.
    position: 2
    name: sample.
    optional: false
  - !Positional
    description: 'values can be given here using the syntax MM=X:Z where X and Z are
      2 integers to use for '
    position: 0
    name: distinct
    optional: false
  - !Positional
    description: "Default value: Standard. This option can be set to 'null' to clear\
      \ the default value. "
    position: 0
    name: detected.
    optional: false
  - !Positional
    description: 'N.B: this file will have a size of about one of the fastq input
      files.  Default value: '
    position: 0
    name: barcoded.
    optional: false
  - !Positional
    description: "FORCE=Boolean                 Allows to overwrite existing files\
      \ (system rights still apply).\nDefault value: false. This option can be set\
      \ to 'null' to clear the default value."
    position: 1
    name: null.
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jemultiplexer [options]\n\
    \n\tFastq files demultiplexer for in-line barcoded Illumina Fastq files.\n\tInput\
    \ fastq files can be in gzip compressed (end in .gz). \n\tBy default output files\
    \ are gzipped and have names following the pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]'\
    \ unless you gave file\n\t names to use within the barcode description file.\n\
    Example:\n\t je demultiplex F1=fastq_1.txt.gz BF=barcodes.bs O=/path/to/jemultiplexer-results/\
    \ \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                            Displays\
    \ options specific to this tool.\n\n--stdhelp\n-H                            Displays\
    \ options specific to this tool AND options common to all Picard command line\
    \ \n                              tools.\n\n--version                     Displays\
    \ program version.\n\nFASTQ_FILE1=File\nF1=File                       Input fastq\
    \ file (optionally gzipped) for single end data, or first read in paired end \n\
    \                              data.\n                                Required.\
    \ \n\nFASTQ_FILE2=File\nF2=File                       Input fastq file (optionally\
    \ gzipped) for the second read of paired end data.\n                         \
    \       Default value: null. \n\nBARCODE_FILE=File\nBF=File                  \
    \     Barcode file describing sequence list and sample names. Tab-delimited file\
    \ with 2 \n                              columns, with the sample in col1 and\
    \ the corresponding barcode in col2.\n                              Simple barcode\
    \ file format : 2 tab-delimited colums\n                              \tIf multiple\
    \ barcode map to the same sample, either line can be duplicated e.g.\n       \
    \                       \t\tsample1\tATAT\n                              \t\t\
    sample1\tGAGG\n                              \t\tsample2\tCCAA\n             \
    \                 \t\tsample2\tTGTG\n                              \tOr barcodes\
    \ can be combined using the OR operator '|' i.e. the file above can be \n    \
    \                          re-written like\n                               \t\t\
    sample1\tATAT|GAGG\n                              \t\tsample2\tCCAA|TGTG\n   \
    \                           \tFinally, for the special situation of paired-end\
    \ data in which barcodes differ at both \n                              ends (ie\
    \ BPOS=BOTH BRED=false BM=BOTH , see BRED option description), barcodes for read_1\
    \ \n                              and read_2 can be distinguished using a ':'\
    \ separator i.e. \n                              \t\tsample1\tATAT:GAGG\n    \
    \                          \t\tsample2\tCCAA:TGTG\n                          \
    \    \tThis above syntax means that sample 1 is encoded with ATAT barcode at read_1\
    \ AND GAGG \n                              barcode at read_2. Note that you can\
    \ still combine barcodes using | e.g. \n                              \t\tsample1\t\
    ATAT|GAGG:CCAA|TGTG\n                              \twould mean that sample 1\
    \ is mapped by the combination of barcode: ATAT OR GAGG at read_1 \n         \
    \                     AND CCAA OR TGTG at read_2.\n                          \
    \    Extended barcode file format : 3 (single-end) or 4 (paired-end) tab-delimited\
    \ colums\n                              \tsame as the simple barcode file format\
    \ but the extra columns contains the file name(s) \n                         \
    \     to use to name output files. A unique extra column is expected for single-end\
    \ while 2 \n                              extra columns are expected for paired-end.\
    \ In case, lines are duplicated (multiple \n                              barcodesmapping\
    \ the same sample), the same file name should be indicated in the third \n   \
    \                           (and fourth) column(s). \n                       \
    \       \t\tsample1\tATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n                    \
    \          \t\tsample1\tGAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n                 \
    \             \t\tsample2\tCCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n              \
    \                \tOr\n                              \t\tsample1 \t ATAT|GAGG:CCAA|TGTG\
    \ \t spl1_1.txt.gz \t spl1_2.txt.gz\n                              Ns in barcode\
    \ sequence are allowed and are used to flag positions that should be ignored \n\
    \                              in sample matching \n                         \
    \     \t i.e. they will be clipped off the read sequence (like in iCLIP protocol).\
    \  Required.  \n                              Cannot be used in conjuction with\
    \ option(s) USE_EMBASE (EM)\n\nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition\
    \          For paired-end data, where to expect the barcode(s) :\n           \
    \                   \t * READ_1 (beginning of read from FASTQ_FILE_1), \n    \
    \                           \t * READ_2 (beginning of read from FASTQ_FILE_2),\n\
    \                              \t * BOTH (beginning of both reads).\n        \
    \                      Automatically set to READ_1 in single end mode.\n     \
    \                           Default value: BOTH. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {READ_1, READ_2, BOTH, NONE} \n\nBCLEN=String\nLEN=String                  \
    \  Length of the barcode sequences, optional. Taken from barcode file when not\
    \ given.\n                              In situations where BARCODE_READ_POS ==\
    \ BOTH AND REDUNDANT_BARCODES=false, two distinct \n                         \
    \     length can be provided using the syntax LEN=X:Z where X and Z are 2 integers\
    \ representing \n                              the barcode length for read_1 and\
    \ read_2 respectively.\n                                Default value: null. \n\
    \nBARCODE_FOR_SAMPLE_MATCHING=BarcodePosition\nBM=BarcodePosition            Indicates\
    \ which barcode(s) should be used for sample lookup\n                        \
    \      Automatically set to READ_1 in single end mode. \n                    \
    \          For paired-end data and when BARCODE_READ_POS == BOTH, which barcode\
    \ should be used to \n                              resolve sample :\n       \
    \                       \t- use BM=READ_1 (beginning of read from FASTQ_FILE_1)\
    \ if only this read should be used \n                              for sample\
    \ matching,\n                              \t- use BM=READ_2 (beginning of read\
    \ from FASTQ_FILE_2) if only this read should be used \n                     \
    \         for sample matching,\n                              \t- use BM=BOTH\
    \ (beginning of both reads) if both should be used \n                        \
    \      When BM=BOTH, the behaviour is different based on the value of REDUNDANT_BARCODES\
    \ : \n                              \t\tIf REDUNDANT_BARCODES=true, the two barcodes\
    \ are considered to map to the same sample \n                              and\
    \ 'Je demultiplex' uses the two barcodes according to the STRICT value.\n    \
    \                          \t\tIf REDUNDANT_BARCODES=false, the barcode file should\
    \ map a couple of barcode to each \n                              sample (e.g.\
    \ sample1 => AGAGTG:TTGATA) and 'Je demultiplex' needs both barcodes to find \n\
    \                              the relevant sample. Note that this is the only\
    \ situation in which all barcode matching \n                              options\
    \ (MM, MMD, Q) accept different values for both barcodes in the form X:Z where\
    \ X \n                              and Z are 2 integers.\n                  \
    \              Default value: BOTH. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {READ_1,\
    \ READ_2, BOTH, NONE} \n\nREDUNDANT_BARCODES=Boolean\nBRED=Boolean           \
    \       This option only applies for paired-end data with BARCODE_READ_POS set\
    \ to 'BOTH'\n                              Indicates if both read's barcodes encode\
    \ redundant information or if barcodes are \n                              supposed\
    \ to be identical at both ends (or to resolve to the same sample when a pool of\
    \ \n                              barcodes is used per sample).\n            \
    \                   \tWhen REDUNDANT_BARCODES=false, the 2 barcodes potentially\
    \ encode\n                               different information. For example, only\
    \ one of the barcodes encodes the sample identity \n                         \
    \     while \n                              the second barcode might be a random\
    \ barcode (UMI) to tell apart PCR artefacts from real \n                     \
    \         duplicates.\n                              Another example is when both\
    \ barcodes should be used in a combined fashion to resolve the \n            \
    \                  sample.\n                              In the first example,\
    \ you should use BPOS=BOTH BRED=false BM=READ_1.\n                           \
    \   In the second example, you should have BPOS=BOTH BRED=false BM=BOTH. \n  \
    \                            Note that with BPOS=BOTH BRED=true BM=BOTH, the behavior\
    \ would be different as \n                              'demultiplex' would then\
    \ check the STRICT option to perform sample resolution.\n                    \
    \          Importantly, when BARCODE_READ_POS (BPOS) == BOTH AND REDUNDANT_BARCODES=false,\
    \ BLEN, \n                              barcode matching options (MM, MMD, Q)\
    \ and read trimming/clipping options (XT, ZT) accept \n                      \
    \        different values for both barcodes in the form X:Z where X and Z are\
    \ 2 integers.\n                                Default value: true. This option\
    \ can be set to 'null' to clear the default value. \n                        \
    \      Possible values: {true, false} \n\nSTRICT=Boolean\nS=Boolean          \
    \           For paired-end data and when two distinct barcodes/indices are used\
    \ to encode samples,\n                               this option tells if both\
    \ barcodes should resolve to the same sample.\n                              \
    \ When true and if only one of the two reads has a barcode match, the read pair\
    \ is \n                              'unassigned'.\n                         \
    \      When false and if only one of the two reads has a barcode match, the read\
    \ pair is \n                              assigned to the\n                  \
    \             corresponding sample\n                              When reads resolve\
    \ to different samples, the read pair is always 'unassigned'.\n              \
    \                  Default value: false. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nMAX_MISMATCHES=String\nMM=String                     Maximum mismatches\
    \ for a barcode to be considered a match. In situations where both \n        \
    \                      barcodes are used for sample matching i.e. BPOS=BOTH BM=BOTH\
    \ (or 2 INDEX_FILE given), two \n                              distinct\n    \
    \                           values can be given here using the syntax MM=X:Z where\
    \ X and Z are 2 integers to use for \n                              read_1 and\
    \ read_2 respectively.\n                              MM=null is like MM=0\n \
    \                               Default value: 1. This option can be set to 'null'\
    \ to clear the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String      \
    \              Minimum difference between the number of mismatches against the\
    \ best and the second best \n                              barcode. When MMD is\
    \ not respected, the read remains unassigned.\n                              When\
    \ two distinct barcodes are used for sample matching (dual encoding), two distinct\
    \ \n                              values can be given using the syntax MMD=X:Z\
    \ where X and Z are 2 integers to use for \n                              first\
    \ (e.g. from read_1 or index_1)\n                              MMD=null is like\
    \ MMD=0\n                                Default value: 1. This option can be\
    \ set to 'null' to clear the default value. \n\nMIN_BASE_QUALITY=String\nQ=String\
    \                      Minimum base quality during barcode matching: bases which\
    \ quality is less than this \n                              cutoff are always\
    \ considered as a mismatch.When two distinct barcodes are used for sample \n \
    \                             matching (dual encoding), two distinct values can\
    \ be given using the syntax Q=X:Z where X \n                              and\
    \ Z are 2 integers to use for first (e.g. from read_1 or index_1) and second barcode\
    \ \n                              (e.g. from read_2 or index_2) respectively.\n\
    \                              Q=null is like Q=0.\n                         \
    \       Default value: 10. This option can be set to 'null' to clear the default\
    \ value. \n\nXTRIMLEN=String\nXT=String                     Optional extra number\
    \ of base to be trimmed right after the barcode (only used if \n             \
    \                 CLIP_BARCODE=true). \n                              When running\
    \ paired-end, two distinct values can be given using the syntax XT=X:Z where X\
    \ \n                              and Z are 2 integers to use for read_1 and read_2\
    \ respectively. Note that even when \n                              BPOS=READ_1\
    \ or BPOS=READ_2, a X:Y synthax can be given to trim the read w/o barcode as to\
    \ \n                              end up with reads of the same length (note that\
    \ this can also be operated using ZT). If a \n                              unique\
    \ value is given, e.g. XT=1, while running paired-end the following rule applies\
    \ :\n                               \t(1) BPOS=READ_1 or BPOS=READ_2, no trim\
    \ is applied at the read w/o barcode \n                              \t(2) BPOS=BOTH,\
    \ the value is used for both reads.\n                              Note that XT=null\
    \ is like XT=0.\n                                Default value: 0. This option\
    \ can be set to 'null' to clear the default value. \n\nZTRIMLEN=String\nZT=String\
    \                     Optional extra number of bases to be trimmed from the read\
    \ end i.e. 3' end.\n                              When running paired-end, two\
    \ distinct values can be given here using the syntax ZT=X:Z \n               \
    \               where X and Z are 2 integers to use for read_1 and read_2 respectively.\
    \ Note that even \n                              when BPOS=READ_1 or BPOS=READ_2,\
    \ a X:Y synthax can be given to trim the read w/o barcode \n                 \
    \             as to end up with reads of the same length (note that this can also\
    \ be operated using \n                              XT). Note that if a single\
    \ value is passed, the value always applies to both reads in \n              \
    \                paired-end mode without further consideration.\n            \
    \                  ZT=null is like ZT=0.\n                                Default\
    \ value: 0. This option can be set to 'null' to clear the default value. \n\n\
    CLIP_BARCODE=Boolean\nC=Boolean                     Clip barcode sequence from\
    \ read sequence, as well as XTRIMLEN (and ZTRIMLEN) bases if \n              \
    \                applicable, before writing to output file.\n                \
    \               If false, reads are written without modification to output file.\
    \ \n                              Apply to both barcodes when BPOS=BOTH.\n   \
    \                             Default value: true. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean               \
    \    Add barcode at the end of the read header. Apply to both barcodes when BPOS=BOTH.\n\
    \                              \tIf true, the string ':barcode' is added at the\
    \ end of the read header with a ':' added \n                              only\
    \ if current read header does not end with ':'.\n                            \
    \  \tIf both reads of the pair have a barcode (i.e. BARCODE_READ_POS == BOTH),\
    \ thenthe second \n                              read also has its own matched\
    \ barcode written. Else, the read without a barcode receives \n              \
    \                the barcode from the barcoded read.\n                       \
    \       \tFor example :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
    \ 2:N:0:'\n                              \tbecomes\n                         \
    \     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 2:N:0:BARCODE'\n         \
    \                     \n                              \tWhen barcodes containing\
    \ random positions, i.e. 'N', (for example like \tin the iCLIP \n            \
    \                  protocol) or are UMIs, the added sequence is the sequence clipped\
    \ from the read and NOT \n                              the matched barcode.\n\
    \                                Default value: true. This option can be set to\
    \ 'null' to clear the default value. \n                              Possible\
    \ values: {true, false} \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\nSAME_HEADERS=Boolean\
    \          Makes sure that headers of both reads of a pair are identical, using\
    \ the following read \n                              header pattern (for both\
    \ reads of a pair) :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
    \ SAMPLEBARCODE_READ1:SAMPLEBARCODE_READ2(if \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2This\
    \ option only makes sense in \n                              paired end mode and\
    \ ADD=true. Some (if not all) mappers will indeed complain when the \n       \
    \                       read headers are not identical. When molecular barcodes\
    \ are present in reads (either as \n                              additional barcodes\
    \ or as degenerate barcodes ie with 'N') and the RCHAR is used, you \n       \
    \                       will end with (problematic) read headers like this :\n\
    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
    \                              SAME_HEADERS=true will instead generates the following\
    \ identical header for both reads :\n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
    \                              \tNote that we also clipped the useless '1:N:0'\
    \ and '3:N:0' has they will also result in \n                              generating\
    \ different headers.\n                              \t\t Important : this option\
    \ will force RCHAR=: UNLESS you specify RCHAR=null ; in which \n             \
    \                 case a space will be preserved ie : \n                     \
    \         \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994 TAGAACAC:TGGAGTAG:CGTTGTAT\n\
    \                                Default value: true. This option can be set to\
    \ 'null' to clear the default value. \n                              Possible\
    \ values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String      \
    \            Replace spaces in read name/header using provided character. This\
    \ is particularly handy \n                              when you need to retain\t\
    \ ADDed barcode in read name/header during mapping (everything \n            \
    \                  after space in read name is usually clipped in BAM files).\t\
    For example, with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
    \ 2:N:0:'\n                              \tbecomes\n                         \
    \     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n         \
    \                       Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
    V=FastqQualityFormat          A value describing how the quality values are encoded\
    \ in the fastq.  Either 'Solexa' for \n                              pre-pipeline\
    \ 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline 1.3 and \n \
    \                             above (phred scaling + 64) or 'Standard' for phred\
    \ scaled scores with a character shift \n                              of 33.\
    \  If this value is not specified (or 'null' is given), the quality format will\
    \ be \n                              detected.\n                             \
    \   Default value: Standard. This option can be set to 'null' to clear the default\
    \ value. \n                              Possible values: {Solexa, Illumina, Standard}\
    \ \n\nOUTPUT_DIR=File\nO=File                        Output directory. By default,\
    \ output files are written in running directory.\n                           \
    \     Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\nUN=Boolean      \
    \              Should un-assigned reads be saved in files or simply ignored. File\
    \ names are \n                              automatically created or can be given\
    \ using UF1 & UF2 options.\n                                Default value: true.\
    \ This option can be set to 'null' to clear the default value. \n            \
    \                  Possible values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\n\
    UF1=String                    Name of the file in which to write unassigned reads\
    \ from FILE1.Either a name (in which \n                              case the\
    \ file will be created in the output dir) or full path.\n                    \
    \            Default value: unassigned_1.txt. This option can be set to 'null'\
    \ to clear the default \n                              value. \n\nUNASSIGNED_FILE_NAME_2=String\n\
    UF2=String                    Name of the file in which to write unassigned reads\
    \ from FILE2.Either a name (in which \n                              case the\
    \ file will be created in the output dir) or full path.\n                    \
    \            Default value: unassigned_2.txt. This option can be set to 'null'\
    \ to clear the default \n                              value. \n\nMETRICS_FILE_NAME=String\n\
    M=String                      File name where to write demultiplexing statistics.\
    \ Either a name (in which case the file \n                              will be\
    \ created in the output dir) or an absolute path.\n                          \
    \      Default value: jemultiplexer_out_stats.txt. This option can be set to 'null'\
    \ to clear \n                              the default value. \n\nBARCODE_DIAG_FILE=String\n\
    DIAG=String                   Name for a barcode match reporting file (not generated\
    \ by default).Either a name (in \n                              which case the\
    \ file will be created in the output dir) or full path. This file will \n    \
    \                          contain a line per read pair with the barcode best\
    \ matching the read subsequence or \n                              'null' when\
    \ no match is found according to matching parameters ; and the final selected\
    \ \n                              sample. This file is useful for debugging or\
    \ further processing in case both ends are \n                              barcoded.\n\
    \                              N.B: this file will have a size of about one of\
    \ the fastq input files.  Default value: \n                              null.\
    \ \n\nFORCE=Boolean                 Allows to overwrite existing files (system\
    \ rights still apply).\n                                Default value: false.\
    \ This option can be set to 'null' to clear the default value. \n            \
    \                  Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean\
    \                    Compress output files using gzip.\n                     \
    \           Default value: true. This option can be set to 'null' to clear the\
    \ default value. \n                              Possible values: {true, false}\
    \ \n\nFASTQ_FILE_EXTENSION=String   Change the default extension of created fastq\
    \ files, eg 'fastqsanger'. By default uses \n                              the\
    \ file extension from input fastq file. If result file names are given in the\
    \ barcode \n                              file, this option is only used to adapt\
    \ the unassigned file names. When using \n                              compression,\
    \ a .gz is always appended to file names and should not be specified in \n   \
    \                           FASTQ_FILE_EXTENSION i.e. \n                     \
    \         use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
    \                                Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
    ASYNC=Boolean                 Use one thread per Fastq Writer.\n             \
    \                   Default value: true. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nSTATS_ONLY=Boolean            Only produces metric and diagnostic reports\
    \ i.e. no output fastq file produced.\n                                Default\
    \ value: false. This option can be set to 'null' to clear the default value. \n\
    \                              Possible values: {true, false} \n\nUSE_EMBASE=Boolean\n\
    EM=Boolean                    Enables emBASE mode i.e fetch information from emBASE\
    \ and place demultiplexed files \n                              directly in emBASE\
    \ repository structure.\n                              This option is mutually\
    \ exclusive with BARCODE_FILE.\n                              Note : this option\
    \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false (all \n   \
    \                           other user options supported).\n                 \
    \               Default value: false. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \  Cannot be used in conjuction with option(s) BARCODE_FILE \n               \
    \               (BF)\n\n"
  generated_using: *id004
- !Command
  command: *id006
  positional:
  - !Positional
    description: ''
    position: 0
    name: Jeclipper
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: Jeclipper [options]\n\
    \nReads records in the supplied FASTQ file(s) according to specified read layouts\
    \ (RL option) and write output FASTQ file(s) according to supplied output layouts\
    \ (OL option).\n\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                \
    \            Displays options specific to this tool.\n\n--stdhelp\n-H        \
    \                    Displays options specific to this tool AND options common\
    \ to all Picard command line \n                              tools.\n\n--version\
    \                     Displays program version.\n\nFASTQ=File\nF=File        \
    \                Input fastq file (optionally gzipped)  Default value: null. This\
    \ option must be specified \n                              at least 1 times. \n\
    \nREAD_LAYOUT=String\nRL=String                     Describes the read layout(s)\
    \ e.g. 'RL=<BARCODE1:6><SAMPLE:x>' of input fastq file(s). The \n            \
    \                  input fastq files and read layouts are mached up by order on\
    \ the command line.\n                              Read layouts are only needed\
    \ for complex layouts but one must provide read layouts for \n               \
    \               ALL or NONE of the input fastq files.\n                      \
    \        Read layouts are made of <UMIn:X>, <BARCODEn:X>, <SAMPLEn:X> blocks to\
    \ describe blocks of \n                              type UMI, BARCODE or SAMPLE\
    \ with : \n                                  * 'n' the unique block index (an\
    \ index must be unique across all read layouts for \n                        \
    \      each index or each block type), use the same index to specify redundant\
    \ blocks e.g. use \n                              <BARCODE1:6> in two different\
    \ layouts to specify that the barcode found in both reads are \n             \
    \                 the same\n                                 * 'X' : either a\
    \ number indicating the length of the UMI, BARCODE or SAMPLE block or a \n   \
    \                           negative number e.g. -2 to specify the last 2 bases\
    \ should be ignored/clipped) or the \n                              letter 'x'\
    \ to specify to take the sequence till the end of read. Importantly, the 'x' or\
    \ \n                              negative length shotcut can only be used in\
    \ the last block of a read layout (i.e. \n                              <BARCODE1:x><SAMPLE1:20>\
    \ is not allowed)\n                              \n                          \
    \      Default value: null. This option may be specified 0 or more times. \n\n\
    OUTPUT_LAYOUT=String\nOL=String                     Describes the output file\
    \ layout(s) using the slots defined in read layouts and ':' to \n            \
    \                  delimitate three parts e.g. 'OL=1::' : \n                 \
    \             \t1.The number in the first part (i.e. from '1:' above) is the output\
    \ file index and it \n                              must be unique across all\
    \ 'OL' inputs. Inferred from order in comamnd line when not given\n          \
    \                    \t2.The second part (i.e. '' above) is the read header layout\
    \ ; when writing multiple UMI \n                              and BARCODE slots\
    \ in output read headers, these are always separated with the RCHAR (':' \n  \
    \                            by defaults).\n                              \t3.The\
    \ third part (i.e. '' above) is the read sequence layout.\n                  \
    \              Default value: null. This option may be specified 0 or more times.\
    \ \n\nWITH_QUALITY_IN_READNAME=Boolean\nWQ=Boolean                    Should quality\
    \ string also be injected in read names. Only applies to READBAR and UMI \n  \
    \                            described in the read name slot of output layout\
    \ \n                              If turned on, the quality string is translated\
    \ into 2 digits number and a e.g. UMI will \n                              look\
    \ like\n                              \t '...:ATGCAT333423212322:...' instead\
    \ of '...:ATGCAT:...'\n                              This option is particularly\
    \ useful with the retag module that knows how to extract \n                  \
    \            quality numbers into BAM tags.  Default value: false. This option\
    \ can be set to 'null' to \n                              clear the default value.\
    \ Possible values: {true, false} \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\n\
    OWID=Boolean                  Should the output layout number (output layout first\
    \ slot) be injected in the filename ?\n                              Only used\
    \ in absence of explicit file names in the barcode file.\n                   \
    \             Default value: true. This option can be set to 'null' to clear the\
    \ default value. \n                              Possible values: {true, false}\
    \ \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWHL=Boolean             \
    \     Should the output layout used for the read name (output layout second slot,in\
    \ short \n                              format) be injected in the filename ?\
    \ When true, each ouput file name contains e.g. \n                           \
    \   '_B1U1' for OL='1::'  \n                              Only used in absence\
    \ of explicit file names in the barcode file.\n                              \
    \  Default value: false. This option can be set to 'null' to clear the default\
    \ value. \n                              Possible values: {true, false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
    OWSL=Boolean                  Should the output layout used for the read sequence\
    \ (output layout third slot, in short \n                              format)\
    \ be injected in the filename ?When true, each ouput file name contains e.g. '_S1'\
    \ \n                              for OL='1::'  \n                           \
    \   Only used in absence of explicit file names in the barcode file.\n       \
    \                         Default value: false. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {true, false} \n\nOUTPUT_DIR=File\nO=File                        Output directory.\
    \ By default, output files are written in running directory.\n               \
    \                 Default value: null. \n\nFORCE=Boolean                 Allows\
    \ to overwrite existing files (system rights still apply).\n                 \
    \               Default value: false. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean                    Compress output files\
    \ using gzip.\n                                Default value: true. This option\
    \ can be set to 'null' to clear the default value. \n                        \
    \      Possible values: {true, false} \n\nREAD_NAME_SEPARATOR_CHAR=String\nSEP=String\
    \                    Separator character used to concatenate barcodes and umis\
    \ in read header\n                                Default value: :. This option\
    \ can be set to 'null' to clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
    V=FastqQualityFormat          A value describing how the quality values are encoded\
    \ in the fastq files.  Either \n                              'Solexa' for pre-pipeline\
    \ 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline \n         \
    \                     1.3 and above (phred scaling + 64) or 'Standard' for phred\
    \ scaled scores with a character \n                              shift of 33.\
    \  If this value is not specified (or 'null' is given), the quality format is\
    \ \n                              assumed to be will the 'Standard' for phred\
    \ scale.\n                                Default value: null. Possible values:\
    \ {Solexa, Illumina, Standard} \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\nTEST=Boolean\
    \                  test mode ie code execution stops right before read demultiplexing\
    \ starts btu after \n                              comamnd line validation  Default\
    \ value: false. This option can be set to 'null' to clear \n                 \
    \             the default value. Possible values: {true, false} \n\nFASTQ_FILE_EXTENSION=String\
    \   Change the default extension of created fastq files, eg 'fastqsanger'. By\
    \ default uses \n                              the file extension from input fastq\
    \ file. If result file names are given in the barcode \n                     \
    \         file, this option is only used to adapt the unassigned file names. When\
    \ using \n                              compression, a .gz is always appended\
    \ to file names and should not be specified in \n                            \
    \  FASTQ_FILE_EXTENSION i.e. \n                              use FASTQ_FILE_EXTENSION=fastq\
    \ and NOT FASTQ_FILE_EXTENSION=fastq.gz\n                                Default\
    \ value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\nASYNC=Boolean        \
    \         Use one thread per Fastq Writer.\n                                Default\
    \ value: true. This option can be set to 'null' to clear the default value. \n\
    \                              Possible values: {true, false} \n\n"
  generated_using: *id004
- !Command
  command: *id007
  positional:
  - !Positional
    description: 'Counting starts at 1 and negative numbers can be used to start counting
      from the end '
    position: 0
    name: header.
    optional: false
  - !Positional
    description: "a hyphen ('-'). The order of concatenation follows the order of\
      \ UMI_SLOT in the command "
    position: 0
    name: using
    optional: false
  - !Positional
    description: 'For example, consider the following read name that lists 3 different
      sequence codes in '
    position: 1
    name: line.
    optional: false
  - !Positional
    description: 'ACTCTAC,TCTGTAC,ACTGTAG  '
    position: 0
    name: ACTGTAC
    optional: false
  - !Positional
    description: 'RGPG=String                   Read Group program group; only considered
      when RG=true  Default value: null. '
    position: 0
    name: null.
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: TagFromReadName [options]\n\
    \nExtracts barcode and UMI sequence(s) embedded in read names and tag reads with\
    \ proper BAM tag.\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h               \
    \             Displays options specific to this tool.\n\n--stdhelp\n-H       \
    \                     Displays options specific to this tool AND options common\
    \ to all Picard command line \n                              tools.\n\n--version\
    \                     Displays program version.\n\nINPUT=File\nI=File        \
    \                Input SAM/BAM file  Required. \n\nOUTPUT=File\nO=File       \
    \                 Output SAM/BAM file  Required. \n\nBC_SLOT=Integer         \
    \      Where to find the BARCODE(s) in the read name once read name has been tokenized\
    \ using the \n                              SPLIT character (e.g. ':'). \n   \
    \                           This option can be specified multiple time when multiple\
    \ BARCODES are present in read \n                              header.\n     \
    \                         Counting starts at 1 and negative numbers can be used\
    \ to start counting from the end \n                              (last token is\
    \ '-1').\n                              BARCODE(s) extracted from read name are\
    \ used to assemble a 'BC:Z:GATCCTAG' tag (BC is \n                           \
    \   default, see BC_TAG). \n                              Following SAM specifications,\
    \ in the case of multiple barcodes, all the barcodes are \n                  \
    \            concatenated using \n                              a hyphen ('-')\
    \ between the barcodes. The order of concatenation follows the order of \n   \
    \                           BC_SLOT in the command line.\n                   \
    \           For example, consider the following read name that lists 3 different\
    \ barcodes in the end \n                              : \n                   \
    \           \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
    \ \n                              \t to indicate that the three slots contain\
    \ barcodes, use \n                              \t\t BC_SLOT=-1 BC_SLOT=-2 BC_SLOT=-3\
    \ ; which will result as BC:Z:AAGGTACG-GATCCTAG-CGATGTTT\n                   \
    \           \t if only the 2 last ones should be considered, use \n          \
    \                    \t\t BC_SLOT=-1 BC_SLOT=-2 ; which will result as BC:Z:AAGGTACG-GATCCTAG\t\
    \ Note that BC_SLOT \n                              order matters as : \n    \
    \                          \t\t BC_SLOT=-2 BC_SLOT=-1 ; would result as BC:Z:GATCCTAG-AAGGTACG\
    \  Default value: null. \n                              This option may be specified\
    \ 0 or more times. \n\nUMI_SLOT=Integer              Where to find the UMI(s)\
    \ in the read name once read name has been tokenized using the \n            \
    \                  SPLIT character (e.g. ':'). \n                            \
    \  This option can be specified multiple time when multiple UMIs are present in\
    \ read header.\n                              Counting starts at 1 and negative\
    \ numbers can be used to start counting from the end \n                      \
    \        (last token is '-1').\n                              UMI(s) extracted\
    \ from read name are used to assemble both a RX and OX tag e.g. \n           \
    \                   'RX:Z:GATCCTAG' tag. \n                              Following\
    \ SAM specifications, in the case of multiple UMIs, all the UMIs are concatenated\
    \ \n                              using \n                              a hyphen\
    \ ('-'). The order of concatenation follows the order of UMI_SLOT in the command\
    \ \n                              line.\n                              For example,\
    \ consider the following read name that lists 3 different sequence codes in \n\
    \                              the end : \n                              \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
    \ \n                              \t to indicate that the 2 last slots contain\
    \ UMIs, use \n                              \t\t UMI_SLOT=-1 UMI_SLOT=-2 ; which\
    \ will result as RX:Z:AAGGTACG-GATCCTAG\t Note that \n                       \
    \       UMI_SLOT order matters as : \n                              \t\t UMI_SLOT=-2\
    \ UMI_SLOT=-1 ; would result as RX:Z:GATCCTAG-AAGGTACG  Default value: null. \n\
    \                              This option may be specified 0 or more times. \n\
    \nCLUSTERED_CODES_FILE=File\nCC=File                       Group of barcodes (clusters)\
    \ for on-the-fly correction of the BARCODEs. This file \n                    \
    \          contains mapping between the barcodes sequences\n                 \
    \             as originally found in the FASTQ reads (and in the read name of\
    \ the input BAM) and the \n                              corrected sample barcode\n\
    \                              sequences (e.g. as identified by clustering with\
    \ mismatches using tools like starcode or \n                              vsearch\
    \ ) \n                              that should be written in the BC tag in place\
    \ of the original sequence.\n                              If provided, the BARCODE\
    \ sequence(s) extracted from read name are converted to the 'real' \n        \
    \                      barcodes according\n                              to the\
    \ mapping described in this file. If the sequence is not found in the supplied\
    \ \n                              mapping file, the read is either\n         \
    \                     trashed or kept (according to option KEEP_UNASSIGNED_BARCODES),\
    \ in which case the value \n                              defined by UNASSIGNED_BARCODE_VALUE\n\
    \                              is used.\n                              Format:\
    \ two column text file, one cluster per line with the real barcode in the first\
    \ \n                              line and the comma separated\n             \
    \                 list of codes in the second column i.e. :\n                \
    \              \t\t ACTGTAC \tACTCTAC,TCTGTAC,ACTGTAG  \n                    \
    \          All the codes MUST have the same length  Default value: null. \n\n\
    KEEP_UNASSIGNED_BARCODES=Boolean\nKUP=Boolean                   Should read be\
    \ keep when no mapping was defined for the orginal barcode sequence in \n    \
    \                          provided CLUSTERED_CODES_FILE.\n                  \
    \            If false, the read is not written in output file.  Default value:\
    \ true. This option can \n                              be set to 'null' to clear\
    \ the default value. Possible values: {true, false} \n\nUNASSIGNED_BARCODE_VALUE=String\n\
    UBV=String                    Value to use for the BARCODE tag when CLUSTERED_CODES_FILE\
    \ was provided and no mapping \n                              was defined for\
    \ the orginal barcode sequence.  Default value: NA. This option can be set \n\
    \                              to 'null' to clear the default value. \n\nTRIM_HEADERS=Boolean\n\
    T=Boolean                     Should barcode/UMIs information be removed from\
    \ read names in the output BAM ?   Default \n                              value:\
    \ false. This option can be set to 'null' to clear the default value. Possible\
    \ \n                              values: {true, false} \n\nTSLOTS=Integer\nTSLOTS=Integer\
    \                Where to find *all* barcode(s) and UMIs in the read name once\
    \ has been tokenized using \n                              the SPLIT character\
    \ (e.g. ':'). \n                              This option is only considered when\
    \ TRIM_HEADERS=true and should only be used when \n                          \
    \    UMI_SLOT and BC_SLOT do not\n                              describe all the\
    \ slots that should be trimmed. When TSLOTS is ommited while \n              \
    \                TRIM_HEADERS=true, the values\n                             \
    \ of UMI_SLOT and BC_SLOT apply.\n                              IMPORTANT : counting\
    \ starts at 1 and negative numbers can be used to start counting from \n     \
    \                         the end.\n                              See UMI_SLOT\
    \ help for examples.  Default value: null. This option may be specified 0 or \n\
    \                              more times. \n\nSPLIT_CHAR=String\nSPLIT=String\
    \                  Character to use to split up the read header line, default\
    \ is ':'.  Default value: :. \n                              This option can be\
    \ set to 'null' to clear the default value. \n\nBC_TAG=String                \
    \ SAM Tag to use to store barcode(s) sequences extracted from barcode slots (BC\
    \ by \n                              default). Do not change unless you have good\
    \ reasons to.  Default value: BC. This option \n                             \
    \ can be set to 'null' to clear the default value. \n\nQT_TAG=String         \
    \        SAM Tag to use to store barcode(s) quality score extracted from barcode\
    \ slots (QT by \n                              default). Do not change unless\
    \ you have good reasons to.  Default value: QT. This option \n               \
    \               can be set to 'null' to clear the default value. \n\nWITH_RX=Boolean\
    \               Should the RX (and QX when relevant) SAM Tag(s) be used to store\
    \ UMI(s) sequence (and \n                              quality) extracted from\
    \ UMI slots. Set to FALSE if you don't want these tags to be set.   \n       \
    \                       Default value: true. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {true, false} \n\nWITH_OX=Boolean               Should the OX (and BZ when relevant)\
    \ SAM Tag(s) be used to store UMI(s) sequence (and \n                        \
    \      quality) extracted from UMI slots. Set to FALSE if you don't want these\
    \ tags to be set.   \n                              Default value: true. This\
    \ option can be set to 'null' to clear the default value. \n                 \
    \             Possible values: {true, false} \n\nUMI_SEQ_TAG=String          \
    \  SAM Tag to use to store original UMI(s) sequence extracted from UMI slots (instead\
    \ of RX \n                              / OX)  Default value: null. \n\nUMI_QUAL_TAG=String\
    \           SAM Tag to use to store original UMI(s) sequence extracted from UMI\
    \ slots (instead of QX \n                              / BZ)  Default value: null.\
    \ \n\nADD_RG=Boolean\nARG=Boolean                   Should a read group be created\
    \ for each barcode. This option is only considered when \n                   \
    \           providing a CLUSTERED_CODES_FILE.  Default value: false. This option\
    \ can be set to 'null' \n                              to clear the default value.\
    \ Possible values: {true, false} \n\nRGPL=String                   Read Group\
    \ platform (e.g. illumina, solid) ; only considered when RG=true  Default value:\
    \ \n                              null. \n\nRGPG=String                   Read\
    \ Group program group; only considered when RG=true  Default value: null. \n\n\
    PROGRAM_RECORD_ID=String\nPG=String                     The program record ID\
    \ for the @PG record(s) created by this program. Set to null to \n           \
    \                   disable PG record creation.  This string may have a suffix\
    \ appended to avoid collision \n                              with other program\
    \ record IDs.  Default value: TagFromReadName. This option can be set to \n  \
    \                            'null' to clear the default value. \n\nPROGRAM_GROUP_VERSION=String\n\
    PG_VERSION=String             Value of VN tag of PG record to be created. If not\
    \ specified, the version will be \n                              detected automatically.\
    \  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
    \             Value of CL tag of PG record to be created. If not supplied the\
    \ command line will be \n                              detected automatically.\
    \  Default value: null. \n\nPROGRAM_GROUP_NAME=String\nPG_NAME=String        \
    \        Value of PN tag of PG record to be created.  Default value: TagFromReadName.\
    \ This option \n                              can be set to 'null' to clear the\
    \ default value. \n\nCOMMENT=String\nCO=String                     Comment(s)\
    \ to include in the output file's header.  Default value: null. This option may\
    \ \n                              be specified 0 or more times. \n\n"
  generated_using: *id004
- !Command
  command: *id008
  positional:
  - !Positional
    description: 'Required. '
    position: 0
    name: data.
    optional: false
  - !Positional
    description: INDEX_FILE2=File
    position: 0
    name: Required.
    optional: false
  - !Positional
    description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
    position: 0
    name: Or
    optional: false
  - !Positional
    description: 'Indicates if both index barcodes encode redundant information i.e.
      if both barcodes are '
    position: 0
    name: provided.
    optional: false
  - !Positional
    description: 'values can be given here using the syntax MM=X:Z where X and Z are
      2 integers to use for '
    position: 0
    name: distinct
    optional: false
  - !Positional
    description: "'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'"
    position: 0
    name: becomes
    optional: false
  - !Positional
    description: "Default value: Standard. This option can be set to 'null' to clear\
      \ the default value. "
    position: 0
    name: detected.
    optional: false
  - !Positional
    description: 'N.B: this file will have a size of about one of the fastq input
      files.  Default value: '
    position: 0
    name: barcoded.
    optional: false
  - !Positional
    description: "FORCE=Boolean                 Allows to overwrite existing files\
      \ (system rights still apply).\nDefault value: false. This option can be set\
      \ to 'null' to clear the default value."
    position: 1
    name: null.
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: JemultiplexerIllumina\
    \ [options]\n\n\tFastq files demultiplexer for Illumina Fastq files using Illumina\
    \ Index files.\n\tFastq files (reads and index) can be in gzip compressed (end\
    \ in .gz). \n\tBy default output files are gzipped and have names following the\
    \ pattern \n\t'_<barcode[-barcode2...-barcodeN]>_[1|2].txt[.gz]' unless you gave\
    \ file\n\t names to use within the barcode description file.\nExample : \n\t je\
    \ demultiplex-illu F1=fastq_1.txt.gz I1=index_1.txt.gz BF=barcodes.bs O=~/Desktop/test-jemultiplexer2/\
    \ \nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h                            Displays\
    \ options specific to this tool.\n\n--stdhelp\n-H                            Displays\
    \ options specific to this tool AND options common to all Picard command line\
    \ \n                              tools.\n\n--version                     Displays\
    \ program version.\n\nFASTQ_FILE1=File\nF1=File                       Input fastq\
    \ file (optionally gzipped) for single end data, or first read in paired end \n\
    \                              data.\n                                Required.\
    \ \n\nFASTQ_FILE2=File\nF2=File                       Input fastq file (optionally\
    \ gzipped) for the second read of paired end data.\n                         \
    \       Default value: null. \n\nINDEX_FILE1=File\nI1=File                   \
    \    Fastq file for index 1 (barcode) reads, optionally gzipped.\n           \
    \                     Required. \n\nINDEX_FILE2=File\nI2=File                \
    \       Fastq file for index 2 (barcode) reads, optionally gzipped.\n        \
    \                      A INDEX_FILE1 MUST be provided when INDEX_FILE2 is given.\
    \ This situation corresponds to \n                              Illumina dual\
    \ indexing.\n                                Default value: null. \n\nBARCODE_FILE=File\n\
    BF=File                       Barcode file describing sequence list and sample\
    \ names. Tab-delimited file with 2 \n                              columns, with\
    \ the sample in col1 and the corresponding barcode in col2.\n                \
    \              Simple barcode file format : 2 tab-delimited colums\n         \
    \                     \tIf multiple barcode map to the same sample, either line\
    \ can be duplicated e.g.\n                              \t\tsample1\tATAT\n  \
    \                            \t\tsample1\tGAGG\n                             \
    \ \t\tsample2\tCCAA\n                              \t\tsample2\tTGTG\n       \
    \                       \tOr barcodes can be combined using the OR operator '|'\
    \ i.e. the file above can be \n                              re-written like\n\
    \                               \t\tsample1\tATAT|GAGG\n                     \
    \         \t\tsample2\tCCAA|TGTG\n                              \tFinally, for\
    \ the special situation of paired-end data in which barcodes differ at both \n\
    \                              ends (ie BPOS=BOTH BRED=false BM=BOTH , see BRED\
    \ option description), barcodes for read_1 \n                              and\
    \ read_2 can be distinguished using a ':' separator i.e. \n                  \
    \            \t\tsample1\tATAT:GAGG\n                              \t\tsample2\t\
    CCAA:TGTG\n                              \tThis above syntax means that sample\
    \ 1 is encoded with ATAT barcode at read_1 AND GAGG \n                       \
    \       barcode at read_2. Note that you can still combine barcodes using | e.g.\
    \ \n                              \t\tsample1\tATAT|GAGG:CCAA|TGTG\n         \
    \                     \twould mean that sample 1 is mapped by the combination\
    \ of barcode: ATAT OR GAGG at read_1 \n                              AND CCAA\
    \ OR TGTG at read_2.\n                              Extended barcode file format\
    \ : 3 (single-end) or 4 (paired-end) tab-delimited colums\n                  \
    \            \tsame as the simple barcode file format but the extra columns contains\
    \ the file name(s) \n                              to use to name output files.\
    \ A unique extra column is expected for single-end while 2 \n                \
    \              extra columns are expected for paired-end. In case, lines are duplicated\
    \ (multiple \n                              barcodesmapping the same sample),\
    \ the same file name should be indicated in the third \n                     \
    \         (and fourth) column(s). \n                              \t\tsample1\t\
    ATAT\tspl1_1.txt.gz\tspl1_2.txt.gz\n                              \t\tsample1\t\
    GAGG\tspl1_1.txt.gz\tspl1_2.txt.gz\n                              \t\tsample2\t\
    CCAA\tspl2_1.txt.gz\tspl2_2.txt.gz\n                              \tOr\n     \
    \                         \t\tsample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz\
    \ \t spl1_2.txt.gz\n                              Ns in barcode sequence are allowed\
    \ and are used to flag positions that should be ignored \n                   \
    \           in sample matching \n                              \t i.e. they will\
    \ be clipped off the read sequence (like in iCLIP protocol).  Required.  \n  \
    \                            Cannot be used in conjuction with option(s) USE_EMBASE\
    \ (EM)\n\nBARCODE_READ_POS=BarcodePosition\nBPOS=BarcodePosition          Indicates\
    \ the location of additional barcodes present in the read(s). Setting this option\
    \ \n                              implies setting the LEN option.\n          \
    \                    \tImportantly, these additional barcodes must not encode\
    \ sample identity information but \n                              used for \n\
    \                              \te.g. molecular barcoding (UMIs) or for any purpose\
    \ other than sample identity encoding.  \n                              Default\
    \ value: BOTH. This option can be set to 'null' to clear the default value. \n\
    \                              Possible values: {READ_1, READ_2, BOTH, NONE} \n\
    \nBCLEN=String\nLEN=String                    Length of the additional barcodes\
    \ present in the read(s) as indicated by the BPOS option. \n                 \
    \             Two distinct length can be provided using the syntax LEN=X:Z where\
    \ X and Z are 2 integers \n                              representing the barcode\
    \ length for read_1 and read_2 respectively.\n                              Only\
    \ relevant when BPOS != NONE.  Default value: null. \n\nREDUNDANT_BARCODES=Boolean\n\
    BRED=Boolean                  This option only applies for paired-end data with\
    \ *both* INDEX_FILE1 and INDEX_FILE2 \n                              provided.\n\
    \                              Indicates if both index barcodes encode redundant\
    \ information i.e. if both barcodes are \n                              supposed\
    \ to be identical (or resolve to the same sample when a pool of barcodes is used\
    \ \n                              per sample).\n                             \
    \  \tWhen BRED=true, the STRICT option guides the sample lookup behavior\tWhen\
    \ BRED=false, \n                              barcodes are combined prior to sample\
    \ lookup.\n                                Default value: true. This option can\
    \ be set to 'null' to clear the default value. \n                            \
    \  Possible values: {true, false} \n\nSTRICT=Boolean\nS=Boolean              \
    \       For paired-end data and when two distinct barcodes/indices are used to\
    \ encode samples,\n                               this option tells if both barcodes\
    \ should resolve to the same sample.\n                               When true\
    \ and if only one of the two reads has a barcode match, the read pair is \n  \
    \                            'unassigned'.\n                               When\
    \ false and if only one of the two reads has a barcode match, the read pair is\
    \ \n                              assigned to the\n                          \
    \     corresponding sample\n                              When reads resolve to\
    \ different samples, the read pair is always 'unassigned'.\n                 \
    \               Default value: false. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nMAX_MISMATCHES=String\nMM=String                     Maximum mismatches\
    \ for a barcode to be considered a match. In situations where both \n        \
    \                      barcodes are used for sample matching i.e. BPOS=BOTH BM=BOTH\
    \ (or 2 INDEX_FILE given), two \n                              distinct\n    \
    \                           values can be given here using the syntax MM=X:Z where\
    \ X and Z are 2 integers to use for \n                              read_1 and\
    \ read_2 respectively.\n                              MM=null is like MM=0\n \
    \                               Default value: 1. This option can be set to 'null'\
    \ to clear the default value. \n\nMIN_MISMATCH_DELTA=String\nMMD=String      \
    \              Minimum difference between the number of mismatches against the\
    \ best and the second best \n                              barcode. When MMD is\
    \ not respected, the read remains unassigned.\n                              When\
    \ two distinct barcodes are used for sample matching (dual encoding), two distinct\
    \ \n                              values can be given using the syntax MMD=X:Z\
    \ where X and Z are 2 integers to use for \n                              first\
    \ (e.g. from read_1 or index_1)\n                              MMD=null is like\
    \ MMD=0\n                                Default value: 1. This option can be\
    \ set to 'null' to clear the default value. \n\nMIN_BASE_QUALITY=String\nQ=String\
    \                      Minimum base quality during barcode matching: bases which\
    \ quality is less than this \n                              cutoff are always\
    \ considered as a mismatch.When two distinct barcodes are used for sample \n \
    \                             matching (dual encoding), two distinct values can\
    \ be given using the syntax Q=X:Z where X \n                              and\
    \ Z are 2 integers to use for first (e.g. from read_1 or index_1) and second barcode\
    \ \n                              (e.g. from read_2 or index_2) respectively.\n\
    \                              Q=null is like Q=0.\n                         \
    \       Default value: 10. This option can be set to 'null' to clear the default\
    \ value. \n\nXTRIMLEN=String\nXT=String                     Optional extra number\
    \ of base to be trimmed right after the barcode (only used if \n             \
    \                 CLIP_BARCODE=true). \n                              When running\
    \ paired-end, two distinct values can be given using the syntax XT=X:Z where X\
    \ \n                              and Z are 2 integers to use for read_1 and read_2\
    \ respectively. Note that even when \n                              BPOS=READ_1\
    \ or BPOS=READ_2, a X:Y synthax can be given to trim the read w/o barcode as to\
    \ \n                              end up with reads of the same length (note that\
    \ this can also be operated using ZT). If a \n                              unique\
    \ value is given, e.g. XT=1, while running paired-end the following rule applies\
    \ :\n                               \t(1) BPOS=READ_1 or BPOS=READ_2, no trim\
    \ is applied at the read w/o barcode \n                              \t(2) BPOS=BOTH,\
    \ the value is used for both reads.\n                              Note that XT=null\
    \ is like XT=0.\n                                Default value: 0. This option\
    \ can be set to 'null' to clear the default value. \n\nZTRIMLEN=String\nZT=String\
    \                     Optional extra number of bases to be trimmed from the read\
    \ end i.e. 3' end.\n                              When running paired-end, two\
    \ distinct values can be given here using the syntax ZT=X:Z \n               \
    \               where X and Z are 2 integers to use for read_1 and read_2 respectively.\
    \ Note that even \n                              when BPOS=READ_1 or BPOS=READ_2,\
    \ a X:Y synthax can be given to trim the read w/o barcode \n                 \
    \             as to end up with reads of the same length (note that this can also\
    \ be operated using \n                              XT). Note that if a single\
    \ value is passed, the value always applies to both reads in \n              \
    \                paired-end mode without further consideration.\n            \
    \                  ZT=null is like ZT=0.\n                                Default\
    \ value: 0. This option can be set to 'null' to clear the default value. \n\n\
    CLIP_BARCODE=Boolean\nC=Boolean                     Clip barcode sequence from\
    \ read sequence, as well as XTRIMLEN (and ZTRIMLEN) bases if \n              \
    \                applicable, before writing to output file.\n                \
    \               If false, reads are written without modification to output file.\
    \ \n                              Apply to both barcodes when BPOS=BOTH.\n   \
    \                             Default value: true. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {true, false} \n\nADD_BARCODE_TO_HEADER=Boolean\nADD=Boolean               \
    \    Add matched barcode at the end of the read header. Applies to both index\
    \ when INDEX_FILE2 \n                              is also provided.\n       \
    \                       \tFirst the sample encoding barcodes from I1 (and I2 when\
    \ relevant) are added to the read \n                              headers like\
    \ \n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
    \ 2:N:0:I1_BARCODE:I2_BARCODE'\n                              \tThen, if BPOS!=NONE,\
    \ the additional barcodes (UMIs) clipped from the read(s) are added \n       \
    \                       to their own header, like \n                         \
    \     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965 \n                       \
    \       2:N:0:I1_BARCODE:I2_BARCODE:CLIPPED_SEQ_FROMREAD'\n                  \
    \              Default value: true. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nENSURE_IDENTICAL_HEADER_NAMES=Boolean\nSAME_HEADERS=Boolean          Makes\
    \ sure that headers of both reads of a pair are identical, using the following\
    \ read \n                              header pattern (for both reads of a pair)\
    \ :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
    \ I1_BARCODE:I2_BARCODE(if \n                              applicable)':CLIPPED_SEQ_FROMREAD1:CLIPPED_SEQ_FROMREAD2\
    \ \n                              This option only makes sense in paired end mode\
    \ and ADD=true. Some (if not all) mappers \n                              will\
    \ indeed complain when the read headers are not identical. When molecular barcodes\
    \ are \n                              present in reads and the RCHAR is used,\
    \ you will end with (problematic) read headers like \n                       \
    \       this :\n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:1:N:0:TAGAACAC:TGGAGTAG\n\
    \                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:3:N:0:TAGAACAC:CGTTGTAT\n\
    \                              SAME_HEADERS=true will instead genetates the following\
    \ identical header for both reads :\n                              \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994:TAGAACAC:TGGAGTAG:CGTTGTAT\n\
    \                              Note that we also clipped the useless '1:N:0' and\
    \ '3:N:0' has they will also result in \n                              generating\
    \ different headers\n                              \t Important : this option\
    \ will force RCHAR=: UNLESS you specify RCHAR=null ; in which \n             \
    \                 case a space will be preserved ie : \n                     \
    \         \t\tHISEQ:44:C6KC0ANXX:5:1101:1491:1994 TAGAACAC:TGGAGTAG:CGTTGTAT\n\
    \                                Default value: true. This option can be set to\
    \ 'null' to clear the default value. \n                              Possible\
    \ values: {true, false} \n\nREAD_NAME_REPLACE_CHAR=String\nRCHAR=String      \
    \            Replace spaces in read name/header using provided character. This\
    \ is particularly handy \n                              when you need to retain\t\
    \ ADDed barcode in read name/header during mapping (everything \n            \
    \                  after space in read name is usually clipped in BAM files).\t\
    For example, with RCHAR=':' :\n                              \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965\
    \ 2:N:0:'\n                              \tbecomes\n                         \
    \     \t\t'@D3FCO8P1:178:C1WLBACXX:7:1101:1836:1965:2:N:0:BARCODE'\n         \
    \                       Default value: null. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
    V=FastqQualityFormat          A value describing how the quality values are encoded\
    \ in the fastq.  Either 'Solexa' for \n                              pre-pipeline\
    \ 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline 1.3 and \n \
    \                             above (phred scaling + 64) or 'Standard' for phred\
    \ scaled scores with a character shift \n                              of 33.\
    \  If this value is not specified (or 'null' is given), the quality format will\
    \ be \n                              detected.\n                             \
    \   Default value: Standard. This option can be set to 'null' to clear the default\
    \ value. \n                              Possible values: {Solexa, Illumina, Standard}\
    \ \n\nOUTPUT_DIR=File\nO=File                        Output directory. By default,\
    \ output files are written in running directory.\n                           \
    \     Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\nUN=Boolean      \
    \              Should un-assigned reads be saved in files or simply ignored. File\
    \ names are \n                              automatically created or can be given\
    \ using UF1 & UF2 options.\n                                Default value: true.\
    \ This option can be set to 'null' to clear the default value. \n            \
    \                  Possible values: {true, false} \n\nUNASSIGNED_FILE_NAME_1=String\n\
    UF1=String                    Name of the file in which to write unassigned reads\
    \ from FILE1.Either a name (in which \n                              case the\
    \ file will be created in the output dir) or full path.\n                    \
    \            Default value: unassigned_1.txt. This option can be set to 'null'\
    \ to clear the default \n                              value. \n\nUNASSIGNED_FILE_NAME_2=String\n\
    UF2=String                    Name of the file in which to write unassigned reads\
    \ from FILE2.Either a name (in which \n                              case the\
    \ file will be created in the output dir) or full path.\n                    \
    \            Default value: unassigned_2.txt. This option can be set to 'null'\
    \ to clear the default \n                              value. \n\nMETRICS_FILE_NAME=String\n\
    M=String                      File name where to write demultiplexing statistics.\
    \ Either a name (in which case the file \n                              will be\
    \ created in the output dir) or an absolute path.\n                          \
    \      Default value: jemultiplexer_out_stats.txt. This option can be set to 'null'\
    \ to clear \n                              the default value. \n\nBARCODE_DIAG_FILE=String\n\
    DIAG=String                   Name for a barcode match reporting file (not generated\
    \ by default).Either a name (in \n                              which case the\
    \ file will be created in the output dir) or full path. This file will \n    \
    \                          contain a line per read pair with the barcode best\
    \ matching the read subsequence or \n                              'null' when\
    \ no match is found according to matching parameters ; and the final selected\
    \ \n                              sample. This file is useful for debugging or\
    \ further processing in case both ends are \n                              barcoded.\n\
    \                              N.B: this file will have a size of about one of\
    \ the fastq input files.  Default value: \n                              null.\
    \ \n\nFORCE=Boolean                 Allows to overwrite existing files (system\
    \ rights still apply).\n                                Default value: false.\
    \ This option can be set to 'null' to clear the default value. \n            \
    \                  Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\nGZ=Boolean\
    \                    Compress output files using gzip.\n                     \
    \           Default value: true. This option can be set to 'null' to clear the\
    \ default value. \n                              Possible values: {true, false}\
    \ \n\nFASTQ_FILE_EXTENSION=String   Change the default extension of created fastq\
    \ files, eg 'fastqsanger'. By default uses \n                              the\
    \ file extension from input fastq file. If result file names are given in the\
    \ barcode \n                              file, this option is only used to adapt\
    \ the unassigned file names. When using \n                              compression,\
    \ a .gz is always appended to file names and should not be specified in \n   \
    \                           FASTQ_FILE_EXTENSION i.e. \n                     \
    \         use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
    \                                Default value: null. \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
    ASYNC=Boolean                 Use one thread per Fastq Writer.\n             \
    \                   Default value: true. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nSTATS_ONLY=Boolean            Only produces metric and diagnostic reports\
    \ i.e. no output fastq file produced.\n                                Default\
    \ value: false. This option can be set to 'null' to clear the default value. \n\
    \                              Possible values: {true, false} \n\nUSE_EMBASE=Boolean\n\
    EM=Boolean                    Enables emBASE mode i.e fetch information from emBASE\
    \ and place demultiplexed files \n                              directly in emBASE\
    \ repository structure.\n                              This option is mutually\
    \ exclusive with BARCODE_FILE.\n                              Note : this option\
    \ forces O=null GZ=true UN=true UF1=null UF2=null STATS_ONLY=false (all \n   \
    \                           other user options supported).\n                 \
    \               Default value: false. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \  Cannot be used in conjuction with option(s) BARCODE_FILE \n               \
    \               (BF)\n\n"
  generated_using: *id004
- !Command
  command: *id009
  positional:
  - !Positional
    description: 'In this format, a simple BARCODE slot is expected in the ReadLayout
      and NO headers are '
    position: 0
    name: col2.
    optional: false
  - !Positional
    description: "sample1 ATAT|GAGG:CCAA|TGTG\n3. Extended barcode file format : 3\
      \ (single-end) or 4 (paired-end) tab-delimited colums\nsame as the simple barcode\
      \ file format but the extra columns contains the file name(s)"
    position: 0
    name: e.g.
    optional: false
  - !Positional
    description: sample1          ATAT|GAGG:CCAA|TGTG     spl1_1.txt.gz   spl1_2.txt.gz
    position: 0
    name: Or
    optional: false
  - !Positional
    description: Cannot be used in conjuction with option(s) USE_EMBASE (EM)
    position: 1
    name: Required.
    optional: false
  - !Positional
    description: "When provided, Je expects as many 'OF=' as output layouts ('OL=...')\
      \ parameters or "
    position: 0
    name: formats.
    optional: false
  - !Positional
    description: 'Default value: null. '
    position: 0
    name: barcoded.
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: DemultiplexCLI [options]\n\
    \nUsage: program [options...]\n\nVersion: 2.0.RC\n\n\nOptions:\n\n--help\n-h \
    \                           Displays options specific to this tool.\n\n--stdhelp\n\
    -H                            Displays options specific to this tool AND options\
    \ common to all Picard command line \n                              tools.\n\n\
    --version                     Displays program version.\n\nFASTQ=File\nF=File\
    \                        Input fastq file (optionally gzipped)  Default value:\
    \ null. This option must be specified \n                              at least\
    \ 1 times. \n\nBARCODE_FILE=File\nBF=File                       Barcode file (tsv)\
    \ matching sample names to barcode combination. \n                           \
    \   \n                                 ### GENERAL Barcode File Format \n    \
    \                          In this format, the file structure is governed with\
    \ headers:\n                              \t* the 'SAMPLE' column lists the sample\
    \ names\n                              \t* the 'BARCODEn' columns list the matching\
    \ BARCODE from the BARCODEn slot (where n is a \n                            \
    \  number, see RL option). \n                              \t    It is mandatory\
    \ to have as many 'BARCODEn' columns as described BARCODE slots in \n        \
    \                      READ LAYOUTS. Here again, barcodes can be combined using\
    \ the OR operator '|'\n                              \t* the optional 'OUTn' columns\
    \ (where n is a number) list the output file names for this \n               \
    \               sample and matching output number.\n                         \
    \     \n                                 ### SIMPLE Barcode File Format (for backward\
    \ compatibility) ; please see the GENERAL \n                              format\
    \ described above \n                              The file must have 2 columns\
    \ with the sample in col1 and the corresponding barcode in \n                \
    \              col2.\n                              In this format, a simple BARCODE\
    \ slot is expected in the ReadLayout and NO headers are \n                   \
    \           needed e.g. :\n                              \t\tsample1\tGAGG\n \
    \                             \t\tsample2\tCCAA\n                            \
    \  \tThe format accept the following shortcuts: \n                           \
    \   \t1. If multiple barcodes map to the same sample, either lines can be duplicated\
    \ e.g.\n                              \t\tsample1\tATAT\n                    \
    \          \t\tsample1\tGAGG\n                              \t\tsample2\tCCAA\n\
    \                              \t\tsample2\tTGTG\n                           \
    \   \tOr barcodes can be combined using the OR operator '|' i.e. the file above\
    \ can be \n                              re-written like\n                   \
    \            \t\tsample1\tATAT|GAGG\n                              \t\tsample2\t\
    CCAA|TGTG\n                              \t2. For the special situation of paired-end\
    \ data in which barcodes differ at both ends \n                              i.e.\
    \ with BARCODE1 and BARCODE2 described for read one and two respectively, barcodes\
    \ for \n                              BARCODE1 and BARCODE2 can be distinguished\
    \ using a ':' separator i.e. \n                              \t\tsample1\tATAT:GAGG\n\
    \                              \t\tsample2\tCCAA:TGTG\n                      \
    \        \tThis above syntax means that sample 1 is encoded with ATAT barcode\
    \ from BARCODE1 slot \n                              AND GAGG barcode from BARCODE2\
    \ slot. Note that you can still combine barcodes using | \n                  \
    \            e.g. \n                              \t\tsample1\tATAT|GAGG:CCAA|TGTG\n\
    \                              \t3. Extended barcode file format : 3 (single-end)\
    \ or 4 (paired-end) tab-delimited colums\n                              \tsame\
    \ as the simple barcode file format but the extra columns contains the file name(s)\
    \ \n                              to use to name output files. A unique extra\
    \ column is expected for single-end while 2 \n                              extra\
    \ columns are expected for paired-end. In case lines are duplicated (multiple\
    \ \n                              barcodes mapping the same sample), the same\
    \ file name should be indicated in the third \n                              (and\
    \ fourth) column(s). \n                              \t\tsample1\tATAT\tspl1_1.txt.gz\t\
    spl1_2.txt.gz\n                              \t\tsample1\tGAGG\tspl1_1.txt.gz\t\
    spl1_2.txt.gz\n                              \t\tsample2\tCCAA\tspl2_1.txt.gz\t\
    spl2_2.txt.gz\n                              \tOr\n                          \
    \    \t\tsample1 \t ATAT|GAGG:CCAA|TGTG \t spl1_1.txt.gz \t spl1_2.txt.gz\n  \
    \                              Required.  Cannot be used in conjuction with option(s)\
    \ USE_EMBASE (EM)\n\nREAD_LAYOUT=String\nRL=String                     Describes\
    \ the read layout(s) of input fastq file(s) e.g. RL='<BARCODE:6><SAMPLE:x>' \n\
    \                              describes a read with a barcode in the first 6\
    \ bases followed by the sample sequence ('x' \n                              means\
    \ 'till the end', see below). You MUST single quote the pattern \n           \
    \                   (RL='<BARCODE:6><SAMPLE:x>') as '>' have special meaning in\
    \ unix.The input fastq files \n                              and read layouts\
    \ are mached up by order on the command line.\n                              Read\
    \ layouts are only needed for complex layouts but one must provide read layouts\
    \ for \n                              ALL or NONE of the input fastq files.\n\
    \                              ## READ LAYOUT FORMAT DESCRIPTION:/nRead layouts\
    \ are made of <UMIn:X>, <BARCODEn:X>, \n                              <SAMPLEn:X>\
    \ blocks to describe blocks of type UMI, BARCODE or SAMPLE with : \n         \
    \                         * 'n' the unique block index (an index must be unique\
    \ across all read layouts for \n                              each index or each\
    \ block type), use the same index to specify redundant blocks e.g. use \n    \
    \                          <BARCODE1:6> in two different layouts to specify that\
    \ the barcode found in both reads are \n                              the same\n\
    \                                 * 'X' : either a number indicating the length\
    \ of the UMI, BARCODE or SAMPLE block or a \n                              negative\
    \ number e.g. -2 to specify the last 2 bases should be ignored/clipped) or the\
    \ \n                              letter 'x' to specify to take the sequence till\
    \ the end of read. Importantly, the 'x' or \n                              negative\
    \ length shortcuts can *only* be used in the last block of a read layout (i.e.\
    \ \n                              <BARCODE1:x><SAMPLE1:20> is not allowed)\n \
    \                             In addition, layouts can contain N or fixed bases\
    \ like in 'NN<BARCODE1:6>NNNN<SAMPLE1:x>' \n                              where\
    \ the Ns tell Je to skip 2 and 4 bases before extracting the barcode & sample\
    \ \n                              sequence respectively.\n                   \
    \           \n                              ## OMIITING READ LAYOUT IN THE COMMAND\
    \ LINE:/nWhen no read layout is provided, the \n                             \
    \ following defaults apply :\n                                 * 1 input fastq:\
    \ single end with layout <BARCODE1:X><SAMPLE1:x> where X is inferred \n      \
    \                        from barcode file\n                                 *\
    \ 2 input fastqs: \n                                     - paired end with redundant\
    \ barcode if barcode file describes a single BARCODE \n                      \
    \        i.e. <BARCODE1:X><SAMPLE1:x> and <BARCODE1:X><SAMPLE2:x>, where X is\
    \ inferred from \n                              barcode file\n               \
    \                      - paired end with non redundant barcode if barcode file\
    \ describes two BARCODE \n                              column i.e. <BARCODE1:X><SAMPLE1:x>\
    \ and <BARCODE2:Y><SAMPLE2:x>, where X and Y are \n                          \
    \    inferred from barcode file\n                                     - single\
    \ end with index file if barcode file describes a single BARCODE and second \n\
    \                              fastq file has reads of length < 10 + barcode_length\n\
    \                                 * 3 input fastqs: \n                       \
    \              - paired end with an index file i.e. <SAMPLE1:x>, <SAMPLE2:x> and\
    \ <BARCODE1:X> \n                              when barcode file has a single\
    \ BARCODE column (X is inferred from barcode file)\n                         \
    \            - single end with two index files i.e. <SAMPLE1:x>, <BARCODE1:X>\
    \ and <BARCODE2:Y> \n                              when barcode file has two BARCODE\
    \ columns (X,Y is inferred from barcode file)\n                              \
    \   * 4 input fastqs: paired end with either \n                              \
    \        - 2 non-redundant index files i.e. <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X>,\
    \ \n                              <BARCODE2:Y> if the barcode file has two BARCODE\
    \ columns or a ATGC:GCTAGC syntax (X,Y \n                              inferred\
    \ from barcode file) \n                                     - 2 redundant index\
    \ files <SAMPLE1:x>, <SAMPLE2:x>, <BARCODE1:X> and <BARCODE1:X> \n           \
    \                   if the barcode file has a single BARCODE column (X inferred\
    \ from barcode file)\n                              \n                       \
    \         Default value: null. This option may be specified 0 or more times. \n\
    \nOUTPUT_LAYOUT=String\nOL=String                     Describes the output file\
    \ layout(s) using the slots defined in read layouts (, , ) and \n            \
    \                  are made of three distinct parts separated with ':'.\n    \
    \                          In addition to , , ,  is used as a synonym to  to indicate\
    \ that the real sequence  should \n                              be written (as\
    \ opposed to writting the barcode when usign ). \n                           \
    \   An output layout looks like '1::' where the three mandatory parts (':'-separated)\
    \ are :\n                              \t- The number in the first part (i.e.\
    \ from '1:' above) is the output file index and it \n                        \
    \      must be unique across all 'OL' inputs. \n                             \
    \ \t- The second part (i.e. '' above) is the read header layout; when writing\
    \ multiple UMI \n                              and BARCODE slots in output read\
    \ headers, these are always separated with the RCHAR (':' \n                 \
    \             by defaults).\n                              \t- The third part\
    \ (i.e. '' above) is the read sequence layout. Note that here  and  are \n   \
    \                           fully synonyms as the real sequence (i.e READBAR)\
    \ is always written\n                              \n                        \
    \      Important: You MUST single quote the pattern (OL='1::') as '>' have special\
    \ meaning in \n                              unix.An output file is created for\
    \ each sample and each OL index. Output file names \n                        \
    \      default to samplename_outputfileindex with the original fastq file extensions\n\
    \                              \n                              ## OMIITING OUTPUT\
    \ LAYOUT IN THE COMMAND LINE:/n  When no OL is described, Je considers \n    \
    \                          an output file should be created for each input FASTQ\
    \ (containing a SAMPLE slot) and for \n                              each sample.\n\
    \                               In this scenario:\n                          \
    \    \t1. The output files only contain the SAMPLE slot unless CLIP is set to\
    \ false\n                              \t2. The barcode(s) and sample names are\
    \ injected in the output file names according to \n                          \
    \    the pattern 'FASTQFILENAMEn_SAMPLENAME_BARCODES.ORIGINALEXTENSIONS' ) \n\
    \                              \t3. Unless ADD is set to false, all BARCODE and\
    \ UMI slots (if any) are placed in the \n                              fastq headers\
    \ following their slot index i.e. BARCODE1:...:BARCODEn:UMI1:UMI2:...:UMIn \n\
    \                              and are separated with ':'.\n                 \
    \             ## SHORT LAYOUT FORMAT \n                              The output\
    \ layout can be specified in a concise way using 'S','B', 'R' and 'U' for \n \
    \                             SAMPLE, BARCODE, READBAR and UMI, respectively.\
    \ In this format, the surounding '' are \n                              also omitted.\
    \ For example 'OL=1:B1U1U2:S1' is a synonym of 'OL=1::'  Default value: null.\
    \ \n                              This option may be specified 0 or more times.\
    \ \n\nWITH_QUALITY_IN_READNAME=Boolean\nWQ=Boolean                    Set to True\
    \ to keep Phred sequence qualities in output read names. \n                  \
    \            This option only applies to BARCODE, READBAR and UMI described in\
    \ the read name slot of \n                              output layout. For BARCODE,\
    \ the equivalent READBAR quality is used. In case of redundant \n            \
    \                  slots, the best found quality is used.\n                  \
    \            The quality string is translated into 2 digits number representing\
    \ the quality scores on \n                              the Phred scale and a\
    \ e.g. UMI will look like\n                              \t '...:ATGCAT333023212322:...'\
    \ instead of '...:ATGCAT:...'\n                              This option is particularly\
    \ useful with the retag module that knows how to extract \n                  \
    \            quality numbers into BAM tags.  Default value: false. This option\
    \ can be set to 'null' to \n                              clear the default value.\
    \ Possible values: {true, false} \n\nOUTPUT_DIR=File\nO=File                 \
    \       Output directory. By default, output files are written in running directory.\n\
    \                                Default value: null. \n\nKEEP_UNASSIGNED_READ=Boolean\n\
    UN=Boolean                    Should un-assigned reads be saved in files or simply\
    \ ignored. File names are \n                              automatically created\
    \ or can be given using UF option.\n                                Default value:\
    \ true. This option can be set to 'null' to clear the default value. \n      \
    \                        Possible values: {true, false} \n\nUNASSIGNED_FILE=String\n\
    UF=String                     Name of unassigned files in which to write unassigned\
    \ reads. When provided, Je expects as \n                              many UF\
    \ files as input FASTQ files. UF options are matched up with FASTQ options \n\
    \                              following the order they are defined on the command\
    \ line.\n                              Either a name (in which case the file will\
    \ be created in the output dir) or full path.\n                              \
    \  Default value: null. This option may be specified 0 or more times. \n\nADD_LAYOUT_IDX_IN_OUTPUT_FILENAME=Boolean\n\
    OWID=Boolean                  Should the output layout number (output layout first\
    \ slot) be injected in the filename ?\n                              Only used\
    \ in absence of explicit file names in the barcode file.\n                   \
    \             Default value: true. This option can be set to 'null' to clear the\
    \ default value. \n                              Possible values: {true, false}\
    \ \n\nADD_HEADER_LAYOUT_IN_OUTPUT_FILENAME=Boolean\nOWHL=Boolean             \
    \     Should the output layout used for the read name (output layout second slot,in\
    \ short \n                              format) be injected in the filename ?\
    \ When true, each ouput file name contains e.g. \n                           \
    \   '_B1U1' for OL='1::'  \n                              Only used in absence\
    \ of explicit file names in the barcode file.\n                              \
    \  Default value: false. This option can be set to 'null' to clear the default\
    \ value. \n                              Possible values: {true, false} \n\nADD_SEQUENCE_LAYOUT_IN_OUTPUT_FILENAME=Boolean\n\
    OWSL=Boolean                  Should the output layout used for the read sequence\
    \ (output layout third slot, in short \n                              format)\
    \ be injected in the filename ?When true, each ouput file name contains e.g. '_S1'\
    \ \n                              for OL='1::'  \n                           \
    \   Only used in absence of explicit file names in the barcode file.\n       \
    \                         Default value: false. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {true, false} \n\nOUTPUT_FILE=String\nOF=String                     Tells Je\
    \ to write **all** assigned reads in the same output file(s) i.e. use this option\
    \ \n                              when you do NOT want to create per-sample demultiplexed\
    \ files but rather want to keep all \n                              reads in the\
    \ same file while barcode information is gathered and injected in output \n  \
    \                            formats.\n                               When provided,\
    \ Je expects as many 'OF=' as output layouts ('OL=...') parameters or \n     \
    \                         'FASTQ=input' files when OL is not provided\n      \
    \                        . OF options are matched up with OL/FASTQ options following\
    \ the order in which they are \n                              defined on the command\
    \ line.\n                              OF expects either a name (in which case\
    \ the file will be created in the output dir) or an \n                       \
    \       absolute path.\n                                Default value: null. This\
    \ option may be specified 0 or more times. \n\nMAX_MISMATCHES=String\nMM=String\
    \                     Maximum mismatches for a barcode to be considered a match.\
    \ Either exactly one or multiple \n                              values (with\
    \ format MM=X:Y:Z). \n                              When multiple values are provided,\
    \ Je expects exactly one value for each BARCODE (with \n                     \
    \         distinct indices) described in the barcode file/read layouts.\n    \
    \                          Values (X,Y,Z) are matched up with the sorted list\
    \ of BARCODES (i.e.  X for BARCODE1, Y \n                              for BARCODE2\
    \ and Z for BARCODE3)\n                                Default value: 1. This\
    \ option can be set to 'null' to clear the default value. \n\nMIN_MISMATCH_DELTA=String\n\
    MMD=String                    Minimum difference between the number of mismatches\
    \ against the best and the second best \n                              barcode.\
    \ When MMD is not respected, the read remains unassigned.\n                  \
    \            Either exactly one or multiple values (with format MMD=X:Y:Z). When\
    \ multiple values are \n                              provided, Je expects exactly\
    \ one value for each BARCODE (with distinct indices) described \n            \
    \                  in the barcode file/read layouts.\n                       \
    \       Values (X,Y,Z) are matched up with the sorted list of BARCODES (i.e. \
    \ X for BARCODE1, Y \n                              for BARCODE2 and Z for BARCODE3)\n\
    \                                Default value: 1. This option can be set to 'null'\
    \ to clear the default value. \n\nMIN_BASE_QUALITY=String\nQ=String          \
    \            Minimum base quality during barcode matching: bases which quality\
    \ is less than this \n                              cutoff are always considered\
    \ as a mismatch.Either exactly one or multiple values (with \n               \
    \               format Q=X:Y:Z). When multiple values are provided, Je expects\
    \ exactly one value for each \n                              BARCODE (with distinct\
    \ indices) described in the barcode file/read layouts.\n                     \
    \         Values (X,Y,Z) are matched up with the sorted list of BARCODES (i.e.\
    \  X for BARCODE1, Y \n                              for BARCODE2 and Z for BARCODE3)\n\
    \                                Default value: 10. This option can be set to\
    \ 'null' to clear the default value. \n\nSTRICT=Boolean\nS=Boolean           \
    \          When reads have redundant BARCODE slots, this option tells how to handle\
    \ situation when \n                              the read sequence do not resolve\
    \ to the same sample.\n                               When true, the read pair\
    \ is always 'unassigned'.\n                               When false, the read\
    \ pair is assigned to the sample with the lowest overall mismatch sum\n      \
    \                          Default value: false. This option can be set to 'null'\
    \ to clear the default value. \n                              Possible values:\
    \ {true, false} \n\nFORCE=Boolean                 Allows to overwrite existing\
    \ files (system rights still apply).\n                                Default\
    \ value: false. This option can be set to 'null' to clear the default value. \n\
    \                              Possible values: {true, false} \n\nGZIP_OUTPUTS=Boolean\n\
    GZ=Boolean                    Compress output files using gzip.\n            \
    \                    Default value: true. This option can be set to 'null' to\
    \ clear the default value. \n                              Possible values: {true,\
    \ false} \n\nCLIP=Boolean                  In absence of output layout, tell if\
    \ barcode and UMI sequences should be clipped off read \n                    \
    \          sequence before writing to output file.\n                         \
    \      If false, reads are written without modification to output file.  Default\
    \ value: true. \n                              This option can be set to 'null'\
    \ to clear the default value. Possible values: {true, \n                     \
    \         false} \n\nADD=Boolean                   In absence of output layout,\
    \ tell if barcode and UMI sequences should be added at the end \n            \
    \                  of the read header.\n                              BARCODE\
    \ and UMI slots (in this order) are concatenated using the character defined by\
    \ the \n                              SEP option\n                           \
    \     Default value: true. This option can be set to 'null' to clear the default\
    \ value. \n                              Possible values: {true, false} \n\nREAD_NAME_SEPARATOR_CHAR=String\n\
    SEP=String                    Separator character used to concatenate barcodes\
    \ and umis in read header\n                                Default value: :. This\
    \ option can be set to 'null' to clear the default value. \n\nQUALITY_FORMAT=FastqQualityFormat\n\
    V=FastqQualityFormat          A value describing how the quality values are encoded\
    \ in the fastq files.  Either \n                              'Solexa' for pre-pipeline\
    \ 1.3 style scores (solexa scaling + 66), 'Illumina' for pipeline \n         \
    \                     1.3 and above (phred scaling + 64) or 'Standard' for phred\
    \ scaled scores with a character \n                              shift of 33.\
    \  If this value is not specified (or 'null' is given), the quality format is\
    \ \n                              assumed to be will the 'Standard' for phred\
    \ scale.\n                                Default value: null. Possible values:\
    \ {Solexa, Illumina, Standard} \n\nMETRICS_FILE_NAME=String\nM=String        \
    \              File name where to write demultiplexing statistics. Either a name\
    \ (in which case the file \n                              will be created in the\
    \ output dir) or an absolute path.\n                                Default value:\
    \ jemultiplexer_out_stats.txt. This option can be set to 'null' to clear \n  \
    \                            the default value. \n\nBARCODE_DIAG_FILE=String\n\
    DIAG=String                   Name for a barcode match reporting file (not generated\
    \ by default).Either a name (in \n                              which case the\
    \ file will be created in the output dir) or full path. This file will \n    \
    \                          contain a line per read set with the barcodes best\
    \ matching the read subsequences or \n                              'null' when\
    \ no match is found according to matching parameters ; and the final selected\
    \ \n                              sample. This file is useful for debugging or\
    \ further processing in case both ends are \n                              barcoded.\n\
    \                                Default value: null. \n\nTEST_MODE_STOP_AFTER_PARSING=Boolean\n\
    TEST=Boolean                  test mode ie code execution stops right before read\
    \ demultiplexing starts but after \n                              command line\
    \ validation  Default value: false. This option can be set to 'null' to clear\
    \ \n                              the default value. Possible values: {true, false}\
    \ \n\nFASTQ_FILE_EXTENSION=String   Change the default extension of created fastq\
    \ files, eg 'fastqsanger'. By default uses \n                              the\
    \ file extension from input fastq file. If result file names are given in the\
    \ barcode \n                              file, this option is only used to adapt\
    \ the unassigned file names. When using \n                              compression,\
    \ a .gz is always appended to file names and should not be specified in \n   \
    \                           FASTQ_FILE_EXTENSION i.e. \n                     \
    \         use FASTQ_FILE_EXTENSION=fastq and NOT FASTQ_FILE_EXTENSION=fastq.gz\n\
    \                                Default value: null. \n\nINPUT_FASTQ_COMPRESSION=Boolean\n\
    \                              Indicates if the input fastq files are gzipped.\
    \ Please use this option when file names \n                              are compressed\
    \ but lack the typical '.gz' extension. \n                                Default\
    \ value: null. Possible values: {true, false} \n\nWRITER_FACTORY_USE_ASYNC_IO=Boolean\n\
    ASYNC=Boolean                 Use one thread per Fastq Writer.\n             \
    \                   Default value: true. This option can be set to 'null' to clear\
    \ the default value. \n                              Possible values: {true, false}\
    \ \n\nUSE_EMBASE=Boolean\nEM=Boolean                    Enables emBASE mode i.e\
    \ fetch information from emBASE and place demultiplexed files \n             \
    \                 directly in emBASE repository structure.\n                 \
    \             This option is mutually exclusive with BARCODE_FILE.\n         \
    \                     Note : this option forces O=null GZ=true UN=true UF1=null\
    \ UF2=null STATS_ONLY=false (all \n                              other user options\
    \ supported).\n                                Default value: false. This option\
    \ can be set to 'null' to clear the default value. \n                        \
    \      Possible values: {true, false}  Cannot be used in conjuction with option(s)\
    \ BARCODE_FILE \n                              (BF)\n\n"
  generated_using: *id004
- !Command
  command: *id010
  positional:
  - !Positional
    description: SPLIT_CHAR=String
    position: 0
    name: times.
    optional: false
  - !Positional
    description: COMMENT=String
    position: 0
    name: value.
    optional: false
  named:
  - !Flag
    description: "Displays options specific to this tool AND options common to all\
      \ Picard command line\ntools."
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: Displays program version.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Picked up _JAVA_OPTIONS: -Xmx4G -Xms256m\nUSAGE: MarkDuplicatesWithMolecularCode\
    \ [options]\n\nExamines aligned records in the supplied SAM or BAM file to locate\
    \ duplicate molecules taking into account molecular barcodes (Unique Molecular\
    \ Identifiers or UMIs) found in read header. All records are then either written\
    \ to the output file with the duplicate records flagged or trashed.\nExample :\n\
    \t je markdupes INPUT=file_with_dupes.bam OUTPUT=result.bam MM=1\nVersion: 2.0.RC\n\
    \n\nOptions:\n\n--help\n-h                            Displays options specific\
    \ to this tool.\n\n--stdhelp\n-H                            Displays options specific\
    \ to this tool AND options common to all Picard command line \n              \
    \                tools.\n\n--version                     Displays program version.\n\
    \nINPUT=String\nI=String                      One or more input SAM or BAM files\
    \ to analyze. Must be coordinate sorted.  Default value: \n                  \
    \            null. This option may be specified 0 or more times. \n\nOUTPUT=File\n\
    O=File                        The output file to write marked records to  Required.\
    \ \n\nMISMATCHES=Integer\nMM=Integer                    Number of MisMatches (inclusive)\
    \ to still consider two Unique Molecular Identifiers \n                      \
    \        (UMIs) identical i.e. this option buffers for sequencing errors.Indeed,\
    \ in case of a \n                              sequencing error, 2 duplicate reads\
    \ would not be considered duplicates anymore.Note that \n                    \
    \          N are not considered mismatches during comparison ie ATTNGG and NTTANG\
    \ are seen as the \n                              same barcode and these two reads\
    \ would be flagged duplicates.This option takes a single \n                  \
    \            value even when several barcodes are present (see SLOTS). Note that\
    \ when declaring \n                              several barcodes (see SLOTS)\
    \ AND providing a predefined set of barcodes (see BC option), \n             \
    \                 the MM value is applicable in each lookup. When a predefined\
    \ set of barcodes is NOT \n                              given, the different\
    \ barcodes (SLOTS) are concatenated first and the MM value is \n             \
    \                 therefore considered *overall* as the concatenated code is seen\
    \ as a unique code.\n                              MM=null is like MM=0\n    \
    \                          Use the minimum Hamming distance of the original barcode\
    \ set (if applicable).  Required. \n\nMAX_NUMBER_OF_N=Integer\nMAX_N=Integer \
    \                Maximum number of Ns a molecular code can contain (inclusive).\
    \ Above this value, reads \n                              are placed in a UNDEF\
    \ group.More precisely, these 'too degenarate' codes will not :\n            \
    \                  \t * be compared to the list of predefined codes [predefined\
    \ code list situation ie BC \n                              option given] nor\
    \ \n                              \t * be considered as a potential independent\
    \ code [no predefined code list situation ie \n                              BC\
    \ option not given]\n                              Default value is the MISMATCHES\
    \ number.\n                               Note that when declaring several barcodes\
    \ (see SLOTS) AND providing a predefined set of \n                           \
    \   barcodes (see BC option), the MAX_N value is applicable to each barcode. When\
    \ a \n                              predefined set of barcodes is NOT given, the\
    \ different barcodes (SLOTS) are concatenated \n                             \
    \ first and the MAX_N value is therefore considered *overall*.  Default value:\
    \ null. \n\nSLOTS=Integer\nSLOTS=Integer                 Where to find the UMIs\
    \ (and only the UMIs) in the read name once read name has been \n            \
    \                  tokenized using the SPLIT character (e.g. ':'). \n        \
    \                      By default, the UMI is considered to be found at the end\
    \ of the read header i.e. after \n                              the last ':'.\
    \ Use this option to indicate other or additional UMI positions (e.g. \n     \
    \                         multiple UMIs present in read header.\n            \
    \                  IMPORTANT : counting starts at 1 and negative numbers can be\
    \ used to start counting from \n                              the end.\n     \
    \                         For example, consider the following read name that lists\
    \ 3 different barcodes in the end \n                              : \n       \
    \                       \t HISEQ:44:C6KC0ANXX:8:2112:20670:79594:CGATGTTT:GATCCTAG:AAGGTACG\
    \ \n                              \t to indicate that the three barcodes are molecular\
    \ codes, use \n                              \t\tSLOTS=-1 SLOTS=-2 SLOTS=-3\n\
    \                              \t if only the 2 last ones should be considered\
    \ (the third one being a sample encoding \n                              barcode),\
    \ use \n                              \t\tSLOTS=-1 SLOTS=-2\t N.B.: UMI usage\
    \ can be deactivate by explicitely setting SLOTS=null \n                     \
    \         in the command line\n                                Default value:\
    \ null. This option may be specified 0 or more times. \n\nBARCODE_FILE=File\n\
    BC=File                       Pre-defined list of UMIs that can be expected. Format:\
    \ one column text file, one barcode \n                              per line.\
    \ All UMIs MUST have the same length.   Default value: null. \n\nMETRICS_FILE=File\n\
    M=File                        File to write duplication metrics to  Required.\
    \ \n\nREMOVE_DUPLICATES=Boolean     If true do not write duplicates to the output\
    \ file instead of writing them with \n                              appropriate\
    \ flags set.  Default value: false. This option can be set to 'null' to clear\
    \ \n                              the default value. Possible values: {true, false}\
    \ \n\nASSUME_SORTED=Boolean\nAS=Boolean                    If true, assume that\
    \ the input file is coordinate sorted even if the header says \n             \
    \                 otherwise. Deprecated, used ASSUME_SORT_ORDER=coordinate instead.\
    \  Default value: false. \n                              This option can be set\
    \ to 'null' to clear the default value. Possible values: {true, \n           \
    \                   false}  Cannot be used in conjuction with option(s) ASSUME_SORT_ORDER\
    \ (ASO)\n\nTRIM_HEADERS=Boolean\nT=Boolean                     Should barcode\
    \ information be removed from read names in the output BAM ? This is usefull \n\
    \                              to save storage space.\n                      \
    \          Default value: false. This option can be set to 'null' to clear the\
    \ default value. \n                              Possible values: {true, false}\
    \ \n\nTSLOTS=Integer\nTSLOTS=Integer                Where to find *all* barcode(s)\
    \ (i.e. sample encoding and UMIs) in the read name once has \n               \
    \               been tokenized using the SPLIT character (e.g. ':'). \n      \
    \                        This option is only considered when TRIM_HEADERS=true.\
    \ When TSLOTS is ommited while \n                              TRIM_HEADERS=true,\
    \ the values of SLOTS apply.\n                              IMPORTANT : counting\
    \ starts at 1 and negative numbers can be used to start counting from \n     \
    \                         the end.\n                              See SLOT help\
    \ for examples.  Default value: null. This option may be specified 0 or more \n\
    \                              times. \n\nSPLIT_CHAR=String\nSPLIT=String    \
    \              Character to use to split up the read header line, default is ':'.\
    \  Default value: :. \n                              This option can be set to\
    \ 'null' to clear the default value. \n\nASSUME_SORT_ORDER=SortOrder\nASO=SortOrder\
    \                 If not null, assume that the input file has this order even\
    \ if the header says otherwise.  \n                              Default value:\
    \ null. Possible values: {unsorted, queryname, coordinate, duplicate, \n     \
    \                         unknown}  Cannot be used in conjuction with option(s)\
    \ ASSUME_SORTED (AS)\n\nDUPLICATE_SCORING_STRATEGY=ScoringStrategy\nDS=ScoringStrategy\
    \            The scoring strategy for choosing the non-duplicate among candidates.\
    \  Default value: \n                              SUM_OF_BASE_QUALITIES. This\
    \ option can be set to 'null' to clear the default value. \n                 \
    \             Possible values: {SUM_OF_BASE_QUALITIES, TOTAL_MAPPED_REFERENCE_LENGTH,\
    \ RANDOM} \n\nPROGRAM_RECORD_ID=String\nPG=String                     The program\
    \ record ID for the @PG record(s) created by this program. Set to null to \n \
    \                             disable PG record creation.  This string may have\
    \ a suffix appended to avoid collision \n                              with other\
    \ program record IDs.  Default value: MarkDuplicates. This option can be set to\
    \ \n                              'null' to clear the default value. \n\nPROGRAM_GROUP_VERSION=String\n\
    PG_VERSION=String             Value of VN tag of PG record to be created. If not\
    \ specified, the version will be \n                              detected automatically.\
    \  Default value: null. \n\nPROGRAM_GROUP_COMMAND_LINE=String\nPG_COMMAND=String\
    \             Value of CL tag of PG record to be created. If not supplied the\
    \ command line will be \n                              detected automatically.\
    \  Default value: null. \n\nPROGRAM_GROUP_NAME=String\nPG_NAME=String        \
    \        Value of PN tag of PG record to be created.  Default value: \n      \
    \                        MarkDuplicatesWithMolecularCode. This option can be set\
    \ to 'null' to clear the default \n                              value. \n\nCOMMENT=String\n\
    CO=String                     Comment(s) to include in the output file's header.\
    \  Default value: null. This option may \n                              be specified\
    \ 0 or more times. \n\nREAD_NAME_REGEX=String        Regular expression that can\
    \ be used to parse read names in the incoming SAM file. Read \n              \
    \                names are parsed to extract three variables: tile/region, x coordinate\
    \ and y coordinate. \n                              These values are used to estimate\
    \ the rate of optical duplication in order to give a more \n                 \
    \             accurate estimated library size. Set this option to null to disable\
    \ optical duplicate \n                              detection, e.g. for RNA-seq\
    \ or other data where duplicate sets are extremely large and \n              \
    \                estimating library complexity is not an aim. Note that without\
    \ optical duplicate counts, \n                              library size estimation\
    \ will be inaccurate. The regular expression should contain three \n         \
    \                     capture groups for the three variables, in order. It must\
    \ match the entire read name. \n                              Note that if the\
    \ default regex is specified, a regex match is not actually done, but \n     \
    \                         instead the read name  is split on colon character.\
    \ For 5 element names, the 3rd, 4th and \n                              5th elements\
    \ are assumed to be tile, x and y values. For 7 element names (CASAVA 1.8), \n\
    \                              the 5th, 6th, and 7th elements are assumed to be\
    \ tile, x and y values.  Default value: \n                              <optimized\
    \ capture of last three ':' separated fields as numeric values>. This option can\
    \ \n                              be set to 'null' to clear the default value.\
    \ \n\nOPTICAL_DUPLICATE_PIXEL_DISTANCE=Integer\n                             \
    \ The maximum offset between two duplicate clusters in order to consider them\
    \ optical \n                              duplicates. The default is appropriate\
    \ for unpatterned versions of the Illumina platform. \n                      \
    \        For the patterned flowcell models, 2500 is moreappropriate. For other\
    \ platforms and \n                              models, users should experiment\
    \ to find what works best.  Default value: 100. This option \n               \
    \               can be set to 'null' to clear the default value. \n\nMAX_FILE_HANDLES_FOR_READ_ENDS_MAP=Integer\n\
    MAX_FILE_HANDLES=Integer      Maximum number of file handles to keep open when\
    \ spilling read ends to disk. Set this \n                              number\
    \ a little lower than the per-process maximum number of file that may be open.\
    \ This \n                              number can be found by executing the 'ulimit\
    \ -n' command on a Unix system.  Default \n                              value:\
    \ 8000. This option can be set to 'null' to clear the default value. \n\nSORTING_COLLECTION_SIZE_RATIO=Double\n\
    \                              This number, plus the maximum RAM available to\
    \ the JVM, determine the memory footprint \n                              used\
    \ by some of the sorting collections.  If you are running out of memory, try reducing\
    \ \n                              this number.  Default value: 0.25. This option\
    \ can be set to 'null' to clear the default \n                              value.\
    \ \n\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage:   je <command> [options] \n\nwith command in : \n\t clip      \t\
  \t clips barcodes/UMIs from fastq sequence and places them in read name headers\
  \ \n\t debarcode \t\t demultiplexes fastq file(s) into user-defined output files,\
  \ with optional handling of molecular barcodes\n\t demultiplex \t\t demultiplexes\
  \ fastq file(s) with Je 1.x implementation, with optional handling of molecular\
  \ barcodes for further use in 'dupes' module\n\t demultiplex-illu \t demultiplexes\
  \ fastq file(s) using Illumina Index files with Je 1.x implementation, with optional\
  \ handling of molecular barcodes for further use in 'dupes' module\n\t markdupes\
  \     \t\t removes read duplicates based on molecular barcodes found in read name\
  \ headers (as produced by clip or plex)\n\t dropseq    \t\t clips cell barcode and\
  \ UMI from read 1 and adds them to header of read 2. This command is for processing\
  \ drop-seq results.\n\t retag    \t\t extracts barcode and UMI sequence(s) embedded\
  \ in read names and tag reads with proper BAM tag.\n\nVersion : 2.0.RC\n"
generated_using: *id004
