!Command
command: &id001
- vawk
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - vawk
  - vcf
  positional:
  - !Positional
    optional: false
    position: 0
    name: vawk
    description: ''
  - !Positional
    optional: false
    position: 1
    name: cmd
    description: ''
  - !Positional
    optional: true
    position: 2
    name: vcf
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --header
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: ''
    args: !SimpleFlagArg
      name: INFO_COL
  - !Flag
    optional: true
    synonyms:
    - -v
    description: ''
    args: !SimpleFlagArg
      name: VAR
  parent: !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: vawk
        description: ''
      - !Positional
        optional: false
        position: 1
        name: cmd
        description: ''
      - !Positional
        optional: true
        position: 2
        name: vcf
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --header
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: ''
        args: !SimpleFlagArg
          name: INFO_COL
      - !Flag
        optional: true
        synonyms:
        - -v
        description: ''
        args: !SimpleFlagArg
          name: VAR
      parent: !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: vawk
            description: ''
          - !Positional
            optional: false
            position: 1
            name: cmd
            description: ''
          - !Positional
            optional: true
            position: 2
            name: vcf
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --header
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: ''
            args: !SimpleFlagArg
              name: INFO_COL
          - !Flag
            optional: true
            synonyms:
            - -v
            description: ''
            args: !SimpleFlagArg
              name: VAR
          parent: !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: vawk
                description: ''
              - !Positional
                optional: false
                position: 1
                name: cmd
                description: ''
              - !Positional
                optional: true
                position: 2
                name: vcf
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --header
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: ''
                args: !SimpleFlagArg
                  name: INFO_COL
              - !Flag
                optional: true
                synonyms:
                - -v
                description: ''
                args: !SimpleFlagArg
                  name: VAR
              parent: !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: vawk
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: cmd
                    description: ''
                  - !Positional
                    optional: true
                    position: 2
                    name: vcf
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --header
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: ''
                    args: !SimpleFlagArg
                      name: INFO_COL
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    description: ''
                    args: !SimpleFlagArg
                      name: VAR
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - -v
                      - --var
                      description: 'declare an external variable (e.g.: SIZE=10000)'
                      args: !SimpleFlagArg
                        name: VAR
                    - !Flag
                      optional: true
                      synonyms:
                      - -c
                      - --col
                      description: column of the INFO field [8]
                      args: !SimpleFlagArg
                        name: INFO_COL
                    - !Flag
                      optional: true
                      synonyms:
                      - --header
                      description: print VCF header
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --debug
                      description: debugging level verbosity
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: vawk
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: cmd
                        description: ''
                      - !Positional
                        optional: true
                        position: 2
                        name: vcf
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --header
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: ''
                        args: !SimpleFlagArg
                          name: INFO_COL
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        description: ''
                        args: !SimpleFlagArg
                          name: VAR
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ''
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header]\
                        \ [--debug] cmd [vcf]\nvawk: error: unrecognized arguments:\
                        \ --usage\n"
                      generated_using: &id004
                      - --usage
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header]\
                      \ [--debug] cmd [vcf]\n\nvawk\nauthor: Colby Chiang (cc2qe@virginia.edu)\n\
                      version: $Revision: 0.0.2 $\ndescription: An awk-like VCF parser\n\
                      \npositional arguments:\n  cmd                   vawk command\
                      \ syntax is exactly the same as awk syntax with\n          \
                      \                  a few additional features. The INFO field\
                      \ can be split using\n                            the I$ prefix\
                      \ and the SAMPLE field can be split using\n                \
                      \            the S$ prefix. For example, I$AF prints the allele\
                      \ frequency of\n                            each variant and\
                      \ S$NA12878 prints the entire SAMPLE field for the\n       \
                      \                     NA12878 individual for each variant. S$*\
                      \ returns all samples.\n                        \n         \
                      \                   The SAMPLE field can be further split based\
                      \ on the keys in the\n                            FORMAT field\
                      \ of the VCF (column 9). For example, S$NA12877$GT\n       \
                      \                     returns the genotype of the NA12878 individual.\n\
                      \                        \n                            ex: '{\
                      \ if (I$AF>0.5) print $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT }'\n\
                      \                            \n  vcf                   VCF file\
                      \ (default: stdin)\n\noptional arguments:\n  -h, --help    \
                      \        show this help message and exit\n  -v VAR, --var VAR\
                      \     declare an external variable (e.g.: SIZE=10000)\n  -c\
                      \ INFO_COL, --col INFO_COL\n                        column of\
                      \ the INFO field [8]\n  --header              print VCF header\n\
                      \  --debug               debugging level verbosity\n"
                    generated_using: &id005
                    - --help
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ''
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug]\
                    \ cmd [vcf]\nvawk: error: unrecognized arguments: --usage\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug]\
                  \ cmd [vcf]\n\nvawk\nauthor: Colby Chiang (cc2qe@virginia.edu)\n\
                  version: $Revision: 0.0.2 $\ndescription: An awk-like VCF parser\n\
                  \npositional arguments:\n  cmd                   vawk command syntax\
                  \ is exactly the same as awk syntax with\n                     \
                  \       a few additional features. The INFO field can be split using\n\
                  \                            the I$ prefix and the SAMPLE field\
                  \ can be split using\n                            the S$ prefix.\
                  \ For example, I$AF prints the allele frequency of\n           \
                  \                 each variant and S$NA12878 prints the entire SAMPLE\
                  \ field for the\n                            NA12878 individual\
                  \ for each variant. S$* returns all samples.\n                 \
                  \       \n                            The SAMPLE field can be further\
                  \ split based on the keys in the\n                            FORMAT\
                  \ field of the VCF (column 9). For example, S$NA12877$GT\n     \
                  \                       returns the genotype of the NA12878 individual.\n\
                  \                        \n                            ex: '{ if\
                  \ (I$AF>0.5) print $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT }'\n   \
                  \                         \n  vcf                   VCF file (default:\
                  \ stdin)\n\noptional arguments:\n  -h, --help            show this\
                  \ help message and exit\n  -v VAR, --var VAR     declare an external\
                  \ variable (e.g.: SIZE=10000)\n  -c INFO_COL, --col INFO_COL\n \
                  \                       column of the INFO field [8]\n  --header\
                  \              print VCF header\n  --debug               debugging\
                  \ level verbosity\n"
                generated_using: *id005
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ''
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug]\
                \ cmd [vcf]\nvawk: error: unrecognized arguments: --usage\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug]\
              \ cmd [vcf]\n\nvawk\nauthor: Colby Chiang (cc2qe@virginia.edu)\nversion:\
              \ $Revision: 0.0.2 $\ndescription: An awk-like VCF parser\n\npositional\
              \ arguments:\n  cmd                   vawk command syntax is exactly\
              \ the same as awk syntax with\n                            a few additional\
              \ features. The INFO field can be split using\n                    \
              \        the I$ prefix and the SAMPLE field can be split using\n   \
              \                         the S$ prefix. For example, I$AF prints the\
              \ allele frequency of\n                            each variant and\
              \ S$NA12878 prints the entire SAMPLE field for the\n               \
              \             NA12878 individual for each variant. S$* returns all samples.\n\
              \                        \n                            The SAMPLE field\
              \ can be further split based on the keys in the\n                  \
              \          FORMAT field of the VCF (column 9). For example, S$NA12877$GT\n\
              \                            returns the genotype of the NA12878 individual.\n\
              \                        \n                            ex: '{ if (I$AF>0.5)\
              \ print $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT }'\n                  \
              \          \n  vcf                   VCF file (default: stdin)\n\noptional\
              \ arguments:\n  -h, --help            show this help message and exit\n\
              \  -v VAR, --var VAR     declare an external variable (e.g.: SIZE=10000)\n\
              \  -c INFO_COL, --col INFO_COL\n                        column of the\
              \ INFO field [8]\n  --header              print VCF header\n  --debug\
              \               debugging level verbosity\n"
            generated_using: *id005
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ''
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug]\
            \ cmd [vcf]\nvawk: error: unrecognized arguments: --usage\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug] cmd\
          \ [vcf]\n\nvawk\nauthor: Colby Chiang (cc2qe@virginia.edu)\nversion: $Revision:\
          \ 0.0.2 $\ndescription: An awk-like VCF parser\n\npositional arguments:\n\
          \  cmd                   vawk command syntax is exactly the same as awk\
          \ syntax with\n                            a few additional features. The\
          \ INFO field can be split using\n                            the I$ prefix\
          \ and the SAMPLE field can be split using\n                            the\
          \ S$ prefix. For example, I$AF prints the allele frequency of\n        \
          \                    each variant and S$NA12878 prints the entire SAMPLE\
          \ field for the\n                            NA12878 individual for each\
          \ variant. S$* returns all samples.\n                        \n        \
          \                    The SAMPLE field can be further split based on the\
          \ keys in the\n                            FORMAT field of the VCF (column\
          \ 9). For example, S$NA12877$GT\n                            returns the\
          \ genotype of the NA12878 individual.\n                        \n      \
          \                      ex: '{ if (I$AF>0.5) print $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT\
          \ }'\n                            \n  vcf                   VCF file (default:\
          \ stdin)\n\noptional arguments:\n  -h, --help            show this help\
          \ message and exit\n  -v VAR, --var VAR     declare an external variable\
          \ (e.g.: SIZE=10000)\n  -c INFO_COL, --col INFO_COL\n                  \
          \      column of the INFO field [8]\n  --header              print VCF header\n\
          \  --debug               debugging level verbosity\n"
        generated_using: *id005
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ''
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug] cmd\
        \ [vcf]\nvawk: error: unrecognized arguments: --usage\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug] cmd [vcf]\n\
      \nvawk\nauthor: Colby Chiang (cc2qe@virginia.edu)\nversion: $Revision: 0.0.2\
      \ $\ndescription: An awk-like VCF parser\n\npositional arguments:\n  cmd   \
      \                vawk command syntax is exactly the same as awk syntax with\n\
      \                            a few additional features. The INFO field can be\
      \ split using\n                            the I$ prefix and the SAMPLE field\
      \ can be split using\n                            the S$ prefix. For example,\
      \ I$AF prints the allele frequency of\n                            each variant\
      \ and S$NA12878 prints the entire SAMPLE field for the\n                   \
      \         NA12878 individual for each variant. S$* returns all samples.\n  \
      \                      \n                            The SAMPLE field can be\
      \ further split based on the keys in the\n                            FORMAT\
      \ field of the VCF (column 9). For example, S$NA12877$GT\n                 \
      \           returns the genotype of the NA12878 individual.\n              \
      \          \n                            ex: '{ if (I$AF>0.5) print $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT\
      \ }'\n                            \n  vcf                   VCF file (default:\
      \ stdin)\n\noptional arguments:\n  -h, --help            show this help message\
      \ and exit\n  -v VAR, --var VAR     declare an external variable (e.g.: SIZE=10000)\n\
      \  -c INFO_COL, --col INFO_COL\n                        column of the INFO field\
      \ [8]\n  --header              print VCF header\n  --debug               debugging\
      \ level verbosity\n"
    generated_using: *id005
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug] cmd [vcf]\n\
    vawk: error: unrecognized arguments: --usage\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: vawk [-h] [-v VAR] [-c INFO_COL] [--header] [--debug] cmd [vcf]\n\
  \nvawk\nauthor: Colby Chiang (cc2qe@virginia.edu)\nversion: $Revision: 0.0.2 $\n\
  description: An awk-like VCF parser\n\npositional arguments:\n  cmd            \
  \       vawk command syntax is exactly the same as awk syntax with\n           \
  \                 a few additional features. The INFO field can be split using\n\
  \                            the I$ prefix and the SAMPLE field can be split using\n\
  \                            the S$ prefix. For example, I$AF prints the allele\
  \ frequency of\n                            each variant and S$NA12878 prints the\
  \ entire SAMPLE field for the\n                            NA12878 individual for\
  \ each variant. S$* returns all samples.\n                        \n           \
  \                 The SAMPLE field can be further split based on the keys in the\n\
  \                            FORMAT field of the VCF (column 9). For example, S$NA12877$GT\n\
  \                            returns the genotype of the NA12878 individual.\n \
  \                       \n                            ex: '{ if (I$AF>0.5) print\
  \ $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT }'\n                            \n  vcf \
  \                  VCF file (default: stdin)\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -v VAR, --var VAR     declare an\
  \ external variable (e.g.: SIZE=10000)\n  -c INFO_COL, --col INFO_COL\n        \
  \                column of the INFO field [8]\n  --header              print VCF\
  \ header\n  --debug               debugging level verbosity\n"
generated_using: *id005
docker_image:
