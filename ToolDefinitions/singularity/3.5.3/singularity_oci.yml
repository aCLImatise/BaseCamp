!Command
command: &id001
- singularity
- oci
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id019
  - singularity
  - oci
  - create
  positional:
  - !Positional
    description: 'Examples:'
    position: 0
    name: synchronization
    optional: false
  named:
  - !Flag
    description: specify the OCI bundle path (required)
    synonyms:
    - -b
    - --bundle
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: "run container without executing container\nprocess (eg: for POD\
      \ container)"
    synonyms:
    - --empty-process
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "specify the log file format. Available\nformats are basic, kubernetes\
      \ and json\n(default \"kubernetes\")"
    synonyms:
    - --log-format
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specify the log file path
    synonyms:
    - -l
    - --log-path
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specify the pid file
    synonyms:
    - --pid-file
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specify the path to unix socket for state
    synonyms:
    - -s
    - --sync-socket
    args: !SimpleFlagArg
      name: string
    optional: true
  parent: &id004 !Command
    command: *id001
    positional: []
    named: []
    parent: &id002 !Command
      command:
      - singularity
      positional: []
      named:
      - !Flag
        description: print debugging information (highest verbosity)
        synonyms:
        - -d
        - --debug
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: print without color output (default False)
        synonyms:
        - --nocolor
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: suppress normal output
        synonyms:
        - -q
        - --quiet
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: only print errors
        synonyms:
        - -s
        - --silent
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: print additional information
        synonyms:
        - -v
        - --verbose
        args: !EmptyFlagArg {}
        optional: true
      parent:
      subcommands:
      - !Command
        command:
        - singularity
        - test
        positional:
        - !Positional
          description: ''
          position: 0
          name: exec
          optional: true
        - !Positional
          description: ''
          position: 1
          name: options...
          optional: true
        named:
        - !Flag
          description: a comma separated capability list to add
          synonyms:
          - --add-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: allow setuid binaries in container (root only)
          synonyms:
          - --allow-setuid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: set an application to run inside a container
          synonyms:
          - --app
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "apply cgroups from file for container\nprocesses (root only)"
          synonyms:
          - --apply-cgroups
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "a user-bind path specification.  spec has\nthe format src[:dest[:opts]],\
            \ where src and\ndest are outside and inside paths.  If dest\nis not given,\
            \ it is set equal to src.\nMount options ('opts') may be specified as\n\
            'ro' (read-only) or 'rw' (read/write, which\nis the default). Multiple\
            \ bind paths can be\ngiven by a comma separated list."
          synonyms:
          - -B
          - --bind
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: clean environment before running container
          synonyms:
          - -e
          - --cleanenv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use minimal /dev and empty other\ndirectories (e.g. /tmp and\
            \ $HOME) instead\nof sharing filesystems from your host"
          synonyms:
          - -c
          - --contain
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "contain not only file systems, but also\nPID, IPC, and environment"
          synonyms:
          - -C
          - --containall
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: dont use cache, and dont create cache
          synonyms:
          - --disable-cache
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "list of DNS server separated by commas to\nadd in resolv.conf"
          synonyms:
          - --dns
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: login to a Docker Repository interactively
          synonyms:
          - --docker-login
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: a comma separated capability list to drop
          synonyms:
          - --drop-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in new user namespace as uid 0
          synonyms:
          - -f
          - --fakeroot
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "a home directory specification.  spec can\neither be a src\
            \ path or src:dest pair.  src\nis the source path of the home directory\n\
            outside the container and dest overrides\nthe home directory within the\
            \ container.\n(default \"/root\")"
          synonyms:
          - -H
          - --home
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: set container hostname
          synonyms:
          - --hostname
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new IPC namespace
          synonyms:
          - -i
          - --ipc
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "let root user keep privileges in container\n(root only)"
          synonyms:
          - --keep-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "run container in a new network namespace\n(sets up a bridge\
            \ network interface by default)"
          synonyms:
          - -n
          - --net
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "specify desired network type separated by\ncommas, each network\
            \ will bring up a\ndedicated interface inside container\n(default \"bridge\"\
            )"
          synonyms:
          - --network
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: specify network arguments to pass to CNI plugins
          synonyms:
          - --network-args
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "do NOT mount users home directory if home\nis not the current\
            \ working directory"
          synonyms:
          - --no-home
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: do NOT start shim process with --pid
          synonyms:
          - --no-init
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --no-nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: drop all privileges from root user in container)
          synonyms:
          - --no-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "do NOT use HTTPS with the docker://\ntransport (useful for\
            \ local docker\nregistries without a certificate)"
          synonyms:
          - --nohttps
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: disable VM network handling
          synonyms:
          - --nonet
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable experimental Nvidia support
          synonyms:
          - --nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use an overlayFS image for persistent data\nstorage or as\
            \ read-only layer of container"
          synonyms:
          - -o
          - --overlay
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: prompt for an encryption passphrase
          synonyms:
          - --passphrase
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "enter an path to a PEM formated RSA key for\nan encrypted\
            \ container"
          synonyms:
          - --pem-path
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new PID namespace
          synonyms:
          - -p
          - --pid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "initial working directory for payload\nprocess inside the\
            \ container"
          synonyms:
          - --pwd
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable experimental Rocm support
          synonyms:
          - --rocm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "include a scratch directory within the\ncontainer that is\
            \ linked to a temporary dir\n(use -W to force location)"
          synonyms:
          - -S
          - --scratch
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "enable security features (SELinux,\nApparmor, Seccomp)"
          synonyms:
          - --security
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "run container in a new user namespace,\nallowing Singularity\
            \ to run completely\nunprivileged on recent kernels. This\ndisables some\
            \ features of Singularity, for\nexample it only works with sandbox images."
          synonyms:
          - -u
          - --userns
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: run container in a new UTS namespace
          synonyms:
          - --uts
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable VM support
          synonyms:
          - --vm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "number of CPU cores to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1\")"
          synonyms:
          - --vm-cpu
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable attaching stderr from VM
          synonyms:
          - --vm-err
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "IP Address to assign for container usage.\nDefaults to DHCP\
            \ within bridge network.\n(default \"dhcp\")"
          synonyms:
          - --vm-ip
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "amount of RAM in MiB to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1024\")"
          synonyms:
          - --vm-ram
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "working directory to be used for /tmp,\n/var/tmp and $HOME\
            \ (if -c/--contain was\nalso used)"
          synonyms:
          - -W
          - --workdir
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "by default all Singularity containers are\navailable as read\
            \ only. This option makes\nthe file system accessible as read/write."
          synonyms:
          - -w
          - --writable
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "makes the file system accessible as\nread-write with non persistent\
            \ data (with\noverlay support only)"
          synonyms:
          - --writable-tmpfs
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: help for test
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Run the user-defined tests within a container\n\nUsage:\n  singularity\
          \ test [exec options...] <image path>\n\nDescription:\n  The 'test' command\
          \ allows you to execute a testscript (if available) inside of\n  a given\
          \ container \n\n  NOTE:\n      For instances if there is a daemon process\
          \ running inside the container,\n      then subsequent container commands\
          \ will all run within the same \n      namespaces. This means that the --writable\
          \ and --contain options will not \n      be honored as the namespaces have\
          \ already been configured by the \n      'singularity start' command.\n\n\
          \nOptions:\n      --add-caps string        a comma separated capability\
          \ list to add\n      --allow-setuid           allow setuid binaries in container\
          \ (root only)\n      --app string             set an application to run\
          \ inside a container\n      --apply-cgroups string   apply cgroups from\
          \ file for container\n                               processes (root only)\n\
          \  -B, --bind strings           a user-bind path specification.  spec has\n\
          \                               the format src[:dest[:opts]], where src\
          \ and\n                               dest are outside and inside paths.\
          \  If dest\n                               is not given, it is set equal\
          \ to src. \n                               Mount options ('opts') may be\
          \ specified as\n                               'ro' (read-only) or 'rw'\
          \ (read/write, which\n                               is the default). Multiple\
          \ bind paths can be\n                               given by a comma separated\
          \ list.\n  -e, --cleanenv               clean environment before running\
          \ container\n  -c, --contain                use minimal /dev and empty other\n\
          \                               directories (e.g. /tmp and $HOME) instead\n\
          \                               of sharing filesystems from your host\n\
          \  -C, --containall             contain not only file systems, but also\n\
          \                               PID, IPC, and environment\n      --disable-cache\
          \          dont use cache, and dont create cache\n      --dns string   \
          \          list of DNS server separated by commas to\n                 \
          \              add in resolv.conf\n      --docker-login           login\
          \ to a Docker Repository interactively\n      --drop-caps string       a\
          \ comma separated capability list to drop\n  -f, --fakeroot            \
          \   run container in new user namespace as uid 0\n  -h, --help         \
          \          help for test\n  -H, --home string            a home directory\
          \ specification.  spec can\n                               either be a src\
          \ path or src:dest pair.  src\n                               is the source\
          \ path of the home directory\n                               outside the\
          \ container and dest overrides\n                               the home\
          \ directory within the container.\n                               (default\
          \ \"/root\")\n      --hostname string        set container hostname\n  -i,\
          \ --ipc                    run container in a new IPC namespace\n      --keep-privs\
          \             let root user keep privileges in container\n             \
          \                  (root only)\n  -n, --net                    run container\
          \ in a new network namespace\n                               (sets up a\
          \ bridge network interface by default)\n      --network string         specify\
          \ desired network type separated by\n                               commas,\
          \ each network will bring up a\n                               dedicated\
          \ interface inside container\n                               (default \"\
          bridge\")\n      --network-args strings   specify network arguments to pass\
          \ to CNI plugins\n      --no-home                do NOT mount users home\
          \ directory if home\n                               is not the current working\
          \ directory\n      --no-init                do NOT start shim process with\
          \ --pid\n      --no-nv                  \n      --no-privs             \
          \  drop all privileges from root user in container)\n      --nohttps   \
          \             do NOT use HTTPS with the docker://\n                    \
          \           transport (useful for local docker\n                       \
          \        registries without a certificate)\n      --nonet              \
          \    disable VM network handling\n      --nv                     enable\
          \ experimental Nvidia support\n  -o, --overlay strings        use an overlayFS\
          \ image for persistent data\n                               storage or as\
          \ read-only layer of container\n      --passphrase             prompt for\
          \ an encryption passphrase\n      --pem-path string        enter an path\
          \ to a PEM formated RSA key for\n                               an encrypted\
          \ container\n  -p, --pid                    run container in a new PID namespace\n\
          \      --pwd string             initial working directory for payload\n\
          \                               process inside the container\n      --rocm\
          \                   enable experimental Rocm support\n  -S, --scratch strings\
          \        include a scratch directory within the\n                      \
          \         container that is linked to a temporary dir\n                \
          \               (use -W to force location)\n      --security strings   \
          \    enable security features (SELinux,\n                              \
          \ Apparmor, Seccomp)\n  -u, --userns                 run container in a\
          \ new user namespace,\n                               allowing Singularity\
          \ to run completely\n                               unprivileged on recent\
          \ kernels. This\n                               disables some features of\
          \ Singularity, for\n                               example it only works\
          \ with sandbox images.\n      --uts                    run container in\
          \ a new UTS namespace\n      --vm                     enable VM support\n\
          \      --vm-cpu string          number of CPU cores to allocate to Virtual\n\
          \                               Machine (implies --vm) (default \"1\")\n\
          \      --vm-err                 enable attaching stderr from VM\n      --vm-ip\
          \ string           IP Address to assign for container usage.\n         \
          \                      Defaults to DHCP within bridge network.\n       \
          \                        (default \"dhcp\")\n      --vm-ram string     \
          \     amount of RAM in MiB to allocate to Virtual\n                    \
          \           Machine (implies --vm) (default \"1024\")\n  -W, --workdir string\
          \         working directory to be used for /tmp,\n                     \
          \          /var/tmp and $HOME (if -c/--contain was\n                   \
          \            also used)\n  -w, --writable               by default all Singularity\
          \ containers are\n                               available as read only.\
          \ This option makes\n                               the file system accessible\
          \ as read/write.\n      --writable-tmpfs         makes the file system accessible\
          \ as\n                               read-write with non persistent data\
          \ (with\n                               overlay support only)\n\n\nExamples:\n\
          \  Set the '%test' section with a definition file like so:\n  %test\n  \
          \    echo \"hello from test\" \"$@\"\n\n  $ singularity test /tmp/debian.sif\
          \ command\n      hello from test command\n\n  For additional help, please\
          \ visit our public documentation pages which are\n  found at:\n\n      https://www.sylabs.io/docs/\n\
          \n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: &id003
        - --help
      - !Command
        command:
        - singularity
        - shell
        positional:
        - !Positional
          description: "sandbox format. Directory containing a valid root file \n\
            system and optionally Singularity meta-data."
          position: 0
          name: directory/
          optional: false
        - !Positional
          description: PID  PPID  C STIME TTY          TIME CMD
          position: 0
          name: UID
          optional: false
        named:
        - !Flag
          description: a comma separated capability list to add
          synonyms:
          - --add-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: allow setuid binaries in container (root only)
          synonyms:
          - --allow-setuid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: set an application to run inside a container
          synonyms:
          - --app
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "apply cgroups from file for container\nprocesses (root only)"
          synonyms:
          - --apply-cgroups
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "a user-bind path specification.  spec has\nthe format src[:dest[:opts]],\
            \ where src and\ndest are outside and inside paths.  If dest\nis not given,\
            \ it is set equal to src.\nMount options ('opts') may be specified as\n\
            'ro' (read-only) or 'rw' (read/write, which\nis the default). Multiple\
            \ bind paths can be\ngiven by a comma separated list."
          synonyms:
          - -B
          - --bind
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: clean environment before running container
          synonyms:
          - -e
          - --cleanenv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use minimal /dev and empty other\ndirectories (e.g. /tmp and\
            \ $HOME) instead\nof sharing filesystems from your host"
          synonyms:
          - -c
          - --contain
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "contain not only file systems, but also\nPID, IPC, and environment"
          synonyms:
          - -C
          - --containall
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: dont use cache, and dont create cache
          synonyms:
          - --disable-cache
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "list of DNS server separated by commas to\nadd in resolv.conf"
          synonyms:
          - --dns
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: login to a Docker Repository interactively
          synonyms:
          - --docker-login
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: a comma separated capability list to drop
          synonyms:
          - --drop-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in new user namespace as uid 0
          synonyms:
          - -f
          - --fakeroot
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "a home directory specification.  spec can\neither be a src\
            \ path or src:dest pair.  src\nis the source path of the home directory\n\
            outside the container and dest overrides\nthe home directory within the\
            \ container.\n(default \"/root\")"
          synonyms:
          - -H
          - --home
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: set container hostname
          synonyms:
          - --hostname
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new IPC namespace
          synonyms:
          - -i
          - --ipc
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "let root user keep privileges in container\n(root only)"
          synonyms:
          - --keep-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "run container in a new network namespace\n(sets up a bridge\
            \ network interface by default)"
          synonyms:
          - -n
          - --net
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "specify desired network type separated by\ncommas, each network\
            \ will bring up a\ndedicated interface inside container\n(default \"bridge\"\
            )"
          synonyms:
          - --network
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: specify network arguments to pass to CNI plugins
          synonyms:
          - --network-args
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "do NOT mount users home directory if home\nis not the current\
            \ working directory"
          synonyms:
          - --no-home
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: do NOT start shim process with --pid
          synonyms:
          - --no-init
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --no-nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: drop all privileges from root user in container)
          synonyms:
          - --no-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "do NOT use HTTPS with the docker://\ntransport (useful for\
            \ local docker\nregistries without a certificate)"
          synonyms:
          - --nohttps
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: disable VM network handling
          synonyms:
          - --nonet
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable experimental Nvidia support
          synonyms:
          - --nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use an overlayFS image for persistent data\nstorage or as\
            \ read-only layer of container"
          synonyms:
          - -o
          - --overlay
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: prompt for an encryption passphrase
          synonyms:
          - --passphrase
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "enter an path to a PEM formated RSA key for\nan encrypted\
            \ container"
          synonyms:
          - --pem-path
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new PID namespace
          synonyms:
          - -p
          - --pid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "initial working directory for payload\nprocess inside the\
            \ container"
          synonyms:
          - --pwd
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable experimental Rocm support
          synonyms:
          - --rocm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "include a scratch directory within the\ncontainer that is\
            \ linked to a temporary dir\n(use -W to force location)"
          synonyms:
          - -S
          - --scratch
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "enable security features (SELinux,\nApparmor, Seccomp)"
          synonyms:
          - --security
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: path to program to use for interactive shell
          synonyms:
          - -s
          - --shell
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: execute SyOS shell
          synonyms:
          - --syos
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "run container in a new user namespace,\nallowing Singularity\
            \ to run completely\nunprivileged on recent kernels. This\ndisables some\
            \ features of Singularity, for\nexample it only works with sandbox images."
          synonyms:
          - -u
          - --userns
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: run container in a new UTS namespace
          synonyms:
          - --uts
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable VM support
          synonyms:
          - --vm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "number of CPU cores to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1\")"
          synonyms:
          - --vm-cpu
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable attaching stderr from VM
          synonyms:
          - --vm-err
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "IP Address to assign for container usage.\nDefaults to DHCP\
            \ within bridge network.\n(default \"dhcp\")"
          synonyms:
          - --vm-ip
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "amount of RAM in MiB to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1024\")"
          synonyms:
          - --vm-ram
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "working directory to be used for /tmp,\n/var/tmp and $HOME\
            \ (if -c/--contain was\nalso used)"
          synonyms:
          - -W
          - --workdir
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "by default all Singularity containers are\navailable as read\
            \ only. This option makes\nthe file system accessible as read/write."
          synonyms:
          - -w
          - --writable
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "makes the file system accessible as\nread-write with non persistent\
            \ data (with\noverlay support only)"
          synonyms:
          - --writable-tmpfs
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: help for shell
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Run a shell within a container\n\nUsage:\n  singularity shell\
          \ [shell options...] <container>\n\nDescription:\n  singularity shell supports\
          \ the following formats:\n\n  *.sif               Singularity Image Format\
          \ (SIF). Native to Singularity 3.0+\n  \n  *.sqsh              SquashFS\
          \ format.  Native to Singularity 2.4+\n\n  *.img               ext3 format.\
          \ Native to Singularity versions < 2.4.\n\n  directory/          sandbox\
          \ format. Directory containing a valid root file \n                    \
          \  system and optionally Singularity meta-data.\n\n  instance://*      \
          \  A local running instance of a container. (See the instance\n        \
          \              command group.)\n\n  library://*         A container hosted\
          \ on a Library (default \n                      https://cloud.sylabs.io/library)\n\
          \n  docker://*          A container hosted on Docker Hub\n\n  shub://* \
          \           A container hosted on Singularity Hub\n\n  oras://*        \
          \    A container hosted on a supporting OCI registry\n\nOptions:\n     \
          \ --add-caps string        a comma separated capability list to add\n  \
          \    --allow-setuid           allow setuid binaries in container (root only)\n\
          \      --app string             set an application to run inside a container\n\
          \      --apply-cgroups string   apply cgroups from file for container\n\
          \                               processes (root only)\n  -B, --bind strings\
          \           a user-bind path specification.  spec has\n                \
          \               the format src[:dest[:opts]], where src and\n          \
          \                     dest are outside and inside paths.  If dest\n    \
          \                           is not given, it is set equal to src. \n   \
          \                            Mount options ('opts') may be specified as\n\
          \                               'ro' (read-only) or 'rw' (read/write, which\n\
          \                               is the default). Multiple bind paths can\
          \ be\n                               given by a comma separated list.\n\
          \  -e, --cleanenv               clean environment before running container\n\
          \  -c, --contain                use minimal /dev and empty other\n     \
          \                          directories (e.g. /tmp and $HOME) instead\n \
          \                              of sharing filesystems from your host\n \
          \ -C, --containall             contain not only file systems, but also\n\
          \                               PID, IPC, and environment\n      --disable-cache\
          \          dont use cache, and dont create cache\n      --dns string   \
          \          list of DNS server separated by commas to\n                 \
          \              add in resolv.conf\n      --docker-login           login\
          \ to a Docker Repository interactively\n      --drop-caps string       a\
          \ comma separated capability list to drop\n  -f, --fakeroot            \
          \   run container in new user namespace as uid 0\n  -h, --help         \
          \          help for shell\n  -H, --home string            a home directory\
          \ specification.  spec can\n                               either be a src\
          \ path or src:dest pair.  src\n                               is the source\
          \ path of the home directory\n                               outside the\
          \ container and dest overrides\n                               the home\
          \ directory within the container.\n                               (default\
          \ \"/root\")\n      --hostname string        set container hostname\n  -i,\
          \ --ipc                    run container in a new IPC namespace\n      --keep-privs\
          \             let root user keep privileges in container\n             \
          \                  (root only)\n  -n, --net                    run container\
          \ in a new network namespace\n                               (sets up a\
          \ bridge network interface by default)\n      --network string         specify\
          \ desired network type separated by\n                               commas,\
          \ each network will bring up a\n                               dedicated\
          \ interface inside container\n                               (default \"\
          bridge\")\n      --network-args strings   specify network arguments to pass\
          \ to CNI plugins\n      --no-home                do NOT mount users home\
          \ directory if home\n                               is not the current working\
          \ directory\n      --no-init                do NOT start shim process with\
          \ --pid\n      --no-nv                  \n      --no-privs             \
          \  drop all privileges from root user in container)\n      --nohttps   \
          \             do NOT use HTTPS with the docker://\n                    \
          \           transport (useful for local docker\n                       \
          \        registries without a certificate)\n      --nonet              \
          \    disable VM network handling\n      --nv                     enable\
          \ experimental Nvidia support\n  -o, --overlay strings        use an overlayFS\
          \ image for persistent data\n                               storage or as\
          \ read-only layer of container\n      --passphrase             prompt for\
          \ an encryption passphrase\n      --pem-path string        enter an path\
          \ to a PEM formated RSA key for\n                               an encrypted\
          \ container\n  -p, --pid                    run container in a new PID namespace\n\
          \      --pwd string             initial working directory for payload\n\
          \                               process inside the container\n      --rocm\
          \                   enable experimental Rocm support\n  -S, --scratch strings\
          \        include a scratch directory within the\n                      \
          \         container that is linked to a temporary dir\n                \
          \               (use -W to force location)\n      --security strings   \
          \    enable security features (SELinux,\n                              \
          \ Apparmor, Seccomp)\n  -s, --shell string           path to program to\
          \ use for interactive shell\n      --syos                   execute SyOS\
          \ shell\n  -u, --userns                 run container in a new user namespace,\n\
          \                               allowing Singularity to run completely\n\
          \                               unprivileged on recent kernels. This\n \
          \                              disables some features of Singularity, for\n\
          \                               example it only works with sandbox images.\n\
          \      --uts                    run container in a new UTS namespace\n \
          \     --vm                     enable VM support\n      --vm-cpu string\
          \          number of CPU cores to allocate to Virtual\n                \
          \               Machine (implies --vm) (default \"1\")\n      --vm-err \
          \                enable attaching stderr from VM\n      --vm-ip string \
          \          IP Address to assign for container usage.\n                 \
          \              Defaults to DHCP within bridge network.\n               \
          \                (default \"dhcp\")\n      --vm-ram string          amount\
          \ of RAM in MiB to allocate to Virtual\n                               Machine\
          \ (implies --vm) (default \"1024\")\n  -W, --workdir string         working\
          \ directory to be used for /tmp,\n                               /var/tmp\
          \ and $HOME (if -c/--contain was\n                               also used)\n\
          \  -w, --writable               by default all Singularity containers are\n\
          \                               available as read only. This option makes\n\
          \                               the file system accessible as read/write.\n\
          \      --writable-tmpfs         makes the file system accessible as\n  \
          \                             read-write with non persistent data (with\n\
          \                               overlay support only)\n\n\nExamples:\n \
          \ $ singularity shell /tmp/Debian.sif\n  Singularity/Debian.sif> pwd\n \
          \ /home/gmk/test\n  Singularity/Debian.sif> exit\n\n  $ singularity shell\
          \ -C /tmp/Debian.sif\n  Singularity/Debian.sif> pwd\n  /home/gmk\n  Singularity/Debian.sif>\
          \ ls -l\n  total 0\n  Singularity/Debian.sif> exit\n\n  $ sudo singularity\
          \ shell -w /tmp/Debian.sif\n  $ sudo singularity shell --writable /tmp/Debian.sif\n\
          \n  $ singularity shell instance://my_instance\n\n  $ singularity shell\
          \ instance://my_instance\n  Singularity: Invoking an interactive shell within\
          \ container...\n  Singularity container:~> ps -ef\n  UID        PID  PPID\
          \  C STIME TTY          TIME CMD\n  ubuntu       1     0  0 20:00 ?    \
          \    00:00:00 /usr/local/bin/singularity/bin/sinit\n  ubuntu       2   \
          \  0  0 20:01 pts/8    00:00:00 /bin/bash --norc\n  ubuntu       3     2\
          \  0 20:02 pts/8    00:00:00 ps -ef\n\n\nFor additional help or support,\
          \ please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - *id004
      - !Command
        command:
        - singularity
        - push
        positional:
        - !Positional
          description: ''
          position: 0
          name: singularity
          optional: false
        - !Positional
          description: ''
          position: 1
          name: global
          optional: true
        - !Positional
          description: ''
          position: 2
          name: options...
          optional: true
        - !Positional
          description: ''
          position: 3
          name: push
          optional: true
        - !Positional
          description: ''
          position: 6
          name: image
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Error for command \"push\": accepts 2 arg(s), received 0\n\nUsage:\n\
          \  singularity [global options...] push [push options...] <image> <URI>\n\
          \nRun 'singularity push --help' for more detailed usage information.\n"
        generated_using: &id005 []
      - !Command
        command:
        - singularity
        - search
        positional:
        - !Positional
          description: ''
          position: 0
          name: singularity
          optional: false
        - !Positional
          description: ''
          position: 1
          name: global
          optional: true
        - !Positional
          description: ''
          position: 2
          name: options...
          optional: true
        - !Positional
          description: ''
          position: 3
          name: search
          optional: true
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Error for command \"search\": accepts 1 arg(s), received 0\n\n\
          Usage:\n  singularity [global options...] search [search options...] <search_query>\n\
          \nRun 'singularity search --help' for more detailed usage information.\n"
        generated_using: *id005
      - &id006 !Command
        command:
        - singularity
        - plugin
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - plugin
          - uninstall
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: plugin
            optional: true
          - !Positional
            description: ''
            position: 6
            name: uninstall
            optional: false
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"uninstall\": accepts 1 arg(s), received\
            \ 0\n\nUsage:\n  singularity [global options...] plugin [plugin options...]\
            \ uninstall <name>\n\nRun 'singularity plugin uninstall --help' for more\
            \ detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - plugin
          - disable
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: plugin
            optional: true
          - !Positional
            description: ''
            position: 6
            name: disable
            optional: false
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"disable\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] plugin [plugin options...]\
            \ disable <name>\n\nRun 'singularity plugin disable --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - plugin
          - compile
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: plugin
            optional: true
          - !Positional
            description: ''
            position: 6
            name: compile
            optional: true
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"compile\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] plugin [plugin options...]\
            \ compile [compile options...] <host_path>\n\nRun 'singularity plugin\
            \ compile --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - plugin
          - install
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: plugin
            optional: true
          - !Positional
            description: ''
            position: 6
            name: install
            optional: true
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"install\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] plugin [plugin options...]\
            \ install [install options...] <plugin_path>\n\nRun 'singularity plugin\
            \ install --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - plugin
          - enable
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: plugin
            optional: true
          - !Positional
            description: ''
            position: 6
            name: enable
            optional: false
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"enable\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] plugin [plugin options...]\
            \ enable <name>\n\nRun 'singularity plugin enable --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - plugin
          - list
          positional:
          - !Positional
            description: NAME
            position: 0
            name: ENABLED
            optional: false
          - !Positional
            description: example.org/plugin
            position: 1
            name: yes
            optional: false
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for list
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "List installed Singularity plugins\n\nUsage:\n  singularity\
            \ plugin list [list options...]\n\nDescription:\n  The 'plugin list' command\
            \ lists the Singularity plugins installed on the host.\n\nOptions:\n \
            \ -h, --help   help for list\n\n\nExamples:\n  $ singularity plugin list\n\
            \  ENABLED  NAME\n      yes  example.org/plugin\n\n\nFor additional help\
            \ or support, please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - plugin
          - inspect
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: plugin
            optional: true
          - !Positional
            description: ''
            position: 6
            name: inspect
            optional: false
          named: []
          parent: *id006
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] plugin [plugin options...]\
            \ inspect (<name>|<image>)\n\nRun 'singularity plugin inspect --help'\
            \ for more detailed usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for plugin
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage Singularity plugins\n\nUsage:\n  singularity plugin [plugin\
          \ options...]\n\nDescription:\n  The 'plugin' command allows you to manage\
          \ Singularity plugins which\n  provide add-on functionality to the default\
          \ Singularity installation.\n\nOptions:\n  -h, --help   help for plugin\n\
          \nAvailable Commands:\n  compile     Compile a Singularity plugin\n  disable\
          \     disable an installed Singularity plugin\n  enable      Enable an installed\
          \ Singularity plugin\n  inspect     Inspect a singularity plugin (either\
          \ an installed one or an image)\n  install     Install a compiled Singularity\
          \ plugin\n  list        List installed Singularity plugins\n  uninstall\
          \   Uninstall removes the named plugin from the system\n\nExamples:\n  All\
          \ group commands have their own help output:\n\n  $ singularity help plugin\
          \ compile\n  $ singularity plugin list --help\n\n\nFor additional help or\
          \ support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id007 !Command
        command:
        - singularity
        - cache
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - cache
          - clean
          positional:
          - !Positional
            description: ''
            position: 0
            name: clean
            optional: true
          named:
          - !Flag
            description: "specify a container cache to clean (will clear all\ncache\
              \ with the same name)"
            synonyms:
            - -N
            - --name
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: "operate in dry run mode and do not actually clean\nthe cache"
            synonyms:
            - -n
            - --dry-run
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: suppress any prompts and clean the cache
            synonyms:
            - -f
            - --force
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "a list of cache types to clean (possible values:\nlibrary,\
              \ oci, shub, blob, net, oras, all) (default\n[all])"
            synonyms:
            - -T
            - --type
            args: !SimpleFlagArg
              name: strings
            optional: true
          parent: *id007
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for clean
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Clean your local Singularity cache\n\nUsage:\n  singularity\
            \ cache clean [clean options...]\n\nDescription:\n  This will clean your\
            \ local cache (stored at $HOME/.singularity/cache if\n  SINGULARITY_CACHEDIR\
            \ is not set). By default the entire cache is cleaned, use\n  --name or\
            \ --type flags to override this behavior. Note: if you use Singularity\n\
            \  as root, cache will be stored in '/root/.singularity/.cache', to clean\
            \ that\n  cache, you will need to run 'cache clean --all' as root, or\
            \ with 'sudo'.\n\nOptions:\n  -n, --dry-run        operate in dry run\
            \ mode and do not actually clean\n                       the cache\n \
            \ -f, --force          suppress any prompts and clean the cache\n  -h,\
            \ --help           help for clean\n  -N, --name strings   specify a container\
            \ cache to clean (will clear all\n                       cache with the\
            \ same name)\n  -T, --type strings   a list of cache types to clean (possible\
            \ values:\n                       library, oci, shub, blob, net, oras,\
            \ all) (default\n                       [all])\n\n\nExamples:\n  All group\
            \ commands have their own help output:\n\n  $ singularity help cache clean\
            \ --name cache_name.sif\n  $ singularity help cache clean --type=library,oci\n\
            \  $ singularity cache clean --help\n\n\nFor additional help or support,\
            \ please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - cache
          - list
          positional:
          - !Positional
            description: ''
            position: 0
            name: list
            optional: true
          named:
          - !Flag
            description: "a list of cache types to display, possible entries:\nlibrary,\
              \ oci, shub, blob(s), all (default [all])"
            synonyms:
            - -T
            - --type
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: include cache entries in the output
            synonyms:
            - -v
            - --verbose
            args: !EmptyFlagArg {}
            optional: true
          parent: *id007
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for list
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "List your local Singularity cache\n\nUsage:\n  singularity cache\
            \ list [list options...]\n\nDescription:\n  This will list your local\
            \ cache (stored at $HOME/.singularity/cache if\n  SINGULARITY_CACHEDIR\
            \ is not set).\n\nOptions:\n  -h, --help           help for list\n  -T,\
            \ --type strings   a list of cache types to display, possible entries:\n\
            \                       library, oci, shub, blob(s), all (default [all])\n\
            \  -v, --verbose        include cache entries in the output\n\n\nExamples:\n\
            \  All group commands have their own help output:\n\n  $ singularity help\
            \ cache list\n  $ singularity help cache list --type=library,oci\n  $\
            \ singularity cache list --help\n\n\nFor additional help or support, please\
            \ visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - cache
          - types.
          positional:
          - !Positional
            description: Clean your local Singularity cache
            position: 0
            name: clean
            optional: false
          - !Positional
            description: List your local Singularity cache
            position: 1
            name: list
            optional: false
          named: []
          parent: *id007
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"cache\": invalid command\n\nUsage:\n  singularity\
            \ [global options...] cache <command>\n\nAvailable Commands:\n  clean\
            \       Clean your local Singularity cache\n  list        List your local\
            \ Singularity cache\n\nRun 'singularity cache --help' for more detailed\
            \ usage information.\n"
          generated_using: *id003
        usage: []
        help_flag: !Flag
          description: help for cache
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage the local cache\n\nUsage:\n  singularity cache\n\nDescription:\n\
          \  Manage your local Singularity cache. You can list/clean using the specific\
          \ \n  types.\n\nOptions:\n  -h, --help   help for cache\n\nAvailable Commands:\n\
          \  clean       Clean your local Singularity cache\n  list        List your\
          \ local Singularity cache\n\nExamples:\n  All group commands have their\
          \ own help output:\n\n  $ singularity cache\n  $ singularity cache --help\n\
          \n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id008 !Command
        command:
        - singularity
        - remote
        positional: []
        named:
        - !Flag
          description: "path to the file holding remote endpoint\nconfigurations (default\n\
            \"/root/.singularity/remote.yaml\")"
          synonyms:
          - -c
          - --config
          args: !SimpleFlagArg
            name: string
          optional: true
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - remote
          - login
          positional:
          - !Positional
            description: ''
            position: 0
            name: login
            optional: true
          - !Positional
            description: ''
            position: 1
            name: options...
            optional: true
          named:
          - !Flag
            description: path to the file holding token
            synonyms:
            - --tokenfile
            args: !SimpleFlagArg
              name: string
            optional: true
          parent: *id008
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for login
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Log into a singularity remote endpoint using an authentication\
            \ token\n\nUsage:\n  singularity remote login [login options...] <remote_name>\n\
            \nDescription:\n  The 'remote login' command allows you to set an authentication\
            \ token for a\n  specific endpoint. This command will produce a link directing\
            \ you to the token\n  service you can use to generate a valid token. If\
            \ no endpoint is specified,\n  it will try the default remote (SylabsCloud).\n\
            \nOptions:\n  -h, --help               help for login\n      --tokenfile\
            \ string   path to the file holding token\n\n\nExamples:\n  $ singularity\
            \ remote login SylabsCloud\n\n\nFor additional help or support, please\
            \ visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - remote
          - use
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: remote
            optional: true
          - !Positional
            description: ''
            position: 6
            name: use
            optional: true
          named: []
          parent: *id008
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"use\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] remote [remote options...] use\
            \ [use options...] <remote_name>\n\nRun 'singularity remote use --help'\
            \ for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - remote
          - list
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: remote
            optional: false
          named: []
          parent: *id008
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for list
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "List all singularity remote endpoints that are configured\n\n\
            Usage:\n  singularity remote list\n\nDescription:\n  The 'remote list'\
            \ command lists all remote endpoints configured for use. If a remote\n\
            \  is in use, its name will be encompassed by brackets.\n\nOptions:\n\
            \  -h, --help   help for list\n\n\nExamples:\n  $ singularity remote list\n\
            \n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - remote
          - remove
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: remote
            optional: true
          - !Positional
            description: ''
            position: 6
            name: remove
            optional: true
          named: []
          parent: *id008
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"remove\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] remote [remote options...]\
            \ remove [remove options...] <remote_name>\n\nRun 'singularity remote\
            \ remove --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - remote
          - add
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: remote
            optional: true
          - !Positional
            description: ''
            position: 6
            name: add
            optional: true
          - !Positional
            description: ''
            position: 9
            name: remote_name
            optional: false
          named: []
          parent: *id008
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"add\": accepts 2 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] remote [remote options...] add\
            \ [add options...] <remote_name> <remote_URI>\n\nRun 'singularity remote\
            \ add --help' for more detailed usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for remote
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage singularity remote endpoints\n\nUsage:\n  singularity remote\
          \ [remote options...]\n\nDescription:\n  The 'remote' commands allow you\
          \ to manage Singularity remote endpoints through \n  its subcommands. These\
          \ allow you to add, log in, and use endpoints. The remote\n  configuration\
          \ is stored in $HOME/.singularity/remotes.yaml by default.\n\nOptions:\n\
          \  -c, --config string   path to the file holding remote endpoint\n    \
          \                    configurations (default\n                        \"\
          /root/.singularity/remote.yaml\")\n  -h, --help            help for remote\n\
          \nAvailable Commands:\n  add         Create a new singularity remote endpoint\n\
          \  list        List all singularity remote endpoints that are configured\n\
          \  login       Log into a singularity remote endpoint using an authentication\
          \ token\n  remove      Remove an existing singularity remote endpoint\n\
          \  status      Check the status of the singularity services at an endpoint\n\
          \  use         Set a singularity remote endpoint to be actively used\n\n\
          Examples:\n  All group commands have their own help output:\n\n\t$ singularity\
          \ help remote list\n\t$ singularity remote list\n\n\nFor additional help\
          \ or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - !Command
        command:
        - singularity
        - version
        positional:
        - !Positional
          description: ''
          position: 0
          name: singularity
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: help for version
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Show the version for Singularity\n\nUsage:\n  singularity version\n\
          \nDescription:\n\nOptions:\n  -h, --help   help for version\n\n\n\nFor additional\
          \ help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id009 !Command
        command:
        - singularity
        - build
        positional: []
        named:
        - !Flag
          description: architecture for remote build (default "amd64")
          synonyms:
          - --arch
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: remote Build Service URL, setting this implies
          synonyms:
          - --builder
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: build image remotely (does not require root)
          synonyms:
          - -r
          - --remote
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "submit build job and print build ID (no\nreal-time logs and\
            \ requires --remote)"
          synonyms:
          - -d
          - --detached
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: do not use cache or create cache
          synonyms:
          - --disable-cache
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: login to a Docker Repository interactively
          synonyms:
          - --docker-login
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: build an image with an encrypted file system
          synonyms:
          - -e
          - --encrypt
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "build using user namespace to fake root user\n(requires a\
            \ privileged installation)"
          synonyms:
          - -f
          - --fakeroot
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "ensure owner has rwX permissions on all\ncontainer content\
            \ for oci/docker sources"
          synonyms:
          - --fix-perms
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: overwrite an image file if it exists
          synonyms:
          - -F
          - --force
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: interpret build definition as JSON
          synonyms:
          - --json
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "container Library URL (default\n\"https://library.sylabs.io\"\
            )"
          synonyms:
          - --library
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "do NOT clean up bundle after failed build, can\nbe helpul\
            \ for debugging"
          synonyms:
          - --no-cleanup
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "do NOT use HTTPS with the docker:// transport\n(useful for\
            \ local docker registries without a\ncertificate)"
          synonyms:
          - --nohttps
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: build without running tests in %test section
          synonyms:
          - -T
          - --notest
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: prompt for an encryption passphrase
          synonyms:
          - --passphrase
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "enter an path to a PEM formated RSA key for an\nencrypted\
            \ container"
          synonyms:
          - --pem-path
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "build image as sandbox format (chroot directory\nstructure)"
          synonyms:
          - -s
          - --sandbox
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "only run specific section(s) of deffile (setup,\npost, files,\
            \ environment, test, labels, none)\n(default [all])"
          synonyms:
          - --section
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: run definition over existing container (skips header)
          synonyms:
          - -u
          - --update
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - build
          - IMAGE PATH
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: build
            optional: false
          - !Positional
            description: ''
            position: 4
            name: local
            optional: true
          - !Positional
            description: ''
            position: 6
            name: IMAGE PATH
            optional: false
          named: []
          parent: *id009
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"build\": accepts 2 arg(s), received 1\n\n\
            Usage:\n  singularity [global options...] build [local options...] <IMAGE\
            \ PATH> <BUILD SPEC>\n\nRun 'singularity build --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - build
          - options...
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: build
            optional: false
          - !Positional
            description: ''
            position: 4
            name: local
            optional: true
          - !Positional
            description: ''
            position: 6
            name: IMAGE PATH
            optional: false
          named: []
          parent: *id009
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"build\": accepts 2 arg(s), received 1\n\n\
            Usage:\n  singularity [global options...] build [local options...] <IMAGE\
            \ PATH> <BUILD SPEC>\n\nRun 'singularity build --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - build
          - local
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: build
            optional: false
          - !Positional
            description: ''
            position: 4
            name: local
            optional: true
          - !Positional
            description: ''
            position: 6
            name: IMAGE PATH
            optional: false
          named: []
          parent: *id009
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"build\": accepts 2 arg(s), received 1\n\n\
            Usage:\n  singularity [global options...] build [local options...] <IMAGE\
            \ PATH> <BUILD SPEC>\n\nRun 'singularity build --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for build
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Build a Singularity image\n\nUsage:\n  singularity build [local\
          \ options...] <IMAGE PATH> <BUILD SPEC>\n\nDescription:\n\n  IMAGE PATH:\n\
          \n  When Singularity builds the container, output can be one of a few formats:\n\
          \n      default:    The compressed Singularity read only image format (default)\n\
          \      sandbox:    This is a read-write container within a directory structure\n\
          \n  note: It is a common workflow to use the \"sandbox\" mode for development\
          \ of the\n  container, and then build it as a default Singularity image\
          \ for production \n  use. The default format is immutable.\n\n  BUILD SPEC:\n\
          \n  The build spec target is a definition (def) file, local image, or URI\
          \ that can \n  be used to create a Singularity container. Several different\
          \ local target \n  formats exist:\n\n      def file  : This is a recipe\
          \ for building a container (examples below)\n      directory:  A directory\
          \ structure containing a (ch)root file system\n      image:      A local\
          \ image on your machine (will convert to sif if\n                  it is\
          \ legacy format)\n\n  Targets can also be remote and defined by a URI of\
          \ the following formats:\n\n      library://  an image library (default\
          \ https://cloud.sylabs.io/library)\n      docker://   a Docker registry\
          \ (default Docker Hub)\n      shub://     a Singularity registry (default\
          \ Singularity Hub)\n      oras://     a supporting OCI registry\n\nOptions:\n\
          \      --arch string       architecture for remote build (default \"amd64\"\
          )\n      --builder string    remote Build Service URL, setting this implies\n\
          \                          --remote (default \"https://build.sylabs.io\"\
          )\n  -d, --detached          submit build job and print build ID (no\n \
          \                         real-time logs and requires --remote)\n      --disable-cache\
          \     do not use cache or create cache\n      --docker-login      login\
          \ to a Docker Repository interactively\n  -e, --encrypt           build\
          \ an image with an encrypted file system\n  -f, --fakeroot          build\
          \ using user namespace to fake root user\n                          (requires\
          \ a privileged installation)\n      --fix-perms         ensure owner has\
          \ rwX permissions on all\n                          container content for\
          \ oci/docker sources\n  -F, --force             overwrite an image file\
          \ if it exists\n  -h, --help              help for build\n      --json \
          \             interpret build definition as JSON\n      --library string\
          \    container Library URL (default\n                          \"https://library.sylabs.io\"\
          )\n      --no-cleanup        do NOT clean up bundle after failed build,\
          \ can\n                          be helpul for debugging\n      --nohttps\
          \           do NOT use HTTPS with the docker:// transport\n            \
          \              (useful for local docker registries without a\n         \
          \                 certificate)\n  -T, --notest            build without\
          \ running tests in %test section\n      --passphrase        prompt for an\
          \ encryption passphrase\n      --pem-path string   enter an path to a PEM\
          \ formated RSA key for an\n                          encrypted container\n\
          \  -r, --remote            build image remotely (does not require root)\n\
          \  -s, --sandbox           build image as sandbox format (chroot directory\n\
          \                          structure)\n      --section strings   only run\
          \ specific section(s) of deffile (setup,\n                          post,\
          \ files, environment, test, labels, none)\n                          (default\
          \ [all])\n  -u, --update            run definition over existing container\
          \ (skips header)\n\n\nExamples:\n\n  DEF FILE BASE OS:\n\n      Library:\n\
          \          Bootstrap: library\n          From: debian:9\n\n      Docker:\n\
          \          Bootstrap: docker\n          From: tensorflow/tensorflow:latest\n\
          \          IncludeCmd: yes # Use the CMD as runscript instead of ENTRYPOINT\n\
          \n      Singularity Hub:\n          Bootstrap: shub\n          From: singularityhub/centos\n\
          \n      YUM/RHEL:\n          Bootstrap: yum\n          OSVersion: 7\n  \
          \        MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/x86_64/\n\
          \          Include: yum\n\n      Debian/Ubuntu:\n          Bootstrap: debootstrap\n\
          \          OSVersion: trusty\n          MirrorURL: http://us.archive.ubuntu.com/ubuntu/\n\
          \n      Local Image:\n          Bootstrap: localimage\n          From: /home/dave/starter.img\n\
          \n      Scratch:\n          Bootstrap: scratch # Populate the container\
          \ with a minimal rootfs in %setup\n\n  DEFFILE SECTIONS:\n\n      %pre\n\
          \          echo \"This is a scriptlet that will be executed on the host,\
          \ as root before\"\n          echo \"the container has been bootstrapped.\
          \ This section is not commonly used.\"\n\n      %setup\n          echo \"\
          This is a scriptlet that will be executed on the host, as root, after\"\n\
          \          echo \"the container has been bootstrapped. To install things\
          \ into the container\"\n          echo \"reference the file system location\
          \ with $SINGULARITY_ROOTFS.\"\n\n      %post\n          echo \"This scriptlet\
          \ section will be executed from within the container after\"\n         \
          \ echo \"the bootstrap/base has been created and setup.\"\n\n      %test\n\
          \          echo \"Define any test commands that should be executed after\
          \ container has been\"\n          echo \"built. This scriptlet will be executed\
          \ from within the running container\"\n          echo \"as the root user.\
          \ Pay attention to the exit/return value of this scriptlet\"\n         \
          \ echo \"as any non-zero exit code will be assumed as failure.\"\n     \
          \     exit 0\n\n      %runscript\n          echo \"Define actions for the\
          \ container to be executed with the run command or\"\n          echo \"\
          when container is executed.\"\n\n      %startscript\n          echo \"Define\
          \ actions for container to perform when started as an instance.\"\n\n  \
          \    %labels\n          HELLO MOTO\n          KEY VALUE\n\n      %files\n\
          \          /path/on/host/file.txt /path/on/container/file.txt\n        \
          \  relative_file.txt /path/on/container/relative_file.txt\n\n      %environment\n\
          \          LUKE=goodguy\n          VADER=badguy\n          HAN=someguy\n\
          \          export HAN VADER LUKE\n\n      %help\n          This is a text\
          \ file to be displayed with the run-help command.\n\n  COMMANDS:\n\n   \
          \   Build a sif file from a Singularity recipe file:\n          $ singularity\
          \ build /tmp/debian0.sif /path/to/debian.def\n\n      Build a sif image\
          \ from the Library:\n          $ singularity build /tmp/debian1.sif library://debian:latest\n\
          \n      Build a base sandbox from DockerHub, make changes to it, then build\
          \ sif\n          $ singularity build --sandbox /tmp/debian docker://debian:latest\n\
          \          $ singularity exec --writable /tmp/debian apt-get install python\n\
          \          $ singularity build /tmp/debian2.sif /tmp/debian\n\n\nFor additional\
          \ help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - !Command
        command:
        - singularity
        - delete
        positional:
        - !Positional
          description: ''
          position: 0
          name: singularity
          optional: false
        - !Positional
          description: ''
          position: 1
          name: global
          optional: true
        - !Positional
          description: ''
          position: 2
          name: options...
          optional: true
        - !Positional
          description: ''
          position: 3
          name: delete
          optional: false
        - !Positional
          description: ''
          position: 4
          name: arch
          optional: true
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Error for command \"delete\": accepts 1 arg(s), received 0\n\n\
          Usage:\n  singularity [global options...] delete [arch] <imageRef>\n\nRun\
          \ 'singularity delete --help' for more detailed usage information.\n"
        generated_using: *id005
      - &id010 !Command
        command:
        - singularity
        - verify
        positional: []
        named:
        - !Flag
          description: verify all non-signature partitions in a SIF
          synonyms:
          - -a
          - --all
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: group ID to be verified
          synonyms:
          - -g
          - --groupid
          args: !SimpleFlagArg
            name: uint32
          optional: true
        - !Flag
          description: output json
          synonyms:
          - -j
          - --json
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: only verify with local keys
          synonyms:
          - -l
          - --local
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "descriptor ID to be verified (default\nsystem-partition)"
          synonyms:
          - -i
          - --sif-id
          args: !SimpleFlagArg
            name: uint32
          optional: true
        - !Flag
          description: key server URL (default "https://keys.sylabs.io")
          synonyms:
          - -u
          - --url
          args: !SimpleFlagArg
            name: string
          optional: true
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - verify
          - options...
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: verify
            optional: true
          named: []
          parent: *id010
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"verify\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] verify [verify options...]\
            \ <image path>\n\nRun 'singularity verify --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - verify
          - verify
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: verify
            optional: true
          named: []
          parent: *id010
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"verify\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] verify [verify options...]\
            \ <image path>\n\nRun 'singularity verify --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        usage: []
        help_flag: !Flag
          description: help for verify
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Verify cryptographic signatures attached to an image\n\nUsage:\n\
          \  singularity verify [verify options...] <image path>\n\nDescription:\n\
          \  The verify command allows a user to verify cryptographic signatures on\
          \ SIF \n  container files. There may be multiple signatures for data objects\
          \ and \n  multiple data objects signed. By default the command searches\
          \ for the primary \n  partition signature. If found, a list of all verification\
          \ blocks applied on \n  the primary partition is gathered so that data integrity\
          \ (hashing) and \n  signature verification is done for all those blocks.\n\
          \nOptions:\n  -a, --all              verify all non-signature partitions\
          \ in a SIF\n  -g, --groupid uint32   group ID to be verified\n  -h, --help\
          \             help for verify\n  -j, --json             output json\n  -l,\
          \ --local            only verify with local keys\n  -i, --sif-id uint32\
          \    descriptor ID to be verified (default\n                         system-partition)\n\
          \  -u, --url string       key server URL (default \"https://keys.sylabs.io\"\
          )\n\n\nExamples:\n  $ singularity verify container.sif\n\n\nFor additional\
          \ help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id011 !Command
        command:
        - singularity
        - exec
        positional: []
        named:
        - !Flag
          description: a comma separated capability list to add
          synonyms:
          - --add-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: allow setuid binaries in container (root only)
          synonyms:
          - --allow-setuid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: set an application to run inside a container
          synonyms:
          - --app
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "apply cgroups from file for container\nprocesses (root only)"
          synonyms:
          - --apply-cgroups
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "a user-bind path specification.  spec has\nthe format src[:dest[:opts]],\
            \ where src and\ndest are outside and inside paths.  If dest\nis not given,\
            \ it is set equal to src.\nMount options ('opts') may be specified as\n\
            'ro' (read-only) or 'rw' (read/write, which\nis the default). Multiple\
            \ bind paths can be\ngiven by a comma separated list."
          synonyms:
          - -B
          - --bind
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: clean environment before running container
          synonyms:
          - -e
          - --cleanenv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use minimal /dev and empty other\ndirectories (e.g. /tmp and\
            \ $HOME) instead\nof sharing filesystems from your host"
          synonyms:
          - -c
          - --contain
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "contain not only file systems, but also\nPID, IPC, and environment"
          synonyms:
          - -C
          - --containall
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: dont use cache, and dont create cache
          synonyms:
          - --disable-cache
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "list of DNS server separated by commas to\nadd in resolv.conf"
          synonyms:
          - --dns
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: login to a Docker Repository interactively
          synonyms:
          - --docker-login
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: a comma separated capability list to drop
          synonyms:
          - --drop-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in new user namespace as uid 0
          synonyms:
          - -f
          - --fakeroot
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "a home directory specification.  spec can\neither be a src\
            \ path or src:dest pair.  src\nis the source path of the home directory\n\
            outside the container and dest overrides\nthe home directory within the\
            \ container.\n(default \"/root\")"
          synonyms:
          - -H
          - --home
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: set container hostname
          synonyms:
          - --hostname
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new IPC namespace
          synonyms:
          - -i
          - --ipc
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "let root user keep privileges in container\n(root only)"
          synonyms:
          - --keep-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "run container in a new network namespace\n(sets up a bridge\
            \ network interface by default)"
          synonyms:
          - -n
          - --net
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "specify desired network type separated by\ncommas, each network\
            \ will bring up a\ndedicated interface inside container\n(default \"bridge\"\
            )"
          synonyms:
          - --network
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: specify network arguments to pass to CNI plugins
          synonyms:
          - --network-args
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "do NOT mount users home directory if home\nis not the current\
            \ working directory"
          synonyms:
          - --no-home
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: do NOT start shim process with --pid
          synonyms:
          - --no-init
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --no-nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: drop all privileges from root user in container)
          synonyms:
          - --no-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "do NOT use HTTPS with the docker://\ntransport (useful for\
            \ local docker\nregistries without a certificate)"
          synonyms:
          - --nohttps
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: disable VM network handling
          synonyms:
          - --nonet
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable experimental Nvidia support
          synonyms:
          - --nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use an overlayFS image for persistent data\nstorage or as\
            \ read-only layer of container"
          synonyms:
          - -o
          - --overlay
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: prompt for an encryption passphrase
          synonyms:
          - --passphrase
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "enter an path to a PEM formated RSA key for\nan encrypted\
            \ container"
          synonyms:
          - --pem-path
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new PID namespace
          synonyms:
          - -p
          - --pid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "initial working directory for payload\nprocess inside the\
            \ container"
          synonyms:
          - --pwd
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable experimental Rocm support
          synonyms:
          - --rocm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "include a scratch directory within the\ncontainer that is\
            \ linked to a temporary dir\n(use -W to force location)"
          synonyms:
          - -S
          - --scratch
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "enable security features (SELinux,\nApparmor, Seccomp)"
          synonyms:
          - --security
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "run container in a new user namespace,\nallowing Singularity\
            \ to run completely\nunprivileged on recent kernels. This\ndisables some\
            \ features of Singularity, for\nexample it only works with sandbox images."
          synonyms:
          - -u
          - --userns
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: run container in a new UTS namespace
          synonyms:
          - --uts
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable VM support
          synonyms:
          - --vm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "number of CPU cores to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1\")"
          synonyms:
          - --vm-cpu
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable attaching stderr from VM
          synonyms:
          - --vm-err
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "IP Address to assign for container usage.\nDefaults to DHCP\
            \ within bridge network.\n(default \"dhcp\")"
          synonyms:
          - --vm-ip
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "amount of RAM in MiB to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1024\")"
          synonyms:
          - --vm-ram
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "working directory to be used for /tmp,\n/var/tmp and $HOME\
            \ (if -c/--contain was\nalso used)"
          synonyms:
          - -W
          - --workdir
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "by default all Singularity containers are\navailable as read\
            \ only. This option makes\nthe file system accessible as read/write."
          synonyms:
          - -w
          - --writable
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "makes the file system accessible as\nread-write with non persistent\
            \ data (with\noverlay support only)"
          synonyms:
          - --writable-tmpfs
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - exec
          - directory/
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: exec
            optional: true
          - !Positional
            description: ''
            position: 6
            name: container
            optional: false
          named: []
          parent: *id011
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"exec\": requires at least 2 arg(s), only\
            \ received 1\n\nUsage:\n  singularity [global options...] exec [exec options...]\
            \ <container> <command>\n\nRun 'singularity exec --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for exec
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Run a command within a container\n\nUsage:\n  singularity exec\
          \ [exec options...] <container> <command>\n\nDescription:\n  singularity\
          \ exec supports the following formats:\n\n  *.sif               Singularity\
          \ Image Format (SIF). Native to Singularity 3.0+\n  \n  *.sqsh         \
          \     SquashFS format.  Native to Singularity 2.4+\n\n  *.img          \
          \     ext3 format. Native to Singularity versions < 2.4.\n\n  directory/\
          \          sandbox format. Directory containing a valid root file \n   \
          \                   system and optionally Singularity meta-data.\n\n  instance://*\
          \        A local running instance of a container. (See the instance\n  \
          \                    command group.)\n\n  library://*         A container\
          \ hosted on a Library (default \n                      https://cloud.sylabs.io/library)\n\
          \n  docker://*          A container hosted on Docker Hub\n\n  shub://* \
          \           A container hosted on Singularity Hub\n\n  oras://*        \
          \    A container hosted on a supporting OCI registry\n\nOptions:\n     \
          \ --add-caps string        a comma separated capability list to add\n  \
          \    --allow-setuid           allow setuid binaries in container (root only)\n\
          \      --app string             set an application to run inside a container\n\
          \      --apply-cgroups string   apply cgroups from file for container\n\
          \                               processes (root only)\n  -B, --bind strings\
          \           a user-bind path specification.  spec has\n                \
          \               the format src[:dest[:opts]], where src and\n          \
          \                     dest are outside and inside paths.  If dest\n    \
          \                           is not given, it is set equal to src. \n   \
          \                            Mount options ('opts') may be specified as\n\
          \                               'ro' (read-only) or 'rw' (read/write, which\n\
          \                               is the default). Multiple bind paths can\
          \ be\n                               given by a comma separated list.\n\
          \  -e, --cleanenv               clean environment before running container\n\
          \  -c, --contain                use minimal /dev and empty other\n     \
          \                          directories (e.g. /tmp and $HOME) instead\n \
          \                              of sharing filesystems from your host\n \
          \ -C, --containall             contain not only file systems, but also\n\
          \                               PID, IPC, and environment\n      --disable-cache\
          \          dont use cache, and dont create cache\n      --dns string   \
          \          list of DNS server separated by commas to\n                 \
          \              add in resolv.conf\n      --docker-login           login\
          \ to a Docker Repository interactively\n      --drop-caps string       a\
          \ comma separated capability list to drop\n  -f, --fakeroot            \
          \   run container in new user namespace as uid 0\n  -h, --help         \
          \          help for exec\n  -H, --home string            a home directory\
          \ specification.  spec can\n                               either be a src\
          \ path or src:dest pair.  src\n                               is the source\
          \ path of the home directory\n                               outside the\
          \ container and dest overrides\n                               the home\
          \ directory within the container.\n                               (default\
          \ \"/root\")\n      --hostname string        set container hostname\n  -i,\
          \ --ipc                    run container in a new IPC namespace\n      --keep-privs\
          \             let root user keep privileges in container\n             \
          \                  (root only)\n  -n, --net                    run container\
          \ in a new network namespace\n                               (sets up a\
          \ bridge network interface by default)\n      --network string         specify\
          \ desired network type separated by\n                               commas,\
          \ each network will bring up a\n                               dedicated\
          \ interface inside container\n                               (default \"\
          bridge\")\n      --network-args strings   specify network arguments to pass\
          \ to CNI plugins\n      --no-home                do NOT mount users home\
          \ directory if home\n                               is not the current working\
          \ directory\n      --no-init                do NOT start shim process with\
          \ --pid\n      --no-nv                  \n      --no-privs             \
          \  drop all privileges from root user in container)\n      --nohttps   \
          \             do NOT use HTTPS with the docker://\n                    \
          \           transport (useful for local docker\n                       \
          \        registries without a certificate)\n      --nonet              \
          \    disable VM network handling\n      --nv                     enable\
          \ experimental Nvidia support\n  -o, --overlay strings        use an overlayFS\
          \ image for persistent data\n                               storage or as\
          \ read-only layer of container\n      --passphrase             prompt for\
          \ an encryption passphrase\n      --pem-path string        enter an path\
          \ to a PEM formated RSA key for\n                               an encrypted\
          \ container\n  -p, --pid                    run container in a new PID namespace\n\
          \      --pwd string             initial working directory for payload\n\
          \                               process inside the container\n      --rocm\
          \                   enable experimental Rocm support\n  -S, --scratch strings\
          \        include a scratch directory within the\n                      \
          \         container that is linked to a temporary dir\n                \
          \               (use -W to force location)\n      --security strings   \
          \    enable security features (SELinux,\n                              \
          \ Apparmor, Seccomp)\n  -u, --userns                 run container in a\
          \ new user namespace,\n                               allowing Singularity\
          \ to run completely\n                               unprivileged on recent\
          \ kernels. This\n                               disables some features of\
          \ Singularity, for\n                               example it only works\
          \ with sandbox images.\n      --uts                    run container in\
          \ a new UTS namespace\n      --vm                     enable VM support\n\
          \      --vm-cpu string          number of CPU cores to allocate to Virtual\n\
          \                               Machine (implies --vm) (default \"1\")\n\
          \      --vm-err                 enable attaching stderr from VM\n      --vm-ip\
          \ string           IP Address to assign for container usage.\n         \
          \                      Defaults to DHCP within bridge network.\n       \
          \                        (default \"dhcp\")\n      --vm-ram string     \
          \     amount of RAM in MiB to allocate to Virtual\n                    \
          \           Machine (implies --vm) (default \"1024\")\n  -W, --workdir string\
          \         working directory to be used for /tmp,\n                     \
          \          /var/tmp and $HOME (if -c/--contain was\n                   \
          \            also used)\n  -w, --writable               by default all Singularity\
          \ containers are\n                               available as read only.\
          \ This option makes\n                               the file system accessible\
          \ as read/write.\n      --writable-tmpfs         makes the file system accessible\
          \ as\n                               read-write with non persistent data\
          \ (with\n                               overlay support only)\n\n\nExamples:\n\
          \  $ singularity exec /tmp/debian.sif cat /etc/debian_version\n  $ singularity\
          \ exec /tmp/debian.sif python ./hello_world.py\n  $ cat hello_world.py |\
          \ singularity exec /tmp/debian.sif python\n  $ sudo singularity exec --writable\
          \ /tmp/debian.sif apt-get update\n  $ singularity exec instance://my_instance\
          \ ps -ef\n  $ singularity exec library://centos cat /etc/os-release\n\n\n\
          For additional help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id012 !Command
        command:
        - singularity
        - instance
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - instance
          - stop
          positional:
          - !Positional
            description: ''
            position: 0
            name: stop
            optional: true
          - !Positional
            description: ''
            position: 1
            name: options...
            optional: true
          named:
          - !Flag
            description: stop all user's instances
            synonyms:
            - -a
            - --all
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: force kill instance
            synonyms:
            - -F
            - --force
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: signal sent to the instance
            synonyms:
            - -s
            - --signal
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: "force kill non stopped instances after X seconds\n(default\
              \ 10)"
            synonyms:
            - -t
            - --timeout
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: if running as root, stop instances belonging to user
            synonyms:
            - -u
            - --user
            args: !SimpleFlagArg
              name: string
            optional: true
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for stop
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Stop a named instance of a given container image\n\nUsage:\n\
            \  singularity instance stop [stop options...] [instance]\n\nDescription:\n\
            \  The command singularity instance stop allows you to stop and clean\
            \ up a named,\n  running instance of a given container image.\n\nOptions:\n\
            \  -a, --all             stop all user's instances\n  -F, --force    \
            \       force kill instance\n  -h, --help            help for stop\n \
            \ -s, --signal string   signal sent to the instance\n  -t, --timeout int\
            \     force kill non stopped instances after X seconds\n             \
            \           (default 10)\n  -u, --user string     if running as root,\
            \ stop instances belonging to user\n\n\nExamples:\n  $ singularity instance\
            \ start my-sql.sif mysql1\n  $ singularity instance start my-sql.sif mysql2\n\
            \  $ singularity instance stop mysql*\n  Stopping mysql1 instance of my-sql.sif\
            \ (PID=23845)\n  Stopping mysql2 instance of my-sql.sif (PID=23858)\n\n\
            \  $ singularity instance start my-sql.sif mysql1\n\n  Force instance\
            \ to shutdown\n  $ singularity instance stop -f mysql1 (may corrupt data)\n\
            \n  Send SIGTERM to the instance\n  $ singularity instance stop -s SIGTERM\
            \ mysql1\n  $ singularity instance stop -s TERM mysql1\n  $ singularity\
            \ instance stop -s 15 mysql1\n\n\nFor additional help or support, please\
            \ visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - instance
          - start
          positional:
          - !Positional
            description: "sandbox format. Directory containing a valid root file \n\
              system and optionally Singularity meta-data."
            position: 0
            name: directory/
            optional: false
          named:
          - !Flag
            description: a comma separated capability list to add
            synonyms:
            - --add-caps
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: allow setuid binaries in container (root only)
            synonyms:
            - --allow-setuid
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "apply cgroups from file for container\nprocesses (root only)"
            synonyms:
            - --apply-cgroups
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: "a user-bind path specification.  spec has\nthe format src[:dest[:opts]],\
              \ where src and\ndest are outside and inside paths.  If dest\nis not\
              \ given, it is set equal to src.\nMount options ('opts') may be specified\
              \ as\n'ro' (read-only) or 'rw' (read/write, which\nis the default).\
              \ Multiple bind paths can be\ngiven by a comma separated list."
            synonyms:
            - -B
            - --bind
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: execute /sbin/init to boot container (root only)
            synonyms:
            - --boot
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: clean environment before running container
            synonyms:
            - -e
            - --cleanenv
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "use minimal /dev and empty other\ndirectories (e.g. /tmp\
              \ and $HOME) instead\nof sharing filesystems from your host"
            synonyms:
            - -c
            - --contain
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "contain not only file systems, but also\nPID, IPC, and environment"
            synonyms:
            - -C
            - --containall
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: dont use cache, and dont create cache
            synonyms:
            - --disable-cache
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "list of DNS server separated by commas to\nadd in resolv.conf"
            synonyms:
            - --dns
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: login to a Docker Repository interactively
            synonyms:
            - --docker-login
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: a comma separated capability list to drop
            synonyms:
            - --drop-caps
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: run container in new user namespace as uid 0
            synonyms:
            - -f
            - --fakeroot
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "a home directory specification.  spec can\neither be a src\
              \ path or src:dest pair.  src\nis the source path of the home directory\n\
              outside the container and dest overrides\nthe home directory within\
              \ the container.\n(default \"/root\")"
            synonyms:
            - -H
            - --home
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: set container hostname
            synonyms:
            - --hostname
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: run container in a new IPC namespace
            synonyms:
            - -i
            - --ipc
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "let root user keep privileges in container\n(root only)"
            synonyms:
            - --keep-privs
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "run container in a new network namespace\n(sets up a bridge\
              \ network interface by default)"
            synonyms:
            - -n
            - --net
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "specify desired network type separated by\ncommas, each\
              \ network will bring up a\ndedicated interface inside container\n(default\
              \ \"bridge\")"
            synonyms:
            - --network
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: specify network arguments to pass to CNI plugins
            synonyms:
            - --network-args
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: "do NOT mount users home directory if home\nis not the current\
              \ working directory"
            synonyms:
            - --no-home
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: do NOT start shim process with --pid
            synonyms:
            - --no-init
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: ''
            synonyms:
            - --no-nv
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: drop all privileges from root user in container)
            synonyms:
            - --no-privs
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "do NOT use HTTPS with the docker://\ntransport (useful for\
              \ local docker\nregistries without a certificate)"
            synonyms:
            - --nohttps
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: enable experimental Nvidia support
            synonyms:
            - --nv
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "use an overlayFS image for persistent data\nstorage or as\
              \ read-only layer of container"
            synonyms:
            - -o
            - --overlay
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: prompt for an encryption passphrase
            synonyms:
            - --passphrase
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "enter an path to a PEM formated RSA key for\nan encrypted\
              \ container"
            synonyms:
            - --pem-path
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: run container in a new PID namespace
            synonyms:
            - -p
            - --pid
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "write instance PID to the file with the\ngiven name"
            synonyms:
            - --pid-file
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: enable experimental Rocm support
            synonyms:
            - --rocm
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "include a scratch directory within the\ncontainer that is\
              \ linked to a temporary dir\n(use -W to force location)"
            synonyms:
            - -S
            - --scratch
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: "enable security features (SELinux,\nApparmor, Seccomp)"
            synonyms:
            - --security
            args: !SimpleFlagArg
              name: strings
            optional: true
          - !Flag
            description: "run container in a new user namespace,\nallowing Singularity\
              \ to run completely\nunprivileged on recent kernels. This\ndisables\
              \ some features of Singularity, for\nexample it only works with sandbox\
              \ images."
            synonyms:
            - -u
            - --userns
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: run container in a new UTS namespace
            synonyms:
            - --uts
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "working directory to be used for /tmp,\n/var/tmp and $HOME\
              \ (if -c/--contain was\nalso used)"
            synonyms:
            - -W
            - --workdir
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: "by default all Singularity containers are\navailable as\
              \ read only. This option makes\nthe file system accessible as read/write."
            synonyms:
            - -w
            - --writable
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "makes the file system accessible as\nread-write with non\
              \ persistent data (with\noverlay support only)"
            synonyms:
            - --writable-tmpfs
            args: !EmptyFlagArg {}
            optional: true
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for start
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Start a named instance of the given container image\n\nUsage:\n\
            \  singularity instance start [start options...] <container path> <instance\
            \ name> [startscript args...]\n\nDescription:\n  The instance start command\
            \ allows you to create a new named instance from an\n  existing container\
            \ image that will begin running in the background. If a\n  startscript\
            \ is defined in the container metadata the commands in that script\n \
            \ will be executed with the instance start command as well. You can optionally\n\
            \  pass arguments to startscript\n\n  singularity instance start accepts\
            \ the following container formats\n\n  *.sif               Singularity\
            \ Image Format (SIF). Native to Singularity 3.0+\n  \n  *.sqsh       \
            \       SquashFS format.  Native to Singularity 2.4+\n\n  *.img      \
            \         ext3 format. Native to Singularity versions < 2.4.\n\n  directory/\
            \          sandbox format. Directory containing a valid root file \n \
            \                     system and optionally Singularity meta-data.\n\n\
            \  instance://*        A local running instance of a container. (See the\
            \ instance\n                      command group.)\n\n  library://*   \
            \      A container hosted on a Library (default \n                   \
            \   https://cloud.sylabs.io/library)\n\n  docker://*          A container\
            \ hosted on Docker Hub\n\n  shub://*            A container hosted on\
            \ Singularity Hub\n\n  oras://*            A container hosted on a supporting\
            \ OCI registry\n\nOptions:\n      --add-caps string        a comma separated\
            \ capability list to add\n      --allow-setuid           allow setuid\
            \ binaries in container (root only)\n      --apply-cgroups string   apply\
            \ cgroups from file for container\n                               processes\
            \ (root only)\n  -B, --bind strings           a user-bind path specification.\
            \  spec has\n                               the format src[:dest[:opts]],\
            \ where src and\n                               dest are outside and inside\
            \ paths.  If dest\n                               is not given, it is\
            \ set equal to src. \n                               Mount options ('opts')\
            \ may be specified as\n                               'ro' (read-only)\
            \ or 'rw' (read/write, which\n                               is the default).\
            \ Multiple bind paths can be\n                               given by\
            \ a comma separated list.\n      --boot                   execute /sbin/init\
            \ to boot container (root only)\n  -e, --cleanenv               clean\
            \ environment before running container\n  -c, --contain              \
            \  use minimal /dev and empty other\n                               directories\
            \ (e.g. /tmp and $HOME) instead\n                               of sharing\
            \ filesystems from your host\n  -C, --containall             contain not\
            \ only file systems, but also\n                               PID, IPC,\
            \ and environment\n      --disable-cache          dont use cache, and\
            \ dont create cache\n      --dns string             list of DNS server\
            \ separated by commas to\n                               add in resolv.conf\n\
            \      --docker-login           login to a Docker Repository interactively\n\
            \      --drop-caps string       a comma separated capability list to drop\n\
            \  -f, --fakeroot               run container in new user namespace as\
            \ uid 0\n  -h, --help                   help for start\n  -H, --home string\
            \            a home directory specification.  spec can\n             \
            \                  either be a src path or src:dest pair.  src\n     \
            \                          is the source path of the home directory\n\
            \                               outside the container and dest overrides\n\
            \                               the home directory within the container.\n\
            \                               (default \"/root\")\n      --hostname\
            \ string        set container hostname\n  -i, --ipc                  \
            \  run container in a new IPC namespace\n      --keep-privs          \
            \   let root user keep privileges in container\n                     \
            \          (root only)\n  -n, --net                    run container in\
            \ a new network namespace\n                               (sets up a bridge\
            \ network interface by default)\n      --network string         specify\
            \ desired network type separated by\n                               commas,\
            \ each network will bring up a\n                               dedicated\
            \ interface inside container\n                               (default\
            \ \"bridge\")\n      --network-args strings   specify network arguments\
            \ to pass to CNI plugins\n      --no-home                do NOT mount\
            \ users home directory if home\n                               is not\
            \ the current working directory\n      --no-init                do NOT\
            \ start shim process with --pid\n      --no-nv                  \n   \
            \   --no-privs               drop all privileges from root user in container)\n\
            \      --nohttps                do NOT use HTTPS with the docker://\n\
            \                               transport (useful for local docker\n \
            \                              registries without a certificate)\n   \
            \   --nv                     enable experimental Nvidia support\n  -o,\
            \ --overlay strings        use an overlayFS image for persistent data\n\
            \                               storage or as read-only layer of container\n\
            \      --passphrase             prompt for an encryption passphrase\n\
            \      --pem-path string        enter an path to a PEM formated RSA key\
            \ for\n                               an encrypted container\n  -p, --pid\
            \                    run container in a new PID namespace\n      --pid-file\
            \ string        write instance PID to the file with the\n            \
            \                   given name\n      --rocm                   enable\
            \ experimental Rocm support\n  -S, --scratch strings        include a\
            \ scratch directory within the\n                               container\
            \ that is linked to a temporary dir\n                               (use\
            \ -W to force location)\n      --security strings       enable security\
            \ features (SELinux,\n                               Apparmor, Seccomp)\n\
            \  -u, --userns                 run container in a new user namespace,\n\
            \                               allowing Singularity to run completely\n\
            \                               unprivileged on recent kernels. This\n\
            \                               disables some features of Singularity,\
            \ for\n                               example it only works with sandbox\
            \ images.\n      --uts                    run container in a new UTS namespace\n\
            \  -W, --workdir string         working directory to be used for /tmp,\n\
            \                               /var/tmp and $HOME (if -c/--contain was\n\
            \                               also used)\n  -w, --writable         \
            \      by default all Singularity containers are\n                   \
            \            available as read only. This option makes\n             \
            \                  the file system accessible as read/write.\n      --writable-tmpfs\
            \         makes the file system accessible as\n                      \
            \         read-write with non persistent data (with\n                \
            \               overlay support only)\n\n\nExamples:\n  $ singularity\
            \ instance start /tmp/my-sql.sif mysql\n\n  $ singularity shell instance://mysql\n\
            \  Singularity my-sql.sif> pwd\n  /home/mibauer/mysql\n  Singularity my-sql.sif>\
            \ ps\n  PID TTY          TIME CMD\n    1 pts/0    00:00:00 sinit\n   \
            \ 2 pts/0    00:00:00 bash\n    3 pts/0    00:00:00 ps\n  Singularity\
            \ my-sql.sif>\n\n  $ singularity instance stop /tmp/my-sql.sif mysql\n\
            \  Stopping /tmp/my-sql.sif mysql\n\n\nFor additional help or support,\
            \ please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - instance
          - list
          positional:
          - !Positional
            description: 11963     /home/mibauer/singularity/sinstance/test.sif
            position: 0
            name: test
            optional: false
          - !Positional
            description: 11964     /home/mibauer/singularity/sinstance/test.sif
            position: 1
            name: test2
            optional: false
          - !Positional
            description: 11965     /home/mibauer/singularity/sinstance/lolcow.sif
            position: 2
            name: lolcow
            optional: false
          - !Positional
            description: 11963     /home/mibauer/singularity/sinstance/test.sif
            position: 0
            name: test
            optional: false
          - !Positional
            description: 11964     /home/mibauer/singularity/sinstance/test.sif
            position: 1
            name: test2
            optional: false
          - !Positional
            description: 11963     /home/mibauer/singularity/sinstance/test.sif
            position: 0
            name: test
            optional: false
          - !Positional
            description: 16219     /home/mibauer/singularity/sinstance/test.sif
            position: 1
            name: test2
            optional: false
          named:
          - !Flag
            description: print structured json instead of list
            synonyms:
            - -j
            - --json
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: if running as root, list instances from "<username>"
            synonyms:
            - -u
            - --user
            args: !SimpleFlagArg
              name: string
            optional: true
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for list
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "List all running and named Singularity instances\n\nUsage:\n\
            \  singularity instance list [list options...] [<instance name glob>]\n\
            \nDescription:\n  The instance list command allows you to view the Singularity\
            \ container\n  instances that are currently running in the background.\n\
            \nOptions:\n  -h, --help          help for list\n  -j, --json        \
            \  print structured json instead of list\n  -u, --user string   if running\
            \ as root, list instances from \"<username>\"\n\n\nExamples:\n  $ singularity\
            \ instance list\n  INSTANCE NAME      PID       IMAGE\n  test        \
            \       11963     /home/mibauer/singularity/sinstance/test.sif\n  test2\
            \              11964     /home/mibauer/singularity/sinstance/test.sif\n\
            \  lolcow             11965     /home/mibauer/singularity/sinstance/lolcow.sif\n\
            \n  $ singularity instance list 'test*'\n  INSTANCE NAME      PID    \
            \   IMAGE\n  test               11963     /home/mibauer/singularity/sinstance/test.sif\n\
            \  test2              11964     /home/mibauer/singularity/sinstance/test.sif\n\
            \n  $ sudo singularity instance list -u mibauer\n  INSTANCE NAME     \
            \ PID       IMAGE\n  test               11963     /home/mibauer/singularity/sinstance/test.sif\n\
            \  test2              16219     /home/mibauer/singularity/sinstance/test.sif\n\
            \n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        usage: []
        help_flag: !Flag
          description: help for instance
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage containers running as services\n\nUsage:\n  singularity\
          \ instance\n\nDescription:\n  Instances allow you to run containers as background\
          \ processes. This can be\n  useful for running services such as web servers\
          \ or databases.\n\nOptions:\n  -h, --help   help for instance\n\nAvailable\
          \ Commands:\n  list        List all running and named Singularity instances\n\
          \  start       Start a named instance of the given container image\n  stop\
          \        Stop a named instance of a given container image\n\nExamples:\n\
          \  All group commands have their own help output:\n\n  $ singularity help\
          \ instance start\n  $ singularity instance start --help\n\n\nFor additional\
          \ help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id013 !Command
        command:
        - singularity
        - sign
        positional: []
        named:
        - !Flag
          description: sign all non-signature partitions in a SIF
          synonyms:
          - -a
          - --all
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: group ID to be signed
          synonyms:
          - -g
          - --groupid
          args: !SimpleFlagArg
            name: uint32
          optional: true
        - !Flag
          description: "private key to use (index from 'keys list')\n(default -1)"
          synonyms:
          - -k
          - --keyidx
          args: !SimpleFlagArg
            name: int
          optional: true
        - !Flag
          description: descriptor ID to be signed (default system-partition)
          synonyms:
          - -i
          - --sif-id
          args: !SimpleFlagArg
            name: uint32
          optional: true
        - !Flag
          description: key server URL (default "https://keys.sylabs.io")
          synonyms:
          - -u
          - --url
          args: !SimpleFlagArg
            name: string
          optional: true
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - sign
          - sign
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sign
            optional: true
          named: []
          parent: *id013
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"sign\": accepts 1 arg(s), received 2\n\n\
            Usage:\n  singularity [global options...] sign [sign options...] <image\
            \ path>\n\nRun 'singularity sign --help' for more detailed usage information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - sign
          - options...
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sign
            optional: true
          named: []
          parent: *id013
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"sign\": accepts 1 arg(s), received 2\n\n\
            Usage:\n  singularity [global options...] sign [sign options...] <image\
            \ path>\n\nRun 'singularity sign --help' for more detailed usage information.\n"
          generated_using: *id003
        usage: []
        help_flag: !Flag
          description: help for sign
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Attach a cryptographic signature to an image\n\nUsage:\n  singularity\
          \ sign [sign options...] <image path>\n\nDescription:\n  The sign command\
          \ allows a user to create a cryptographic signature on either a \n  single\
          \ data object or a list of data objects within the same SIF group. By \n\
          \  default without parameters, the command searches for the primary partition\
          \ and \n  creates a verification block that is then added to the SIF container\
          \ file.\n  \n  To generate a keypair, see 'singularity help key newpair'\n\
          \nOptions:\n  -a, --all              sign all non-signature partitions in\
          \ a SIF\n  -g, --groupid uint32   group ID to be signed\n  -h, --help  \
          \           help for sign\n  -k, --keyidx int       private key to use (index\
          \ from 'keys list')\n                         (default -1)\n  -i, --sif-id\
          \ uint32    descriptor ID to be signed (default system-partition)\n  -u,\
          \ --url string       key server URL (default \"https://keys.sylabs.io\"\
          )\n\n\nExamples:\n  $ singularity sign container.sif\n\n\nFor additional\
          \ help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - !Command
        command:
        - singularity
        - run
        positional:
        - !Positional
          description: "sandbox format. Directory containing a valid root file \n\
            system and optionally Singularity meta-data."
          position: 0
          name: directory/
          optional: false
        named:
        - !Flag
          description: a comma separated capability list to add
          synonyms:
          - --add-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: allow setuid binaries in container (root only)
          synonyms:
          - --allow-setuid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: set an application to run inside a container
          synonyms:
          - --app
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "apply cgroups from file for container\nprocesses (root only)"
          synonyms:
          - --apply-cgroups
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "a user-bind path specification.  spec has\nthe format src[:dest[:opts]],\
            \ where src and\ndest are outside and inside paths.  If dest\nis not given,\
            \ it is set equal to src.\nMount options ('opts') may be specified as\n\
            'ro' (read-only) or 'rw' (read/write, which\nis the default). Multiple\
            \ bind paths can be\ngiven by a comma separated list."
          synonyms:
          - -B
          - --bind
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: clean environment before running container
          synonyms:
          - -e
          - --cleanenv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use minimal /dev and empty other\ndirectories (e.g. /tmp and\
            \ $HOME) instead\nof sharing filesystems from your host"
          synonyms:
          - -c
          - --contain
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "contain not only file systems, but also\nPID, IPC, and environment"
          synonyms:
          - -C
          - --containall
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: dont use cache, and dont create cache
          synonyms:
          - --disable-cache
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "list of DNS server separated by commas to\nadd in resolv.conf"
          synonyms:
          - --dns
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: login to a Docker Repository interactively
          synonyms:
          - --docker-login
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: a comma separated capability list to drop
          synonyms:
          - --drop-caps
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in new user namespace as uid 0
          synonyms:
          - -f
          - --fakeroot
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "a home directory specification.  spec can\neither be a src\
            \ path or src:dest pair.  src\nis the source path of the home directory\n\
            outside the container and dest overrides\nthe home directory within the\
            \ container.\n(default \"/root\")"
          synonyms:
          - -H
          - --home
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: set container hostname
          synonyms:
          - --hostname
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new IPC namespace
          synonyms:
          - -i
          - --ipc
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "let root user keep privileges in container\n(root only)"
          synonyms:
          - --keep-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "run container in a new network namespace\n(sets up a bridge\
            \ network interface by default)"
          synonyms:
          - -n
          - --net
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "specify desired network type separated by\ncommas, each network\
            \ will bring up a\ndedicated interface inside container\n(default \"bridge\"\
            )"
          synonyms:
          - --network
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: specify network arguments to pass to CNI plugins
          synonyms:
          - --network-args
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "do NOT mount users home directory if home\nis not the current\
            \ working directory"
          synonyms:
          - --no-home
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: do NOT start shim process with --pid
          synonyms:
          - --no-init
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --no-nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: drop all privileges from root user in container)
          synonyms:
          - --no-privs
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "do NOT use HTTPS with the docker://\ntransport (useful for\
            \ local docker\nregistries without a certificate)"
          synonyms:
          - --nohttps
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: disable VM network handling
          synonyms:
          - --nonet
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable experimental Nvidia support
          synonyms:
          - --nv
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "use an overlayFS image for persistent data\nstorage or as\
            \ read-only layer of container"
          synonyms:
          - -o
          - --overlay
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: prompt for an encryption passphrase
          synonyms:
          - --passphrase
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "enter an path to a PEM formated RSA key for\nan encrypted\
            \ container"
          synonyms:
          - --pem-path
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: run container in a new PID namespace
          synonyms:
          - -p
          - --pid
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "initial working directory for payload\nprocess inside the\
            \ container"
          synonyms:
          - --pwd
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable experimental Rocm support
          synonyms:
          - --rocm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "include a scratch directory within the\ncontainer that is\
            \ linked to a temporary dir\n(use -W to force location)"
          synonyms:
          - -S
          - --scratch
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "enable security features (SELinux,\nApparmor, Seccomp)"
          synonyms:
          - --security
          args: !SimpleFlagArg
            name: strings
          optional: true
        - !Flag
          description: "run container in a new user namespace,\nallowing Singularity\
            \ to run completely\nunprivileged on recent kernels. This\ndisables some\
            \ features of Singularity, for\nexample it only works with sandbox images."
          synonyms:
          - -u
          - --userns
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: run container in a new UTS namespace
          synonyms:
          - --uts
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: enable VM support
          synonyms:
          - --vm
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "number of CPU cores to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1\")"
          synonyms:
          - --vm-cpu
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: enable attaching stderr from VM
          synonyms:
          - --vm-err
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "IP Address to assign for container usage.\nDefaults to DHCP\
            \ within bridge network.\n(default \"dhcp\")"
          synonyms:
          - --vm-ip
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "amount of RAM in MiB to allocate to Virtual\nMachine (implies\
            \ --vm) (default \"1024\")"
          synonyms:
          - --vm-ram
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "working directory to be used for /tmp,\n/var/tmp and $HOME\
            \ (if -c/--contain was\nalso used)"
          synonyms:
          - -W
          - --workdir
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "by default all Singularity containers are\navailable as read\
            \ only. This option makes\nthe file system accessible as read/write."
          synonyms:
          - -w
          - --writable
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "makes the file system accessible as\nread-write with non persistent\
            \ data (with\noverlay support only)"
          synonyms:
          - --writable-tmpfs
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: help for run
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Run the user-defined default command within a container\n\nUsage:\n\
          \  singularity run [run options...] <container>\n\nDescription:\n  This\
          \ command will launch a Singularity container and execute a runscript\n\
          \  if one is defined for that container. The runscript is a metadata file\
          \ within\n  the container that contains shell commands. If the file is present\
          \ (and\n  executable) then this command will execute that file within the\
          \ container\n  automatically. All arguments following the container name\
          \ will be passed\n  directly to the runscript.\n\n  singularity run accepts\
          \ the following container formats:\n\n  *.sif               Singularity\
          \ Image Format (SIF). Native to Singularity 3.0+\n  \n  *.sqsh         \
          \     SquashFS format.  Native to Singularity 2.4+\n\n  *.img          \
          \     ext3 format. Native to Singularity versions < 2.4.\n\n  directory/\
          \          sandbox format. Directory containing a valid root file \n   \
          \                   system and optionally Singularity meta-data.\n\n  instance://*\
          \        A local running instance of a container. (See the instance\n  \
          \                    command group.)\n\n  library://*         A container\
          \ hosted on a Library (default \n                      https://cloud.sylabs.io/library)\n\
          \n  docker://*          A container hosted on Docker Hub\n\n  shub://* \
          \           A container hosted on Singularity Hub\n\n  oras://*        \
          \    A container hosted on a supporting OCI registry\n\nOptions:\n     \
          \ --add-caps string        a comma separated capability list to add\n  \
          \    --allow-setuid           allow setuid binaries in container (root only)\n\
          \      --app string             set an application to run inside a container\n\
          \      --apply-cgroups string   apply cgroups from file for container\n\
          \                               processes (root only)\n  -B, --bind strings\
          \           a user-bind path specification.  spec has\n                \
          \               the format src[:dest[:opts]], where src and\n          \
          \                     dest are outside and inside paths.  If dest\n    \
          \                           is not given, it is set equal to src. \n   \
          \                            Mount options ('opts') may be specified as\n\
          \                               'ro' (read-only) or 'rw' (read/write, which\n\
          \                               is the default). Multiple bind paths can\
          \ be\n                               given by a comma separated list.\n\
          \  -e, --cleanenv               clean environment before running container\n\
          \  -c, --contain                use minimal /dev and empty other\n     \
          \                          directories (e.g. /tmp and $HOME) instead\n \
          \                              of sharing filesystems from your host\n \
          \ -C, --containall             contain not only file systems, but also\n\
          \                               PID, IPC, and environment\n      --disable-cache\
          \          dont use cache, and dont create cache\n      --dns string   \
          \          list of DNS server separated by commas to\n                 \
          \              add in resolv.conf\n      --docker-login           login\
          \ to a Docker Repository interactively\n      --drop-caps string       a\
          \ comma separated capability list to drop\n  -f, --fakeroot            \
          \   run container in new user namespace as uid 0\n  -h, --help         \
          \          help for run\n  -H, --home string            a home directory\
          \ specification.  spec can\n                               either be a src\
          \ path or src:dest pair.  src\n                               is the source\
          \ path of the home directory\n                               outside the\
          \ container and dest overrides\n                               the home\
          \ directory within the container.\n                               (default\
          \ \"/root\")\n      --hostname string        set container hostname\n  -i,\
          \ --ipc                    run container in a new IPC namespace\n      --keep-privs\
          \             let root user keep privileges in container\n             \
          \                  (root only)\n  -n, --net                    run container\
          \ in a new network namespace\n                               (sets up a\
          \ bridge network interface by default)\n      --network string         specify\
          \ desired network type separated by\n                               commas,\
          \ each network will bring up a\n                               dedicated\
          \ interface inside container\n                               (default \"\
          bridge\")\n      --network-args strings   specify network arguments to pass\
          \ to CNI plugins\n      --no-home                do NOT mount users home\
          \ directory if home\n                               is not the current working\
          \ directory\n      --no-init                do NOT start shim process with\
          \ --pid\n      --no-nv                  \n      --no-privs             \
          \  drop all privileges from root user in container)\n      --nohttps   \
          \             do NOT use HTTPS with the docker://\n                    \
          \           transport (useful for local docker\n                       \
          \        registries without a certificate)\n      --nonet              \
          \    disable VM network handling\n      --nv                     enable\
          \ experimental Nvidia support\n  -o, --overlay strings        use an overlayFS\
          \ image for persistent data\n                               storage or as\
          \ read-only layer of container\n      --passphrase             prompt for\
          \ an encryption passphrase\n      --pem-path string        enter an path\
          \ to a PEM formated RSA key for\n                               an encrypted\
          \ container\n  -p, --pid                    run container in a new PID namespace\n\
          \      --pwd string             initial working directory for payload\n\
          \                               process inside the container\n      --rocm\
          \                   enable experimental Rocm support\n  -S, --scratch strings\
          \        include a scratch directory within the\n                      \
          \         container that is linked to a temporary dir\n                \
          \               (use -W to force location)\n      --security strings   \
          \    enable security features (SELinux,\n                              \
          \ Apparmor, Seccomp)\n  -u, --userns                 run container in a\
          \ new user namespace,\n                               allowing Singularity\
          \ to run completely\n                               unprivileged on recent\
          \ kernels. This\n                               disables some features of\
          \ Singularity, for\n                               example it only works\
          \ with sandbox images.\n      --uts                    run container in\
          \ a new UTS namespace\n      --vm                     enable VM support\n\
          \      --vm-cpu string          number of CPU cores to allocate to Virtual\n\
          \                               Machine (implies --vm) (default \"1\")\n\
          \      --vm-err                 enable attaching stderr from VM\n      --vm-ip\
          \ string           IP Address to assign for container usage.\n         \
          \                      Defaults to DHCP within bridge network.\n       \
          \                        (default \"dhcp\")\n      --vm-ram string     \
          \     amount of RAM in MiB to allocate to Virtual\n                    \
          \           Machine (implies --vm) (default \"1024\")\n  -W, --workdir string\
          \         working directory to be used for /tmp,\n                     \
          \          /var/tmp and $HOME (if -c/--contain was\n                   \
          \            also used)\n  -w, --writable               by default all Singularity\
          \ containers are\n                               available as read only.\
          \ This option makes\n                               the file system accessible\
          \ as read/write.\n      --writable-tmpfs         makes the file system accessible\
          \ as\n                               read-write with non persistent data\
          \ (with\n                               overlay support only)\n\n\nExamples:\n\
          \  # Here we see that the runscript prints \"Hello world: \"\n  $ singularity\
          \ exec /tmp/debian.sif cat /singularity\n  #!/bin/sh\n  echo \"Hello world:\
          \ \"\n\n  # It runs with our inputs when we run the image\n  $ singularity\
          \ run /tmp/debian.sif one two three\n  Hello world: one two three\n\n  #\
          \ Note that this does the same thing\n  $ ./tmp/debian.sif one two three\n\
          \n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id014 !Command
        command:
        - singularity
        - capability
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - capability
          - avail
          positional:
          - !Positional
            description: '* use F_SETPIPE_SZ to increase the capacity of a pipe above
              the limit specified by /proc/sys/fs/pipe-max-size.'
            position: 0
            name: command.
            optional: false
          named: []
          parent: *id014
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "CAP_KILL:              CAP_KILL\n\tBypass permission checks\
            \ for sending signals (see kill(2)). This includes use of the ioctl(2)\
            \ KDSIGACCEPT operation.\n\nCAP_SETPCAP:           CAP_SETPCAP\n\tIf file\
            \ capabilities are not supported: grant or remove any capability in the\
            \ caller's permitted capability set to or\n\tfrom any other process. (This\
            \ property of CAP_SETPCAP is not available when the kernel is configured\
            \ to support file\n\tcapabilities, since CAP_SETPCAP has entirely different\
            \ semantics for such kernels.)\n\n\tIf file capabilities are supported:\
            \ add any capability from the calling thread's bounding set to its inheritable\
            \ set;\n\tdrop capabilities from the bounding set (via prctl(2) PR_CAPBSET_DROP);\
            \ make changes to the securebits flags.\n\nCAP_SYS_RAWIO:         CAP_SYS_RAWIO\n\
            \t* Perform I/O port operations (iopl(2) and ioperm(2)).\n\t* access /proc/kcore.\n\
            \t* employ the FIBMAP ioctl(2) operation.\n\t* open devices for accessing\
            \ x86 model-specific registers (MSRs, see msr(4)).\n\t* update /proc/sys/vm/mmap_min_addr.\n\
            \t* create memory mappings at addresses below the value specified by /proc/sys/vm/mmap_min_addr.\n\
            \t* map files in /proc/bus/pci.\n\t* open /dev/mem and /dev/kmem.\n\t\
            * perform various SCSI device commands.\n\t* perform certain operations\
            \ on hpsa(4) and cciss(4) devices.\n\t* perform a range of device-specific\
            \ operations on other devices.\n\nCAP_MAC_OVERRIDE:      CAP_MAC_OVERRIDE\
            \ (since Linux 2.6.25)\n\tAllow MAC configuration or state changes. Implemented\
            \ for the Smack LSM.\n\nCAP_MAC_ADMIN:         CAP_MAC_ADMIN (since Linux\
            \ 2.6.25)\n\tOverride Mandatory Access Control (MAC). Implemented for\
            \ the Smack Linux Security Module (LSM).\n\nCAP_LINUX_IMMUTABLE:   CAP_LINUX_IMMUTABLE\n\
            \tSet the FS_APPEND_FL and FS_IMMUTABLE_FL inode flags (see chattr(1)).\n\
            \nCAP_SYS_RESOURCE:      CAP_SYS_RESOURCE\n\t* Use reserved space on ext2\
            \ filesystems.\n\t* make ioctl(2) calls controlling ext3 journaling.\n\
            \t* override disk quota limits.\n\t* increase resource limits (see setrlimit(2)).\n\
            \t* override RLIMIT_NPROC resource limit.\n\t* override maximum number\
            \ of consoles on console allocation.\n\t* override maximum number of keymaps.\n\
            \t* allow more than 64hz interrupts from the real-time clock.\n\t* raise\
            \ msg_qbytes limit for a System V message queue above the limit in /proc/sys/kernel/msgmnb\
            \ (see msgop(2) and\n\t  msgctl(2)).\n\t* override the /proc/sys/fs/pipe-size-max\
            \ limit when setting the capacity of a pipe using the F_SETPIPE_SZ fcntl(2)\n\
            \t  command.\n\t* use F_SETPIPE_SZ to increase the capacity of a pipe\
            \ above the limit specified by /proc/sys/fs/pipe-max-size.\n\t* override\
            \ /proc/sys/fs/mqueue/queues_max limit when creating POSIX message queues\
            \ (see mq_overview(7)).\n\t* employ prctl(2) PR_SET_MM operation.\n\t\
            * set /proc/PID/oom_score_adj to a value lower than the value last set\
            \ by a process with CAP_SYS_RESOURCE.\n\nCAP_SYS_TTY_CONFIG:    CAP_SYS_TTY_CONFIG\n\
            \tUse vhangup(2); employ various privileged ioctl(2) operations on virtual\
            \ terminals.\n\nCAP_AUDIT_READ:        CAP_AUDIT_READ (since Linux 3.16)\n\
            \tAllow reading the audit log via a multicast netlink socket.\n\nCAP_DAC_READ_SEARCH:\
            \   CAP_DAC_READ_SEARCH\n\t* Bypass file read permission checks and directory\
            \ read and execute permission checks.\n\t* Invoke open_by_handle_at(2).\n\
            \nCAP_SETUID:            CAP_SETUID\n\tMake arbitrary manipulations of\
            \ process UIDs (setuid(2), setreuid(2), setresuid(2), setfsuid(2)); forge\
            \ UID when pass‐\n\ting socket credentials via UNIX domain sockets; write\
            \ a user ID mapping in a user namespace (see user_namespaces(7)).\n\n\
            CAP_NET_ADMIN:         CAP_NET_ADMIN\n\tPerform various network-related\
            \ operations:\n\t* interface configuration.\n\t* administration of IP\
            \ firewall, masquerading, and accounting.\n\t* modify routing tables.\n\
            \t* bind to any address for transparent proxying.\n\t* set type-of-service\
            \ (TOS)\n\t* clear driver statistics.\n\t* set promiscuous mode.\n\t*\
            \ enabling multicasting.\n\t* use setsockopt(2) to set the following socket\
            \ options: SO_DEBUG, SO_MARK, SO_PRIORITY (for a priority outside the\n\
            \t  range 0 to 6), SO_RCVBUFFORCE, and SO_SNDBUFFORCE.\n\nCAP_SYS_BOOT:\
            \          CAP_SYS_BOOT\n\tUse reboot(2) and kexec_load(2).\n\nCAP_SYSLOG:\
            \            CAP_SYSLOG (since Linux 2.6.37)\n\t* Perform privileged syslog(2)\
            \ operations. See syslog(2) for information on which operations require\
            \ privilege.\n\t* View kernel addresses exposed via /proc and other interfaces\
            \ when /proc/sys/kernel/kptr_restrict has the value 1.\n\t  (See the discussion\
            \ of the kptr_restrict in proc(5).)\n\nCAP_FOWNER:            CAP_FOWNER\n\
            \t* Bypass permission checks on operations that normally require the filesystem\
            \ UID of the process to match the UID of\n\t  the file (e.g., chmod(2),\
            \ utime(2)), excluding those operations covered by CAP_DAC_OVERRIDE and\
            \ CAP_DAC_READ_SEARCH.\n\t* set extended file attributes (see chattr(1))\
            \ on arbitrary files.\n\t* set Access Control Lists (ACLs) on arbitrary\
            \ files.\n\t* ignore directory sticky bit on file deletion.\n\t* specify\
            \ O_NOATIME for arbitrary files in open(2) and fcntl(2).\n\nCAP_NET_RAW:\
            \           CAP_NET_RAW\n\t* use RAW and PACKET sockets.\n\t* bind to\
            \ any address for transparent proxying.\n\nCAP_IPC_LOCK:          CAP_IPC_LOCK\n\
            \tLock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)).\n\nCAP_SYS_ADMIN:\
            \         CAP_SYS_ADMIN\n\t* Perform a range of system administration\
            \ operations including: quotactl(2), mount(2), umount(2), swapon(2),\n\
            \t  swapoff(2), sethostname(2), and setdomainname(2).\n\t* perform privileged\
            \ syslog(2) operations (since Linux 2.6.37, CAP_SYSLOG should be used\
            \ to permit such operations).\n\t* perform VM86_REQUEST_IRQ vm86(2) command.\n\
            \t* perform IPC_SET and IPC_RMID operations on arbitrary System V IPC\
            \ objects.\n\t* override RLIMIT_NPROC resource limit.\n\t* perform operations\
            \ on trusted and security Extended Attributes (see xattr(7)).\n\t* use\
            \ lookup_dcookie(2).\n\t* use ioprio_set(2) to assign IOPRIO_CLASS_RT\
            \ and (before Linux 2.6.25) IOPRIO_CLASS_IDLE I/O scheduling classes.\n\
            \t* forge PID when passing socket credentials via UNIX domain sockets.\n\
            \t* exceed /proc/sys/fs/file-max, the system-wide limit on the number\
            \ of open files, in system calls that open files\n\t  (e.g., accept(2),\
            \ execve(2), open(2), pipe(2)).\n\t* employ CLONE_* flags that create\
            \ new namespaces with clone(2) and unshare(2) (but, since Linux 3.8, creating\
            \ user\n\t  namespaces does not require any capability).\n\t* call perf_event_open(2).\n\
            \t* access privileged perf event information.\n\t* call setns(2) (requires\
            \ CAP_SYS_ADMIN in the target namespace).\n\t* call fanotify_init(2).\n\
            \t* call bpf(2).\n\t* perform KEYCTL_CHOWN and KEYCTL_SETPERM keyctl(2)\
            \ operations.\n\t* perform madvise(2) MADV_HWPOISON operation.\n\t* employ\
            \ the TIOCSTI ioctl(2) to insert characters into the input queue of a\
            \ terminal other than the caller's control‐\n\t  ling terminal.\n\t* employ\
            \ the obsolete nfsservctl(2) system call.\n\t* employ the obsolete bdflush(2)\
            \ system call.\n\t* perform various privileged block-device ioctl(2) operations.\n\
            \t* perform various privileged filesystem ioctl(2) operations.\n\t* perform\
            \ administrative operations on many device drivers.\n\nCAP_BLOCK_SUSPEND:\
            \     CAP_BLOCK_SUSPEND (since Linux 3.5)\n\tEmploy features that can\
            \ block system suspend (epoll(7) EPOLLWAKEUP, /proc/sys/wake_lock).\n\n\
            CAP_SYS_MODULE:        CAP_SYS_MODULE\n\tLoad and unload kernel modules\
            \ (see init_module(2) and delete_module(2)); in kernels before 2.6.25:\
            \ drop capabilities\n\tfrom the system-wide capability bounding set.\n\
            \nCAP_SYS_CHROOT:        CAP_SYS_CHROOT\n\tUse chroot(2).\n\nCAP_SYS_PACCT:\
            \         CAP_SYS_PACCT\n\tUse acct(2).\n\nCAP_SYS_NICE:          CAP_SYS_NICE\n\
            \t* Raise process nice value (nice(2), setpriority(2)) and change the\
            \ nice value for arbitrary processes.\n\t* set real-time scheduling policies\
            \ for calling process, and set scheduling policies and priorities for\
            \ arbitrary\n\t  processes (sched_setscheduler(2), sched_setparam(2),\
            \ shed_setattr(2)).\n\t* set CPU affinity for arbitrary processes (sched_setaffinity(2)).\n\
            \t* set I/O scheduling class and priority for arbitrary processes (ioprio_set(2)).\n\
            \t* apply migrate_pages(2) to arbitrary processes and allow processes\
            \ to be migrated to arbitrary nodes.\n\t* apply move_pages(2) to arbitrary\
            \ processes.\n\t* use the MPOL_MF_MOVE_ALL flag with mbind(2) and move_pages(2).\n\
            \nCAP_SYS_TIME:          CAP_SYS_TIME\n\tSet system clock (settimeofday(2),\
            \ stime(2), adjtimex(2)); set real-time (hardware) clock.\n\nCAP_WAKE_ALARM:\
            \        CAP_WAKE_ALARM (since Linux 3.0)\n\tTrigger something that will\
            \ wake up the system (set CLOCK_REALTIME_ALARM and CLOCK_BOOTTIME_ALARM\
            \ timers).\n\nCAP_CHOWN:             CAP_CHOWN\n\tMake arbitrary changes\
            \ to file UIDs and GIDs (see chown(2)).\n\nCAP_DAC_OVERRIDE:      CAP_DAC_OVERRIDE\n\
            \tBypass file read, write, and execute permission checks. (DAC is an abbreviation\
            \ of \"discretionary access control\".)\n\nCAP_SETGID:            CAP_SETGID\n\
            \tMake arbitrary manipulations of process GIDs and supplementary GID list;\
            \ forge GID when passing socket credentials via\n\tUNIX domain sockets;\
            \ write a group ID mapping in a user namespace (see user_namespaces(7)).\n\
            \nCAP_SYS_PTRACE:        CAP_SYS_PTRACE\n\t*  Trace arbitrary processes\
            \ using ptrace(2).\n\t*  apply get_robust_list(2) to arbitrary processes.\n\
            \t*  transfer data to or from the memory of arbitrary processes using\
            \ process_vm_readv(2) and process_vm_writev(2).\n\t*  inspect processes\
            \ using kcmp(2).\n\nCAP_SETFCAP:           CAP_SETFCAP (since Linux 2.6.24)\n\
            \tSet file capabilities.\n\nCAP_NET_BROADCAST:     CAP_NET_BROADCAST\n\
            \t(Unused)  Make socket broadcasts, and listen to multicasts.\n\nCAP_IPC_OWNER:\
            \         CAP_IPC_OWNER\n\tBypass permission checks for operations on\
            \ System V IPC objects.\n\nCAP_MKNOD:             CAP_SYS_MKNOD (since\
            \ Linux 2.4)\n\tCreate special files using mknod(2).\n\nCAP_FSETID:  \
            \          CAP_FSETID\n\tDon't  clear set-user-ID and set-group-ID mode\
            \ bits when a file is modified; set the set-group-ID bit for a file whose\n\
            \tGID does not match the filesystem or any of the supplementary GIDs of\
            \ the calling process.\n\nCAP_NET_BIND_SERVICE:  CAP_NET_BIND_SERVICE\n\
            \tBind a socket to Internet domain privileged ports (port numbers less\
            \ than 1024).\n\nCAP_LEASE:             CAP_LEASE (since Linux 2.4)\n\t\
            Establish leases on arbitrary files (see fcntl(2)).\n\nCAP_AUDIT_WRITE:\
            \       CAP_AUDIT_WRITE (since Linux 2.6.11)\n\tWrite records to kernel\
            \ auditing log.\n\nCAP_AUDIT_CONTROL:     CAP_AUDIT_CONTROL (since Linux\
            \ 2.6.11)\n\tEnable and disable kernel auditing; change auditing filter\
            \ rules; retrieve auditing status and filtering rules.\n\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - capability
          - drop
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: capability
            optional: false
          - !Positional
            description: ''
            position: 4
            name: drop
            optional: true
          named: []
          parent: *id014
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"drop\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] capability drop [drop options...]\
            \ <capabilities>\n\nRun 'singularity capability drop --help' for more\
            \ detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - capability
          - add
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: capability
            optional: false
          - !Positional
            description: ''
            position: 4
            name: add
            optional: true
          named: []
          parent: *id014
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"add\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] capability add [add options...]\
            \ <capabilities>\n\nRun 'singularity capability add --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for capability
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage Linux capabilities for users and groups\n\nUsage:\n  singularity\
          \ capability\n\nDescription:\n  Capabilities allow you to have fine grained\
          \ control over the permissions that\n  your containers need to run.\n\n\
          \  NOTE: capability add/drop commands require root to run. Granting capabilities\
          \ \n  to users allows them to escalate privilege inside the container and\
          \ will\n  likely give them a route to privilege escalation on the host system\
          \ as well.\n  Do not add capabilities to users who should not have root\
          \ on the host system.\n\nOptions:\n  -h, --help   help for capability\n\n\
          Available Commands:\n  add         Add capabilities to a user or group (requires\
          \ root)\n  avail       Show description for available capabilities\n  drop\
          \        Remove capabilities from a user or group (requires root)\n  list\
          \        Show capabilities for a given user or group\n\nExamples:\n  All\
          \ group commands have their own help output:\n\n  $ singularity help capability\
          \ add\n  $ singularity capability add --help\n\n\nFor additional help or\
          \ support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id015 !Command
        command:
        - singularity
        - inspect
        positional: []
        named:
        - !Flag
          description: inspect a specific app
          synonyms:
          - --app
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "show the Singularity recipe file that was used to\ngenerate\
            \ the image"
          synonyms:
          - -d
          - --deffile
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: show the environment settings for the image
          synonyms:
          - -e
          - --environment
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: inspect the runscript helpfile, if it exists
          synonyms:
          - -H
          - --helpfile
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: print structured json instead of sections
          synonyms:
          - -j
          - --json
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: show the labels for the image (default)
          synonyms:
          - -l
          - --labels
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: list all apps in a container
          synonyms:
          - --list-apps
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: show the runscript for the image
          synonyms:
          - -r
          - --runscript
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: show the test script for the image
          synonyms:
          - -t
          - --test
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_DATA
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPROOT
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPBIN
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPLABELS
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPS
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPRUN
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPOUTPUT
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPDATA
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPMETA
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPNAME
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPTEST
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPHELP
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPENV
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPFILES
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPLIB
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - inspect
          - SCIF_APPINPUT
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: inspect
            optional: true
          named: []
          parent: *id015
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"inspect\": accepts 1 arg(s), received 2\n\
            \nUsage:\n  singularity [global options...] inspect [inspect options...]\
            \ <image path>\n\nRun 'singularity inspect --help' for more detailed usage\
            \ information.\n"
          generated_using: *id003
        usage: []
        help_flag: !Flag
          description: help for inspect
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Show metadata for an image\n\nUsage:\n  singularity inspect [inspect\
          \ options...] <image path>\n\nDescription:\n  Inspect will show you labels,\
          \ environment variables, apps and scripts associated \n  with the image\
          \ determined by the flags you pass. By default, they will be shown in \n\
          \  plain text. If you would like to list them in json format, you should\
          \ use the --json flag.\n  \n\nOptions:\n      --app string    inspect a\
          \ specific app\n  -d, --deffile       show the Singularity recipe file that\
          \ was used to\n                      generate the image\n  -e, --environment\
          \   show the environment settings for the image\n  -h, --help          help\
          \ for inspect\n  -H, --helpfile      inspect the runscript helpfile, if\
          \ it exists\n  -j, --json          print structured json instead of sections\n\
          \  -l, --labels        show the labels for the image (default)\n      --list-apps\
          \     list all apps in a container\n  -r, --runscript     show the runscript\
          \ for the image\n  -t, --test          show the test script for the image\n\
          \n\nExamples:\n  $ singularity inspect ubuntu.sif\n  \n  If you want to\
          \ list the applications (apps) installed in a container (located at\n  /scif/apps)\
          \ you should run inspect command with --list-apps <container-image> flag.\n\
          \  ( See https://sci-f.github.io for more information on SCIF apps)\n\n\
          \  The following environment variables are available to you when called\
          \ \n  from the shell inside the container. The top variables are relevant\
          \ \n  to the active app (--app <app>) and the bottom available for all \n\
          \  apps regardless of the active app. Both sets of variables are also available\
          \ during development (at build time).\n\n  ACTIVE APP ENVIRONMENT:\n   \
          \   SCIF_APPNAME       the name for the active application\n      SCIF_APPROOT\
          \       the installation folder for the application created at /scif/apps/<app>\n\
          \      SCIF_APPMETA       the application metadata folder\n      SCIF_APPDATA\
          \       the data folder created for the application at /scif/data/<app>\n\
          \        SCIF_APPINPUT    expected input folder within data base folder\n\
          \        SCIF_APPOUTPUT   the output data folder within data base folder\n\
          \n      SCIF_APPENV        points to the application's custom environment.sh\
          \ file in its metadata folder\n      SCIF_APPLABELS     is the application's\
          \ labels.json in the metadata folder\n      SCIF_APPBIN        is the bin\
          \ folder for the app, which is automatically added to the $PATH when the\
          \ app is active\n      SCIF_APPLIB        is the application's library folder\
          \ that is added to the LD_LIBRARY_PATH\n      SCIF_APPRUN        is the\
          \ runscript\n      SCIF_APPHELP       is the help file for the runscript\n\
          \      SCIF_APPTEST       is the testing script (test.sh) associated with\
          \ the applicatio\n      SCIF_APPNAME       the name for the active application\n\
          \      SCIF_APPFILES      the files section associated with the application\
          \ that are added to\n\n\n  GLOBAL APP ENVIRONMENT:\n    \n      SCIF_DATA\
          \             scif defined data base for all apps (/scif/data)\n      SCIF_APPS\
          \             scif defined install bases for all apps (/scif/apps)\n   \
          \   SCIF_APPROOT_<app>    root for application <app>\n      SCIF_APPDATA_<app>\
          \    data root for application <app>\n\n  To list all your apps:\n\n  $\
          \ singularity inspect --list-apps ubuntu.sif \n\n  To list only labels in\
          \ the json format from an image:\n\n  $ singularity inspect --json --labels\
          \ ubuntu.sif\n\n  To verify you own a single application on your container\
          \ image, use the --app <appname> flag:\n\n  $ singularity inspect --app\
          \ <appname> ubuntu.sif\n\n\nFor additional help or support, please visit\
          \ https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id016 !Command
        command:
        - singularity
        - key
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - key
          - search
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: key
            optional: true
          - !Positional
            description: ''
            position: 6
            name: search
            optional: true
          named: []
          parent: *id016
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"search\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] key [key options...] search\
            \ [search options...] <search_string>\n\nRun 'singularity key search --help'\
            \ for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - key
          - export
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: key
            optional: true
          - !Positional
            description: ''
            position: 6
            name: export
            optional: true
          named: []
          parent: *id016
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"export\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] key [key options...] export\
            \ [export options...] <output-file>\n\nRun 'singularity key export --help'\
            \ for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - key
          - import
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: key
            optional: true
          - !Positional
            description: ''
            position: 6
            name: import
            optional: true
          named: []
          parent: *id016
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"import\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] key [key options...] import\
            \ [import options...] <input-key>\n\nRun 'singularity key import --help'\
            \ for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - key
          - pull
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: key
            optional: true
          - !Positional
            description: ''
            position: 6
            name: pull
            optional: true
          named: []
          parent: *id016
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"pull\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] key [key options...] pull [pull\
            \ options...] <fingerprint>\n\nRun 'singularity key pull --help' for more\
            \ detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - key
          - newpair
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: key
            optional: false
          named:
          - !Flag
            description: specify key bit length (default 4096)
            synonyms:
            - -b
            - --bit-length
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: key comment
            synonyms:
            - -C
            - --comment
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: key owner email
            synonyms:
            - -E
            - --email
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: key owner name
            synonyms:
            - -N
            - --name
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: key password
            synonyms:
            - -P
            - --password
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: "specify to push the public key to the remote\nkeystore (default\
              \ true)"
            synonyms:
            - -U
            - --push
            args: !EmptyFlagArg {}
            optional: true
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for newpair
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Create a new key pair\n\nUsage:\n  singularity key newpair\n\
            \nDescription:\n  The 'key newpair' command allows you to create a new\
            \ key or public/private\n  keys to be stored in the default user local\
            \ key store location (e.g., \n  $HOME/.singularity/sypgp).\n\nOptions:\n\
            \  -b, --bit-length int    specify key bit length (default 4096)\n  -C,\
            \ --comment string    key comment\n  -E, --email string      key owner\
            \ email\n  -h, --help              help for newpair\n  -N, --name string\
            \       key owner name\n  -P, --password string   key password\n  -U,\
            \ --push              specify to push the public key to the remote\n \
            \                         keystore (default true)\n\n\nExamples:\n  $\
            \ singularity key newpair\n  $ singularity key newpair --password=psk\
            \ --name=your-name --comment=\"key comment\" --email=mail@email.com --push=false\n\
            \n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - key
          - list
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: key
            optional: false
          named:
          - !Flag
            description: "list private keys instead of the default which displays\n\
              public ones"
            synonyms:
            - -s
            - --secret
            args: !EmptyFlagArg {}
            optional: true
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for list
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "List keys in your local keyring\n\nUsage:\n  singularity key\
            \ list\n\nDescription:\n  List your local keys in your keyring. Will list\
            \ public (trusted) keys\n  by default.\n\nOptions:\n  -h, --help     help\
            \ for list\n  -s, --secret   list private keys instead of the default\
            \ which displays\n                 public ones\n\n\nExamples:\n  $ singularity\
            \ key list\n  $ singularity key list --secret\n\n\nFor additional help\
            \ or support, please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - key
          - remove
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: key
            optional: true
          - !Positional
            description: ''
            position: 6
            name: remove
            optional: false
          named: []
          parent: *id016
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"remove\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] key [key options...] remove\
            \ <fingerprint>\n\nRun 'singularity key remove --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - key
          - push
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: key
            optional: true
          - !Positional
            description: ''
            position: 6
            name: push
            optional: true
          named: []
          parent: *id016
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"push\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] key [key options...] push [push\
            \ options...] <fingerprint>\n\nRun 'singularity key push --help' for more\
            \ detailed usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for key
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage OpenPGP keys\n\nUsage:\n  singularity key [key options...]\n\
          \nDescription:\n  Manage your trusted, public and private keys in your keyring\n\
          \  (default: '~/.singularity/sypgp' if 'SINGULARITY_SYPGPDIR' is not set.)\n\
          \nOptions:\n  -h, --help   help for key\n\nAvailable Commands:\n  export\
          \      Export a public or private key into a specific file\n  import   \
          \   Import a local key into the local keyring\n  list        List keys in\
          \ your local keyring\n  newpair     Create a new key pair\n  pull      \
          \  Download a public key from a key server\n  push        Upload a public\
          \ key to a key server\n  remove      Remove a local public key from your\
          \ keyring\n  search      Search for keys on a key server\n\nExamples:\n\
          \  All group commands have their own help output:\n\n  $ singularity help\
          \ key newpair\n  $ singularity key list --help\n\n\nFor additional help\
          \ or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - !Command
        command:
        - singularity
        - pull
        positional:
        - !Positional
          description: 'Options:'
          position: 0
          name: latest
          optional: false
        named:
        - !Flag
          description: architecture to pull from library (default "amd64")
          synonyms:
          - --arch
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: download images to the specific directory
          synonyms:
          - --dir
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: dont use cached images/blobs and dont create them
          synonyms:
          - --disable-cache
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: login to a Docker Repository interactively
          synonyms:
          - --docker-login
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: overwrite an image file if it exists
          synonyms:
          - -F
          - --force
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "download images from the provided library\n(default \"https://library.sylabs.io\"\
            )"
          synonyms:
          - --library
          args: !SimpleFlagArg
            name: string
          optional: true
        - !Flag
          description: "do NOT clean up bundle after failed build, can be\nhelpul\
            \ for debugging"
          synonyms:
          - --no-cleanup
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "do NOT use HTTPS with the docker:// transport\n(useful for\
            \ local docker registries without a\ncertificate)"
          synonyms:
          - --nohttps
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: help for pull
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Pull an image from a URI\n\nUsage:\n  singularity pull [pull options...]\
          \ [output file] <URI>\n\nDescription:\n  The 'pull' command allows you to\
          \ download or build a container from a given\n  URI. Supported URIs include:\n\
          \n  library: Pull an image from the currently configured library\n     \
          \ library://user/collection/container[:tag]\n\n  docker: Pull an image from\
          \ Docker Hub\n      docker://user/image:tag\n    \n  shub: Pull an image\
          \ from Singularity Hub\n      shub://user/image:tag\n\n  oras: Pull a SIF\
          \ image from a supporting OCI registry\n      oras://registry/namespace/image:tag\n\
          \n  http, https: Pull an image using the http(s?) protocol\n      https://library.sylabs.io/v1/imagefile/library/default/alpine:latest\n\
          \nOptions:\n      --arch string      architecture to pull from library (default\
          \ \"amd64\")\n      --dir string       download images to the specific directory\n\
          \      --disable-cache    dont use cached images/blobs and dont create them\n\
          \      --docker-login     login to a Docker Repository interactively\n \
          \ -F, --force            overwrite an image file if it exists\n  -h, --help\
          \             help for pull\n      --library string   download images from\
          \ the provided library\n                         (default \"https://library.sylabs.io\"\
          )\n      --no-cleanup       do NOT clean up bundle after failed build, can\
          \ be\n                         helpul for debugging\n      --nohttps   \
          \       do NOT use HTTPS with the docker:// transport\n                \
          \         (useful for local docker registries without a\n              \
          \           certificate)\n\n\nExamples:\n  From Sylabs cloud library\n \
          \ $ singularity pull alpine.sif library://alpine:latest\n\n  From Docker\n\
          \  $ singularity pull tensorflow.sif docker://tensorflow/tensorflow:latest\n\
          \n  From Shub\n  $ singularity pull singularity-images.sif shub://vsoch/singularity-images\n\
          \n  From supporting OCI registry (e.g. Azure Container Registry)\n  $ singularity\
          \ pull image.sif oras://<username>.azurecr.io/namespace/image:tag\n\n\n\
          For additional help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - &id017 !Command
        command:
        - singularity
        - sif
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - sif
          - setprim
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: setprim
            optional: false
          - !Positional
            description: ''
            position: 5
            name: descriptorid
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"setprim\": accepts 2 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] sif setprim <descriptorid>\
            \ <containerfile>\n\nRun 'singularity sif setprim --help' for more detailed\
            \ usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - info
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: info
            optional: false
          - !Positional
            description: ''
            position: 5
            name: descriptorid
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"info\": accepts 2 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] sif info <descriptorid> <containerfile>\n\
            \nRun 'singularity sif info --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - dump
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: dump
            optional: false
          - !Positional
            description: ''
            position: 5
            name: descriptorid
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"dump\": accepts 2 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] sif dump <descriptorid> <containerfile>\n\
            \nRun 'singularity sif dump --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - new
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: new
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"new\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] sif new <containerfile>\n\n\
            Run 'singularity sif new --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - del
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: del
            optional: false
          - !Positional
            description: ''
            position: 5
            name: descriptorid
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"del\": accepts 2 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] sif del <descriptorid> <containerfile>\n\
            \nRun 'singularity sif del --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - header
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: header
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"header\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] sif header <containerfile>\n\
            \nRun 'singularity sif header --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - list
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: sif
            optional: false
          - !Positional
            description: ''
            position: 4
            name: list
            optional: false
          named: []
          parent: *id017
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"list\": accepts 1 arg(s), received 0\n\n\
            Usage:\n  singularity [global options...] sif list <containerfile>\n\n\
            Run 'singularity sif list --help' for more detailed usage information.\n"
          generated_using: *id005
        - !Command
          command:
          - singularity
          - sif
          - add
          positional:
          - !Positional
            description: ''
            position: 0
            name: containerfile
            optional: false
          - !Positional
            description: ''
            position: 1
            name: dataobjectfile
            optional: false
          named:
          - !Flag
            description: "set alignment constraint [default: aligned on\npage size]"
            synonyms:
            - --alignment
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: "the type of data to add\n[NEEDED, no default]:\n1-Deffile,\
              \   2-EnvVar,    3-Labels,\n4-Partition, 5-Signature, 6-GenericJSON"
            synonyms:
            - --datatype
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: "set logical filename/handle [default: input\nfilename]"
            synonyms:
            - --filename
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: 'set groupid [default: DescrUnusedGroup]'
            synonyms:
            - --groupid
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: 'set link pointer [default: DescrUnusedLink]'
            synonyms:
            - --link
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: "the main architecture used (with -datatype\n4-Partition)\n\
              [NEEDED, no default]:\n1-386,       2-amd64,     3-arm,\n4-arm64,  \
              \   5-ppc64,     6-ppc64le,\n7-mips,      8-mipsle,    9-mips64,\n10-mips64le,\
              \ 11-s390x"
            synonyms:
            - --partarch
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: "the filesystem used (with -datatype\n4-Partition)\n[NEEDED,\
              \ no default]:\n1-Squash,    2-Ext3,      3-ImmuObj,\n4-Raw"
            synonyms:
            - --partfs
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: "the type of partition (with -datatype\n4-Partition)\n[NEEDED,\
              \ no default]:\n1-System,    2-PrimSys,   3-Data,\n4-Overlay"
            synonyms:
            - --parttype
            args: !SimpleFlagArg
              name: int
            optional: true
          - !Flag
            description: "the entity that signs (with -datatype\n5-Signature)\n[NEEDED,\
              \ no default]:\nexample: 433FE984155206BD962725E20E8713472A879943"
            synonyms:
            - --signentity
            args: !SimpleFlagArg
              name: string
            optional: true
          - !Flag
            description: "the signature hash used (with -datatype\n5-Signature)\n\
              [NEEDED, no default]:\n1-SHA256,    2-SHA384,    3-SHA512,\n4-BLAKE2S,\
              \   5-BLAKE2B"
            synonyms:
            - --signhash
            args: !SimpleFlagArg
              name: int
            optional: true
          parent: *id017
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for add
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Add a data object to a SIF file\n\nUsage:\n  singularity sif\
            \ add [OPTIONS] <containerfile> <dataobjectfile> [flags]\n\nDescription:\n\
            \nOptions:\n      --alignment int       set alignment constraint [default:\
            \ aligned on\n                            page size]\n      --datatype\
            \ int        the type of data to add\n                            [NEEDED,\
            \ no default]:\n                              1-Deffile,   2-EnvVar, \
            \   3-Labels,\n                              4-Partition, 5-Signature,\
            \ 6-GenericJSON\n      --filename string     set logical filename/handle\
            \ [default: input\n                            filename]\n      --groupid\
            \ int         set groupid [default: DescrUnusedGroup]\n  -h, --help  \
            \              help for add\n      --link int            set link pointer\
            \ [default: DescrUnusedLink]\n      --partarch int        the main architecture\
            \ used (with -datatype\n                            4-Partition)\n   \
            \                         [NEEDED, no default]:\n                    \
            \          1-386,       2-amd64,     3-arm,\n                        \
            \      4-arm64,     5-ppc64,     6-ppc64le,\n                        \
            \      7-mips,      8-mipsle,    9-mips64,\n                         \
            \     10-mips64le, 11-s390x\n      --partfs int          the filesystem\
            \ used (with -datatype\n                            4-Partition)\n   \
            \                         [NEEDED, no default]:\n                    \
            \          1-Squash,    2-Ext3,      3-ImmuObj,\n                    \
            \          4-Raw\n      --parttype int        the type of partition (with\
            \ -datatype\n                            4-Partition)\n              \
            \              [NEEDED, no default]:\n                              1-System,\
            \    2-PrimSys,   3-Data,\n                              4-Overlay\n \
            \     --signentity string   the entity that signs (with -datatype\n  \
            \                          5-Signature)\n                            [NEEDED,\
            \ no default]:\n                              example: 433FE984155206BD962725E20E8713472A879943\n\
            \      --signhash int        the signature hash used (with -datatype\n\
            \                            5-Signature)\n                          \
            \  [NEEDED, no default]:\n                              1-SHA256,    2-SHA384,\
            \    3-SHA512,\n                              4-BLAKE2S,   5-BLAKE2B\n\
            \n\n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        usage: []
        help_flag: !Flag
          description: help for sif
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "siftool is a program for Singularity Image Format (SIF) file manipulation\n\
          \nUsage:\n  singularity sif\n\nDescription:\n  A set of commands are provided\
          \ to display elements such as the SIF global \n  header, the data object\
          \ descriptors and to dump data objects. It is also \n  possible to modify\
          \ a SIF file via this tool via the add/del commands.\n\nOptions:\n  -h,\
          \ --help   help for sif\n\nAvailable Commands:\n  add         Add a data\
          \ object to a SIF file\n  del         Delete a specified object descriptor\
          \ and data from SIF file\n  dump        Extract and output data objects\
          \ from SIF files\n  header      Display SIF global headers\n  info     \
          \   Display detailed information of object descriptors\n  list        List\
          \ object descriptors from SIF files\n  new         Create a new empty SIF\
          \ image file\n  setprim     Set primary system partition\n\n\nFor additional\
          \ help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      - !Command
        command:
        - singularity
        - run-help
        positional:
        - !Positional
          description: ''
          position: 0
          name: singularity
          optional: false
        - !Positional
          description: ''
          position: 1
          name: global
          optional: true
        - !Positional
          description: ''
          position: 2
          name: options...
          optional: true
        - !Positional
          description: ''
          position: 3
          name: run-help
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Error for command \"run-help\": accepts 1 arg(s), received 0\n\
          \nUsage:\n  singularity [global options...] run-help <image path>\n\nRun\
          \ 'singularity run-help --help' for more detailed usage information.\n"
        generated_using: *id005
      - &id018 !Command
        command:
        - singularity
        - config
        positional: []
        named: []
        parent: *id002
        subcommands:
        - !Command
          command:
          - singularity
          - config
          - global
          positional:
          - !Positional
            description: ''
            position: 0
            name: option
            optional: false
          - !Positional
            description: ''
            position: 1
            name: directive
            optional: false
          named:
          - !Flag
            description: "dump resulting configuration on stdout but doesn't write\n\
              it to singularity.conf"
            synonyms:
            - -d
            - --dry-run
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: get value of the configuration directive
            synonyms:
            - -g
            - --get
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: reset the configuration directive value to its default value
            synonyms:
            - -r
            - --reset
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "set value of the configuration directive (for\nmulti-value\
              \ directives, it will add it)"
            synonyms:
            - -s
            - --set
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "unset value of the configuration directive (for\nmulti-value\
              \ directives, it will remove matching values)"
            synonyms:
            - -u
            - --unset
            args: !EmptyFlagArg {}
            optional: true
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            description: help for global
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "Edit singularity.conf from command line (root user only)\n\n\
            Usage:\n  singularity config global <option> <directive> [value,...]\n\
            \nDescription:\n  The config global command allow administrators to set/unset/get/reset\
            \ configuration\n  directives of singularity.conf from command line.\n\
            \nOptions:\n  -d, --dry-run   dump resulting configuration on stdout but\
            \ doesn't write\n                  it to singularity.conf\n  -g, --get\
            \       get value of the configuration directive\n  -h, --help      help\
            \ for global\n  -r, --reset     reset the configuration directive value\
            \ to its default value\n  -s, --set       set value of the configuration\
            \ directive (for\n                  multi-value directives, it will add\
            \ it)\n  -u, --unset     unset value of the configuration directive (for\n\
            \                  multi-value directives, it will remove matching values)\n\
            \n\nExamples:\n  To add a path to \"bind path\" directive:\n  $ singularity\
            \ config global --set \"bind path\" /etc/resolv.conf\n\n  To remove a\
            \ path from \"bind path\" directive:\n  $ singularity config global --unset\
            \ \"bind path\" /etc/resolv.conf\n\n  To set \"bind path\" to the default\
            \ value:\n  $ singularity config global --reset \"bind path\"\n\n  To\
            \ get \"bind path\" directive value:\n  $ singularity config global --get\
            \ \"bind path\"\n\n  To display the resulting configuration instead of\
            \ writing it to file:\n  $ singularity config global --dry-run --set \"\
            bind path\" /etc/resolv.conf\n\n\nFor additional help or support, please\
            \ visit https://www.sylabs.io/docs/\n"
          generated_using: *id003
        - !Command
          command:
          - singularity
          - config
          - fakeroot
          positional:
          - !Positional
            description: ''
            position: 0
            name: singularity
            optional: false
          - !Positional
            description: ''
            position: 1
            name: global
            optional: true
          - !Positional
            description: ''
            position: 2
            name: options...
            optional: true
          - !Positional
            description: ''
            position: 3
            name: config
            optional: false
          - !Positional
            description: ''
            position: 4
            name: fakeroot
            optional: false
          - !Positional
            description: ''
            position: 5
            name: option
            optional: false
          named: []
          parent: *id018
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Error for command \"fakeroot\": accepts 1 arg(s), received 0\n\
            \nUsage:\n  singularity [global options...] config fakeroot <option> <user>\n\
            \nRun 'singularity config fakeroot --help' for more detailed usage information.\n"
          generated_using: *id005
        usage: []
        help_flag: !Flag
          description: help for config
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "Manage various singularity configuration (root user only)\n\n\
          Usage:\n  singularity config\n\nDescription:\n  The config command allows\
          \ root user to manage various configuration like fakeroot\n  user mapping\
          \ entries.\n\nOptions:\n  -h, --help   help for config\n\nAvailable Commands:\n\
          \  fakeroot    Manage fakeroot user mappings entries (root user only)\n\
          \  global      Edit singularity.conf from command line (root user only)\n\
          \nExamples:\n  All config commands have their own help output:\n\n  $ singularity\
          \ help config fakeroot\n  $ singularity config fakeroot --help\n\n\nFor\
          \ additional help or support, please visit https://www.sylabs.io/docs/\n"
        generated_using: *id003
      usage: []
      help_flag: !Flag
        description: help for singularity
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: version for singularity
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "\nLinux container platform optimized for High Performance Computing\
        \ (HPC) and\nEnterprise Performance Computing (EPC)\n\nUsage:\n  singularity\
        \ [global options...]\n\nDescription:\n  Singularity containers provide an\
        \ application virtualization layer enabling\n  mobility of compute via both\
        \ application and environment portability. With\n  Singularity one is capable\
        \ of building a root file system that runs on any \n  other Linux system where\
        \ Singularity is installed.\n\nOptions:\n  -d, --debug     print debugging\
        \ information (highest verbosity)\n  -h, --help      help for singularity\n\
        \      --nocolor   print without color output (default False)\n  -q, --quiet\
        \     suppress normal output\n  -s, --silent    only print errors\n  -v, --verbose\
        \   print additional information\n      --version   version for singularity\n\
        \nAvailable Commands:\n  build       Build a Singularity image\n  cache  \
        \     Manage the local cache\n  capability  Manage Linux capabilities for\
        \ users and groups\n  config      Manage various singularity configuration\
        \ (root user only)\n  delete      Deletes requested image from the library\n\
        \  exec        Run a command within a container\n  help        Help about\
        \ any command\n  inspect     Show metadata for an image\n  instance    Manage\
        \ containers running as services\n  key         Manage OpenPGP keys\n  oci\
        \         Manage OCI containers\n  plugin      Manage Singularity plugins\n\
        \  pull        Pull an image from a URI\n  push        Upload image to the\
        \ provided URI\n  remote      Manage singularity remote endpoints\n  run \
        \        Run the user-defined default command within a container\n  run-help\
        \    Show the user-defined help for an image\n  search      Search a Container\
        \ Library for images\n  shell       Run a shell within a container\n  sif\
        \         siftool is a program for Singularity Image Format (SIF) file manipulation\n\
        \  sign        Attach a cryptographic signature to an image\n  test      \
        \  Run the user-defined tests within a container\n  verify      Verify cryptographic\
        \ signatures attached to an image\n  version     Show the version for Singularity\n\
        \nExamples:\n  $ singularity help <command> [<subcommand>]\n  $ singularity\
        \ help build\n  $ singularity help instance start\n\n\nFor additional help\
        \ or support, please visit https://www.sylabs.io/docs/\n"
      generated_using: *id003
    subcommands:
    - !Command
      command: *id019
      positional:
      - !Positional
        description: 'Examples:'
        position: 0
        name: synchronization
        optional: false
      named:
      - !Flag
        description: specify the OCI bundle path (required)
        synonyms:
        - -b
        - --bundle
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: "run container without executing container\nprocess (eg: for\
          \ POD container)"
        synonyms:
        - --empty-process
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "specify the log file format. Available\nformats are basic, kubernetes\
          \ and json\n(default \"kubernetes\")"
        synonyms:
        - --log-format
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specify the log file path
        synonyms:
        - -l
        - --log-path
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specify the pid file
        synonyms:
        - --pid-file
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specify the path to unix socket for state
        synonyms:
        - -s
        - --sync-socket
        args: !SimpleFlagArg
          name: string
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: help for create
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "Create a container from a bundle directory (root user only)\n\n\
        Usage:\n  singularity oci create -b <bundle_path> [create options...] <container_ID>\n\
        \nDescription:\n  Create invoke create operation to create a container instance\
        \ from an OCI \n  bundle directory\n\nOptions:\n  -b, --bundle string    \
        \    specify the OCI bundle path (required)\n      --empty-process       \
        \ run container without executing container\n                            \
        \ process (eg: for POD container)\n  -h, --help                 help for create\n\
        \      --log-format string    specify the log file format. Available\n   \
        \                          formats are basic, kubernetes and json\n      \
        \                       (default \"kubernetes\")\n  -l, --log-path string\
        \      specify the log file path\n      --pid-file string      specify the\
        \ pid file\n  -s, --sync-socket string   specify the path to unix socket for\
        \ state\n                             synchronization\n\n\nExamples:\n  $\
        \ singularity oci create -b ~/bundle mycontainer\n\n\nFor additional help\
        \ or support, please visit https://www.sylabs.io/docs/\n"
      generated_using: *id003
    - !Command
      command: &id020
      - singularity
      - oci
      - kill
      positional:
      - !Positional
        description: ''
        position: 0
        name: kill
        optional: true
      - !Positional
        description: ''
        position: 1
        name: options...
        optional: true
      named:
      - !Flag
        description: kill container process with SIGKILL
        synonyms:
        - -f
        - --force
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: signal sent to the container (default "SIGTERM")
        synonyms:
        - -s
        - --signal
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: timeout in second before killing container
        synonyms:
        - -t
        - --timeout
        args: !SimpleFlagArg
          name: uint32
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: help for kill
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "Kill a container (root user only)\n\nUsage:\n  singularity oci kill\
        \ [kill options...] <container_ID>\n\nDescription:\n  Kill invoke kill operation\
        \ to kill processes running within container \n  identified by container ID.\n\
        \nOptions:\n  -f, --force            kill container process with SIGKILL\n\
        \  -h, --help             help for kill\n  -s, --signal string    signal sent\
        \ to the container (default \"SIGTERM\")\n  -t, --timeout uint32   timeout\
        \ in second before killing container\n\n\nExamples:\n  $ singularity oci kill\
        \ mycontainer INT\n  $ singularity oci kill mycontainer -s INT\n\n\nFor additional\
        \ help or support, please visit https://www.sylabs.io/docs/\n"
      generated_using: *id003
    - !Command
      command: &id021
      - singularity
      - oci
      - exec
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: exec
        optional: false
      - !Positional
        description: ''
        position: 5
        name: container_ID
        optional: false
      - !Positional
        description: ''
        position: 6
        name: command
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"exec\": requires at least 1 arg(s), only received\
        \ 0\n\nUsage:\n  singularity [global options...] oci exec <container_ID> <command>\
        \ <args>\n\nRun 'singularity oci exec --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id022
      - singularity
      - oci
      - resume
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: resume
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"resume\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci resume <container_ID>\n\nRun 'singularity\
        \ oci resume --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id023
      - singularity
      - oci
      - run
      positional:
      - !Positional
        description: 'Examples:'
        position: 0
        name: synchronization
        optional: false
      named:
      - !Flag
        description: specify the OCI bundle path (required)
        synonyms:
        - -b
        - --bundle
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: "specify the log file format. Available\nformats are basic, kubernetes\
          \ and json\n(default \"kubernetes\")"
        synonyms:
        - --log-format
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specify the log file path
        synonyms:
        - -l
        - --log-path
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specify the pid file
        synonyms:
        - --pid-file
        args: !SimpleFlagArg
          name: string
        optional: true
      - !Flag
        description: specify the path to unix socket for state
        synonyms:
        - -s
        - --sync-socket
        args: !SimpleFlagArg
          name: string
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: help for run
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "Create/start/attach/delete a container from a bundle directory (root\
        \ user only)\n\nUsage:\n  singularity oci run -b <bundle_path> [run options...]\
        \ <container_ID>\n\nDescription:\n  Run will invoke equivalent of create/start/attach/delete\
        \ commands in a row.\n\nOptions:\n  -b, --bundle string        specify the\
        \ OCI bundle path (required)\n  -h, --help                 help for run\n\
        \      --log-format string    specify the log file format. Available\n   \
        \                          formats are basic, kubernetes and json\n      \
        \                       (default \"kubernetes\")\n  -l, --log-path string\
        \      specify the log file path\n      --pid-file string      specify the\
        \ pid file\n  -s, --sync-socket string   specify the path to unix socket for\
        \ state\n                             synchronization\n\n\nExamples:\n  $\
        \ singularity oci run -b ~/bundle mycontainer\n\n  is equivalent to :\n\n\
        \  $ singularity oci create -b ~/bundle mycontainer\n  $ singularity oci start\
        \ mycontainer\n  $ singularity oci attach mycontainer\n  $ singularity oci\
        \ delete mycontainer\n\n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
      generated_using: *id003
    - !Command
      command: &id024
      - singularity
      - oci
      - start
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: start
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"start\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci start <container_ID>\n\nRun 'singularity\
        \ oci start --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id025
      - singularity
      - oci
      - pause
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: pause
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"pause\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci pause <container_ID>\n\nRun 'singularity\
        \ oci pause --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id026
      - singularity
      - oci
      - state
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: state
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"state\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci state <container_ID>\n\nRun 'singularity\
        \ oci state --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id027
      - singularity
      - oci
      - mount
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: mount
        optional: false
      - !Positional
        description: ''
        position: 5
        name: sif_image
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"mount\": accepts 2 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci mount <sif_image> <bundle_path>\n\n\
        Run 'singularity oci mount --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id028
      - singularity
      - oci
      - attach
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: attach
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"attach\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci attach <container_ID>\n\nRun 'singularity\
        \ oci attach --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id029
      - singularity
      - oci
      - update
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: update
        optional: true
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"update\": requires at least 1 arg(s), only received\
        \ 0\n\nUsage:\n  singularity [global options...] oci update [update options...]\
        \ <container_ID>\n\nRun 'singularity oci update --help' for more detailed\
        \ usage information.\n"
      generated_using: *id005
    - !Command
      command: &id030
      - singularity
      - oci
      - umount
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: umount
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"umount\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci umount <bundle_path>\n\nRun 'singularity\
        \ oci umount --help' for more detailed usage information.\n"
      generated_using: *id005
    - !Command
      command: &id031
      - singularity
      - oci
      - delete
      positional:
      - !Positional
        description: ''
        position: 0
        name: singularity
        optional: false
      - !Positional
        description: ''
        position: 1
        name: global
        optional: true
      - !Positional
        description: ''
        position: 2
        name: options...
        optional: true
      - !Positional
        description: ''
        position: 3
        name: oci
        optional: false
      - !Positional
        description: ''
        position: 4
        name: delete
        optional: false
      named: []
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Error for command \"delete\": accepts 1 arg(s), received 0\n\nUsage:\n\
        \  singularity [global options...] oci delete <container_ID>\n\nRun 'singularity\
        \ oci delete --help' for more detailed usage information.\n"
      generated_using: *id005
    usage: []
    help_flag: !Flag
      description: help for oci
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Manage OCI containers\n\nUsage:\n  singularity oci\n\nDescription:\n\
      \  Allow you to manage containers from OCI bundle directories.\n\n  NOTE: all\
      \ oci commands requires to run as root\n\nOptions:\n  -h, --help   help for\
      \ oci\n\nAvailable Commands:\n  attach      Attach console to a running container\
      \ process (root user only)\n  create      Create a container from a bundle directory\
      \ (root user only)\n  delete      Delete container (root user only)\n  exec\
      \        Execute a command within container (root user only)\n  kill       \
      \ Kill a container (root user only)\n  mount       Mount create an OCI bundle\
      \ from SIF image (root user only)\n  pause       Suspends all processes inside\
      \ the container (root user only)\n  resume      Resumes all processes previously\
      \ paused inside the container (root user only)\n  run         Create/start/attach/delete\
      \ a container from a bundle directory (root user only)\n  start       Start\
      \ container process (root user only)\n  state       Query state of a container\
      \ (root user only)\n  umount      Umount delete bundle (root user only)\n  update\
      \      Update container cgroups resources (root user only)\n\nExamples:\n  All\
      \ group commands have their own help output:\n\n  $ singularity oci create -b\
      \ ~/bundle mycontainer\n  $ singularity oci start mycontainer\n\n\nFor additional\
      \ help or support, please visit https://www.sylabs.io/docs/\n"
    generated_using: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: help for create
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Create a container from a bundle directory (root user only)\n\nUsage:\n\
    \  singularity oci create -b <bundle_path> [create options...] <container_ID>\n\
    \nDescription:\n  Create invoke create operation to create a container instance\
    \ from an OCI \n  bundle directory\n\nOptions:\n  -b, --bundle string        specify\
    \ the OCI bundle path (required)\n      --empty-process        run container without\
    \ executing container\n                             process (eg: for POD container)\n\
    \  -h, --help                 help for create\n      --log-format string    specify\
    \ the log file format. Available\n                             formats are basic,\
    \ kubernetes and json\n                             (default \"kubernetes\")\n\
    \  -l, --log-path string      specify the log file path\n      --pid-file string\
    \      specify the pid file\n  -s, --sync-socket string   specify the path to\
    \ unix socket for state\n                             synchronization\n\n\nExamples:\n\
    \  $ singularity oci create -b ~/bundle mycontainer\n\n\nFor additional help or\
    \ support, please visit https://www.sylabs.io/docs/\n"
  generated_using: *id003
- !Command
  command: *id020
  positional:
  - !Positional
    description: ''
    position: 0
    name: kill
    optional: true
  - !Positional
    description: ''
    position: 1
    name: options...
    optional: true
  named:
  - !Flag
    description: kill container process with SIGKILL
    synonyms:
    - -f
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: signal sent to the container (default "SIGTERM")
    synonyms:
    - -s
    - --signal
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: timeout in second before killing container
    synonyms:
    - -t
    - --timeout
    args: !SimpleFlagArg
      name: uint32
    optional: true
  parent: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: help for kill
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Kill a container (root user only)\n\nUsage:\n  singularity oci kill\
    \ [kill options...] <container_ID>\n\nDescription:\n  Kill invoke kill operation\
    \ to kill processes running within container \n  identified by container ID.\n\
    \nOptions:\n  -f, --force            kill container process with SIGKILL\n  -h,\
    \ --help             help for kill\n  -s, --signal string    signal sent to the\
    \ container (default \"SIGTERM\")\n  -t, --timeout uint32   timeout in second\
    \ before killing container\n\n\nExamples:\n  $ singularity oci kill mycontainer\
    \ INT\n  $ singularity oci kill mycontainer -s INT\n\n\nFor additional help or\
    \ support, please visit https://www.sylabs.io/docs/\n"
  generated_using: *id003
- !Command
  command: *id021
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: exec
    optional: false
  - !Positional
    description: ''
    position: 5
    name: container_ID
    optional: false
  - !Positional
    description: ''
    position: 6
    name: command
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"exec\": requires at least 1 arg(s), only received\
    \ 0\n\nUsage:\n  singularity [global options...] oci exec <container_ID> <command>\
    \ <args>\n\nRun 'singularity oci exec --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id022
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: resume
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"resume\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci resume <container_ID>\n\nRun 'singularity\
    \ oci resume --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id023
  positional:
  - !Positional
    description: 'Examples:'
    position: 0
    name: synchronization
    optional: false
  named:
  - !Flag
    description: specify the OCI bundle path (required)
    synonyms:
    - -b
    - --bundle
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: "specify the log file format. Available\nformats are basic, kubernetes\
      \ and json\n(default \"kubernetes\")"
    synonyms:
    - --log-format
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specify the log file path
    synonyms:
    - -l
    - --log-path
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specify the pid file
    synonyms:
    - --pid-file
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: specify the path to unix socket for state
    synonyms:
    - -s
    - --sync-socket
    args: !SimpleFlagArg
      name: string
    optional: true
  parent: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: help for run
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Create/start/attach/delete a container from a bundle directory (root\
    \ user only)\n\nUsage:\n  singularity oci run -b <bundle_path> [run options...]\
    \ <container_ID>\n\nDescription:\n  Run will invoke equivalent of create/start/attach/delete\
    \ commands in a row.\n\nOptions:\n  -b, --bundle string        specify the OCI\
    \ bundle path (required)\n  -h, --help                 help for run\n      --log-format\
    \ string    specify the log file format. Available\n                         \
    \    formats are basic, kubernetes and json\n                             (default\
    \ \"kubernetes\")\n  -l, --log-path string      specify the log file path\n  \
    \    --pid-file string      specify the pid file\n  -s, --sync-socket string \
    \  specify the path to unix socket for state\n                             synchronization\n\
    \n\nExamples:\n  $ singularity oci run -b ~/bundle mycontainer\n\n  is equivalent\
    \ to :\n\n  $ singularity oci create -b ~/bundle mycontainer\n  $ singularity\
    \ oci start mycontainer\n  $ singularity oci attach mycontainer\n  $ singularity\
    \ oci delete mycontainer\n\n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
  generated_using: *id003
- !Command
  command: *id024
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: start
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"start\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci start <container_ID>\n\nRun 'singularity\
    \ oci start --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id025
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: pause
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"pause\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci pause <container_ID>\n\nRun 'singularity\
    \ oci pause --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id026
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: state
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"state\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci state <container_ID>\n\nRun 'singularity\
    \ oci state --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id027
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: mount
    optional: false
  - !Positional
    description: ''
    position: 5
    name: sif_image
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"mount\": accepts 2 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci mount <sif_image> <bundle_path>\n\nRun\
    \ 'singularity oci mount --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id028
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: attach
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"attach\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci attach <container_ID>\n\nRun 'singularity\
    \ oci attach --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id029
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: update
    optional: true
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"update\": requires at least 1 arg(s), only received\
    \ 0\n\nUsage:\n  singularity [global options...] oci update [update options...]\
    \ <container_ID>\n\nRun 'singularity oci update --help' for more detailed usage\
    \ information.\n"
  generated_using: *id005
- !Command
  command: *id030
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: umount
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"umount\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci umount <bundle_path>\n\nRun 'singularity\
    \ oci umount --help' for more detailed usage information.\n"
  generated_using: *id005
- !Command
  command: *id031
  positional:
  - !Positional
    description: ''
    position: 0
    name: singularity
    optional: false
  - !Positional
    description: ''
    position: 1
    name: global
    optional: true
  - !Positional
    description: ''
    position: 2
    name: options...
    optional: true
  - !Positional
    description: ''
    position: 3
    name: oci
    optional: false
  - !Positional
    description: ''
    position: 4
    name: delete
    optional: false
  named: []
  parent: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Error for command \"delete\": accepts 1 arg(s), received 0\n\nUsage:\n\
    \  singularity [global options...] oci delete <container_ID>\n\nRun 'singularity\
    \ oci delete --help' for more detailed usage information.\n"
  generated_using: *id005
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Manage OCI containers\n\nUsage:\n  singularity oci\n\nDescription:\n \
  \ Allow you to manage containers from OCI bundle directories.\n\n  NOTE: all oci\
  \ commands requires to run as root\n\nOptions:\n  -h, --help   help for oci\n\n\
  Available Commands:\n  attach      Attach console to a running container process\
  \ (root user only)\n  create      Create a container from a bundle directory (root\
  \ user only)\n  delete      Delete container (root user only)\n  exec        Execute\
  \ a command within container (root user only)\n  kill        Kill a container (root\
  \ user only)\n  mount       Mount create an OCI bundle from SIF image (root user\
  \ only)\n  pause       Suspends all processes inside the container (root user only)\n\
  \  resume      Resumes all processes previously paused inside the container (root\
  \ user only)\n  run         Create/start/attach/delete a container from a bundle\
  \ directory (root user only)\n  start       Start container process (root user only)\n\
  \  state       Query state of a container (root user only)\n  umount      Umount\
  \ delete bundle (root user only)\n  update      Update container cgroups resources\
  \ (root user only)\n\nExamples:\n  All group commands have their own help output:\n\
  \n  $ singularity oci create -b ~/bundle mycontainer\n  $ singularity oci start\
  \ mycontainer\n\n\nFor additional help or support, please visit https://www.sylabs.io/docs/\n"
generated_using: *id003
