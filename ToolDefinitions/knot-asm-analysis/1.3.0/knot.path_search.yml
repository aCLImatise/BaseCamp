&id001 !Command
command:
- knot.path_search
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --search-mode
  description: "what path search optimize, number of base or number of\nnode (default:\
    \ base)"
  args: !ChoiceFlagArg
    choices: !!set
      node:
      base:
- !Flag
  optional: true
  synonyms:
  - --self-lookup
  description: "if it set knot search path between extremity of same\ncontig (default:\
    \ False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands:
- !Command
  command:
  - knot.path_search
  - ovl_graph
  positional:
  - !Positional
    optional: false
    position: 0
    name: knot.path_search
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --self-lookup
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --search-mode
    description: ''
    args: !ChoiceFlagArg
      choices: !!set
        node:
        base:
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: knot.path_search [-h] [--search-mode {base,node}] [--self-lookup]\n\
    \                        search result ovl_graph read2asm asm_graph tig2tig\n\
    knot.path_search: error: argument search: can't open 'ovl_graph': [Errno 2] No\
    \ such file or directory: 'ovl_graph'\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/knot-asm-analysis:1.3.0--py_0
- !Command
  command:
  - knot.path_search
  - asm_graph
  positional:
  - !Positional
    optional: false
    position: 0
    name: knot.path_search
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --self-lookup
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --search-mode
    description: ''
    args: !ChoiceFlagArg
      choices: !!set
        node:
        base:
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: knot.path_search [-h] [--search-mode {base,node}] [--self-lookup]\n\
    \                        search result ovl_graph read2asm asm_graph tig2tig\n\
    knot.path_search: error: argument search: can't open 'asm_graph': [Errno 2] No\
    \ such file or directory: 'asm_graph'\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/knot-asm-analysis:1.3.0--py_0
- !Command
  command:
  - knot.path_search
  - search
  positional:
  - !Positional
    optional: false
    position: 0
    name: knot.path_search
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --self-lookup
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --search-mode
    description: ''
    args: !ChoiceFlagArg
      choices: !!set
        node:
        base:
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: knot.path_search [-h] [--search-mode {base,node}] [--self-lookup]\n\
    \                        search result ovl_graph read2asm asm_graph tig2tig\n\
    knot.path_search: error: argument search: can't open 'search': [Errno 2] No such\
    \ file or directory: 'search'\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/knot-asm-analysis:1.3.0--py_0
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: knot.path_search [-h] [--search-mode {base,node}] [--self-lookup]\n\
  \                        search result ovl_graph read2asm asm_graph tig2tig\n\n\
  positional arguments:\n  search\n  result\n  ovl_graph\n  read2asm\n  asm_graph\n\
  \  tig2tig\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  --search-mode {base,node}\n                        what path search\
  \ optimize, number of base or number of\n                        node (default:\
  \ base)\n  --self-lookup         if it set knot search path between extremity of\
  \ same\n                        contig (default: False)\n"
generated_using: *id002
docker_image: quay.io/biocontainers/knot-asm-analysis:1.3.0--py_0
