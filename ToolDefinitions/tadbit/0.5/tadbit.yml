!Command
command: &id001
- tadbit
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - tadbit
  - clean
  positional: []
  named:
  - !Flag
    description: In case folder was moved, input the new path
    synonyms:
    - --change_workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to working directory (generated with the tool tadbit mapper)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: jobids of the files and entries to be removed
    synonyms:
    - -j
    - --jobids
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: delete files, otherwise only DB entries.
    synonyms:
    - --delete
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: compress files and update paths accordingly
    synonyms:
    - --compress
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  parent: &id003 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        description: In case folder was moved, input the new path
        synonyms:
        - --change_workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to working directory (generated with the tool tadbit mapper)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: jobids of the files and entries to be removed
        synonyms:
        - -j
        - --jobids
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: delete files, otherwise only DB entries.
        synonyms:
        - --delete
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: compress files and update paths accordingly
        synonyms:
        - --compress
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit clean [-h] [-w PATH] [-j INT [INT ...]] [--delete]\
        \ [--compress] [--noX]\n                    [--change_workdir PATH] [--tmpdb\
        \ PATH]\n\nDelete jobs and results of a given list of jobids in a given directories\n\
        \noptional arguments:\n  -h, --help               show this help message and\
        \ exit\n  --change_workdir PATH    In case folder was moved, input the new\
        \ path\n\nGeneral options:\n  -w PATH, --workdir PATH  path to working directory\
        \ (generated with the tool tadbit mapper)\n  -j INT [INT ...], --jobids INT\
        \ [INT ...]\n                           jobids of the files and entries to\
        \ be removed\n  --delete                 delete files, otherwise only DB entries.\n\
        \  --compress               compress files and update paths accordingly\n\
        \  --noX                    no display server (X screen)\n  --tmpdb PATH \
        \            if provided uses this directory to manipulate the database\n"
      generated_using: &id004
      - --help
    - !Command
      command: &id005
      - tadbit
      - map
      positional: []
      named:
      - !Flag
        description: generate a Hi-C specific quality plot from FASTQ and exits
        synonyms:
        - --skip_mapping
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: path to an output folder.
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to a FASTQ files (can be compressed files)
        synonyms:
        - --fastq
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "(beta) path to a FASTQ file of read 2 (can be compressed files).\n\
          Needed for fast_fragment"
        synonyms:
        - --fastq2
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: paths to file(s) with indexed FASTA files of the reference genome.
        synonyms:
        - --index
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "paths to file(s) with FASTA files of the reference genome. Needed\n\
          for fast_fragment mapping. If many, files will be concatenated.\nI.e.: --genome\
          \ chr_1.fa chr_2.fa In this last case, order is\nimportant or the rest of\
          \ the analysis. Note: it can also be the path\nto a previously parsed genome\
          \ in pickle format."
        synonyms:
        - --genome
        args: !RepeatFlagArg
          name: PATH
        optional: true
      - !Flag
        description: read number
        synonyms:
        - --read
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "restriction enzyme name(s). Use \"--renz CHECK\" to search for\
          \ most\nprobable and exit; and use \"--renz NONE\" to avoid using RE site\n\
          information."
        synonyms:
        - --renz
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: '[fasta header] chromosome name(s). Used in the same order as
          data.'
        synonyms:
        - --chr_name
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: path to a temporary directory (default next to "workdir" directory)
        synonyms:
        - --tmp
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[DEBUG] in case already mapped.'
        synonyms:
        - --skip
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[DEBUG] keep temporary files.'
        synonyms:
        - --keep_tmp
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "default mapping strategy is fragment based use this flag for\n\
          iterative mapping"
        synonyms:
        - --iterative
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "(beta) use fast fragment mapping. Both fastq files are mapped\
          \ using\nfragment based mapping in GEM v3. The output file is an intersected\n\
          read file than can be used directly in tadbit filter (no tadbit\nparse needed).\
          \ Access to samtools is needed for fast_fragment to\nwork. --fastq2 and\
          \ --genome needs to be specified and --read value\nshould be 0."
        synonyms:
        - --fast_fragment
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "defines windows to be used to trim the input FASTQ reads, for\n\
          example an iterative mapping can be defined as: \"--windows 1:20 1:25\n\
          1:30 1:35 1:40 1:45 1:50\". But this parameter can also be used for\nfragment\
          \ based mapping if for example pair-end reads are both in the\nsame FASTQ,\
          \ for example: \"--windows 1:50\" (if the length of the\nreads is 100).\
          \ Note: that the numbers are both inclusive."
        synonyms:
        - --windows
        args: !RepeatFlagArg
          name: WINDOWS
        optional: true
      - !Flag
        description: "[8] Maximum number of CPU cores available in the execution host.\
          \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
          (if 0 all available) cores will be used"
        synonyms:
        - -C
        - --cpus
        args: !SimpleFlagArg
          name: CPUS
        optional: true
      - !Flag
        description: '[gem] mapper used, options are gem, bowtie2 or hisat2'
        synonyms:
        - --mapper
        args: !SimpleFlagArg
          name: STR
        optional: true
      - !Flag
        description: '[None] path to mapper binary'
        synonyms:
        - --mapper_binary
        args: !SimpleFlagArg
          name: STR
        optional: true
      - !Flag
        description: "any parameter that could be passed to the GEM, BOWTIE2 or HISAT2\n\
          mapper. e.g. if we want to set the proportion of mismatches to 0.05\nand\
          \ the maximum indel length to 10, (in GEM it would be: -e 0.05\n--max-big-indel-length\
          \ 10), here we could write: \"--gem_param e:0.05\nmax-big-indel-length:10\"\
          . IMPORTANT: some options are incompatible\nwith 3C-derived experiments."
        synonyms:
        - --mapper_param
        args: !RepeatFlagArg
          name: MAPPER_PARAM
        optional: true
      - !Flag
        description: species name
        synonyms:
        - --species
        args: !SimpleFlagArg
          name: STR
        optional: true
      - !Flag
        description: "extra descriptive fields each filed separated by coma, and inside\n\
          each, name and value separated by column:\n--descr=cell:lymphoblast,flowcell:C68AEACXX,index:24nf\n"
        synonyms:
        - --descr
        args: !RepeatFlagArg
          name: LIST
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit map [-h] [--skip_mapping] -w PATH --fastq PATH [--fastq2\
        \ PATH] --index PATH\n                  [--genome PATH [PATH ...]] --read\
        \ INT --renz STR [STR ...]\n                  [--chr_name STR [STR ...]] [--tmp\
        \ PATH] [--tmpdb PATH] [--noX] [--iterative]\n                  [--fast_fragment]\
        \ [--windows WINDOWS [WINDOWS ...]] [--species STR]\n                  [--descr\
        \ LIST [LIST ...]] [--skip] [--keep_tmp] [-C CPUS] [--mapper STR]\n      \
        \            [--mapper_binary STR] [--mapper_param MAPPER_PARAM [MAPPER_PARAM\
        \ ...]]\n\nMap Hi-C reads and organize results in an output working directory\n\
        \noptional arguments:\n  -h, --help               show this help message and\
        \ exit\n\nGeneral options:\n  --skip_mapping           generate a Hi-C specific\
        \ quality plot from FASTQ and exits\n  -w PATH, --workdir PATH  path to an\
        \ output folder.\n  --fastq PATH             path to a FASTQ files (can be\
        \ compressed files)\n  --fastq2 PATH            (beta) path to a FASTQ file\
        \ of read 2 (can be compressed files).\n                           Needed\
        \ for fast_fragment\n  --index PATH             paths to file(s) with indexed\
        \ FASTA files of the reference genome.\n  --genome PATH [PATH ...]\n     \
        \                      paths to file(s) with FASTA files of the reference\
        \ genome. Needed\n                           for fast_fragment mapping. If\
        \ many, files will be concatenated.\n                           I.e.: --genome\
        \ chr_1.fa chr_2.fa In this last case, order is\n                        \
        \   important or the rest of the analysis. Note: it can also be the path\n\
        \                           to a previously parsed genome in pickle format.\n\
        \  --read INT               read number\n  --renz STR [STR ...]     restriction\
        \ enzyme name(s). Use \"--renz CHECK\" to search for most\n              \
        \             probable and exit; and use \"--renz NONE\" to avoid using RE\
        \ site\n                           information.\n  --chr_name STR [STR ...]\n\
        \                           [fasta header] chromosome name(s). Used in the\
        \ same order as data.\n  --tmp PATH               path to a temporary directory\
        \ (default next to \"workdir\" directory)\n  --tmpdb PATH             if provided\
        \ uses this directory to manipulate the database\n  --noX                \
        \    no display server (X screen)\n  --skip                   [DEBUG] in case\
        \ already mapped.\n  --keep_tmp               [DEBUG] keep temporary files.\n\
        \nMapping options:\n  --iterative              default mapping strategy is\
        \ fragment based use this flag for\n                           iterative mapping\n\
        \  --fast_fragment          (beta) use fast fragment mapping. Both fastq files\
        \ are mapped using\n                           fragment based mapping in GEM\
        \ v3. The output file is an intersected\n                           read file\
        \ than can be used directly in tadbit filter (no tadbit\n                \
        \           parse needed). Access to samtools is needed for fast_fragment\
        \ to\n                           work. --fastq2 and --genome needs to be specified\
        \ and --read value\n                           should be 0.\n  --windows WINDOWS\
        \ [WINDOWS ...]\n                           defines windows to be used to\
        \ trim the input FASTQ reads, for\n                           example an iterative\
        \ mapping can be defined as: \"--windows 1:20 1:25\n                     \
        \      1:30 1:35 1:40 1:45 1:50\". But this parameter can also be used for\n\
        \                           fragment based mapping if for example pair-end\
        \ reads are both in the\n                           same FASTQ, for example:\
        \ \"--windows 1:50\" (if the length of the\n                           reads\
        \ is 100). Note: that the numbers are both inclusive.\n  -C CPUS, --cpus CPUS\
        \     [8] Maximum number of CPU cores available in the execution host. If\n\
        \                           higher than 1, tasks with multi-threading capabilities\
        \ will enabled\n                           (if 0 all available) cores will\
        \ be used\n  --mapper STR             [gem] mapper used, options are gem,\
        \ bowtie2 or hisat2\n  --mapper_binary STR      [None] path to mapper binary\n\
        \  --mapper_param MAPPER_PARAM [MAPPER_PARAM ...]\n                      \
        \     any parameter that could be passed to the GEM, BOWTIE2 or HISAT2\n \
        \                          mapper. e.g. if we want to set the proportion of\
        \ mismatches to 0.05\n                           and the maximum indel length\
        \ to 10, (in GEM it would be: -e 0.05\n                           --max-big-indel-length\
        \ 10), here we could write: \"--gem_param e:0.05\n                       \
        \    max-big-indel-length:10\". IMPORTANT: some options are incompatible\n\
        \                           with 3C-derived experiments.\n\nDescriptive, optional\
        \ arguments:\n  --species STR            species name\n  --descr LIST [LIST\
        \ ...]  extra descriptive fields each filed separated by coma, and inside\n\
        \                           each, name and value separated by column:\n  \
        \                         --descr=cell:lymphoblast,flowcell:C68AEACXX,index:24nf\n"
      generated_using: *id004
    - !Command
      command: &id006
      - tadbit
      - describe
      positional: []
      named:
      - !Flag
        description: path to working directory (generated with the tool tadbit map)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "[ ...], --tables  [ ...]\n[['1', '2', '3', '4', '5', '6', '7',\
          \ '8', '9', '10', '11', '12',\n'13']] what tables to show, write either\
          \ the sequence of names or\nindexes, according to this list: 11: segment_outputs,\
          \ 10:\nmerge_outputs, 13: modeled_regions, 12: models, 1: paths, 3:\nmapped_outputs,\
          \ 2: jobs, 5: parsed_outputs, 4: mapped_inputs, 7:\nfilter_outputs, 6: intersection_outputs,\
          \ 9: merge_stats, 8:\nnormalize_outputs"
        synonyms:
        - -t
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "[ ...], --skip_tables  [ ...]\n[[]] what tables NOT to show,\
          \ write either the sequence of names or\nindexes, according to this list:\
          \ 11: segment_outputs, 10:\nmerge_outputs, 13: modeled_regions, 12: models,\
          \ 1: paths, 3:\nmapped_outputs, 2: jobs, 5: parsed_outputs, 4: mapped_inputs,\
          \ 7:\nfilter_outputs, 6: intersection_outputs, 9: merge_stats, 8:\nnormalize_outputs"
        synonyms:
        - -T
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Display only items matching these jobids.
        synonyms:
        - -j
        - --jobids
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: "Select rows. List pairs of keywords (column header) and values\
          \ to\nfilter results. For example to get only results where \"18\" appears\n\
          in the column \"Chromosome\", the option should be set as: `-W\nChromosome,18`"
        synonyms:
        - -W
        - --where
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: "Select columns. List the keyword (column headers) to be displayed.\n\
          E.g. to show only the colmns JobIds: `-s Jobids`"
        synonyms:
        - -s
        - --select
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: Print output in tab separated format
        synonyms:
        - --tsv
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Writes output in specified file.\n"
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: OUTPUT
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit describe [-h] [-w PATH] [--noX] [-t  [...]] [-T  [...]]\
        \ [-j INT [INT ...]]\n                       [-W STR [STR ...]] [-s STR [STR\
        \ ...]] [--tmpdb PATH] [--tsv] [-o OUTPUT]\n\nDescribe jobs and results in\
        \ a given working directory\n\noptional arguments:\n  -h, --help         \
        \      show this help message and exit\n\nGeneral options:\n  -w PATH, --workdir\
        \ PATH  path to working directory (generated with the tool tadbit map)\n \
        \ --noX                    no display server (X screen)\n  -t  [ ...], --tables\
        \  [ ...]\n                           [['1', '2', '3', '4', '5', '6', '7',\
        \ '8', '9', '10', '11', '12',\n                           '13']] what tables\
        \ to show, write either the sequence of names or\n                       \
        \    indexes, according to this list: 11: segment_outputs, 10:\n         \
        \                  merge_outputs, 13: modeled_regions, 12: models, 1: paths,\
        \ 3:\n                           mapped_outputs, 2: jobs, 5: parsed_outputs,\
        \ 4: mapped_inputs, 7:\n                           filter_outputs, 6: intersection_outputs,\
        \ 9: merge_stats, 8:\n                           normalize_outputs\n  -T \
        \ [ ...], --skip_tables  [ ...]\n                           [[]] what tables\
        \ NOT to show, write either the sequence of names or\n                   \
        \        indexes, according to this list: 11: segment_outputs, 10:\n     \
        \                      merge_outputs, 13: modeled_regions, 12: models, 1:\
        \ paths, 3:\n                           mapped_outputs, 2: jobs, 5: parsed_outputs,\
        \ 4: mapped_inputs, 7:\n                           filter_outputs, 6: intersection_outputs,\
        \ 9: merge_stats, 8:\n                           normalize_outputs\n  -j INT\
        \ [INT ...], --jobids INT [INT ...]\n                           Display only\
        \ items matching these jobids.\n  -W STR [STR ...], --where STR [STR ...]\n\
        \                           Select rows. List pairs of keywords (column header)\
        \ and values to\n                           filter results. For example to\
        \ get only results where \"18\" appears\n                           in the\
        \ column \"Chromosome\", the option should be set as: `-W\n              \
        \             Chromosome,18`\n  -s STR [STR ...], --select STR [STR ...]\n\
        \                           Select columns. List the keyword (column headers)\
        \ to be displayed.\n                           E.g. to show only the colmns\
        \ JobIds: `-s Jobids`\n  --tmpdb PATH             if provided uses this directory\
        \ to manipulate the database\n  --tsv                    Print output in tab\
        \ separated format\n  -o OUTPUT, --output OUTPUT\n                       \
        \    Writes output in specified file.\n"
      generated_using: *id004
    - !Command
      command: &id007
      - tadbit
      - bin
      positional: []
      named:
      - !Flag
        description: path to working directory (generated with the tool tadbit mapper)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: resolution at which to output matrices
        synonyms:
        - -r
        - --resolution
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "path to a TADbit-generated BAM file with all reads (other wise\
          \ the\ntool will guess from the working directory database)"
        synonyms:
        - --bam
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "Use as input data generated by a job with a given jobid. Use\
          \ tadbit\ndescribe to find out which."
        synonyms:
        - -j
        - --jobid
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: overwrite previously run job
        synonyms:
        - --force
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: remove all messages
        synonyms:
        - -q
        - --quiet
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: maximum number of chunks into which to cut the BAM
        synonyms:
        - --nchunks
        args: !SimpleFlagArg
          name: NCHUNKS
        optional: true
      - !Flag
        description: "[8] Maximum number of CPU cores available in the execution host.\
          \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
          (if 0 all available) cores will be used"
        synonyms:
        - -C
        - --cpus
        args: !SimpleFlagArg
          name: CPUS
        optional: true
      - !Flag
        description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
          pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
          \ to: 0: nothing, 1: self-circle, 2: dangling-end,\n3: error, 4: extra dangling-end,\
          \ 5: too close from RES, 6: too\nshort, 7: too large, 8: over-represented,\
          \ 9: duplicated, 10: random\nbreaks, 11: trans-chromosomic"
        synonyms:
        - -F
        - --filter
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: path to file with pre-calculated biases by columns
        synonyms:
        - --biases
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[['raw']] normalization(s) to apply. Choices are: [norm, decay,\
          \ raw,\nraw&decay]"
        synonyms:
        - --norm
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: "Write text matrix in multiple columns (square). By defaults\
          \ matrices\nare written in BED-like format (also only way to get a raw matrix\n\
          with all values including the ones in masked columns)."
        synonyms:
        - --matrix
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Write i,j,v matrix in cooler format instead of text.
        synonyms:
        - --cooler
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "To store row names in the output text matrix. WARNING: when\
          \ non-\nmatrix, results in two extra columns"
        synonyms:
        - --rownames
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[False] Skip writing matrix in text format.'
        synonyms:
        - --only_plot
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[False] Open matplotlib interactive plot (nothing will be saved).'
        synonyms:
        - -i
        - --interactive
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ", --coord             Coordinate of the region to retrieve.\
          \ By default all genome,\narguments can be either one chromosome name, or\
          \ the coordinate in\nthe form: \"-c chr3:110000000-120000000\""
        synonyms:
        - -c
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ", --coord2           Coordinate of a second region to retrieve\
          \ the matrix in the\nintersection with the first region."
        synonyms:
        - -c2
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Save only text file for matrices, not images
        synonyms:
        - --only_txt
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Plot matrix in desired format.
        synonyms:
        - --plot
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Force plotting even with demoniacally big matrices (more than\n\
          5000x5000, or 1500x1500with interactive option)."
        synonyms:
        - --force_plot
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "[False] represents only half matrix. Note that this also results\
          \ in\ntruly vectorial images of matrix."
        synonyms:
        - --triangular
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[-25] x-tick rotation'
        synonyms:
        - --xtick_rotation
        args: !SimpleFlagArg
          name: XTICK_ROTATION
        optional: true
      - !Flag
        description: '[viridis] Matplotlib color map to use.'
        synonyms:
        - --cmap
        args: !SimpleFlagArg
          name: CMAP
        optional: true
      - !Flag
        description: "[white] Matplotlib color to use on bins filtered out (only used\
          \ with\nnormalized matrices, not raw)."
        synonyms:
        - --bad_color
        args: !SimpleFlagArg
          name: BAD_COLOR
        optional: true
      - !Flag
        description: '[png] plot file format.'
        synonyms:
        - --format
        args: !SimpleFlagArg
          name: FORMAT
        optional: true
      - !Flag
        description: 'Range, in log2 scale of the color scale. i.e.: --zrange=-2,2'
        synonyms:
        - --zrange
        args: !SimpleFlagArg
          name: ZRANGE
        optional: true
      - !Flag
        description: '[log2] can be any of [log2, log, none]'
        synonyms:
        - --transform
        args: !ChoiceFlagArg
          choices: !!set
            ? log
            ? none
            ? log2
        optional: true
      - !Flag
        description: "Range, in log2 scale of the color scale. default for triangular\n\
          matrices: --figsize=16,10 and for square matrices: --figsize=16,14\n"
        synonyms:
        - --figsize
        args: !SimpleFlagArg
          name: FIGSIZE
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit bin [-h] -w PATH [--noX] -r INT [--bam PATH] [-j INT]\
        \ [--force] [-q]\n                  [--tmpdb PATH] [--nchunks NCHUNKS] [-C\
        \ CPUS] [--matrix] [--cooler]\n                  [--rownames] [--plot] [--force_plot]\
        \ [--only_plot] [-i] [--triangular]\n                  [--xtick_rotation XTICK_ROTATION]\
        \ [--cmap CMAP] [--bad_color BAD_COLOR]\n                  [--format FORMAT]\
        \ [--zrange ZRANGE] [--transform {log2,log,none}]\n                  [--figsize\
        \ FIGSIZE] [-c] [-c2] [--biases PATH] [--norm STR [STR ...]]\n           \
        \       [-F INT [INT ...]] [--only_txt]\n\nbin Hi-C data into matrices\n\n\
        optional arguments:\n  -h, --help               show this help message and\
        \ exit\n\nRequired options:\n  -w PATH, --workdir PATH  path to working directory\
        \ (generated with the tool tadbit mapper)\n  -r INT, --resolution INT\n  \
        \                         resolution at which to output matrices\n\nGeneral\
        \ options:\n  --noX                    no display server (X screen)\n  --bam\
        \ PATH               path to a TADbit-generated BAM file with all reads (other\
        \ wise the\n                           tool will guess from the working directory\
        \ database)\n  -j INT, --jobid INT      Use as input data generated by a job\
        \ with a given jobid. Use tadbit\n                           describe to find\
        \ out which.\n  --force                  overwrite previously run job\n  -q,\
        \ --quiet              remove all messages\n  --tmpdb PATH             if\
        \ provided uses this directory to manipulate the database\n  --nchunks NCHUNKS\
        \        maximum number of chunks into which to cut the BAM\n  -C CPUS, --cpus\
        \ CPUS     [8] Maximum number of CPU cores available in the execution host.\
        \ If\n                           higher than 1, tasks with multi-threading\
        \ capabilities will enabled\n                           (if 0 all available)\
        \ cores will be used\n\nRead filtering options:\n  -F INT [INT ...], --filter\
        \ INT [INT ...]\n                           [[1, 2, 3, 4, 6, 7, 9, 10]] Use\
        \ filters to define a set os valid\n                           pair of reads\
        \ e.g.: '--apply 1 2 3 4 8 9 10'. Where these\n                          \
        \ numberscorrespond to: 0: nothing, 1: self-circle, 2: dangling-end,\n   \
        \                        3: error, 4: extra dangling-end, 5: too close from\
        \ RES, 6: too\n                           short, 7: too large, 8: over-represented,\
        \ 9: duplicated, 10: random\n                           breaks, 11: trans-chromosomic\n\
        \nNormalization options:\n  --biases PATH            path to file with pre-calculated\
        \ biases by columns\n  --norm STR [STR ...]     [['raw']] normalization(s)\
        \ to apply. Choices are: [norm, decay, raw,\n                           raw&decay]\n\
        \nOutput options:\n  --matrix                 Write text matrix in multiple\
        \ columns (square). By defaults matrices\n                           are written\
        \ in BED-like format (also only way to get a raw matrix\n                \
        \           with all values including the ones in masked columns).\n  --cooler\
        \                 Write i,j,v matrix in cooler format instead of text.\n \
        \ --rownames               To store row names in the output text matrix. WARNING:\
        \ when non-\n                           matrix, results in two extra columns\n\
        \  --only_plot              [False] Skip writing matrix in text format.\n\
        \  -i, --interactive        [False] Open matplotlib interactive plot (nothing\
        \ will be saved).\n  -c , --coord             Coordinate of the region to\
        \ retrieve. By default all genome,\n                           arguments can\
        \ be either one chromosome name, or the coordinate in\n                  \
        \         the form: \"-c chr3:110000000-120000000\"\n  -c2 , --coord2    \
        \       Coordinate of a second region to retrieve the matrix in the\n    \
        \                       intersection with the first region.\n  --only_txt\
        \               Save only text file for matrices, not images\n\nPlotting options:\n\
        \  --plot                   Plot matrix in desired format.\n  --force_plot\
        \             Force plotting even with demoniacally big matrices (more than\n\
        \                           5000x5000, or 1500x1500with interactive option).\n\
        \  --triangular             [False] represents only half matrix. Note that\
        \ this also results in\n                           truly vectorial images\
        \ of matrix.\n  --xtick_rotation XTICK_ROTATION\n                        \
        \   [-25] x-tick rotation\n  --cmap CMAP              [viridis] Matplotlib\
        \ color map to use.\n  --bad_color BAD_COLOR    [white] Matplotlib color to\
        \ use on bins filtered out (only used with\n                           normalized\
        \ matrices, not raw).\n  --format FORMAT          [png] plot file format.\n\
        \  --zrange ZRANGE          Range, in log2 scale of the color scale. i.e.:\
        \ --zrange=-2,2\n  --transform {log2,log,none}\n                         \
        \  [log2] can be any of [log2, log, none]\n  --figsize FIGSIZE        Range,\
        \ in log2 scale of the color scale. default for triangular\n             \
        \              matrices: --figsize=16,10 and for square matrices: --figsize=16,14\n"
      generated_using: *id004
    - !Command
      command: &id008
      - tadbit
      - parse
      positional: []
      named:
      - !Flag
        description: path to working directory (generated with the tool tadbit mapper)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: '[map]file type to be parser, MAP (GEM-mapper), SAM or BAM'
        synonyms:
        - --type
        args: !SimpleFlagArg
          name: STR
        optional: true
      - !Flag
        description: In case only one of the reads needs to be parsed
        synonyms:
        - --read
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "default: --filter_chrom\n\"^(chr)?[A-Za-z]?[0-9]{0,3}[XVI]{0,3}(?:ito)?[A-Z-a-z]?(_dna)?$\"\
          ,\nregexp to consider only chromosome names passing"
        synonyms:
        - --filter_chrom
        args: !SimpleFlagArg
          name: FILTER_CHROM
        optional: true
      - !Flag
        description: '[DEBUG] in case already mapped.'
        synonyms:
        - --skip
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Compress input mapped files when parsing is done. This is done\
          \ in\nbackground, while next MAP file is processed, or while reads are\n\
          sorted."
        synonyms:
        - --compress_input
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "paths to file(s) with FASTA files of the reference genome. If\
          \ many,\nfiles will be concatenated. I.e.: --genome chr_1.fa chr_2.fa In\
          \ this\nlast case, order is important or the rest of the analysis. Note:\
          \ it\ncan also be the path to a previously parsed genome in pickle format."
        synonyms:
        - --genome
        args: !RepeatFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "Use as input data generated by a job with a given jobid(s).\
          \ Use\ntadbit describe to find out which. In this case one jobid can be\n\
          passed per read."
        synonyms:
        - --jobids
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit parse [-h] [-w PATH] [--type STR] [--read INT] [--filter_chrom\
        \ FILTER_CHROM]\n                    [--skip] [--compress_input] [--tmpdb\
        \ PATH] [--genome PATH [PATH ...]]\n                    [--jobids INT [INT\
        \ ...]] [--noX]\n\nParse mapped Hi-C reads and get the intersection\n\noptional\
        \ arguments:\n  -h, --help               show this help message and exit\n\
        \nGeneral options:\n  -w PATH, --workdir PATH  path to working directory (generated\
        \ with the tool tadbit mapper)\n  --type STR               [map]file type\
        \ to be parser, MAP (GEM-mapper), SAM or BAM\n  --read INT               In\
        \ case only one of the reads needs to be parsed\n  --filter_chrom FILTER_CHROM\n\
        \                           default: --filter_chrom\n                    \
        \       \"^(chr)?[A-Za-z]?[0-9]{0,3}[XVI]{0,3}(?:ito)?[A-Z-a-z]?(_dna)?$\"\
        ,\n                           regexp to consider only chromosome names passing\n\
        \  --skip                   [DEBUG] in case already mapped.\n  --compress_input\
        \         Compress input mapped files when parsing is done. This is done in\n\
        \                           background, while next MAP file is processed,\
        \ or while reads are\n                           sorted.\n  --tmpdb PATH \
        \            if provided uses this directory to manipulate the database\n\
        \  --genome PATH [PATH ...]\n                           paths to file(s) with\
        \ FASTA files of the reference genome. If many,\n                        \
        \   files will be concatenated. I.e.: --genome chr_1.fa chr_2.fa In this\n\
        \                           last case, order is important or the rest of the\
        \ analysis. Note: it\n                           can also be the path to a\
        \ previously parsed genome in pickle format.\n  --jobids INT [INT ...]   Use\
        \ as input data generated by a job with a given jobid(s). Use\n          \
        \                 tadbit describe to find out which. In this case one jobid\
        \ can be\n                           passed per read.\n  --noX           \
        \         no display server (X screen)\n"
      generated_using: *id004
    - !Command
      command: &id009
      - tadbit
      - segment
      positional:
      - !Positional
        description: --only_tads              search TAD boundaries break-point detection
          algorithm
        position: 0
        name: matrix
        optional: false
      named:
      - !Flag
        description: path to working directory (generated with the tool tadbit mapper)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: do not load/store data from/in sqlite database
        synonyms:
        - --nosql
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: skip the filtering of bins for detection of TADs
        synonyms:
        - --all_bins
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: path valid-pairs file (TADbit BAM format)
        synonyms:
        - --mreads
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to file with precalculated biases by columns
        synonyms:
        - --biases
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: resolution at which to output matrices
        synonyms:
        - -r
        - --resolution
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: path to a matrix file with normalized read counts
        synonyms:
        - --norm_matrix
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to a matrix file with raw read counts
        synonyms:
        - --raw_matrix
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
          pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
          \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end,\
          \ 5: too close from RES, 6: too short, 7: too\nlarge, 8: over-represented,\
          \ 9: duplicated, 10: random breaks, 11:\ntrans-chromosomic"
        synonyms:
        - -F
        - --filter
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: search A/B compartments using first eigen vector of the correlation
        synonyms:
        - --only_compartments
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: print more messages
        synonyms:
        - -v
        - --verbose
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Use as input data generated by a job with a given jobid. Use\
          \ tadbit\ndescribe to find out which."
        synonyms:
        - -j
        - --jobid
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: Name of the chromosomes on which to search for TADs or compartments.
        synonyms:
        - -c
        - --chromosomes
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: "[8] Maximum number of CPU cores available in the execution host.\
          \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
          (if 0 all available) cores will be used"
        synonyms:
        - -C
        - --cpu
        args: !SimpleFlagArg
          name: CPUS
        optional: true
      - !Flag
        description: overwrite previously run job
        synonyms:
        - --force
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "path to a BED or bedGraph file with list of protein coding gene\
          \ or\nother active epigenetic mark, to be used to label compartments\ninstead\
          \ of using the relative interaction count."
        synonyms:
        - --rich_in_A
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "Path to fasta file with genome sequence, to compute GC content\
          \ and\nuse it to label compartments"
        synonyms:
        - --fasta
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: Save correlation matrix used to predict compartments.
        synonyms:
        - --savecorr
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Correlation matrix plot scaled between correlation 1 and -1\
          \ instead\nof maximum observed values."
        synonyms:
        - --fix_corr_scale
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[png] file format for figures'
        synonyms:
        - --format
        args: !SimpleFlagArg
          name: FORMAT
        optional: true
      - !Flag
        description: "[3] Number of eigenvectors to store. if \"-1\" all eigenvectors\
          \ will\nbe calculated"
        synonyms:
        - --n_evs
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "list of indexes of eigenvectors capturing compartments signal\
          \ (one\nindex per chromosome, in the same order as chromosomes in fasta\n\
          file). Example picking the first eigenvector for all chromosomes but\nfor\
          \ chromosome 3: '--ev_index 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1\
          \ 1"
        synonyms:
        - --ev_index
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: "an integer defining the maximum size of TAD. Default defines\
          \ it as\nthe number of rows/columns\n"
        synonyms:
        - --max_tad_size
        args: !SimpleFlagArg
          name: INT
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit segment [-h] -w PATH [--tmpdb PATH] [--nosql] [--all_bins]\
        \ [--mreads PATH]\n                      [--biases PATH] -r INT [--norm_matrix\
        \ PATH] [--raw_matrix PATH]\n                      [-F INT [INT ...]] [--noX]\
        \ [--rich_in_A PATH] [--fasta PATH] [--savecorr]\n                      [--fix_corr_scale]\
        \ [--format FORMAT] [--n_evs INT]\n                      [--ev_index INT [INT\
        \ ...]] [--only_compartments] [--only_tads] [-v]\n                      [-j\
        \ INT] [-c STR [STR ...]] [--max_tad_size INT] [-C CPUS] [--force]\n\nFinds\
        \ TAD or compartment segmentation in Hi-C data.\n\noptional arguments:\n \
        \ -h, --help               show this help message and exit\n\nGeneral options:\n\
        \  -w PATH, --workdir PATH  path to working directory (generated with the\
        \ tool tadbit mapper)\n  --tmpdb PATH             if provided uses this directory\
        \ to manipulate the database\n  --nosql                  do not load/store\
        \ data from/in sqlite database\n  --all_bins               skip the filtering\
        \ of bins for detection of TADs\n  --mreads PATH            path valid-pairs\
        \ file (TADbit BAM format)\n  --biases PATH            path to file with precalculated\
        \ biases by columns\n  -r INT, --resolution INT\n                        \
        \   resolution at which to output matrices\n  --norm_matrix PATH       path\
        \ to a matrix file with normalized read counts\n  --raw_matrix PATH      \
        \  path to a matrix file with raw read counts\n  -F INT [INT ...], --filter\
        \ INT [INT ...]\n                           [[1, 2, 3, 4, 6, 7, 9, 10]] Use\
        \ filters to define a set os valid\n                           pair of reads\
        \ e.g.: '--apply 1 2 3 4 8 9 10'. Where these\n                          \
        \ numberscorrespond to: 1: self-circle, 2: dangling-end, 3: error, 4:\n  \
        \                         extra dangling-end, 5: too close from RES, 6: too\
        \ short, 7: too\n                           large, 8: over-represented, 9:\
        \ duplicated, 10: random breaks, 11:\n                           trans-chromosomic\n\
        \  --noX                    no display server (X screen)\n  --only_compartments\
        \      search A/B compartments using first eigen vector of the correlation\n\
        \                           matrix\n  --only_tads              search TAD\
        \ boundaries break-point detection algorithm\n  -v, --verbose            print\
        \ more messages\n  -j INT, --jobid INT      Use as input data generated by\
        \ a job with a given jobid. Use tadbit\n                           describe\
        \ to find out which.\n  -c STR [STR ...], --chromosomes STR [STR ...]\n  \
        \                         Name of the chromosomes on which to search for TADs\
        \ or compartments.\n  -C CPUS, --cpu CPUS      [8] Maximum number of CPU cores\
        \ available in the execution host. If\n                           higher than\
        \ 1, tasks with multi-threading capabilities will enabled\n              \
        \             (if 0 all available) cores will be used\n  --force         \
        \         overwrite previously run job\n\nCompartment calling options:\n \
        \ --rich_in_A PATH         path to a BED or bedGraph file with list of protein\
        \ coding gene or\n                           other active epigenetic mark,\
        \ to be used to label compartments\n                           instead of\
        \ using the relative interaction count.\n  --fasta PATH             Path to\
        \ fasta file with genome sequence, to compute GC content and\n           \
        \                use it to label compartments\n  --savecorr              \
        \ Save correlation matrix used to predict compartments.\n  --fix_corr_scale\
        \         Correlation matrix plot scaled between correlation 1 and -1 instead\n\
        \                           of maximum observed values.\n  --format FORMAT\
        \          [png] file format for figures\n  --n_evs INT              [3] Number\
        \ of eigenvectors to store. if \"-1\" all eigenvectors will\n            \
        \               be calculated\n  --ev_index INT [INT ...]\n              \
        \             list of indexes of eigenvectors capturing compartments signal\
        \ (one\n                           index per chromosome, in the same order\
        \ as chromosomes in fasta\n                           file). Example picking\
        \ the first eigenvector for all chromosomes but\n                        \
        \   for chromosome 3: '--ev_index 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\
        \                           1 1 1 1\n\nTAD calling options:\n  --max_tad_size\
        \ INT       an integer defining the maximum size of TAD. Default defines it\
        \ as\n                           the number of rows/columns\n"
      generated_using: *id004
    - !Command
      command: &id010
      - tadbit
      - filter
      positional: []
      named:
      - !Flag
        description: overwrite previously run job
        synonyms:
        - --force
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: use filters of previously run job
        synonyms:
        - --resume
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: path to working directory (generated with the tool tadbit mapper)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[8] Maximum number of CPU cores available in the execution host.\
          \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
          (if 0 all available) cores will be used"
        synonyms:
        - -C
        - --cpus
        args: !SimpleFlagArg
          name: CPUS
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "Use as input data generated by a job under a given pathids.\
          \ Use\ntadbit describe to find out which. To filter an intersected file\n\
          produced with tadbit map --fast_fragment only one PATHid is needed\notherwise\
          \ one per read is needed, first for read 1, second for read\n2."
        synonyms:
        - --pathids
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: "Compress input mapped files when parsing is done. This is done\
          \ in\nbackground, while next MAP file is processed, or while reads are\n\
          sorted."
        synonyms:
        - --compress_input
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: path samtools binary
        synonyms:
        - --samtools
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[mid] for compression into pseudo-BAM format. Short contains\
          \ only\npositions of reads mapped, mid everything but restriction sites."
        synonyms:
        - --format
        args: !ChoiceFlagArg
          choices: !!set
            ? short
            ? long
            ? mid
        optional: true
      - !Flag
        description: stores only valid-pairs discards filtered out reads.
        synonyms:
        - --valid
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "remove intermediate files. WARNING: together with format \"\
          short\" or\nvalid options, this may results in losing data"
        synonyms:
        - --clean
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
          pair of reads e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these\nnumberscorrespond\
          \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end,\
          \ 5: too close from RES, 6: too short, 7: too\nlarge, 8: over-represented,\
          \ 9: duplicated, 10: random breaks"
        synonyms:
        - --apply
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: "[0.001%] percentage of restriction-enzyme (RE) genomic fragments\n\
          with more coverage to exclude (possible PCR artifact)."
        synonyms:
        - --over_represented
        args: !SimpleFlagArg
          name: NUM
        optional: true
      - !Flag
        description: "[100000] to exclude large genomic RE fragments (probably resulting\n\
          from gaps in the reference genome)"
        synonyms:
        - --max_frag_size
        args: !SimpleFlagArg
          name: NUM
        optional: true
      - !Flag
        description: "[50] to exclude small genomic RE fragments (smaller than sequenced\n\
          reads)"
        synonyms:
        - --min_frag_size
        args: !SimpleFlagArg
          name: NUM
        optional: true
      - !Flag
        description: "[5] to exclude read-ends falling too close from RE site (pseudo-\n\
          dangling-ends)\n"
        synonyms:
        - --re_proximity
        args: !SimpleFlagArg
          name: NUM
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit filter [-h] [--force] [--resume] [--apply INT [INT\
        \ ...]] [-w PATH] [-C CPUS]\n                     [--noX] [--over_represented\
        \ NUM] [--max_frag_size NUM]\n                     [--min_frag_size NUM] [--re_proximity\
        \ NUM] [--tmpdb PATH]\n                     [--pathids INT [INT ...]] [--compress_input]\
        \ [--format {short,mid,long}]\n                     [--valid] [--clean] [--samtools\
        \ PATH]\n\nFilter parsed Hi-C reads and get valid pair of reads to work with\n\
        \noptional arguments:\n  -h, --help               show this help message and\
        \ exit\n\nGeneral options:\n  --force                  overwrite previously\
        \ run job\n  --resume                 use filters of previously run job\n\
        \  -w PATH, --workdir PATH  path to working directory (generated with the\
        \ tool tadbit mapper)\n  -C CPUS, --cpus CPUS     [8] Maximum number of CPU\
        \ cores available in the execution host. If\n                           higher\
        \ than 1, tasks with multi-threading capabilities will enabled\n         \
        \                  (if 0 all available) cores will be used\n  --noX      \
        \              no display server (X screen)\n  --tmpdb PATH             if\
        \ provided uses this directory to manipulate the database\n  --pathids INT\
        \ [INT ...]  Use as input data generated by a job under a given pathids. Use\n\
        \                           tadbit describe to find out which. To filter an\
        \ intersected file\n                           produced with tadbit map --fast_fragment\
        \ only one PATHid is needed\n                           otherwise one per\
        \ read is needed, first for read 1, second for read\n                    \
        \       2.\n  --compress_input         Compress input mapped files when parsing\
        \ is done. This is done in\n                           background, while next\
        \ MAP file is processed, or while reads are\n                           sorted.\n\
        \  --samtools PATH          path samtools binary\n\nStorage options:\n  --format\
        \ {short,mid,long}\n                           [mid] for compression into\
        \ pseudo-BAM format. Short contains only\n                           positions\
        \ of reads mapped, mid everything but restriction sites.\n  --valid      \
        \            stores only valid-pairs discards filtered out reads.\n  --clean\
        \                  remove intermediate files. WARNING: together with format\
        \ \"short\" or\n                           valid options, this may results\
        \ in losing data\n\nFiltering options:\n  --apply INT [INT ...]    [[1, 2,\
        \ 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n             \
        \              pair of reads e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these\n\
        \                           numberscorrespond to: 1: self-circle, 2: dangling-end,\
        \ 3: error, 4:\n                           extra dangling-end, 5: too close\
        \ from RES, 6: too short, 7: too\n                           large, 8: over-represented,\
        \ 9: duplicated, 10: random breaks\n  --over_represented NUM   [0.001%] percentage\
        \ of restriction-enzyme (RE) genomic fragments\n                         \
        \  with more coverage to exclude (possible PCR artifact).\n  --max_frag_size\
        \ NUM      [100000] to exclude large genomic RE fragments (probably resulting\n\
        \                           from gaps in the reference genome)\n  --min_frag_size\
        \ NUM      [50] to exclude small genomic RE fragments (smaller than sequenced\n\
        \                           reads)\n  --re_proximity NUM       [5] to exclude\
        \ read-ends falling too close from RE site (pseudo-\n                    \
        \       dangling-ends)\n"
      generated_using: *id004
    - !Command
      command: &id011
      - tadbit
      - normalize
      positional: []
      named:
      - !Flag
        description: path to working directory (generated with the tool tadbit mapper)
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: resolution at which to output matrices
        synonyms:
        - -r
        - --resolution
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "path to a TADbit-generated BAM file with all reads (other wise\
          \ the\ntool will guess from the working directory database)"
        synonyms:
        - --bam
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "Use as input data generated by a job with a given jobid. Use\
          \ tadbit\ndescribe to find out which."
        synonyms:
        - -j
        - --jobid
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "[100] Define maximum number of jobs for reading BAM file (set\
          \ to\nhigher numbers for large files and low RAM memory)."
        synonyms:
        - --max_njobs
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: overwrite previously run job
        synonyms:
        - --force
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[8] Maximum number of CPU cores available in the execution host.\
          \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
          (if 0 all available) cores will be used"
        synonyms:
        - -C
        - --cpus
        args: !SimpleFlagArg
          name: CPUS
        optional: true
      - !Flag
        description: skip calculation of Cis-percentage and decay
        synonyms:
        - --normalize_only
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[95%] maximum percentage of zeroes allowed per column.'
        synonyms:
        - --perc_zeros
        args: !SimpleFlagArg
          name: FLOAT
        optional: true
      - !Flag
        description: "[None] minimum number of reads mapped to a bin (recommended\
          \ value\ncould be 2500). If set this option overrides the perc_zero\nfiltering...\
          \ This option is slightly slower."
        synonyms:
        - --min_count
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: '[None] lower percentile from which consider bins as good.'
        synonyms:
        - --min_perc
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: '[None] upper percentile until which consider bins as good.'
        synonyms:
        - --max_perc
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: skip normalization
        synonyms:
        - --filter_only
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "only filter according to the percentage of zero count or minimum\n\
          count of reads"
        synonyms:
        - --fast_filter
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ":POS1-POS2 [CHR:POS1-POS2 ...], --badcols CHR:POS1-POS2 [CHR:POS1-POS2\
          \ ...]\nextra regions to be added to bad-columns (ingenomic position). e.g.:\n\
          --badcols 1:150000000-160000000 2:1200000-1300000"
        synonyms:
        - -B
        args: !SimpleFlagArg
          name: CHR
        optional: true
      - !Flag
        description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
          pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
          \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end,\
          \ 5: too close from RES, 6: too short, 7: too\nlarge, 8: over-represented,\
          \ 9: duplicated, 10: random breaks, 11:\ntrans-chromosomic"
        synonyms:
        - -F
        - --filter
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: input BAM file contains only valid pairs (already filtered).
        synonyms:
        - --valid
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "[Vanilla] normalization(s) to apply. Order matters. Choices:\n\
          Vanilla, ICE, SQRT, oneD, custom"
        synonyms:
        - --normalization
        args: !SimpleFlagArg
          name: STR
        optional: true
      - !Flag
        description: "biases file to compute decay. REQUIRED with \"custom\" normalization.\n\
          Format: single column with header"
        synonyms:
        - --biases_path
        args: !SimpleFlagArg
          name: BIASES_PATH
        optional: true
      - !Flag
        description: "Path to mappability bedGraph file, required for oneD normalization.\n\
          Mappability file can be generated with GEM (example from the genomic FASTA\
          \ file hg38.fa):\ngem-indexer -i hg38.fa -o hg38\ngem-mappability -I hg38.gem\
          \ -l 50 -o hg38.50mer -T 8\ngem-2-wig -I hg38.gem -i hg38.50mer.mappability\
          \ -o hg38.50mer\nwigToBigWig hg38.50mer.wig hg38.50mer.sizes hg38.50mer.bw\n\
          bigWigToBedGraph hg38.50mer.bw  hg38.50mer.bedGraph"
        synonyms:
        - --mappability
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "Path to FASTA file with genome sequence, to compute GC content\
          \ and\nnumber of restriction sites per bin. Required for oneD normalization"
        synonyms:
        - --fasta
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: restriction enzyme name(s). Required for oneD normalization
        synonyms:
        - --renz
        args: !SimpleFlagArg
          name: STR
        optional: true
      - !Flag
        description: "[1] target mean value of a cell after normalization (can be\
          \ used to\nweight experiments before merging)"
        synonyms:
        - --factor
        args: !SimpleFlagArg
          name: NUM
        optional: true
      - !Flag
        description: "[1] Only for oneD normalization: proportion of data to be used\
          \ in\nfitting (for very large datasets). Number between 0 and 1."
        synonyms:
        - --prop_data
        args: !SimpleFlagArg
          name: FLOAT
        optional: true
      - !Flag
        description: "[1] Only for oneD normalization: seed number for the random\
          \ picking\nof data when using the \"prop_data\" parameter\n"
        synonyms:
        - --seed
        args: !SimpleFlagArg
          name: INT
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit normalize [-h] -w PATH -r INT [--bam PATH] [-j INT]\
        \ [--max_njobs INT] [--force]\n                        [--tmpdb PATH] [-C\
        \ CPUS] [--normalize_only] [--noX]\n                        [--normalization\
        \ STR] [--biases_path BIASES_PATH] [--mappability PATH]\n                \
        \        [--fasta PATH] [--renz STR] [--factor NUM] [--prop_data FLOAT]\n\
        \                        [--seed INT] [--perc_zeros FLOAT] [--min_count INT]\
        \ [--min_perc INT]\n                        [--max_perc INT] [--filter_only]\
        \ [--fast_filter]\n                        [-B CHR:POS1-POS2 [CHR:POS1-POS2\
        \ ...]] [-F INT [INT ...]] [--valid]\n\nnormalize Hi-C data and generates\
        \ array of biases\n\noptional arguments:\n  -h, --help               show\
        \ this help message and exit\n\nRequired options:\n  -w PATH, --workdir PATH\
        \  path to working directory (generated with the tool tadbit mapper)\n  -r\
        \ INT, --resolution INT\n                           resolution at which to\
        \ output matrices\n\nGeneral options:\n  --bam PATH               path to\
        \ a TADbit-generated BAM file with all reads (other wise the\n           \
        \                tool will guess from the working directory database)\n  -j\
        \ INT, --jobid INT      Use as input data generated by a job with a given\
        \ jobid. Use tadbit\n                           describe to find out which.\n\
        \  --max_njobs INT          [100] Define maximum number of jobs for reading\
        \ BAM file (set to\n                           higher numbers for large files\
        \ and low RAM memory).\n  --force                  overwrite previously run\
        \ job\n  --tmpdb PATH             if provided uses this directory to manipulate\
        \ the database\n  -C CPUS, --cpus CPUS     [8] Maximum number of CPU cores\
        \ available in the execution host. If\n                           higher than\
        \ 1, tasks with multi-threading capabilities will enabled\n              \
        \             (if 0 all available) cores will be used\n  --normalize_only\
        \         skip calculation of Cis-percentage and decay\n  --noX          \
        \          no display server (X screen)\n\nBin filtering options:\n  --perc_zeros\
        \ FLOAT       [95%] maximum percentage of zeroes allowed per column.\n  --min_count\
        \ INT          [None] minimum number of reads mapped to a bin (recommended\
        \ value\n                           could be 2500). If set this option overrides\
        \ the perc_zero\n                           filtering... This option is slightly\
        \ slower.\n  --min_perc INT           [None] lower percentile from which consider\
        \ bins as good.\n  --max_perc INT           [None] upper percentile until\
        \ which consider bins as good.\n  --filter_only            skip normalization\n\
        \  --fast_filter            only filter according to the percentage of zero\
        \ count or minimum\n                           count of reads\n  -B CHR:POS1-POS2\
        \ [CHR:POS1-POS2 ...], --badcols CHR:POS1-POS2 [CHR:POS1-POS2 ...]\n     \
        \                      extra regions to be added to bad-columns (ingenomic\
        \ position). e.g.:\n                           --badcols 1:150000000-160000000\
        \ 2:1200000-1300000\n\nRead filtering options:\n  -F INT [INT ...], --filter\
        \ INT [INT ...]\n                           [[1, 2, 3, 4, 6, 7, 9, 10]] Use\
        \ filters to define a set os valid\n                           pair of reads\
        \ e.g.: '--apply 1 2 3 4 8 9 10'. Where these\n                          \
        \ numberscorrespond to: 1: self-circle, 2: dangling-end, 3: error, 4:\n  \
        \                         extra dangling-end, 5: too close from RES, 6: too\
        \ short, 7: too\n                           large, 8: over-represented, 9:\
        \ duplicated, 10: random breaks, 11:\n                           trans-chromosomic\n\
        \  --valid                  input BAM file contains only valid pairs (already\
        \ filtered).\n\nNormalization options:\n  --normalization STR      [Vanilla]\
        \ normalization(s) to apply. Order matters. Choices:\n                   \
        \        Vanilla, ICE, SQRT, oneD, custom\n  --biases_path BIASES_PATH\n \
        \                          biases file to compute decay. REQUIRED with \"\
        custom\" normalization.\n                           Format: single column\
        \ with header\n  --mappability PATH       Path to mappability bedGraph file,\
        \ required for oneD normalization.\n                           Mappability\
        \ file can be generated with GEM (example from the genomic FASTA file hg38.fa):\n\
        \                           \n                                gem-indexer\
        \ -i hg38.fa -o hg38\n                                gem-mappability -I hg38.gem\
        \ -l 50 -o hg38.50mer -T 8\n                                gem-2-wig -I hg38.gem\
        \ -i hg38.50mer.mappability -o hg38.50mer\n                              \
        \  wigToBigWig hg38.50mer.wig hg38.50mer.sizes hg38.50mer.bw\n           \
        \                     bigWigToBedGraph hg38.50mer.bw  hg38.50mer.bedGraph\n\
        \  --fasta PATH             Path to FASTA file with genome sequence, to compute\
        \ GC content and\n                           number of restriction sites per\
        \ bin. Required for oneD normalization\n  --renz STR               restriction\
        \ enzyme name(s). Required for oneD normalization\n  --factor NUM        \
        \     [1] target mean value of a cell after normalization (can be used to\n\
        \                           weight experiments before merging)\n  --prop_data\
        \ FLOAT        [1] Only for oneD normalization: proportion of data to be used\
        \ in\n                           fitting (for very large datasets). Number\
        \ between 0 and 1.\n  --seed INT               [1] Only for oneD normalization:\
        \ seed number for the random picking\n                           of data when\
        \ using the \"prop_data\" parameter\n"
      generated_using: *id004
    - !Command
      command: &id012
      - tadbit
      - merge
      positional: []
      named:
      - !Flag
        description: path to a new output folder
        synonyms:
        - -w
        - --workdir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to working directory of the first HiC data sample to merge
        synonyms:
        - -w1
        - --workdir1
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to working directory of the second HiC data sample to merge
        synonyms:
        - -w2
        - --workdir2
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "path to the first TADbit-generated BAM file with all reads (other\n\
          wise the tool will guess from the working directory database)"
        synonyms:
        - --bam1
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: no display server (X screen)
        synonyms:
        - --noX
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "path to the second TADbit-generated BAM file with all reads\
          \ (other\nwise the tool will guess from the working directory database)"
        synonyms:
        - --bam2
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[8] Maximum number of CPU cores available in the execution host.\
          \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
          (if 0 all available) cores will be used"
        synonyms:
        - -C
        - --cpus
        args: !SimpleFlagArg
          name: CPUS
        optional: true
      - !Flag
        description: resolution at which to do the comparison, and generate the matrices.
        synonyms:
        - -r
        - --resolution
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "skip the comparison between replicates (faster). Comparisons\
          \ are\nperformed at 3 levels 1- comparing first diagonals of each\nexperiment\
          \ (and generating SCC score and standard deviation see\nhttps://doi.org/10.1101/gr.220640.117)\
          \ 2- Comparing the first\neigenvectors of input experiments 3- Generates\
          \ reproducibility score\nusing function from https://doi.org/10.1093/bioinformatics/btx152"
        synonyms:
        - --skip_comparison
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: skip the merge of replicates (faster).
        synonyms:
        - --skip_merge
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: '[genome] save genomic or chromosomic matrix.'
        synonyms:
        - --save
        args: !RepeatFlagArg
          name: STR
        optional: true
      - !Flag
        description: "Use as input data generated by a job with a given jobid. Use\
          \ tadbit\ndescribe to find out which."
        synonyms:
        - --jobid1
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: "Use as input data generated by a job with a given jobid. Use\
          \ tadbit\ndescribe to find out which."
        synonyms:
        - --jobid2
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: overwrite previously run job
        synonyms:
        - --force
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: compare normalized matrices
        synonyms:
        - --norm
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: path to file with precalculated biases by columns
        synonyms:
        - --biases1
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: path to file with precalculated biases by columns
        synonyms:
        - --biases2
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
          pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
          \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end,\
          \ 5: too close from RES, 6: too short, 7: too\nlarge, 8: over-represented,\
          \ 9: duplicated, 10: random breaks, 11:\ntrans-chromosomic"
        synonyms:
        - --filter
        args: !RepeatFlagArg
          name: INT
        optional: true
      - !Flag
        description: path samtools binary
        synonyms:
        - --samtools
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: if provided uses this directory to manipulate the database
        synonyms:
        - --tmpdb
        args: !SimpleFlagArg
          name: PATH
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: tadbit merge [-h] [-w PATH] [-w1 PATH] [-w2 PATH] [--bam1\
        \ PATH] [--noX] [--bam2 PATH]\n                    [-C CPUS] [-r INT] [--skip_comparison]\
        \ [--skip_merge]\n                    [--save STR [STR ...]] [--jobid1 INT]\
        \ [--jobid2 INT] [--force] [--norm]\n                    [--biases1 PATH]\
        \ [--biases2 PATH] [--filter INT [INT ...]]\n                    [--samtools\
        \ PATH] [--tmpdb PATH]\n\nload two working directories with different Hi-C\
        \ data samples and merges them into a new\nworking directory generating some\
        \ statistics\n\noptional arguments:\n  -h, --help               show this\
        \ help message and exit\n\nGeneral options:\n  -w PATH, --workdir PATH  path\
        \ to a new output folder\n  -w1 PATH, --workdir1 PATH\n                  \
        \         path to working directory of the first HiC data sample to merge\n\
        \  -w2 PATH, --workdir2 PATH\n                           path to working directory\
        \ of the second HiC data sample to merge\n  --bam1 PATH              path\
        \ to the first TADbit-generated BAM file with all reads (other\n         \
        \                  wise the tool will guess from the working directory database)\n\
        \  --noX                    no display server (X screen)\n  --bam2 PATH  \
        \            path to the second TADbit-generated BAM file with all reads (other\n\
        \                           wise the tool will guess from the working directory\
        \ database)\n  -C CPUS, --cpus CPUS     [8] Maximum number of CPU cores available\
        \ in the execution host. If\n                           higher than 1, tasks\
        \ with multi-threading capabilities will enabled\n                       \
        \    (if 0 all available) cores will be used\n  -r INT, --resolution INT\n\
        \                           resolution at which to do the comparison, and\
        \ generate the matrices.\n  --skip_comparison        skip the comparison between\
        \ replicates (faster). Comparisons are\n                           performed\
        \ at 3 levels 1- comparing first diagonals of each\n                     \
        \      experiment (and generating SCC score and standard deviation see\n \
        \                          https://doi.org/10.1101/gr.220640.117) 2- Comparing\
        \ the first\n                           eigenvectors of input experiments\
        \ 3- Generates reproducibility score\n                           using function\
        \ from https://doi.org/10.1093/bioinformatics/btx152\n  --skip_merge     \
        \        skip the merge of replicates (faster).\n  --save STR [STR ...]  \
        \   [genome] save genomic or chromosomic matrix.\n  --jobid1 INT         \
        \    Use as input data generated by a job with a given jobid. Use tadbit\n\
        \                           describe to find out which.\n  --jobid2 INT  \
        \           Use as input data generated by a job with a given jobid. Use tadbit\n\
        \                           describe to find out which.\n  --force       \
        \           overwrite previously run job\n  --norm                   compare\
        \ normalized matrices\n  --biases1 PATH           path to file with precalculated\
        \ biases by columns\n  --biases2 PATH           path to file with precalculated\
        \ biases by columns\n  --filter INT [INT ...]   [[1, 2, 3, 4, 6, 7, 9, 10]]\
        \ Use filters to define a set os valid\n                           pair of\
        \ reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\n                    \
        \       numberscorrespond to: 1: self-circle, 2: dangling-end, 3: error, 4:\n\
        \                           extra dangling-end, 5: too close from RES, 6:\
        \ too short, 7: too\n                           large, 8: over-represented,\
        \ 9: duplicated, 10: random breaks, 11:\n                           trans-chromosomic\n\
        \  --samtools PATH          path samtools binary\n  --tmpdb PATH         \
        \    if provided uses this directory to manipulate the database\n"
      generated_using: *id004
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: tadbit [-h]\n              {map,parse,filter,describe,clean,normalize,bin,merge,segment}\n\
      \              ...\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n\nAVAILABLE PROGRAMS:\n  {map,parse,filter,describe,clean,normalize,bin,merge,segment}\n\
      \    map                 Map Hi-C reads and organize results in an output\n\
      \                        working directory\n    parse               Parse mapped\
      \ Hi-C reads and get the intersection\n    filter              Filter parsed\
      \ Hi-C reads and get valid pair of reads\n                        to work with\n\
      \    describe            Describe jobs and results in a given working directory\n\
      \    clean               Delete jobs and results of a given list of jobids in\
      \ a\n                        given directories\n    normalize           normalize\
      \ Hi-C data and generates array of biases\n    bin                 bin Hi-C\
      \ data into matrices\n    merge               load two working directories with\
      \ different Hi-C data\n                        samples and merges them into\
      \ a new working directory\n                        generating some statistics\n\
      \    segment             Finds TAD or compartment segmentation in Hi-C data.\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit clean [-h] [-w PATH] [-j INT [INT ...]] [--delete] [--compress]\
    \ [--noX]\n                    [--change_workdir PATH] [--tmpdb PATH]\n\nDelete\
    \ jobs and results of a given list of jobids in a given directories\n\noptional\
    \ arguments:\n  -h, --help               show this help message and exit\n  --change_workdir\
    \ PATH    In case folder was moved, input the new path\n\nGeneral options:\n \
    \ -w PATH, --workdir PATH  path to working directory (generated with the tool\
    \ tadbit mapper)\n  -j INT [INT ...], --jobids INT [INT ...]\n               \
    \            jobids of the files and entries to be removed\n  --delete       \
    \          delete files, otherwise only DB entries.\n  --compress            \
    \   compress files and update paths accordingly\n  --noX                    no\
    \ display server (X screen)\n  --tmpdb PATH             if provided uses this\
    \ directory to manipulate the database\n"
  generated_using: *id004
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    description: generate a Hi-C specific quality plot from FASTQ and exits
    synonyms:
    - --skip_mapping
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: path to an output folder.
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to a FASTQ files (can be compressed files)
    synonyms:
    - --fastq
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "(beta) path to a FASTQ file of read 2 (can be compressed files).\n\
      Needed for fast_fragment"
    synonyms:
    - --fastq2
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: paths to file(s) with indexed FASTA files of the reference genome.
    synonyms:
    - --index
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "paths to file(s) with FASTA files of the reference genome. Needed\n\
      for fast_fragment mapping. If many, files will be concatenated.\nI.e.: --genome\
      \ chr_1.fa chr_2.fa In this last case, order is\nimportant or the rest of the\
      \ analysis. Note: it can also be the path\nto a previously parsed genome in\
      \ pickle format."
    synonyms:
    - --genome
    args: !RepeatFlagArg
      name: PATH
    optional: true
  - !Flag
    description: read number
    synonyms:
    - --read
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "restriction enzyme name(s). Use \"--renz CHECK\" to search for most\n\
      probable and exit; and use \"--renz NONE\" to avoid using RE site\ninformation."
    synonyms:
    - --renz
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: '[fasta header] chromosome name(s). Used in the same order as data.'
    synonyms:
    - --chr_name
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: path to a temporary directory (default next to "workdir" directory)
    synonyms:
    - --tmp
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[DEBUG] in case already mapped.'
    synonyms:
    - --skip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[DEBUG] keep temporary files.'
    synonyms:
    - --keep_tmp
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "default mapping strategy is fragment based use this flag for\niterative\
      \ mapping"
    synonyms:
    - --iterative
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "(beta) use fast fragment mapping. Both fastq files are mapped using\n\
      fragment based mapping in GEM v3. The output file is an intersected\nread file\
      \ than can be used directly in tadbit filter (no tadbit\nparse needed). Access\
      \ to samtools is needed for fast_fragment to\nwork. --fastq2 and --genome needs\
      \ to be specified and --read value\nshould be 0."
    synonyms:
    - --fast_fragment
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "defines windows to be used to trim the input FASTQ reads, for\n\
      example an iterative mapping can be defined as: \"--windows 1:20 1:25\n1:30\
      \ 1:35 1:40 1:45 1:50\". But this parameter can also be used for\nfragment based\
      \ mapping if for example pair-end reads are both in the\nsame FASTQ, for example:\
      \ \"--windows 1:50\" (if the length of the\nreads is 100). Note: that the numbers\
      \ are both inclusive."
    synonyms:
    - --windows
    args: !RepeatFlagArg
      name: WINDOWS
    optional: true
  - !Flag
    description: "[8] Maximum number of CPU cores available in the execution host.\
      \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
      (if 0 all available) cores will be used"
    synonyms:
    - -C
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: '[gem] mapper used, options are gem, bowtie2 or hisat2'
    synonyms:
    - --mapper
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: '[None] path to mapper binary'
    synonyms:
    - --mapper_binary
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: "any parameter that could be passed to the GEM, BOWTIE2 or HISAT2\n\
      mapper. e.g. if we want to set the proportion of mismatches to 0.05\nand the\
      \ maximum indel length to 10, (in GEM it would be: -e 0.05\n--max-big-indel-length\
      \ 10), here we could write: \"--gem_param e:0.05\nmax-big-indel-length:10\"\
      . IMPORTANT: some options are incompatible\nwith 3C-derived experiments."
    synonyms:
    - --mapper_param
    args: !RepeatFlagArg
      name: MAPPER_PARAM
    optional: true
  - !Flag
    description: species name
    synonyms:
    - --species
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: "extra descriptive fields each filed separated by coma, and inside\n\
      each, name and value separated by column:\n--descr=cell:lymphoblast,flowcell:C68AEACXX,index:24nf\n"
    synonyms:
    - --descr
    args: !RepeatFlagArg
      name: LIST
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit map [-h] [--skip_mapping] -w PATH --fastq PATH [--fastq2\
    \ PATH] --index PATH\n                  [--genome PATH [PATH ...]] --read INT\
    \ --renz STR [STR ...]\n                  [--chr_name STR [STR ...]] [--tmp PATH]\
    \ [--tmpdb PATH] [--noX] [--iterative]\n                  [--fast_fragment] [--windows\
    \ WINDOWS [WINDOWS ...]] [--species STR]\n                  [--descr LIST [LIST\
    \ ...]] [--skip] [--keep_tmp] [-C CPUS] [--mapper STR]\n                  [--mapper_binary\
    \ STR] [--mapper_param MAPPER_PARAM [MAPPER_PARAM ...]]\n\nMap Hi-C reads and\
    \ organize results in an output working directory\n\noptional arguments:\n  -h,\
    \ --help               show this help message and exit\n\nGeneral options:\n \
    \ --skip_mapping           generate a Hi-C specific quality plot from FASTQ and\
    \ exits\n  -w PATH, --workdir PATH  path to an output folder.\n  --fastq PATH\
    \             path to a FASTQ files (can be compressed files)\n  --fastq2 PATH\
    \            (beta) path to a FASTQ file of read 2 (can be compressed files).\n\
    \                           Needed for fast_fragment\n  --index PATH         \
    \    paths to file(s) with indexed FASTA files of the reference genome.\n  --genome\
    \ PATH [PATH ...]\n                           paths to file(s) with FASTA files\
    \ of the reference genome. Needed\n                           for fast_fragment\
    \ mapping. If many, files will be concatenated.\n                           I.e.:\
    \ --genome chr_1.fa chr_2.fa In this last case, order is\n                   \
    \        important or the rest of the analysis. Note: it can also be the path\n\
    \                           to a previously parsed genome in pickle format.\n\
    \  --read INT               read number\n  --renz STR [STR ...]     restriction\
    \ enzyme name(s). Use \"--renz CHECK\" to search for most\n                  \
    \         probable and exit; and use \"--renz NONE\" to avoid using RE site\n\
    \                           information.\n  --chr_name STR [STR ...]\n       \
    \                    [fasta header] chromosome name(s). Used in the same order\
    \ as data.\n  --tmp PATH               path to a temporary directory (default\
    \ next to \"workdir\" directory)\n  --tmpdb PATH             if provided uses\
    \ this directory to manipulate the database\n  --noX                    no display\
    \ server (X screen)\n  --skip                   [DEBUG] in case already mapped.\n\
    \  --keep_tmp               [DEBUG] keep temporary files.\n\nMapping options:\n\
    \  --iterative              default mapping strategy is fragment based use this\
    \ flag for\n                           iterative mapping\n  --fast_fragment  \
    \        (beta) use fast fragment mapping. Both fastq files are mapped using\n\
    \                           fragment based mapping in GEM v3. The output file\
    \ is an intersected\n                           read file than can be used directly\
    \ in tadbit filter (no tadbit\n                           parse needed). Access\
    \ to samtools is needed for fast_fragment to\n                           work.\
    \ --fastq2 and --genome needs to be specified and --read value\n             \
    \              should be 0.\n  --windows WINDOWS [WINDOWS ...]\n             \
    \              defines windows to be used to trim the input FASTQ reads, for\n\
    \                           example an iterative mapping can be defined as: \"\
    --windows 1:20 1:25\n                           1:30 1:35 1:40 1:45 1:50\". But\
    \ this parameter can also be used for\n                           fragment based\
    \ mapping if for example pair-end reads are both in the\n                    \
    \       same FASTQ, for example: \"--windows 1:50\" (if the length of the\n  \
    \                         reads is 100). Note: that the numbers are both inclusive.\n\
    \  -C CPUS, --cpus CPUS     [8] Maximum number of CPU cores available in the execution\
    \ host. If\n                           higher than 1, tasks with multi-threading\
    \ capabilities will enabled\n                           (if 0 all available) cores\
    \ will be used\n  --mapper STR             [gem] mapper used, options are gem,\
    \ bowtie2 or hisat2\n  --mapper_binary STR      [None] path to mapper binary\n\
    \  --mapper_param MAPPER_PARAM [MAPPER_PARAM ...]\n                          \
    \ any parameter that could be passed to the GEM, BOWTIE2 or HISAT2\n         \
    \                  mapper. e.g. if we want to set the proportion of mismatches\
    \ to 0.05\n                           and the maximum indel length to 10, (in\
    \ GEM it would be: -e 0.05\n                           --max-big-indel-length\
    \ 10), here we could write: \"--gem_param e:0.05\n                           max-big-indel-length:10\"\
    . IMPORTANT: some options are incompatible\n                           with 3C-derived\
    \ experiments.\n\nDescriptive, optional arguments:\n  --species STR          \
    \  species name\n  --descr LIST [LIST ...]  extra descriptive fields each filed\
    \ separated by coma, and inside\n                           each, name and value\
    \ separated by column:\n                           --descr=cell:lymphoblast,flowcell:C68AEACXX,index:24nf\n"
  generated_using: *id004
- !Command
  command: *id006
  positional: []
  named:
  - !Flag
    description: path to working directory (generated with the tool tadbit map)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[ ...], --tables  [ ...]\n[['1', '2', '3', '4', '5', '6', '7', '8',\
      \ '9', '10', '11', '12',\n'13']] what tables to show, write either the sequence\
      \ of names or\nindexes, according to this list: 11: segment_outputs, 10:\nmerge_outputs,\
      \ 13: modeled_regions, 12: models, 1: paths, 3:\nmapped_outputs, 2: jobs, 5:\
      \ parsed_outputs, 4: mapped_inputs, 7:\nfilter_outputs, 6: intersection_outputs,\
      \ 9: merge_stats, 8:\nnormalize_outputs"
    synonyms:
    - -t
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[ ...], --skip_tables  [ ...]\n[[]] what tables NOT to show, write\
      \ either the sequence of names or\nindexes, according to this list: 11: segment_outputs,\
      \ 10:\nmerge_outputs, 13: modeled_regions, 12: models, 1: paths, 3:\nmapped_outputs,\
      \ 2: jobs, 5: parsed_outputs, 4: mapped_inputs, 7:\nfilter_outputs, 6: intersection_outputs,\
      \ 9: merge_stats, 8:\nnormalize_outputs"
    synonyms:
    - -T
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Display only items matching these jobids.
    synonyms:
    - -j
    - --jobids
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: "Select rows. List pairs of keywords (column header) and values to\n\
      filter results. For example to get only results where \"18\" appears\nin the\
      \ column \"Chromosome\", the option should be set as: `-W\nChromosome,18`"
    synonyms:
    - -W
    - --where
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: "Select columns. List the keyword (column headers) to be displayed.\n\
      E.g. to show only the colmns JobIds: `-s Jobids`"
    synonyms:
    - -s
    - --select
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Print output in tab separated format
    synonyms:
    - --tsv
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Writes output in specified file.\n"
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit describe [-h] [-w PATH] [--noX] [-t  [...]] [-T  [...]]\
    \ [-j INT [INT ...]]\n                       [-W STR [STR ...]] [-s STR [STR ...]]\
    \ [--tmpdb PATH] [--tsv] [-o OUTPUT]\n\nDescribe jobs and results in a given working\
    \ directory\n\noptional arguments:\n  -h, --help               show this help\
    \ message and exit\n\nGeneral options:\n  -w PATH, --workdir PATH  path to working\
    \ directory (generated with the tool tadbit map)\n  --noX                    no\
    \ display server (X screen)\n  -t  [ ...], --tables  [ ...]\n                \
    \           [['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',\n\
    \                           '13']] what tables to show, write either the sequence\
    \ of names or\n                           indexes, according to this list: 11:\
    \ segment_outputs, 10:\n                           merge_outputs, 13: modeled_regions,\
    \ 12: models, 1: paths, 3:\n                           mapped_outputs, 2: jobs,\
    \ 5: parsed_outputs, 4: mapped_inputs, 7:\n                           filter_outputs,\
    \ 6: intersection_outputs, 9: merge_stats, 8:\n                           normalize_outputs\n\
    \  -T  [ ...], --skip_tables  [ ...]\n                           [[]] what tables\
    \ NOT to show, write either the sequence of names or\n                       \
    \    indexes, according to this list: 11: segment_outputs, 10:\n             \
    \              merge_outputs, 13: modeled_regions, 12: models, 1: paths, 3:\n\
    \                           mapped_outputs, 2: jobs, 5: parsed_outputs, 4: mapped_inputs,\
    \ 7:\n                           filter_outputs, 6: intersection_outputs, 9: merge_stats,\
    \ 8:\n                           normalize_outputs\n  -j INT [INT ...], --jobids\
    \ INT [INT ...]\n                           Display only items matching these\
    \ jobids.\n  -W STR [STR ...], --where STR [STR ...]\n                       \
    \    Select rows. List pairs of keywords (column header) and values to\n     \
    \                      filter results. For example to get only results where \"\
    18\" appears\n                           in the column \"Chromosome\", the option\
    \ should be set as: `-W\n                           Chromosome,18`\n  -s STR [STR\
    \ ...], --select STR [STR ...]\n                           Select columns. List\
    \ the keyword (column headers) to be displayed.\n                           E.g.\
    \ to show only the colmns JobIds: `-s Jobids`\n  --tmpdb PATH             if provided\
    \ uses this directory to manipulate the database\n  --tsv                    Print\
    \ output in tab separated format\n  -o OUTPUT, --output OUTPUT\n             \
    \              Writes output in specified file.\n"
  generated_using: *id004
- !Command
  command: *id007
  positional: []
  named:
  - !Flag
    description: path to working directory (generated with the tool tadbit mapper)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: resolution at which to output matrices
    synonyms:
    - -r
    - --resolution
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "path to a TADbit-generated BAM file with all reads (other wise the\n\
      tool will guess from the working directory database)"
    synonyms:
    - --bam
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "Use as input data generated by a job with a given jobid. Use tadbit\n\
      describe to find out which."
    synonyms:
    - -j
    - --jobid
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: overwrite previously run job
    synonyms:
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove all messages
    synonyms:
    - -q
    - --quiet
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: maximum number of chunks into which to cut the BAM
    synonyms:
    - --nchunks
    args: !SimpleFlagArg
      name: NCHUNKS
    optional: true
  - !Flag
    description: "[8] Maximum number of CPU cores available in the execution host.\
      \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
      (if 0 all available) cores will be used"
    synonyms:
    - -C
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
      pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
      \ to: 0: nothing, 1: self-circle, 2: dangling-end,\n3: error, 4: extra dangling-end,\
      \ 5: too close from RES, 6: too\nshort, 7: too large, 8: over-represented, 9:\
      \ duplicated, 10: random\nbreaks, 11: trans-chromosomic"
    synonyms:
    - -F
    - --filter
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: path to file with pre-calculated biases by columns
    synonyms:
    - --biases
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[['raw']] normalization(s) to apply. Choices are: [norm, decay,\
      \ raw,\nraw&decay]"
    synonyms:
    - --norm
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: "Write text matrix in multiple columns (square). By defaults matrices\n\
      are written in BED-like format (also only way to get a raw matrix\nwith all\
      \ values including the ones in masked columns)."
    synonyms:
    - --matrix
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Write i,j,v matrix in cooler format instead of text.
    synonyms:
    - --cooler
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "To store row names in the output text matrix. WARNING: when non-\n\
      matrix, results in two extra columns"
    synonyms:
    - --rownames
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[False] Skip writing matrix in text format.'
    synonyms:
    - --only_plot
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[False] Open matplotlib interactive plot (nothing will be saved).'
    synonyms:
    - -i
    - --interactive
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ", --coord             Coordinate of the region to retrieve. By default\
      \ all genome,\narguments can be either one chromosome name, or the coordinate\
      \ in\nthe form: \"-c chr3:110000000-120000000\""
    synonyms:
    - -c
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ", --coord2           Coordinate of a second region to retrieve the\
      \ matrix in the\nintersection with the first region."
    synonyms:
    - -c2
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Save only text file for matrices, not images
    synonyms:
    - --only_txt
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Plot matrix in desired format.
    synonyms:
    - --plot
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Force plotting even with demoniacally big matrices (more than\n\
      5000x5000, or 1500x1500with interactive option)."
    synonyms:
    - --force_plot
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[False] represents only half matrix. Note that this also results\
      \ in\ntruly vectorial images of matrix."
    synonyms:
    - --triangular
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[-25] x-tick rotation'
    synonyms:
    - --xtick_rotation
    args: !SimpleFlagArg
      name: XTICK_ROTATION
    optional: true
  - !Flag
    description: '[viridis] Matplotlib color map to use.'
    synonyms:
    - --cmap
    args: !SimpleFlagArg
      name: CMAP
    optional: true
  - !Flag
    description: "[white] Matplotlib color to use on bins filtered out (only used\
      \ with\nnormalized matrices, not raw)."
    synonyms:
    - --bad_color
    args: !SimpleFlagArg
      name: BAD_COLOR
    optional: true
  - !Flag
    description: '[png] plot file format.'
    synonyms:
    - --format
    args: !SimpleFlagArg
      name: FORMAT
    optional: true
  - !Flag
    description: 'Range, in log2 scale of the color scale. i.e.: --zrange=-2,2'
    synonyms:
    - --zrange
    args: !SimpleFlagArg
      name: ZRANGE
    optional: true
  - !Flag
    description: '[log2] can be any of [log2, log, none]'
    synonyms:
    - --transform
    args: !ChoiceFlagArg
      choices: !!set
        none:
        log:
        log2:
    optional: true
  - !Flag
    description: "Range, in log2 scale of the color scale. default for triangular\n\
      matrices: --figsize=16,10 and for square matrices: --figsize=16,14\n"
    synonyms:
    - --figsize
    args: !SimpleFlagArg
      name: FIGSIZE
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit bin [-h] -w PATH [--noX] -r INT [--bam PATH] [-j INT]\
    \ [--force] [-q]\n                  [--tmpdb PATH] [--nchunks NCHUNKS] [-C CPUS]\
    \ [--matrix] [--cooler]\n                  [--rownames] [--plot] [--force_plot]\
    \ [--only_plot] [-i] [--triangular]\n                  [--xtick_rotation XTICK_ROTATION]\
    \ [--cmap CMAP] [--bad_color BAD_COLOR]\n                  [--format FORMAT] [--zrange\
    \ ZRANGE] [--transform {log2,log,none}]\n                  [--figsize FIGSIZE]\
    \ [-c] [-c2] [--biases PATH] [--norm STR [STR ...]]\n                  [-F INT\
    \ [INT ...]] [--only_txt]\n\nbin Hi-C data into matrices\n\noptional arguments:\n\
    \  -h, --help               show this help message and exit\n\nRequired options:\n\
    \  -w PATH, --workdir PATH  path to working directory (generated with the tool\
    \ tadbit mapper)\n  -r INT, --resolution INT\n                           resolution\
    \ at which to output matrices\n\nGeneral options:\n  --noX                   \
    \ no display server (X screen)\n  --bam PATH               path to a TADbit-generated\
    \ BAM file with all reads (other wise the\n                           tool will\
    \ guess from the working directory database)\n  -j INT, --jobid INT      Use as\
    \ input data generated by a job with a given jobid. Use tadbit\n             \
    \              describe to find out which.\n  --force                  overwrite\
    \ previously run job\n  -q, --quiet              remove all messages\n  --tmpdb\
    \ PATH             if provided uses this directory to manipulate the database\n\
    \  --nchunks NCHUNKS        maximum number of chunks into which to cut the BAM\n\
    \  -C CPUS, --cpus CPUS     [8] Maximum number of CPU cores available in the execution\
    \ host. If\n                           higher than 1, tasks with multi-threading\
    \ capabilities will enabled\n                           (if 0 all available) cores\
    \ will be used\n\nRead filtering options:\n  -F INT [INT ...], --filter INT [INT\
    \ ...]\n                           [[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to\
    \ define a set os valid\n                           pair of reads e.g.: '--apply\
    \ 1 2 3 4 8 9 10'. Where these\n                           numberscorrespond to:\
    \ 0: nothing, 1: self-circle, 2: dangling-end,\n                           3:\
    \ error, 4: extra dangling-end, 5: too close from RES, 6: too\n              \
    \             short, 7: too large, 8: over-represented, 9: duplicated, 10: random\n\
    \                           breaks, 11: trans-chromosomic\n\nNormalization options:\n\
    \  --biases PATH            path to file with pre-calculated biases by columns\n\
    \  --norm STR [STR ...]     [['raw']] normalization(s) to apply. Choices are:\
    \ [norm, decay, raw,\n                           raw&decay]\n\nOutput options:\n\
    \  --matrix                 Write text matrix in multiple columns (square). By\
    \ defaults matrices\n                           are written in BED-like format\
    \ (also only way to get a raw matrix\n                           with all values\
    \ including the ones in masked columns).\n  --cooler                 Write i,j,v\
    \ matrix in cooler format instead of text.\n  --rownames               To store\
    \ row names in the output text matrix. WARNING: when non-\n                  \
    \         matrix, results in two extra columns\n  --only_plot              [False]\
    \ Skip writing matrix in text format.\n  -i, --interactive        [False] Open\
    \ matplotlib interactive plot (nothing will be saved).\n  -c , --coord       \
    \      Coordinate of the region to retrieve. By default all genome,\n        \
    \                   arguments can be either one chromosome name, or the coordinate\
    \ in\n                           the form: \"-c chr3:110000000-120000000\"\n \
    \ -c2 , --coord2           Coordinate of a second region to retrieve the matrix\
    \ in the\n                           intersection with the first region.\n  --only_txt\
    \               Save only text file for matrices, not images\n\nPlotting options:\n\
    \  --plot                   Plot matrix in desired format.\n  --force_plot   \
    \          Force plotting even with demoniacally big matrices (more than\n   \
    \                        5000x5000, or 1500x1500with interactive option).\n  --triangular\
    \             [False] represents only half matrix. Note that this also results\
    \ in\n                           truly vectorial images of matrix.\n  --xtick_rotation\
    \ XTICK_ROTATION\n                           [-25] x-tick rotation\n  --cmap CMAP\
    \              [viridis] Matplotlib color map to use.\n  --bad_color BAD_COLOR\
    \    [white] Matplotlib color to use on bins filtered out (only used with\n  \
    \                         normalized matrices, not raw).\n  --format FORMAT  \
    \        [png] plot file format.\n  --zrange ZRANGE          Range, in log2 scale\
    \ of the color scale. i.e.: --zrange=-2,2\n  --transform {log2,log,none}\n   \
    \                        [log2] can be any of [log2, log, none]\n  --figsize FIGSIZE\
    \        Range, in log2 scale of the color scale. default for triangular\n   \
    \                        matrices: --figsize=16,10 and for square matrices: --figsize=16,14\n"
  generated_using: *id004
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    description: path to working directory (generated with the tool tadbit mapper)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: '[map]file type to be parser, MAP (GEM-mapper), SAM or BAM'
    synonyms:
    - --type
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: In case only one of the reads needs to be parsed
    synonyms:
    - --read
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "default: --filter_chrom\n\"^(chr)?[A-Za-z]?[0-9]{0,3}[XVI]{0,3}(?:ito)?[A-Z-a-z]?(_dna)?$\"\
      ,\nregexp to consider only chromosome names passing"
    synonyms:
    - --filter_chrom
    args: !SimpleFlagArg
      name: FILTER_CHROM
    optional: true
  - !Flag
    description: '[DEBUG] in case already mapped.'
    synonyms:
    - --skip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Compress input mapped files when parsing is done. This is done in\n\
      background, while next MAP file is processed, or while reads are\nsorted."
    synonyms:
    - --compress_input
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "paths to file(s) with FASTA files of the reference genome. If many,\n\
      files will be concatenated. I.e.: --genome chr_1.fa chr_2.fa In this\nlast case,\
      \ order is important or the rest of the analysis. Note: it\ncan also be the\
      \ path to a previously parsed genome in pickle format."
    synonyms:
    - --genome
    args: !RepeatFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "Use as input data generated by a job with a given jobid(s). Use\n\
      tadbit describe to find out which. In this case one jobid can be\npassed per\
      \ read."
    synonyms:
    - --jobids
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit parse [-h] [-w PATH] [--type STR] [--read INT] [--filter_chrom\
    \ FILTER_CHROM]\n                    [--skip] [--compress_input] [--tmpdb PATH]\
    \ [--genome PATH [PATH ...]]\n                    [--jobids INT [INT ...]] [--noX]\n\
    \nParse mapped Hi-C reads and get the intersection\n\noptional arguments:\n  -h,\
    \ --help               show this help message and exit\n\nGeneral options:\n \
    \ -w PATH, --workdir PATH  path to working directory (generated with the tool\
    \ tadbit mapper)\n  --type STR               [map]file type to be parser, MAP\
    \ (GEM-mapper), SAM or BAM\n  --read INT               In case only one of the\
    \ reads needs to be parsed\n  --filter_chrom FILTER_CHROM\n                  \
    \         default: --filter_chrom\n                           \"^(chr)?[A-Za-z]?[0-9]{0,3}[XVI]{0,3}(?:ito)?[A-Z-a-z]?(_dna)?$\"\
    ,\n                           regexp to consider only chromosome names passing\n\
    \  --skip                   [DEBUG] in case already mapped.\n  --compress_input\
    \         Compress input mapped files when parsing is done. This is done in\n\
    \                           background, while next MAP file is processed, or while\
    \ reads are\n                           sorted.\n  --tmpdb PATH             if\
    \ provided uses this directory to manipulate the database\n  --genome PATH [PATH\
    \ ...]\n                           paths to file(s) with FASTA files of the reference\
    \ genome. If many,\n                           files will be concatenated. I.e.:\
    \ --genome chr_1.fa chr_2.fa In this\n                           last case, order\
    \ is important or the rest of the analysis. Note: it\n                       \
    \    can also be the path to a previously parsed genome in pickle format.\n  --jobids\
    \ INT [INT ...]   Use as input data generated by a job with a given jobid(s).\
    \ Use\n                           tadbit describe to find out which. In this case\
    \ one jobid can be\n                           passed per read.\n  --noX     \
    \               no display server (X screen)\n"
  generated_using: *id004
- !Command
  command: *id009
  positional:
  - !Positional
    description: --only_tads              search TAD boundaries break-point detection
      algorithm
    position: 0
    name: matrix
    optional: false
  named:
  - !Flag
    description: path to working directory (generated with the tool tadbit mapper)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: do not load/store data from/in sqlite database
    synonyms:
    - --nosql
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: skip the filtering of bins for detection of TADs
    synonyms:
    - --all_bins
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: path valid-pairs file (TADbit BAM format)
    synonyms:
    - --mreads
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to file with precalculated biases by columns
    synonyms:
    - --biases
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: resolution at which to output matrices
    synonyms:
    - -r
    - --resolution
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: path to a matrix file with normalized read counts
    synonyms:
    - --norm_matrix
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to a matrix file with raw read counts
    synonyms:
    - --raw_matrix
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
      pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
      \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end, 5:\
      \ too close from RES, 6: too short, 7: too\nlarge, 8: over-represented, 9: duplicated,\
      \ 10: random breaks, 11:\ntrans-chromosomic"
    synonyms:
    - -F
    - --filter
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: search A/B compartments using first eigen vector of the correlation
    synonyms:
    - --only_compartments
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: print more messages
    synonyms:
    - -v
    - --verbose
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Use as input data generated by a job with a given jobid. Use tadbit\n\
      describe to find out which."
    synonyms:
    - -j
    - --jobid
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: Name of the chromosomes on which to search for TADs or compartments.
    synonyms:
    - -c
    - --chromosomes
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: "[8] Maximum number of CPU cores available in the execution host.\
      \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
      (if 0 all available) cores will be used"
    synonyms:
    - -C
    - --cpu
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: overwrite previously run job
    synonyms:
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "path to a BED or bedGraph file with list of protein coding gene\
      \ or\nother active epigenetic mark, to be used to label compartments\ninstead\
      \ of using the relative interaction count."
    synonyms:
    - --rich_in_A
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "Path to fasta file with genome sequence, to compute GC content and\n\
      use it to label compartments"
    synonyms:
    - --fasta
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: Save correlation matrix used to predict compartments.
    synonyms:
    - --savecorr
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Correlation matrix plot scaled between correlation 1 and -1 instead\n\
      of maximum observed values."
    synonyms:
    - --fix_corr_scale
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[png] file format for figures'
    synonyms:
    - --format
    args: !SimpleFlagArg
      name: FORMAT
    optional: true
  - !Flag
    description: "[3] Number of eigenvectors to store. if \"-1\" all eigenvectors\
      \ will\nbe calculated"
    synonyms:
    - --n_evs
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "list of indexes of eigenvectors capturing compartments signal (one\n\
      index per chromosome, in the same order as chromosomes in fasta\nfile). Example\
      \ picking the first eigenvector for all chromosomes but\nfor chromosome 3: '--ev_index\
      \ 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1"
    synonyms:
    - --ev_index
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: "an integer defining the maximum size of TAD. Default defines it\
      \ as\nthe number of rows/columns\n"
    synonyms:
    - --max_tad_size
    args: !SimpleFlagArg
      name: INT
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit segment [-h] -w PATH [--tmpdb PATH] [--nosql] [--all_bins]\
    \ [--mreads PATH]\n                      [--biases PATH] -r INT [--norm_matrix\
    \ PATH] [--raw_matrix PATH]\n                      [-F INT [INT ...]] [--noX]\
    \ [--rich_in_A PATH] [--fasta PATH] [--savecorr]\n                      [--fix_corr_scale]\
    \ [--format FORMAT] [--n_evs INT]\n                      [--ev_index INT [INT\
    \ ...]] [--only_compartments] [--only_tads] [-v]\n                      [-j INT]\
    \ [-c STR [STR ...]] [--max_tad_size INT] [-C CPUS] [--force]\n\nFinds TAD or\
    \ compartment segmentation in Hi-C data.\n\noptional arguments:\n  -h, --help\
    \               show this help message and exit\n\nGeneral options:\n  -w PATH,\
    \ --workdir PATH  path to working directory (generated with the tool tadbit mapper)\n\
    \  --tmpdb PATH             if provided uses this directory to manipulate the\
    \ database\n  --nosql                  do not load/store data from/in sqlite database\n\
    \  --all_bins               skip the filtering of bins for detection of TADs\n\
    \  --mreads PATH            path valid-pairs file (TADbit BAM format)\n  --biases\
    \ PATH            path to file with precalculated biases by columns\n  -r INT,\
    \ --resolution INT\n                           resolution at which to output matrices\n\
    \  --norm_matrix PATH       path to a matrix file with normalized read counts\n\
    \  --raw_matrix PATH        path to a matrix file with raw read counts\n  -F INT\
    \ [INT ...], --filter INT [INT ...]\n                           [[1, 2, 3, 4,\
    \ 6, 7, 9, 10]] Use filters to define a set os valid\n                       \
    \    pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\n             \
    \              numberscorrespond to: 1: self-circle, 2: dangling-end, 3: error,\
    \ 4:\n                           extra dangling-end, 5: too close from RES, 6:\
    \ too short, 7: too\n                           large, 8: over-represented, 9:\
    \ duplicated, 10: random breaks, 11:\n                           trans-chromosomic\n\
    \  --noX                    no display server (X screen)\n  --only_compartments\
    \      search A/B compartments using first eigen vector of the correlation\n \
    \                          matrix\n  --only_tads              search TAD boundaries\
    \ break-point detection algorithm\n  -v, --verbose            print more messages\n\
    \  -j INT, --jobid INT      Use as input data generated by a job with a given\
    \ jobid. Use tadbit\n                           describe to find out which.\n\
    \  -c STR [STR ...], --chromosomes STR [STR ...]\n                           Name\
    \ of the chromosomes on which to search for TADs or compartments.\n  -C CPUS,\
    \ --cpu CPUS      [8] Maximum number of CPU cores available in the execution host.\
    \ If\n                           higher than 1, tasks with multi-threading capabilities\
    \ will enabled\n                           (if 0 all available) cores will be\
    \ used\n  --force                  overwrite previously run job\n\nCompartment\
    \ calling options:\n  --rich_in_A PATH         path to a BED or bedGraph file\
    \ with list of protein coding gene or\n                           other active\
    \ epigenetic mark, to be used to label compartments\n                        \
    \   instead of using the relative interaction count.\n  --fasta PATH         \
    \    Path to fasta file with genome sequence, to compute GC content and\n    \
    \                       use it to label compartments\n  --savecorr           \
    \    Save correlation matrix used to predict compartments.\n  --fix_corr_scale\
    \         Correlation matrix plot scaled between correlation 1 and -1 instead\n\
    \                           of maximum observed values.\n  --format FORMAT   \
    \       [png] file format for figures\n  --n_evs INT              [3] Number of\
    \ eigenvectors to store. if \"-1\" all eigenvectors will\n                   \
    \        be calculated\n  --ev_index INT [INT ...]\n                         \
    \  list of indexes of eigenvectors capturing compartments signal (one\n      \
    \                     index per chromosome, in the same order as chromosomes in\
    \ fasta\n                           file). Example picking the first eigenvector\
    \ for all chromosomes but\n                           for chromosome 3: '--ev_index\
    \ 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n                           1 1 1 1\n\n\
    TAD calling options:\n  --max_tad_size INT       an integer defining the maximum\
    \ size of TAD. Default defines it as\n                           the number of\
    \ rows/columns\n"
  generated_using: *id004
- !Command
  command: *id010
  positional: []
  named:
  - !Flag
    description: overwrite previously run job
    synonyms:
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: use filters of previously run job
    synonyms:
    - --resume
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: path to working directory (generated with the tool tadbit mapper)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[8] Maximum number of CPU cores available in the execution host.\
      \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
      (if 0 all available) cores will be used"
    synonyms:
    - -C
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "Use as input data generated by a job under a given pathids. Use\n\
      tadbit describe to find out which. To filter an intersected file\nproduced with\
      \ tadbit map --fast_fragment only one PATHid is needed\notherwise one per read\
      \ is needed, first for read 1, second for read\n2."
    synonyms:
    - --pathids
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: "Compress input mapped files when parsing is done. This is done in\n\
      background, while next MAP file is processed, or while reads are\nsorted."
    synonyms:
    - --compress_input
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: path samtools binary
    synonyms:
    - --samtools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[mid] for compression into pseudo-BAM format. Short contains only\n\
      positions of reads mapped, mid everything but restriction sites."
    synonyms:
    - --format
    args: !ChoiceFlagArg
      choices: !!set
        long:
        mid:
        short:
    optional: true
  - !Flag
    description: stores only valid-pairs discards filtered out reads.
    synonyms:
    - --valid
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "remove intermediate files. WARNING: together with format \"short\"\
      \ or\nvalid options, this may results in losing data"
    synonyms:
    - --clean
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
      pair of reads e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these\nnumberscorrespond\
      \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end, 5:\
      \ too close from RES, 6: too short, 7: too\nlarge, 8: over-represented, 9: duplicated,\
      \ 10: random breaks"
    synonyms:
    - --apply
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: "[0.001%] percentage of restriction-enzyme (RE) genomic fragments\n\
      with more coverage to exclude (possible PCR artifact)."
    synonyms:
    - --over_represented
    args: !SimpleFlagArg
      name: NUM
    optional: true
  - !Flag
    description: "[100000] to exclude large genomic RE fragments (probably resulting\n\
      from gaps in the reference genome)"
    synonyms:
    - --max_frag_size
    args: !SimpleFlagArg
      name: NUM
    optional: true
  - !Flag
    description: "[50] to exclude small genomic RE fragments (smaller than sequenced\n\
      reads)"
    synonyms:
    - --min_frag_size
    args: !SimpleFlagArg
      name: NUM
    optional: true
  - !Flag
    description: "[5] to exclude read-ends falling too close from RE site (pseudo-\n\
      dangling-ends)\n"
    synonyms:
    - --re_proximity
    args: !SimpleFlagArg
      name: NUM
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit filter [-h] [--force] [--resume] [--apply INT [INT ...]]\
    \ [-w PATH] [-C CPUS]\n                     [--noX] [--over_represented NUM] [--max_frag_size\
    \ NUM]\n                     [--min_frag_size NUM] [--re_proximity NUM] [--tmpdb\
    \ PATH]\n                     [--pathids INT [INT ...]] [--compress_input] [--format\
    \ {short,mid,long}]\n                     [--valid] [--clean] [--samtools PATH]\n\
    \nFilter parsed Hi-C reads and get valid pair of reads to work with\n\noptional\
    \ arguments:\n  -h, --help               show this help message and exit\n\nGeneral\
    \ options:\n  --force                  overwrite previously run job\n  --resume\
    \                 use filters of previously run job\n  -w PATH, --workdir PATH\
    \  path to working directory (generated with the tool tadbit mapper)\n  -C CPUS,\
    \ --cpus CPUS     [8] Maximum number of CPU cores available in the execution host.\
    \ If\n                           higher than 1, tasks with multi-threading capabilities\
    \ will enabled\n                           (if 0 all available) cores will be\
    \ used\n  --noX                    no display server (X screen)\n  --tmpdb PATH\
    \             if provided uses this directory to manipulate the database\n  --pathids\
    \ INT [INT ...]  Use as input data generated by a job under a given pathids. Use\n\
    \                           tadbit describe to find out which. To filter an intersected\
    \ file\n                           produced with tadbit map --fast_fragment only\
    \ one PATHid is needed\n                           otherwise one per read is needed,\
    \ first for read 1, second for read\n                           2.\n  --compress_input\
    \         Compress input mapped files when parsing is done. This is done in\n\
    \                           background, while next MAP file is processed, or while\
    \ reads are\n                           sorted.\n  --samtools PATH          path\
    \ samtools binary\n\nStorage options:\n  --format {short,mid,long}\n         \
    \                  [mid] for compression into pseudo-BAM format. Short contains\
    \ only\n                           positions of reads mapped, mid everything but\
    \ restriction sites.\n  --valid                  stores only valid-pairs discards\
    \ filtered out reads.\n  --clean                  remove intermediate files. WARNING:\
    \ together with format \"short\" or\n                           valid options,\
    \ this may results in losing data\n\nFiltering options:\n  --apply INT [INT ...]\
    \    [[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n      \
    \                     pair of reads e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these\n\
    \                           numberscorrespond to: 1: self-circle, 2: dangling-end,\
    \ 3: error, 4:\n                           extra dangling-end, 5: too close from\
    \ RES, 6: too short, 7: too\n                           large, 8: over-represented,\
    \ 9: duplicated, 10: random breaks\n  --over_represented NUM   [0.001%] percentage\
    \ of restriction-enzyme (RE) genomic fragments\n                           with\
    \ more coverage to exclude (possible PCR artifact).\n  --max_frag_size NUM   \
    \   [100000] to exclude large genomic RE fragments (probably resulting\n     \
    \                      from gaps in the reference genome)\n  --min_frag_size NUM\
    \      [50] to exclude small genomic RE fragments (smaller than sequenced\n  \
    \                         reads)\n  --re_proximity NUM       [5] to exclude read-ends\
    \ falling too close from RE site (pseudo-\n                           dangling-ends)\n"
  generated_using: *id004
- !Command
  command: *id011
  positional: []
  named:
  - !Flag
    description: path to working directory (generated with the tool tadbit mapper)
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: resolution at which to output matrices
    synonyms:
    - -r
    - --resolution
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "path to a TADbit-generated BAM file with all reads (other wise the\n\
      tool will guess from the working directory database)"
    synonyms:
    - --bam
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "Use as input data generated by a job with a given jobid. Use tadbit\n\
      describe to find out which."
    synonyms:
    - -j
    - --jobid
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "[100] Define maximum number of jobs for reading BAM file (set to\n\
      higher numbers for large files and low RAM memory)."
    synonyms:
    - --max_njobs
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: overwrite previously run job
    synonyms:
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[8] Maximum number of CPU cores available in the execution host.\
      \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
      (if 0 all available) cores will be used"
    synonyms:
    - -C
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: skip calculation of Cis-percentage and decay
    synonyms:
    - --normalize_only
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[95%] maximum percentage of zeroes allowed per column.'
    synonyms:
    - --perc_zeros
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: "[None] minimum number of reads mapped to a bin (recommended value\n\
      could be 2500). If set this option overrides the perc_zero\nfiltering... This\
      \ option is slightly slower."
    synonyms:
    - --min_count
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: '[None] lower percentile from which consider bins as good.'
    synonyms:
    - --min_perc
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: '[None] upper percentile until which consider bins as good.'
    synonyms:
    - --max_perc
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: skip normalization
    synonyms:
    - --filter_only
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "only filter according to the percentage of zero count or minimum\n\
      count of reads"
    synonyms:
    - --fast_filter
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ":POS1-POS2 [CHR:POS1-POS2 ...], --badcols CHR:POS1-POS2 [CHR:POS1-POS2\
      \ ...]\nextra regions to be added to bad-columns (ingenomic position). e.g.:\n\
      --badcols 1:150000000-160000000 2:1200000-1300000"
    synonyms:
    - -B
    args: !SimpleFlagArg
      name: CHR
    optional: true
  - !Flag
    description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
      pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
      \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end, 5:\
      \ too close from RES, 6: too short, 7: too\nlarge, 8: over-represented, 9: duplicated,\
      \ 10: random breaks, 11:\ntrans-chromosomic"
    synonyms:
    - -F
    - --filter
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: input BAM file contains only valid pairs (already filtered).
    synonyms:
    - --valid
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[Vanilla] normalization(s) to apply. Order matters. Choices:\nVanilla,\
      \ ICE, SQRT, oneD, custom"
    synonyms:
    - --normalization
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: "biases file to compute decay. REQUIRED with \"custom\" normalization.\n\
      Format: single column with header"
    synonyms:
    - --biases_path
    args: !SimpleFlagArg
      name: BIASES_PATH
    optional: true
  - !Flag
    description: "Path to mappability bedGraph file, required for oneD normalization.\n\
      Mappability file can be generated with GEM (example from the genomic FASTA file\
      \ hg38.fa):\ngem-indexer -i hg38.fa -o hg38\ngem-mappability -I hg38.gem -l\
      \ 50 -o hg38.50mer -T 8\ngem-2-wig -I hg38.gem -i hg38.50mer.mappability -o\
      \ hg38.50mer\nwigToBigWig hg38.50mer.wig hg38.50mer.sizes hg38.50mer.bw\nbigWigToBedGraph\
      \ hg38.50mer.bw  hg38.50mer.bedGraph"
    synonyms:
    - --mappability
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "Path to FASTA file with genome sequence, to compute GC content and\n\
      number of restriction sites per bin. Required for oneD normalization"
    synonyms:
    - --fasta
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: restriction enzyme name(s). Required for oneD normalization
    synonyms:
    - --renz
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: "[1] target mean value of a cell after normalization (can be used\
      \ to\nweight experiments before merging)"
    synonyms:
    - --factor
    args: !SimpleFlagArg
      name: NUM
    optional: true
  - !Flag
    description: "[1] Only for oneD normalization: proportion of data to be used in\n\
      fitting (for very large datasets). Number between 0 and 1."
    synonyms:
    - --prop_data
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: "[1] Only for oneD normalization: seed number for the random picking\n\
      of data when using the \"prop_data\" parameter\n"
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit normalize [-h] -w PATH -r INT [--bam PATH] [-j INT] [--max_njobs\
    \ INT] [--force]\n                        [--tmpdb PATH] [-C CPUS] [--normalize_only]\
    \ [--noX]\n                        [--normalization STR] [--biases_path BIASES_PATH]\
    \ [--mappability PATH]\n                        [--fasta PATH] [--renz STR] [--factor\
    \ NUM] [--prop_data FLOAT]\n                        [--seed INT] [--perc_zeros\
    \ FLOAT] [--min_count INT] [--min_perc INT]\n                        [--max_perc\
    \ INT] [--filter_only] [--fast_filter]\n                        [-B CHR:POS1-POS2\
    \ [CHR:POS1-POS2 ...]] [-F INT [INT ...]] [--valid]\n\nnormalize Hi-C data and\
    \ generates array of biases\n\noptional arguments:\n  -h, --help             \
    \  show this help message and exit\n\nRequired options:\n  -w PATH, --workdir\
    \ PATH  path to working directory (generated with the tool tadbit mapper)\n  -r\
    \ INT, --resolution INT\n                           resolution at which to output\
    \ matrices\n\nGeneral options:\n  --bam PATH               path to a TADbit-generated\
    \ BAM file with all reads (other wise the\n                           tool will\
    \ guess from the working directory database)\n  -j INT, --jobid INT      Use as\
    \ input data generated by a job with a given jobid. Use tadbit\n             \
    \              describe to find out which.\n  --max_njobs INT          [100] Define\
    \ maximum number of jobs for reading BAM file (set to\n                      \
    \     higher numbers for large files and low RAM memory).\n  --force         \
    \         overwrite previously run job\n  --tmpdb PATH             if provided\
    \ uses this directory to manipulate the database\n  -C CPUS, --cpus CPUS     [8]\
    \ Maximum number of CPU cores available in the execution host. If\n          \
    \                 higher than 1, tasks with multi-threading capabilities will\
    \ enabled\n                           (if 0 all available) cores will be used\n\
    \  --normalize_only         skip calculation of Cis-percentage and decay\n  --noX\
    \                    no display server (X screen)\n\nBin filtering options:\n\
    \  --perc_zeros FLOAT       [95%] maximum percentage of zeroes allowed per column.\n\
    \  --min_count INT          [None] minimum number of reads mapped to a bin (recommended\
    \ value\n                           could be 2500). If set this option overrides\
    \ the perc_zero\n                           filtering... This option is slightly\
    \ slower.\n  --min_perc INT           [None] lower percentile from which consider\
    \ bins as good.\n  --max_perc INT           [None] upper percentile until which\
    \ consider bins as good.\n  --filter_only            skip normalization\n  --fast_filter\
    \            only filter according to the percentage of zero count or minimum\n\
    \                           count of reads\n  -B CHR:POS1-POS2 [CHR:POS1-POS2\
    \ ...], --badcols CHR:POS1-POS2 [CHR:POS1-POS2 ...]\n                        \
    \   extra regions to be added to bad-columns (ingenomic position). e.g.:\n   \
    \                        --badcols 1:150000000-160000000 2:1200000-1300000\n\n\
    Read filtering options:\n  -F INT [INT ...], --filter INT [INT ...]\n        \
    \                   [[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os\
    \ valid\n                           pair of reads e.g.: '--apply 1 2 3 4 8 9 10'.\
    \ Where these\n                           numberscorrespond to: 1: self-circle,\
    \ 2: dangling-end, 3: error, 4:\n                           extra dangling-end,\
    \ 5: too close from RES, 6: too short, 7: too\n                           large,\
    \ 8: over-represented, 9: duplicated, 10: random breaks, 11:\n               \
    \            trans-chromosomic\n  --valid                  input BAM file contains\
    \ only valid pairs (already filtered).\n\nNormalization options:\n  --normalization\
    \ STR      [Vanilla] normalization(s) to apply. Order matters. Choices:\n    \
    \                       Vanilla, ICE, SQRT, oneD, custom\n  --biases_path BIASES_PATH\n\
    \                           biases file to compute decay. REQUIRED with \"custom\"\
    \ normalization.\n                           Format: single column with header\n\
    \  --mappability PATH       Path to mappability bedGraph file, required for oneD\
    \ normalization.\n                           Mappability file can be generated\
    \ with GEM (example from the genomic FASTA file hg38.fa):\n                  \
    \         \n                                gem-indexer -i hg38.fa -o hg38\n \
    \                               gem-mappability -I hg38.gem -l 50 -o hg38.50mer\
    \ -T 8\n                                gem-2-wig -I hg38.gem -i hg38.50mer.mappability\
    \ -o hg38.50mer\n                                wigToBigWig hg38.50mer.wig hg38.50mer.sizes\
    \ hg38.50mer.bw\n                                bigWigToBedGraph hg38.50mer.bw\
    \  hg38.50mer.bedGraph\n  --fasta PATH             Path to FASTA file with genome\
    \ sequence, to compute GC content and\n                           number of restriction\
    \ sites per bin. Required for oneD normalization\n  --renz STR               restriction\
    \ enzyme name(s). Required for oneD normalization\n  --factor NUM            \
    \ [1] target mean value of a cell after normalization (can be used to\n      \
    \                     weight experiments before merging)\n  --prop_data FLOAT\
    \        [1] Only for oneD normalization: proportion of data to be used in\n \
    \                          fitting (for very large datasets). Number between 0\
    \ and 1.\n  --seed INT               [1] Only for oneD normalization: seed number\
    \ for the random picking\n                           of data when using the \"\
    prop_data\" parameter\n"
  generated_using: *id004
- !Command
  command: *id012
  positional: []
  named:
  - !Flag
    description: path to a new output folder
    synonyms:
    - -w
    - --workdir
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to working directory of the first HiC data sample to merge
    synonyms:
    - -w1
    - --workdir1
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to working directory of the second HiC data sample to merge
    synonyms:
    - -w2
    - --workdir2
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "path to the first TADbit-generated BAM file with all reads (other\n\
      wise the tool will guess from the working directory database)"
    synonyms:
    - --bam1
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: no display server (X screen)
    synonyms:
    - --noX
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "path to the second TADbit-generated BAM file with all reads (other\n\
      wise the tool will guess from the working directory database)"
    synonyms:
    - --bam2
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[8] Maximum number of CPU cores available in the execution host.\
      \ If\nhigher than 1, tasks with multi-threading capabilities will enabled\n\
      (if 0 all available) cores will be used"
    synonyms:
    - -C
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: resolution at which to do the comparison, and generate the matrices.
    synonyms:
    - -r
    - --resolution
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "skip the comparison between replicates (faster). Comparisons are\n\
      performed at 3 levels 1- comparing first diagonals of each\nexperiment (and\
      \ generating SCC score and standard deviation see\nhttps://doi.org/10.1101/gr.220640.117)\
      \ 2- Comparing the first\neigenvectors of input experiments 3- Generates reproducibility\
      \ score\nusing function from https://doi.org/10.1093/bioinformatics/btx152"
    synonyms:
    - --skip_comparison
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: skip the merge of replicates (faster).
    synonyms:
    - --skip_merge
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[genome] save genomic or chromosomic matrix.'
    synonyms:
    - --save
    args: !RepeatFlagArg
      name: STR
    optional: true
  - !Flag
    description: "Use as input data generated by a job with a given jobid. Use tadbit\n\
      describe to find out which."
    synonyms:
    - --jobid1
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: "Use as input data generated by a job with a given jobid. Use tadbit\n\
      describe to find out which."
    synonyms:
    - --jobid2
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: overwrite previously run job
    synonyms:
    - --force
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: compare normalized matrices
    synonyms:
    - --norm
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: path to file with precalculated biases by columns
    synonyms:
    - --biases1
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: path to file with precalculated biases by columns
    synonyms:
    - --biases2
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
      pair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond\
      \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end, 5:\
      \ too close from RES, 6: too short, 7: too\nlarge, 8: over-represented, 9: duplicated,\
      \ 10: random breaks, 11:\ntrans-chromosomic"
    synonyms:
    - --filter
    args: !RepeatFlagArg
      name: INT
    optional: true
  - !Flag
    description: path samtools binary
    synonyms:
    - --samtools
    args: !SimpleFlagArg
      name: PATH
    optional: true
  - !Flag
    description: if provided uses this directory to manipulate the database
    synonyms:
    - --tmpdb
    args: !SimpleFlagArg
      name: PATH
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tadbit merge [-h] [-w PATH] [-w1 PATH] [-w2 PATH] [--bam1 PATH]\
    \ [--noX] [--bam2 PATH]\n                    [-C CPUS] [-r INT] [--skip_comparison]\
    \ [--skip_merge]\n                    [--save STR [STR ...]] [--jobid1 INT] [--jobid2\
    \ INT] [--force] [--norm]\n                    [--biases1 PATH] [--biases2 PATH]\
    \ [--filter INT [INT ...]]\n                    [--samtools PATH] [--tmpdb PATH]\n\
    \nload two working directories with different Hi-C data samples and merges them\
    \ into a new\nworking directory generating some statistics\n\noptional arguments:\n\
    \  -h, --help               show this help message and exit\n\nGeneral options:\n\
    \  -w PATH, --workdir PATH  path to a new output folder\n  -w1 PATH, --workdir1\
    \ PATH\n                           path to working directory of the first HiC\
    \ data sample to merge\n  -w2 PATH, --workdir2 PATH\n                        \
    \   path to working directory of the second HiC data sample to merge\n  --bam1\
    \ PATH              path to the first TADbit-generated BAM file with all reads\
    \ (other\n                           wise the tool will guess from the working\
    \ directory database)\n  --noX                    no display server (X screen)\n\
    \  --bam2 PATH              path to the second TADbit-generated BAM file with\
    \ all reads (other\n                           wise the tool will guess from the\
    \ working directory database)\n  -C CPUS, --cpus CPUS     [8] Maximum number of\
    \ CPU cores available in the execution host. If\n                           higher\
    \ than 1, tasks with multi-threading capabilities will enabled\n             \
    \              (if 0 all available) cores will be used\n  -r INT, --resolution\
    \ INT\n                           resolution at which to do the comparison, and\
    \ generate the matrices.\n  --skip_comparison        skip the comparison between\
    \ replicates (faster). Comparisons are\n                           performed at\
    \ 3 levels 1- comparing first diagonals of each\n                           experiment\
    \ (and generating SCC score and standard deviation see\n                     \
    \      https://doi.org/10.1101/gr.220640.117) 2- Comparing the first\n       \
    \                    eigenvectors of input experiments 3- Generates reproducibility\
    \ score\n                           using function from https://doi.org/10.1093/bioinformatics/btx152\n\
    \  --skip_merge             skip the merge of replicates (faster).\n  --save STR\
    \ [STR ...]     [genome] save genomic or chromosomic matrix.\n  --jobid1 INT \
    \            Use as input data generated by a job with a given jobid. Use tadbit\n\
    \                           describe to find out which.\n  --jobid2 INT      \
    \       Use as input data generated by a job with a given jobid. Use tadbit\n\
    \                           describe to find out which.\n  --force           \
    \       overwrite previously run job\n  --norm                   compare normalized\
    \ matrices\n  --biases1 PATH           path to file with precalculated biases\
    \ by columns\n  --biases2 PATH           path to file with precalculated biases\
    \ by columns\n  --filter INT [INT ...]   [[1, 2, 3, 4, 6, 7, 9, 10]] Use filters\
    \ to define a set os valid\n                           pair of reads e.g.: '--apply\
    \ 1 2 3 4 8 9 10'. Where these\n                           numberscorrespond to:\
    \ 1: self-circle, 2: dangling-end, 3: error, 4:\n                           extra\
    \ dangling-end, 5: too close from RES, 6: too short, 7: too\n                \
    \           large, 8: over-represented, 9: duplicated, 10: random breaks, 11:\n\
    \                           trans-chromosomic\n  --samtools PATH          path\
    \ samtools binary\n  --tmpdb PATH             if provided uses this directory\
    \ to manipulate the database\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: tadbit [-h]\n              {map,parse,filter,describe,clean,normalize,bin,merge,segment}\n\
  \              ...\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n\nAVAILABLE PROGRAMS:\n  {map,parse,filter,describe,clean,normalize,bin,merge,segment}\n\
  \    map                 Map Hi-C reads and organize results in an output\n    \
  \                    working directory\n    parse               Parse mapped Hi-C\
  \ reads and get the intersection\n    filter              Filter parsed Hi-C reads\
  \ and get valid pair of reads\n                        to work with\n    describe\
  \            Describe jobs and results in a given working directory\n    clean \
  \              Delete jobs and results of a given list of jobids in a\n        \
  \                given directories\n    normalize           normalize Hi-C data\
  \ and generates array of biases\n    bin                 bin Hi-C data into matrices\n\
  \    merge               load two working directories with different Hi-C data\n\
  \                        samples and merges them into a new working directory\n\
  \                        generating some statistics\n    segment             Finds\
  \ TAD or compartment segmentation in Hi-C data.\n"
generated_using: *id004
