!Command
command:
- influx_s
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --noopt
  description: "no optimization, just use free parameters as is (after a\nprojection\
    \ on feasibility domain), to calculate dependent\nfluxes, cumomers, stats and\
    \ so on"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --noscale
  description: "no scaling factors to optimize => all scaling factors are\nassumed\
    \ to be 1"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --meth
  description: "method for optimization, one of 'nlsic|BFGS|Nelder-\nMead|pso'. Default:\
    \ 'nlsic'. Multiple occurrences of this\noption can appear on command line. In\
    \ this case,\nspecified minimization methods are applied successively,\ne.g. '--meth\
    \ pso --meth nlsic' means that 'pso' will be\nused first, then 'nlsic' will take\
    \ over from the point\nwhere 'pso' ends. In case of multiple methods, it is\n\
    recommended to start with non-gradient methods like 'pso'\nor 'Nelder-Mead' and\
    \ make them follow by gradient based\nmethods like 'nlsic' or 'BFGS'. If 'pso'\
    \ or 'Nelder-Mead'\nare indeed used as the first method, it is not\nrecommended\
    \ to combine them with '--zc' option."
  args: !SimpleFlagArg
    name: METH
- !Flag
  optional: true
  synonyms:
  - --fullsys
  description: "calculate all cumomer set (not just the reduced one\nnecesary to simulate\
    \ measurements)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --emu
  description: simulate labeling in EMU approach
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --irand
  description: "ignore initial approximation for free parameters (free\nfluxes and\
    \ metabolite concentrations) from the FTBL file\nor from a dedicated file (cf\
    \ --fseries and --iseries\noption) and use random values drawn uniformly from\
    \ [0,1]\ninterval"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sens
  description: "sensitivity method: SENS can be 'mc[=N]', mc stands for\nMonte-Carlo.\
    \ N is an optional number of Monte-Carlo\nsimulations. Default for N: 10"
  args: !SimpleFlagArg
    name: SENS
- !Flag
  optional: true
  synonyms:
  - --cupx
  description: "upper limit for reverse fluxes. Must be in interval [0,\n1]. Default:\
    \ 0.999"
  args: !SimpleFlagArg
    name: CUPX
- !Flag
  optional: true
  synonyms:
  - --cupn
  description: "absolute limit for net fluxes: -cupn <= netflux <= cupn.\nMust be\
    \ non negative. Value 0 means no limit. Default:\n1.e3"
  args: !SimpleFlagArg
    name: CUPN
- !Flag
  optional: true
  synonyms:
  - --cupp
  description: 'upper limit for metabolite pool. Default: 1.e5'
  args: !SimpleFlagArg
    name: CUPP
- !Flag
  optional: true
  synonyms:
  - --clownr
  description: "lower limit for not reversible free and dependent fluxes.\nZero value\
    \ (default) means no lower limit"
  args: !SimpleFlagArg
    name: CLOWNR
- !Flag
  optional: true
  synonyms:
  - --cinout
  description: "lower limit for input/output free and dependent fluxes.\nMust be non\
    \ negative. Default: 0"
  args: !SimpleFlagArg
    name: CINOUT
- !Flag
  optional: true
  synonyms:
  - --clowp
  description: "lower limit for free metabolite pools. Must be positive.\nDefault\
    \ 1.e-8"
  args: !SimpleFlagArg
    name: CLOWP
- !Flag
  optional: true
  synonyms:
  - --np
  description: "When integer >= 1, it is a number of parallel\nsubprocesses used in\
    \ Monte-Carlo (MC) simulations or for\nmultiple FTBL inputs. When NP is a float\
    \ number between 0\nand 1, it gives a fraction of available cores (rounded to\n\
    closest integer) to be used. Without this option or for\nNP=0, all available cores\
    \ in a given node are used for MC\nsimulations."
  args: !SimpleFlagArg
    name: NP
- !Flag
  optional: true
  synonyms:
  - --ln
  description: "Least norm solution is used for increments during the\nnon-linear\
    \ iterations when Jacobian is rank deficient"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sln
  description: "Least norm of the solution of linearized problem (and not\njust of\
    \ increments) is used when Jacobian is rank\ndeficient"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tikhreg
  description: "Approximate least norm solution is used for increments\nduring the\
    \ non-linear iterations when Jacobian is rank\ndeficient"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lim
  description: The same as --ln but with a function limSolve::lsei()
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --zc
  description: "Apply zero crossing strategy with non negative threshold\nfor net\
    \ fluxes"
  args: !SimpleFlagArg
    name: ZC
- !Flag
  optional: true
  synonyms:
  - --ffguess
  description: "Don't use free/dependent flux definitions from FTBL\nfile(s). Make\
    \ an automatic guess."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fseries
  description: "File name with free parameter values for multiple\nstarting points.\
    \ Default: '' (empty, i.e. only one\nstarting point from the FTBL file is used)"
  args: !SimpleFlagArg
    name: FSERIES
- !Flag
  optional: true
  synonyms:
  - --iseries
  description: "Indexes of starting points to use. Format: '1:10' -- use\nonly first\
    \ ten starting points; '1,3' -- use the the\nfirst and third starting points;\
    \ '1:10,15,91:100' -- a\nmix of both formats is allowed. Default: '' (empty, i.e.\n\
    all provided starting points are used)"
  args: !SimpleFlagArg
    name: ISERIES
- !Flag
  optional: true
  synonyms:
  - --seed
  description: "Integer (preferably a prime integer) used for\nreproducible random\
    \ number generating. It makes\nreproducible random starting points (--irand) but\
    \ also\nMonte-Carlo simulations for sensitivity analysis.\nDefault: none, i.e.\
    \ current system value is used, so\nrandom drawing will be varying at each run."
  args: !SimpleFlagArg
    name: SEED
- !Flag
  optional: true
  synonyms:
  - --excl_outliers
  description: "This option takes an optional argument, a p-value between\n0 and 1\
    \ which is used to filter out measurement outliers.\nThe filtering is based on\
    \ Z statistics calculated on\nreduced residual distribution. Default: 0.01."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --nocalc
  description: generate an R code but not execute it.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --addnoise
  description: "Add centered gaussian noise to simulated measurements\nwritten to\
    \ _res.kvh file. SD of this noise is taken from\nFTBL file"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --copy_doc
  description: "copy documentation directory in the current directory and\nexit. If\
    \ ./doc exists, its content is silently owerriten."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --copy_test
  description: "copy test directory in the current directory and exit. If\n./test\
    \ exists, its content is silently owerriten."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --install_rdep
  description: install R dependencies and exit.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --TIMEIT
  description: 'developer option: measure cpu time or not'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --prof
  description: 'developer option: do time profiling or not'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tblimit
  description: "developer option: set trace back limit for python error\nmessages\n"
  args: !SimpleFlagArg
    name: TBLIMIT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: influx_s [options] /path/to/FTBL_file1 [FTBL_file2 [...]]\n\nOptimize\
  \ free fluxes and optionaly metabolite concentrations of a given static\nmetabolic\
  \ network defined in an FTBL file to fit 13C data provided in the same\nFTBL file.\n\
  \nOptions:\n  --version          show program's version number and exit\n  -h, --help\
  \         show this help message and exit\n  --noopt            no optimization,\
  \ just use free parameters as is (after a\n                     projection on feasibility\
  \ domain), to calculate dependent\n                     fluxes, cumomers, stats\
  \ and so on\n  --noscale          no scaling factors to optimize => all scaling\
  \ factors are\n                     assumed to be 1\n  --meth=METH        method\
  \ for optimization, one of 'nlsic|BFGS|Nelder-\n                     Mead|pso'.\
  \ Default: 'nlsic'. Multiple occurrences of this\n                     option can\
  \ appear on command line. In this case,\n                     specified minimization\
  \ methods are applied successively,\n                     e.g. '--meth pso --meth\
  \ nlsic' means that 'pso' will be\n                     used first, then 'nlsic'\
  \ will take over from the point\n                     where 'pso' ends. In case\
  \ of multiple methods, it is\n                     recommended to start with non-gradient\
  \ methods like 'pso'\n                     or 'Nelder-Mead' and make them follow\
  \ by gradient based\n                     methods like 'nlsic' or 'BFGS'. If 'pso'\
  \ or 'Nelder-Mead'\n                     are indeed used as the first method, it\
  \ is not\n                     recommended to combine them with '--zc' option.\n\
  \  --fullsys          calculate all cumomer set (not just the reduced one\n    \
  \                 necesary to simulate measurements)\n  --emu              simulate\
  \ labeling in EMU approach\n  --irand            ignore initial approximation for\
  \ free parameters (free\n                     fluxes and metabolite concentrations)\
  \ from the FTBL file\n                     or from a dedicated file (cf --fseries\
  \ and --iseries\n                     option) and use random values drawn uniformly\
  \ from [0,1]\n                     interval\n  --sens=SENS        sensitivity method:\
  \ SENS can be 'mc[=N]', mc stands for\n                     Monte-Carlo. N is an\
  \ optional number of Monte-Carlo\n                     simulations. Default for\
  \ N: 10\n  --cupx=CUPX        upper limit for reverse fluxes. Must be in interval\
  \ [0,\n                     1]. Default: 0.999\n  --cupn=CUPN        absolute limit\
  \ for net fluxes: -cupn <= netflux <= cupn.\n                     Must be non negative.\
  \ Value 0 means no limit. Default:\n                     1.e3\n  --cupp=CUPP   \
  \     upper limit for metabolite pool. Default: 1.e5\n  --clownr=CLOWNR    lower\
  \ limit for not reversible free and dependent fluxes.\n                     Zero\
  \ value (default) means no lower limit\n  --cinout=CINOUT    lower limit for input/output\
  \ free and dependent fluxes.\n                     Must be non negative. Default:\
  \ 0\n  --clowp=CLOWP      lower limit for free metabolite pools. Must be positive.\n\
  \                     Default 1.e-8\n  --np=NP            When integer >= 1, it\
  \ is a number of parallel\n                     subprocesses used in Monte-Carlo\
  \ (MC) simulations or for\n                     multiple FTBL inputs. When NP is\
  \ a float number between 0\n                     and 1, it gives a fraction of available\
  \ cores (rounded to\n                     closest integer) to be used. Without this\
  \ option or for\n                     NP=0, all available cores in a given node\
  \ are used for MC\n                     simulations.\n  --ln               Least\
  \ norm solution is used for increments during the\n                     non-linear\
  \ iterations when Jacobian is rank deficient\n  --sln              Least norm of\
  \ the solution of linearized problem (and not\n                     just of increments)\
  \ is used when Jacobian is rank\n                     deficient\n  --tikhreg   \
  \       Approximate least norm solution is used for increments\n               \
  \      during the non-linear iterations when Jacobian is rank\n                \
  \     deficient\n  --lim              The same as --ln but with a function limSolve::lsei()\n\
  \  --zc=ZC            Apply zero crossing strategy with non negative threshold\n\
  \                     for net fluxes\n  --ffguess          Don't use free/dependent\
  \ flux definitions from FTBL\n                     file(s). Make an automatic guess.\n\
  \  --fseries=FSERIES  File name with free parameter values for multiple\n      \
  \               starting points. Default: '' (empty, i.e. only one\n           \
  \          starting point from the FTBL file is used)\n  --iseries=ISERIES  Indexes\
  \ of starting points to use. Format: '1:10' -- use\n                     only first\
  \ ten starting points; '1,3' -- use the the\n                     first and third\
  \ starting points; '1:10,15,91:100' -- a\n                     mix of both formats\
  \ is allowed. Default: '' (empty, i.e.\n                     all provided starting\
  \ points are used)\n  --seed=SEED        Integer (preferably a prime integer) used\
  \ for\n                     reproducible random number generating. It makes\n  \
  \                   reproducible random starting points (--irand) but also\n   \
  \                  Monte-Carlo simulations for sensitivity analysis.\n         \
  \            Default: none, i.e. current system value is used, so\n            \
  \         random drawing will be varying at each run.\n  --excl_outliers    This\
  \ option takes an optional argument, a p-value between\n                     0 and\
  \ 1 which is used to filter out measurement outliers.\n                     The\
  \ filtering is based on Z statistics calculated on\n                     reduced\
  \ residual distribution. Default: 0.01.\n  --nocalc           generate an R code\
  \ but not execute it.\n  --addnoise         Add centered gaussian noise to simulated\
  \ measurements\n                     written to _res.kvh file. SD of this noise\
  \ is taken from\n                     FTBL file\n  --copy_doc         copy documentation\
  \ directory in the current directory and\n                     exit. If ./doc exists,\
  \ its content is silently owerriten.\n  --copy_test        copy test directory in\
  \ the current directory and exit. If\n                     ./test exists, its content\
  \ is silently owerriten.\n  --install_rdep     install R dependencies and exit.\n\
  \  --TIMEIT           developer option: measure cpu time or not\n  --prof      \
  \       developer option: do time profiling or not\n  --tblimit=TBLIMIT  developer\
  \ option: set trace back limit for python error\n                     messages\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/influx_si:5.3.0--py_0
