!Command
command:
- seqkit
- mutate
positional:
- !Positional
  description: A C G T N a c g t n
  position: 0
  name: seq
  optional: false
named:
- !Flag
  description: ":-1                      n\n2:-2      C G T N a c g t\n1:-1    A C\
    \ G T N a c g t n\n1:12    A C G T N a c g t n"
  synonyms:
  - '-1'
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: :-1    A C G T N a c g t n
  synonyms:
  - '-12'
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[match seqs to mutate] match by full name instead of just id'
  synonyms:
  - -n
  - --by-name
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'deletion mutation: deleting subsequence in a range. e.g., -d 1:2 for
    deleting leading two bases, -d -3:-1 for removing last 3 bases'
  synonyms:
  - -d
  - --deletion
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: '[match seqs to mutate] ignore case of search pattern'
  synonyms:
  - -I
  - --ignore-case
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'insertion mutation: inserting bases behind of given position, e.g.,
    -i 0:ACGT for inserting ACGT at the beginning, -1:* for add * to the end'
  synonyms:
  - -i
  - --insertion
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: '[match seqs to mutate] invert the sense of matching, to select non-matching
    records'
  synonyms:
  - -v
  - --invert-match
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[match seqs to mutate] search pattern (multiple values supported.\
    \ Attention: use double quotation marks for patterns containing comma, e.g., -p\
    \ '\"A{2,}\"'))"
  synonyms:
  - -s
  - --pattern
  args: !SimpleFlagArg
    name: strings
  optional: true
- !Flag
  description: '[match seqs to mutate] pattern file (one record per line)'
  synonyms:
  - -f
  - --pattern-file
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: 'point mutation: changing base at given position. e.g., -p 2:C for
    setting 2nd base as C, -p -1:A for change last base as A'
  synonyms:
  - -p
  - --point
  args: !SimpleFlagArg
    name: strings
  optional: true
- !Flag
  description: '[match seqs to mutate] search patterns are regular expression'
  synonyms:
  - -r
  - --use-regexp
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: length of sequence prefix of the first FASTA record based on which
    seqkit guesses the sequence type (0 for whole seq) (default 10000)
  synonyms:
  - --alphabet-guess-seq-length
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud...
  synonyms:
  - --id-ncbi
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: regular expression for parsing ID (default "^(\\S+)\\s?")
  synonyms:
  - --id-regexp
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: file of input files list (one file per line), if given, they are appended
    to files from cli arguments
  synonyms:
  - --infile-list
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: line width when outputing FASTA format (0 for no wrap) (default 60)
  synonyms:
  - -w
  - --line-width
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: out file ("-" for stdout, suffix .gz for gzipped out) (default "-")
  synonyms:
  - -o
  - --out-file
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: be quiet and do not show extra information
  synonyms:
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically
    detect by the first sequence) (default "auto")
  synonyms:
  - -t
  - --seq-type
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: 'number of CPUs. (default value: 1 for single-CPU PC, 2 for others.
    can also set with environment variable SEQKIT_THREADS) (default 2)'
  synonyms:
  - -j
  - --threads
  args: !SimpleFlagArg
    name: int
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: help for mutate
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "edit sequence (point mutation, insertion, deletion)\n\nAttentions:\n\n\
  \  1. Mutiple point mutations (-p/--point) are allowed, but only single \n     insertion\
  \ (-i/--insertion) OR single deletion (-d/--deletion) is allowed.\n  2. Point mutation\
  \ takes place before insertion/deletion.\n\nNotes:\n\n  1. You can choose certain\
  \ sequences to edit using similar flags in\n     'seqkit grep'.\n\nThe definition\
  \ of position is 1-based and with some custom design.\n\nExamples:\n\n 1-based index\
  \    1 2 3 4 5 6 7 8 9 10\nnegative index    0-9-8-7-6-5-4-3-2-1\n           seq\
  \    A C G T N a c g t n\n           1:1    A\n           2:4      C G T\n     \
  \    -4:-2                c g t\n         -4:-1                c g t n\n       \
  \  -1:-1                      n\n          2:-2      C G T N a c g t\n         \
  \ 1:-1    A C G T N a c g t n\n          1:12    A C G T N a c g t n\n        -12:-1\
  \    A C G T N a c g t n\n\nUsage:\n  seqkit mutate [flags]\n\nFlags:\n  -n, --by-name\
  \               [match seqs to mutate] match by full name instead of just id\n \
  \ -d, --deletion string       deletion mutation: deleting subsequence in a range.\
  \ e.g., -d 1:2 for deleting leading two bases, -d -3:-1 for removing last 3 bases\n\
  \  -h, --help                  help for mutate\n  -I, --ignore-case           [match\
  \ seqs to mutate] ignore case of search pattern\n  -i, --insertion string      insertion\
  \ mutation: inserting bases behind of given position, e.g., -i 0:ACGT for inserting\
  \ ACGT at the beginning, -1:* for add * to the end\n  -v, --invert-match       \
  \   [match seqs to mutate] invert the sense of matching, to select non-matching\
  \ records\n  -s, --pattern strings       [match seqs to mutate] search pattern (multiple\
  \ values supported. Attention: use double quotation marks for patterns containing\
  \ comma, e.g., -p '\"A{2,}\"'))\n  -f, --pattern-file string   [match seqs to mutate]\
  \ pattern file (one record per line)\n  -p, --point strings         point mutation:\
  \ changing base at given position. e.g., -p 2:C for setting 2nd base as C, -p -1:A\
  \ for change last base as A\n  -r, --use-regexp            [match seqs to mutate]\
  \ search patterns are regular expression\n\nGlobal Flags:\n      --alphabet-guess-seq-length\
  \ int   length of sequence prefix of the first FASTA record based on which seqkit\
  \ guesses the sequence type (0 for whole seq) (default 10000)\n      --id-ncbi \
  \                        FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2|\
  \ Pseud...\n      --id-regexp string                regular expression for parsing\
  \ ID (default \"^(\\\\S+)\\\\s?\")\n      --infile-list string              file\
  \ of input files list (one file per line), if given, they are appended to files\
  \ from cli arguments\n  -w, --line-width int                  line width when outputing\
  \ FASTA format (0 for no wrap) (default 60)\n  -o, --out-file string           \
  \      out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")\n\
  \      --quiet                           be quiet and do not show extra information\n\
  \  -t, --seq-type string                 sequence type (dna|rna|protein|unlimit|auto)\
  \ (for auto, it automatically detect by the first sequence) (default \"auto\")\n\
  \  -j, --threads int                     number of CPUs. (default value: 1 for single-CPU\
  \ PC, 2 for others. can also set with environment variable SEQKIT_THREADS) (default\
  \ 2)\n"
generated_using:
- --help
