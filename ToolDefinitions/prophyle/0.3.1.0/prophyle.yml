!Command
command: &id001
- prophyle
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - prophyle
  - analyze
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    description: "['w', 'u', 'wl', 'ul']\nstatistics to use for the computation of\n\
      histograms: w (default) => weighted assignments; u\n=> unique assignments, non-weighted;\
      \ wl => weighted\nassignments, propagated to leaves; ul => unique\nassignments,\
      \ propagated to leaves."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n\
      Input format of assignments [auto]"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]       advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: &id014 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -s
        description: "['w', 'u', 'wl', 'ul']\nstatistics to use for the computation\
          \ of\nhistograms: w (default) => weighted assignments; u\n=> unique assignments,\
          \ non-weighted; wl => weighted\nassignments, propagated to leaves; ul =>\
          \ unique\nassignments, propagated to leaves."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -f
        description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n\
          Input format of assignments [auto]"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]       advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: &id013 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -s
            description: "['w', 'u', 'wl', 'ul']\nstatistics to use for the computation\
              \ of\nhistograms: w (default) => weighted assignments; u\n=> unique\
              \ assignments, non-weighted; wl => weighted\nassignments, propagated\
              \ to leaves; ul => unique\nassignments, propagated to leaves."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -f
            description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n\
              Input format of assignments [auto]"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]       advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: &id012 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -s
                description: "['w', 'u', 'wl', 'ul']\nstatistics to use for the computation\
                  \ of\nhistograms: w (default) => weighted assignments; u\n=> unique\
                  \ assignments, non-weighted; wl => weighted\nassignments, propagated\
                  \ to leaves; ul => unique\nassignments, propagated to leaves."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -f
                description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken',\
                  \ 'histo']\nInput format of assignments [auto]"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]       advanced configuration (a JSON
                  dictionary)'
                args: !EmptyFlagArg {}
              parent: &id011 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: "['w', 'u', 'wl', 'ul']\nstatistics to use for the\
                      \ computation of\nhistograms: w (default) => weighted assignments;\
                      \ u\n=> unique assignments, non-weighted; wl => weighted\nassignments,\
                      \ propagated to leaves; ul => unique\nassignments, propagated\
                      \ to leaves."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken',\
                      \ 'histo']\nInput format of assignments [auto]"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]       advanced configuration (a
                      JSON dictionary)'
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - -v
                      description: ''
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: "['w', 'u', 'wl', 'ul']\nstatistics to use for\
                          \ the computation of\nhistograms: w (default) => weighted\
                          \ assignments; u\n=> unique assignments, non-weighted; wl\
                          \ => weighted\nassignments, propagated to leaves; ul =>\
                          \ unique\nassignments, propagated to leaves."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken',\
                          \ 'histo']\nInput format of assignments [auto]"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]       advanced configuration
                          (a JSON dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl',\
                        \ 'ul']]\n                        [-f ['sam', 'bam', 'cram',\
                        \ 'uncompressed_bam', 'kraken', 'histo']]\n              \
                        \          [-c [STR [STR ...]]]\n                        {index_dir,\
                        \ tree.nw} <out.pref> <classified.bam>\n                 \
                        \       [<classified.bam> ...]\n\npositional arguments:\n\
                        \  {index_dir, tree.nw}     index directory or phylogenetic\
                        \ tree\n  <out.pref>               output prefix\n  <classified.bam>\
                        \         classified reads (use '-' for stdin)\n\noptional\
                        \ arguments:\n  -h, --help               show this help message\
                        \ and exit\n  -s ['w', 'u', 'wl', 'ul']\n                \
                        \           statistics to use for the computation of\n   \
                        \                        histograms: w (default) => weighted\
                        \ assignments; u\n                           => unique assignments,\
                        \ non-weighted; wl => weighted\n                         \
                        \  assignments, propagated to leaves; ul => unique\n     \
                        \                      assignments, propagated to leaves.\n\
                        \  -f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken',\
                        \ 'histo']\n                           Input format of assignments\
                        \ [auto]\n  -c [STR [STR ...]]       advanced configuration\
                        \ (a JSON dictionary)\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - prophyle
                      - compress
                      positional:
                      - !Positional
                        optional: true
                        position: 0
                        name: STR
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]  advanced configuration (a JSON
                          dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n\
                        \                         <index.dir> [<archive.tar.gz>]\n\
                        \npositional arguments:\n  <index.dir>         index directory\n\
                        \  <archive.tar.gz>    output archive [<index.dir>.tar.gz]\n\
                        \noptional arguments:\n  -h, --help          show this help\
                        \ message and exit\n  -c [STR [STR ...]]  advanced configuration\
                        \ (a JSON dictionary)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - prophyle
                      - decompress
                      positional:
                      - !Positional
                        optional: true
                        position: 0
                        name: STR
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -K
                        description: skip k-LCP construction
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]  advanced configuration (a JSON
                          dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR\
                        \ ...]]]\n                           <archive.tar.gz> [<output.dir>]\n\
                        \npositional arguments:\n  <archive.tar.gz>    output archive\n\
                        \  <output.dir>        output directory [./]\n\noptional arguments:\n\
                        \  -h, --help          show this help message and exit\n \
                        \ -K                  skip k-LCP construction\n  -c [STR [STR\
                        \ ...]]  advanced configuration (a JSON dictionary)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - prophyle
                      - compile
                      positional:
                      - !Positional
                        optional: true
                        position: 0
                        name: STR
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -C
                        description: clean files instead of compiling
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -F
                        description: force recompilation
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -P
                        description: run compilation in parallel
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]  advanced configuration (a JSON
                          dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c\
                        \ [STR [STR ...]]]\n\noptional arguments:\n  -h, --help  \
                        \        show this help message and exit\n  -C           \
                        \       clean files instead of compiling\n  -F           \
                        \       force recompilation\n  -P                  run compilation\
                        \ in parallel\n  -c [STR [STR ...]]  advanced configuration\
                        \ (a JSON dictionary)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - prophyle
                      - index
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        description: "directory with the library sequences [dir. of\
                          \ the first\ntree]"
                        args: !SimpleFlagArg
                          name: DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        description: number of threads [auto (8)]
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -k
                        description: k-mer length [31]
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        description: log file [<index.dir>/log.txt]
                        args: !SimpleFlagArg
                          name: STR
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: rate of sampling of the tree [no sampling]
                        args: !SimpleFlagArg
                          name: FLOAT
                      - !Flag
                        optional: true
                        synonyms:
                        - -F
                        description: rewrite index files if they already exist
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -M
                        description: mask repeats/low complexity regions (using DustMasker)
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -P
                        description: "do not add prefixes to node names when multiple\
                          \ trees\nare used"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -K
                        description: skip k-LCP construction (then restarted search
                          only)
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -T
                        description: keep temporary files from k-mer propagation
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -A
                        description: "autocomplete tree (names of internal nodes and\
                          \ FASTA\npaths)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]  advanced configuration (a JSON
                          dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k\
                        \ INT] [-l STR] [-s FLOAT] [-F]\n                      [-M]\
                        \ [-P] [-K] [-T] [-A] [-c [STR [STR ...]]]\n             \
                        \         <tree.nw> [<tree.nw> ...] <index.dir>\n\npositional\
                        \ arguments:\n  <tree.nw>           phylogenetic tree (in\
                        \ Newick/NHX)\n  <index.dir>         index directory (will\
                        \ be created)\n\noptional arguments:\n  -h, --help       \
                        \   show this help message and exit\n  -g DIR            \
                        \  directory with the library sequences [dir. of the first\n\
                        \                      tree]\n  -j INT              number\
                        \ of threads [auto (8)]\n  -k INT              k-mer length\
                        \ [31]\n  -l STR              log file [<index.dir>/log.txt]\n\
                        \  -s FLOAT            rate of sampling of the tree [no sampling]\n\
                        \  -F                  rewrite index files if they already\
                        \ exist\n  -M                  mask repeats/low complexity\
                        \ regions (using DustMasker)\n  -P                  do not\
                        \ add prefixes to node names when multiple trees\n       \
                        \               are used\n  -K                  skip k-LCP\
                        \ construction (then restarted search only)\n  -T        \
                        \          keep temporary files from k-mer propagation\n \
                        \ -A                  autocomplete tree (names of internal\
                        \ nodes and FASTA\n                      paths)\n  -c [STR\
                        \ [STR ...]]  advanced configuration (a JSON dictionary)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id009
                      - prophyle
                      - download
                      positional:
                      - !Positional
                        optional: true
                        position: 0
                        name: STR
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        description: directory for the tree and the sequences [~/prophyle]
                        args: !SimpleFlagArg
                          name: DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        description: log file
                        args: !SimpleFlagArg
                          name: STR
                      - !Flag
                        optional: true
                        synonyms:
                        - -F
                        description: rewrite library files if they already exist
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]  advanced configuration (a JSON
                          dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle download [-h] [-d DIR] [-l STR]\
                        \ [-F] [-c [STR [STR ...]]]\n                         <library>\
                        \ [<library> ...]\n\npositional arguments:\n  <library>  \
                        \         genomic library ['bacteria', 'viruses', 'plasmids',\n\
                        \                      'hmp', 'all']\n\noptional arguments:\n\
                        \  -h, --help          show this help message and exit\n \
                        \ -d DIR              directory for the tree and the sequences\
                        \ [~/prophyle]\n  -l STR              log file\n  -F     \
                        \             rewrite library files if they already exist\n\
                        \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id010
                      - prophyle
                      - classify
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -k
                        description: k-mer length [detect automatically from the index]
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -m
                        description: "measure: h1=hit count, c1=coverage, h2=norm.hit\
                          \ count,\nc2=norm.coverage [h1]"
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? h1
                            ? c1
                            ? h2
                            ? c2
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: output format [sam]
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? sam
                            ? kraken
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        description: log file
                        args: !SimpleFlagArg
                          name: STR
                      - !Flag
                        optional: true
                        synonyms:
                        - -P
                        description: incorporate sequences and qualities into SAM
                          records
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -A
                        description: annotate assignments (using tax. information
                          from NHX)
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -L
                        description: replace read assignments by their LCA
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -X
                        description: replace k-mer matches by their LCA
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -M
                        description: mimic Kraken (equivalent to "-m h1 -f kraken
                          -L -X")
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -C
                        description: use C++ impl. of the assignment algorithm (experimental)
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -K
                        description: force restarted search mode
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: '[STR [STR ...]]  advanced configuration (a JSON
                          dictionary)'
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}]\
                        \ [-f {kraken,sam}]\n                         [-l STR] [-P]\
                        \ [-A] [-L] [-X] [-M] [-C] [-K]\n                        \
                        \ [-c [STR [STR ...]]]\n                         <index.dir>\
                        \ <reads1.fq> [<reads2.fq>]\n\npositional arguments:\n  <index.dir>\
                        \         index directory\n  <reads1.fq>         first file\
                        \ with reads in FASTA/FASTQ (- for standard\n            \
                        \          input)\n  <reads2.fq>         second file with\
                        \ reads in FASTA/FASTQ\n\noptional arguments:\n  -h, --help\
                        \          show this help message and exit\n  -k INT     \
                        \         k-mer length [detect automatically from the index]\n\
                        \  -m {h1,c1,h2,c2}    measure: h1=hit count, c1=coverage,\
                        \ h2=norm.hit count,\n                      c2=norm.coverage\
                        \ [h1]\n  -f {kraken,sam}     output format [sam]\n  -l STR\
                        \              log file\n  -P                  incorporate\
                        \ sequences and qualities into SAM records\n  -A         \
                        \         annotate assignments (using tax. information from\
                        \ NHX)\n  -L                  replace read assignments by\
                        \ their LCA\n  -X                  replace k-mer matches by\
                        \ their LCA\n  -M                  mimic Kraken (equivalent\
                        \ to \"-m h1 -f kraken -L -X\")\n  -C                  use\
                        \ C++ impl. of the assignment algorithm (experimental)\n \
                        \ -K                  force restarted search mode\n  -c [STR\
                        \ [STR ...]]  advanced configuration (a JSON dictionary)\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag: !Flag
                      optional: true
                      synonyms:
                      - -v
                      - --version
                      description: show program's version number and exit
                      args: !EmptyFlagArg {}
                    help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle\
                      \ (phylogeny-based metagenomic classification)\nVersion: 0.3.1.0\n\
                      Authors: Karel Brinda, Kamil Salikhov, Simone Pignotti, Gregory\
                      \ Kucherov\nContact: kbrinda@hsph.harvard.edu\n\nUsage:   prophyle\
                      \ <command> [options]\n\noptional arguments:\n  -h, --help \
                      \    show this help message and exit\n  -v, --version  show\
                      \ program's version number and exit\n\nsubcommands:\n  \n  \
                      \  download     download a genomic database\n    index     \
                      \   build index\n    classify     classify reads\n    analyze\
                      \      analyze results (experimental)\n    compress     compress\
                      \ a ProPhyle index\n    decompress   decompress a compressed\
                      \ ProPhyle index\n    compile      compile auxiliary ProPhyle\
                      \ programs\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]\n\
                    \                        [-f ['sam', 'bam', 'cram', 'uncompressed_bam',\
                    \ 'kraken', 'histo']]\n                        [-c [STR [STR ...]]]\n\
                    \                        {index_dir, tree.nw} <out.pref> <classified.bam>\n\
                    \                        [<classified.bam> ...]\n\npositional\
                    \ arguments:\n  {index_dir, tree.nw}     index directory or phylogenetic\
                    \ tree\n  <out.pref>               output prefix\n  <classified.bam>\
                    \         classified reads (use '-' for stdin)\n\noptional arguments:\n\
                    \  -h, --help               show this help message and exit\n\
                    \  -s ['w', 'u', 'wl', 'ul']\n                           statistics\
                    \ to use for the computation of\n                           histograms:\
                    \ w (default) => weighted assignments; u\n                   \
                    \        => unique assignments, non-weighted; wl => weighted\n\
                    \                           assignments, propagated to leaves;\
                    \ ul => unique\n                           assignments, propagated\
                    \ to leaves.\n  -f ['sam', 'bam', 'cram', 'uncompressed_bam',\
                    \ 'kraken', 'histo']\n                           Input format\
                    \ of assignments [auto]\n  -c [STR [STR ...]]       advanced configuration\
                    \ (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: true
                    position: 0
                    name: STR
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]  advanced configuration (a JSON
                      dictionary)'
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n\
                    \                         <index.dir> [<archive.tar.gz>]\n\npositional\
                    \ arguments:\n  <index.dir>         index directory\n  <archive.tar.gz>\
                    \    output archive [<index.dir>.tar.gz]\n\noptional arguments:\n\
                    \  -h, --help          show this help message and exit\n  -c [STR\
                    \ [STR ...]]  advanced configuration (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: true
                    position: 0
                    name: STR
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -K
                    description: skip k-LCP construction
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]  advanced configuration (a JSON
                      dictionary)'
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR ...]]]\n\
                    \                           <archive.tar.gz> [<output.dir>]\n\n\
                    positional arguments:\n  <archive.tar.gz>    output archive\n\
                    \  <output.dir>        output directory [./]\n\noptional arguments:\n\
                    \  -h, --help          show this help message and exit\n  -K \
                    \                 skip k-LCP construction\n  -c [STR [STR ...]]\
                    \  advanced configuration (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: true
                    position: 0
                    name: STR
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -C
                    description: clean files instead of compiling
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -F
                    description: force recompilation
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -P
                    description: run compilation in parallel
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]  advanced configuration (a JSON
                      dictionary)'
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR\
                    \ [STR ...]]]\n\noptional arguments:\n  -h, --help          show\
                    \ this help message and exit\n  -C                  clean files\
                    \ instead of compiling\n  -F                  force recompilation\n\
                    \  -P                  run compilation in parallel\n  -c [STR\
                    \ [STR ...]]  advanced configuration (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    description: "directory with the library sequences [dir. of the\
                      \ first\ntree]"
                    args: !SimpleFlagArg
                      name: DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    description: number of threads [auto (8)]
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -k
                    description: k-mer length [31]
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    description: log file [<index.dir>/log.txt]
                    args: !SimpleFlagArg
                      name: STR
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: rate of sampling of the tree [no sampling]
                    args: !SimpleFlagArg
                      name: FLOAT
                  - !Flag
                    optional: true
                    synonyms:
                    - -F
                    description: rewrite index files if they already exist
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -M
                    description: mask repeats/low complexity regions (using DustMasker)
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -P
                    description: "do not add prefixes to node names when multiple\
                      \ trees\nare used"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -K
                    description: skip k-LCP construction (then restarted search only)
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -T
                    description: keep temporary files from k-mer propagation
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -A
                    description: "autocomplete tree (names of internal nodes and FASTA\n\
                      paths)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]  advanced configuration (a JSON
                      dictionary)'
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT]\
                    \ [-l STR] [-s FLOAT] [-F]\n                      [-M] [-P] [-K]\
                    \ [-T] [-A] [-c [STR [STR ...]]]\n                      <tree.nw>\
                    \ [<tree.nw> ...] <index.dir>\n\npositional arguments:\n  <tree.nw>\
                    \           phylogenetic tree (in Newick/NHX)\n  <index.dir> \
                    \        index directory (will be created)\n\noptional arguments:\n\
                    \  -h, --help          show this help message and exit\n  -g DIR\
                    \              directory with the library sequences [dir. of the\
                    \ first\n                      tree]\n  -j INT              number\
                    \ of threads [auto (8)]\n  -k INT              k-mer length [31]\n\
                    \  -l STR              log file [<index.dir>/log.txt]\n  -s FLOAT\
                    \            rate of sampling of the tree [no sampling]\n  -F\
                    \                  rewrite index files if they already exist\n\
                    \  -M                  mask repeats/low complexity regions (using\
                    \ DustMasker)\n  -P                  do not add prefixes to node\
                    \ names when multiple trees\n                      are used\n\
                    \  -K                  skip k-LCP construction (then restarted\
                    \ search only)\n  -T                  keep temporary files from\
                    \ k-mer propagation\n  -A                  autocomplete tree (names\
                    \ of internal nodes and FASTA\n                      paths)\n\
                    \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id009
                  positional:
                  - !Positional
                    optional: true
                    position: 0
                    name: STR
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    description: directory for the tree and the sequences [~/prophyle]
                    args: !SimpleFlagArg
                      name: DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    description: log file
                    args: !SimpleFlagArg
                      name: STR
                  - !Flag
                    optional: true
                    synonyms:
                    - -F
                    description: rewrite library files if they already exist
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]  advanced configuration (a JSON
                      dictionary)'
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle download [-h] [-d DIR] [-l STR] [-F]\
                    \ [-c [STR [STR ...]]]\n                         <library> [<library>\
                    \ ...]\n\npositional arguments:\n  <library>           genomic\
                    \ library ['bacteria', 'viruses', 'plasmids',\n              \
                    \        'hmp', 'all']\n\noptional arguments:\n  -h, --help  \
                    \        show this help message and exit\n  -d DIR           \
                    \   directory for the tree and the sequences [~/prophyle]\n  -l\
                    \ STR              log file\n  -F                  rewrite library\
                    \ files if they already exist\n  -c [STR [STR ...]]  advanced\
                    \ configuration (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id010
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -k
                    description: k-mer length [detect automatically from the index]
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -m
                    description: "measure: h1=hit count, c1=coverage, h2=norm.hit\
                      \ count,\nc2=norm.coverage [h1]"
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? h2
                        ? c1
                        ? h1
                        ? c2
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: output format [sam]
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? sam
                        ? kraken
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    description: log file
                    args: !SimpleFlagArg
                      name: STR
                  - !Flag
                    optional: true
                    synonyms:
                    - -P
                    description: incorporate sequences and qualities into SAM records
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -A
                    description: annotate assignments (using tax. information from
                      NHX)
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -L
                    description: replace read assignments by their LCA
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -X
                    description: replace k-mer matches by their LCA
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -M
                    description: mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -C
                    description: use C++ impl. of the assignment algorithm (experimental)
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -K
                    description: force restarted search mode
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: '[STR [STR ...]]  advanced configuration (a JSON
                      dictionary)'
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}]\
                    \ [-f {kraken,sam}]\n                         [-l STR] [-P] [-A]\
                    \ [-L] [-X] [-M] [-C] [-K]\n                         [-c [STR\
                    \ [STR ...]]]\n                         <index.dir> <reads1.fq>\
                    \ [<reads2.fq>]\n\npositional arguments:\n  <index.dir>      \
                    \   index directory\n  <reads1.fq>         first file with reads\
                    \ in FASTA/FASTQ (- for standard\n                      input)\n\
                    \  <reads2.fq>         second file with reads in FASTA/FASTQ\n\
                    \noptional arguments:\n  -h, --help          show this help message\
                    \ and exit\n  -k INT              k-mer length [detect automatically\
                    \ from the index]\n  -m {h1,c1,h2,c2}    measure: h1=hit count,\
                    \ c1=coverage, h2=norm.hit count,\n                      c2=norm.coverage\
                    \ [h1]\n  -f {kraken,sam}     output format [sam]\n  -l STR  \
                    \            log file\n  -P                  incorporate sequences\
                    \ and qualities into SAM records\n  -A                  annotate\
                    \ assignments (using tax. information from NHX)\n  -L        \
                    \          replace read assignments by their LCA\n  -X       \
                    \           replace k-mer matches by their LCA\n  -M         \
                    \         mimic Kraken (equivalent to \"-m h1 -f kraken -L -X\"\
                    )\n  -C                  use C++ impl. of the assignment algorithm\
                    \ (experimental)\n  -K                  force restarted search\
                    \ mode\n  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle (phylogeny-based\
                  \ metagenomic classification)\nVersion: 0.3.1.0\nAuthors: Karel\
                  \ Brinda, Kamil Salikhov, Simone Pignotti, Gregory Kucherov\nContact:\
                  \ kbrinda@hsph.harvard.edu\n\nUsage:   prophyle <command> [options]\n\
                  \noptional arguments:\n  -h, --help     show this help message and\
                  \ exit\n  -v, --version  show program's version number and exit\n\
                  \nsubcommands:\n  \n    download     download a genomic database\n\
                  \    index        build index\n    classify     classify reads\n\
                  \    analyze      analyze results (experimental)\n    compress \
                  \    compress a ProPhyle index\n    decompress   decompress a compressed\
                  \ ProPhyle index\n    compile      compile auxiliary ProPhyle programs\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]\n\
                \                        [-f ['sam', 'bam', 'cram', 'uncompressed_bam',\
                \ 'kraken', 'histo']]\n                        [-c [STR [STR ...]]]\n\
                \                        {index_dir, tree.nw} <out.pref> <classified.bam>\n\
                \                        [<classified.bam> ...]\n\npositional arguments:\n\
                \  {index_dir, tree.nw}     index directory or phylogenetic tree\n\
                \  <out.pref>               output prefix\n  <classified.bam>    \
                \     classified reads (use '-' for stdin)\n\noptional arguments:\n\
                \  -h, --help               show this help message and exit\n  -s\
                \ ['w', 'u', 'wl', 'ul']\n                           statistics to\
                \ use for the computation of\n                           histograms:\
                \ w (default) => weighted assignments; u\n                       \
                \    => unique assignments, non-weighted; wl => weighted\n       \
                \                    assignments, propagated to leaves; ul => unique\n\
                \                           assignments, propagated to leaves.\n \
                \ -f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n\
                \                           Input format of assignments [auto]\n \
                \ -c [STR [STR ...]]       advanced configuration (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: true
                position: 0
                name: STR
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
                args: !EmptyFlagArg {}
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n   \
                \                      <index.dir> [<archive.tar.gz>]\n\npositional\
                \ arguments:\n  <index.dir>         index directory\n  <archive.tar.gz>\
                \    output archive [<index.dir>.tar.gz]\n\noptional arguments:\n\
                \  -h, --help          show this help message and exit\n  -c [STR\
                \ [STR ...]]  advanced configuration (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: true
                position: 0
                name: STR
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -K
                description: skip k-LCP construction
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
                args: !EmptyFlagArg {}
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR ...]]]\n\
                \                           <archive.tar.gz> [<output.dir>]\n\npositional\
                \ arguments:\n  <archive.tar.gz>    output archive\n  <output.dir>\
                \        output directory [./]\n\noptional arguments:\n  -h, --help\
                \          show this help message and exit\n  -K                 \
                \ skip k-LCP construction\n  -c [STR [STR ...]]  advanced configuration\
                \ (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: true
                position: 0
                name: STR
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -C
                description: clean files instead of compiling
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -F
                description: force recompilation
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -P
                description: run compilation in parallel
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
                args: !EmptyFlagArg {}
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR [STR\
                \ ...]]]\n\noptional arguments:\n  -h, --help          show this help\
                \ message and exit\n  -C                  clean files instead of compiling\n\
                \  -F                  force recompilation\n  -P                 \
                \ run compilation in parallel\n  -c [STR [STR ...]]  advanced configuration\
                \ (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -g
                description: "directory with the library sequences [dir. of the first\n\
                  tree]"
                args: !SimpleFlagArg
                  name: DIR
              - !Flag
                optional: true
                synonyms:
                - -j
                description: number of threads [auto (8)]
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -k
                description: k-mer length [31]
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -l
                description: log file [<index.dir>/log.txt]
                args: !SimpleFlagArg
                  name: STR
              - !Flag
                optional: true
                synonyms:
                - -s
                description: rate of sampling of the tree [no sampling]
                args: !SimpleFlagArg
                  name: FLOAT
              - !Flag
                optional: true
                synonyms:
                - -F
                description: rewrite index files if they already exist
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -M
                description: mask repeats/low complexity regions (using DustMasker)
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -P
                description: "do not add prefixes to node names when multiple trees\n\
                  are used"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -K
                description: skip k-LCP construction (then restarted search only)
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -T
                description: keep temporary files from k-mer propagation
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -A
                description: "autocomplete tree (names of internal nodes and FASTA\n\
                  paths)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
                args: !EmptyFlagArg {}
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT] [-l\
                \ STR] [-s FLOAT] [-F]\n                      [-M] [-P] [-K] [-T]\
                \ [-A] [-c [STR [STR ...]]]\n                      <tree.nw> [<tree.nw>\
                \ ...] <index.dir>\n\npositional arguments:\n  <tree.nw>         \
                \  phylogenetic tree (in Newick/NHX)\n  <index.dir>         index\
                \ directory (will be created)\n\noptional arguments:\n  -h, --help\
                \          show this help message and exit\n  -g DIR             \
                \ directory with the library sequences [dir. of the first\n      \
                \                tree]\n  -j INT              number of threads [auto\
                \ (8)]\n  -k INT              k-mer length [31]\n  -l STR        \
                \      log file [<index.dir>/log.txt]\n  -s FLOAT            rate\
                \ of sampling of the tree [no sampling]\n  -F                  rewrite\
                \ index files if they already exist\n  -M                  mask repeats/low\
                \ complexity regions (using DustMasker)\n  -P                  do\
                \ not add prefixes to node names when multiple trees\n           \
                \           are used\n  -K                  skip k-LCP construction\
                \ (then restarted search only)\n  -T                  keep temporary\
                \ files from k-mer propagation\n  -A                  autocomplete\
                \ tree (names of internal nodes and FASTA\n                      paths)\n\
                \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id009
              positional:
              - !Positional
                optional: true
                position: 0
                name: STR
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -d
                description: directory for the tree and the sequences [~/prophyle]
                args: !SimpleFlagArg
                  name: DIR
              - !Flag
                optional: true
                synonyms:
                - -l
                description: log file
                args: !SimpleFlagArg
                  name: STR
              - !Flag
                optional: true
                synonyms:
                - -F
                description: rewrite library files if they already exist
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
                args: !EmptyFlagArg {}
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle download [-h] [-d DIR] [-l STR] [-F] [-c\
                \ [STR [STR ...]]]\n                         <library> [<library>\
                \ ...]\n\npositional arguments:\n  <library>           genomic library\
                \ ['bacteria', 'viruses', 'plasmids',\n                      'hmp',\
                \ 'all']\n\noptional arguments:\n  -h, --help          show this help\
                \ message and exit\n  -d DIR              directory for the tree and\
                \ the sequences [~/prophyle]\n  -l STR              log file\n  -F\
                \                  rewrite library files if they already exist\n \
                \ -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id010
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -k
                description: k-mer length [detect automatically from the index]
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -m
                description: "measure: h1=hit count, c1=coverage, h2=norm.hit count,\n\
                  c2=norm.coverage [h1]"
                args: !ChoiceFlagArg
                  choices: !!set
                    ? h2
                    ? c1
                    ? h1
                    ? c2
              - !Flag
                optional: true
                synonyms:
                - -f
                description: output format [sam]
                args: !ChoiceFlagArg
                  choices: !!set
                    ? kraken
                    ? sam
              - !Flag
                optional: true
                synonyms:
                - -l
                description: log file
                args: !SimpleFlagArg
                  name: STR
              - !Flag
                optional: true
                synonyms:
                - -P
                description: incorporate sequences and qualities into SAM records
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -A
                description: annotate assignments (using tax. information from NHX)
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -L
                description: replace read assignments by their LCA
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -X
                description: replace k-mer matches by their LCA
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -M
                description: mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -C
                description: use C++ impl. of the assignment algorithm (experimental)
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -K
                description: force restarted search mode
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
                args: !EmptyFlagArg {}
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}]\
                \ [-f {kraken,sam}]\n                         [-l STR] [-P] [-A] [-L]\
                \ [-X] [-M] [-C] [-K]\n                         [-c [STR [STR ...]]]\n\
                \                         <index.dir> <reads1.fq> [<reads2.fq>]\n\n\
                positional arguments:\n  <index.dir>         index directory\n  <reads1.fq>\
                \         first file with reads in FASTA/FASTQ (- for standard\n \
                \                     input)\n  <reads2.fq>         second file with\
                \ reads in FASTA/FASTQ\n\noptional arguments:\n  -h, --help      \
                \    show this help message and exit\n  -k INT              k-mer\
                \ length [detect automatically from the index]\n  -m {h1,c1,h2,c2}\
                \    measure: h1=hit count, c1=coverage, h2=norm.hit count,\n    \
                \                  c2=norm.coverage [h1]\n  -f {kraken,sam}     output\
                \ format [sam]\n  -l STR              log file\n  -P             \
                \     incorporate sequences and qualities into SAM records\n  -A \
                \                 annotate assignments (using tax. information from\
                \ NHX)\n  -L                  replace read assignments by their LCA\n\
                \  -X                  replace k-mer matches by their LCA\n  -M  \
                \                mimic Kraken (equivalent to \"-m h1 -f kraken -L\
                \ -X\")\n  -C                  use C++ impl. of the assignment algorithm\
                \ (experimental)\n  -K                  force restarted search mode\n\
                \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle (phylogeny-based\
              \ metagenomic classification)\nVersion: 0.3.1.0\nAuthors: Karel Brinda,\
              \ Kamil Salikhov, Simone Pignotti, Gregory Kucherov\nContact: kbrinda@hsph.harvard.edu\n\
              \nUsage:   prophyle <command> [options]\n\noptional arguments:\n  -h,\
              \ --help     show this help message and exit\n  -v, --version  show\
              \ program's version number and exit\n\nsubcommands:\n  \n    download\
              \     download a genomic database\n    index        build index\n  \
              \  classify     classify reads\n    analyze      analyze results (experimental)\n\
              \    compress     compress a ProPhyle index\n    decompress   decompress\
              \ a compressed ProPhyle index\n    compile      compile auxiliary ProPhyle\
              \ programs\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]\n \
            \                       [-f ['sam', 'bam', 'cram', 'uncompressed_bam',\
            \ 'kraken', 'histo']]\n                        [-c [STR [STR ...]]]\n\
            \                        {index_dir, tree.nw} <out.pref> <classified.bam>\n\
            \                        [<classified.bam> ...]\n\npositional arguments:\n\
            \  {index_dir, tree.nw}     index directory or phylogenetic tree\n  <out.pref>\
            \               output prefix\n  <classified.bam>         classified reads\
            \ (use '-' for stdin)\n\noptional arguments:\n  -h, --help           \
            \    show this help message and exit\n  -s ['w', 'u', 'wl', 'ul']\n  \
            \                         statistics to use for the computation of\n \
            \                          histograms: w (default) => weighted assignments;\
            \ u\n                           => unique assignments, non-weighted; wl\
            \ => weighted\n                           assignments, propagated to leaves;\
            \ ul => unique\n                           assignments, propagated to\
            \ leaves.\n  -f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n\
            \                           Input format of assignments [auto]\n  -c [STR\
            \ [STR ...]]       advanced configuration (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: true
            position: 0
            name: STR
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n       \
            \                  <index.dir> [<archive.tar.gz>]\n\npositional arguments:\n\
            \  <index.dir>         index directory\n  <archive.tar.gz>    output archive\
            \ [<index.dir>.tar.gz]\n\noptional arguments:\n  -h, --help          show\
            \ this help message and exit\n  -c [STR [STR ...]]  advanced configuration\
            \ (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: true
            position: 0
            name: STR
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -K
            description: skip k-LCP construction
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR ...]]]\n\
            \                           <archive.tar.gz> [<output.dir>]\n\npositional\
            \ arguments:\n  <archive.tar.gz>    output archive\n  <output.dir>   \
            \     output directory [./]\n\noptional arguments:\n  -h, --help     \
            \     show this help message and exit\n  -K                  skip k-LCP\
            \ construction\n  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: true
            position: 0
            name: STR
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -C
            description: clean files instead of compiling
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -F
            description: force recompilation
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -P
            description: run compilation in parallel
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR [STR ...]]]\n\
            \noptional arguments:\n  -h, --help          show this help message and\
            \ exit\n  -C                  clean files instead of compiling\n  -F \
            \                 force recompilation\n  -P                  run compilation\
            \ in parallel\n  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -g
            description: "directory with the library sequences [dir. of the first\n\
              tree]"
            args: !SimpleFlagArg
              name: DIR
          - !Flag
            optional: true
            synonyms:
            - -j
            description: number of threads [auto (8)]
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -k
            description: k-mer length [31]
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -l
            description: log file [<index.dir>/log.txt]
            args: !SimpleFlagArg
              name: STR
          - !Flag
            optional: true
            synonyms:
            - -s
            description: rate of sampling of the tree [no sampling]
            args: !SimpleFlagArg
              name: FLOAT
          - !Flag
            optional: true
            synonyms:
            - -F
            description: rewrite index files if they already exist
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -M
            description: mask repeats/low complexity regions (using DustMasker)
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -P
            description: "do not add prefixes to node names when multiple trees\n\
              are used"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -K
            description: skip k-LCP construction (then restarted search only)
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -T
            description: keep temporary files from k-mer propagation
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -A
            description: "autocomplete tree (names of internal nodes and FASTA\npaths)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT] [-l STR]\
            \ [-s FLOAT] [-F]\n                      [-M] [-P] [-K] [-T] [-A] [-c\
            \ [STR [STR ...]]]\n                      <tree.nw> [<tree.nw> ...] <index.dir>\n\
            \npositional arguments:\n  <tree.nw>           phylogenetic tree (in Newick/NHX)\n\
            \  <index.dir>         index directory (will be created)\n\noptional arguments:\n\
            \  -h, --help          show this help message and exit\n  -g DIR     \
            \         directory with the library sequences [dir. of the first\n  \
            \                    tree]\n  -j INT              number of threads [auto\
            \ (8)]\n  -k INT              k-mer length [31]\n  -l STR            \
            \  log file [<index.dir>/log.txt]\n  -s FLOAT            rate of sampling\
            \ of the tree [no sampling]\n  -F                  rewrite index files\
            \ if they already exist\n  -M                  mask repeats/low complexity\
            \ regions (using DustMasker)\n  -P                  do not add prefixes\
            \ to node names when multiple trees\n                      are used\n\
            \  -K                  skip k-LCP construction (then restarted search\
            \ only)\n  -T                  keep temporary files from k-mer propagation\n\
            \  -A                  autocomplete tree (names of internal nodes and\
            \ FASTA\n                      paths)\n  -c [STR [STR ...]]  advanced\
            \ configuration (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id009
          positional:
          - !Positional
            optional: true
            position: 0
            name: STR
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -d
            description: directory for the tree and the sequences [~/prophyle]
            args: !SimpleFlagArg
              name: DIR
          - !Flag
            optional: true
            synonyms:
            - -l
            description: log file
            args: !SimpleFlagArg
              name: STR
          - !Flag
            optional: true
            synonyms:
            - -F
            description: rewrite library files if they already exist
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle download [-h] [-d DIR] [-l STR] [-F] [-c [STR\
            \ [STR ...]]]\n                         <library> [<library> ...]\n\n\
            positional arguments:\n  <library>           genomic library ['bacteria',\
            \ 'viruses', 'plasmids',\n                      'hmp', 'all']\n\noptional\
            \ arguments:\n  -h, --help          show this help message and exit\n\
            \  -d DIR              directory for the tree and the sequences [~/prophyle]\n\
            \  -l STR              log file\n  -F                  rewrite library\
            \ files if they already exist\n  -c [STR [STR ...]]  advanced configuration\
            \ (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id010
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -k
            description: k-mer length [detect automatically from the index]
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -m
            description: "measure: h1=hit count, c1=coverage, h2=norm.hit count,\n\
              c2=norm.coverage [h1]"
            args: !ChoiceFlagArg
              choices: !!set
                ? c1
                ? h1
                ? h2
                ? c2
          - !Flag
            optional: true
            synonyms:
            - -f
            description: output format [sam]
            args: !ChoiceFlagArg
              choices: !!set
                ? kraken
                ? sam
          - !Flag
            optional: true
            synonyms:
            - -l
            description: log file
            args: !SimpleFlagArg
              name: STR
          - !Flag
            optional: true
            synonyms:
            - -P
            description: incorporate sequences and qualities into SAM records
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -A
            description: annotate assignments (using tax. information from NHX)
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -L
            description: replace read assignments by their LCA
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -X
            description: replace k-mer matches by their LCA
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -M
            description: mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -C
            description: use C++ impl. of the assignment algorithm (experimental)
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -K
            description: force restarted search mode
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
            args: !EmptyFlagArg {}
          parent: *id012
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}] [-f\
            \ {kraken,sam}]\n                         [-l STR] [-P] [-A] [-L] [-X]\
            \ [-M] [-C] [-K]\n                         [-c [STR [STR ...]]]\n    \
            \                     <index.dir> <reads1.fq> [<reads2.fq>]\n\npositional\
            \ arguments:\n  <index.dir>         index directory\n  <reads1.fq>   \
            \      first file with reads in FASTA/FASTQ (- for standard\n        \
            \              input)\n  <reads2.fq>         second file with reads in\
            \ FASTA/FASTQ\n\noptional arguments:\n  -h, --help          show this\
            \ help message and exit\n  -k INT              k-mer length [detect automatically\
            \ from the index]\n  -m {h1,c1,h2,c2}    measure: h1=hit count, c1=coverage,\
            \ h2=norm.hit count,\n                      c2=norm.coverage [h1]\n  -f\
            \ {kraken,sam}     output format [sam]\n  -l STR              log file\n\
            \  -P                  incorporate sequences and qualities into SAM records\n\
            \  -A                  annotate assignments (using tax. information from\
            \ NHX)\n  -L                  replace read assignments by their LCA\n\
            \  -X                  replace k-mer matches by their LCA\n  -M      \
            \            mimic Kraken (equivalent to \"-m h1 -f kraken -L -X\")\n\
            \  -C                  use C++ impl. of the assignment algorithm (experimental)\n\
            \  -K                  force restarted search mode\n  -c [STR [STR ...]]\
            \  advanced configuration (a JSON dictionary)\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle (phylogeny-based\
          \ metagenomic classification)\nVersion: 0.3.1.0\nAuthors: Karel Brinda,\
          \ Kamil Salikhov, Simone Pignotti, Gregory Kucherov\nContact: kbrinda@hsph.harvard.edu\n\
          \nUsage:   prophyle <command> [options]\n\noptional arguments:\n  -h, --help\
          \     show this help message and exit\n  -v, --version  show program's version\
          \ number and exit\n\nsubcommands:\n  \n    download     download a genomic\
          \ database\n    index        build index\n    classify     classify reads\n\
          \    analyze      analyze results (experimental)\n    compress     compress\
          \ a ProPhyle index\n    decompress   decompress a compressed ProPhyle index\n\
          \    compile      compile auxiliary ProPhyle programs\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]\n     \
        \                   [-f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken',\
        \ 'histo']]\n                        [-c [STR [STR ...]]]\n              \
        \          {index_dir, tree.nw} <out.pref> <classified.bam>\n            \
        \            [<classified.bam> ...]\n\npositional arguments:\n  {index_dir,\
        \ tree.nw}     index directory or phylogenetic tree\n  <out.pref>        \
        \       output prefix\n  <classified.bam>         classified reads (use '-'\
        \ for stdin)\n\noptional arguments:\n  -h, --help               show this\
        \ help message and exit\n  -s ['w', 'u', 'wl', 'ul']\n                   \
        \        statistics to use for the computation of\n                      \
        \     histograms: w (default) => weighted assignments; u\n               \
        \            => unique assignments, non-weighted; wl => weighted\n       \
        \                    assignments, propagated to leaves; ul => unique\n   \
        \                        assignments, propagated to leaves.\n  -f ['sam',\
        \ 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n                \
        \           Input format of assignments [auto]\n  -c [STR [STR ...]]     \
        \  advanced configuration (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: true
        position: 0
        name: STR
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: *id013
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n           \
        \              <index.dir> [<archive.tar.gz>]\n\npositional arguments:\n \
        \ <index.dir>         index directory\n  <archive.tar.gz>    output archive\
        \ [<index.dir>.tar.gz]\n\noptional arguments:\n  -h, --help          show\
        \ this help message and exit\n  -c [STR [STR ...]]  advanced configuration\
        \ (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: true
        position: 0
        name: STR
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -K
        description: skip k-LCP construction
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: *id013
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR ...]]]\n    \
        \                       <archive.tar.gz> [<output.dir>]\n\npositional arguments:\n\
        \  <archive.tar.gz>    output archive\n  <output.dir>        output directory\
        \ [./]\n\noptional arguments:\n  -h, --help          show this help message\
        \ and exit\n  -K                  skip k-LCP construction\n  -c [STR [STR\
        \ ...]]  advanced configuration (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: true
        position: 0
        name: STR
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -C
        description: clean files instead of compiling
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -F
        description: force recompilation
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -P
        description: run compilation in parallel
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: *id013
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR [STR ...]]]\n\
        \noptional arguments:\n  -h, --help          show this help message and exit\n\
        \  -C                  clean files instead of compiling\n  -F            \
        \      force recompilation\n  -P                  run compilation in parallel\n\
        \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -g
        description: "directory with the library sequences [dir. of the first\ntree]"
        args: !SimpleFlagArg
          name: DIR
      - !Flag
        optional: true
        synonyms:
        - -j
        description: number of threads [auto (8)]
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -k
        description: k-mer length [31]
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -l
        description: log file [<index.dir>/log.txt]
        args: !SimpleFlagArg
          name: STR
      - !Flag
        optional: true
        synonyms:
        - -s
        description: rate of sampling of the tree [no sampling]
        args: !SimpleFlagArg
          name: FLOAT
      - !Flag
        optional: true
        synonyms:
        - -F
        description: rewrite index files if they already exist
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -M
        description: mask repeats/low complexity regions (using DustMasker)
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -P
        description: "do not add prefixes to node names when multiple trees\nare used"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -K
        description: skip k-LCP construction (then restarted search only)
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -T
        description: keep temporary files from k-mer propagation
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -A
        description: "autocomplete tree (names of internal nodes and FASTA\npaths)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: *id013
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT] [-l STR] [-s\
        \ FLOAT] [-F]\n                      [-M] [-P] [-K] [-T] [-A] [-c [STR [STR\
        \ ...]]]\n                      <tree.nw> [<tree.nw> ...] <index.dir>\n\n\
        positional arguments:\n  <tree.nw>           phylogenetic tree (in Newick/NHX)\n\
        \  <index.dir>         index directory (will be created)\n\noptional arguments:\n\
        \  -h, --help          show this help message and exit\n  -g DIR         \
        \     directory with the library sequences [dir. of the first\n          \
        \            tree]\n  -j INT              number of threads [auto (8)]\n \
        \ -k INT              k-mer length [31]\n  -l STR              log file [<index.dir>/log.txt]\n\
        \  -s FLOAT            rate of sampling of the tree [no sampling]\n  -F  \
        \                rewrite index files if they already exist\n  -M         \
        \         mask repeats/low complexity regions (using DustMasker)\n  -P   \
        \               do not add prefixes to node names when multiple trees\n  \
        \                    are used\n  -K                  skip k-LCP construction\
        \ (then restarted search only)\n  -T                  keep temporary files\
        \ from k-mer propagation\n  -A                  autocomplete tree (names of\
        \ internal nodes and FASTA\n                      paths)\n  -c [STR [STR ...]]\
        \  advanced configuration (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id009
      positional:
      - !Positional
        optional: true
        position: 0
        name: STR
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -d
        description: directory for the tree and the sequences [~/prophyle]
        args: !SimpleFlagArg
          name: DIR
      - !Flag
        optional: true
        synonyms:
        - -l
        description: log file
        args: !SimpleFlagArg
          name: STR
      - !Flag
        optional: true
        synonyms:
        - -F
        description: rewrite library files if they already exist
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: *id013
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle download [-h] [-d DIR] [-l STR] [-F] [-c [STR [STR\
        \ ...]]]\n                         <library> [<library> ...]\n\npositional\
        \ arguments:\n  <library>           genomic library ['bacteria', 'viruses',\
        \ 'plasmids',\n                      'hmp', 'all']\n\noptional arguments:\n\
        \  -h, --help          show this help message and exit\n  -d DIR         \
        \     directory for the tree and the sequences [~/prophyle]\n  -l STR    \
        \          log file\n  -F                  rewrite library files if they already\
        \ exist\n  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id010
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -k
        description: k-mer length [detect automatically from the index]
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -m
        description: "measure: h1=hit count, c1=coverage, h2=norm.hit count,\nc2=norm.coverage\
          \ [h1]"
        args: !ChoiceFlagArg
          choices: !!set
            ? h2
            ? c1
            ? h1
            ? c2
      - !Flag
        optional: true
        synonyms:
        - -f
        description: output format [sam]
        args: !ChoiceFlagArg
          choices: !!set
            ? sam
            ? kraken
      - !Flag
        optional: true
        synonyms:
        - -l
        description: log file
        args: !SimpleFlagArg
          name: STR
      - !Flag
        optional: true
        synonyms:
        - -P
        description: incorporate sequences and qualities into SAM records
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -A
        description: annotate assignments (using tax. information from NHX)
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -L
        description: replace read assignments by their LCA
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -X
        description: replace k-mer matches by their LCA
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -M
        description: mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -C
        description: use C++ impl. of the assignment algorithm (experimental)
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -K
        description: force restarted search mode
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
        args: !EmptyFlagArg {}
      parent: *id013
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}] [-f {kraken,sam}]\n\
        \                         [-l STR] [-P] [-A] [-L] [-X] [-M] [-C] [-K]\n  \
        \                       [-c [STR [STR ...]]]\n                         <index.dir>\
        \ <reads1.fq> [<reads2.fq>]\n\npositional arguments:\n  <index.dir>      \
        \   index directory\n  <reads1.fq>         first file with reads in FASTA/FASTQ\
        \ (- for standard\n                      input)\n  <reads2.fq>         second\
        \ file with reads in FASTA/FASTQ\n\noptional arguments:\n  -h, --help    \
        \      show this help message and exit\n  -k INT              k-mer length\
        \ [detect automatically from the index]\n  -m {h1,c1,h2,c2}    measure: h1=hit\
        \ count, c1=coverage, h2=norm.hit count,\n                      c2=norm.coverage\
        \ [h1]\n  -f {kraken,sam}     output format [sam]\n  -l STR              log\
        \ file\n  -P                  incorporate sequences and qualities into SAM\
        \ records\n  -A                  annotate assignments (using tax. information\
        \ from NHX)\n  -L                  replace read assignments by their LCA\n\
        \  -X                  replace k-mer matches by their LCA\n  -M          \
        \        mimic Kraken (equivalent to \"-m h1 -f kraken -L -X\")\n  -C    \
        \              use C++ impl. of the assignment algorithm (experimental)\n\
        \  -K                  force restarted search mode\n  -c [STR [STR ...]] \
        \ advanced configuration (a JSON dictionary)\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle (phylogeny-based\
      \ metagenomic classification)\nVersion: 0.3.1.0\nAuthors: Karel Brinda, Kamil\
      \ Salikhov, Simone Pignotti, Gregory Kucherov\nContact: kbrinda@hsph.harvard.edu\n\
      \nUsage:   prophyle <command> [options]\n\noptional arguments:\n  -h, --help\
      \     show this help message and exit\n  -v, --version  show program's version\
      \ number and exit\n\nsubcommands:\n  \n    download     download a genomic database\n\
      \    index        build index\n    classify     classify reads\n    analyze\
      \      analyze results (experimental)\n    compress     compress a ProPhyle\
      \ index\n    decompress   decompress a compressed ProPhyle index\n    compile\
      \      compile auxiliary ProPhyle programs\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]\n         \
    \               [-f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']]\n\
    \                        [-c [STR [STR ...]]]\n                        {index_dir,\
    \ tree.nw} <out.pref> <classified.bam>\n                        [<classified.bam>\
    \ ...]\n\npositional arguments:\n  {index_dir, tree.nw}     index directory or\
    \ phylogenetic tree\n  <out.pref>               output prefix\n  <classified.bam>\
    \         classified reads (use '-' for stdin)\n\noptional arguments:\n  -h, --help\
    \               show this help message and exit\n  -s ['w', 'u', 'wl', 'ul']\n\
    \                           statistics to use for the computation of\n       \
    \                    histograms: w (default) => weighted assignments; u\n    \
    \                       => unique assignments, non-weighted; wl => weighted\n\
    \                           assignments, propagated to leaves; ul => unique\n\
    \                           assignments, propagated to leaves.\n  -f ['sam', 'bam',\
    \ 'cram', 'uncompressed_bam', 'kraken', 'histo']\n                           Input\
    \ format of assignments [auto]\n  -c [STR [STR ...]]       advanced configuration\
    \ (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: true
    position: 0
    name: STR
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: *id014
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n               \
    \          <index.dir> [<archive.tar.gz>]\n\npositional arguments:\n  <index.dir>\
    \         index directory\n  <archive.tar.gz>    output archive [<index.dir>.tar.gz]\n\
    \noptional arguments:\n  -h, --help          show this help message and exit\n\
    \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: true
    position: 0
    name: STR
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -K
    description: skip k-LCP construction
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: *id014
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR ...]]]\n        \
    \                   <archive.tar.gz> [<output.dir>]\n\npositional arguments:\n\
    \  <archive.tar.gz>    output archive\n  <output.dir>        output directory\
    \ [./]\n\noptional arguments:\n  -h, --help          show this help message and\
    \ exit\n  -K                  skip k-LCP construction\n  -c [STR [STR ...]]  advanced\
    \ configuration (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: true
    position: 0
    name: STR
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -C
    description: clean files instead of compiling
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -F
    description: force recompilation
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -P
    description: run compilation in parallel
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: *id014
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR [STR ...]]]\n\n\
    optional arguments:\n  -h, --help          show this help message and exit\n \
    \ -C                  clean files instead of compiling\n  -F                 \
    \ force recompilation\n  -P                  run compilation in parallel\n  -c\
    \ [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -g
    description: "directory with the library sequences [dir. of the first\ntree]"
    args: !SimpleFlagArg
      name: DIR
  - !Flag
    optional: true
    synonyms:
    - -j
    description: number of threads [auto (8)]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: k-mer length [31]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -l
    description: log file [<index.dir>/log.txt]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -s
    description: rate of sampling of the tree [no sampling]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -F
    description: rewrite index files if they already exist
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -M
    description: mask repeats/low complexity regions (using DustMasker)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -P
    description: "do not add prefixes to node names when multiple trees\nare used"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -K
    description: skip k-LCP construction (then restarted search only)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -T
    description: keep temporary files from k-mer propagation
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -A
    description: "autocomplete tree (names of internal nodes and FASTA\npaths)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: *id014
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT] [-l STR] [-s FLOAT]\
    \ [-F]\n                      [-M] [-P] [-K] [-T] [-A] [-c [STR [STR ...]]]\n\
    \                      <tree.nw> [<tree.nw> ...] <index.dir>\n\npositional arguments:\n\
    \  <tree.nw>           phylogenetic tree (in Newick/NHX)\n  <index.dir>      \
    \   index directory (will be created)\n\noptional arguments:\n  -h, --help   \
    \       show this help message and exit\n  -g DIR              directory with\
    \ the library sequences [dir. of the first\n                      tree]\n  -j\
    \ INT              number of threads [auto (8)]\n  -k INT              k-mer length\
    \ [31]\n  -l STR              log file [<index.dir>/log.txt]\n  -s FLOAT     \
    \       rate of sampling of the tree [no sampling]\n  -F                  rewrite\
    \ index files if they already exist\n  -M                  mask repeats/low complexity\
    \ regions (using DustMasker)\n  -P                  do not add prefixes to node\
    \ names when multiple trees\n                      are used\n  -K            \
    \      skip k-LCP construction (then restarted search only)\n  -T            \
    \      keep temporary files from k-mer propagation\n  -A                  autocomplete\
    \ tree (names of internal nodes and FASTA\n                      paths)\n  -c\
    \ [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional:
  - !Positional
    optional: true
    position: 0
    name: STR
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -d
    description: directory for the tree and the sequences [~/prophyle]
    args: !SimpleFlagArg
      name: DIR
  - !Flag
    optional: true
    synonyms:
    - -l
    description: log file
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -F
    description: rewrite library files if they already exist
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: *id014
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle download [-h] [-d DIR] [-l STR] [-F] [-c [STR [STR ...]]]\n\
    \                         <library> [<library> ...]\n\npositional arguments:\n\
    \  <library>           genomic library ['bacteria', 'viruses', 'plasmids',\n \
    \                     'hmp', 'all']\n\noptional arguments:\n  -h, --help     \
    \     show this help message and exit\n  -d DIR              directory for the\
    \ tree and the sequences [~/prophyle]\n  -l STR              log file\n  -F  \
    \                rewrite library files if they already exist\n  -c [STR [STR ...]]\
    \  advanced configuration (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id010
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -k
    description: k-mer length [detect automatically from the index]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -m
    description: "measure: h1=hit count, c1=coverage, h2=norm.hit count,\nc2=norm.coverage\
      \ [h1]"
    args: !ChoiceFlagArg
      choices: !!set
        h1:
        c1:
        c2:
        h2:
  - !Flag
    optional: true
    synonyms:
    - -f
    description: output format [sam]
    args: !ChoiceFlagArg
      choices: !!set
        kraken:
        sam:
  - !Flag
    optional: true
    synonyms:
    - -l
    description: log file
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -P
    description: incorporate sequences and qualities into SAM records
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -A
    description: annotate assignments (using tax. information from NHX)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -L
    description: replace read assignments by their LCA
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -X
    description: replace k-mer matches by their LCA
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -M
    description: mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -C
    description: use C++ impl. of the assignment algorithm (experimental)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -K
    description: force restarted search mode
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
    args: !EmptyFlagArg {}
  parent: *id014
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}] [-f {kraken,sam}]\n\
    \                         [-l STR] [-P] [-A] [-L] [-X] [-M] [-C] [-K]\n      \
    \                   [-c [STR [STR ...]]]\n                         <index.dir>\
    \ <reads1.fq> [<reads2.fq>]\n\npositional arguments:\n  <index.dir>         index\
    \ directory\n  <reads1.fq>         first file with reads in FASTA/FASTQ (- for\
    \ standard\n                      input)\n  <reads2.fq>         second file with\
    \ reads in FASTA/FASTQ\n\noptional arguments:\n  -h, --help          show this\
    \ help message and exit\n  -k INT              k-mer length [detect automatically\
    \ from the index]\n  -m {h1,c1,h2,c2}    measure: h1=hit count, c1=coverage, h2=norm.hit\
    \ count,\n                      c2=norm.coverage [h1]\n  -f {kraken,sam}     output\
    \ format [sam]\n  -l STR              log file\n  -P                  incorporate\
    \ sequences and qualities into SAM records\n  -A                  annotate assignments\
    \ (using tax. information from NHX)\n  -L                  replace read assignments\
    \ by their LCA\n  -X                  replace k-mer matches by their LCA\n  -M\
    \                  mimic Kraken (equivalent to \"-m h1 -f kraken -L -X\")\n  -C\
    \                  use C++ impl. of the assignment algorithm (experimental)\n\
    \  -K                  force restarted search mode\n  -c [STR [STR ...]]  advanced\
    \ configuration (a JSON dictionary)\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle (phylogeny-based metagenomic\
  \ classification)\nVersion: 0.3.1.0\nAuthors: Karel Brinda, Kamil Salikhov, Simone\
  \ Pignotti, Gregory Kucherov\nContact: kbrinda@hsph.harvard.edu\n\nUsage:   prophyle\
  \ <command> [options]\n\noptional arguments:\n  -h, --help     show this help message\
  \ and exit\n  -v, --version  show program's version number and exit\n\nsubcommands:\n\
  \  \n    download     download a genomic database\n    index        build index\n\
  \    classify     classify reads\n    analyze      analyze results (experimental)\n\
  \    compress     compress a ProPhyle index\n    decompress   decompress a compressed\
  \ ProPhyle index\n    compile      compile auxiliary ProPhyle programs\n"
generated_using: *id004
docker_image:
