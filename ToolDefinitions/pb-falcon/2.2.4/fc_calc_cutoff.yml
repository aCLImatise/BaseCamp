!Command
command: &id001
- fc_calc_cutoff
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - fc_calc_cutoff
  - capture
  positional:
  - !Positional
    description: ''
    position: 0
    name: fc_calc_cutoff
    optional: false
  - !Positional
    description: ''
    position: 1
    name: genome_size
    optional: false
  - !Positional
    description: ''
    position: 2
    name: capture
    optional: false
  named:
  - !Flag
    description: ''
    synonyms:
    - --coverage
    args: !SimpleFlagArg
      name: COVERAGE
    optional: true
  parent: &id008 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: ''
        position: 0
        name: fc_calc_cutoff
        optional: false
      - !Positional
        description: ''
        position: 1
        name: genome_size
        optional: false
      - !Positional
        description: ''
        position: 2
        name: capture
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --coverage
        args: !SimpleFlagArg
          name: COVERAGE
        optional: true
      parent: &id007 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            description: ''
            position: 0
            name: fc_calc_cutoff
            optional: false
          - !Positional
            description: ''
            position: 1
            name: genome_size
            optional: false
          - !Positional
            description: ''
            position: 2
            name: capture
            optional: false
          named:
          - !Flag
            description: ''
            synonyms:
            - --coverage
            args: !SimpleFlagArg
              name: COVERAGE
            optional: true
          parent: &id006 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                description: ''
                position: 0
                name: fc_calc_cutoff
                optional: false
              - !Positional
                description: ''
                position: 1
                name: genome_size
                optional: false
              - !Positional
                description: ''
                position: 2
                name: capture
                optional: false
              named:
              - !Flag
                description: ''
                synonyms:
                - --coverage
                args: !SimpleFlagArg
                  name: COVERAGE
                optional: true
              parent: &id003 !Command
                command: *id001
                positional: []
                named:
                - !Flag
                  description: 'Desired coverage ratio (i.e. over-sampling) (default:
                    20)'
                  synonyms:
                  - --coverage
                  args: !SimpleFlagArg
                    name: COVERAGE
                  optional: true
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: fc_calc_cutoff
                    optional: false
                  - !Positional
                    description: ''
                    position: 1
                    name: genome_size
                    optional: false
                  - !Positional
                    description: ''
                    position: 2
                    name: capture
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --coverage
                    args: !SimpleFlagArg
                      name: COVERAGE
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\n\
                    pypeflow 2.3.0\nusage: fc_calc_cutoff [-h] [--coverage COVERAGE]\
                    \ genome_size capture\nfc_calc_cutoff: error: argument genome_size:\
                    \ invalid int value: 'capture'\n"
                  generated_using: &id004
                  - --help
                - !Command
                  command: &id005
                  - fc_calc_cutoff
                  - genome_size
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: capture
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --coverage
                    args: !SimpleFlagArg
                      name: COVERAGE
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\n\
                    pypeflow 2.3.0\nusage: fc_calc_cutoff [-h] [--coverage COVERAGE]\
                    \ genome_size capture\nfc_calc_cutoff: error: argument genome_size:\
                    \ invalid int value: 'genome_size'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size\
                  \ capture\n\nGiven the result of 'DBstats -u -b1' on stdin,\nprint\
                  \ the lowest read-length required for sufficient coverage of the\
                  \ genome\n(i.e. 'length_cutoff').\n\npositional arguments:\n  genome_size\
                  \          Estimated number of bases in genome. (haploid?)\n  capture\
                  \              File with captured output of DBstats. (Otherwise,\
                  \ stdin.)\n\noptional arguments:\n  -h, --help           show this\
                  \ help message and exit\n  --coverage COVERAGE  Desired coverage\
                  \ ratio (i.e. over-sampling) (default: 20)\n\nThis is useful when\
                  \ length_cutoff is not provided but the genome-size\ncan be estimated.\
                  \ The purpose is to *reduce* the amount of data seen by\nDALIGNER,\
                  \ since otherwise it will miss many alignments when it\nencounters\
                  \ resource limits.\n\nNote: If PBFALCON_ERRFILE is defined (and\
                  \ its directory is writable),\nwe will write errors there in addition\
                  \ to stderr.\n"
                generated_using: *id004
              subcommands: []
              usage: []
              help_flag: !Flag
                description: ''
                synonyms:
                - -h
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag:
              help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow\
                \ 2.3.0\nusage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size\
                \ capture\nfc_calc_cutoff: error: argument genome_size: invalid int\
                \ value: 'capture'\n"
              generated_using: *id004
            - !Command
              command: *id005
              positional:
              - !Positional
                description: ''
                position: 0
                name: capture
                optional: false
              named:
              - !Flag
                description: ''
                synonyms:
                - --coverage
                args: !SimpleFlagArg
                  name: COVERAGE
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: ''
                synonyms:
                - -h
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag:
              help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow\
                \ 2.3.0\nusage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size\
                \ capture\nfc_calc_cutoff: error: argument genome_size: invalid int\
                \ value: 'genome_size'\n"
              generated_using: *id004
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size\
              \ capture\n\nGiven the result of 'DBstats -u -b1' on stdin,\nprint the\
              \ lowest read-length required for sufficient coverage of the genome\n\
              (i.e. 'length_cutoff').\n\npositional arguments:\n  genome_size    \
              \      Estimated number of bases in genome. (haploid?)\n  capture  \
              \            File with captured output of DBstats. (Otherwise, stdin.)\n\
              \noptional arguments:\n  -h, --help           show this help message\
              \ and exit\n  --coverage COVERAGE  Desired coverage ratio (i.e. over-sampling)\
              \ (default: 20)\n\nThis is useful when length_cutoff is not provided\
              \ but the genome-size\ncan be estimated. The purpose is to *reduce*\
              \ the amount of data seen by\nDALIGNER, since otherwise it will miss\
              \ many alignments when it\nencounters resource limits.\n\nNote: If PBFALCON_ERRFILE\
              \ is defined (and its directory is writable),\nwe will write errors\
              \ there in addition to stderr.\n"
            generated_using: *id004
          subcommands: []
          usage: []
          help_flag: !Flag
            description: ''
            synonyms:
            - -h
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow\
            \ 2.3.0\nusage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size\
            \ capture\nfc_calc_cutoff: error: argument genome_size: invalid int value:\
            \ 'capture'\n"
          generated_using: *id004
        - !Command
          command: *id005
          positional:
          - !Positional
            description: ''
            position: 0
            name: capture
            optional: false
          named:
          - !Flag
            description: ''
            synonyms:
            - --coverage
            args: !SimpleFlagArg
              name: COVERAGE
            optional: true
          parent: *id006
          subcommands: []
          usage: []
          help_flag: !Flag
            description: ''
            synonyms:
            - -h
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow\
            \ 2.3.0\nusage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size\
            \ capture\nfc_calc_cutoff: error: argument genome_size: invalid int value:\
            \ 'genome_size'\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\n\
          \nGiven the result of 'DBstats -u -b1' on stdin,\nprint the lowest read-length\
          \ required for sufficient coverage of the genome\n(i.e. 'length_cutoff').\n\
          \npositional arguments:\n  genome_size          Estimated number of bases\
          \ in genome. (haploid?)\n  capture              File with captured output\
          \ of DBstats. (Otherwise, stdin.)\n\noptional arguments:\n  -h, --help \
          \          show this help message and exit\n  --coverage COVERAGE  Desired\
          \ coverage ratio (i.e. over-sampling) (default: 20)\n\nThis is useful when\
          \ length_cutoff is not provided but the genome-size\ncan be estimated. The\
          \ purpose is to *reduce* the amount of data seen by\nDALIGNER, since otherwise\
          \ it will miss many alignments when it\nencounters resource limits.\n\n\
          Note: If PBFALCON_ERRFILE is defined (and its directory is writable),\n\
          we will write errors there in addition to stderr.\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow 2.3.0\n\
        usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\nfc_calc_cutoff:\
        \ error: argument genome_size: invalid int value: 'capture'\n"
      generated_using: *id004
    - !Command
      command: *id005
      positional:
      - !Positional
        description: ''
        position: 0
        name: capture
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --coverage
        args: !SimpleFlagArg
          name: COVERAGE
        optional: true
      parent: *id007
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow 2.3.0\n\
        usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\nfc_calc_cutoff:\
        \ error: argument genome_size: invalid int value: 'genome_size'\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\n\
      \nGiven the result of 'DBstats -u -b1' on stdin,\nprint the lowest read-length\
      \ required for sufficient coverage of the genome\n(i.e. 'length_cutoff').\n\n\
      positional arguments:\n  genome_size          Estimated number of bases in genome.\
      \ (haploid?)\n  capture              File with captured output of DBstats. (Otherwise,\
      \ stdin.)\n\noptional arguments:\n  -h, --help           show this help message\
      \ and exit\n  --coverage COVERAGE  Desired coverage ratio (i.e. over-sampling)\
      \ (default: 20)\n\nThis is useful when length_cutoff is not provided but the\
      \ genome-size\ncan be estimated. The purpose is to *reduce* the amount of data\
      \ seen by\nDALIGNER, since otherwise it will miss many alignments when it\n\
      encounters resource limits.\n\nNote: If PBFALCON_ERRFILE is defined (and its\
      \ directory is writable),\nwe will write errors there in addition to stderr.\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow 2.3.0\n\
    usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\nfc_calc_cutoff:\
    \ error: argument genome_size: invalid int value: 'capture'\n"
  generated_using: *id004
- !Command
  command: *id005
  positional:
  - !Positional
    description: ''
    position: 0
    name: capture
    optional: false
  named:
  - !Flag
    description: ''
    synonyms:
    - --coverage
    args: !SimpleFlagArg
      name: COVERAGE
    optional: true
  parent: *id008
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "falcon-kit 1.8.1 (pip thinks \"falcon-kit 1.8.1\")\npypeflow 2.3.0\n\
    usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\nfc_calc_cutoff:\
    \ error: argument genome_size: invalid int value: 'genome_size'\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: fc_calc_cutoff [-h] [--coverage COVERAGE] genome_size capture\n\
  \nGiven the result of 'DBstats -u -b1' on stdin,\nprint the lowest read-length required\
  \ for sufficient coverage of the genome\n(i.e. 'length_cutoff').\n\npositional arguments:\n\
  \  genome_size          Estimated number of bases in genome. (haploid?)\n  capture\
  \              File with captured output of DBstats. (Otherwise, stdin.)\n\noptional\
  \ arguments:\n  -h, --help           show this help message and exit\n  --coverage\
  \ COVERAGE  Desired coverage ratio (i.e. over-sampling) (default: 20)\n\nThis is\
  \ useful when length_cutoff is not provided but the genome-size\ncan be estimated.\
  \ The purpose is to *reduce* the amount of data seen by\nDALIGNER, since otherwise\
  \ it will miss many alignments when it\nencounters resource limits.\n\nNote: If\
  \ PBFALCON_ERRFILE is defined (and its directory is writable),\nwe will write errors\
  \ there in addition to stderr.\n"
generated_using: *id004
