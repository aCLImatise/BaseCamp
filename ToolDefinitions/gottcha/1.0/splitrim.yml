!Command
command:
- splitrim
positional:
- !Positional
  optional: true
  position: 0
  name: INPUT
  description: ''
- !Positional
  optional: true
  position: 1
  name: OUTPUT
  description: ''
- !Positional
  optional: true
  position: 2
  name: OTHERS
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --inFile
  description: =        string   Name of the FASTQ file containing all the single-end
    reads
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minL
  description: '=          int      Minimum length for a trimmed read to be considered
    valid [default: 0]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --recycle
  description: "bool     When --fixL is specified and a read length is not a multiple\
    \ of \"fixL\", this option will append any\nremaining bases (up to the maximum\
    \ fixL-1 bases) to the last fragment of length \"fixL\" [default: false]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ascii
  description: '=         int      ASCII encoding (33 or 64) [default: 33]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minQ
  description: '=          int      Minimum quality for a read to be considered valid
    (0-41) [default: 10]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: =   uint     <disabled> no. of threads to use [1]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --outPath
  description: =       string   Location output files will be placed
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --prefix
  description: =        string   Prefix of output files
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --outEncoding
  description: '=   int      ASCII encoding of the output (33 or 64) [default: mirrors
    input]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --stats
  description: '=         string   Basic read statistics output [default: uses basename
    from --inFile]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --histo
  description: '=         string   Post-trim read length histogram [default: uses
    basename from --inFile]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sortLenAsc
  description: 'bool     Sort read length frequency table in ascending order [default:
    unordered]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sortLenDesc
  description: 'bool     Sort read length frequency table in descending order [default:
    unordered]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: bool     verbosity level
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: bool     display HELP
  args: !EmptyFlagArg {}
usage_flag: !Flag
  optional: true
  synonyms:
  - --usage
  description: bool     display this message
  args: !EmptyFlagArg {}
version_flag: !Flag
  optional: true
  synonyms:
  - -V
  - --version
  description: bool     print program version and exit
  args: !EmptyFlagArg {}
help_text: "\nsplitrim 0.1j3e6\n\nUsage: splitrim [INPUT] [OUTPUT] [OTHERS]\n\nInput:\n\
  ==============\nREQUIRED:\n   --inFile=        string   Name of the FASTQ file containing\
  \ all the single-end reads\n\n   --minL=          int      Minimum length for a\
  \ trimmed read to be considered valid [default: 0]\nor --fixL=          int    \
  \  Fixed length to which each trimmed read will be cut down to [default: disabled]\n\
  OPTIONAL:\n   --recycle        bool     When --fixL is specified and a read length\
  \ is not a multiple of \"fixL\", this option will append any\n                 \
  \            remaining bases (up to the maximum fixL-1 bases) to the last fragment\
  \ of length \"fixL\" [default: false]\n   --ascii=         int      ASCII encoding\
  \ (33 or 64) [default: 33]\n   --minQ=          int      Minimum quality for a read\
  \ to be considered valid (0-41) [default: 10]\n   -t, --threads=   uint     <disabled>\
  \ no. of threads to use [1]\n\nOutput:\n==============\nREQUIRED:\n   --outPath=\
  \       string   Location output files will be placed\nOPTIONAL:\n   --prefix= \
  \       string   Prefix of output files\n   --outEncoding=   int      ASCII encoding\
  \ of the output (33 or 64) [default: mirrors input]\n   --stats=         string\
  \   Basic read statistics output [default: uses basename from --inFile]\n   --histo=\
  \         string   Post-trim read length histogram [default: uses basename from\
  \ --inFile]\n   --sortLenAsc     bool     Sort read length frequency table in ascending\
  \ order [default: unordered]\n   --sortLenDesc    bool     Sort read length frequency\
  \ table in descending order [default: unordered]\n\nOthers:\n==============\n  \
  \ -h, --help       bool     display HELP\n   --usage          bool     display this\
  \ message\n   -v, --verbose    bool     verbosity level\n   -V, --version    bool\
  \     print program version and exit\n\n\nEx1: Split single-end reads at bases <\
  \ Q20 and retain all read fragments >= 30-bp, transcoding qualities from ASCII-33\
  \ to ASCII-64\n     splitrim --inFile=/user/518893/seq.fastq --ascii=33 --minL=30\
  \ --minQ=20 --prefix=MYSEQ --outPath=/user/518893/output --outEncoding=64 --sortLenAsc\n\
  \nEx2: Split single-end reads at bases < Q20, split remaining frags into 30-bp frags,\
  \ trashing the last fragment if < 30-bp, and transcode qualities from ASCII-33 to\
  \ ASCII-64\n     splitrim --inFile=/user/518893/seq.fastq --ascii=33 --fixL=30 --minQ=20\
  \ --prefix=MYSEQ --outPath=/user/518893/output --outEncoding=64 --sortLenAsc\n\n\
  Ex3: Split single-end reads at bases < Q20, split remaining frags into 30-bp frags,\
  \ appending the last fragment (if < 30-bp) to previous fragment, and transcode qualities\
  \ from ASCII-33 to ASCII-64\n     splitrim --inFile=/user/518893/seq.fastq --ascii=33\
  \ --fixL=30 --recycle --minQ=20 --prefix=MYSEQ --outPath=/user/518893/output --outEncoding=64\
  \ --sortLenAsc\n\n\n"
generated_using:
- --help
docker_image:
