!Command
command:
- sha256sum
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -b
  - --binary
  description: read in binary mode
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --check
  description: read SHA256 sums from the FILEs and check them
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tag
  description: create a BSD-style checksum
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --text
  description: read in text mode (default)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --zero
  description: "end each output line with NUL, not newline,\nand disable file name\
    \ escaping"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore-missing
  description: don't fail or report status for missing files
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --quiet
  description: don't print OK for each successfully verified file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --status
  description: don't output anything, status code shows success
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --strict
  description: exit non-zero for improperly formatted checksum lines
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  - --warn
  description: warn about improperly formatted checksum lines
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: sha256sum [OPTION]... [FILE]...\nPrint or check SHA256 (256-bit)\
  \ checksums.\n\nWith no FILE, or when FILE is -, read standard input.\n\n  -b, --binary\
  \         read in binary mode\n  -c, --check          read SHA256 sums from the\
  \ FILEs and check them\n      --tag            create a BSD-style checksum\n  -t,\
  \ --text           read in text mode (default)\n  -z, --zero           end each\
  \ output line with NUL, not newline,\n                       and disable file name\
  \ escaping\n\nThe following five options are useful only when verifying checksums:\n\
  \      --ignore-missing  don't fail or report status for missing files\n      --quiet\
  \          don't print OK for each successfully verified file\n      --status  \
  \       don't output anything, status code shows success\n      --strict       \
  \  exit non-zero for improperly formatted checksum lines\n  -w, --warn         \
  \  warn about improperly formatted checksum lines\n\n      --help     display this\
  \ help and exit\n      --version  output version information and exit\n\nThe sums\
  \ are computed as described in FIPS-180-2.  When checking, the input\nshould be\
  \ a former output of this program.  The default mode is to print a\nline with checksum,\
  \ a space, a character indicating input mode ('*' for binary,\n' ' for text or where\
  \ binary is insignificant), and name for each FILE.\n\nGNU coreutils online help:\
  \ <https://www.gnu.org/software/coreutils/>\nReport any translation bugs to <https://translationproject.org/team/>\n\
  Full documentation <https://www.gnu.org/software/coreutils/sha256sum>\nor available\
  \ locally via: info '(coreutils) sha2 utilities'\n"
generated_using:
- --help
docker_image:
