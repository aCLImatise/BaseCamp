!Command
command:
- shred
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --force
  description: change permissions to allow writing if necessary
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --iterations
  description: overwrite N times instead of the default (3)
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --random-source
  description: get random bytes from FILE
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -s
  - --size
  description: shred this many bytes (suffixes like K, M, G accepted)
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - -u
  description: deallocate and remove file after overwriting
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --remove
  description: '[=HOW]  like -u but give control on HOW to delete;  See below'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: show progress
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  - --exact
  description: "do not round file sizes up to the next full block;\nthis is the default\
    \ for non-regular files"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --zero
  description: add a final overwrite with zeros to hide shredding
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: shred [OPTION]... FILE...\nOverwrite the specified FILE(s) repeatedly,\
  \ in order to make it harder\nfor even very expensive hardware probing to recover\
  \ the data.\n\nIf FILE is -, shred standard output.\n\nMandatory arguments to long\
  \ options are mandatory for short options too.\n  -f, --force    change permissions\
  \ to allow writing if necessary\n  -n, --iterations=N  overwrite N times instead\
  \ of the default (3)\n      --random-source=FILE  get random bytes from FILE\n \
  \ -s, --size=N   shred this many bytes (suffixes like K, M, G accepted)\n  -u  \
  \           deallocate and remove file after overwriting\n      --remove[=HOW] \
  \ like -u but give control on HOW to delete;  See below\n  -v, --verbose  show progress\n\
  \  -x, --exact    do not round file sizes up to the next full block;\n         \
  \          this is the default for non-regular files\n  -z, --zero     add a final\
  \ overwrite with zeros to hide shredding\n      --help     display this help and\
  \ exit\n      --version  output version information and exit\n\nDelete FILE(s) if\
  \ --remove (-u) is specified.  The default is not to remove\nthe files because it\
  \ is common to operate on device files like /dev/hda,\nand those files usually should\
  \ not be removed.\nThe optional HOW parameter indicates how to remove a directory\
  \ entry:\n'unlink' => use a standard unlink call.\n'wipe' => also first obfuscate\
  \ bytes in the name.\n'wipesync' => also sync each obfuscated byte to disk.\nThe\
  \ default mode is 'wipesync', but note it can be expensive.\n\nCAUTION: Note that\
  \ shred relies on a very important assumption:\nthat the file system overwrites\
  \ data in place.  This is the traditional\nway to do things, but many modern file\
  \ system designs do not satisfy this\nassumption.  The following are examples of\
  \ file systems on which shred is\nnot effective, or is not guaranteed to be effective\
  \ in all file system modes:\n\n* log-structured or journaled file systems, such\
  \ as those supplied with\nAIX and Solaris (and JFS, ReiserFS, XFS, Ext3, etc.)\n\
  \n* file systems that write redundant data and carry on even if some writes\nfail,\
  \ such as RAID-based file systems\n\n* file systems that make snapshots, such as\
  \ Network Appliance's NFS server\n\n* file systems that cache in temporary locations,\
  \ such as NFS\nversion 3 clients\n\n* compressed file systems\n\nIn the case of\
  \ ext3 file systems, the above disclaimer applies\n(and shred is thus of limited\
  \ effectiveness) only in data=journal mode,\nwhich journals file data in addition\
  \ to just metadata.  In both the\ndata=ordered (default) and data=writeback modes,\
  \ shred works as usual.\nExt3 journaling modes can be changed by adding the data=something\
  \ option\nto the mount options for a particular file system in the /etc/fstab file,\n\
  as documented in the mount man page (man mount).\n\nIn addition, file system backups\
  \ and remote mirrors may contain copies\nof the file that cannot be removed, and\
  \ that will allow a shredded file\nto be recovered later.\n\nGNU coreutils online\
  \ help: <https://www.gnu.org/software/coreutils/>\nReport any translation bugs to\
  \ <https://translationproject.org/team/>\nFull documentation <https://www.gnu.org/software/coreutils/shred>\n\
  or available locally via: info '(coreutils) shred invocation'\n"
generated_using:
- --help
docker_image:
