!Command
command: &id001
- biomaj-cli.py
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - biomaj-cli.py
  - AND/OR
  positional:
  - !Positional
    optional: false
    position: 0
    name: biomaj-cli.py
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -p
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -z
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --fromscratch
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -u
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --check
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: ''
    args: !SimpleFlagArg
      name: CONFIG
  parent: !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: biomaj-cli.py
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -p
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -z
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --fromscratch
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -u
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --check
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: ''
        args: !SimpleFlagArg
          name: CONFIG
      parent: !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: biomaj-cli.py
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -p
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -z
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --fromscratch
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -u
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --check
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: ''
            args: !SimpleFlagArg
              name: CONFIG
          parent: !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: biomaj-cli.py
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -p
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -z
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --fromscratch
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -u
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --check
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: ''
                args: !SimpleFlagArg
                  name: CONFIG
              parent: !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: biomaj-cli.py
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -z
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --fromscratch
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -u
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --check
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: ''
                    args: !SimpleFlagArg
                      name: CONFIG
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - --config
                      description: ': global.properties file path'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --status
                      description: ": list of banks with published release\n[OPTIONAL]\n\
                        --bank xx / bank: Get status details of bank"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --status-ko
                      description: ': list of banks in error status (last run)'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --log
                      description: '|INFO|WARN|ERR  [OPTIONAL]: set log level in logs
                        for this run, default is set in global.properties file'
                      args: !SimpleFlagArg
                        name: DEBUG
                    - !Flag
                      optional: true
                      synonyms:
                      - --check
                      description: ": Check bank property file\n[MANDATORY]\n--bank\
                        \ xx: name of the bank to check (will check xx.properties)"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --owner
                      description: ": Change owner of the bank (user id)\n[MANDATORY]\n\
                        --bank xx: name of the bank"
                      args: !SimpleFlagArg
                        name: yy
                    - !Flag
                      optional: true
                      synonyms:
                      - --visibility
                      description: "|private: change visibility public/private of\
                        \ a bank\n[MANDATORY]\n--bank xx: name of the bank"
                      args: !SimpleFlagArg
                        name: public
                    - !Flag
                      optional: true
                      synonyms:
                      - --change-dbname
                      description: ": Change name of the bank to this new name\n[MANDATORY]\n\
                        --bank xx: current name of the bank"
                      args: !SimpleFlagArg
                        name: yy
                    - !Flag
                      optional: true
                      synonyms:
                      - --move-production-directories
                      description: ": Change bank production directories location\
                        \ to this new path, path must exists\n[MANDATORY]\n--bank\
                        \ xx: current name of the bank"
                      args: !SimpleFlagArg
                        name: yy
                    - !Flag
                      optional: true
                      synonyms:
                      - --update
                      description: ": Update bank\n[MANDATORY]\n--bank xx: name of\
                        \ the bank(s) to update, comma separated\n[OPTIONAL]\n--publish:\
                        \ after update set as *current* version\n--from-scratch: force\
                        \ a new update cycle, even if release is identical, release\
                        \ will be incremented like (myrel_1)\n--stop-before xx: stop\
                        \ update cycle before the start of step xx\n--stop-after xx:\
                        \ stop update cycle after step xx has completed\n--from-task\
                        \ xx --release yy: Force an re-update cycle for bank release\
                        \ *yy* or from current cycle (in production directories),\
                        \ skipping steps up to *xx*\n--process xx: linked to from-task,\
                        \ optionally specify a block, meta or process name to start\
                        \ from\n--release xx: release to update"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --publish
                      description: ": Publish bank as current release to use\n[MANDATORY]\n\
                        --bank xx: name of the bank to update\n--release xx: release\
                        \ of the bank to publish"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --unpublish
                      description: ": Unpublish bank (remove current)\n[MANDATORY]\n\
                        --bank xx: name of the bank to update"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --remove-all
                      description: ": Remove all bank releases and database records\n\
                        [MANDATORY]\n--bank xx: name of the bank to update\n[OPTIONAL]\n\
                        --force: remove freezed releases"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --remove-pending
                      description: ": Remove pending releases\n[MANDATORY]\n--bank\
                        \ xx: name of the bank to update"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --remove
                      description: ": Remove bank release (files and database release)\n\
                        [MANDATORY]\n--bank xx: name of the bank to update\n--release\
                        \ xx: release of the bank to remove\nRelease must not be the\
                        \ *current* version. If this is the case, publish a new release\
                        \ before."
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --freeze
                      description: ": Freeze bank release (cannot be removed)\n[MANDATORY]\n\
                        --bank xx: name of the bank to update\n--release xx: release\
                        \ of the bank to remove"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --unfreeze
                      description: ": Unfreeze bank release (can be removed)\n[MANDATORY]\n\
                        --bank xx: name of the bank to update\n--release xx: release\
                        \ of the bank to remove"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --search
                      description: ': basic search in bank production releases, return
                        list of banks'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --formats
                      description: ',yy : list of comma separated format'
                      args: !SimpleFlagArg
                        name: xx
                    - !Flag
                      optional: true
                      synonyms:
                      - --query
                      description: '"LUCENE query syntax": search in index (if activated)'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --show
                      description: ": Show bank files per format\n[MANDATORY]\n--bank\
                        \ xx: name of the bank to show\n[OPTIONAL]\n--release xx:\
                        \ release of the bank to show"
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --maintenance
                      description: ': (un)set biomaj in maintenance mode to prevent
                        updates/removal'
                      args: !SimpleFlagArg
                        name: on/off/status
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: biomaj-cli.py
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -z
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --fromscratch
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -u
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --check
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: ''
                        args: !SimpleFlagArg
                          name: CONFIG
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: biomaj-cli.py [-c CONFIG] [--check] [-u]\
                        \ [--fromscratch] [-z] [-p]\n                     [--unpublish]\
                        \ [--release RELEASE] [--from-task FROM_TASK]\n          \
                        \           [--process PROCESS] [-l LOG] [-r] [--remove-all]\n\
                        \                     [--remove-pending] [-s] [-b BANK] [--owner\
                        \ OWNER]\n                     [--stop-before STOP_BEFORE]\
                        \ [--stop-after STOP_AFTER]\n                     [--freeze]\
                        \ [--unfreeze] [-f] [-h] [--search]\n                    \
                        \ [--formats FORMATS] [--types TYPES] [--query QUERY]\n  \
                        \                   [--show] [-n NEWBANK] [-e NEWDIR]\n  \
                        \                   [--visibility VISIBILITY] [--maintenance\
                        \ MAINTENANCE]\n                     [--version] [--status-ko]\n\
                        biomaj-cli.py: error: unrecognized arguments: AND/OR\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "\n    --config: global.properties file path\n\n  \
                      \  --status: list of banks with published release\n        [OPTIONAL]\n\
                      \        --bank xx / bank: Get status details of bank\n\n  \
                      \  --status-ko: list of banks in error status (last run)\n\n\
                      \    --log DEBUG|INFO|WARN|ERR  [OPTIONAL]: set log level in\
                      \ logs for this run, default is set in global.properties file\n\
                      \n    --check: Check bank property file\n        [MANDATORY]\n\
                      \        --bank xx: name of the bank to check (will check xx.properties)\n\
                      \n    --owner yy: Change owner of the bank (user id)\n     \
                      \   [MANDATORY]\n        --bank xx: name of the bank\n\n   \
                      \ --visibility public|private: change visibility public/private\
                      \ of a bank\n        [MANDATORY]\n        --bank xx: name of\
                      \ the bank\n\n    --change-dbname yy: Change name of the bank\
                      \ to this new name\n        [MANDATORY]\n        --bank xx:\
                      \ current name of the bank\n\n    --move-production-directories\
                      \ yy: Change bank production directories location to this new\
                      \ path, path must exists\n        [MANDATORY]\n        --bank\
                      \ xx: current name of the bank\n\n    --update: Update bank\n\
                      \        [MANDATORY]\n        --bank xx: name of the bank(s)\
                      \ to update, comma separated\n        [OPTIONAL]\n        --publish:\
                      \ after update set as *current* version\n        --from-scratch:\
                      \ force a new update cycle, even if release is identical, release\
                      \ will be incremented like (myrel_1)\n        --stop-before\
                      \ xx: stop update cycle before the start of step xx\n      \
                      \  --stop-after xx: stop update cycle after step xx has completed\n\
                      \        --from-task xx --release yy: Force an re-update cycle\
                      \ for bank release *yy* or from current cycle (in production\
                      \ directories), skipping steps up to *xx*\n        --process\
                      \ xx: linked to from-task, optionally specify a block, meta\
                      \ or process name to start from\n        --release xx: release\
                      \ to update\n\n    --publish: Publish bank as current release\
                      \ to use\n        [MANDATORY]\n        --bank xx: name of the\
                      \ bank to update\n        --release xx: release of the bank\
                      \ to publish\n    --unpublish: Unpublish bank (remove current)\n\
                      \        [MANDATORY]\n        --bank xx: name of the bank to\
                      \ update\n\n    --remove-all: Remove all bank releases and database\
                      \ records\n        [MANDATORY]\n        --bank xx: name of the\
                      \ bank to update\n        [OPTIONAL]\n        --force: remove\
                      \ freezed releases\n\n    --remove-pending: Remove pending releases\n\
                      \        [MANDATORY]\n        --bank xx: name of the bank to\
                      \ update\n\n    --remove: Remove bank release (files and database\
                      \ release)\n        [MANDATORY]\n        --bank xx: name of\
                      \ the bank to update\n        --release xx: release of the bank\
                      \ to remove\n\n        Release must not be the *current* version.\
                      \ If this is the case, publish a new release before.\n\n   \
                      \ --freeze: Freeze bank release (cannot be removed)\n      \
                      \  [MANDATORY]\n        --bank xx: name of the bank to update\n\
                      \        --release xx: release of the bank to remove\n\n   \
                      \ --unfreeze: Unfreeze bank release (can be removed)\n     \
                      \   [MANDATORY]\n        --bank xx: name of the bank to update\n\
                      \        --release xx: release of the bank to remove\n\n   \
                      \ --search: basic search in bank production releases, return\
                      \ list of banks\n       --formats xx,yy : list of comma separated\
                      \ format\n      AND/OR\n       --types xx,yy : list of comma\
                      \ separated type\n\n       --query \"LUCENE query syntax\":\
                      \ search in index (if activated)\n\n    --show: Show bank files\
                      \ per format\n      [MANDATORY]\n      --bank xx: name of the\
                      \ bank to show\n      [OPTIONAL]\n      --release xx: release\
                      \ of the bank to show\n\n    --maintenance on/off/status: (un)set\
                      \ biomaj in maintenance mode to prevent updates/removal\n\n\
                      \        \n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: biomaj-cli.py [-c CONFIG] [--check] [-u] [--fromscratch]\
                    \ [-z] [-p]\n                     [--unpublish] [--release RELEASE]\
                    \ [--from-task FROM_TASK]\n                     [--process PROCESS]\
                    \ [-l LOG] [-r] [--remove-all]\n                     [--remove-pending]\
                    \ [-s] [-b BANK] [--owner OWNER]\n                     [--stop-before\
                    \ STOP_BEFORE] [--stop-after STOP_AFTER]\n                   \
                    \  [--freeze] [--unfreeze] [-f] [-h] [--search]\n            \
                    \         [--formats FORMATS] [--types TYPES] [--query QUERY]\n\
                    \                     [--show] [-n NEWBANK] [-e NEWDIR]\n    \
                    \                 [--visibility VISIBILITY] [--maintenance MAINTENANCE]\n\
                    \                     [--version] [--status-ko]\nbiomaj-cli.py:\
                    \ error: unrecognized arguments: AND/OR\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "\n    --config: global.properties file path\n\n    --status:\
                  \ list of banks with published release\n        [OPTIONAL]\n   \
                  \     --bank xx / bank: Get status details of bank\n\n    --status-ko:\
                  \ list of banks in error status (last run)\n\n    --log DEBUG|INFO|WARN|ERR\
                  \  [OPTIONAL]: set log level in logs for this run, default is set\
                  \ in global.properties file\n\n    --check: Check bank property\
                  \ file\n        [MANDATORY]\n        --bank xx: name of the bank\
                  \ to check (will check xx.properties)\n\n    --owner yy: Change\
                  \ owner of the bank (user id)\n        [MANDATORY]\n        --bank\
                  \ xx: name of the bank\n\n    --visibility public|private: change\
                  \ visibility public/private of a bank\n        [MANDATORY]\n   \
                  \     --bank xx: name of the bank\n\n    --change-dbname yy: Change\
                  \ name of the bank to this new name\n        [MANDATORY]\n     \
                  \   --bank xx: current name of the bank\n\n    --move-production-directories\
                  \ yy: Change bank production directories location to this new path,\
                  \ path must exists\n        [MANDATORY]\n        --bank xx: current\
                  \ name of the bank\n\n    --update: Update bank\n        [MANDATORY]\n\
                  \        --bank xx: name of the bank(s) to update, comma separated\n\
                  \        [OPTIONAL]\n        --publish: after update set as *current*\
                  \ version\n        --from-scratch: force a new update cycle, even\
                  \ if release is identical, release will be incremented like (myrel_1)\n\
                  \        --stop-before xx: stop update cycle before the start of\
                  \ step xx\n        --stop-after xx: stop update cycle after step\
                  \ xx has completed\n        --from-task xx --release yy: Force an\
                  \ re-update cycle for bank release *yy* or from current cycle (in\
                  \ production directories), skipping steps up to *xx*\n        --process\
                  \ xx: linked to from-task, optionally specify a block, meta or process\
                  \ name to start from\n        --release xx: release to update\n\n\
                  \    --publish: Publish bank as current release to use\n       \
                  \ [MANDATORY]\n        --bank xx: name of the bank to update\n \
                  \       --release xx: release of the bank to publish\n    --unpublish:\
                  \ Unpublish bank (remove current)\n        [MANDATORY]\n       \
                  \ --bank xx: name of the bank to update\n\n    --remove-all: Remove\
                  \ all bank releases and database records\n        [MANDATORY]\n\
                  \        --bank xx: name of the bank to update\n        [OPTIONAL]\n\
                  \        --force: remove freezed releases\n\n    --remove-pending:\
                  \ Remove pending releases\n        [MANDATORY]\n        --bank xx:\
                  \ name of the bank to update\n\n    --remove: Remove bank release\
                  \ (files and database release)\n        [MANDATORY]\n        --bank\
                  \ xx: name of the bank to update\n        --release xx: release\
                  \ of the bank to remove\n\n        Release must not be the *current*\
                  \ version. If this is the case, publish a new release before.\n\n\
                  \    --freeze: Freeze bank release (cannot be removed)\n       \
                  \ [MANDATORY]\n        --bank xx: name of the bank to update\n \
                  \       --release xx: release of the bank to remove\n\n    --unfreeze:\
                  \ Unfreeze bank release (can be removed)\n        [MANDATORY]\n\
                  \        --bank xx: name of the bank to update\n        --release\
                  \ xx: release of the bank to remove\n\n    --search: basic search\
                  \ in bank production releases, return list of banks\n       --formats\
                  \ xx,yy : list of comma separated format\n      AND/OR\n       --types\
                  \ xx,yy : list of comma separated type\n\n       --query \"LUCENE\
                  \ query syntax\": search in index (if activated)\n\n    --show:\
                  \ Show bank files per format\n      [MANDATORY]\n      --bank xx:\
                  \ name of the bank to show\n      [OPTIONAL]\n      --release xx:\
                  \ release of the bank to show\n\n    --maintenance on/off/status:\
                  \ (un)set biomaj in maintenance mode to prevent updates/removal\n\
                  \n        \n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: biomaj-cli.py [-c CONFIG] [--check] [-u] [--fromscratch]\
                \ [-z] [-p]\n                     [--unpublish] [--release RELEASE]\
                \ [--from-task FROM_TASK]\n                     [--process PROCESS]\
                \ [-l LOG] [-r] [--remove-all]\n                     [--remove-pending]\
                \ [-s] [-b BANK] [--owner OWNER]\n                     [--stop-before\
                \ STOP_BEFORE] [--stop-after STOP_AFTER]\n                     [--freeze]\
                \ [--unfreeze] [-f] [-h] [--search]\n                     [--formats\
                \ FORMATS] [--types TYPES] [--query QUERY]\n                     [--show]\
                \ [-n NEWBANK] [-e NEWDIR]\n                     [--visibility VISIBILITY]\
                \ [--maintenance MAINTENANCE]\n                     [--version] [--status-ko]\n\
                biomaj-cli.py: error: unrecognized arguments: AND/OR\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "\n    --config: global.properties file path\n\n    --status:\
              \ list of banks with published release\n        [OPTIONAL]\n       \
              \ --bank xx / bank: Get status details of bank\n\n    --status-ko: list\
              \ of banks in error status (last run)\n\n    --log DEBUG|INFO|WARN|ERR\
              \  [OPTIONAL]: set log level in logs for this run, default is set in\
              \ global.properties file\n\n    --check: Check bank property file\n\
              \        [MANDATORY]\n        --bank xx: name of the bank to check (will\
              \ check xx.properties)\n\n    --owner yy: Change owner of the bank (user\
              \ id)\n        [MANDATORY]\n        --bank xx: name of the bank\n\n\
              \    --visibility public|private: change visibility public/private of\
              \ a bank\n        [MANDATORY]\n        --bank xx: name of the bank\n\
              \n    --change-dbname yy: Change name of the bank to this new name\n\
              \        [MANDATORY]\n        --bank xx: current name of the bank\n\n\
              \    --move-production-directories yy: Change bank production directories\
              \ location to this new path, path must exists\n        [MANDATORY]\n\
              \        --bank xx: current name of the bank\n\n    --update: Update\
              \ bank\n        [MANDATORY]\n        --bank xx: name of the bank(s)\
              \ to update, comma separated\n        [OPTIONAL]\n        --publish:\
              \ after update set as *current* version\n        --from-scratch: force\
              \ a new update cycle, even if release is identical, release will be\
              \ incremented like (myrel_1)\n        --stop-before xx: stop update\
              \ cycle before the start of step xx\n        --stop-after xx: stop update\
              \ cycle after step xx has completed\n        --from-task xx --release\
              \ yy: Force an re-update cycle for bank release *yy* or from current\
              \ cycle (in production directories), skipping steps up to *xx*\n   \
              \     --process xx: linked to from-task, optionally specify a block,\
              \ meta or process name to start from\n        --release xx: release\
              \ to update\n\n    --publish: Publish bank as current release to use\n\
              \        [MANDATORY]\n        --bank xx: name of the bank to update\n\
              \        --release xx: release of the bank to publish\n    --unpublish:\
              \ Unpublish bank (remove current)\n        [MANDATORY]\n        --bank\
              \ xx: name of the bank to update\n\n    --remove-all: Remove all bank\
              \ releases and database records\n        [MANDATORY]\n        --bank\
              \ xx: name of the bank to update\n        [OPTIONAL]\n        --force:\
              \ remove freezed releases\n\n    --remove-pending: Remove pending releases\n\
              \        [MANDATORY]\n        --bank xx: name of the bank to update\n\
              \n    --remove: Remove bank release (files and database release)\n \
              \       [MANDATORY]\n        --bank xx: name of the bank to update\n\
              \        --release xx: release of the bank to remove\n\n        Release\
              \ must not be the *current* version. If this is the case, publish a\
              \ new release before.\n\n    --freeze: Freeze bank release (cannot be\
              \ removed)\n        [MANDATORY]\n        --bank xx: name of the bank\
              \ to update\n        --release xx: release of the bank to remove\n\n\
              \    --unfreeze: Unfreeze bank release (can be removed)\n        [MANDATORY]\n\
              \        --bank xx: name of the bank to update\n        --release xx:\
              \ release of the bank to remove\n\n    --search: basic search in bank\
              \ production releases, return list of banks\n       --formats xx,yy\
              \ : list of comma separated format\n      AND/OR\n       --types xx,yy\
              \ : list of comma separated type\n\n       --query \"LUCENE query syntax\"\
              : search in index (if activated)\n\n    --show: Show bank files per\
              \ format\n      [MANDATORY]\n      --bank xx: name of the bank to show\n\
              \      [OPTIONAL]\n      --release xx: release of the bank to show\n\
              \n    --maintenance on/off/status: (un)set biomaj in maintenance mode\
              \ to prevent updates/removal\n\n        \n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: biomaj-cli.py [-c CONFIG] [--check] [-u] [--fromscratch]\
            \ [-z] [-p]\n                     [--unpublish] [--release RELEASE] [--from-task\
            \ FROM_TASK]\n                     [--process PROCESS] [-l LOG] [-r] [--remove-all]\n\
            \                     [--remove-pending] [-s] [-b BANK] [--owner OWNER]\n\
            \                     [--stop-before STOP_BEFORE] [--stop-after STOP_AFTER]\n\
            \                     [--freeze] [--unfreeze] [-f] [-h] [--search]\n \
            \                    [--formats FORMATS] [--types TYPES] [--query QUERY]\n\
            \                     [--show] [-n NEWBANK] [-e NEWDIR]\n            \
            \         [--visibility VISIBILITY] [--maintenance MAINTENANCE]\n    \
            \                 [--version] [--status-ko]\nbiomaj-cli.py: error: unrecognized\
            \ arguments: AND/OR\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "\n    --config: global.properties file path\n\n    --status: list\
          \ of banks with published release\n        [OPTIONAL]\n        --bank xx\
          \ / bank: Get status details of bank\n\n    --status-ko: list of banks in\
          \ error status (last run)\n\n    --log DEBUG|INFO|WARN|ERR  [OPTIONAL]:\
          \ set log level in logs for this run, default is set in global.properties\
          \ file\n\n    --check: Check bank property file\n        [MANDATORY]\n \
          \       --bank xx: name of the bank to check (will check xx.properties)\n\
          \n    --owner yy: Change owner of the bank (user id)\n        [MANDATORY]\n\
          \        --bank xx: name of the bank\n\n    --visibility public|private:\
          \ change visibility public/private of a bank\n        [MANDATORY]\n    \
          \    --bank xx: name of the bank\n\n    --change-dbname yy: Change name\
          \ of the bank to this new name\n        [MANDATORY]\n        --bank xx:\
          \ current name of the bank\n\n    --move-production-directories yy: Change\
          \ bank production directories location to this new path, path must exists\n\
          \        [MANDATORY]\n        --bank xx: current name of the bank\n\n  \
          \  --update: Update bank\n        [MANDATORY]\n        --bank xx: name of\
          \ the bank(s) to update, comma separated\n        [OPTIONAL]\n        --publish:\
          \ after update set as *current* version\n        --from-scratch: force a\
          \ new update cycle, even if release is identical, release will be incremented\
          \ like (myrel_1)\n        --stop-before xx: stop update cycle before the\
          \ start of step xx\n        --stop-after xx: stop update cycle after step\
          \ xx has completed\n        --from-task xx --release yy: Force an re-update\
          \ cycle for bank release *yy* or from current cycle (in production directories),\
          \ skipping steps up to *xx*\n        --process xx: linked to from-task,\
          \ optionally specify a block, meta or process name to start from\n     \
          \   --release xx: release to update\n\n    --publish: Publish bank as current\
          \ release to use\n        [MANDATORY]\n        --bank xx: name of the bank\
          \ to update\n        --release xx: release of the bank to publish\n    --unpublish:\
          \ Unpublish bank (remove current)\n        [MANDATORY]\n        --bank xx:\
          \ name of the bank to update\n\n    --remove-all: Remove all bank releases\
          \ and database records\n        [MANDATORY]\n        --bank xx: name of\
          \ the bank to update\n        [OPTIONAL]\n        --force: remove freezed\
          \ releases\n\n    --remove-pending: Remove pending releases\n        [MANDATORY]\n\
          \        --bank xx: name of the bank to update\n\n    --remove: Remove bank\
          \ release (files and database release)\n        [MANDATORY]\n        --bank\
          \ xx: name of the bank to update\n        --release xx: release of the bank\
          \ to remove\n\n        Release must not be the *current* version. If this\
          \ is the case, publish a new release before.\n\n    --freeze: Freeze bank\
          \ release (cannot be removed)\n        [MANDATORY]\n        --bank xx: name\
          \ of the bank to update\n        --release xx: release of the bank to remove\n\
          \n    --unfreeze: Unfreeze bank release (can be removed)\n        [MANDATORY]\n\
          \        --bank xx: name of the bank to update\n        --release xx: release\
          \ of the bank to remove\n\n    --search: basic search in bank production\
          \ releases, return list of banks\n       --formats xx,yy : list of comma\
          \ separated format\n      AND/OR\n       --types xx,yy : list of comma separated\
          \ type\n\n       --query \"LUCENE query syntax\": search in index (if activated)\n\
          \n    --show: Show bank files per format\n      [MANDATORY]\n      --bank\
          \ xx: name of the bank to show\n      [OPTIONAL]\n      --release xx: release\
          \ of the bank to show\n\n    --maintenance on/off/status: (un)set biomaj\
          \ in maintenance mode to prevent updates/removal\n\n        \n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: biomaj-cli.py [-c CONFIG] [--check] [-u] [--fromscratch]\
        \ [-z] [-p]\n                     [--unpublish] [--release RELEASE] [--from-task\
        \ FROM_TASK]\n                     [--process PROCESS] [-l LOG] [-r] [--remove-all]\n\
        \                     [--remove-pending] [-s] [-b BANK] [--owner OWNER]\n\
        \                     [--stop-before STOP_BEFORE] [--stop-after STOP_AFTER]\n\
        \                     [--freeze] [--unfreeze] [-f] [-h] [--search]\n     \
        \                [--formats FORMATS] [--types TYPES] [--query QUERY]\n   \
        \                  [--show] [-n NEWBANK] [-e NEWDIR]\n                   \
        \  [--visibility VISIBILITY] [--maintenance MAINTENANCE]\n               \
        \      [--version] [--status-ko]\nbiomaj-cli.py: error: unrecognized arguments:\
        \ AND/OR\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\n    --config: global.properties file path\n\n    --status: list\
      \ of banks with published release\n        [OPTIONAL]\n        --bank xx / bank:\
      \ Get status details of bank\n\n    --status-ko: list of banks in error status\
      \ (last run)\n\n    --log DEBUG|INFO|WARN|ERR  [OPTIONAL]: set log level in\
      \ logs for this run, default is set in global.properties file\n\n    --check:\
      \ Check bank property file\n        [MANDATORY]\n        --bank xx: name of\
      \ the bank to check (will check xx.properties)\n\n    --owner yy: Change owner\
      \ of the bank (user id)\n        [MANDATORY]\n        --bank xx: name of the\
      \ bank\n\n    --visibility public|private: change visibility public/private\
      \ of a bank\n        [MANDATORY]\n        --bank xx: name of the bank\n\n  \
      \  --change-dbname yy: Change name of the bank to this new name\n        [MANDATORY]\n\
      \        --bank xx: current name of the bank\n\n    --move-production-directories\
      \ yy: Change bank production directories location to this new path, path must\
      \ exists\n        [MANDATORY]\n        --bank xx: current name of the bank\n\
      \n    --update: Update bank\n        [MANDATORY]\n        --bank xx: name of\
      \ the bank(s) to update, comma separated\n        [OPTIONAL]\n        --publish:\
      \ after update set as *current* version\n        --from-scratch: force a new\
      \ update cycle, even if release is identical, release will be incremented like\
      \ (myrel_1)\n        --stop-before xx: stop update cycle before the start of\
      \ step xx\n        --stop-after xx: stop update cycle after step xx has completed\n\
      \        --from-task xx --release yy: Force an re-update cycle for bank release\
      \ *yy* or from current cycle (in production directories), skipping steps up\
      \ to *xx*\n        --process xx: linked to from-task, optionally specify a block,\
      \ meta or process name to start from\n        --release xx: release to update\n\
      \n    --publish: Publish bank as current release to use\n        [MANDATORY]\n\
      \        --bank xx: name of the bank to update\n        --release xx: release\
      \ of the bank to publish\n    --unpublish: Unpublish bank (remove current)\n\
      \        [MANDATORY]\n        --bank xx: name of the bank to update\n\n    --remove-all:\
      \ Remove all bank releases and database records\n        [MANDATORY]\n     \
      \   --bank xx: name of the bank to update\n        [OPTIONAL]\n        --force:\
      \ remove freezed releases\n\n    --remove-pending: Remove pending releases\n\
      \        [MANDATORY]\n        --bank xx: name of the bank to update\n\n    --remove:\
      \ Remove bank release (files and database release)\n        [MANDATORY]\n  \
      \      --bank xx: name of the bank to update\n        --release xx: release\
      \ of the bank to remove\n\n        Release must not be the *current* version.\
      \ If this is the case, publish a new release before.\n\n    --freeze: Freeze\
      \ bank release (cannot be removed)\n        [MANDATORY]\n        --bank xx:\
      \ name of the bank to update\n        --release xx: release of the bank to remove\n\
      \n    --unfreeze: Unfreeze bank release (can be removed)\n        [MANDATORY]\n\
      \        --bank xx: name of the bank to update\n        --release xx: release\
      \ of the bank to remove\n\n    --search: basic search in bank production releases,\
      \ return list of banks\n       --formats xx,yy : list of comma separated format\n\
      \      AND/OR\n       --types xx,yy : list of comma separated type\n\n     \
      \  --query \"LUCENE query syntax\": search in index (if activated)\n\n    --show:\
      \ Show bank files per format\n      [MANDATORY]\n      --bank xx: name of the\
      \ bank to show\n      [OPTIONAL]\n      --release xx: release of the bank to\
      \ show\n\n    --maintenance on/off/status: (un)set biomaj in maintenance mode\
      \ to prevent updates/removal\n\n        \n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: biomaj-cli.py [-c CONFIG] [--check] [-u] [--fromscratch] [-z]\
    \ [-p]\n                     [--unpublish] [--release RELEASE] [--from-task FROM_TASK]\n\
    \                     [--process PROCESS] [-l LOG] [-r] [--remove-all]\n     \
    \                [--remove-pending] [-s] [-b BANK] [--owner OWNER]\n         \
    \            [--stop-before STOP_BEFORE] [--stop-after STOP_AFTER]\n         \
    \            [--freeze] [--unfreeze] [-f] [-h] [--search]\n                  \
    \   [--formats FORMATS] [--types TYPES] [--query QUERY]\n                    \
    \ [--show] [-n NEWBANK] [-e NEWDIR]\n                     [--visibility VISIBILITY]\
    \ [--maintenance MAINTENANCE]\n                     [--version] [--status-ko]\n\
    biomaj-cli.py: error: unrecognized arguments: AND/OR\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n    --config: global.properties file path\n\n    --status: list of banks\
  \ with published release\n        [OPTIONAL]\n        --bank xx / bank: Get status\
  \ details of bank\n\n    --status-ko: list of banks in error status (last run)\n\
  \n    --log DEBUG|INFO|WARN|ERR  [OPTIONAL]: set log level in logs for this run,\
  \ default is set in global.properties file\n\n    --check: Check bank property file\n\
  \        [MANDATORY]\n        --bank xx: name of the bank to check (will check xx.properties)\n\
  \n    --owner yy: Change owner of the bank (user id)\n        [MANDATORY]\n    \
  \    --bank xx: name of the bank\n\n    --visibility public|private: change visibility\
  \ public/private of a bank\n        [MANDATORY]\n        --bank xx: name of the\
  \ bank\n\n    --change-dbname yy: Change name of the bank to this new name\n   \
  \     [MANDATORY]\n        --bank xx: current name of the bank\n\n    --move-production-directories\
  \ yy: Change bank production directories location to this new path, path must exists\n\
  \        [MANDATORY]\n        --bank xx: current name of the bank\n\n    --update:\
  \ Update bank\n        [MANDATORY]\n        --bank xx: name of the bank(s) to update,\
  \ comma separated\n        [OPTIONAL]\n        --publish: after update set as *current*\
  \ version\n        --from-scratch: force a new update cycle, even if release is\
  \ identical, release will be incremented like (myrel_1)\n        --stop-before xx:\
  \ stop update cycle before the start of step xx\n        --stop-after xx: stop update\
  \ cycle after step xx has completed\n        --from-task xx --release yy: Force\
  \ an re-update cycle for bank release *yy* or from current cycle (in production\
  \ directories), skipping steps up to *xx*\n        --process xx: linked to from-task,\
  \ optionally specify a block, meta or process name to start from\n        --release\
  \ xx: release to update\n\n    --publish: Publish bank as current release to use\n\
  \        [MANDATORY]\n        --bank xx: name of the bank to update\n        --release\
  \ xx: release of the bank to publish\n    --unpublish: Unpublish bank (remove current)\n\
  \        [MANDATORY]\n        --bank xx: name of the bank to update\n\n    --remove-all:\
  \ Remove all bank releases and database records\n        [MANDATORY]\n        --bank\
  \ xx: name of the bank to update\n        [OPTIONAL]\n        --force: remove freezed\
  \ releases\n\n    --remove-pending: Remove pending releases\n        [MANDATORY]\n\
  \        --bank xx: name of the bank to update\n\n    --remove: Remove bank release\
  \ (files and database release)\n        [MANDATORY]\n        --bank xx: name of\
  \ the bank to update\n        --release xx: release of the bank to remove\n\n  \
  \      Release must not be the *current* version. If this is the case, publish a\
  \ new release before.\n\n    --freeze: Freeze bank release (cannot be removed)\n\
  \        [MANDATORY]\n        --bank xx: name of the bank to update\n        --release\
  \ xx: release of the bank to remove\n\n    --unfreeze: Unfreeze bank release (can\
  \ be removed)\n        [MANDATORY]\n        --bank xx: name of the bank to update\n\
  \        --release xx: release of the bank to remove\n\n    --search: basic search\
  \ in bank production releases, return list of banks\n       --formats xx,yy : list\
  \ of comma separated format\n      AND/OR\n       --types xx,yy : list of comma\
  \ separated type\n\n       --query \"LUCENE query syntax\": search in index (if\
  \ activated)\n\n    --show: Show bank files per format\n      [MANDATORY]\n    \
  \  --bank xx: name of the bank to show\n      [OPTIONAL]\n      --release xx: release\
  \ of the bank to show\n\n    --maintenance on/off/status: (un)set biomaj in maintenance\
  \ mode to prevent updates/removal\n\n        \n"
generated_using: *id004
docker_image:
