&id001 !Command
command:
- phylocsf++
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - phylocsf++
  - score-msa
  positional:
  - !Positional
    optional: false
    position: 0
    name: MLE
    description: '--comp-phylo BOOL      Compute the PhyloCSF score for each alignment.
      Default: 1'
  named:
  - !Flag
    optional: true
    synonyms:
    - --strategy
    description: 'PhyloCSF scoring algorithm: MLE, FIXED or OMEGA. Default:'
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --comp-anc
    description: "Compute the ancestral sequence composition score (only in\nMLE and\
      \ FIXED mode). Default: 0"
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: 'Parallelize scoring of multiple MSAs in a file. Default: 2'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --output
    description: "Path where tracks in wig format will be written. If it does\nnot\
      \ exist, it will be created. Default: output files are\nstored next to the input\
      \ files."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --mapping
    description: "If the MSAs don't use common species names (like Human,\nChimp,\
      \ etc.) you can pass a two-column tsv file with a name\nmapping."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --species
    description: "Comma separated list of species to reduce <model> to a\nsubset of\
      \ species to improve running time, e.g.,\n\"Human,Chimp,Seaturtle\""
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --genome-length
    description: Total genome length (needed for --output-phylo).
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --coding-exons
    description: "BED-like file (chrom name, strand, phase, start, end) with\ncoordinates\
      \ of coding exons (needed for --output-phylo)."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --model-info
    description: "Output the organisms included in a specific model. Included\nmodels\
      \ are: 21mosquitoes, 58mammals, 7yeast, 29mammals,\n53birds, 49birds, 100vertebrates,\
      \ 23flies, 12flies, 26worms,\n20flies.\n"
    args: !SimpleFlagArg
      name: STRING
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1mPhyloCSF++ v1.0.0 (build date: 2021-03-11, git commit: f5ab2559)\n\
    \n\e[0mComputes PhyloCSF scores and confidence scores for whole alignments in\
    \ FASTA or \nMAF files. Output is written to bed file(s). Optionally the ancestral\
    \ sequence \ncomposition score can be computed as well. Only one forward frame\
    \ is computed, \ni.e., for other frames reverse the alignments and/or remove the\
    \ first one or two \nbases.\n\nUsage: phylocsf++ score-msa [OPTIONS] <model> <alignments>...\n\
    \nArguments:\n\n  <model>                Path to parameter files, or one of the\
    \ following predefined\n                         models: 21mosquitoes, 58mammals,\
    \ 7yeast, 29mammals, 53birds,\n                         49birds, 100vertebrates,\
    \ 23flies, 12flies, 26worms, 20flies.\n\n  <alignments>           One or more\
    \ files containing multiple sequence alignments.\n                         Formats:\
    \ MAF and multi FASTA. Multiple MSAs can be stored in\n                      \
    \   a single file separated by empty lines.\n\nOptions:\n\n  --strategy STRING\
    \      PhyloCSF scoring algorithm: MLE, FIXED or OMEGA. Default:\n           \
    \              MLE\n  --comp-phylo BOOL      Compute the PhyloCSF score for each\
    \ alignment. Default: 1\n  --comp-anc BOOL        Compute the ancestral sequence\
    \ composition score (only in\n                         MLE and FIXED mode). Default:\
    \ 0\n  --threads INT          Parallelize scoring of multiple MSAs in a file.\
    \ Default: 2\n  --output STRING        Path where tracks in wig format will be\
    \ written. If it does\n                         not exist, it will be created.\
    \ Default: output files are\n                         stored next to the input\
    \ files.\n  --mapping STRING       If the MSAs don't use common species names\
    \ (like Human,\n                         Chimp, etc.) you can pass a two-column\
    \ tsv file with a name\n                         mapping.\n  --species STRING\
    \       Comma separated list of species to reduce <model> to a\n             \
    \            subset of species to improve running time, e.g.,\n              \
    \           \"Human,Chimp,Seaturtle\"\n  --genome-length INT    Total genome length\
    \ (needed for --output-phylo).\n  --coding-exons STRING  BED-like file (chrom\
    \ name, strand, phase, start, end) with\n                         coordinates\
    \ of coding exons (needed for --output-phylo).\n\nHelp options:\n\n  --model-info\
    \ STRING    Output the organisms included in a specific model. Included\n    \
    \                     models are: 21mosquitoes, 58mammals, 7yeast, 29mammals,\n\
    \                         53birds, 49birds, 100vertebrates, 23flies, 12flies,\
    \ 26worms,\n                         20flies.\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/phylocsfpp:1.0.0_f5ab2559--hdd86bf5_0
- !Command
  command:
  - phylocsf++
  - build-tracks
  positional:
  - !Positional
    optional: false
    position: 0
    name: phylocsf
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --output-phylo
    description: "Compute all 6 smoothened PhyloCSF tracks. Requires coding\nexon\
      \ coordinates and genome length. Default: 0"
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --output-raw-phylo
    description: 'Compute all 6 unsmoothened PhyloCSF tracks. Default: 1'
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --power-threshold
    description: "Minimum confidence score to output PhyloCSF score.\nDefault: 0.1"
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --genome-length
    description: Total genome length (needed for --output-phylo).
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --coding-exons
    description: "BED-like file (chrom name, strand, phase, start, end) with\ncoordinates\
      \ of coding exons (needed for --output-phylo)."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: "Parallelize scoring of multiple MSAs in a file using\nmultiple threads.\
      \ Default: 2"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --output
    description: "Directory where tracks in wig format will be written to.\nIf it\
      \ does not exist, it will be created. Default: output\nfiles are stored next\
      \ to the input files."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --mapping
    description: "If the MSAs don't use common species names (like Human,\nChimp,\
      \ etc.) you can pass a two-column tsv file with a\nname mapping."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --species
    description: "Comma separated list of species to reduce <model> to a\nsubset of\
      \ species to improve running time, e.g.,\n\"Human,Chimp,Seaturtle\""
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --model-info
    description: "Output the organisms included in a specific model.\nIncluded models\
      \ are: 21mosquitoes, 58mammals, 7yeast,\n29mammals, 53birds, 49birds, 100vertebrates,\
      \ 23flies,\n12flies, 26worms, 20flies.\n"
    args: !SimpleFlagArg
      name: STRING
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1mPhyloCSF++ v1.0.0 (build date: 2021-03-11, git commit: f5ab2559)\n\
    \n\e[0mComputes PhyloCSF tracks for each codon and all 6 frames from alignment\
    \ files in MAF \nformat as well as the power track containing the branch length\
    \ scores (confidence of \nthe PhyloCSF scores). Optionally the PhyloCSF scores\
    \ can be smoothened and posterior \nprobabilities can be computed. Outputs wig\
    \ files.\n\nUsage: phylocsf++ build-tracks [OPTIONS] <model> <alignments>...\n\
    \nArguments:\n\n  <model>                  Path to parameter files, or one of\
    \ the following\n                           predefined models: 21mosquitoes, 58mammals,\
    \ 7yeast,\n                           29mammals, 53birds, 49birds, 100vertebrates,\
    \ 23flies,\n                           12flies, 26worms, 20flies.\n\n  <alignments>\
    \             One or more files containing multiple sequence alignments.\n   \
    \                        Formats: MAF and multi FASTA. Multiple MSAs can be stored\n\
    \                           in a single file separated by empty lines.\n\nOptions:\n\
    \n  --output-phylo BOOL      Compute all 6 smoothened PhyloCSF tracks. Requires\
    \ coding\n                           exon coordinates and genome length. Default:\
    \ 0\n  --output-raw-phylo BOOL  Compute all 6 unsmoothened PhyloCSF tracks. Default:\
    \ 1\n  --power-threshold FLOAT  Minimum confidence score to output PhyloCSF score.\n\
    \                           Default: 0.1\n  --genome-length INT      Total genome\
    \ length (needed for --output-phylo).\n  --coding-exons STRING    BED-like file\
    \ (chrom name, strand, phase, start, end) with\n                           coordinates\
    \ of coding exons (needed for --output-phylo).\n  --threads INT            Parallelize\
    \ scoring of multiple MSAs in a file using\n                           multiple\
    \ threads. Default: 2\n  --output STRING          Directory where tracks in wig\
    \ format will be written to.\n                           If it does not exist,\
    \ it will be created. Default: output\n                           files are stored\
    \ next to the input files.\n  --mapping STRING         If the MSAs don't use common\
    \ species names (like Human,\n                           Chimp, etc.) you can\
    \ pass a two-column tsv file with a\n                           name mapping.\n\
    \  --species STRING         Comma separated list of species to reduce <model>\
    \ to a\n                           subset of species to improve running time,\
    \ e.g.,\n                           \"Human,Chimp,Seaturtle\"\n\nHelp options:\n\
    \n  --model-info STRING      Output the organisms included in a specific model.\n\
    \                           Included models are: 21mosquitoes, 58mammals, 7yeast,\n\
    \                           29mammals, 53birds, 49birds, 100vertebrates, 23flies,\n\
    \                           12flies, 26worms, 20flies.\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/phylocsfpp:1.0.0_f5ab2559--hdd86bf5_0
- !Command
  command:
  - phylocsf++
  - annotate-with-tracks
  positional:
  - !Positional
    optional: false
    position: 0
    name: phylocsf
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --output
    description: "Path where output GFF/GTF will be written to. If it does not\nexist,\
      \ it will be created. Default: output files are stored next\nto the input files.\n"
    args: !SimpleFlagArg
      name: STRING
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1mPhyloCSF++ v1.0.0 (build date: 2021-03-11, git commit: f5ab2559)\n\
    \n\e[0mComputes PhyloCSF scores for CDS features in GFF/GTF files and outputs\
    \ them in \nthe same format. Requires PhyloCSF tracks in BigWig (*.bw) format.\n\
    \nUsage: phylocsf++ annotate-with-tracks [OPTIONS] <tracks> <gff-files>...\n\n\
    Arguments:\n\n  <tracks>         Path to the bigWig file PhyloCSF+1.bw (expects\
    \ the other 5 frames\n                   to be in the same directory, optionally\
    \ the power track).\n\n  <gff-files>      One or more GFF/GTF files with coding\
    \ exons to be scored.\n\nOptions:\n\n  --output STRING  Path where output GFF/GTF\
    \ will be written to. If it does not\n                   exist, it will be created.\
    \ Default: output files are stored next\n                   to the input files.\n\
    \n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/phylocsfpp:1.0.0_f5ab2559--hdd86bf5_0
- !Command
  command:
  - phylocsf++
  - annotate-with-mmseqs
  positional:
  - !Positional
    optional: false
    position: 0
    name: phylocsf
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: 'Parallelize scoring of multiple MSAs in a file. Default: 2'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --output
    description: "Path where output GFF/GTF will be written to. If it does not\nexist,\
      \ it will be created. Default: output files are stored\nnext to the input files."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --strategy
    description: "PhyloCSF scoring algorithm: MLE, FIXED, OMEGA or FIXED_MEAN.\nDefault:\
      \ MLE"
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --mmseqs-bin
    description: 'Path to MMseqs2 binary. Default: mmseqs'
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --genome-length
    description: Total genome length (needed for --strategy FIXED_MEAN).
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --coding-exons
    description: "BED-like file (chrom name, strand, phase, start, end) with\ncoordinates\
      \ of coding exons (needed for --strategy\nFIXED_MEAN)."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --mapping
    description: "If the MSAs don't use common species names (like Human,\nChimp,\
      \ etc.) you can pass a two-column tsv file with a name\nmapping."
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - --model-info
    description: "Output the organisms included in a specific model. Included\nmodels\
      \ are: 21mosquitoes, 58mammals, 7yeast, 29mammals,\n53birds, 49birds, 100vertebrates,\
      \ 23flies, 12flies, 26worms,\n20flies.\n"
    args: !SimpleFlagArg
      name: STRING
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\e[1mPhyloCSF++ v1.0.0 (build date: 2021-03-11, git commit: f5ab2559)\n\
    \n\e[0mComputes PhyloCSF scores for CDS features in GFF/GTF files and outputs\
    \ them in \nthe same format. Requires MMseqs2 to be installed and a set of reference\
    \ genomes \nto compute multiple sequence alignments from scratch.\nTo get an average\
    \ score over all codons of posterior probabilities (similar to \nannotate-with-tracks),\
    \ use --strategy FIXED_MEAN.\n\nUsage: phylocsf++ annotate-with-mmseqs [OPTIONS]\
    \ <genome-file> <model> <gff-files>...\n\nArguments:\n\n  <genome-file>      \
    \    Two-column tsv file with species name and path to its\n                 \
    \        genomic fasta file. First line has to be the reference\n            \
    \             genome of the GFF file.\n\n  <model>                Path to parameter\
    \ files, or one of the following predefined\n                         models:\
    \ 21mosquitoes, 58mammals, 7yeast, 29mammals, 53birds,\n                     \
    \    49birds, 100vertebrates, 23flies, 12flies, 26worms, 20flies.\n\n  <gff-files>\
    \            One or more GFF/GTF files with coding exons to be scored.\n\nOptions:\n\
    \n  --threads INT          Parallelize scoring of multiple MSAs in a file. Default:\
    \ 2\n  --output STRING        Path where output GFF/GTF will be written to. If\
    \ it does not\n                         exist, it will be created. Default: output\
    \ files are stored\n                         next to the input files.\n  --strategy\
    \ STRING      PhyloCSF scoring algorithm: MLE, FIXED, OMEGA or FIXED_MEAN.\n \
    \                        Default: MLE\n  --mmseqs-bin STRING    Path to MMseqs2\
    \ binary. Default: mmseqs\n  --genome-length INT    Total genome length (needed\
    \ for --strategy FIXED_MEAN).\n  --coding-exons STRING  BED-like file (chrom name,\
    \ strand, phase, start, end) with\n                         coordinates of coding\
    \ exons (needed for --strategy\n                         FIXED_MEAN).\n  --mapping\
    \ STRING       If the MSAs don't use common species names (like Human,\n     \
    \                    Chimp, etc.) you can pass a two-column tsv file with a name\n\
    \                         mapping.\n\nHelp options:\n\n  --model-info STRING \
    \   Output the organisms included in a specific model. Included\n            \
    \             models are: 21mosquitoes, 58mammals, 7yeast, 29mammals,\n      \
    \                   53birds, 49birds, 100vertebrates, 23flies, 12flies, 26worms,\n\
    \                         20flies.\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/phylocsfpp:1.0.0_f5ab2559--hdd86bf5_0
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mPhyloCSF++ v1.0.0 (build date: 2021-03-11, git commit: f5ab2559)\n\
  \n\e[0mA fast and easy-to-use tool to compute PhyloCSF scores and tracks and annotate\
  \ GFF/GTF.\nFor documentation and help, check out https://github.com/cpockrandt/PhyloCSFpp\n\
  \nPlease consider citing:\n  Pockrandt et al., PhyloCSF++: A fast and user-friendly\
  \ implementation of PhyloCSF\n  with annotation tools, https://doi.org/10.1101/2021.03.10.434297,\
  \ bioRxiv 2021\n\nUsage: phylocsf++ [OPTIONS] <tool>\n\nTools:\n\n  build-tracks\
  \            Computes PhyloCSF and Power tracks for each codon and all 6\n     \
  \                     frames from alignments from MAF files. Outputs them in wig\n\
  \                          files.\n\n  score-msa               Computes PhyloCSF\
  \ scores, ancestral sequence composition\n                          sores and branch\
  \ length scores for entire alignments from\n                          MAF files.\
  \ Outputs them in a BED-like format.\n\n  annotate-with-tracks    Scores the CDS\
  \ features in GFF/GTF files using precomputed\n                          tracks\
  \ (bw files) and outputs annotated GFF/GTF files.\n\n  annotate-with-mmseqs    Scores\
  \ the CDS features in GFF/GTF files by computing\n                          multiple\
  \ sequence alignments from scratch (requires\n                          MMseqs2)\
  \ and outputs annotated GFF/GTF files.\n\nHelp options:\n\n  --help            \
  \      Prints this help message. Run `phylocsf++ build-tracks\n                \
  \          --help` for help messages on the tools\n"
generated_using: *id002
docker_image: quay.io/biocontainers/phylocsfpp:1.0.0_f5ab2559--hdd86bf5_0
