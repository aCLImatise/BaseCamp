&id001 !Command
command:
- fastafunk
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - fastafunk
  - remove
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: "A FASTA file (else writes to stdout)\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk remove [-h] [-v] [--log-file <filename>] --in-fasta\n\
    \                        <filename> [<filename> ...] --in-metadata <filename>\n\
    \                        [<filename> ...] [--out-fasta <filename>]\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose\
    \         Run with high verbosity (debug level logging)\n  --log-file <filename>\n\
    \                        Log file to use (otherwise uses stdout, or stderr if\n\
    \                        out-fasta to stdout)\n  --in-fasta <filename> [<filename>\
    \ ...]\n                        One or more FASTA files of sequences (else reads\
    \ from\n                        stdin)\n  --in-metadata <filename> [<filename>\
    \ ...]\n                        One or more CSV or TSV tables of metadata\n  --out-fasta\
    \ <filename>\n                        A FASTA file (else writes to stdout)\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - unwrap
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: "A FASTA file (else writes to stdout)\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk unwrap [-h] [-v] [--log-file <filename>] --in-fasta\n\
    \                        <filename> [<filename> ...] [--out-fasta <filename>]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -v, --verbose         Run with high verbosity (debug level logging)\n  --log-file\
    \ <filename>\n                        Log file to use (otherwise uses stdout,\
    \ or stderr if\n                        out-fasta to stdout)\n  --in-fasta <filename>\
    \ [<filename> ...]\n                        One or more FASTA files of sequences\
    \ (else reads from\n                        stdin)\n  --out-fasta <filename>\n\
    \                        A FASTA file (else writes to stdout)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - fetch
  positional:
  - !Positional
    optional: false
    position: 0
    name: entry
    description: --low-memory          Assumes no duplicate sequences within a FASTA
      so can
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "CSV or TSV of metadata with same naming convention as\nfasta file"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --filter-column
    description: "[<column> ...]\nMetadata column name(s) to keep"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --where-column
    description: "=<regex> [<column>=<regex> ...]\nAdditional matches to columns e.g.\
      \ if want to rename"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --restrict
    description: Only outputs metadata rows with a corresponding fasta
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: A FASTA file (else writes to stdout)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-metadata
    description: "A metadata file\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk fetch [-h] [-v] [--log-file <filename>]\n         \
    \              [--in-fasta <filename> [<filename> ...]] --in-metadata\n      \
    \                 <filename> --index-column <column>\n                       [--filter-column\
    \ <column> [<column> ...]]\n                       [--where-column <column>=<regex>\
    \ [<column>=<regex> ...]]\n                       [--restrict] [--low-memory]\
    \ [--out-fasta <filename>]\n                       [--out-metadata <filename>]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -v, --verbose         Run with high verbosity (debug level logging)\n  --log-file\
    \ <filename>\n                        Log file to use (otherwise uses stdout,\
    \ or stderr if\n                        out-fasta to stdout)\n  --in-fasta <filename>\
    \ [<filename> ...]\n                        One or more FASTA files of sequences\
    \ (else reads from\n                        stdin)\n  --in-metadata <filename>\n\
    \                        CSV or TSV of metadata with same naming convention as\n\
    \                        fasta file\n  --index-column <column>\n             \
    \           Column in the metadata file to use to match to the\n             \
    \           sequence\n  --filter-column <column> [<column> ...]\n            \
    \            Metadata column name(s) to keep\n  --where-column <column>=<regex>\
    \ [<column>=<regex> ...]\n                        Additional matches to columns\
    \ e.g. if want to rename\n  --restrict            Only outputs metadata rows with\
    \ a corresponding fasta\n                        entry\n  --low-memory       \
    \   Assumes no duplicate sequences within a FASTA so can\n                   \
    \     use SeqIO index\n  --out-fasta <filename>\n                        A FASTA\
    \ file (else writes to stdout)\n  --out-metadata <filename>\n                \
    \        A metadata file\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - count
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --group-column
    description: "[<column> ...]\nColumn(s) in the metadata file to define groupings\n"
    args: !SimpleFlagArg
      name: column
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk count [-h] [-v] [--log-file <filename>] --in-metadata\n\
    \                       <filename> [<filename> ...] --group-column <column>\n\
    \                       [<column> ...]\n\noptional arguments:\n  -h, --help  \
    \          show this help message and exit\n  -v, --verbose         Run with high\
    \ verbosity (debug level logging)\n  --log-file <filename>\n                 \
    \       Log file to use (otherwise uses stdout, or stderr if\n               \
    \         out-fasta to stdout)\n  --in-metadata <filename> [<filename> ...]\n\
    \                        One or more CSV or TSV tables of metadata\n  --group-column\
    \ <column> [<column> ...]\n                        Column(s) in the metadata file\
    \ to define groupings\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - strip
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --gap
    description: Remove gaps from sequences (Default:False)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --ambiguity
    description: "Remove ambiguous sites from sequences (\"N\")\n(Default:False)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --missing
    description: "Remove missing sites from sequences (\"?\")\n(Default:False)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --keep-alignment
    description: "Remove gaps shared by all sequences at the same site\n(Default:False)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --front
    description: "Remove only from the front of the sequence\n(Default:False)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --back
    description: "Remove only from the back of the sequence\n(Default:False)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: "A FASTA file (else writes to stdout)\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk strip [-h] [-v] [--log-file <filename>] --in-fasta\
    \ <filename>\n                       [<filename> ...] [--gap] [--ambiguity] [--missing]\n\
    \                       [--keep-alignment] [--front] [--back]\n              \
    \         [--out-fasta <filename>]\n\noptional arguments:\n  -h, --help      \
    \      show this help message and exit\n  -v, --verbose         Run with high\
    \ verbosity (debug level logging)\n  --log-file <filename>\n                 \
    \       Log file to use (otherwise uses stdout, or stderr if\n               \
    \         out-fasta to stdout)\n  --in-fasta <filename> [<filename> ...]\n   \
    \                     One or more FASTA files of sequences (else reads from\n\
    \                        stdin)\n  --gap                 Remove gaps from sequences\
    \ (Default:False)\n  --ambiguity           Remove ambiguous sites from sequences\
    \ (\"N\")\n                        (Default:False)\n  --missing             Remove\
    \ missing sites from sequences (\"?\")\n                        (Default:False)\n\
    \  --keep-alignment      Remove gaps shared by all sequences at the same site\n\
    \                        (Default:False)\n  --front               Remove only\
    \ from the front of the sequence\n                        (Default:False)\n  --back\
    \                Remove only from the back of the sequence\n                 \
    \       (Default:False)\n  --out-fasta <filename>\n                        A FASTA\
    \ file (else writes to stdout)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - split
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: '[--index-column <column>]'
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-field
    description: '[--lineage LINEAGE [LINEAGE ...]]'
    args: !SimpleFlagArg
      name: field
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: One FASTA files of sequences (else reads from stdin)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column(s) in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --lineage
    description: "Specific list of lineages to split by with others\ncollpasing to\
      \ nearest lineage."
    args: !RepeatFlagArg
      name: LINEAGE
  - !Flag
    optional: true
    synonyms:
    - --lineage-csv
    description: "CSV with lineage and outgroup columns defining the\nlineages to\
      \ split by."
    args: !SimpleFlagArg
      name: LINEAGE_CSV
  - !Flag
    optional: true
    synonyms:
    - --aliases
    description: JSON with aliases for lettered lineages.
    args: !SimpleFlagArg
      name: ALIASES
  - !Flag
    optional: true
    synonyms:
    - --out-folder
    description: "A directory for output FASTA files\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk split [-h] [-v] [--log-file <filename>] --in-fasta\
    \ <filename>\n                       --in-metadata <filename> [--index-column\
    \ <column>]\n                       --index-field <field> [--lineage LINEAGE [LINEAGE\
    \ ...]]\n                       [--lineage-csv LINEAGE_CSV] [--aliases ALIASES]\n\
    \                       [--out-folder <filename>]\n\noptional arguments:\n  -h,\
    \ --help            show this help message and exit\n  -v, --verbose         Run\
    \ with high verbosity (debug level logging)\n  --log-file <filename>\n       \
    \                 Log file to use (otherwise uses stdout, or stderr if\n     \
    \                   out-fasta to stdout)\n  --in-fasta <filename>\n          \
    \              One FASTA files of sequences (else reads from stdin)\n  --in-metadata\
    \ <filename>\n                        One CSV of metadata\n  --index-column <column>\n\
    \                        Column(s) in the metadata file to use to match to the\n\
    \                        sequence\n  --index-field <field>\n                 \
    \       Field(s) in the fasta header to match the metadata\n                 \
    \       (else matches column names)\n  --lineage LINEAGE [LINEAGE ...]\n     \
    \                   Specific list of lineages to split by with others\n      \
    \                  collpasing to nearest lineage.\n  --lineage-csv LINEAGE_CSV\n\
    \                        CSV with lineage and outgroup columns defining the\n\
    \                        lineages to split by.\n  --aliases ALIASES     JSON with\
    \ aliases for lettered lineages.\n  --out-folder <filename>\n                \
    \        A directory for output FASTA files\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - new
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --date-column
    description: '[--out-fasta <filename>]'
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: A FASTA file (else writes to stdout)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-metadata
    description: "A metadata file\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk new [-h] [-v] [--log-file <filename>]\n           \
    \          [--in-fasta <filename> [<filename> ...]] --in-metadata\n          \
    \           <filename> [<filename> ...] --index-column <column>\n            \
    \         --date-column <column> [--out-fasta <filename>]\n                  \
    \   [--out-metadata <filename>]\n\noptional arguments:\n  -h, --help         \
    \   show this help message and exit\n  -v, --verbose         Run with high verbosity\
    \ (debug level logging)\n  --log-file <filename>\n                        Log\
    \ file to use (otherwise uses stdout, or stderr if\n                        out-fasta\
    \ to stdout)\n  --in-fasta <filename> [<filename> ...]\n                     \
    \   One or more FASTA files of sequences (else reads from\n                  \
    \      stdin)\n  --in-metadata <filename> [<filename> ...]\n                 \
    \       One or more CSV or TSV tables of metadata\n  --index-column <column>\n\
    \                        Column in the metadata file to use to match to the\n\
    \                        sequence\n  --date-column <column>\n                \
    \        Column in the metadata file containing date values to\n             \
    \           use for filtering\n  --out-fasta <filename>\n                    \
    \    A FASTA file (else writes to stdout)\n  --out-metadata <filename>\n     \
    \                   A metadata file\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - add_columns
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: ONE CSV table of metadata
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-data
    description: "One CSV table of additional data. Must have --index-\ncolumn in\
      \ common with metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: Column in the metadata files used to match rows
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --join-on
    description: Column in the data file used to match rows
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --new-columns
    description: "[<column> ...]\nColumn(s) in the in_data file to add to the metadata,\n\
      if not provided, all columns added"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --out-metadata
    description: A metadata file to write
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --where-column
    description: "=<regex> [<column>=<regex> ...]\nAdditional matches to columns e.g.\
      \ if want to rename\n"
    args: !SimpleFlagArg
      name: column
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk add_columns [-h] [-v] [--log-file <filename>] --in-metadata\n\
    \                             <filename> --in-data <filename> --index-column\n\
    \                             <column> --join-on <column>\n                  \
    \           [--new-columns <column> [<column> ...]]\n                        \
    \     --out-metadata <filename>\n                             [--where-column\
    \ <column>=<regex> [<column>=<regex> ...]]\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  -v, --verbose         Run with\
    \ high verbosity (debug level logging)\n  --log-file <filename>\n            \
    \            Log file to use (otherwise uses stdout, or stderr if\n          \
    \              out-fasta to stdout)\n  --in-metadata <filename>\n            \
    \            ONE CSV table of metadata\n  --in-data <filename>  One CSV table\
    \ of additional data. Must have --index-\n                        column in common\
    \ with metadata\n  --index-column <column>\n                        Column in\
    \ the metadata files used to match rows\n  --join-on <column>    Column in the\
    \ data file used to match rows\n  --new-columns <column> [<column> ...]\n    \
    \                    Column(s) in the in_data file to add to the metadata,\n \
    \                       if not provided, all columns added\n  --out-metadata <filename>\n\
    \                        A metadata file to write\n  --where-column <column>=<regex>\
    \ [<column>=<regex> ...]\n                        Additional matches to columns\
    \ e.g. if want to rename\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - consensus
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --index-field
    description: '[--index-column <column>]'
    args: !SimpleFlagArg
      name: field
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: One FASTA files of sequences (else reads from stdin)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "CSV of metadata with same naming convention as fasta\nfile"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column(s) in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --lineage
    description: "Specific list of lineages to split by with others\ncollpasing to\
      \ nearest lineage."
    args: !RepeatFlagArg
      name: LINEAGE
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: "A FASTA file (else writes to stdout)\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk consensus [-h] [-v] [--log-file <filename>]\n     \
    \                      [--in-fasta <filename>] --in-metadata <filename>\n    \
    \                       --index-field <field> [--index-column <column>]\n    \
    \                       [--lineage LINEAGE [LINEAGE ...]]\n                  \
    \         [--out-fasta <filename>]\n\noptional arguments:\n  -h, --help      \
    \      show this help message and exit\n  -v, --verbose         Run with high\
    \ verbosity (debug level logging)\n  --log-file <filename>\n                 \
    \       Log file to use (otherwise uses stdout, or stderr if\n               \
    \         out-fasta to stdout)\n  --in-fasta <filename>\n                    \
    \    One FASTA files of sequences (else reads from stdin)\n  --in-metadata <filename>\n\
    \                        CSV of metadata with same naming convention as fasta\n\
    \                        file\n  --index-field <field>\n                     \
    \   Field(s) in the fasta header to match the metadata\n                     \
    \   (else matches column names)\n  --index-column <column>\n                 \
    \       Column(s) in the metadata file to use to match to the\n              \
    \          sequence\n  --lineage LINEAGE [LINEAGE ...]\n                     \
    \   Specific list of lineages to split by with others\n                      \
    \  collpasing to nearest lineage.\n  --out-fasta <filename>\n                \
    \        A FASTA file (else writes to stdout)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - extract
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-tree
    description: "[<filename> ...]\nOne or more tree files in either nexus or newick\n\
      format"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: "A FASTA file (else writes to stdout)\n"
    args: !SimpleFlagArg
      name: filename
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk extract [-h] [-v] [--log-file <filename>] --in-fasta\n\
    \                         <filename> [<filename> ...]\n                      \
    \   [--in-metadata <filename> [<filename> ...]]\n                         [--in-tree\
    \ <filename> [<filename> ...]]\n                         [--out-fasta <filename>]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -v, --verbose         Run with high verbosity (debug level logging)\n  --log-file\
    \ <filename>\n                        Log file to use (otherwise uses stdout,\
    \ or stderr if\n                        out-fasta to stdout)\n  --in-fasta <filename>\
    \ [<filename> ...]\n                        One or more FASTA files of sequences\
    \ (else reads from\n                        stdin)\n  --in-metadata <filename>\
    \ [<filename> ...]\n                        One or more CSV or TSV tables of metadata\n\
    \  --in-tree <filename> [<filename> ...]\n                        One or more\
    \ tree files in either nexus or newick\n                        format\n  --out-fasta\
    \ <filename>\n                        A FASTA file (else writes to stdout)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - annotate
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-field
    description: "[<field> ...]\nField(s) in the fasta header to match the metadata\n\
      (else matches column names)"
    args: !SimpleFlagArg
      name: field
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: A FASTA file (else writes to stdout)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-metadata
    description: A metadata file
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --header-delimiter
    description: Header delimiter
    args: !SimpleFlagArg
      name: symbol
  - !Flag
    optional: true
    synonyms:
    - --add-cov-id
    description: Parses header for COG or GISAID unique id and stores
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --low-memory
    description: "Assumes no duplicate sequences within a FASTA so can\nuse SeqIO\
      \ index\n"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk annotate [-h] [-v] [--log-file <filename>]\n      \
    \                    [--in-fasta <filename> [<filename> ...]]\n              \
    \            [--in-metadata <filename> [<filename> ...]]\n                   \
    \       [--index-field <field> [<field> ...]] --index-column\n               \
    \           <column> [--out-fasta <filename>]\n                          [--out-metadata\
    \ <filename>]\n                          [--header-delimiter <symbol>] [--add-cov-id]\n\
    \                          [--low-memory]\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  -v, --verbose         Run with\
    \ high verbosity (debug level logging)\n  --log-file <filename>\n            \
    \            Log file to use (otherwise uses stdout, or stderr if\n          \
    \              out-fasta to stdout)\n  --in-fasta <filename> [<filename> ...]\n\
    \                        One or more FASTA files of sequences (else reads from\n\
    \                        stdin)\n  --in-metadata <filename> [<filename> ...]\n\
    \                        One or more CSV or TSV tables of metadata\n  --index-field\
    \ <field> [<field> ...]\n                        Field(s) in the fasta header\
    \ to match the metadata\n                        (else matches column names)\n\
    \  --index-column <column>\n                        Column in the metadata file\
    \ to use to match to the\n                        sequence\n  --out-fasta <filename>\n\
    \                        A FASTA file (else writes to stdout)\n  --out-metadata\
    \ <filename>\n                        A metadata file\n  --header-delimiter <symbol>\n\
    \                        Header delimiter\n  --add-cov-id          Parses header\
    \ for COG or GISAID unique id and stores\n  --low-memory          Assumes no duplicate\
    \ sequences within a FASTA so can\n                        use SeqIO index\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - merge
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --out-metadata
    description: '[--out-fasta <filename>]'
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: A FASTA file (else writes to stdout)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --low-memory
    description: "Assumes no duplicate sequences within a FASTA so can\nuse SeqIO\
      \ index\n"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk merge [-h] [-v] [--log-file <filename>]\n         \
    \              [--in-fasta <filename> [<filename> ...]] --in-metadata\n      \
    \                 <filename> [<filename> ...] --index-column <column>\n      \
    \                 --out-metadata <filename> [--out-fasta <filename>]\n       \
    \                [--low-memory]\n\noptional arguments:\n  -h, --help         \
    \   show this help message and exit\n  -v, --verbose         Run with high verbosity\
    \ (debug level logging)\n  --log-file <filename>\n                        Log\
    \ file to use (otherwise uses stdout, or stderr if\n                        out-fasta\
    \ to stdout)\n  --in-fasta <filename> [<filename> ...]\n                     \
    \   One or more FASTA files of sequences (else reads from\n                  \
    \      stdin)\n  --in-metadata <filename> [<filename> ...]\n                 \
    \       One or more CSV or TSV tables of metadata\n  --index-column <column>\n\
    \                        Column in the metadata file to use to match to the\n\
    \                        sequence\n  --out-metadata <filename>\n             \
    \           A CSV file (else writes to stdout)\n  --out-fasta <filename>\n   \
    \                     A FASTA file (else writes to stdout)\n  --low-memory   \
    \       Assumes no duplicate sequences within a FASTA so can\n               \
    \         use SeqIO index\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
- !Command
  command:
  - fastafunk
  - subsample
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    - --verbose
    description: Run with high verbosity (debug level logging)
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log-file
    description: "Log file to use (otherwise uses stdout, or stderr if\nout-fasta\
      \ to stdout)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-fasta
    description: "[<filename> ...]\nOne or more FASTA files of sequences (else reads\
      \ from\nstdin)"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --in-metadata
    description: "[<filename> ...]\nOne or more CSV or TSV tables of metadata"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --index-field
    description: "[<field> ...]\nField(s) in the fasta header to match the metadata\n\
      (else matches column names)"
    args: !SimpleFlagArg
      name: field
  - !Flag
    optional: true
    synonyms:
    - --index-column
    description: "Column in the metadata file to use to match to the\nsequence"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --group-column
    description: "[<column> ...]\nColumn(s) in the metadata file to define groupings"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --where-field
    description: "=<regex>\nAdditional matches to header fields"
    args: !SimpleFlagArg
      name: field
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: A FASTA file (else writes to stdout)
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --out-metadata
    description: A metadata file
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --target-file
    description: "CSV file of target numbers per group e.g. an edited\nversion of\
      \ the count output"
    args: !SimpleFlagArg
      name: filename
  - !Flag
    optional: true
    synonyms:
    - --select-by-max-column
    description: "Column in the metadata file maximize over when\nsubsetting"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --select-by-min-column
    description: "Column in the metadata file minimize over when\nsubsetting"
    args: !SimpleFlagArg
      name: column
  - !Flag
    optional: true
    synonyms:
    - --sample-size
    description: "The number of samples per group to select if not\nspecified by target\
      \ file"
    args: !SimpleFlagArg
      name: int
  - !Flag
    optional: true
    synonyms:
    - --exclude-uk
    description: "Includes all UK samples in subsample, and additionally\nkeeps the\
      \ target number of non-UK samples per group\n"
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: fastafunk subsample [-h] [-v] [--log-file <filename>]\n     \
    \                      [--in-fasta <filename> [<filename> ...]]\n            \
    \               --in-metadata <filename> [<filename> ...]\n                  \
    \         [--index-field <field> [<field> ...]]\n                           --index-column\
    \ <column> --group-column <column>\n                           [<column> ...]\
    \ [--where-field <field>=<regex>]\n                           [--out-fasta <filename>]\n\
    \                           [--out-metadata <filename>]\n                    \
    \       [--target-file <filename>]\n                           [--select-by-max-column\
    \ <column>]\n                           [--select-by-min-column <column>]\n  \
    \                         [--sample-size <int>] [--exclude-uk]\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  -v, --verbose    \
    \     Run with high verbosity (debug level logging)\n  --log-file <filename>\n\
    \                        Log file to use (otherwise uses stdout, or stderr if\n\
    \                        out-fasta to stdout)\n  --in-fasta <filename> [<filename>\
    \ ...]\n                        One or more FASTA files of sequences (else reads\
    \ from\n                        stdin)\n  --in-metadata <filename> [<filename>\
    \ ...]\n                        One or more CSV or TSV tables of metadata\n  --index-field\
    \ <field> [<field> ...]\n                        Field(s) in the fasta header\
    \ to match the metadata\n                        (else matches column names)\n\
    \  --index-column <column>\n                        Column in the metadata file\
    \ to use to match to the\n                        sequence\n  --group-column <column>\
    \ [<column> ...]\n                        Column(s) in the metadata file to define\
    \ groupings\n  --where-field <field>=<regex>\n                        Additional\
    \ matches to header fields\n  --out-fasta <filename>\n                       \
    \ A FASTA file (else writes to stdout)\n  --out-metadata <filename>\n        \
    \                A metadata file\n  --target-file <filename>\n               \
    \         CSV file of target numbers per group e.g. an edited\n              \
    \          version of the count output\n  --select-by-max-column <column>\n  \
    \                      Column in the metadata file maximize over when\n      \
    \                  subsetting\n  --select-by-min-column <column>\n           \
    \             Column in the metadata file minimize over when\n               \
    \         subsetting\n  --sample-size <int>   The number of samples per group\
    \ to select if not\n                        specified by target file\n  --exclude-uk\
    \          Includes all UK samples in subsample, and additionally\n          \
    \              keeps the target number of non-UK samples per group\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: fastafunk [-h] [--version]  ...\n\nMiscellaneous fasta manipulation\
  \ tools\n\noptional arguments:\n  -h, --help   show this help message and exit\n\
  \  --version    show program's version number and exit\n\nAvailable subcommands:\n\
  \  \n    consensus  Collapses sequences into consensus sequences based on grouping\n\
  \               by index column or index field\n    extract    Extracts sequences\
  \ based on matches to the metadata/tree\n    merge      Merges two fasta files avoiding\
  \ duplicates based on matches to\n               metadata (takes the one in the\
  \ first file)\n    remove     Removes sequences based on matches to the metadata\n\
  \    split      Splits sequences into fasta files based on index column or\n   \
  \            index field\n    count      Counts the number in each group, defined\
  \ by a number of\n               metadata columns\n    subsample  Subsamples a fasta\
  \ based on groups defined by a metadata file\n    annotate   Subsamples a fasta\
  \ based on groups defined by a metadata file\n    unwrap     Remove whitespace from\
  \ the sequences in 2 line fasta format\n    strip      Strip sites based on various\
  \ options\n    add_columns\n               Add columns to a metadata file from row\
  \ matches in another file\n    new        Identifies new or updated entries in metadata\
  \ file and\n               associated fasta entries\n    fetch      Fetches sequences\
  \ within fasta files which have a corresponding\n               metadata entry,\
  \ keeping the last where there are duplicates\n"
generated_using: *id002
docker_image: quay.io/biocontainers/fastafunk:0.0.9--pyh3252c3a_0
