!Command
command: &id001
- agg
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - agg
  - ingest2
  positional:
  - !Positional
    description: ''
    position: 0
    name: input1
    optional: false
  named:
  - !Flag
    description: agg will output output_prefix.bcf and output_prefix.dpt
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: output_prefix
    optional: true
  - !Flag
    description: number of compression threads [0]
    synonyms:
    - -@
    - --thread
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: files.txt             plain text file listing agg chunks to merge]
    synonyms:
    - -l
    - --list
    args: !EmptyFlagArg {}
    optional: true
  parent: &id009 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: ''
        position: 0
        name: input1
        optional: false
      named:
      - !Flag
        description: agg will output output_prefix.bcf and output_prefix.dpt
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: output_prefix
        optional: true
      - !Flag
        description: number of compression threads [0]
        synonyms:
        - -@
        - --thread
        args: !SimpleFlagArg
          name: INT
        optional: true
      - !Flag
        description: files.txt             plain text file listing agg chunks to merge]
        synonyms:
        - -l
        - --list
        args: !EmptyFlagArg {}
        optional: true
      parent: &id003 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            description: ''
            position: 0
            name: input1
            optional: false
          named:
          - !Flag
            description: agg will output output_prefix.bcf and output_prefix.dpt
            synonyms:
            - -o
            - --output
            args: !SimpleFlagArg
              name: output_prefix
            optional: true
          - !Flag
            description: number of compression threads [0]
            synonyms:
            - -@
            - --thread
            args: !SimpleFlagArg
              name: INT
            optional: true
          - !Flag
            description: files.txt             plain text file listing agg chunks
              to merge]
            synonyms:
            - -l
            - --list
            args: !EmptyFlagArg {}
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "\nAbout:   merges single sample agg files into an agg chunk\n\
            Usage:   agg ingest2 input1 [input2 [...]] -o output_prefix\n\nRequired\
            \ options:\n    -o, --output <output_prefix>       agg will output output_prefix.bcf\
            \ and output_prefix.dpt\nOptional options:\n    -@, --thread INT     \
            \              number of compression threads [0]\n    -l, --list   files.txt\
            \             plain text file listing agg chunks to merge]\n\n\n"
          generated_using: &id004 []
        - !Command
          command: &id005
          - agg
          - ingest1
          positional:
          - !Positional
            description: ''
            position: 0
            name: input_gvcf
            optional: false
          named:
          - !Flag
            description: agg will output output_prefix.bcf and output_prefix.tmp
            synonyms:
            - -o
            - --output
            args: !SimpleFlagArg
              name: output_prefix
            optional: true
          - !Flag
            description: reference sequence
            synonyms:
            - -f
            - --fasta-ref
            args: !SimpleFlagArg
              name: file
            optional: true
          - !Flag
            description: skip non-matching ref alleles (will warn)
            synonyms:
            - --ignore-non-matching-ref
            args: !EmptyFlagArg {}
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "\nAbout:   ingests a single sample gvcf into a variant-only\
            \ .bcf and tempory depth interval (.tmp)\nUsage:   agg ingest1 <input_gvcf>\n\
            \nRequired options:\n    -o, --output <output_prefix>      agg will output\
            \ output_prefix.bcf and output_prefix.tmp\n    -f, --fasta-ref <file>\
            \            reference sequence\n        --ignore-non-matching-ref   \
            \  skip non-matching ref alleles (will warn)\n\n\n"
          generated_using: *id004
        - !Command
          command: &id006
          - agg
          - genotype
          positional:
          - !Positional
            description: ''
            position: 0
            name: chunk1
            optional: false
          named:
          - !Flag
            description: region to genotype eg. chr1 or chr20:5000000-6000000
            synonyms:
            - -r
            - --regions
            args: !SimpleFlagArg
              name: region
            optional: true
          - !Flag
            description: ',   --output-file <file>          output file name [stdout]'
            synonyms:
            - -o
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: ',   --output-type <b|u|z|v>       b: compressed BCF, u:
              uncompressed BCF, z: compressed VCF, v: uncompressed VCF [v]'
            synonyms:
            - -O
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: number of threads [0]
            synonyms:
            - -@
            - --thread
            args: !SimpleFlagArg
              name: INT
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "agg: unrecognized option '--help'\n\nAbout:   genotypes samples\
            \ from agg chunks\nUsage:   agg genotype chunk1 [chunk2 [...]]\n\nRequired\
            \ options:\n    -r, --regions <region>              region to genotype\
            \ eg. chr1 or chr20:5000000-6000000\n\nOutput options:\n    -o,   --output-file\
            \ <file>          output file name [stdout]\n    -O,   --output-type <b|u|z|v>\
            \       b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v:\
            \ uncompressed VCF [v]\n    -@, --thread INT                    number\
            \ of threads [0]\n\n"
          generated_using: &id007
          - --help
        - !Command
          command: &id008
          - agg
          - anno
          positional:
          - !Positional
            description: ''
            position: 0
            name: input.bcf
            optional: false
          named:
          - !Flag
            description: filters to apply eg. -i 'QUAL>=10 && DP<100000 && HWE<10'
            synonyms:
            - -i
            - --include
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: a set of variants that are trusted (eg. 1000G)
            synonyms:
            - -R
            - --regions
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: output file name [stdout]
            synonyms:
            - -o
            - --output-file
            args: !SimpleFlagArg
              name: file
            optional: true
          - !Flag
            description: 'b: compressed BCF, u: uncompressed BCF, z: compressed VCF,
              v: uncompressed'
            synonyms:
            - -O
            - --output-type
            args: !SimpleFlagArg
              name: b|u|z|v
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "\nUsage:   agg anno input.bcf\n\nOptions:\n    -i, --include\
            \      filters to apply eg. -i 'QUAL>=10 && DP<100000 && HWE<10' \n  \
            \  -R, --regions      a set of variants that are trusted (eg. 1000G) \n\
            \    -o, --output-file <file>          output file name [stdout]\n   \
            \ -O, --output-type <b|u|z|v>       b: compressed BCF, u: uncompressed\
            \ BCF, z: compressed VCF, v: uncompressed\n\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "\nProgram:\tagg (aggregation tool for multiple gvcfs)\nVersion:\t\
          0.3.6\nContact:\tjoconnell@illumina.com\n\nCopyright (c) 2016, Illumina,\
          \ Inc. All rights reserved. See LICENSE for further details.\n\nUsage:\t\
          agg <command> [options]\n\nCommands:\n\tingest1\t\tconverts gvcfs to input\
          \ suitable for agg ingest2\n\tingest2\t\tuses output files from ingest1\
          \ to build an agg chunk\n\tgenotype\tgenotypes and merges agg chunks into\
          \ a multi-sample bcf/vcf\n\tanno\t\tannotates some QC metrics\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "\nAbout:   merges single sample agg files into an agg chunk\nUsage:\
        \   agg ingest2 input1 [input2 [...]] -o output_prefix\n\nRequired options:\n\
        \    -o, --output <output_prefix>       agg will output output_prefix.bcf\
        \ and output_prefix.dpt\nOptional options:\n    -@, --thread INT         \
        \          number of compression threads [0]\n    -l, --list   files.txt \
        \            plain text file listing agg chunks to merge]\n\n\n"
      generated_using: *id004
    - !Command
      command: *id005
      positional:
      - !Positional
        description: ''
        position: 0
        name: input_gvcf
        optional: false
      named:
      - !Flag
        description: agg will output output_prefix.bcf and output_prefix.tmp
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: output_prefix
        optional: true
      - !Flag
        description: reference sequence
        synonyms:
        - -f
        - --fasta-ref
        args: !SimpleFlagArg
          name: file
        optional: true
      - !Flag
        description: skip non-matching ref alleles (will warn)
        synonyms:
        - --ignore-non-matching-ref
        args: !EmptyFlagArg {}
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "\nAbout:   ingests a single sample gvcf into a variant-only .bcf\
        \ and tempory depth interval (.tmp)\nUsage:   agg ingest1 <input_gvcf>\n\n\
        Required options:\n    -o, --output <output_prefix>      agg will output output_prefix.bcf\
        \ and output_prefix.tmp\n    -f, --fasta-ref <file>            reference sequence\n\
        \        --ignore-non-matching-ref     skip non-matching ref alleles (will\
        \ warn)\n\n\n"
      generated_using: *id004
    - !Command
      command: *id006
      positional:
      - !Positional
        description: ''
        position: 0
        name: chunk1
        optional: false
      named:
      - !Flag
        description: region to genotype eg. chr1 or chr20:5000000-6000000
        synonyms:
        - -r
        - --regions
        args: !SimpleFlagArg
          name: region
        optional: true
      - !Flag
        description: ',   --output-file <file>          output file name [stdout]'
        synonyms:
        - -o
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ',   --output-type <b|u|z|v>       b: compressed BCF, u: uncompressed
          BCF, z: compressed VCF, v: uncompressed VCF [v]'
        synonyms:
        - -O
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: number of threads [0]
        synonyms:
        - -@
        - --thread
        args: !SimpleFlagArg
          name: INT
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "agg: unrecognized option '--help'\n\nAbout:   genotypes samples\
        \ from agg chunks\nUsage:   agg genotype chunk1 [chunk2 [...]]\n\nRequired\
        \ options:\n    -r, --regions <region>              region to genotype eg.\
        \ chr1 or chr20:5000000-6000000\n\nOutput options:\n    -o,   --output-file\
        \ <file>          output file name [stdout]\n    -O,   --output-type <b|u|z|v>\
        \       b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v: uncompressed\
        \ VCF [v]\n    -@, --thread INT                    number of threads [0]\n\
        \n"
      generated_using: *id007
    - !Command
      command: *id008
      positional:
      - !Positional
        description: ''
        position: 0
        name: input.bcf
        optional: false
      named:
      - !Flag
        description: filters to apply eg. -i 'QUAL>=10 && DP<100000 && HWE<10'
        synonyms:
        - -i
        - --include
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: a set of variants that are trusted (eg. 1000G)
        synonyms:
        - -R
        - --regions
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: output file name [stdout]
        synonyms:
        - -o
        - --output-file
        args: !SimpleFlagArg
          name: file
        optional: true
      - !Flag
        description: 'b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v:
          uncompressed'
        synonyms:
        - -O
        - --output-type
        args: !SimpleFlagArg
          name: b|u|z|v
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "\nUsage:   agg anno input.bcf\n\nOptions:\n    -i, --include   \
        \   filters to apply eg. -i 'QUAL>=10 && DP<100000 && HWE<10' \n    -R, --regions\
        \      a set of variants that are trusted (eg. 1000G) \n    -o, --output-file\
        \ <file>          output file name [stdout]\n    -O, --output-type <b|u|z|v>\
        \       b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v: uncompressed\n\
        \n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nProgram:\tagg (aggregation tool for multiple gvcfs)\nVersion:\t\
      0.3.6\nContact:\tjoconnell@illumina.com\n\nCopyright (c) 2016, Illumina, Inc.\
      \ All rights reserved. See LICENSE for further details.\n\nUsage:\tagg <command>\
      \ [options]\n\nCommands:\n\tingest1\t\tconverts gvcfs to input suitable for\
      \ agg ingest2\n\tingest2\t\tuses output files from ingest1 to build an agg chunk\n\
      \tgenotype\tgenotypes and merges agg chunks into a multi-sample bcf/vcf\n\t\
      anno\t\tannotates some QC metrics\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nAbout:   merges single sample agg files into an agg chunk\nUsage:\
    \   agg ingest2 input1 [input2 [...]] -o output_prefix\n\nRequired options:\n\
    \    -o, --output <output_prefix>       agg will output output_prefix.bcf and\
    \ output_prefix.dpt\nOptional options:\n    -@, --thread INT                 \
    \  number of compression threads [0]\n    -l, --list   files.txt             plain\
    \ text file listing agg chunks to merge]\n\n\n"
  generated_using: *id004
- !Command
  command: *id005
  positional:
  - !Positional
    description: ''
    position: 0
    name: input_gvcf
    optional: false
  named:
  - !Flag
    description: agg will output output_prefix.bcf and output_prefix.tmp
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: output_prefix
    optional: true
  - !Flag
    description: reference sequence
    synonyms:
    - -f
    - --fasta-ref
    args: !SimpleFlagArg
      name: file
    optional: true
  - !Flag
    description: skip non-matching ref alleles (will warn)
    synonyms:
    - --ignore-non-matching-ref
    args: !EmptyFlagArg {}
    optional: true
  parent: *id009
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nAbout:   ingests a single sample gvcf into a variant-only .bcf and\
    \ tempory depth interval (.tmp)\nUsage:   agg ingest1 <input_gvcf>\n\nRequired\
    \ options:\n    -o, --output <output_prefix>      agg will output output_prefix.bcf\
    \ and output_prefix.tmp\n    -f, --fasta-ref <file>            reference sequence\n\
    \        --ignore-non-matching-ref     skip non-matching ref alleles (will warn)\n\
    \n\n"
  generated_using: *id004
- !Command
  command: *id006
  positional:
  - !Positional
    description: ''
    position: 0
    name: chunk1
    optional: false
  named:
  - !Flag
    description: region to genotype eg. chr1 or chr20:5000000-6000000
    synonyms:
    - -r
    - --regions
    args: !SimpleFlagArg
      name: region
    optional: true
  - !Flag
    description: ',   --output-file <file>          output file name [stdout]'
    synonyms:
    - -o
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ',   --output-type <b|u|z|v>       b: compressed BCF, u: uncompressed
      BCF, z: compressed VCF, v: uncompressed VCF [v]'
    synonyms:
    - -O
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: number of threads [0]
    synonyms:
    - -@
    - --thread
    args: !SimpleFlagArg
      name: INT
    optional: true
  parent: *id009
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "agg: unrecognized option '--help'\n\nAbout:   genotypes samples from\
    \ agg chunks\nUsage:   agg genotype chunk1 [chunk2 [...]]\n\nRequired options:\n\
    \    -r, --regions <region>              region to genotype eg. chr1 or chr20:5000000-6000000\n\
    \nOutput options:\n    -o,   --output-file <file>          output file name [stdout]\n\
    \    -O,   --output-type <b|u|z|v>       b: compressed BCF, u: uncompressed BCF,\
    \ z: compressed VCF, v: uncompressed VCF [v]\n    -@, --thread INT           \
    \         number of threads [0]\n\n"
  generated_using: *id007
- !Command
  command: *id008
  positional:
  - !Positional
    description: ''
    position: 0
    name: input.bcf
    optional: false
  named:
  - !Flag
    description: filters to apply eg. -i 'QUAL>=10 && DP<100000 && HWE<10'
    synonyms:
    - -i
    - --include
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: a set of variants that are trusted (eg. 1000G)
    synonyms:
    - -R
    - --regions
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output file name [stdout]
    synonyms:
    - -o
    - --output-file
    args: !SimpleFlagArg
      name: file
    optional: true
  - !Flag
    description: 'b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v: uncompressed'
    synonyms:
    - -O
    - --output-type
    args: !SimpleFlagArg
      name: b|u|z|v
    optional: true
  parent: *id009
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nUsage:   agg anno input.bcf\n\nOptions:\n    -i, --include      filters\
    \ to apply eg. -i 'QUAL>=10 && DP<100000 && HWE<10' \n    -R, --regions      a\
    \ set of variants that are trusted (eg. 1000G) \n    -o, --output-file <file>\
    \          output file name [stdout]\n    -O, --output-type <b|u|z|v>       b:\
    \ compressed BCF, u: uncompressed BCF, z: compressed VCF, v: uncompressed\n\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nProgram:\tagg (aggregation tool for multiple gvcfs)\nVersion:\t0.3.6\n\
  Contact:\tjoconnell@illumina.com\n\nCopyright (c) 2016, Illumina, Inc. All rights\
  \ reserved. See LICENSE for further details.\n\nUsage:\tagg <command> [options]\n\
  \nCommands:\n\tingest1\t\tconverts gvcfs to input suitable for agg ingest2\n\tingest2\t\
  \tuses output files from ingest1 to build an agg chunk\n\tgenotype\tgenotypes and\
  \ merges agg chunks into a multi-sample bcf/vcf\n\tanno\t\tannotates some QC metrics\n"
generated_using: *id004
