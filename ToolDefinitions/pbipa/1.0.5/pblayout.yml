!Command
command: &id001
- pblayout
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - pblayout
  - m4-to-g
  positional:
  - !Positional
    description: STR  Input M4 or M4F. (default should be
    position: 0
    name: in.m4
    optional: false
  - !Positional
    description: 'out.g                            STR  (Output Graph: ctg_paths,
      c_path,'
    position: 1
    name: preads.m4
    optional: false
  named:
  - !Flag
    description: "use local flow constraint method rather\nthan best overlap method\
      \ to resolve\nknots in string graph"
    synonyms:
    - --lfc
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: and do not write chimer_nodes file
    synonyms:
    - --disable-chimer-bridge-removal
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: STR  Prefix for contig names.
    synonyms:
    - --ctg-prefix
    args: !EmptyFlagArg {}
    optional: true
  parent: &id013 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: STR  Input M4 or M4F. (default should be
        position: 0
        name: in.m4
        optional: false
      - !Positional
        description: 'out.g                            STR  (Output Graph: ctg_paths,
          c_path,'
        position: 1
        name: preads.m4
        optional: false
      named:
      - !Flag
        description: "use local flow constraint method rather\nthan best overlap method\
          \ to resolve\nknots in string graph"
        synonyms:
        - --lfc
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: and do not write chimer_nodes file
        synonyms:
        - --disable-chimer-bridge-removal
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: STR  Prefix for contig names.
        synonyms:
        - --ctg-prefix
        args: !EmptyFlagArg {}
        optional: true
      parent: &id012 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            description: STR  Input M4 or M4F. (default should be
            position: 0
            name: in.m4
            optional: false
          - !Positional
            description: 'out.g                            STR  (Output Graph: ctg_paths,
              c_path,'
            position: 1
            name: preads.m4
            optional: false
          named:
          - !Flag
            description: "use local flow constraint method rather\nthan best overlap\
              \ method to resolve\nknots in string graph"
            synonyms:
            - --lfc
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: and do not write chimer_nodes file
            synonyms:
            - --disable-chimer-bridge-removal
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: STR  Prefix for contig names.
            synonyms:
            - --ctg-prefix
            args: !EmptyFlagArg {}
            optional: true
          parent: &id011 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                description: STR  Input M4 or M4F. (default should be
                position: 0
                name: in.m4
                optional: false
              - !Positional
                description: 'out.g                            STR  (Output Graph:
                  ctg_paths, c_path,'
                position: 1
                name: preads.m4
                optional: false
              named:
              - !Flag
                description: "use local flow constraint method rather\nthan best overlap\
                  \ method to resolve\nknots in string graph"
                synonyms:
                - --lfc
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: and do not write chimer_nodes file
                synonyms:
                - --disable-chimer-bridge-removal
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: STR  Prefix for contig names.
                synonyms:
                - --ctg-prefix
                args: !EmptyFlagArg {}
                optional: true
              parent: &id003 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    description: STR  Input M4 or M4F. (default should be
                    position: 0
                    name: in.m4
                    optional: false
                  - !Positional
                    description: 'out.g                            STR  (Output Graph:
                      ctg_paths, c_path,'
                    position: 1
                    name: preads.m4
                    optional: false
                  named:
                  - !Flag
                    description: ),
                    synonyms:
                    - --disable-chimer-bridge-removal
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "use local flow constraint method rather\nthan best\
                      \ overlap method to resolve\nknots in string graph"
                    synonyms:
                    - --lfc
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: STR  Prefix for contig names.
                    synonyms:
                    - --ctg-prefix
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "pblayout m4-to-g - Convert M4 to Graph (like ovlp_to_graph).\n\
                    \nUsage:\n  pblayout m4-to-g [options] <in.m4> <out.g>\n\n  in.m4\
                    \                            STR  Input M4 or M4F. (default should\
                    \ be\n                                        preads.m4\n  out.g\
                    \                            STR  (Output Graph: ctg_paths, c_path,\n\
                    \                                        sg_edges_list, chimer_nodes\
                    \ (if not\n                                        --disable-chimer-bridge-removal),\n\
                    \                                        utg_data, utg_data0 (maybe)\n\
                    \n  --lfc                                 use local flow constraint\
                    \ method rather\n                                        than\
                    \ best overlap method to resolve\n                           \
                    \             knots in string graph\n  --disable-chimer-bridge-removal\
                    \       and do not write chimer_nodes file\n  --ctg-prefix   \
                    \                  STR  Prefix for contig names.\n\n  -h,--help\
                    \                             Show this help and exit.\n  --version\
                    \                             Show application version and exit.\n\
                    \n"
                  generated_using: &id004
                  - --help
                - !Command
                  command: &id005
                  - pblayout
                  - sg-to-sg
                  positional:
                  - !Positional
                    description: STR  Input SG.
                    position: 0
                    name: in.sg
                    optional: false
                  - !Positional
                    description: STR  Output SG.
                    position: 1
                    name: out.sg
                    optional: false
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "pblayout sg-to-sg - Convert SG to SG.\n\nUsage:\n  pblayout\
                    \ sg-to-sg [options] <in.sg> <out.sg>\n\n  in.sg      STR  Input\
                    \ SG.\n  out.sg     STR  Output SG.\n\nOptions:\n  -h,--help \
                    \      Show this help and exit.\n  --version       Show application\
                    \ version and exit.\n\n"
                  generated_using: *id004
                - !Command
                  command: &id006
                  - pblayout
                  - m4-to-sg
                  positional:
                  - !Positional
                    description: STR  Input M4 or M4F.
                    position: 0
                    name: in.m4
                    optional: false
                  - !Positional
                    description: STR  Output SG.
                    position: 1
                    name: out.sg
                    optional: false
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "pblayout m4-to-sg - Convert M4 to SG.\n\nUsage:\n  pblayout\
                    \ m4-to-sg [options] <in.m4> <out.sg>\n\n  in.m4      STR  Input\
                    \ M4 or M4F.\n  out.sg     STR  Output SG.\n\nOptions:\n  -h,--help\
                    \       Show this help and exit.\n  --version       Show application\
                    \ version and exit.\n\n"
                  generated_using: *id004
                - !Command
                  command: &id007
                  - pblayout
                  - m4-index
                  positional:
                  - !Positional
                    description: STR  Input M4.
                    position: 0
                    name: in.m4
                    optional: false
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "pblayout m4-index - Generate M4 index file.\n\nUsage:\n\
                    \  pblayout m4-index [options] <in.m4>\n\n  in.m4      STR  Input\
                    \ M4.\n\nOptions:\n  -h,--help       Show this help and exit.\n\
                    \  --version       Show application version and exit.\n\n"
                  generated_using: *id004
                - !Command
                  command: &id008
                  - pblayout
                  - subgraph
                  positional:
                  - !Positional
                    description: STR   Input string graph in the sg_edges_list
                    position: 0
                    name: in_sg
                    optional: false
                  - !Positional
                    description: out_prefix               STR   Output prefix.
                    position: 1
                    name: format.
                    optional: false
                  named:
                  - !Flag
                    description: "Apply the directed ego-graph algorithm to\nextract\
                      \ the subgraph."
                    synonyms:
                    - --directed
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "INT   Radius (in the number of nodes) to extract\
                      \ in\neach direction. [100]"
                    synonyms:
                    - --radius
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "STR   Path to a tiling path file. If specified,\
                      \ it\nwill be used to create the Bandage CSV."
                    synonyms:
                    - --tp
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "STR   Path to a SeqDB file. If specified, it will\
                      \ be\nused to retrieve lengths of sequences."
                    synonyms:
                    - --seqdb
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Indicates that the sequences in the input\ngraph\
                      \ are actually IDs instead of headers."
                    synonyms:
                    - --use-seq-ids
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Write the sequences to the generated GFA file.\n\
                      This requires the '--seqdb' to be provided."
                    synonyms:
                    - --write-seqs
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "STR   CSV file with a list of nodes to extract.\
                      \ Each\nline contains 2 columns: <node_name> <label>.\nThe label\
                      \ will be used to name the output\nfiles."
                    synonyms:
                    - --csv-nodes
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "INT   Number of threads to use, 0 means\nautodetection.\
                      \ [0]"
                    synonyms:
                    - -j
                    - --num-threads
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "STR   Set log level. Valid choices: (TRACE, DEBUG,\n\
                      INFO, WARN, FATAL). [WARN]"
                    synonyms:
                    - --log-level
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: FILE  Log to a file, instead of stderr.
                    synonyms:
                    - --log-file
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "subgraph - Extract a subgraph from a given assembly\
                    \ graph.\n\nUsage:\n  subgraph [options] <in_sg> <out_prefix>\
                    \ <node1 [node2 node3 ...]>\n\n  in_sg                    STR\
                    \   Input string graph in the sg_edges_list\n                \
                    \                 format.\n  out_prefix               STR   Output\
                    \ prefix.\n  node1 [node2 node3 ...]  STR   One or more nodes\
                    \ to extract the subgraph for.\n\nAlgorithm Options:\n  --directed\
                    \                     Apply the directed ego-graph algorithm to\n\
                    \                                 extract the subgraph.\n  --radius\
                    \                 INT   Radius (in the number of nodes) to extract\
                    \ in\n                                 each direction. [100]\n\
                    \  --tp                     STR   Path to a tiling path file.\
                    \ If specified, it\n                                 will be used\
                    \ to create the Bandage CSV.\n  --seqdb                  STR \
                    \  Path to a SeqDB file. If specified, it will be\n          \
                    \                       used to retrieve lengths of sequences.\n\
                    \  --use-seq-ids                  Indicates that the sequences\
                    \ in the input\n                                 graph are actually\
                    \ IDs instead of headers.\n  --write-seqs                   Write\
                    \ the sequences to the generated GFA file.\n                 \
                    \                This requires the '--seqdb' to be provided.\n\
                    \  --csv-nodes              STR   CSV file with a list of nodes\
                    \ to extract. Each\n                                 line contains\
                    \ 2 columns: <node_name> <label>.\n                          \
                    \       The label will be used to name the output\n          \
                    \                       files.\n\n  -h,--help                \
                    \      Show this help and exit.\n  --version                 \
                    \     Show application version and exit.\n  -j,--num-threads \
                    \        INT   Number of threads to use, 0 means\n           \
                    \                      autodetection. [0]\n  --log-level     \
                    \         STR   Set log level. Valid choices: (TRACE, DEBUG,\n\
                    \                                 INFO, WARN, FATAL). [WARN]\n\
                    \  --log-file               FILE  Log to a file, instead of stderr.\n\
                    \n"
                  generated_using: *id004
                - !Command
                  command: &id009
                  - pblayout
                  - tp2seq
                  positional:
                  - !Positional
                    description: "STR   Path to a SeqDB file with reads which will\
                      \ be used\nto compose the sequences."
                    position: 0
                    name: in_reads_fn
                    optional: false
                  - !Positional
                    description: STR   Path to a TilingPath file.
                    position: 1
                    name: in_tiling_path_fn
                    optional: false
                  - !Positional
                    description: STR   Output FASTA filename.
                    position: 2
                    name: out_fn
                    optional: false
                  - !Positional
                    description: --batch-mb         INT   Batch size in Mbp. Reads
                      for a batch of contigs are
                    position: 0
                    name: coordinates.
                    optional: false
                  named:
                  - !Flag
                    description: "The input tiling path contains sequence IDs instead\n\
                      of read names."
                    synonyms:
                    - --use-seq-ids
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "Assumes that the input tiling paths were constructed\n\
                      in the homopolymer-compressed space, and expands the\nsequences\
                      \ during sequence construction."
                    synonyms:
                    - --use-hpc
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: Realigns the tiling path edges to improve tiling
                    synonyms:
                    - --realign
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: INT   Number of threads to use, 0 means autodetection.
                      [0]
                    synonyms:
                    - -j
                    - --num-threads
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: "STR   Set log level. Valid choices: (TRACE, DEBUG,\
                      \ INFO,\nWARN, FATAL). [WARN]"
                    synonyms:
                    - --log-level
                    args: !EmptyFlagArg {}
                    optional: true
                  - !Flag
                    description: FILE  Log to a file, instead of stderr.
                    synonyms:
                    - --log-file
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "tp2seq - Construct contig sequences from a given tiling\
                    \ path file.\n\nUsage:\n  tp2seq [options] <in_reads_fn> <in_tiling_path_fn>\
                    \ <out_fn>\n\n  in_reads_fn        STR   Path to a SeqDB file\
                    \ with reads which will be used\n                           to\
                    \ compose the sequences.\n  in_tiling_path_fn  STR   Path to a\
                    \ TilingPath file.\n  out_fn             STR   Output FASTA filename.\n\
                    \nAlgorithm Options:\n  --use-seq-ids            The input tiling\
                    \ path contains sequence IDs instead\n                       \
                    \    of read names.\n  --use-hpc                Assumes that the\
                    \ input tiling paths were constructed\n                      \
                    \     in the homopolymer-compressed space, and expands the\n \
                    \                          sequences during sequence construction.\n\
                    \  --realign                Realigns the tiling path edges to\
                    \ improve tiling\n                           coordinates.\n  --batch-mb\
                    \         INT   Batch size in Mbp. Reads for a batch of contigs\
                    \ are\n                           loaded at once so that all reads\
                    \ total in roughly\n                           this size. [1000]\n\
                    \n  -h,--help                Show this help and exit.\n  --version\
                    \                Show application version and exit.\n  -j,--num-threads\
                    \   INT   Number of threads to use, 0 means autodetection. [0]\n\
                    \  --log-level        STR   Set log level. Valid choices: (TRACE,\
                    \ DEBUG, INFO,\n                           WARN, FATAL). [WARN]\n\
                    \  --log-file         FILE  Log to a file, instead of stderr.\n\
                    \n"
                  generated_using: *id004
                - !Command
                  command: &id010
                  - pblayout
                  - m4-to-m4
                  positional:
                  - !Positional
                    description: STR  Input M4.
                    position: 0
                    name: in.m4
                    optional: false
                  - !Positional
                    description: STR  Output M4.
                    position: 1
                    name: out.m4
                    optional: false
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: Show this help and exit.
                    synonyms:
                    - -h
                    - --help
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag: !Flag
                    description: Show application version and exit.
                    synonyms:
                    - --version
                    args: !EmptyFlagArg {}
                    optional: true
                  help_text: "pblayout m4-to-m4 - Convert M4 to M4.\n\nUsage:\n  pblayout\
                    \ m4-to-m4 [options] <in.m4> <out.m4>\n\n  in.m4      STR  Input\
                    \ M4.\n  out.m4     STR  Output M4.\n\nOptions:\n  -h,--help \
                    \      Show this help and exit.\n  --version       Show application\
                    \ version and exit.\n\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: Show this help and exit.
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag: !Flag
                  description: Show application version and exit.
                  synonyms:
                  - --version
                  args: !EmptyFlagArg {}
                  optional: true
                help_text: "pblayout - PacBio assembly tool.\n\nUsage:\n  pblayout\
                  \ <tool>\n\n  -h,--help    Show this help and exit.\n  --version\
                  \    Show application version and exit.\n\nTools:\n  dedup-actg\
                  \ Deduplicate alternative bubble branches (associate contigs). Only\
                  \ unphased bubbles are deduplicated based on alignment identity\
                  \ and length.\n  m4-to-m4   Convert M4 to M4.\n  m4-to-sg   Convert\
                  \ M4 to SG.\n  m4-to-g    Convert M4 to Graph (like ovlp_to_graph).\n\
                  \  sg-to-sg   Convert SG to SG.\n  read-to-contig Assign reads to\
                  \ a tiling path based on overlaps.\n  m4-to-sg-to-gfa1 Convert M4\
                  \ to GFA1, via intermediate string graph.\n  m4-index   Generate\
                  \ M4 index file.\n  tp2seq     Construct contig sequences from a\
                  \ given tiling path file.\n  subgraph   Extract a subgraph from\
                  \ a given assembly graph.\n\n"
                generated_using: *id004
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "pblayout m4-to-g - Convert M4 to Graph (like ovlp_to_graph).\n\
                \nUsage:\n  pblayout m4-to-g [options] <in.m4> <out.g>\n\n  in.m4\
                \                            STR  Input M4 or M4F. (default should\
                \ be\n                                        preads.m4\n  out.g \
                \                           STR  (Output Graph: ctg_paths, c_path,\n\
                \                                        sg_edges_list, chimer_nodes\
                \ (if not\n                                        --disable-chimer-bridge-removal),\n\
                \                                        utg_data, utg_data0 (maybe)\n\
                \n  --lfc                                 use local flow constraint\
                \ method rather\n                                        than best\
                \ overlap method to resolve\n                                    \
                \    knots in string graph\n  --disable-chimer-bridge-removal    \
                \   and do not write chimer_nodes file\n  --ctg-prefix           \
                \          STR  Prefix for contig names.\n\n  -h,--help          \
                \                   Show this help and exit.\n  --version        \
                \                     Show application version and exit.\n\n"
              generated_using: *id004
            - !Command
              command: *id005
              positional:
              - !Positional
                description: STR  Input SG.
                position: 0
                name: in.sg
                optional: false
              - !Positional
                description: STR  Output SG.
                position: 1
                name: out.sg
                optional: false
              named: []
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "pblayout sg-to-sg - Convert SG to SG.\n\nUsage:\n  pblayout\
                \ sg-to-sg [options] <in.sg> <out.sg>\n\n  in.sg      STR  Input SG.\n\
                \  out.sg     STR  Output SG.\n\nOptions:\n  -h,--help       Show\
                \ this help and exit.\n  --version       Show application version\
                \ and exit.\n\n"
              generated_using: *id004
            - !Command
              command: *id006
              positional:
              - !Positional
                description: STR  Input M4 or M4F.
                position: 0
                name: in.m4
                optional: false
              - !Positional
                description: STR  Output SG.
                position: 1
                name: out.sg
                optional: false
              named: []
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "pblayout m4-to-sg - Convert M4 to SG.\n\nUsage:\n  pblayout\
                \ m4-to-sg [options] <in.m4> <out.sg>\n\n  in.m4      STR  Input M4\
                \ or M4F.\n  out.sg     STR  Output SG.\n\nOptions:\n  -h,--help \
                \      Show this help and exit.\n  --version       Show application\
                \ version and exit.\n\n"
              generated_using: *id004
            - !Command
              command: *id007
              positional:
              - !Positional
                description: STR  Input M4.
                position: 0
                name: in.m4
                optional: false
              named: []
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "pblayout m4-index - Generate M4 index file.\n\nUsage:\n\
                \  pblayout m4-index [options] <in.m4>\n\n  in.m4      STR  Input\
                \ M4.\n\nOptions:\n  -h,--help       Show this help and exit.\n  --version\
                \       Show application version and exit.\n\n"
              generated_using: *id004
            - !Command
              command: *id008
              positional:
              - !Positional
                description: STR   Input string graph in the sg_edges_list
                position: 0
                name: in_sg
                optional: false
              - !Positional
                description: out_prefix               STR   Output prefix.
                position: 1
                name: format.
                optional: false
              named:
              - !Flag
                description: "Apply the directed ego-graph algorithm to\nextract the\
                  \ subgraph."
                synonyms:
                - --directed
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "INT   Radius (in the number of nodes) to extract in\n\
                  each direction. [100]"
                synonyms:
                - --radius
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "STR   Path to a tiling path file. If specified, it\n\
                  will be used to create the Bandage CSV."
                synonyms:
                - --tp
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "STR   Path to a SeqDB file. If specified, it will be\n\
                  used to retrieve lengths of sequences."
                synonyms:
                - --seqdb
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "Indicates that the sequences in the input\ngraph are\
                  \ actually IDs instead of headers."
                synonyms:
                - --use-seq-ids
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "Write the sequences to the generated GFA file.\nThis\
                  \ requires the '--seqdb' to be provided."
                synonyms:
                - --write-seqs
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "STR   CSV file with a list of nodes to extract. Each\n\
                  line contains 2 columns: <node_name> <label>.\nThe label will be\
                  \ used to name the output\nfiles."
                synonyms:
                - --csv-nodes
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "INT   Number of threads to use, 0 means\nautodetection.\
                  \ [0]"
                synonyms:
                - -j
                - --num-threads
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "STR   Set log level. Valid choices: (TRACE, DEBUG,\n\
                  INFO, WARN, FATAL). [WARN]"
                synonyms:
                - --log-level
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: FILE  Log to a file, instead of stderr.
                synonyms:
                - --log-file
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "subgraph - Extract a subgraph from a given assembly graph.\n\
                \nUsage:\n  subgraph [options] <in_sg> <out_prefix> <node1 [node2\
                \ node3 ...]>\n\n  in_sg                    STR   Input string graph\
                \ in the sg_edges_list\n                                 format.\n\
                \  out_prefix               STR   Output prefix.\n  node1 [node2 node3\
                \ ...]  STR   One or more nodes to extract the subgraph for.\n\nAlgorithm\
                \ Options:\n  --directed                     Apply the directed ego-graph\
                \ algorithm to\n                                 extract the subgraph.\n\
                \  --radius                 INT   Radius (in the number of nodes)\
                \ to extract in\n                                 each direction.\
                \ [100]\n  --tp                     STR   Path to a tiling path file.\
                \ If specified, it\n                                 will be used\
                \ to create the Bandage CSV.\n  --seqdb                  STR   Path\
                \ to a SeqDB file. If specified, it will be\n                    \
                \             used to retrieve lengths of sequences.\n  --use-seq-ids\
                \                  Indicates that the sequences in the input\n   \
                \                              graph are actually IDs instead of headers.\n\
                \  --write-seqs                   Write the sequences to the generated\
                \ GFA file.\n                                 This requires the '--seqdb'\
                \ to be provided.\n  --csv-nodes              STR   CSV file with\
                \ a list of nodes to extract. Each\n                             \
                \    line contains 2 columns: <node_name> <label>.\n             \
                \                    The label will be used to name the output\n \
                \                                files.\n\n  -h,--help           \
                \           Show this help and exit.\n  --version                \
                \      Show application version and exit.\n  -j,--num-threads    \
                \     INT   Number of threads to use, 0 means\n                  \
                \               autodetection. [0]\n  --log-level              STR\
                \   Set log level. Valid choices: (TRACE, DEBUG,\n               \
                \                  INFO, WARN, FATAL). [WARN]\n  --log-file      \
                \         FILE  Log to a file, instead of stderr.\n\n"
              generated_using: *id004
            - !Command
              command: *id009
              positional:
              - !Positional
                description: "STR   Path to a SeqDB file with reads which will be\
                  \ used\nto compose the sequences."
                position: 0
                name: in_reads_fn
                optional: false
              - !Positional
                description: STR   Path to a TilingPath file.
                position: 1
                name: in_tiling_path_fn
                optional: false
              - !Positional
                description: STR   Output FASTA filename.
                position: 2
                name: out_fn
                optional: false
              - !Positional
                description: --batch-mb         INT   Batch size in Mbp. Reads for
                  a batch of contigs are
                position: 0
                name: coordinates.
                optional: false
              named:
              - !Flag
                description: "The input tiling path contains sequence IDs instead\n\
                  of read names."
                synonyms:
                - --use-seq-ids
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "Assumes that the input tiling paths were constructed\n\
                  in the homopolymer-compressed space, and expands the\nsequences\
                  \ during sequence construction."
                synonyms:
                - --use-hpc
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: Realigns the tiling path edges to improve tiling
                synonyms:
                - --realign
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: INT   Number of threads to use, 0 means autodetection.
                  [0]
                synonyms:
                - -j
                - --num-threads
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "STR   Set log level. Valid choices: (TRACE, DEBUG, INFO,\n\
                  WARN, FATAL). [WARN]"
                synonyms:
                - --log-level
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: FILE  Log to a file, instead of stderr.
                synonyms:
                - --log-file
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "tp2seq - Construct contig sequences from a given tiling\
                \ path file.\n\nUsage:\n  tp2seq [options] <in_reads_fn> <in_tiling_path_fn>\
                \ <out_fn>\n\n  in_reads_fn        STR   Path to a SeqDB file with\
                \ reads which will be used\n                           to compose\
                \ the sequences.\n  in_tiling_path_fn  STR   Path to a TilingPath\
                \ file.\n  out_fn             STR   Output FASTA filename.\n\nAlgorithm\
                \ Options:\n  --use-seq-ids            The input tiling path contains\
                \ sequence IDs instead\n                           of read names.\n\
                \  --use-hpc                Assumes that the input tiling paths were\
                \ constructed\n                           in the homopolymer-compressed\
                \ space, and expands the\n                           sequences during\
                \ sequence construction.\n  --realign                Realigns the\
                \ tiling path edges to improve tiling\n                          \
                \ coordinates.\n  --batch-mb         INT   Batch size in Mbp. Reads\
                \ for a batch of contigs are\n                           loaded at\
                \ once so that all reads total in roughly\n                      \
                \     this size. [1000]\n\n  -h,--help                Show this help\
                \ and exit.\n  --version                Show application version and\
                \ exit.\n  -j,--num-threads   INT   Number of threads to use, 0 means\
                \ autodetection. [0]\n  --log-level        STR   Set log level. Valid\
                \ choices: (TRACE, DEBUG, INFO,\n                           WARN,\
                \ FATAL). [WARN]\n  --log-file         FILE  Log to a file, instead\
                \ of stderr.\n\n"
              generated_using: *id004
            - !Command
              command: *id010
              positional:
              - !Positional
                description: STR  Input M4.
                position: 0
                name: in.m4
                optional: false
              - !Positional
                description: STR  Output M4.
                position: 1
                name: out.m4
                optional: false
              named: []
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: Show this help and exit.
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: Show application version and exit.
                synonyms:
                - --version
                args: !EmptyFlagArg {}
                optional: true
              help_text: "pblayout m4-to-m4 - Convert M4 to M4.\n\nUsage:\n  pblayout\
                \ m4-to-m4 [options] <in.m4> <out.m4>\n\n  in.m4      STR  Input M4.\n\
                \  out.m4     STR  Output M4.\n\nOptions:\n  -h,--help       Show\
                \ this help and exit.\n  --version       Show application version\
                \ and exit.\n\n"
              generated_using: *id004
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "pblayout - PacBio assembly tool.\n\nUsage:\n  pblayout <tool>\n\
              \n  -h,--help    Show this help and exit.\n  --version    Show application\
              \ version and exit.\n\nTools:\n  dedup-actg Deduplicate alternative\
              \ bubble branches (associate contigs). Only unphased bubbles are deduplicated\
              \ based on alignment identity and length.\n  m4-to-m4   Convert M4 to\
              \ M4.\n  m4-to-sg   Convert M4 to SG.\n  m4-to-g    Convert M4 to Graph\
              \ (like ovlp_to_graph).\n  sg-to-sg   Convert SG to SG.\n  read-to-contig\
              \ Assign reads to a tiling path based on overlaps.\n  m4-to-sg-to-gfa1\
              \ Convert M4 to GFA1, via intermediate string graph.\n  m4-index   Generate\
              \ M4 index file.\n  tp2seq     Construct contig sequences from a given\
              \ tiling path file.\n  subgraph   Extract a subgraph from a given assembly\
              \ graph.\n\n"
            generated_using: *id004
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "pblayout m4-to-g - Convert M4 to Graph (like ovlp_to_graph).\n\
            \nUsage:\n  pblayout m4-to-g [options] <in.m4> <out.g>\n\n  in.m4    \
            \                        STR  Input M4 or M4F. (default should be\n  \
            \                                      preads.m4\n  out.g            \
            \                STR  (Output Graph: ctg_paths, c_path,\n            \
            \                            sg_edges_list, chimer_nodes (if not\n   \
            \                                     --disable-chimer-bridge-removal),\n\
            \                                        utg_data, utg_data0 (maybe)\n\
            \n  --lfc                                 use local flow constraint method\
            \ rather\n                                        than best overlap method\
            \ to resolve\n                                        knots in string\
            \ graph\n  --disable-chimer-bridge-removal       and do not write chimer_nodes\
            \ file\n  --ctg-prefix                     STR  Prefix for contig names.\n\
            \n  -h,--help                             Show this help and exit.\n \
            \ --version                             Show application version and exit.\n\
            \n"
          generated_using: *id004
        - !Command
          command: *id005
          positional:
          - !Positional
            description: STR  Input SG.
            position: 0
            name: in.sg
            optional: false
          - !Positional
            description: STR  Output SG.
            position: 1
            name: out.sg
            optional: false
          named: []
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "pblayout sg-to-sg - Convert SG to SG.\n\nUsage:\n  pblayout\
            \ sg-to-sg [options] <in.sg> <out.sg>\n\n  in.sg      STR  Input SG.\n\
            \  out.sg     STR  Output SG.\n\nOptions:\n  -h,--help       Show this\
            \ help and exit.\n  --version       Show application version and exit.\n\
            \n"
          generated_using: *id004
        - !Command
          command: *id006
          positional:
          - !Positional
            description: STR  Input M4 or M4F.
            position: 0
            name: in.m4
            optional: false
          - !Positional
            description: STR  Output SG.
            position: 1
            name: out.sg
            optional: false
          named: []
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "pblayout m4-to-sg - Convert M4 to SG.\n\nUsage:\n  pblayout\
            \ m4-to-sg [options] <in.m4> <out.sg>\n\n  in.m4      STR  Input M4 or\
            \ M4F.\n  out.sg     STR  Output SG.\n\nOptions:\n  -h,--help       Show\
            \ this help and exit.\n  --version       Show application version and\
            \ exit.\n\n"
          generated_using: *id004
        - !Command
          command: *id007
          positional:
          - !Positional
            description: STR  Input M4.
            position: 0
            name: in.m4
            optional: false
          named: []
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "pblayout m4-index - Generate M4 index file.\n\nUsage:\n  pblayout\
            \ m4-index [options] <in.m4>\n\n  in.m4      STR  Input M4.\n\nOptions:\n\
            \  -h,--help       Show this help and exit.\n  --version       Show application\
            \ version and exit.\n\n"
          generated_using: *id004
        - !Command
          command: *id008
          positional:
          - !Positional
            description: STR   Input string graph in the sg_edges_list
            position: 0
            name: in_sg
            optional: false
          - !Positional
            description: out_prefix               STR   Output prefix.
            position: 1
            name: format.
            optional: false
          named:
          - !Flag
            description: "Apply the directed ego-graph algorithm to\nextract the subgraph."
            synonyms:
            - --directed
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "INT   Radius (in the number of nodes) to extract in\neach\
              \ direction. [100]"
            synonyms:
            - --radius
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "STR   Path to a tiling path file. If specified, it\nwill\
              \ be used to create the Bandage CSV."
            synonyms:
            - --tp
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "STR   Path to a SeqDB file. If specified, it will be\nused\
              \ to retrieve lengths of sequences."
            synonyms:
            - --seqdb
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "Indicates that the sequences in the input\ngraph are actually\
              \ IDs instead of headers."
            synonyms:
            - --use-seq-ids
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "Write the sequences to the generated GFA file.\nThis requires\
              \ the '--seqdb' to be provided."
            synonyms:
            - --write-seqs
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "STR   CSV file with a list of nodes to extract. Each\nline\
              \ contains 2 columns: <node_name> <label>.\nThe label will be used to\
              \ name the output\nfiles."
            synonyms:
            - --csv-nodes
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "INT   Number of threads to use, 0 means\nautodetection.\
              \ [0]"
            synonyms:
            - -j
            - --num-threads
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "STR   Set log level. Valid choices: (TRACE, DEBUG,\nINFO,\
              \ WARN, FATAL). [WARN]"
            synonyms:
            - --log-level
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: FILE  Log to a file, instead of stderr.
            synonyms:
            - --log-file
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "subgraph - Extract a subgraph from a given assembly graph.\n\
            \nUsage:\n  subgraph [options] <in_sg> <out_prefix> <node1 [node2 node3\
            \ ...]>\n\n  in_sg                    STR   Input string graph in the\
            \ sg_edges_list\n                                 format.\n  out_prefix\
            \               STR   Output prefix.\n  node1 [node2 node3 ...]  STR \
            \  One or more nodes to extract the subgraph for.\n\nAlgorithm Options:\n\
            \  --directed                     Apply the directed ego-graph algorithm\
            \ to\n                                 extract the subgraph.\n  --radius\
            \                 INT   Radius (in the number of nodes) to extract in\n\
            \                                 each direction. [100]\n  --tp      \
            \               STR   Path to a tiling path file. If specified, it\n \
            \                                will be used to create the Bandage CSV.\n\
            \  --seqdb                  STR   Path to a SeqDB file. If specified,\
            \ it will be\n                                 used to retrieve lengths\
            \ of sequences.\n  --use-seq-ids                  Indicates that the sequences\
            \ in the input\n                                 graph are actually IDs\
            \ instead of headers.\n  --write-seqs                   Write the sequences\
            \ to the generated GFA file.\n                                 This requires\
            \ the '--seqdb' to be provided.\n  --csv-nodes              STR   CSV\
            \ file with a list of nodes to extract. Each\n                       \
            \          line contains 2 columns: <node_name> <label>.\n           \
            \                      The label will be used to name the output\n   \
            \                              files.\n\n  -h,--help                 \
            \     Show this help and exit.\n  --version                      Show\
            \ application version and exit.\n  -j,--num-threads         INT   Number\
            \ of threads to use, 0 means\n                                 autodetection.\
            \ [0]\n  --log-level              STR   Set log level. Valid choices:\
            \ (TRACE, DEBUG,\n                                 INFO, WARN, FATAL).\
            \ [WARN]\n  --log-file               FILE  Log to a file, instead of stderr.\n\
            \n"
          generated_using: *id004
        - !Command
          command: *id009
          positional:
          - !Positional
            description: "STR   Path to a SeqDB file with reads which will be used\n\
              to compose the sequences."
            position: 0
            name: in_reads_fn
            optional: false
          - !Positional
            description: STR   Path to a TilingPath file.
            position: 1
            name: in_tiling_path_fn
            optional: false
          - !Positional
            description: STR   Output FASTA filename.
            position: 2
            name: out_fn
            optional: false
          - !Positional
            description: --batch-mb         INT   Batch size in Mbp. Reads for a batch
              of contigs are
            position: 0
            name: coordinates.
            optional: false
          named:
          - !Flag
            description: "The input tiling path contains sequence IDs instead\nof\
              \ read names."
            synonyms:
            - --use-seq-ids
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "Assumes that the input tiling paths were constructed\nin\
              \ the homopolymer-compressed space, and expands the\nsequences during\
              \ sequence construction."
            synonyms:
            - --use-hpc
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: Realigns the tiling path edges to improve tiling
            synonyms:
            - --realign
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: INT   Number of threads to use, 0 means autodetection. [0]
            synonyms:
            - -j
            - --num-threads
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "STR   Set log level. Valid choices: (TRACE, DEBUG, INFO,\n\
              WARN, FATAL). [WARN]"
            synonyms:
            - --log-level
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: FILE  Log to a file, instead of stderr.
            synonyms:
            - --log-file
            args: !EmptyFlagArg {}
            optional: true
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "tp2seq - Construct contig sequences from a given tiling path\
            \ file.\n\nUsage:\n  tp2seq [options] <in_reads_fn> <in_tiling_path_fn>\
            \ <out_fn>\n\n  in_reads_fn        STR   Path to a SeqDB file with reads\
            \ which will be used\n                           to compose the sequences.\n\
            \  in_tiling_path_fn  STR   Path to a TilingPath file.\n  out_fn     \
            \        STR   Output FASTA filename.\n\nAlgorithm Options:\n  --use-seq-ids\
            \            The input tiling path contains sequence IDs instead\n   \
            \                        of read names.\n  --use-hpc                Assumes\
            \ that the input tiling paths were constructed\n                     \
            \      in the homopolymer-compressed space, and expands the\n        \
            \                   sequences during sequence construction.\n  --realign\
            \                Realigns the tiling path edges to improve tiling\n  \
            \                         coordinates.\n  --batch-mb         INT   Batch\
            \ size in Mbp. Reads for a batch of contigs are\n                    \
            \       loaded at once so that all reads total in roughly\n          \
            \                 this size. [1000]\n\n  -h,--help                Show\
            \ this help and exit.\n  --version                Show application version\
            \ and exit.\n  -j,--num-threads   INT   Number of threads to use, 0 means\
            \ autodetection. [0]\n  --log-level        STR   Set log level. Valid\
            \ choices: (TRACE, DEBUG, INFO,\n                           WARN, FATAL).\
            \ [WARN]\n  --log-file         FILE  Log to a file, instead of stderr.\n\
            \n"
          generated_using: *id004
        - !Command
          command: *id010
          positional:
          - !Positional
            description: STR  Input M4.
            position: 0
            name: in.m4
            optional: false
          - !Positional
            description: STR  Output M4.
            position: 1
            name: out.m4
            optional: false
          named: []
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            description: Show this help and exit.
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: Show application version and exit.
            synonyms:
            - --version
            args: !EmptyFlagArg {}
            optional: true
          help_text: "pblayout m4-to-m4 - Convert M4 to M4.\n\nUsage:\n  pblayout\
            \ m4-to-m4 [options] <in.m4> <out.m4>\n\n  in.m4      STR  Input M4.\n\
            \  out.m4     STR  Output M4.\n\nOptions:\n  -h,--help       Show this\
            \ help and exit.\n  --version       Show application version and exit.\n\
            \n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "pblayout - PacBio assembly tool.\n\nUsage:\n  pblayout <tool>\n\
          \n  -h,--help    Show this help and exit.\n  --version    Show application\
          \ version and exit.\n\nTools:\n  dedup-actg Deduplicate alternative bubble\
          \ branches (associate contigs). Only unphased bubbles are deduplicated based\
          \ on alignment identity and length.\n  m4-to-m4   Convert M4 to M4.\n  m4-to-sg\
          \   Convert M4 to SG.\n  m4-to-g    Convert M4 to Graph (like ovlp_to_graph).\n\
          \  sg-to-sg   Convert SG to SG.\n  read-to-contig Assign reads to a tiling\
          \ path based on overlaps.\n  m4-to-sg-to-gfa1 Convert M4 to GFA1, via intermediate\
          \ string graph.\n  m4-index   Generate M4 index file.\n  tp2seq     Construct\
          \ contig sequences from a given tiling path file.\n  subgraph   Extract\
          \ a subgraph from a given assembly graph.\n\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "pblayout m4-to-g - Convert M4 to Graph (like ovlp_to_graph).\n\n\
        Usage:\n  pblayout m4-to-g [options] <in.m4> <out.g>\n\n  in.m4          \
        \                  STR  Input M4 or M4F. (default should be\n            \
        \                            preads.m4\n  out.g                          \
        \  STR  (Output Graph: ctg_paths, c_path,\n                              \
        \          sg_edges_list, chimer_nodes (if not\n                         \
        \               --disable-chimer-bridge-removal),\n                      \
        \                  utg_data, utg_data0 (maybe)\n\n  --lfc                \
        \                 use local flow constraint method rather\n              \
        \                          than best overlap method to resolve\n         \
        \                               knots in string graph\n  --disable-chimer-bridge-removal\
        \       and do not write chimer_nodes file\n  --ctg-prefix               \
        \      STR  Prefix for contig names.\n\n  -h,--help                      \
        \       Show this help and exit.\n  --version                            \
        \ Show application version and exit.\n\n"
      generated_using: *id004
    - !Command
      command: *id005
      positional:
      - !Positional
        description: STR  Input SG.
        position: 0
        name: in.sg
        optional: false
      - !Positional
        description: STR  Output SG.
        position: 1
        name: out.sg
        optional: false
      named: []
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "pblayout sg-to-sg - Convert SG to SG.\n\nUsage:\n  pblayout sg-to-sg\
        \ [options] <in.sg> <out.sg>\n\n  in.sg      STR  Input SG.\n  out.sg    \
        \ STR  Output SG.\n\nOptions:\n  -h,--help       Show this help and exit.\n\
        \  --version       Show application version and exit.\n\n"
      generated_using: *id004
    - !Command
      command: *id006
      positional:
      - !Positional
        description: STR  Input M4 or M4F.
        position: 0
        name: in.m4
        optional: false
      - !Positional
        description: STR  Output SG.
        position: 1
        name: out.sg
        optional: false
      named: []
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "pblayout m4-to-sg - Convert M4 to SG.\n\nUsage:\n  pblayout m4-to-sg\
        \ [options] <in.m4> <out.sg>\n\n  in.m4      STR  Input M4 or M4F.\n  out.sg\
        \     STR  Output SG.\n\nOptions:\n  -h,--help       Show this help and exit.\n\
        \  --version       Show application version and exit.\n\n"
      generated_using: *id004
    - !Command
      command: *id007
      positional:
      - !Positional
        description: STR  Input M4.
        position: 0
        name: in.m4
        optional: false
      named: []
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "pblayout m4-index - Generate M4 index file.\n\nUsage:\n  pblayout\
        \ m4-index [options] <in.m4>\n\n  in.m4      STR  Input M4.\n\nOptions:\n\
        \  -h,--help       Show this help and exit.\n  --version       Show application\
        \ version and exit.\n\n"
      generated_using: *id004
    - !Command
      command: *id008
      positional:
      - !Positional
        description: STR   Input string graph in the sg_edges_list
        position: 0
        name: in_sg
        optional: false
      - !Positional
        description: out_prefix               STR   Output prefix.
        position: 1
        name: format.
        optional: false
      named:
      - !Flag
        description: "Apply the directed ego-graph algorithm to\nextract the subgraph."
        synonyms:
        - --directed
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "INT   Radius (in the number of nodes) to extract in\neach direction.\
          \ [100]"
        synonyms:
        - --radius
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "STR   Path to a tiling path file. If specified, it\nwill be\
          \ used to create the Bandage CSV."
        synonyms:
        - --tp
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "STR   Path to a SeqDB file. If specified, it will be\nused to\
          \ retrieve lengths of sequences."
        synonyms:
        - --seqdb
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Indicates that the sequences in the input\ngraph are actually\
          \ IDs instead of headers."
        synonyms:
        - --use-seq-ids
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Write the sequences to the generated GFA file.\nThis requires\
          \ the '--seqdb' to be provided."
        synonyms:
        - --write-seqs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "STR   CSV file with a list of nodes to extract. Each\nline contains\
          \ 2 columns: <node_name> <label>.\nThe label will be used to name the output\n\
          files."
        synonyms:
        - --csv-nodes
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "INT   Number of threads to use, 0 means\nautodetection. [0]"
        synonyms:
        - -j
        - --num-threads
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "STR   Set log level. Valid choices: (TRACE, DEBUG,\nINFO, WARN,\
          \ FATAL). [WARN]"
        synonyms:
        - --log-level
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: FILE  Log to a file, instead of stderr.
        synonyms:
        - --log-file
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "subgraph - Extract a subgraph from a given assembly graph.\n\nUsage:\n\
        \  subgraph [options] <in_sg> <out_prefix> <node1 [node2 node3 ...]>\n\n \
        \ in_sg                    STR   Input string graph in the sg_edges_list\n\
        \                                 format.\n  out_prefix               STR\
        \   Output prefix.\n  node1 [node2 node3 ...]  STR   One or more nodes to\
        \ extract the subgraph for.\n\nAlgorithm Options:\n  --directed          \
        \           Apply the directed ego-graph algorithm to\n                  \
        \               extract the subgraph.\n  --radius                 INT   Radius\
        \ (in the number of nodes) to extract in\n                               \
        \  each direction. [100]\n  --tp                     STR   Path to a tiling\
        \ path file. If specified, it\n                                 will be used\
        \ to create the Bandage CSV.\n  --seqdb                  STR   Path to a SeqDB\
        \ file. If specified, it will be\n                                 used to\
        \ retrieve lengths of sequences.\n  --use-seq-ids                  Indicates\
        \ that the sequences in the input\n                                 graph\
        \ are actually IDs instead of headers.\n  --write-seqs                   Write\
        \ the sequences to the generated GFA file.\n                             \
        \    This requires the '--seqdb' to be provided.\n  --csv-nodes          \
        \    STR   CSV file with a list of nodes to extract. Each\n              \
        \                   line contains 2 columns: <node_name> <label>.\n      \
        \                           The label will be used to name the output\n  \
        \                               files.\n\n  -h,--help                    \
        \  Show this help and exit.\n  --version                      Show application\
        \ version and exit.\n  -j,--num-threads         INT   Number of threads to\
        \ use, 0 means\n                                 autodetection. [0]\n  --log-level\
        \              STR   Set log level. Valid choices: (TRACE, DEBUG,\n      \
        \                           INFO, WARN, FATAL). [WARN]\n  --log-file     \
        \          FILE  Log to a file, instead of stderr.\n\n"
      generated_using: *id004
    - !Command
      command: *id009
      positional:
      - !Positional
        description: "STR   Path to a SeqDB file with reads which will be used\nto\
          \ compose the sequences."
        position: 0
        name: in_reads_fn
        optional: false
      - !Positional
        description: STR   Path to a TilingPath file.
        position: 1
        name: in_tiling_path_fn
        optional: false
      - !Positional
        description: STR   Output FASTA filename.
        position: 2
        name: out_fn
        optional: false
      - !Positional
        description: --batch-mb         INT   Batch size in Mbp. Reads for a batch
          of contigs are
        position: 0
        name: coordinates.
        optional: false
      named:
      - !Flag
        description: "The input tiling path contains sequence IDs instead\nof read\
          \ names."
        synonyms:
        - --use-seq-ids
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Assumes that the input tiling paths were constructed\nin the\
          \ homopolymer-compressed space, and expands the\nsequences during sequence\
          \ construction."
        synonyms:
        - --use-hpc
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Realigns the tiling path edges to improve tiling
        synonyms:
        - --realign
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: INT   Number of threads to use, 0 means autodetection. [0]
        synonyms:
        - -j
        - --num-threads
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "STR   Set log level. Valid choices: (TRACE, DEBUG, INFO,\nWARN,\
          \ FATAL). [WARN]"
        synonyms:
        - --log-level
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: FILE  Log to a file, instead of stderr.
        synonyms:
        - --log-file
        args: !EmptyFlagArg {}
        optional: true
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "tp2seq - Construct contig sequences from a given tiling path file.\n\
        \nUsage:\n  tp2seq [options] <in_reads_fn> <in_tiling_path_fn> <out_fn>\n\n\
        \  in_reads_fn        STR   Path to a SeqDB file with reads which will be\
        \ used\n                           to compose the sequences.\n  in_tiling_path_fn\
        \  STR   Path to a TilingPath file.\n  out_fn             STR   Output FASTA\
        \ filename.\n\nAlgorithm Options:\n  --use-seq-ids            The input tiling\
        \ path contains sequence IDs instead\n                           of read names.\n\
        \  --use-hpc                Assumes that the input tiling paths were constructed\n\
        \                           in the homopolymer-compressed space, and expands\
        \ the\n                           sequences during sequence construction.\n\
        \  --realign                Realigns the tiling path edges to improve tiling\n\
        \                           coordinates.\n  --batch-mb         INT   Batch\
        \ size in Mbp. Reads for a batch of contigs are\n                        \
        \   loaded at once so that all reads total in roughly\n                  \
        \         this size. [1000]\n\n  -h,--help                Show this help and\
        \ exit.\n  --version                Show application version and exit.\n \
        \ -j,--num-threads   INT   Number of threads to use, 0 means autodetection.\
        \ [0]\n  --log-level        STR   Set log level. Valid choices: (TRACE, DEBUG,\
        \ INFO,\n                           WARN, FATAL). [WARN]\n  --log-file   \
        \      FILE  Log to a file, instead of stderr.\n\n"
      generated_using: *id004
    - !Command
      command: *id010
      positional:
      - !Positional
        description: STR  Input M4.
        position: 0
        name: in.m4
        optional: false
      - !Positional
        description: STR  Output M4.
        position: 1
        name: out.m4
        optional: false
      named: []
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show this help and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: Show application version and exit.
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "pblayout m4-to-m4 - Convert M4 to M4.\n\nUsage:\n  pblayout m4-to-m4\
        \ [options] <in.m4> <out.m4>\n\n  in.m4      STR  Input M4.\n  out.m4    \
        \ STR  Output M4.\n\nOptions:\n  -h,--help       Show this help and exit.\n\
        \  --version       Show application version and exit.\n\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "pblayout - PacBio assembly tool.\n\nUsage:\n  pblayout <tool>\n\n\
      \  -h,--help    Show this help and exit.\n  --version    Show application version\
      \ and exit.\n\nTools:\n  dedup-actg Deduplicate alternative bubble branches\
      \ (associate contigs). Only unphased bubbles are deduplicated based on alignment\
      \ identity and length.\n  m4-to-m4   Convert M4 to M4.\n  m4-to-sg   Convert\
      \ M4 to SG.\n  m4-to-g    Convert M4 to Graph (like ovlp_to_graph).\n  sg-to-sg\
      \   Convert SG to SG.\n  read-to-contig Assign reads to a tiling path based\
      \ on overlaps.\n  m4-to-sg-to-gfa1 Convert M4 to GFA1, via intermediate string\
      \ graph.\n  m4-index   Generate M4 index file.\n  tp2seq     Construct contig\
      \ sequences from a given tiling path file.\n  subgraph   Extract a subgraph\
      \ from a given assembly graph.\n\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "pblayout m4-to-g - Convert M4 to Graph (like ovlp_to_graph).\n\nUsage:\n\
    \  pblayout m4-to-g [options] <in.m4> <out.g>\n\n  in.m4                     \
    \       STR  Input M4 or M4F. (default should be\n                           \
    \             preads.m4\n  out.g                            STR  (Output Graph:\
    \ ctg_paths, c_path,\n                                        sg_edges_list, chimer_nodes\
    \ (if not\n                                        --disable-chimer-bridge-removal),\n\
    \                                        utg_data, utg_data0 (maybe)\n\n  --lfc\
    \                                 use local flow constraint method rather\n  \
    \                                      than best overlap method to resolve\n \
    \                                       knots in string graph\n  --disable-chimer-bridge-removal\
    \       and do not write chimer_nodes file\n  --ctg-prefix                   \
    \  STR  Prefix for contig names.\n\n  -h,--help                             Show\
    \ this help and exit.\n  --version                             Show application\
    \ version and exit.\n\n"
  generated_using: *id004
- !Command
  command: *id005
  positional:
  - !Positional
    description: STR  Input SG.
    position: 0
    name: in.sg
    optional: false
  - !Positional
    description: STR  Output SG.
    position: 1
    name: out.sg
    optional: false
  named: []
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "pblayout sg-to-sg - Convert SG to SG.\n\nUsage:\n  pblayout sg-to-sg\
    \ [options] <in.sg> <out.sg>\n\n  in.sg      STR  Input SG.\n  out.sg     STR\
    \  Output SG.\n\nOptions:\n  -h,--help       Show this help and exit.\n  --version\
    \       Show application version and exit.\n\n"
  generated_using: *id004
- !Command
  command: *id006
  positional:
  - !Positional
    description: STR  Input M4 or M4F.
    position: 0
    name: in.m4
    optional: false
  - !Positional
    description: STR  Output SG.
    position: 1
    name: out.sg
    optional: false
  named: []
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "pblayout m4-to-sg - Convert M4 to SG.\n\nUsage:\n  pblayout m4-to-sg\
    \ [options] <in.m4> <out.sg>\n\n  in.m4      STR  Input M4 or M4F.\n  out.sg \
    \    STR  Output SG.\n\nOptions:\n  -h,--help       Show this help and exit.\n\
    \  --version       Show application version and exit.\n\n"
  generated_using: *id004
- !Command
  command: *id007
  positional:
  - !Positional
    description: STR  Input M4.
    position: 0
    name: in.m4
    optional: false
  named: []
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "pblayout m4-index - Generate M4 index file.\n\nUsage:\n  pblayout m4-index\
    \ [options] <in.m4>\n\n  in.m4      STR  Input M4.\n\nOptions:\n  -h,--help  \
    \     Show this help and exit.\n  --version       Show application version and\
    \ exit.\n\n"
  generated_using: *id004
- !Command
  command: *id008
  positional:
  - !Positional
    description: STR   Input string graph in the sg_edges_list
    position: 0
    name: in_sg
    optional: false
  - !Positional
    description: out_prefix               STR   Output prefix.
    position: 1
    name: format.
    optional: false
  named:
  - !Flag
    description: "Apply the directed ego-graph algorithm to\nextract the subgraph."
    synonyms:
    - --directed
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "INT   Radius (in the number of nodes) to extract in\neach direction.\
      \ [100]"
    synonyms:
    - --radius
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "STR   Path to a tiling path file. If specified, it\nwill be used\
      \ to create the Bandage CSV."
    synonyms:
    - --tp
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "STR   Path to a SeqDB file. If specified, it will be\nused to retrieve\
      \ lengths of sequences."
    synonyms:
    - --seqdb
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Indicates that the sequences in the input\ngraph are actually IDs\
      \ instead of headers."
    synonyms:
    - --use-seq-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Write the sequences to the generated GFA file.\nThis requires the\
      \ '--seqdb' to be provided."
    synonyms:
    - --write-seqs
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "STR   CSV file with a list of nodes to extract. Each\nline contains\
      \ 2 columns: <node_name> <label>.\nThe label will be used to name the output\n\
      files."
    synonyms:
    - --csv-nodes
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "INT   Number of threads to use, 0 means\nautodetection. [0]"
    synonyms:
    - -j
    - --num-threads
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "STR   Set log level. Valid choices: (TRACE, DEBUG,\nINFO, WARN,\
      \ FATAL). [WARN]"
    synonyms:
    - --log-level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: FILE  Log to a file, instead of stderr.
    synonyms:
    - --log-file
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "subgraph - Extract a subgraph from a given assembly graph.\n\nUsage:\n\
    \  subgraph [options] <in_sg> <out_prefix> <node1 [node2 node3 ...]>\n\n  in_sg\
    \                    STR   Input string graph in the sg_edges_list\n         \
    \                        format.\n  out_prefix               STR   Output prefix.\n\
    \  node1 [node2 node3 ...]  STR   One or more nodes to extract the subgraph for.\n\
    \nAlgorithm Options:\n  --directed                     Apply the directed ego-graph\
    \ algorithm to\n                                 extract the subgraph.\n  --radius\
    \                 INT   Radius (in the number of nodes) to extract in\n      \
    \                           each direction. [100]\n  --tp                    \
    \ STR   Path to a tiling path file. If specified, it\n                       \
    \          will be used to create the Bandage CSV.\n  --seqdb                \
    \  STR   Path to a SeqDB file. If specified, it will be\n                    \
    \             used to retrieve lengths of sequences.\n  --use-seq-ids        \
    \          Indicates that the sequences in the input\n                       \
    \          graph are actually IDs instead of headers.\n  --write-seqs        \
    \           Write the sequences to the generated GFA file.\n                 \
    \                This requires the '--seqdb' to be provided.\n  --csv-nodes  \
    \            STR   CSV file with a list of nodes to extract. Each\n          \
    \                       line contains 2 columns: <node_name> <label>.\n      \
    \                           The label will be used to name the output\n      \
    \                           files.\n\n  -h,--help                      Show this\
    \ help and exit.\n  --version                      Show application version and\
    \ exit.\n  -j,--num-threads         INT   Number of threads to use, 0 means\n\
    \                                 autodetection. [0]\n  --log-level          \
    \    STR   Set log level. Valid choices: (TRACE, DEBUG,\n                    \
    \             INFO, WARN, FATAL). [WARN]\n  --log-file               FILE  Log\
    \ to a file, instead of stderr.\n\n"
  generated_using: *id004
- !Command
  command: *id009
  positional:
  - !Positional
    description: "STR   Path to a SeqDB file with reads which will be used\nto compose\
      \ the sequences."
    position: 0
    name: in_reads_fn
    optional: false
  - !Positional
    description: STR   Path to a TilingPath file.
    position: 1
    name: in_tiling_path_fn
    optional: false
  - !Positional
    description: STR   Output FASTA filename.
    position: 2
    name: out_fn
    optional: false
  - !Positional
    description: --batch-mb         INT   Batch size in Mbp. Reads for a batch of
      contigs are
    position: 0
    name: coordinates.
    optional: false
  named:
  - !Flag
    description: "The input tiling path contains sequence IDs instead\nof read names."
    synonyms:
    - --use-seq-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Assumes that the input tiling paths were constructed\nin the homopolymer-compressed\
      \ space, and expands the\nsequences during sequence construction."
    synonyms:
    - --use-hpc
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Realigns the tiling path edges to improve tiling
    synonyms:
    - --realign
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: INT   Number of threads to use, 0 means autodetection. [0]
    synonyms:
    - -j
    - --num-threads
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "STR   Set log level. Valid choices: (TRACE, DEBUG, INFO,\nWARN,\
      \ FATAL). [WARN]"
    synonyms:
    - --log-level
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: FILE  Log to a file, instead of stderr.
    synonyms:
    - --log-file
    args: !EmptyFlagArg {}
    optional: true
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "tp2seq - Construct contig sequences from a given tiling path file.\n\
    \nUsage:\n  tp2seq [options] <in_reads_fn> <in_tiling_path_fn> <out_fn>\n\n  in_reads_fn\
    \        STR   Path to a SeqDB file with reads which will be used\n          \
    \                 to compose the sequences.\n  in_tiling_path_fn  STR   Path to\
    \ a TilingPath file.\n  out_fn             STR   Output FASTA filename.\n\nAlgorithm\
    \ Options:\n  --use-seq-ids            The input tiling path contains sequence\
    \ IDs instead\n                           of read names.\n  --use-hpc        \
    \        Assumes that the input tiling paths were constructed\n              \
    \             in the homopolymer-compressed space, and expands the\n         \
    \                  sequences during sequence construction.\n  --realign      \
    \          Realigns the tiling path edges to improve tiling\n                \
    \           coordinates.\n  --batch-mb         INT   Batch size in Mbp. Reads\
    \ for a batch of contigs are\n                           loaded at once so that\
    \ all reads total in roughly\n                           this size. [1000]\n\n\
    \  -h,--help                Show this help and exit.\n  --version            \
    \    Show application version and exit.\n  -j,--num-threads   INT   Number of\
    \ threads to use, 0 means autodetection. [0]\n  --log-level        STR   Set log\
    \ level. Valid choices: (TRACE, DEBUG, INFO,\n                           WARN,\
    \ FATAL). [WARN]\n  --log-file         FILE  Log to a file, instead of stderr.\n\
    \n"
  generated_using: *id004
- !Command
  command: *id010
  positional:
  - !Positional
    description: STR  Input M4.
    position: 0
    name: in.m4
    optional: false
  - !Positional
    description: STR  Output M4.
    position: 1
    name: out.m4
    optional: false
  named: []
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "pblayout m4-to-m4 - Convert M4 to M4.\n\nUsage:\n  pblayout m4-to-m4\
    \ [options] <in.m4> <out.m4>\n\n  in.m4      STR  Input M4.\n  out.m4     STR\
    \  Output M4.\n\nOptions:\n  -h,--help       Show this help and exit.\n  --version\
    \       Show application version and exit.\n\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "pblayout - PacBio assembly tool.\n\nUsage:\n  pblayout <tool>\n\n  -h,--help\
  \    Show this help and exit.\n  --version    Show application version and exit.\n\
  \nTools:\n  dedup-actg Deduplicate alternative bubble branches (associate contigs).\
  \ Only unphased bubbles are deduplicated based on alignment identity and length.\n\
  \  m4-to-m4   Convert M4 to M4.\n  m4-to-sg   Convert M4 to SG.\n  m4-to-g    Convert\
  \ M4 to Graph (like ovlp_to_graph).\n  sg-to-sg   Convert SG to SG.\n  read-to-contig\
  \ Assign reads to a tiling path based on overlaps.\n  m4-to-sg-to-gfa1 Convert M4\
  \ to GFA1, via intermediate string graph.\n  m4-index   Generate M4 index file.\n\
  \  tp2seq     Construct contig sequences from a given tiling path file.\n  subgraph\
  \   Extract a subgraph from a given assembly graph.\n\n"
generated_using: *id004
