!Command
command:
- bammarkduplicates
positional: []
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "This is biobambam2 version 2.0.87.\nbiobambam2 is distributed under version\
  \ 3 of the GNU General Public License.\n\nKey=Value pairs:\n\nI=<filename>     \
  \             : input file, stdin if unset\nO=<filename>                  : output\
  \ file, stdout if unset\nM=<filename>                  : metrics file, stderr if\
  \ unset\nD=<filename>                  : duplicates output file if rmdup=1\ntmpfile=<filename>\
  \            : prefix for temporary files, default: create files in current directory\n\
  level=<[-1]>                  : compression settings for output bam file (-1=zlib\
  \ default,0=uncompressed,1=fast,9=best)\nmarkthreads=<[1]>             : number\
  \ of helper threads\nverbose=<[1]>                 : print progress report (default:\
  \ 1)\nmod=<[1048576]>               : print progress for each mod'th record/alignment\n\
  rewritebam=<[0]>              : compression of temporary alignment file when input\
  \ is via stdin (0=snappy,1=gzip/bam,2=copy)\nrewritebamlevel=<[-1]>        : compression\
  \ setting for rewritten input file if rewritebam=1 (-1=zlib default,0=uncompressed,1=fast,9=best)\n\
  rmdup=<[0]>                   : remove duplicates (default: 0)\nmd5=<[0]>      \
  \               : create md5 check sum (default: 0)\nmd5filename=<filename>    \
  \    : file name for md5 check sum (default: extend output file name)\nindex=<[0]>\
  \                   : create BAM index (default: 0)\nindexfilename=<filename>  \
  \    : file name for BAM index file (default: extend output file name)\ntag=<[a-zA-Z][a-zA-Z0-9]>\
  \     : aux field id for tag string extraction\nnucltag=<[a-zA-Z][a-zA-Z0-9]> :\
  \ aux field id for nucleotide tag extraction\ncolhashbits=<[20]>            : log_2\
  \ of size of hash table used for collation\ncollistsize=<[33554432]>      : output\
  \ list size for collation\nfragbufsize=<[50331648]>      : size of each fragment/pair\
  \ file buffer in bytes\nD=<filename>                  : duplicates output file if\
  \ rmdup=1\ndupmd5=<[0]>                  : create md5 check sum for duplicates output\
  \ file (default: 0)\ndupmd5filename=<filename>     : file name for md5 check sum\
  \ of dup file (default: extend duplicates output file name)\ndupindex=<[0]>    \
  \            : create BAM index for duplicates file (default: 0)\ndupindexfilename=<filename>\
  \   : file name for BAM index file for duplicates file (default: extend duplicates\
  \ output file name)\noptminpixeldif=<[100]>        : pixel difference threshold\
  \ for optical duplicates (default: 100)\n\n"
generated_using:
- --help
docker_image:
