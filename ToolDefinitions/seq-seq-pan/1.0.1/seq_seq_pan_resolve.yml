&id001 !Command
command:
- seq-seq-pan
- resolve
positional:
- !Positional
  description: ''
  position: 0
  name: seqseqpan.py
  optional: false
- !Positional
  description: ''
  position: 1
  name: resolve
  optional: false
named:
- !Flag
  description: Suppress warnings.
  synonyms:
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default: 0]"
  synonyms:
  - -o
  - --order
  args: !SimpleFlagArg
    name: ORDER
  optional: true
- !Flag
  description: path to output directory
  synonyms:
  - -p
  - --output_path
  args: !SimpleFlagArg
    name: OUTPUT_P
  optional: true
- !Flag
  description: "File prefix and sequence header for output FASTA /\nXFMA file"
  synonyms:
  - -n
  - --name
  args: !SimpleFlagArg
    name: OUTPUT_NAME
  optional: true
- !Flag
  description: XMFA input file
  synonyms:
  - -x
  - --xmfa
  args: !SimpleFlagArg
    name: XMFA_F
  optional: true
- !Flag
  description: "consensus FASTA file used in XMFA\n"
  synonyms:
  - -c
  - --consensus
  args: !SimpleFlagArg
    name: CONSENSUS_F
  optional: true
parent: &id002 !Command
  command:
  - seq-seq-pan
  positional: []
  named: []
  parent:
  subcommands:
  - *id001
  - !Command
    command:
    - seq-seq-pan
    - map
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: map
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: consensus FASTA file used in XMFA
      synonyms:
      - -c
      - --consensus
      args: !SimpleFlagArg
        name: CONSENSUS_F
      optional: true
    - !Flag
      description: "File with indices to map. First line:\nsource_seq<TAB>dest_seq[,dest_seq2,...]\
        \ using \"c\" or\nsequence number. Then one coordinate per line.\nCoordinates\
        \ are 1-based!\n"
      synonyms:
      - -i
      - --index
      args: !SimpleFlagArg
        name: COORD_F
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py map [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -c\n                        CONSENSUS_F -i COORD_F\n\nMap positions/coordinates\
      \ from consensus to sequences, between sequences, ...\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --quiet        \
      \       Suppress warnings.\n\nrequired arguments:\n  -p OUTPUT_P, --output_path\
      \ OUTPUT_P\n                        path to output directory\n  -n OUTPUT_NAME,\
      \ --name OUTPUT_NAME\n                        File prefix and sequence header\
      \ for output FASTA /\n                        XFMA file\n  -c CONSENSUS_F, --consensus\
      \ CONSENSUS_F\n                        consensus FASTA file used in XMFA\n \
      \ -i COORD_F, --index COORD_F\n                        File with indices to\
      \ map. First line:\n                        source_seq<TAB>dest_seq[,dest_seq2,...]\
      \ using \"c\" or\n                        sequence number. Then one coordinate\
      \ per line.\n                        Coordinates are 1-based!\n"
    generated_using: &id003
    - --help
  - !Command
    command:
    - seq-seq-pan
    - realign
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: realign
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: Path to blat binary if not in $PATH.
      synonyms:
      - --blat
      args: !SimpleFlagArg
        name: BLAT_PATH
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: "XMFA input file\n"
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py realign [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x\n                            XMFA_F [-o ORDER] [--blat BLAT_PATH]\n\nRealign\
      \ sequences of LCBs around consecutive gaps. Can only be used with two\naligned\
      \ sequences.\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  --quiet               Suppress warnings.\n  -o ORDER,\
      \ --order ORDER\n                        Ordering of blocks in XMFA/FASTA output\
      \ (0,1,2,...)\n                        [default: 0]\n  --blat BLAT_PATH    \
      \  Path to blat binary if not in $PATH.\n\nrequired arguments:\n  -p OUTPUT_P,\
      \ --output_path OUTPUT_P\n                        path to output directory\n\
      \  -n OUTPUT_NAME, --name OUTPUT_NAME\n                        File prefix and\
      \ sequence header for output FASTA /\n                        XFMA file\n  -x\
      \ XMFA_F, --xmfa XMFA_F\n                        XMFA input file\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - subcommand
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py [-h] subcommand ...\nseqseqpan.py: error: argument\
      \ subcommand: invalid choice: 'subcommand' (choose from 'blockcountsplit', 'extract',\
      \ 'join', 'maf', 'map', 'merge', 'realign', 'reconstruct', 'remove', 'resolve',\
      \ 'separate', 'split', 'xmfa')\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - separate
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: separate
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: 'Length of "small LCB". [default: 10]'
      synonyms:
      - -l
      - --length
      args: !SimpleFlagArg
        name: LCB_LENGTH
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: "XMFA input file\n"
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py separate [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x\n                             XMFA_F [-o ORDER] [-l LCB_LENGTH]\n\nSeparate\
      \ small multi-sequence LCBs to form genome specific entries.\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --quiet        \
      \       Suppress warnings.\n  -o ORDER, --order ORDER\n                    \
      \    Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n                 \
      \       [default: 0]\n  -l LCB_LENGTH, --length LCB_LENGTH\n               \
      \         Length of \"small LCB\". [default: 10]\n\nrequired arguments:\n  -p\
      \ OUTPUT_P, --output_path OUTPUT_P\n                        path to output directory\n\
      \  -n OUTPUT_NAME, --name OUTPUT_NAME\n                        File prefix and\
      \ sequence header for output FASTA /\n                        XFMA file\n  -x\
      \ XMFA_F, --xmfa XMFA_F\n                        XMFA input file\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - xmfa
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: xmfa
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: "XMFA input file\n"
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py xmfa [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x XMFA_F\n                         [-o ORDER]\n\nWrite XMFA file from XMFA\
      \ file (for reordering or checking validity).\n\noptional arguments:\n  -h,\
      \ --help            show this help message and exit\n  --quiet             \
      \  Suppress warnings.\n  -o ORDER, --order ORDER\n                        Ordering\
      \ of blocks in XMFA/FASTA output (0,1,2,...)\n                        [default:\
      \ 0]\n\nrequired arguments:\n  -p OUTPUT_P, --output_path OUTPUT_P\n       \
      \                 path to output directory\n  -n OUTPUT_NAME, --name OUTPUT_NAME\n\
      \                        File prefix and sequence header for output FASTA /\n\
      \                        XFMA file\n  -x XMFA_F, --xmfa XMFA_F\n           \
      \             XMFA input file\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - extract
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: extract
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: XMFA input file
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    - !Flag
      description: "File containing genome description (name/chromosomes)\nfor .MAF\
        \ file creation and 'split' task. Format:\n'genome id<TAB>name<TAB>length'\
        \ Length information is\nonly necessary for FASTA files containing more than\n\
        one chromosome. Multiple chromosomes of a genome must\nbe listed in the same\
        \ order as in original FASTA file."
      synonyms:
      - -g
      - --genome_desc
      args: !SimpleFlagArg
        name: GENOME_DESC_F
      optional: true
    - !Flag
      description: "Region to extract in the form genome_nr:start-end (one\nbased\
        \ and inclusive) or only genome_nr for full\nsequence.\n"
      synonyms:
      - -e
      - --extractregion
      args: !SimpleFlagArg
        name: REGION
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py extract [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x\n                            XMFA_F -g GENOME_DESC_F -e REGION\n\nExtract\
      \ sequence for whole genome or genomic interval.\n\noptional arguments:\n  -h,\
      \ --help            show this help message and exit\n  --quiet             \
      \  Suppress warnings.\n\nrequired arguments:\n  -p OUTPUT_P, --output_path OUTPUT_P\n\
      \                        path to output directory\n  -n OUTPUT_NAME, --name\
      \ OUTPUT_NAME\n                        File prefix and sequence header for output\
      \ FASTA /\n                        XFMA file\n  -x XMFA_F, --xmfa XMFA_F\n \
      \                       XMFA input file\n  -g GENOME_DESC_F, --genome_desc GENOME_DESC_F\n\
      \                        File containing genome description (name/chromosomes)\n\
      \                        for .MAF file creation and 'split' task. Format:\n\
      \                        'genome id<TAB>name<TAB>length' Length information\
      \ is\n                        only necessary for FASTA files containing more\
      \ than\n                        one chromosome. Multiple chromosomes of a genome\
      \ must\n                        be listed in the same order as in original FASTA\
      \ file.\n  -e REGION, --extractregion REGION\n                        Region\
      \ to extract in the form genome_nr:start-end (one\n                        based\
      \ and inclusive) or only genome_nr for full\n                        sequence.\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - entries.
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py [-h] subcommand ...\nseqseqpan.py: error: argument\
      \ subcommand: invalid choice: 'entries.' (choose from 'blockcountsplit', 'extract',\
      \ 'join', 'maf', 'map', 'merge', 'realign', 'reconstruct', 'remove', 'resolve',\
      \ 'separate', 'split', 'xmfa')\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - join
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: join
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: XMFA input file
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    - !Flag
      description: "XMFA file to be joined with input file.\n"
      synonyms:
      - -y
      - --xmfa_two
      args: !SimpleFlagArg
        name: XMFA_F_2
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py join [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x XMFA_F\n                         [-o ORDER] -y XMFA_F_2\n\nJoin LCBs from\
      \ 2 XMFA files, assigning genome_ids as in first XMFA file (-x).\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --quiet\
      \               Suppress warnings.\n  -o ORDER, --order ORDER\n            \
      \            Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n         \
      \               [default: 0]\n\nrequired arguments:\n  -p OUTPUT_P, --output_path\
      \ OUTPUT_P\n                        path to output directory\n  -n OUTPUT_NAME,\
      \ --name OUTPUT_NAME\n                        File prefix and sequence header\
      \ for output FASTA /\n                        XFMA file\n  -x XMFA_F, --xmfa\
      \ XMFA_F\n                        XMFA input file\n  -y XMFA_F_2, --xmfa_two\
      \ XMFA_F_2\n                        XMFA file to be joined with input file.\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - reconstruct
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: reconstruct
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: XMFA input file
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    - !Flag
      description: "consensus FASTA file used in XMFA\n"
      synonyms:
      - -c
      - --consensus
      args: !SimpleFlagArg
        name: CONSENSUS_F
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py reconstruct [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x\n                                XMFA_F -c CONSENSUS_F [-o ORDER]\n\nBuild\
      \ alignment of all genomes from .XMFA file with new genome aligned to\nconsensus\
      \ sequence.\n\noptional arguments:\n  -h, --help            show this help message\
      \ and exit\n  --quiet               Suppress warnings.\n  -o ORDER, --order\
      \ ORDER\n                        Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n\
      \                        [default: 0]\n\nrequired arguments:\n  -p OUTPUT_P,\
      \ --output_path OUTPUT_P\n                        path to output directory\n\
      \  -n OUTPUT_NAME, --name OUTPUT_NAME\n                        File prefix and\
      \ sequence header for output FASTA /\n                        XFMA file\n  -x\
      \ XMFA_F, --xmfa XMFA_F\n                        XMFA input file\n  -c CONSENSUS_F,\
      \ --consensus CONSENSUS_F\n                        consensus FASTA file used\
      \ in XMFA\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - maf
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: maf
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -g
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -x
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -n
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -p
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py maf [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x XMFA_F -g\n                        GENOME_DESC_F\nseqseqpan.py maf: error:\
      \ the following arguments are required: -p/--output_path, -n/--name, -x/--xmfa,\
      \ -g/--genome_desc\n"
    generated_using: []
  - !Command
    command:
    - seq-seq-pan
    - remove
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: remove
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: XMFA input file
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    - !Flag
      description: "Number of genome to remove (as shown in XMFA header)\n"
      synonyms:
      - -r
      - --removegenome
      args: !SimpleFlagArg
        name: RM_GENOME
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py remove [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x XMFA_F\n                           [-o ORDER] -r RM_GENOME\n\nRemove a\
      \ genome from all LCBs in alignment.\n\noptional arguments:\n  -h, --help  \
      \          show this help message and exit\n  --quiet               Suppress\
      \ warnings.\n  -o ORDER, --order ORDER\n                        Ordering of\
      \ blocks in XMFA/FASTA output (0,1,2,...)\n                        [default:\
      \ 0]\n\nrequired arguments:\n  -p OUTPUT_P, --output_path OUTPUT_P\n       \
      \                 path to output directory\n  -n OUTPUT_NAME, --name OUTPUT_NAME\n\
      \                        File prefix and sequence header for output FASTA /\n\
      \                        XFMA file\n  -x XMFA_F, --xmfa XMFA_F\n           \
      \             XMFA input file\n  -r RM_GENOME, --removegenome RM_GENOME\n  \
      \                      Number of genome to remove (as shown in XMFA header)\n"
    generated_using: *id003
  - !Command
    command:
    - seq-seq-pan
    - merge
    positional:
    - !Positional
      description: ''
      position: 0
      name: seqseqpan.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: merge
      optional: false
    named:
    - !Flag
      description: Suppress warnings.
      synonyms:
      - --quiet
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Ordering of blocks in XMFA/FASTA output (0,1,2,...)\n[default:\
        \ 0]"
      synonyms:
      - -o
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: 'Length of "small LCB". [default: 10]'
      synonyms:
      - -l
      - --length
      args: !SimpleFlagArg
        name: LCB_LENGTH
      optional: true
    - !Flag
      description: path to output directory
      synonyms:
      - -p
      - --output_path
      args: !SimpleFlagArg
        name: OUTPUT_P
      optional: true
    - !Flag
      description: "File prefix and sequence header for output FASTA /\nXFMA file"
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: OUTPUT_NAME
      optional: true
    - !Flag
      description: "XMFA input file\n"
      synonyms:
      - -x
      - --xmfa
      args: !SimpleFlagArg
        name: XMFA_F
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: seqseqpan.py merge [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
      \ -x XMFA_F\n                          [-o ORDER] [-l LCB_LENGTH]\n\nAdd small\
      \ LCBs to end or beginning of surrounding LCBs. Can only be used with\ntwo aligned\
      \ sequences.\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  --quiet               Suppress warnings.\n  -o ORDER,\
      \ --order ORDER\n                        Ordering of blocks in XMFA/FASTA output\
      \ (0,1,2,...)\n                        [default: 0]\n  -l LCB_LENGTH, --length\
      \ LCB_LENGTH\n                        Length of \"small LCB\". [default: 10]\n\
      \nrequired arguments:\n  -p OUTPUT_P, --output_path OUTPUT_P\n             \
      \           path to output directory\n  -n OUTPUT_NAME, --name OUTPUT_NAME\n\
      \                        File prefix and sequence header for output FASTA /\n\
      \                        XFMA file\n  -x XMFA_F, --xmfa XMFA_F\n           \
      \             XMFA input file\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: seqseqpan.py [-h] subcommand ...\n\nseq-seq-pan - Working with\
    \ the Pan-genome\n\noptional arguments:\n  -h, --help       show this help message\
    \ and exit\n\nsubcommands:\n\n  subcommand\n    blockcountsplit\n            \
    \       Split XMFA of 2 genomes into 3 XMFA files: blocks with both\n        \
    \           genomes and genome-specific blocks for each genome.\n    extract \
    \       Extract sequence for whole genome or genomic interval.\n    join     \
    \      Join LCBs from 2 XMFA files, assigning genome_ids as in\n             \
    \      first XMFA file (-x).\n    maf            Write MAF file from XMFA file.\n\
    \    map            Map positions/coordinates from consensus to sequences,\n \
    \                  between sequences, ...\n    merge          Add small LCBs to\
    \ end or beginning of surrounding LCBs. Can\n                   only be used with\
    \ two aligned sequences.\n    realign        Realign sequences of LCBs around\
    \ consecutive gaps. Can only\n                   be used with two aligned sequences.\n\
    \    reconstruct    Build alignment of all genomes from .XMFA file with new\n\
    \                   genome aligned to consensus sequence.\n    remove        \
    \ Remove a genome from all LCBs in alignment.\n    resolve        Resolve LCBs\
    \ stretching over delimiter sequences.\n    separate       Separate small multi-sequence\
    \ LCBs to form genome specific\n                   entries.\n    split       \
    \   Split LCBs according to chromosome annotation.\n    xmfa           Write XMFA\
    \ file from XMFA file (for reordering or checking\n                   validity).\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: seqseqpan.py resolve [-h] [--quiet] -p OUTPUT_P -n OUTPUT_NAME\
  \ -x\n                            XMFA_F -c CONSENSUS_F [-o ORDER]\n\nResolve LCBs\
  \ stretching over delimiter sequences.\n\noptional arguments:\n  -h, --help    \
  \        show this help message and exit\n  --quiet               Suppress warnings.\n\
  \  -o ORDER, --order ORDER\n                        Ordering of blocks in XMFA/FASTA\
  \ output (0,1,2,...)\n                        [default: 0]\n\nrequired arguments:\n\
  \  -p OUTPUT_P, --output_path OUTPUT_P\n                        path to output directory\n\
  \  -n OUTPUT_NAME, --name OUTPUT_NAME\n                        File prefix and sequence\
  \ header for output FASTA /\n                        XFMA file\n  -x XMFA_F, --xmfa\
  \ XMFA_F\n                        XMFA input file\n  -c CONSENSUS_F, --consensus\
  \ CONSENSUS_F\n                        consensus FASTA file used in XMFA\n"
generated_using: *id003
