!Command
command:
- NanoComp
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: Set the allowed number of threads to be used by the script
  args: !SimpleFlagArg
    name: THREADS
- !Flag
  optional: true
  synonyms:
  - -o
  - --outdir
  description: Specify directory in which output has to be created.
  args: !SimpleFlagArg
    name: OUTDIR
- !Flag
  optional: true
  synonyms:
  - -p
  - --prefix
  description: Specify an optional prefix to be used for the output files.
  args: !SimpleFlagArg
    name: PREFIX
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: Write log messages also to terminal.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --raw
  description: Store the extracted data in tab separated file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --store
  description: Store the extracted data in a pickle file for future plotting.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tsv_stats
  description: Output the stats file as a properly formatted TSV.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --readtype
  description: "Which read type to extract information about from summary. Options\
    \ are 1D, 2D,\n1D2"
  args: !ChoiceFlagArg
    choices: !!set
      2D:
      1D:
      1D2:
- !Flag
  optional: true
  synonyms:
  - --maxlength
  description: Drop reads longer than length specified.
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --minlength
  description: Drop reads shorter than length specified.
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --barcoded
  description: Barcoded experiment in summary format, splitting per barcode.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --split_runs
  description: "File: Split the summary on run IDs and use names in tsv file. Mandatory\
    \ header\nfields are 'NAME' and 'RUN_ID'."
  args: !SimpleFlagArg
    name: TSV_FILE
- !Flag
  optional: true
  synonyms:
  - -f
  - --format
  description: Specify the output format of the plots.
  args: !ChoiceFlagArg
    choices: !!set
      jpeg:
      svgz:
      pgf:
      tiff:
      eps:
      svg:
      png:
      pdf:
      jpg:
      rgba:
      raw:
      ps:
      tif:
- !Flag
  optional: true
  synonyms:
  - -n
  - --names
  description: Specify the names to be used for the datasets
  args: !RepeatFlagArg
    name: names
- !Flag
  optional: true
  synonyms:
  - -c
  - --colors
  description: Specify the colors to be used for the datasets
  args: !RepeatFlagArg
    name: colors
- !Flag
  optional: true
  synonyms:
  - --plot
  description: "Which plot type to use: 'box', 'violin' (default), 'ridge' (joyplot)\
    \ or 'false'\n(no plots)"
  args: !ChoiceFlagArg
    choices: !!set
      violin:
      box:
      'false':
      ridge:
- !Flag
  optional: true
  synonyms:
  - --title
  description: Add a title to all plots, requires quoting if using spaces
  args: !SimpleFlagArg
    name: TITLE
- !Flag
  optional: true
  synonyms:
  - --dpi
  description: Set the dpi for saving images
  args: !SimpleFlagArg
    name: DPI
- !Flag
  optional: true
  synonyms:
  - --fasta
  description: Data is in (compressed) fasta format.
  args: !RepeatFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --fastq
  description: Data is in (compressed) fastq format.
  args: !RepeatFlagArg
    name: files
- !Flag
  optional: true
  synonyms:
  - --summary
  description: Data is in (compressed) summary files generated by albacore or guppy.
  args: !RepeatFlagArg
    name: files
- !Flag
  optional: true
  synonyms:
  - --bam
  description: Data is in sorted bam files.
  args: !RepeatFlagArg
    name: files
- !Flag
  optional: true
  synonyms:
  - --ubam
  description: Data is in one or more unmapped bam file(s).
  args: !RepeatFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --cram
  description: Data is in one or more sorted cram file(s).
  args: !RepeatFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --pickle
  description: Data is in one or more pickle file(s) from using NanoComp/NanoPlot.
  args: !RepeatFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --feather
  description: Data is in one or more feather file(s).
  args: !RepeatFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -v
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show the help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: Print version and exit.
  args: !EmptyFlagArg {}
help_text: "usage: NanoComp [-h] [-v] [-t THREADS] [-o OUTDIR] [-p PREFIX] [--verbose]\n\
  \                [--raw] [--store] [--tsv_stats] [--readtype {1D,2D,1D2}]\n    \
  \            [--maxlength N] [--minlength N] [--barcoded]\n                [--split_runs\
  \ TSV_FILE]\n                [-f {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}]\n\
  \                [-n names [names ...]] [-c colors [colors ...]]\n             \
  \   [--plot {violin,box,ridge,false}] [--title TITLE] [--dpi DPI]\n            \
  \    (--fasta file [file ...] | --fastq files [files ...] | --summary files [files\
  \ ...] | --bam files [files ...] | --ubam file [file ...] | --cram file [file ...]\
  \ | --pickle file [file ...] | --feather file [file ...])\n\nCompares long read\
  \ sequencing datasets.\n\nGeneral options:\n  -h, --help            show the help\
  \ and exit\n  -v, --version         Print version and exit.\n  -t, --threads THREADS\n\
  \                        Set the allowed number of threads to be used by the script\n\
  \  -o, --outdir OUTDIR   Specify directory in which output has to be created.\n\
  \  -p, --prefix PREFIX   Specify an optional prefix to be used for the output files.\n\
  \  --verbose             Write log messages also to terminal.\n  --raw         \
  \        Store the extracted data in tab separated file.\n  --store            \
  \   Store the extracted data in a pickle file for future plotting.\n  --tsv_stats\
  \           Output the stats file as a properly formatted TSV.\n\nOptions for filtering\
  \ or transforming input prior to plotting:\n  --readtype {1D,2D,1D2}\n         \
  \               Which read type to extract information about from summary. Options\
  \ are 1D, 2D,\n                        1D2\n  --maxlength N         Drop reads longer\
  \ than length specified.\n  --minlength N         Drop reads shorter than length\
  \ specified.\n  --barcoded            Barcoded experiment in summary format, splitting\
  \ per barcode.\n  --split_runs TSV_FILE\n                        File: Split the\
  \ summary on run IDs and use names in tsv file. Mandatory header\n             \
  \           fields are 'NAME' and 'RUN_ID'.\n\nOptions for customizing the plots\
  \ created:\n  -f, --format {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}\n\
  \                        Specify the output format of the plots.\n  -n, --names\
  \ names [names ...]\n                        Specify the names to be used for the\
  \ datasets\n  -c, --colors colors [colors ...]\n                        Specify\
  \ the colors to be used for the datasets\n  --plot {violin,box,ridge,false}\n  \
  \                      Which plot type to use: 'box', 'violin' (default), 'ridge'\
  \ (joyplot) or 'false'\n                        (no plots)\n  --title TITLE    \
  \     Add a title to all plots, requires quoting if using spaces\n  --dpi DPI  \
  \           Set the dpi for saving images\n\nInput data sources, one of these is\
  \ required.:\n  --fasta file [file ...]\n                        Data is in (compressed)\
  \ fasta format.\n  --fastq files [files ...]\n                        Data is in\
  \ (compressed) fastq format.\n  --summary files [files ...]\n                  \
  \      Data is in (compressed) summary files generated by albacore or guppy.\n \
  \ --bam files [files ...]\n                        Data is in sorted bam files.\n\
  \  --ubam file [file ...]\n                        Data is in one or more unmapped\
  \ bam file(s).\n  --cram file [file ...]\n                        Data is in one\
  \ or more sorted cram file(s).\n  --pickle file [file ...]\n                   \
  \     Data is in one or more pickle file(s) from using NanoComp/NanoPlot.\n  --feather\
  \ file [file ...]\n                        Data is in one or more feather file(s).\n\
  \nEXAMPLES:\n    NanoComp --bam alignment1.bam alignment2.bam --outdir compare-runs\n\
  \    NanoComp --fastq reads1.fastq.gz reads2.fastq.gz reads3.fastq.gz  --names run1\
  \ run2 run3\n    \n"
generated_using:
- --help
docker_image: quay.io/biocontainers/nanocomp:1.13.1--py_0
