!Command
command:
- NanoComp
positional: []
named:
- !Flag
  description: Set the allowed number of threads to be used by the script
  synonyms:
  - -t
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: Specify directory in which output has to be created.
  synonyms:
  - -o
  - --outdir
  args: !SimpleFlagArg
    name: OUTDIR
  optional: true
- !Flag
  description: Specify an optional prefix to be used for the output files.
  synonyms:
  - -p
  - --prefix
  args: !SimpleFlagArg
    name: PREFIX
  optional: true
- !Flag
  description: Write log messages also to terminal.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Store the extracted data in tab separated file.
  synonyms:
  - --raw
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Store the extracted data in a pickle file for future plotting.
  synonyms:
  - --store
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Which read type to extract information about from summary. Options\
    \ are 1D, 2D,\n1D2"
  synonyms:
  - --readtype
  args: !ChoiceFlagArg
    choices: !!set
      1D2:
      2D:
      1D:
  optional: true
- !Flag
  description: Drop reads longer than length specified.
  synonyms:
  - --maxlength
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Drop reads shorter than length specified.
  synonyms:
  - --minlength
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Barcoded experiment in summary format, splitting per barcode.
  synonyms:
  - --barcoded
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "File: Split the summary on run IDs and use names in tsv file. Mandatory\
    \ header\nfields are 'NAME' and 'RUN_ID'."
  synonyms:
  - --split_runs
  args: !SimpleFlagArg
    name: TSV_FILE
  optional: true
- !Flag
  description: Specify the output format of the plots.
  synonyms:
  - -f
  - --format
  args: !ChoiceFlagArg
    choices: !!set
      tiff:
      tif:
      svg:
      jpg:
      ps:
      pgf:
      raw:
      eps:
      png:
      jpeg:
      svgz:
      pdf:
      rgba:
  optional: true
- !Flag
  description: Specify the names to be used for the datasets
  synonyms:
  - -n
  - --names
  args: !RepeatFlagArg
    name: names
  optional: true
- !Flag
  description: Specify the colors to be used for the datasets
  synonyms:
  - -c
  - --colors
  args: !RepeatFlagArg
    name: colors
  optional: true
- !Flag
  description: "Which plot type to use: 'box', 'violin' (default), 'ridge' (joyplot)\
    \ or 'false'\n(no plots)"
  synonyms:
  - --plot
  args: !ChoiceFlagArg
    choices: !!set
      box:
      violin:
      ridge:
      'false':
  optional: true
- !Flag
  description: Add a title to all plots, requires quoting if using spaces
  synonyms:
  - --title
  args: !SimpleFlagArg
    name: TITLE
  optional: true
- !Flag
  description: Set the dpi for saving images
  synonyms:
  - --dpi
  args: !SimpleFlagArg
    name: DPI
  optional: true
- !Flag
  description: Data is in (compressed) fasta format.
  synonyms:
  - --fasta
  args: !RepeatFlagArg
    name: file
  optional: true
- !Flag
  description: Data is in (compressed) fastq format.
  synonyms:
  - --fastq
  args: !RepeatFlagArg
    name: files
  optional: true
- !Flag
  description: Data is in (compressed) summary files generated by albacore or guppy.
  synonyms:
  - --summary
  args: !RepeatFlagArg
    name: files
  optional: true
- !Flag
  description: Data is in sorted bam files.
  synonyms:
  - --bam
  args: !RepeatFlagArg
    name: files
  optional: true
- !Flag
  description: Data is in one or more unmapped bam file(s).
  synonyms:
  - --ubam
  args: !RepeatFlagArg
    name: file
  optional: true
- !Flag
  description: Data is in one or more sorted cram file(s).
  synonyms:
  - --cram
  args: !RepeatFlagArg
    name: file
  optional: true
- !Flag
  description: Data is in one or more pickle file(s) from using NanoComp/NanoPlot.
  synonyms:
  - --pickle
  args: !RepeatFlagArg
    name: file
  optional: true
- !Flag
  description: ''
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show the help and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print version and exit.
  synonyms:
  - -v
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: NanoComp [-h] [-v] [-t THREADS] [-o OUTDIR] [-p PREFIX] [--verbose]\n\
  \                [--raw] [--store] [--readtype {1D,2D,1D2}] [--maxlength N]\n  \
  \              [--minlength N] [--barcoded] [--split_runs TSV_FILE]\n          \
  \      [-f {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}]\n         \
  \       [-n names [names ...]] [-c colors [colors ...]]\n                [--plot\
  \ {violin,box,ridge,false}] [--title TITLE] [--dpi DPI]\n                (--fasta\
  \ file [file ...] | --fastq files [files ...] | --summary files [files ...] | --bam\
  \ files [files ...] | --ubam file [file ...] | --cram file [file ...] | --pickle\
  \ file [file ...])\n\nCompares long read sequencing datasets.\n\nGeneral options:\n\
  \  -h, --help            show the help and exit\n  -v, --version         Print version\
  \ and exit.\n  -t, --threads THREADS\n                        Set the allowed number\
  \ of threads to be used by the script\n  -o, --outdir OUTDIR   Specify directory\
  \ in which output has to be created.\n  -p, --prefix PREFIX   Specify an optional\
  \ prefix to be used for the output files.\n  --verbose             Write log messages\
  \ also to terminal.\n  --raw                 Store the extracted data in tab separated\
  \ file.\n  --store               Store the extracted data in a pickle file for future\
  \ plotting.\n\nOptions for filtering or transforming input prior to plotting:\n\
  \  --readtype {1D,2D,1D2}\n                        Which read type to extract information\
  \ about from summary. Options are 1D, 2D,\n                        1D2\n  --maxlength\
  \ N         Drop reads longer than length specified.\n  --minlength N         Drop\
  \ reads shorter than length specified.\n  --barcoded            Barcoded experiment\
  \ in summary format, splitting per barcode.\n  --split_runs TSV_FILE\n         \
  \               File: Split the summary on run IDs and use names in tsv file. Mandatory\
  \ header\n                        fields are 'NAME' and 'RUN_ID'.\n\nOptions for\
  \ customizing the plots created:\n  -f, --format {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}\n\
  \                        Specify the output format of the plots.\n  -n, --names\
  \ names [names ...]\n                        Specify the names to be used for the\
  \ datasets\n  -c, --colors colors [colors ...]\n                        Specify\
  \ the colors to be used for the datasets\n  --plot {violin,box,ridge,false}\n  \
  \                      Which plot type to use: 'box', 'violin' (default), 'ridge'\
  \ (joyplot) or 'false'\n                        (no plots)\n  --title TITLE    \
  \     Add a title to all plots, requires quoting if using spaces\n  --dpi DPI  \
  \           Set the dpi for saving images\n\nInput data sources, one of these is\
  \ required.:\n  --fasta file [file ...]\n                        Data is in (compressed)\
  \ fasta format.\n  --fastq files [files ...]\n                        Data is in\
  \ (compressed) fastq format.\n  --summary files [files ...]\n                  \
  \      Data is in (compressed) summary files generated by albacore or guppy.\n \
  \ --bam files [files ...]\n                        Data is in sorted bam files.\n\
  \  --ubam file [file ...]\n                        Data is in one or more unmapped\
  \ bam file(s).\n  --cram file [file ...]\n                        Data is in one\
  \ or more sorted cram file(s).\n  --pickle file [file ...]\n                   \
  \     Data is in one or more pickle file(s) from using NanoComp/NanoPlot.\n\nEXAMPLES:\n\
  \    NanoComp --bam alignment1.bam alignment2.bam --outdir compare-runs\n    NanoComp\
  \ --fastq reads1.fastq.gz reads2.fastq.gz reads3.fastq.gz  --names run1 run2 run3\n\
  \    \n"
generated_using:
- --help
