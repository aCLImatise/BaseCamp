!Command
command:
- jgoslin
positional:
- !Positional
  optional: false
  position: 0
  name: jgoslin-cli
  description: "-f,--file <arg>      Input a file name to read from for lipid name\
    \ for\nparsing. Each lipid name must be on a separate line."
named:
- !Flag
  optional: true
  synonyms:
  - -g
  - --grammar
  description: "Use the provided grammar explicitly instead of all\ngrammars. Options\
    \ are: [GOSLIN, GOSLIN_FRAGMENTS,\nLIPIDMAPS, SWISSLIPIDS, HMDB, NONE]"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -n
  - --name
  description: Input a lipid name for parsing.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -o
  - --outputFile
  description: "Write output to file 'goslin-out.tsv' instead of to\nstd out."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Print help message.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: Print version information.
  args: !EmptyFlagArg {}
help_text: "usage: jgoslin-cli\n -f,--file <arg>      Input a file name to read from\
  \ for lipid name for\n                      parsing. Each lipid name must be on\
  \ a separate line.\n -g,--grammar <arg>   Use the provided grammar explicitly instead\
  \ of all\n                      grammars. Options are: [GOSLIN, GOSLIN_FRAGMENTS,\n\
  \                      LIPIDMAPS, SWISSLIPIDS, HMDB, NONE]\n -h,--help         \
  \   Print help message.\n -n,--name <arg>      Input a lipid name for parsing.\n\
  \ -o,--outputFile      Write output to file 'goslin-out.tsv' instead of to\n   \
  \                   std out.\n -v,--version         Print version information.\n"
generated_using:
- --help
docker_image:
