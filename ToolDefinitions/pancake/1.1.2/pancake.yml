!Command
command: &id001
- pancake
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - pancake
  - create
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --sequences
    - -s
    description: "fasta or multiple fasta file providing input\nchromosome sequences"
    args: !RepeatFlagArg
      name: SEQUENCES
  - !Flag
    optional: true
    synonyms:
    - --ids
    - -i
    description: gi ids of sequences to download from NCBI
    args: !RepeatFlagArg
      name: IDS
  - !Flag
    optional: true
    synonyms:
    - --email
    - -e
    description: "if downloading your sequences via gi ids, please\nspecify your email\
      \ address; in case of excessive\nusage, NCBI will attempt to contact a user\
      \ at the\ne-mail address provided prior to blocking access to\nthe E-utilities"
    args: !SimpleFlagArg
      name: EMAIL
  - !Flag
    optional: true
    synonyms:
    - --pan_file
    - -p
    description: "File name of new PanCake Object\n(DEFAULT=pan_files/pancake.pan)"
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --ali
    description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments (BLAST\
      \ or nucmer output) to\ninclude in PanCake Object"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --min_len
    - -l
    description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
    args: !SimpleFlagArg
      name: MIN_LEN
  - !Flag
    optional: true
    synonyms:
    - --no_self_alignments
    - -nsa
    description: "if set, skip pairwise alignments between regions on\nidentical chromosomes\
      \ as input (DEFAULT=False)\n"
    args: !EmptyFlagArg {}
  parent: &id016 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --sequences
        - -s
        description: "fasta or multiple fasta file providing input\nchromosome sequences"
        args: !RepeatFlagArg
          name: SEQUENCES
      - !Flag
        optional: true
        synonyms:
        - --ids
        - -i
        description: gi ids of sequences to download from NCBI
        args: !RepeatFlagArg
          name: IDS
      - !Flag
        optional: true
        synonyms:
        - --email
        - -e
        description: "if downloading your sequences via gi ids, please\nspecify your\
          \ email address; in case of excessive\nusage, NCBI will attempt to contact\
          \ a user at the\ne-mail address provided prior to blocking access to\nthe\
          \ E-utilities"
        args: !SimpleFlagArg
          name: EMAIL
      - !Flag
        optional: true
        synonyms:
        - --pan_file
        - -p
        description: "File name of new PanCake Object\n(DEFAULT=pan_files/pancake.pan)"
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --ali
        description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments (BLAST\
          \ or nucmer output) to\ninclude in PanCake Object"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --min_len
        - -l
        description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
        args: !SimpleFlagArg
          name: MIN_LEN
      - !Flag
        optional: true
        synonyms:
        - --no_self_alignments
        - -nsa
        description: "if set, skip pairwise alignments between regions on\nidentical\
          \ chromosomes as input (DEFAULT=False)\n"
        args: !EmptyFlagArg {}
      parent: &id015 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --sequences
            - -s
            description: "fasta or multiple fasta file providing input\nchromosome\
              \ sequences"
            args: !RepeatFlagArg
              name: SEQUENCES
          - !Flag
            optional: true
            synonyms:
            - --ids
            - -i
            description: gi ids of sequences to download from NCBI
            args: !RepeatFlagArg
              name: IDS
          - !Flag
            optional: true
            synonyms:
            - --email
            - -e
            description: "if downloading your sequences via gi ids, please\nspecify\
              \ your email address; in case of excessive\nusage, NCBI will attempt\
              \ to contact a user at the\ne-mail address provided prior to blocking\
              \ access to\nthe E-utilities"
            args: !SimpleFlagArg
              name: EMAIL
          - !Flag
            optional: true
            synonyms:
            - --pan_file
            - -p
            description: "File name of new PanCake Object\n(DEFAULT=pan_files/pancake.pan)"
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --ali
            description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments\
              \ (BLAST or nucmer output) to\ninclude in PanCake Object"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --min_len
            - -l
            description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
            args: !SimpleFlagArg
              name: MIN_LEN
          - !Flag
            optional: true
            synonyms:
            - --no_self_alignments
            - -nsa
            description: "if set, skip pairwise alignments between regions on\nidentical\
              \ chromosomes as input (DEFAULT=False)\n"
            args: !EmptyFlagArg {}
          parent: &id014 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --sequences
                - -s
                description: "fasta or multiple fasta file providing input\nchromosome\
                  \ sequences"
                args: !RepeatFlagArg
                  name: SEQUENCES
              - !Flag
                optional: true
                synonyms:
                - --ids
                - -i
                description: gi ids of sequences to download from NCBI
                args: !RepeatFlagArg
                  name: IDS
              - !Flag
                optional: true
                synonyms:
                - --email
                - -e
                description: "if downloading your sequences via gi ids, please\nspecify\
                  \ your email address; in case of excessive\nusage, NCBI will attempt\
                  \ to contact a user at the\ne-mail address provided prior to blocking\
                  \ access to\nthe E-utilities"
                args: !SimpleFlagArg
                  name: EMAIL
              - !Flag
                optional: true
                synonyms:
                - --pan_file
                - -p
                description: "File name of new PanCake Object\n(DEFAULT=pan_files/pancake.pan)"
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --ali
                description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments\
                  \ (BLAST or nucmer output) to\ninclude in PanCake Object"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --min_len
                - -l
                description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
                args: !SimpleFlagArg
                  name: MIN_LEN
              - !Flag
                optional: true
                synonyms:
                - --no_self_alignments
                - -nsa
                description: "if set, skip pairwise alignments between regions on\n\
                  identical chromosomes as input (DEFAULT=False)\n"
                args: !EmptyFlagArg {}
              parent: &id013 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --sequences
                    - -s
                    description: "fasta or multiple fasta file providing input\nchromosome\
                      \ sequences"
                    args: !RepeatFlagArg
                      name: SEQUENCES
                  - !Flag
                    optional: true
                    synonyms:
                    - --ids
                    - -i
                    description: gi ids of sequences to download from NCBI
                    args: !RepeatFlagArg
                      name: IDS
                  - !Flag
                    optional: true
                    synonyms:
                    - --email
                    - -e
                    description: "if downloading your sequences via gi ids, please\n\
                      specify your email address; in case of excessive\nusage, NCBI\
                      \ will attempt to contact a user at the\ne-mail address provided\
                      \ prior to blocking access to\nthe E-utilities"
                    args: !SimpleFlagArg
                      name: EMAIL
                  - !Flag
                    optional: true
                    synonyms:
                    - --pan_file
                    - -p
                    description: "File name of new PanCake Object\n(DEFAULT=pan_files/pancake.pan)"
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --ali
                    description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments\
                      \ (BLAST or nucmer output) to\ninclude in PanCake Object"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --min_len
                    - -l
                    description: "minimum length of pairwise alignments to include\n\
                      (DEFUALT=25)"
                    args: !SimpleFlagArg
                      name: MIN_LEN
                  - !Flag
                    optional: true
                    synonyms:
                    - --no_self_alignments
                    - -nsa
                    description: "if set, skip pairwise alignments between regions\
                      \ on\nidentical chromosomes as input (DEFAULT=False)\n"
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --sequences
                        - -s
                        description: "fasta or multiple fasta file providing input\n\
                          chromosome sequences"
                        args: !RepeatFlagArg
                          name: SEQUENCES
                      - !Flag
                        optional: true
                        synonyms:
                        - --ids
                        - -i
                        description: gi ids of sequences to download from NCBI
                        args: !RepeatFlagArg
                          name: IDS
                      - !Flag
                        optional: true
                        synonyms:
                        - --email
                        - -e
                        description: "if downloading your sequences via gi ids, please\n\
                          specify your email address; in case of excessive\nusage,\
                          \ NCBI will attempt to contact a user at the\ne-mail address\
                          \ provided prior to blocking access to\nthe E-utilities"
                        args: !SimpleFlagArg
                          name: EMAIL
                      - !Flag
                        optional: true
                        synonyms:
                        - --pan_file
                        - -p
                        description: "File name of new PanCake Object\n(DEFAULT=pan_files/pancake.pan)"
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --ali
                        description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise\
                          \ alignments (BLAST or nucmer output) to\ninclude in PanCake\
                          \ Object"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --min_len
                        - -l
                        description: "minimum length of pairwise alignments to include\n\
                          (DEFUALT=25)"
                        args: !SimpleFlagArg
                          name: MIN_LEN
                      - !Flag
                        optional: true
                        synonyms:
                        - --no_self_alignments
                        - -nsa
                        description: "if set, skip pairwise alignments between regions\
                          \ on\nidentical chromosomes as input (DEFAULT=False)\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake create [-h] [--sequences SEQUENCES\
                        \ [SEQUENCES ...]]\n                      [--ids IDS [IDS\
                        \ ...]] [--email EMAIL]\n                      [--pan_file\
                        \ PAN_FILE] [--ali [ALI [ALI ...]]]\n                    \
                        \  [--min_len MIN_LEN] [--no_self_alignments]\n\noptional\
                        \ arguments:\n  -h, --help            show this help message\
                        \ and exit\n  --sequences SEQUENCES [SEQUENCES ...], -s SEQUENCES\
                        \ [SEQUENCES ...]\n                        fasta or multiple\
                        \ fasta file providing input\n                        chromosome\
                        \ sequences\n  --ids IDS [IDS ...], -i IDS [IDS ...]\n   \
                        \                     gi ids of sequences to download from\
                        \ NCBI\n  --email EMAIL, -e EMAIL\n                      \
                        \  if downloading your sequences via gi ids, please\n    \
                        \                    specify your email address; in case of\
                        \ excessive\n                        usage, NCBI will attempt\
                        \ to contact a user at the\n                        e-mail\
                        \ address provided prior to blocking access to\n         \
                        \               the E-utilities\n  --pan_file PAN_FILE, -p\
                        \ PAN_FILE\n                        File name of new PanCake\
                        \ Object\n                        (DEFAULT=pan_files/pancake.pan)\n\
                        \  --ali [ALI [ALI ...]], -a [ALI [ALI ...]]\n           \
                        \             pairwise alignments (BLAST or nucmer output)\
                        \ to\n                        include in PanCake Object\n\
                        \  --min_len MIN_LEN, -l MIN_LEN\n                       \
                        \ minimum length of pairwise alignments to include\n     \
                        \                   (DEFUALT=25)\n  --no_self_alignments,\
                        \ -nsa\n                        if set, skip pairwise alignments\
                        \ between regions on\n                        identical chromosomes\
                        \ as input (DEFAULT=False)\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - pancake
                      - specify
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --chrom
                        - -c
                        description: name(s) of respective chromosome(s)
                        args: !RepeatFlagArg
                          name: CHROM
                      - !Flag
                        optional: true
                        synonyms:
                        - --name
                        - -n
                        description: "new name of specified chromosome, this will\
                          \ become the\nchromosome's name in incidental output files"
                        args: !SimpleFlagArg
                          name: NEW_NAME
                      - !Flag
                        optional: true
                        synonyms:
                        - --genome
                        - -g
                        description: name of genome CHROM belongs to
                        args: !SimpleFlagArg
                          name: GENOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --genome_file
                        - -f
                        description: "input file containing mapping of chromosomes\
                          \ to\ngenomes and additional chromosome names"
                        args: !SimpleFlagArg
                          name: FILE_NAME
                      - !Flag
                        optional: true
                        synonyms:
                        - --delete
                        - -d
                        description: "chromosome names to delete\n"
                        args: !RepeatFlagArg
                          name: OLD_NAME
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom\
                        \ CHROM [CHROM ...]]\n                       [--name NEW_NAME]\
                        \ [--genome GENOME]\n                       [--genome_file\
                        \ FILE_NAME]\n                       [--delete OLD_NAME [OLD_NAME\
                        \ ...]]\n\noptional arguments:\n  -h, --help            show\
                        \ this help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n\
                        \                        Name of PanCake Data Object File\
                        \ (required)\n  --chrom CHROM [CHROM ...], -c CHROM [CHROM\
                        \ ...]\n                        name(s) of respective chromosome(s)\n\
                        \  --name NEW_NAME, -n NEW_NAME\n                        new\
                        \ name of specified chromosome, this will become the\n   \
                        \                     chromosome's name in incidental output\
                        \ files\n  --genome GENOME, -g GENOME\n                  \
                        \      name of genome CHROM belongs to\n  --genome_file FILE_NAME,\
                        \ -f FILE_NAME\n                        input file containing\
                        \ mapping of chromosomes to\n                        genomes\
                        \ and additional chromosome names\n  --delete OLD_NAME [OLD_NAME\
                        \ ...], -d OLD_NAME [OLD_NAME ...]\n                     \
                        \   chromosome names to delete\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - pancake
                      - addAli
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ALI_FILE
                        description: Alignment File (BLAST or nucmer output)
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --output
                        - -o
                        description: output pangenome file (PAN_FILE will be unchanged)
                        args: !SimpleFlagArg
                          name: NEW_PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --min_len
                        - -l
                        description: "minimum length of pairwise alignments to get\
                          \ included\n(DEFAULT=25)"
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - --no_self_alignments
                        - -nsa
                        description: "if set, skip pairwise alignments between regions\
                          \ on\nidentical chromosomes (DEFAULT=False)\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake addAli [-h] --panfile PAN_FILE [--output\
                        \ NEW_PAN_FILE]\n                      [--min_len INT] [--no_self_alignments]\n\
                        \                      ALI_FILE [ALI_FILE ...]\n\npositional\
                        \ arguments:\n  ALI_FILE              Alignment File (BLAST\
                        \ or nucmer output)\n\noptional arguments:\n  -h, --help \
                        \           show this help message and exit\n  --panfile PAN_FILE,\
                        \ -p PAN_FILE\n                        Name of PanCake Data\
                        \ Object File (required)\n  --output NEW_PAN_FILE, -o NEW_PAN_FILE\n\
                        \                        output pangenome file (PAN_FILE will\
                        \ be unchanged)\n  --min_len INT, -l INT\n               \
                        \         minimum length of pairwise alignments to get included\n\
                        \                        (DEFAULT=25)\n  --no_self_alignments,\
                        \ -nsa\n                        if set, skip pairwise alignments\
                        \ between regions on\n                        identical chromosomes\
                        \ (DEFAULT=False)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - pancake
                      - status
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: PAN_FILE
                        description: Name of PanCake Data Object File
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake status [-h] PAN_FILE\n\npositional\
                        \ arguments:\n  PAN_FILE    Name of PanCake Data Object File\n\
                        \noptional arguments:\n  -h, --help  show this help message\
                        \ and exit\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - pancake
                      - graph
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --chroms
                        - -c
                        description: "Chromosomes in Output (by default all chromosomes\n\
                          covered in PAN_FILE)"
                        args: !RepeatFlagArg
                          name: CHROMS
                      - !Flag
                        optional: true
                        synonyms:
                        - -starts
                        description: "Start positions (in same order as chromosomes),\n\
                          DEFAULT=1 on all chromosomes"
                        args: !RepeatFlagArg
                          name: START_POS
                      - !Flag
                        optional: true
                        synonyms:
                        - -stops
                        description: "Stop positions (in same order as chromosomes),\n\
                          DEFAULT=length of chromosomes"
                        args: !RepeatFlagArg
                          name: STOP_POS
                      - !Flag
                        optional: true
                        synonyms:
                        - --max_nodes
                        description: "Maximal number of nodes in output graph.\n(DEFAULT=10,000):\
                          \ if exceeded, PanCake will warn and\ninterrupt!"
                        args: !SimpleFlagArg
                          name: MAX_NODES
                      - !Flag
                        optional: true
                        synonyms:
                        - --max_edges
                        description: "Maximal number of edges in output graph.\n(DEFAULT=10,000):\
                          \ if exceeded, PanCake will warn and\ninterrupt!"
                        args: !SimpleFlagArg
                          name: MAX_EDGES
                      - !Flag
                        optional: true
                        synonyms:
                        - --max_entries
                        - -me
                        description: "Shared features are truncated in output if number\
                          \ of\ncontained feature instances > MAX_ENTRIES (DEFAULT:\n\
                          MAX_ENTRIES=50)"
                        args: !SimpleFlagArg
                          name: MAX_ENTRIES
                      - !Flag
                        optional: true
                        synonyms:
                        - -all
                        description: "if set, all chromosomes contained in PAN_FILE\
                          \ appear\nin output (irrespective to CHROMS), DEFAULT=False"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -regions
                        description: "if set, only specified regions are shown in\
                          \ output\n(DEFAULT=False), ignored if -all is set"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --output
                        - -o
                        description: "output DOT file (DEFAULT: STDOUT)\n"
                        args: !SimpleFlagArg
                          name: FILE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake graph [-h] --panfile PAN_FILE [--chroms\
                        \ CHROMS [CHROMS ...]]\n                     [-starts START_POS\
                        \ [START_POS ...]]\n                     [-stops STOP_POS\
                        \ [STOP_POS ...]] [--max_nodes MAX_NODES]\n              \
                        \       [--max_edges MAX_EDGES] [--max_entries MAX_ENTRIES]\n\
                        \                     [-all] [-regions] [--output FILE]\n\n\
                        optional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n  \
                        \                      Name of PanCake Data Object File (required)\n\
                        \  --chroms CHROMS [CHROMS ...], -c CHROMS [CHROMS ...]\n\
                        \                        Chromosomes in Output (by default\
                        \ all chromosomes\n                        covered in PAN_FILE)\n\
                        \  -starts START_POS [START_POS ...]\n                   \
                        \     Start positions (in same order as chromosomes),\n  \
                        \                      DEFAULT=1 on all chromosomes\n  -stops\
                        \ STOP_POS [STOP_POS ...]\n                        Stop positions\
                        \ (in same order as chromosomes),\n                      \
                        \  DEFAULT=length of chromosomes\n  --max_nodes MAX_NODES\n\
                        \                        Maximal number of nodes in output\
                        \ graph.\n                        (DEFAULT=10,000): if exceeded,\
                        \ PanCake will warn and\n                        interrupt!\n\
                        \  --max_edges MAX_EDGES\n                        Maximal\
                        \ number of edges in output graph.\n                     \
                        \   (DEFAULT=10,000): if exceeded, PanCake will warn and\n\
                        \                        interrupt!\n  --max_entries MAX_ENTRIES,\
                        \ -me MAX_ENTRIES\n                        Shared features\
                        \ are truncated in output if number of\n                 \
                        \       contained feature instances > MAX_ENTRIES (DEFAULT:\n\
                        \                        MAX_ENTRIES=50)\n  -all         \
                        \         if set, all chromosomes contained in PAN_FILE appear\n\
                        \                        in output (irrespective to CHROMS),\
                        \ DEFAULT=False\n  -regions              if set, only specified\
                        \ regions are shown in output\n                        (DEFAULT=False),\
                        \ ignored if -all is set\n  --output FILE, -o FILE\n     \
                        \                   output DOT file (DEFAULT: STDOUT)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id009
                      - pancake
                      - singletons
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --ref_chrom
                        - -rc
                        description: "Reference CHROMOSOME (define either ONE reference\n\
                          chromosome or ONE reference genome)"
                        args: !SimpleFlagArg
                          name: REF_CHROM
                      - !Flag
                        optional: true
                        synonyms:
                        - --ref_genome
                        - -rg
                        description: "Reference GENOME (define either ONE reference\n\
                          chromosome or ONE reference genome)"
                        args: !SimpleFlagArg
                          name: REF_GENOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --non_ref_chroms
                        - -nrc
                        description: "Names of non-reference CHROMOSOMES (DEFAULT:\
                          \ ALL non-\nreference chromosomes)"
                        args: !RepeatFlagArg
                          name: NON_REF_CHROMS
                      - !Flag
                        optional: true
                        synonyms:
                        - --non_ref_genomes
                        - -nrg
                        description: "Names of non-reference GENOMES (DEFAULT: ALL\
                          \ non-\nreference genomes)"
                        args: !RepeatFlagArg
                          name: NON_REF_GENOMES
                      - !Flag
                        optional: true
                        synonyms:
                        - --exclude_genomes
                        - -eg
                        description: "Names of GENOMES to exclude from singleton analysis\n\
                          (DEFAULT: No genomes excluded)"
                        args: !RepeatFlagArg
                          name: GENOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --exclude_chromosomes
                        - -ec
                        description: "Names of CHROMOSOMES to exclude from singleton\n\
                          analysis (DEFAULT: No chromosomes excluded)"
                        args: !RepeatFlagArg
                          name: CHROMOSOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --min_len
                        - -l
                        description: "minimum length of regions to identify as a singleton\n\
                          region (INTEGER, DEFAULT=25)"
                        args: !SimpleFlagArg
                          name: MIN_LEN
                      - !Flag
                        optional: true
                        synonyms:
                        - --output
                        - -o
                        description: "directory to which .fasta files of singleton\
                          \ regions\nare written (DEFAULT:\nsingletons_{REF_CHROM|REF_GENOME})"
                        args: !SimpleFlagArg
                          name: DICT
                      - !Flag
                        optional: true
                        synonyms:
                        - --no_output
                        - -no
                        description: if set, supress .fasta output of singleton regions
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --bed_file
                        - -b
                        description: ".bed file to which singleton regions are written\n\
                          (DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
                        args: !SimpleFlagArg
                          name: BED_FILE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake singletons [-h] --panfile PAN_FILE\
                        \ [--ref_chrom REF_CHROM]\n                          [--ref_genome\
                        \ REF_GENOME]\n                          [--non_ref_chroms\
                        \ NON_REF_CHROMS [NON_REF_CHROMS ...]]\n                 \
                        \         [--non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES\
                        \ ...]]\n                          [--exclude_genomes GENOME\
                        \ [GENOME ...]]\n                          [--exclude_chromosomes\
                        \ CHROMOSOME [CHROMOSOME ...]]\n                         \
                        \ [--min_len MIN_LEN] [--output DICT] [--no_output]\n    \
                        \                      [--bed_file BED_FILE]\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  --panfile PAN_FILE, -p PAN_FILE\n                     \
                        \   Name of PanCake Data Object File (required)\n  --ref_chrom\
                        \ REF_CHROM, -rc REF_CHROM\n                        Reference\
                        \ CHROMOSOME (define either ONE reference\n              \
                        \          chromosome or ONE reference genome)\n  --ref_genome\
                        \ REF_GENOME, -rg REF_GENOME\n                        Reference\
                        \ GENOME (define either ONE reference\n                  \
                        \      chromosome or ONE reference genome)\n  --non_ref_chroms\
                        \ NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc NON_REF_CHROMS\
                        \ [NON_REF_CHROMS ...]\n                        Names of non-reference\
                        \ CHROMOSOMES (DEFAULT: ALL non-\n                       \
                        \ reference chromosomes)\n  --non_ref_genomes NON_REF_GENOMES\
                        \ [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES [NON_REF_GENOMES\
                        \ ...]\n                        Names of non-reference GENOMES\
                        \ (DEFAULT: ALL non-\n                        reference genomes)\n\
                        \  --exclude_genomes GENOME [GENOME ...], -eg GENOME [GENOME\
                        \ ...]\n                        Names of GENOMES to exclude\
                        \ from singleton analysis\n                        (DEFAULT:\
                        \ No genomes excluded)\n  --exclude_chromosomes CHROMOSOME\
                        \ [CHROMOSOME ...], -ec CHROMOSOME [CHROMOSOME ...]\n    \
                        \                    Names of CHROMOSOMES to exclude from\
                        \ singleton\n                        analysis (DEFAULT: No\
                        \ chromosomes excluded)\n  --min_len MIN_LEN, -l MIN_LEN\n\
                        \                        minimum length of regions to identify\
                        \ as a singleton\n                        region (INTEGER,\
                        \ DEFAULT=25)\n  --output DICT, -o DICT\n                \
                        \        directory to which .fasta files of singleton regions\n\
                        \                        are written (DEFAULT:\n         \
                        \               singletons_{REF_CHROM|REF_GENOME})\n  --no_output,\
                        \ -no      if set, supress .fasta output of singleton regions\n\
                        \  --bed_file BED_FILE, -b BED_FILE\n                    \
                        \    .bed file to which singleton regions are written\n  \
                        \                      (DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id010
                      - pancake
                      - sequence
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --chrom
                        - -c
                        description: Chromosome from which sequence originates
                        args: !SimpleFlagArg
                          name: CHROMOSOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --genome
                        - -g
                        description: "(multiple) .fasta output of GENOME (if set,\
                          \ start and\nstop will be ignored)"
                        args: !SimpleFlagArg
                          name: GENOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --output
                        - -o
                        description: "file to which .fasta output will be written\
                          \ (DEFAULT =\nSTDOUT)"
                        args: !SimpleFlagArg
                          name: F
                      - !Flag
                        optional: true
                        synonyms:
                        - --linewidth
                        - -lw
                        description: line witdth in .fastafile (DEFAULT=100)
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -start
                        description: (1-based) start position on CHROMOSME (DEFAULT
                          = 1)
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -stop
                        description: "(1-based) stop position on CHROMOSME (DEFAULT\
                          \ = length\nof CHROMOSME)\n"
                        args: !SimpleFlagArg
                          name: INT
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake sequence [-h] --panfile PAN_FILE\n\
                        \                        [--chrom CHROMOSOME | --genome GENOME]\
                        \ [--output F]\n                        [--linewidth INT]\
                        \ [-start INT] [-stop INT]\n\noptional arguments:\n  -h, --help\
                        \            show this help message and exit\n  --panfile\
                        \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake\
                        \ Data Object File (required)\n  --chrom CHROMOSOME, -c CHROMOSOME\n\
                        \                        Chromosome from which sequence originates\n\
                        \  --genome GENOME, -g GENOME\n                        (multiple)\
                        \ .fasta output of GENOME (if set, start and\n           \
                        \             stop will be ignored)\n  --output F, -o F  \
                        \    file to which .fasta output will be written (DEFAULT\
                        \ =\n                        STDOUT)\n  --linewidth INT, -lw\
                        \ INT\n                        line witdth in .fastafile (DEFAULT=100)\n\
                        \  -start INT            (1-based) start position on CHROMOSME\
                        \ (DEFAULT = 1)\n  -stop INT             (1-based) stop position\
                        \ on CHROMOSME (DEFAULT = length\n                       \
                        \ of CHROMOSME)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id011
                      - pancake
                      - addChrom
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --sequences
                        - -s
                        description: "fasta or multiple fasta file providing input\n\
                          chromosome sequences"
                        args: !RepeatFlagArg
                          name: SEQUENCES
                      - !Flag
                        optional: true
                        synonyms:
                        - --ids
                        - -i
                        description: gi ids of sequences to download from NCBI
                        args: !RepeatFlagArg
                          name: IDS
                      - !Flag
                        optional: true
                        synonyms:
                        - --email
                        - -e
                        description: "if downloading your sequences via gi ids, please\n\
                          specify your email address; in case of excessive\nusage,\
                          \ NCBI will attempt to contact a user at the\ne-mail address\
                          \ provided prior to blocking access to\nthe E-utilities"
                        args: !SimpleFlagArg
                          name: EMAIL
                      - !Flag
                        optional: true
                        synonyms:
                        - --output
                        - -o
                        description: "output file for new PanCake Object (DEFAULT=PAN_FILE);\n\
                          if specified, PanCake Data Object in PAN_FILE stays\nunchanged"
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - --ali
                        description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise\
                          \ alignments (BLAST or nucmer output) to\ninclude in PanCake\
                          \ Object"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --min_len
                        - -l
                        description: "minimum length of pairwise alignments to include\n\
                          (DEFUALT=25)"
                        args: !SimpleFlagArg
                          name: MIN_LEN
                      - !Flag
                        optional: true
                        synonyms:
                        - --no_self_alignments
                        - -nsa
                        description: "if set, skip pairwise alignments between regions\
                          \ on\nidentical chromosomes as input (DEFAULT=False)\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake addChrom [-h] --panfile PAN_FILE\n\
                        \                        [--sequences SEQUENCES [SEQUENCES\
                        \ ...]]\n                        [--ids IDS [IDS ...]] [--email\
                        \ EMAIL]\n                        [--output OUTPUT] [--ali\
                        \ [ALI [ALI ...]]]\n                        [--min_len MIN_LEN]\
                        \ [--no_self_alignments]\n\noptional arguments:\n  -h, --help\
                        \            show this help message and exit\n  --panfile\
                        \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake\
                        \ Data Object File (required)\n  --sequences SEQUENCES [SEQUENCES\
                        \ ...], -s SEQUENCES [SEQUENCES ...]\n                   \
                        \     fasta or multiple fasta file providing input\n     \
                        \                   chromosome sequences\n  --ids IDS [IDS\
                        \ ...], -i IDS [IDS ...]\n                        gi ids of\
                        \ sequences to download from NCBI\n  --email EMAIL, -e EMAIL\n\
                        \                        if downloading your sequences via\
                        \ gi ids, please\n                        specify your email\
                        \ address; in case of excessive\n                        usage,\
                        \ NCBI will attempt to contact a user at the\n           \
                        \             e-mail address provided prior to blocking access\
                        \ to\n                        the E-utilities\n  --output\
                        \ OUTPUT, -o OUTPUT\n                        output file for\
                        \ new PanCake Object (DEFAULT=PAN_FILE);\n               \
                        \         if specified, PanCake Data Object in PAN_FILE stays\n\
                        \                        unchanged\n  --ali [ALI [ALI ...]],\
                        \ -a [ALI [ALI ...]]\n                        pairwise alignments\
                        \ (BLAST or nucmer output) to\n                        include\
                        \ in PanCake Object\n  --min_len MIN_LEN, -l MIN_LEN\n   \
                        \                     minimum length of pairwise alignments\
                        \ to include\n                        (DEFUALT=25)\n  --no_self_alignments,\
                        \ -nsa\n                        if set, skip pairwise alignments\
                        \ between regions on\n                        identical chromosomes\
                        \ as input (DEFAULT=False)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id012
                      - pancake
                      - core
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --panfile
                        - -p
                        description: Name of PanCake Data Object File (required)
                        args: !SimpleFlagArg
                          name: PAN_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --ref_chrom
                        - -rc
                        description: "Reference CHROMOSOME (define either ONE reference\n\
                          chromosome OR ONE reference genome)"
                        args: !SimpleFlagArg
                          name: REF_CHROM
                      - !Flag
                        optional: true
                        synonyms:
                        - --ref_genome
                        - -rg
                        description: "Reference GENOME (define either ONE reference\n\
                          chromosome OR ONE reference genome)"
                        args: !SimpleFlagArg
                          name: REF_GENOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --non_ref_chroms
                        - -nrc
                        description: "Names of non-reference CHROMOSOMES (DEFAULT:\
                          \ ALL non-\nreference chromosomes)"
                        args: !RepeatFlagArg
                          name: NON_REF_CHROMS
                      - !Flag
                        optional: true
                        synonyms:
                        - --non_ref_genomes
                        - -nrg
                        description: "Names of non-reference GENOMES (DEFAULT: ALL\
                          \ non-\nreference genomes)"
                        args: !RepeatFlagArg
                          name: NON_REF_GENOMES
                      - !Flag
                        optional: true
                        synonyms:
                        - --exclude_genomes
                        - -eg
                        description: "Names of GENOMES to exclude from core analysis\n\
                          (DEFAULT: No genomes excluded)"
                        args: !RepeatFlagArg
                          name: GENOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --exclude_chromosomes
                        - -ec
                        description: "Names of CHROMOSOMES to exclude from core analysis\n\
                          (DEFAULT: No chromosomes excluded)"
                        args: !RepeatFlagArg
                          name: CHROMOSOME
                      - !Flag
                        optional: true
                        synonyms:
                        - --max_non_core_frac
                        - -f
                        description: "Maximum fraction of non-core sequence regions\
                          \ within\neach included sequence (FLOAT, DEAFULT=0.05)"
                        args: !SimpleFlagArg
                          name: MAX_NON_CORE_FRAC
                      - !Flag
                        optional: true
                        synonyms:
                        - --min_len
                        - -l
                        description: "minimum length of regions to identify as part\
                          \ of core\ngenome (INTEGER, DEFAULT=25)"
                        args: !SimpleFlagArg
                          name: MIN_LEN
                      - !Flag
                        optional: true
                        synonyms:
                        - --output
                        - -o
                        description: "directory to which .fasta files of core regions\
                          \ are\nwritten (DEFAULT: core_{REF_CHROM|REF_GENOME})"
                        args: !SimpleFlagArg
                          name: DICT
                      - !Flag
                        optional: true
                        synonyms:
                        - --no_output
                        - -no
                        description: if set, supress .fasta output of core regions
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --bed_file
                        - -b
                        description: ".bed file to which core regions are written\
                          \ (DEFAULT=\ncore_{REF_CHROM|REF_GENOME}.bed)"
                        args: !SimpleFlagArg
                          name: BED_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --max_space
                        - -s
                        description: "maximum non-core space allowed within a core\
                          \ region\n(DEFAULT=25)\n"
                        args: !SimpleFlagArg
                          name: INT
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pancake core [-h] --panfile PAN_FILE [--ref_chrom\
                        \ REF_CHROM]\n                    [--ref_genome REF_GENOME]\n\
                        \                    [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
                        \ ...]]\n                    [--non_ref_genomes NON_REF_GENOMES\
                        \ [NON_REF_GENOMES ...]]\n                    [--exclude_genomes\
                        \ GENOME [GENOME ...]]\n                    [--exclude_chromosomes\
                        \ CHROMOSOME [CHROMOSOME ...]]\n                    [--max_non_core_frac\
                        \ MAX_NON_CORE_FRAC]\n                    [--min_len MIN_LEN]\
                        \ [--output DICT] [--no_output]\n                    [--bed_file\
                        \ BED_FILE] [--max_space INT]\n\noptional arguments:\n  -h,\
                        \ --help            show this help message and exit\n  --panfile\
                        \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake\
                        \ Data Object File (required)\n  --ref_chrom REF_CHROM, -rc\
                        \ REF_CHROM\n                        Reference CHROMOSOME\
                        \ (define either ONE reference\n                        chromosome\
                        \ OR ONE reference genome)\n  --ref_genome REF_GENOME, -rg\
                        \ REF_GENOME\n                        Reference GENOME (define\
                        \ either ONE reference\n                        chromosome\
                        \ OR ONE reference genome)\n  --non_ref_chroms NON_REF_CHROMS\
                        \ [NON_REF_CHROMS ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS\
                        \ ...]\n                        Names of non-reference CHROMOSOMES\
                        \ (DEFAULT: ALL non-\n                        reference chromosomes)\n\
                        \  --non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES ...],\
                        \ -nrg NON_REF_GENOMES [NON_REF_GENOMES ...]\n           \
                        \             Names of non-reference GENOMES (DEFAULT: ALL\
                        \ non-\n                        reference genomes)\n  --exclude_genomes\
                        \ GENOME [GENOME ...], -eg GENOME [GENOME ...]\n         \
                        \               Names of GENOMES to exclude from core analysis\n\
                        \                        (DEFAULT: No genomes excluded)\n\
                        \  --exclude_chromosomes CHROMOSOME [CHROMOSOME ...], -ec\
                        \ CHROMOSOME [CHROMOSOME ...]\n                        Names\
                        \ of CHROMOSOMES to exclude from core analysis\n         \
                        \               (DEFAULT: No chromosomes excluded)\n  --max_non_core_frac\
                        \ MAX_NON_CORE_FRAC, -f MAX_NON_CORE_FRAC\n              \
                        \          Maximum fraction of non-core sequence regions within\n\
                        \                        each included sequence (FLOAT, DEAFULT=0.05)\n\
                        \  --min_len MIN_LEN, -l MIN_LEN\n                       \
                        \ minimum length of regions to identify as part of core\n\
                        \                        genome (INTEGER, DEFAULT=25)\n  --output\
                        \ DICT, -o DICT\n                        directory to which\
                        \ .fasta files of core regions are\n                     \
                        \   written (DEFAULT: core_{REF_CHROM|REF_GENOME})\n  --no_output,\
                        \ -no      if set, supress .fasta output of core regions\n\
                        \  --bed_file BED_FILE, -b BED_FILE\n                    \
                        \    .bed file to which core regions are written (DEFAULT=\n\
                        \                        core_{REF_CHROM|REF_GENOME}.bed)\n\
                        \  --max_space INT, -s INT\n                        maximum\
                        \ non-core space allowed within a core region\n          \
                        \              (DEFAULT=25)\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: pancake [-h]\n               {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
                      \               ...\n\nPanCake -- A data structure for pangenomes\
                      \ enabling for core and singleton\nidentification, without the\
                      \ requirement of annotation data.\n\npositional arguments:\n\
                      \  {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
                      \    create              create a PanCake Data Object\n    status\
                      \              get overview about a PanCake Object\n    addAli\
                      \              include information from pairwise (BLAST or nucmer)\n\
                      \                        alignments into an already existing\
                      \ PanCake Object\n    specify             include genome information\
                      \ or rename chromosomes\n    addChrom            add chromosomes\
                      \ to an already existing PanCake Object\n    core          \
                      \      identify core regions\n    singletons          identify\
                      \ singleton regions\n    sequence            get sequence of\
                      \ a chromosome (or chromosomal region)\n                   \
                      \     from a PanCake Object\n    graph               graphical\
                      \ output of PanCake Objects (in DOT format)\n              \
                      \          #BETA MODE#\n\noptional arguments:\n  -h, --help\
                      \            show this help message and exit\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake create [-h] [--sequences SEQUENCES [SEQUENCES\
                    \ ...]]\n                      [--ids IDS [IDS ...]] [--email\
                    \ EMAIL]\n                      [--pan_file PAN_FILE] [--ali [ALI\
                    \ [ALI ...]]]\n                      [--min_len MIN_LEN] [--no_self_alignments]\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  --sequences SEQUENCES [SEQUENCES ...], -s\
                    \ SEQUENCES [SEQUENCES ...]\n                        fasta or\
                    \ multiple fasta file providing input\n                      \
                    \  chromosome sequences\n  --ids IDS [IDS ...], -i IDS [IDS ...]\n\
                    \                        gi ids of sequences to download from\
                    \ NCBI\n  --email EMAIL, -e EMAIL\n                        if\
                    \ downloading your sequences via gi ids, please\n            \
                    \            specify your email address; in case of excessive\n\
                    \                        usage, NCBI will attempt to contact a\
                    \ user at the\n                        e-mail address provided\
                    \ prior to blocking access to\n                        the E-utilities\n\
                    \  --pan_file PAN_FILE, -p PAN_FILE\n                        File\
                    \ name of new PanCake Object\n                        (DEFAULT=pan_files/pancake.pan)\n\
                    \  --ali [ALI [ALI ...]], -a [ALI [ALI ...]]\n               \
                    \         pairwise alignments (BLAST or nucmer output) to\n  \
                    \                      include in PanCake Object\n  --min_len\
                    \ MIN_LEN, -l MIN_LEN\n                        minimum length\
                    \ of pairwise alignments to include\n                        (DEFUALT=25)\n\
                    \  --no_self_alignments, -nsa\n                        if set,\
                    \ skip pairwise alignments between regions on\n              \
                    \          identical chromosomes as input (DEFAULT=False)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --chrom
                    - -c
                    description: name(s) of respective chromosome(s)
                    args: !RepeatFlagArg
                      name: CHROM
                  - !Flag
                    optional: true
                    synonyms:
                    - --name
                    - -n
                    description: "new name of specified chromosome, this will become\
                      \ the\nchromosome's name in incidental output files"
                    args: !SimpleFlagArg
                      name: NEW_NAME
                  - !Flag
                    optional: true
                    synonyms:
                    - --genome
                    - -g
                    description: name of genome CHROM belongs to
                    args: !SimpleFlagArg
                      name: GENOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --genome_file
                    - -f
                    description: "input file containing mapping of chromosomes to\n\
                      genomes and additional chromosome names"
                    args: !SimpleFlagArg
                      name: FILE_NAME
                  - !Flag
                    optional: true
                    synonyms:
                    - --delete
                    - -d
                    description: "chromosome names to delete\n"
                    args: !RepeatFlagArg
                      name: OLD_NAME
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom\
                    \ CHROM [CHROM ...]]\n                       [--name NEW_NAME]\
                    \ [--genome GENOME]\n                       [--genome_file FILE_NAME]\n\
                    \                       [--delete OLD_NAME [OLD_NAME ...]]\n\n\
                    optional arguments:\n  -h, --help            show this help message\
                    \ and exit\n  --panfile PAN_FILE, -p PAN_FILE\n              \
                    \          Name of PanCake Data Object File (required)\n  --chrom\
                    \ CHROM [CHROM ...], -c CHROM [CHROM ...]\n                  \
                    \      name(s) of respective chromosome(s)\n  --name NEW_NAME,\
                    \ -n NEW_NAME\n                        new name of specified chromosome,\
                    \ this will become the\n                        chromosome's name\
                    \ in incidental output files\n  --genome GENOME, -g GENOME\n \
                    \                       name of genome CHROM belongs to\n  --genome_file\
                    \ FILE_NAME, -f FILE_NAME\n                        input file\
                    \ containing mapping of chromosomes to\n                     \
                    \   genomes and additional chromosome names\n  --delete OLD_NAME\
                    \ [OLD_NAME ...], -d OLD_NAME [OLD_NAME ...]\n               \
                    \         chromosome names to delete\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ALI_FILE
                    description: Alignment File (BLAST or nucmer output)
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --output
                    - -o
                    description: output pangenome file (PAN_FILE will be unchanged)
                    args: !SimpleFlagArg
                      name: NEW_PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --min_len
                    - -l
                    description: "minimum length of pairwise alignments to get included\n\
                      (DEFAULT=25)"
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - --no_self_alignments
                    - -nsa
                    description: "if set, skip pairwise alignments between regions\
                      \ on\nidentical chromosomes (DEFAULT=False)\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake addAli [-h] --panfile PAN_FILE [--output\
                    \ NEW_PAN_FILE]\n                      [--min_len INT] [--no_self_alignments]\n\
                    \                      ALI_FILE [ALI_FILE ...]\n\npositional arguments:\n\
                    \  ALI_FILE              Alignment File (BLAST or nucmer output)\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n      \
                    \                  Name of PanCake Data Object File (required)\n\
                    \  --output NEW_PAN_FILE, -o NEW_PAN_FILE\n                  \
                    \      output pangenome file (PAN_FILE will be unchanged)\n  --min_len\
                    \ INT, -l INT\n                        minimum length of pairwise\
                    \ alignments to get included\n                        (DEFAULT=25)\n\
                    \  --no_self_alignments, -nsa\n                        if set,\
                    \ skip pairwise alignments between regions on\n              \
                    \          identical chromosomes (DEFAULT=False)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: PAN_FILE
                    description: Name of PanCake Data Object File
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake status [-h] PAN_FILE\n\npositional arguments:\n\
                    \  PAN_FILE    Name of PanCake Data Object File\n\noptional arguments:\n\
                    \  -h, --help  show this help message and exit\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --chroms
                    - -c
                    description: "Chromosomes in Output (by default all chromosomes\n\
                      covered in PAN_FILE)"
                    args: !RepeatFlagArg
                      name: CHROMS
                  - !Flag
                    optional: true
                    synonyms:
                    - -starts
                    description: "Start positions (in same order as chromosomes),\n\
                      DEFAULT=1 on all chromosomes"
                    args: !RepeatFlagArg
                      name: START_POS
                  - !Flag
                    optional: true
                    synonyms:
                    - -stops
                    description: "Stop positions (in same order as chromosomes),\n\
                      DEFAULT=length of chromosomes"
                    args: !RepeatFlagArg
                      name: STOP_POS
                  - !Flag
                    optional: true
                    synonyms:
                    - --max_nodes
                    description: "Maximal number of nodes in output graph.\n(DEFAULT=10,000):\
                      \ if exceeded, PanCake will warn and\ninterrupt!"
                    args: !SimpleFlagArg
                      name: MAX_NODES
                  - !Flag
                    optional: true
                    synonyms:
                    - --max_edges
                    description: "Maximal number of edges in output graph.\n(DEFAULT=10,000):\
                      \ if exceeded, PanCake will warn and\ninterrupt!"
                    args: !SimpleFlagArg
                      name: MAX_EDGES
                  - !Flag
                    optional: true
                    synonyms:
                    - --max_entries
                    - -me
                    description: "Shared features are truncated in output if number\
                      \ of\ncontained feature instances > MAX_ENTRIES (DEFAULT:\n\
                      MAX_ENTRIES=50)"
                    args: !SimpleFlagArg
                      name: MAX_ENTRIES
                  - !Flag
                    optional: true
                    synonyms:
                    - -all
                    description: "if set, all chromosomes contained in PAN_FILE appear\n\
                      in output (irrespective to CHROMS), DEFAULT=False"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -regions
                    description: "if set, only specified regions are shown in output\n\
                      (DEFAULT=False), ignored if -all is set"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --output
                    - -o
                    description: "output DOT file (DEFAULT: STDOUT)\n"
                    args: !SimpleFlagArg
                      name: FILE
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake graph [-h] --panfile PAN_FILE [--chroms\
                    \ CHROMS [CHROMS ...]]\n                     [-starts START_POS\
                    \ [START_POS ...]]\n                     [-stops STOP_POS [STOP_POS\
                    \ ...]] [--max_nodes MAX_NODES]\n                     [--max_edges\
                    \ MAX_EDGES] [--max_entries MAX_ENTRIES]\n                   \
                    \  [-all] [-regions] [--output FILE]\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  --panfile\
                    \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake\
                    \ Data Object File (required)\n  --chroms CHROMS [CHROMS ...],\
                    \ -c CHROMS [CHROMS ...]\n                        Chromosomes\
                    \ in Output (by default all chromosomes\n                    \
                    \    covered in PAN_FILE)\n  -starts START_POS [START_POS ...]\n\
                    \                        Start positions (in same order as chromosomes),\n\
                    \                        DEFAULT=1 on all chromosomes\n  -stops\
                    \ STOP_POS [STOP_POS ...]\n                        Stop positions\
                    \ (in same order as chromosomes),\n                        DEFAULT=length\
                    \ of chromosomes\n  --max_nodes MAX_NODES\n                  \
                    \      Maximal number of nodes in output graph.\n            \
                    \            (DEFAULT=10,000): if exceeded, PanCake will warn\
                    \ and\n                        interrupt!\n  --max_edges MAX_EDGES\n\
                    \                        Maximal number of edges in output graph.\n\
                    \                        (DEFAULT=10,000): if exceeded, PanCake\
                    \ will warn and\n                        interrupt!\n  --max_entries\
                    \ MAX_ENTRIES, -me MAX_ENTRIES\n                        Shared\
                    \ features are truncated in output if number of\n            \
                    \            contained feature instances > MAX_ENTRIES (DEFAULT:\n\
                    \                        MAX_ENTRIES=50)\n  -all             \
                    \     if set, all chromosomes contained in PAN_FILE appear\n \
                    \                       in output (irrespective to CHROMS), DEFAULT=False\n\
                    \  -regions              if set, only specified regions are shown\
                    \ in output\n                        (DEFAULT=False), ignored\
                    \ if -all is set\n  --output FILE, -o FILE\n                 \
                    \       output DOT file (DEFAULT: STDOUT)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id009
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --ref_chrom
                    - -rc
                    description: "Reference CHROMOSOME (define either ONE reference\n\
                      chromosome or ONE reference genome)"
                    args: !SimpleFlagArg
                      name: REF_CHROM
                  - !Flag
                    optional: true
                    synonyms:
                    - --ref_genome
                    - -rg
                    description: "Reference GENOME (define either ONE reference\n\
                      chromosome or ONE reference genome)"
                    args: !SimpleFlagArg
                      name: REF_GENOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --non_ref_chroms
                    - -nrc
                    description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL\
                      \ non-\nreference chromosomes)"
                    args: !RepeatFlagArg
                      name: NON_REF_CHROMS
                  - !Flag
                    optional: true
                    synonyms:
                    - --non_ref_genomes
                    - -nrg
                    description: "Names of non-reference GENOMES (DEFAULT: ALL non-\n\
                      reference genomes)"
                    args: !RepeatFlagArg
                      name: NON_REF_GENOMES
                  - !Flag
                    optional: true
                    synonyms:
                    - --exclude_genomes
                    - -eg
                    description: "Names of GENOMES to exclude from singleton analysis\n\
                      (DEFAULT: No genomes excluded)"
                    args: !RepeatFlagArg
                      name: GENOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --exclude_chromosomes
                    - -ec
                    description: "Names of CHROMOSOMES to exclude from singleton\n\
                      analysis (DEFAULT: No chromosomes excluded)"
                    args: !RepeatFlagArg
                      name: CHROMOSOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --min_len
                    - -l
                    description: "minimum length of regions to identify as a singleton\n\
                      region (INTEGER, DEFAULT=25)"
                    args: !SimpleFlagArg
                      name: MIN_LEN
                  - !Flag
                    optional: true
                    synonyms:
                    - --output
                    - -o
                    description: "directory to which .fasta files of singleton regions\n\
                      are written (DEFAULT:\nsingletons_{REF_CHROM|REF_GENOME})"
                    args: !SimpleFlagArg
                      name: DICT
                  - !Flag
                    optional: true
                    synonyms:
                    - --no_output
                    - -no
                    description: if set, supress .fasta output of singleton regions
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --bed_file
                    - -b
                    description: ".bed file to which singleton regions are written\n\
                      (DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
                    args: !SimpleFlagArg
                      name: BED_FILE
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake singletons [-h] --panfile PAN_FILE [--ref_chrom\
                    \ REF_CHROM]\n                          [--ref_genome REF_GENOME]\n\
                    \                          [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
                    \ ...]]\n                          [--non_ref_genomes NON_REF_GENOMES\
                    \ [NON_REF_GENOMES ...]]\n                          [--exclude_genomes\
                    \ GENOME [GENOME ...]]\n                          [--exclude_chromosomes\
                    \ CHROMOSOME [CHROMOSOME ...]]\n                          [--min_len\
                    \ MIN_LEN] [--output DICT] [--no_output]\n                   \
                    \       [--bed_file BED_FILE]\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  --panfile PAN_FILE,\
                    \ -p PAN_FILE\n                        Name of PanCake Data Object\
                    \ File (required)\n  --ref_chrom REF_CHROM, -rc REF_CHROM\n  \
                    \                      Reference CHROMOSOME (define either ONE\
                    \ reference\n                        chromosome or ONE reference\
                    \ genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n       \
                    \                 Reference GENOME (define either ONE reference\n\
                    \                        chromosome or ONE reference genome)\n\
                    \  --non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc\
                    \ NON_REF_CHROMS [NON_REF_CHROMS ...]\n                      \
                    \  Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n   \
                    \                     reference chromosomes)\n  --non_ref_genomes\
                    \ NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES\
                    \ [NON_REF_GENOMES ...]\n                        Names of non-reference\
                    \ GENOMES (DEFAULT: ALL non-\n                        reference\
                    \ genomes)\n  --exclude_genomes GENOME [GENOME ...], -eg GENOME\
                    \ [GENOME ...]\n                        Names of GENOMES to exclude\
                    \ from singleton analysis\n                        (DEFAULT: No\
                    \ genomes excluded)\n  --exclude_chromosomes CHROMOSOME [CHROMOSOME\
                    \ ...], -ec CHROMOSOME [CHROMOSOME ...]\n                    \
                    \    Names of CHROMOSOMES to exclude from singleton\n        \
                    \                analysis (DEFAULT: No chromosomes excluded)\n\
                    \  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
                    \ length of regions to identify as a singleton\n             \
                    \           region (INTEGER, DEFAULT=25)\n  --output DICT, -o\
                    \ DICT\n                        directory to which .fasta files\
                    \ of singleton regions\n                        are written (DEFAULT:\n\
                    \                        singletons_{REF_CHROM|REF_GENOME})\n\
                    \  --no_output, -no      if set, supress .fasta output of singleton\
                    \ regions\n  --bed_file BED_FILE, -b BED_FILE\n              \
                    \          .bed file to which singleton regions are written\n\
                    \                        (DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id010
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --chrom
                    - -c
                    description: Chromosome from which sequence originates
                    args: !SimpleFlagArg
                      name: CHROMOSOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --genome
                    - -g
                    description: "(multiple) .fasta output of GENOME (if set, start\
                      \ and\nstop will be ignored)"
                    args: !SimpleFlagArg
                      name: GENOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --output
                    - -o
                    description: "file to which .fasta output will be written (DEFAULT\
                      \ =\nSTDOUT)"
                    args: !SimpleFlagArg
                      name: F
                  - !Flag
                    optional: true
                    synonyms:
                    - --linewidth
                    - -lw
                    description: line witdth in .fastafile (DEFAULT=100)
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -start
                    description: (1-based) start position on CHROMOSME (DEFAULT =
                      1)
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -stop
                    description: "(1-based) stop position on CHROMOSME (DEFAULT =\
                      \ length\nof CHROMOSME)\n"
                    args: !SimpleFlagArg
                      name: INT
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake sequence [-h] --panfile PAN_FILE\n  \
                    \                      [--chrom CHROMOSOME | --genome GENOME]\
                    \ [--output F]\n                        [--linewidth INT] [-start\
                    \ INT] [-stop INT]\n\noptional arguments:\n  -h, --help      \
                    \      show this help message and exit\n  --panfile PAN_FILE,\
                    \ -p PAN_FILE\n                        Name of PanCake Data Object\
                    \ File (required)\n  --chrom CHROMOSOME, -c CHROMOSOME\n     \
                    \                   Chromosome from which sequence originates\n\
                    \  --genome GENOME, -g GENOME\n                        (multiple)\
                    \ .fasta output of GENOME (if set, start and\n               \
                    \         stop will be ignored)\n  --output F, -o F      file\
                    \ to which .fasta output will be written (DEFAULT =\n        \
                    \                STDOUT)\n  --linewidth INT, -lw INT\n       \
                    \                 line witdth in .fastafile (DEFAULT=100)\n  -start\
                    \ INT            (1-based) start position on CHROMOSME (DEFAULT\
                    \ = 1)\n  -stop INT             (1-based) stop position on CHROMOSME\
                    \ (DEFAULT = length\n                        of CHROMOSME)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id011
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --sequences
                    - -s
                    description: "fasta or multiple fasta file providing input\nchromosome\
                      \ sequences"
                    args: !RepeatFlagArg
                      name: SEQUENCES
                  - !Flag
                    optional: true
                    synonyms:
                    - --ids
                    - -i
                    description: gi ids of sequences to download from NCBI
                    args: !RepeatFlagArg
                      name: IDS
                  - !Flag
                    optional: true
                    synonyms:
                    - --email
                    - -e
                    description: "if downloading your sequences via gi ids, please\n\
                      specify your email address; in case of excessive\nusage, NCBI\
                      \ will attempt to contact a user at the\ne-mail address provided\
                      \ prior to blocking access to\nthe E-utilities"
                    args: !SimpleFlagArg
                      name: EMAIL
                  - !Flag
                    optional: true
                    synonyms:
                    - --output
                    - -o
                    description: "output file for new PanCake Object (DEFAULT=PAN_FILE);\n\
                      if specified, PanCake Data Object in PAN_FILE stays\nunchanged"
                    args: !SimpleFlagArg
                      name: OUTPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - --ali
                    description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments\
                      \ (BLAST or nucmer output) to\ninclude in PanCake Object"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --min_len
                    - -l
                    description: "minimum length of pairwise alignments to include\n\
                      (DEFUALT=25)"
                    args: !SimpleFlagArg
                      name: MIN_LEN
                  - !Flag
                    optional: true
                    synonyms:
                    - --no_self_alignments
                    - -nsa
                    description: "if set, skip pairwise alignments between regions\
                      \ on\nidentical chromosomes as input (DEFAULT=False)\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake addChrom [-h] --panfile PAN_FILE\n  \
                    \                      [--sequences SEQUENCES [SEQUENCES ...]]\n\
                    \                        [--ids IDS [IDS ...]] [--email EMAIL]\n\
                    \                        [--output OUTPUT] [--ali [ALI [ALI ...]]]\n\
                    \                        [--min_len MIN_LEN] [--no_self_alignments]\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n      \
                    \                  Name of PanCake Data Object File (required)\n\
                    \  --sequences SEQUENCES [SEQUENCES ...], -s SEQUENCES [SEQUENCES\
                    \ ...]\n                        fasta or multiple fasta file providing\
                    \ input\n                        chromosome sequences\n  --ids\
                    \ IDS [IDS ...], -i IDS [IDS ...]\n                        gi\
                    \ ids of sequences to download from NCBI\n  --email EMAIL, -e\
                    \ EMAIL\n                        if downloading your sequences\
                    \ via gi ids, please\n                        specify your email\
                    \ address; in case of excessive\n                        usage,\
                    \ NCBI will attempt to contact a user at the\n               \
                    \         e-mail address provided prior to blocking access to\n\
                    \                        the E-utilities\n  --output OUTPUT, -o\
                    \ OUTPUT\n                        output file for new PanCake\
                    \ Object (DEFAULT=PAN_FILE);\n                        if specified,\
                    \ PanCake Data Object in PAN_FILE stays\n                    \
                    \    unchanged\n  --ali [ALI [ALI ...]], -a [ALI [ALI ...]]\n\
                    \                        pairwise alignments (BLAST or nucmer\
                    \ output) to\n                        include in PanCake Object\n\
                    \  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
                    \ length of pairwise alignments to include\n                 \
                    \       (DEFUALT=25)\n  --no_self_alignments, -nsa\n         \
                    \               if set, skip pairwise alignments between regions\
                    \ on\n                        identical chromosomes as input (DEFAULT=False)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id012
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --panfile
                    - -p
                    description: Name of PanCake Data Object File (required)
                    args: !SimpleFlagArg
                      name: PAN_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --ref_chrom
                    - -rc
                    description: "Reference CHROMOSOME (define either ONE reference\n\
                      chromosome OR ONE reference genome)"
                    args: !SimpleFlagArg
                      name: REF_CHROM
                  - !Flag
                    optional: true
                    synonyms:
                    - --ref_genome
                    - -rg
                    description: "Reference GENOME (define either ONE reference\n\
                      chromosome OR ONE reference genome)"
                    args: !SimpleFlagArg
                      name: REF_GENOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --non_ref_chroms
                    - -nrc
                    description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL\
                      \ non-\nreference chromosomes)"
                    args: !RepeatFlagArg
                      name: NON_REF_CHROMS
                  - !Flag
                    optional: true
                    synonyms:
                    - --non_ref_genomes
                    - -nrg
                    description: "Names of non-reference GENOMES (DEFAULT: ALL non-\n\
                      reference genomes)"
                    args: !RepeatFlagArg
                      name: NON_REF_GENOMES
                  - !Flag
                    optional: true
                    synonyms:
                    - --exclude_genomes
                    - -eg
                    description: "Names of GENOMES to exclude from core analysis\n\
                      (DEFAULT: No genomes excluded)"
                    args: !RepeatFlagArg
                      name: GENOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --exclude_chromosomes
                    - -ec
                    description: "Names of CHROMOSOMES to exclude from core analysis\n\
                      (DEFAULT: No chromosomes excluded)"
                    args: !RepeatFlagArg
                      name: CHROMOSOME
                  - !Flag
                    optional: true
                    synonyms:
                    - --max_non_core_frac
                    - -f
                    description: "Maximum fraction of non-core sequence regions within\n\
                      each included sequence (FLOAT, DEAFULT=0.05)"
                    args: !SimpleFlagArg
                      name: MAX_NON_CORE_FRAC
                  - !Flag
                    optional: true
                    synonyms:
                    - --min_len
                    - -l
                    description: "minimum length of regions to identify as part of\
                      \ core\ngenome (INTEGER, DEFAULT=25)"
                    args: !SimpleFlagArg
                      name: MIN_LEN
                  - !Flag
                    optional: true
                    synonyms:
                    - --output
                    - -o
                    description: "directory to which .fasta files of core regions\
                      \ are\nwritten (DEFAULT: core_{REF_CHROM|REF_GENOME})"
                    args: !SimpleFlagArg
                      name: DICT
                  - !Flag
                    optional: true
                    synonyms:
                    - --no_output
                    - -no
                    description: if set, supress .fasta output of core regions
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --bed_file
                    - -b
                    description: ".bed file to which core regions are written (DEFAULT=\n\
                      core_{REF_CHROM|REF_GENOME}.bed)"
                    args: !SimpleFlagArg
                      name: BED_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --max_space
                    - -s
                    description: "maximum non-core space allowed within a core region\n\
                      (DEFAULT=25)\n"
                    args: !SimpleFlagArg
                      name: INT
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pancake core [-h] --panfile PAN_FILE [--ref_chrom\
                    \ REF_CHROM]\n                    [--ref_genome REF_GENOME]\n\
                    \                    [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
                    \ ...]]\n                    [--non_ref_genomes NON_REF_GENOMES\
                    \ [NON_REF_GENOMES ...]]\n                    [--exclude_genomes\
                    \ GENOME [GENOME ...]]\n                    [--exclude_chromosomes\
                    \ CHROMOSOME [CHROMOSOME ...]]\n                    [--max_non_core_frac\
                    \ MAX_NON_CORE_FRAC]\n                    [--min_len MIN_LEN]\
                    \ [--output DICT] [--no_output]\n                    [--bed_file\
                    \ BED_FILE] [--max_space INT]\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  --panfile PAN_FILE,\
                    \ -p PAN_FILE\n                        Name of PanCake Data Object\
                    \ File (required)\n  --ref_chrom REF_CHROM, -rc REF_CHROM\n  \
                    \                      Reference CHROMOSOME (define either ONE\
                    \ reference\n                        chromosome OR ONE reference\
                    \ genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n       \
                    \                 Reference GENOME (define either ONE reference\n\
                    \                        chromosome OR ONE reference genome)\n\
                    \  --non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc\
                    \ NON_REF_CHROMS [NON_REF_CHROMS ...]\n                      \
                    \  Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n   \
                    \                     reference chromosomes)\n  --non_ref_genomes\
                    \ NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES\
                    \ [NON_REF_GENOMES ...]\n                        Names of non-reference\
                    \ GENOMES (DEFAULT: ALL non-\n                        reference\
                    \ genomes)\n  --exclude_genomes GENOME [GENOME ...], -eg GENOME\
                    \ [GENOME ...]\n                        Names of GENOMES to exclude\
                    \ from core analysis\n                        (DEFAULT: No genomes\
                    \ excluded)\n  --exclude_chromosomes CHROMOSOME [CHROMOSOME ...],\
                    \ -ec CHROMOSOME [CHROMOSOME ...]\n                        Names\
                    \ of CHROMOSOMES to exclude from core analysis\n             \
                    \           (DEFAULT: No chromosomes excluded)\n  --max_non_core_frac\
                    \ MAX_NON_CORE_FRAC, -f MAX_NON_CORE_FRAC\n                  \
                    \      Maximum fraction of non-core sequence regions within\n\
                    \                        each included sequence (FLOAT, DEAFULT=0.05)\n\
                    \  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
                    \ length of regions to identify as part of core\n            \
                    \            genome (INTEGER, DEFAULT=25)\n  --output DICT, -o\
                    \ DICT\n                        directory to which .fasta files\
                    \ of core regions are\n                        written (DEFAULT:\
                    \ core_{REF_CHROM|REF_GENOME})\n  --no_output, -no      if set,\
                    \ supress .fasta output of core regions\n  --bed_file BED_FILE,\
                    \ -b BED_FILE\n                        .bed file to which core\
                    \ regions are written (DEFAULT=\n                        core_{REF_CHROM|REF_GENOME}.bed)\n\
                    \  --max_space INT, -s INT\n                        maximum non-core\
                    \ space allowed within a core region\n                       \
                    \ (DEFAULT=25)\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: pancake [-h]\n               {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
                  \               ...\n\nPanCake -- A data structure for pangenomes\
                  \ enabling for core and singleton\nidentification, without the requirement\
                  \ of annotation data.\n\npositional arguments:\n  {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
                  \    create              create a PanCake Data Object\n    status\
                  \              get overview about a PanCake Object\n    addAli \
                  \             include information from pairwise (BLAST or nucmer)\n\
                  \                        alignments into an already existing PanCake\
                  \ Object\n    specify             include genome information or\
                  \ rename chromosomes\n    addChrom            add chromosomes to\
                  \ an already existing PanCake Object\n    core                identify\
                  \ core regions\n    singletons          identify singleton regions\n\
                  \    sequence            get sequence of a chromosome (or chromosomal\
                  \ region)\n                        from a PanCake Object\n    graph\
                  \               graphical output of PanCake Objects (in DOT format)\n\
                  \                        #BETA MODE#\n\noptional arguments:\n  -h,\
                  \ --help            show this help message and exit\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake create [-h] [--sequences SEQUENCES [SEQUENCES\
                \ ...]]\n                      [--ids IDS [IDS ...]] [--email EMAIL]\n\
                \                      [--pan_file PAN_FILE] [--ali [ALI [ALI ...]]]\n\
                \                      [--min_len MIN_LEN] [--no_self_alignments]\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --sequences SEQUENCES [SEQUENCES ...], -s SEQUENCES\
                \ [SEQUENCES ...]\n                        fasta or multiple fasta\
                \ file providing input\n                        chromosome sequences\n\
                \  --ids IDS [IDS ...], -i IDS [IDS ...]\n                       \
                \ gi ids of sequences to download from NCBI\n  --email EMAIL, -e EMAIL\n\
                \                        if downloading your sequences via gi ids,\
                \ please\n                        specify your email address; in case\
                \ of excessive\n                        usage, NCBI will attempt to\
                \ contact a user at the\n                        e-mail address provided\
                \ prior to blocking access to\n                        the E-utilities\n\
                \  --pan_file PAN_FILE, -p PAN_FILE\n                        File\
                \ name of new PanCake Object\n                        (DEFAULT=pan_files/pancake.pan)\n\
                \  --ali [ALI [ALI ...]], -a [ALI [ALI ...]]\n                   \
                \     pairwise alignments (BLAST or nucmer output) to\n          \
                \              include in PanCake Object\n  --min_len MIN_LEN, -l\
                \ MIN_LEN\n                        minimum length of pairwise alignments\
                \ to include\n                        (DEFUALT=25)\n  --no_self_alignments,\
                \ -nsa\n                        if set, skip pairwise alignments between\
                \ regions on\n                        identical chromosomes as input\
                \ (DEFAULT=False)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --chrom
                - -c
                description: name(s) of respective chromosome(s)
                args: !RepeatFlagArg
                  name: CHROM
              - !Flag
                optional: true
                synonyms:
                - --name
                - -n
                description: "new name of specified chromosome, this will become the\n\
                  chromosome's name in incidental output files"
                args: !SimpleFlagArg
                  name: NEW_NAME
              - !Flag
                optional: true
                synonyms:
                - --genome
                - -g
                description: name of genome CHROM belongs to
                args: !SimpleFlagArg
                  name: GENOME
              - !Flag
                optional: true
                synonyms:
                - --genome_file
                - -f
                description: "input file containing mapping of chromosomes to\ngenomes\
                  \ and additional chromosome names"
                args: !SimpleFlagArg
                  name: FILE_NAME
              - !Flag
                optional: true
                synonyms:
                - --delete
                - -d
                description: "chromosome names to delete\n"
                args: !RepeatFlagArg
                  name: OLD_NAME
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom\
                \ CHROM [CHROM ...]]\n                       [--name NEW_NAME] [--genome\
                \ GENOME]\n                       [--genome_file FILE_NAME]\n    \
                \                   [--delete OLD_NAME [OLD_NAME ...]]\n\noptional\
                \ arguments:\n  -h, --help            show this help message and exit\n\
                \  --panfile PAN_FILE, -p PAN_FILE\n                        Name of\
                \ PanCake Data Object File (required)\n  --chrom CHROM [CHROM ...],\
                \ -c CHROM [CHROM ...]\n                        name(s) of respective\
                \ chromosome(s)\n  --name NEW_NAME, -n NEW_NAME\n                \
                \        new name of specified chromosome, this will become the\n\
                \                        chromosome's name in incidental output files\n\
                \  --genome GENOME, -g GENOME\n                        name of genome\
                \ CHROM belongs to\n  --genome_file FILE_NAME, -f FILE_NAME\n    \
                \                    input file containing mapping of chromosomes\
                \ to\n                        genomes and additional chromosome names\n\
                \  --delete OLD_NAME [OLD_NAME ...], -d OLD_NAME [OLD_NAME ...]\n\
                \                        chromosome names to delete\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: ALI_FILE
                description: Alignment File (BLAST or nucmer output)
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --output
                - -o
                description: output pangenome file (PAN_FILE will be unchanged)
                args: !SimpleFlagArg
                  name: NEW_PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --min_len
                - -l
                description: "minimum length of pairwise alignments to get included\n\
                  (DEFAULT=25)"
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - --no_self_alignments
                - -nsa
                description: "if set, skip pairwise alignments between regions on\n\
                  identical chromosomes (DEFAULT=False)\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake addAli [-h] --panfile PAN_FILE [--output\
                \ NEW_PAN_FILE]\n                      [--min_len INT] [--no_self_alignments]\n\
                \                      ALI_FILE [ALI_FILE ...]\n\npositional arguments:\n\
                \  ALI_FILE              Alignment File (BLAST or nucmer output)\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --panfile PAN_FILE, -p PAN_FILE\n                  \
                \      Name of PanCake Data Object File (required)\n  --output NEW_PAN_FILE,\
                \ -o NEW_PAN_FILE\n                        output pangenome file (PAN_FILE\
                \ will be unchanged)\n  --min_len INT, -l INT\n                  \
                \      minimum length of pairwise alignments to get included\n   \
                \                     (DEFAULT=25)\n  --no_self_alignments, -nsa\n\
                \                        if set, skip pairwise alignments between\
                \ regions on\n                        identical chromosomes (DEFAULT=False)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: PAN_FILE
                description: Name of PanCake Data Object File
              named: []
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake status [-h] PAN_FILE\n\npositional arguments:\n\
                \  PAN_FILE    Name of PanCake Data Object File\n\noptional arguments:\n\
                \  -h, --help  show this help message and exit\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --chroms
                - -c
                description: "Chromosomes in Output (by default all chromosomes\n\
                  covered in PAN_FILE)"
                args: !RepeatFlagArg
                  name: CHROMS
              - !Flag
                optional: true
                synonyms:
                - -starts
                description: "Start positions (in same order as chromosomes),\nDEFAULT=1\
                  \ on all chromosomes"
                args: !RepeatFlagArg
                  name: START_POS
              - !Flag
                optional: true
                synonyms:
                - -stops
                description: "Stop positions (in same order as chromosomes),\nDEFAULT=length\
                  \ of chromosomes"
                args: !RepeatFlagArg
                  name: STOP_POS
              - !Flag
                optional: true
                synonyms:
                - --max_nodes
                description: "Maximal number of nodes in output graph.\n(DEFAULT=10,000):\
                  \ if exceeded, PanCake will warn and\ninterrupt!"
                args: !SimpleFlagArg
                  name: MAX_NODES
              - !Flag
                optional: true
                synonyms:
                - --max_edges
                description: "Maximal number of edges in output graph.\n(DEFAULT=10,000):\
                  \ if exceeded, PanCake will warn and\ninterrupt!"
                args: !SimpleFlagArg
                  name: MAX_EDGES
              - !Flag
                optional: true
                synonyms:
                - --max_entries
                - -me
                description: "Shared features are truncated in output if number of\n\
                  contained feature instances > MAX_ENTRIES (DEFAULT:\nMAX_ENTRIES=50)"
                args: !SimpleFlagArg
                  name: MAX_ENTRIES
              - !Flag
                optional: true
                synonyms:
                - -all
                description: "if set, all chromosomes contained in PAN_FILE appear\n\
                  in output (irrespective to CHROMS), DEFAULT=False"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -regions
                description: "if set, only specified regions are shown in output\n\
                  (DEFAULT=False), ignored if -all is set"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --output
                - -o
                description: "output DOT file (DEFAULT: STDOUT)\n"
                args: !SimpleFlagArg
                  name: FILE
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake graph [-h] --panfile PAN_FILE [--chroms CHROMS\
                \ [CHROMS ...]]\n                     [-starts START_POS [START_POS\
                \ ...]]\n                     [-stops STOP_POS [STOP_POS ...]] [--max_nodes\
                \ MAX_NODES]\n                     [--max_edges MAX_EDGES] [--max_entries\
                \ MAX_ENTRIES]\n                     [-all] [-regions] [--output FILE]\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --panfile PAN_FILE, -p PAN_FILE\n                  \
                \      Name of PanCake Data Object File (required)\n  --chroms CHROMS\
                \ [CHROMS ...], -c CHROMS [CHROMS ...]\n                        Chromosomes\
                \ in Output (by default all chromosomes\n                        covered\
                \ in PAN_FILE)\n  -starts START_POS [START_POS ...]\n            \
                \            Start positions (in same order as chromosomes),\n   \
                \                     DEFAULT=1 on all chromosomes\n  -stops STOP_POS\
                \ [STOP_POS ...]\n                        Stop positions (in same\
                \ order as chromosomes),\n                        DEFAULT=length of\
                \ chromosomes\n  --max_nodes MAX_NODES\n                        Maximal\
                \ number of nodes in output graph.\n                        (DEFAULT=10,000):\
                \ if exceeded, PanCake will warn and\n                        interrupt!\n\
                \  --max_edges MAX_EDGES\n                        Maximal number of\
                \ edges in output graph.\n                        (DEFAULT=10,000):\
                \ if exceeded, PanCake will warn and\n                        interrupt!\n\
                \  --max_entries MAX_ENTRIES, -me MAX_ENTRIES\n                  \
                \      Shared features are truncated in output if number of\n    \
                \                    contained feature instances > MAX_ENTRIES (DEFAULT:\n\
                \                        MAX_ENTRIES=50)\n  -all                 \
                \ if set, all chromosomes contained in PAN_FILE appear\n         \
                \               in output (irrespective to CHROMS), DEFAULT=False\n\
                \  -regions              if set, only specified regions are shown\
                \ in output\n                        (DEFAULT=False), ignored if -all\
                \ is set\n  --output FILE, -o FILE\n                        output\
                \ DOT file (DEFAULT: STDOUT)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id009
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --ref_chrom
                - -rc
                description: "Reference CHROMOSOME (define either ONE reference\n\
                  chromosome or ONE reference genome)"
                args: !SimpleFlagArg
                  name: REF_CHROM
              - !Flag
                optional: true
                synonyms:
                - --ref_genome
                - -rg
                description: "Reference GENOME (define either ONE reference\nchromosome\
                  \ or ONE reference genome)"
                args: !SimpleFlagArg
                  name: REF_GENOME
              - !Flag
                optional: true
                synonyms:
                - --non_ref_chroms
                - -nrc
                description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n\
                  reference chromosomes)"
                args: !RepeatFlagArg
                  name: NON_REF_CHROMS
              - !Flag
                optional: true
                synonyms:
                - --non_ref_genomes
                - -nrg
                description: "Names of non-reference GENOMES (DEFAULT: ALL non-\n\
                  reference genomes)"
                args: !RepeatFlagArg
                  name: NON_REF_GENOMES
              - !Flag
                optional: true
                synonyms:
                - --exclude_genomes
                - -eg
                description: "Names of GENOMES to exclude from singleton analysis\n\
                  (DEFAULT: No genomes excluded)"
                args: !RepeatFlagArg
                  name: GENOME
              - !Flag
                optional: true
                synonyms:
                - --exclude_chromosomes
                - -ec
                description: "Names of CHROMOSOMES to exclude from singleton\nanalysis\
                  \ (DEFAULT: No chromosomes excluded)"
                args: !RepeatFlagArg
                  name: CHROMOSOME
              - !Flag
                optional: true
                synonyms:
                - --min_len
                - -l
                description: "minimum length of regions to identify as a singleton\n\
                  region (INTEGER, DEFAULT=25)"
                args: !SimpleFlagArg
                  name: MIN_LEN
              - !Flag
                optional: true
                synonyms:
                - --output
                - -o
                description: "directory to which .fasta files of singleton regions\n\
                  are written (DEFAULT:\nsingletons_{REF_CHROM|REF_GENOME})"
                args: !SimpleFlagArg
                  name: DICT
              - !Flag
                optional: true
                synonyms:
                - --no_output
                - -no
                description: if set, supress .fasta output of singleton regions
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --bed_file
                - -b
                description: ".bed file to which singleton regions are written\n(DEFAULT=\
                  \ singletons_{REF_CHROM|REF_GENOME}.bed)\n"
                args: !SimpleFlagArg
                  name: BED_FILE
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake singletons [-h] --panfile PAN_FILE [--ref_chrom\
                \ REF_CHROM]\n                          [--ref_genome REF_GENOME]\n\
                \                          [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
                \ ...]]\n                          [--non_ref_genomes NON_REF_GENOMES\
                \ [NON_REF_GENOMES ...]]\n                          [--exclude_genomes\
                \ GENOME [GENOME ...]]\n                          [--exclude_chromosomes\
                \ CHROMOSOME [CHROMOSOME ...]]\n                          [--min_len\
                \ MIN_LEN] [--output DICT] [--no_output]\n                       \
                \   [--bed_file BED_FILE]\n\noptional arguments:\n  -h, --help   \
                \         show this help message and exit\n  --panfile PAN_FILE, -p\
                \ PAN_FILE\n                        Name of PanCake Data Object File\
                \ (required)\n  --ref_chrom REF_CHROM, -rc REF_CHROM\n           \
                \             Reference CHROMOSOME (define either ONE reference\n\
                \                        chromosome or ONE reference genome)\n  --ref_genome\
                \ REF_GENOME, -rg REF_GENOME\n                        Reference GENOME\
                \ (define either ONE reference\n                        chromosome\
                \ or ONE reference genome)\n  --non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
                \ ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS ...]\n               \
                \         Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n\
                \                        reference chromosomes)\n  --non_ref_genomes\
                \ NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES [NON_REF_GENOMES\
                \ ...]\n                        Names of non-reference GENOMES (DEFAULT:\
                \ ALL non-\n                        reference genomes)\n  --exclude_genomes\
                \ GENOME [GENOME ...], -eg GENOME [GENOME ...]\n                 \
                \       Names of GENOMES to exclude from singleton analysis\n    \
                \                    (DEFAULT: No genomes excluded)\n  --exclude_chromosomes\
                \ CHROMOSOME [CHROMOSOME ...], -ec CHROMOSOME [CHROMOSOME ...]\n \
                \                       Names of CHROMOSOMES to exclude from singleton\n\
                \                        analysis (DEFAULT: No chromosomes excluded)\n\
                \  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
                \ length of regions to identify as a singleton\n                 \
                \       region (INTEGER, DEFAULT=25)\n  --output DICT, -o DICT\n \
                \                       directory to which .fasta files of singleton\
                \ regions\n                        are written (DEFAULT:\n       \
                \                 singletons_{REF_CHROM|REF_GENOME})\n  --no_output,\
                \ -no      if set, supress .fasta output of singleton regions\n  --bed_file\
                \ BED_FILE, -b BED_FILE\n                        .bed file to which\
                \ singleton regions are written\n                        (DEFAULT=\
                \ singletons_{REF_CHROM|REF_GENOME}.bed)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id010
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --chrom
                - -c
                description: Chromosome from which sequence originates
                args: !SimpleFlagArg
                  name: CHROMOSOME
              - !Flag
                optional: true
                synonyms:
                - --genome
                - -g
                description: "(multiple) .fasta output of GENOME (if set, start and\n\
                  stop will be ignored)"
                args: !SimpleFlagArg
                  name: GENOME
              - !Flag
                optional: true
                synonyms:
                - --output
                - -o
                description: "file to which .fasta output will be written (DEFAULT\
                  \ =\nSTDOUT)"
                args: !SimpleFlagArg
                  name: F
              - !Flag
                optional: true
                synonyms:
                - --linewidth
                - -lw
                description: line witdth in .fastafile (DEFAULT=100)
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -start
                description: (1-based) start position on CHROMOSME (DEFAULT = 1)
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -stop
                description: "(1-based) stop position on CHROMOSME (DEFAULT = length\n\
                  of CHROMOSME)\n"
                args: !SimpleFlagArg
                  name: INT
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake sequence [-h] --panfile PAN_FILE\n      \
                \                  [--chrom CHROMOSOME | --genome GENOME] [--output\
                \ F]\n                        [--linewidth INT] [-start INT] [-stop\
                \ INT]\n\noptional arguments:\n  -h, --help            show this help\
                \ message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n          \
                \              Name of PanCake Data Object File (required)\n  --chrom\
                \ CHROMOSOME, -c CHROMOSOME\n                        Chromosome from\
                \ which sequence originates\n  --genome GENOME, -g GENOME\n      \
                \                  (multiple) .fasta output of GENOME (if set, start\
                \ and\n                        stop will be ignored)\n  --output F,\
                \ -o F      file to which .fasta output will be written (DEFAULT =\n\
                \                        STDOUT)\n  --linewidth INT, -lw INT\n   \
                \                     line witdth in .fastafile (DEFAULT=100)\n  -start\
                \ INT            (1-based) start position on CHROMOSME (DEFAULT =\
                \ 1)\n  -stop INT             (1-based) stop position on CHROMOSME\
                \ (DEFAULT = length\n                        of CHROMOSME)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id011
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --sequences
                - -s
                description: "fasta or multiple fasta file providing input\nchromosome\
                  \ sequences"
                args: !RepeatFlagArg
                  name: SEQUENCES
              - !Flag
                optional: true
                synonyms:
                - --ids
                - -i
                description: gi ids of sequences to download from NCBI
                args: !RepeatFlagArg
                  name: IDS
              - !Flag
                optional: true
                synonyms:
                - --email
                - -e
                description: "if downloading your sequences via gi ids, please\nspecify\
                  \ your email address; in case of excessive\nusage, NCBI will attempt\
                  \ to contact a user at the\ne-mail address provided prior to blocking\
                  \ access to\nthe E-utilities"
                args: !SimpleFlagArg
                  name: EMAIL
              - !Flag
                optional: true
                synonyms:
                - --output
                - -o
                description: "output file for new PanCake Object (DEFAULT=PAN_FILE);\n\
                  if specified, PanCake Data Object in PAN_FILE stays\nunchanged"
                args: !SimpleFlagArg
                  name: OUTPUT
              - !Flag
                optional: true
                synonyms:
                - --ali
                description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments\
                  \ (BLAST or nucmer output) to\ninclude in PanCake Object"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --min_len
                - -l
                description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
                args: !SimpleFlagArg
                  name: MIN_LEN
              - !Flag
                optional: true
                synonyms:
                - --no_self_alignments
                - -nsa
                description: "if set, skip pairwise alignments between regions on\n\
                  identical chromosomes as input (DEFAULT=False)\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake addChrom [-h] --panfile PAN_FILE\n      \
                \                  [--sequences SEQUENCES [SEQUENCES ...]]\n     \
                \                   [--ids IDS [IDS ...]] [--email EMAIL]\n      \
                \                  [--output OUTPUT] [--ali [ALI [ALI ...]]]\n   \
                \                     [--min_len MIN_LEN] [--no_self_alignments]\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --panfile PAN_FILE, -p PAN_FILE\n                  \
                \      Name of PanCake Data Object File (required)\n  --sequences\
                \ SEQUENCES [SEQUENCES ...], -s SEQUENCES [SEQUENCES ...]\n      \
                \                  fasta or multiple fasta file providing input\n\
                \                        chromosome sequences\n  --ids IDS [IDS ...],\
                \ -i IDS [IDS ...]\n                        gi ids of sequences to\
                \ download from NCBI\n  --email EMAIL, -e EMAIL\n                \
                \        if downloading your sequences via gi ids, please\n      \
                \                  specify your email address; in case of excessive\n\
                \                        usage, NCBI will attempt to contact a user\
                \ at the\n                        e-mail address provided prior to\
                \ blocking access to\n                        the E-utilities\n  --output\
                \ OUTPUT, -o OUTPUT\n                        output file for new PanCake\
                \ Object (DEFAULT=PAN_FILE);\n                        if specified,\
                \ PanCake Data Object in PAN_FILE stays\n                        unchanged\n\
                \  --ali [ALI [ALI ...]], -a [ALI [ALI ...]]\n                   \
                \     pairwise alignments (BLAST or nucmer output) to\n          \
                \              include in PanCake Object\n  --min_len MIN_LEN, -l\
                \ MIN_LEN\n                        minimum length of pairwise alignments\
                \ to include\n                        (DEFUALT=25)\n  --no_self_alignments,\
                \ -nsa\n                        if set, skip pairwise alignments between\
                \ regions on\n                        identical chromosomes as input\
                \ (DEFAULT=False)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id012
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --panfile
                - -p
                description: Name of PanCake Data Object File (required)
                args: !SimpleFlagArg
                  name: PAN_FILE
              - !Flag
                optional: true
                synonyms:
                - --ref_chrom
                - -rc
                description: "Reference CHROMOSOME (define either ONE reference\n\
                  chromosome OR ONE reference genome)"
                args: !SimpleFlagArg
                  name: REF_CHROM
              - !Flag
                optional: true
                synonyms:
                - --ref_genome
                - -rg
                description: "Reference GENOME (define either ONE reference\nchromosome\
                  \ OR ONE reference genome)"
                args: !SimpleFlagArg
                  name: REF_GENOME
              - !Flag
                optional: true
                synonyms:
                - --non_ref_chroms
                - -nrc
                description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n\
                  reference chromosomes)"
                args: !RepeatFlagArg
                  name: NON_REF_CHROMS
              - !Flag
                optional: true
                synonyms:
                - --non_ref_genomes
                - -nrg
                description: "Names of non-reference GENOMES (DEFAULT: ALL non-\n\
                  reference genomes)"
                args: !RepeatFlagArg
                  name: NON_REF_GENOMES
              - !Flag
                optional: true
                synonyms:
                - --exclude_genomes
                - -eg
                description: "Names of GENOMES to exclude from core analysis\n(DEFAULT:\
                  \ No genomes excluded)"
                args: !RepeatFlagArg
                  name: GENOME
              - !Flag
                optional: true
                synonyms:
                - --exclude_chromosomes
                - -ec
                description: "Names of CHROMOSOMES to exclude from core analysis\n\
                  (DEFAULT: No chromosomes excluded)"
                args: !RepeatFlagArg
                  name: CHROMOSOME
              - !Flag
                optional: true
                synonyms:
                - --max_non_core_frac
                - -f
                description: "Maximum fraction of non-core sequence regions within\n\
                  each included sequence (FLOAT, DEAFULT=0.05)"
                args: !SimpleFlagArg
                  name: MAX_NON_CORE_FRAC
              - !Flag
                optional: true
                synonyms:
                - --min_len
                - -l
                description: "minimum length of regions to identify as part of core\n\
                  genome (INTEGER, DEFAULT=25)"
                args: !SimpleFlagArg
                  name: MIN_LEN
              - !Flag
                optional: true
                synonyms:
                - --output
                - -o
                description: "directory to which .fasta files of core regions are\n\
                  written (DEFAULT: core_{REF_CHROM|REF_GENOME})"
                args: !SimpleFlagArg
                  name: DICT
              - !Flag
                optional: true
                synonyms:
                - --no_output
                - -no
                description: if set, supress .fasta output of core regions
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --bed_file
                - -b
                description: ".bed file to which core regions are written (DEFAULT=\n\
                  core_{REF_CHROM|REF_GENOME}.bed)"
                args: !SimpleFlagArg
                  name: BED_FILE
              - !Flag
                optional: true
                synonyms:
                - --max_space
                - -s
                description: "maximum non-core space allowed within a core region\n\
                  (DEFAULT=25)\n"
                args: !SimpleFlagArg
                  name: INT
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pancake core [-h] --panfile PAN_FILE [--ref_chrom\
                \ REF_CHROM]\n                    [--ref_genome REF_GENOME]\n    \
                \                [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
                \ ...]]\n                    [--non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES\
                \ ...]]\n                    [--exclude_genomes GENOME [GENOME ...]]\n\
                \                    [--exclude_chromosomes CHROMOSOME [CHROMOSOME\
                \ ...]]\n                    [--max_non_core_frac MAX_NON_CORE_FRAC]\n\
                \                    [--min_len MIN_LEN] [--output DICT] [--no_output]\n\
                \                    [--bed_file BED_FILE] [--max_space INT]\n\noptional\
                \ arguments:\n  -h, --help            show this help message and exit\n\
                \  --panfile PAN_FILE, -p PAN_FILE\n                        Name of\
                \ PanCake Data Object File (required)\n  --ref_chrom REF_CHROM, -rc\
                \ REF_CHROM\n                        Reference CHROMOSOME (define\
                \ either ONE reference\n                        chromosome OR ONE\
                \ reference genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n \
                \                       Reference GENOME (define either ONE reference\n\
                \                        chromosome OR ONE reference genome)\n  --non_ref_chroms\
                \ NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS\
                \ ...]\n                        Names of non-reference CHROMOSOMES\
                \ (DEFAULT: ALL non-\n                        reference chromosomes)\n\
                \  --non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES\
                \ [NON_REF_GENOMES ...]\n                        Names of non-reference\
                \ GENOMES (DEFAULT: ALL non-\n                        reference genomes)\n\
                \  --exclude_genomes GENOME [GENOME ...], -eg GENOME [GENOME ...]\n\
                \                        Names of GENOMES to exclude from core analysis\n\
                \                        (DEFAULT: No genomes excluded)\n  --exclude_chromosomes\
                \ CHROMOSOME [CHROMOSOME ...], -ec CHROMOSOME [CHROMOSOME ...]\n \
                \                       Names of CHROMOSOMES to exclude from core\
                \ analysis\n                        (DEFAULT: No chromosomes excluded)\n\
                \  --max_non_core_frac MAX_NON_CORE_FRAC, -f MAX_NON_CORE_FRAC\n \
                \                       Maximum fraction of non-core sequence regions\
                \ within\n                        each included sequence (FLOAT, DEAFULT=0.05)\n\
                \  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
                \ length of regions to identify as part of core\n                \
                \        genome (INTEGER, DEFAULT=25)\n  --output DICT, -o DICT\n\
                \                        directory to which .fasta files of core regions\
                \ are\n                        written (DEFAULT: core_{REF_CHROM|REF_GENOME})\n\
                \  --no_output, -no      if set, supress .fasta output of core regions\n\
                \  --bed_file BED_FILE, -b BED_FILE\n                        .bed\
                \ file to which core regions are written (DEFAULT=\n             \
                \           core_{REF_CHROM|REF_GENOME}.bed)\n  --max_space INT, -s\
                \ INT\n                        maximum non-core space allowed within\
                \ a core region\n                        (DEFAULT=25)\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: pancake [-h]\n               {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
              \               ...\n\nPanCake -- A data structure for pangenomes enabling\
              \ for core and singleton\nidentification, without the requirement of\
              \ annotation data.\n\npositional arguments:\n  {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
              \    create              create a PanCake Data Object\n    status  \
              \            get overview about a PanCake Object\n    addAli       \
              \       include information from pairwise (BLAST or nucmer)\n      \
              \                  alignments into an already existing PanCake Object\n\
              \    specify             include genome information or rename chromosomes\n\
              \    addChrom            add chromosomes to an already existing PanCake\
              \ Object\n    core                identify core regions\n    singletons\
              \          identify singleton regions\n    sequence            get sequence\
              \ of a chromosome (or chromosomal region)\n                        from\
              \ a PanCake Object\n    graph               graphical output of PanCake\
              \ Objects (in DOT format)\n                        #BETA MODE#\n\noptional\
              \ arguments:\n  -h, --help            show this help message and exit\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake create [-h] [--sequences SEQUENCES [SEQUENCES\
            \ ...]]\n                      [--ids IDS [IDS ...]] [--email EMAIL]\n\
            \                      [--pan_file PAN_FILE] [--ali [ALI [ALI ...]]]\n\
            \                      [--min_len MIN_LEN] [--no_self_alignments]\n\n\
            optional arguments:\n  -h, --help            show this help message and\
            \ exit\n  --sequences SEQUENCES [SEQUENCES ...], -s SEQUENCES [SEQUENCES\
            \ ...]\n                        fasta or multiple fasta file providing\
            \ input\n                        chromosome sequences\n  --ids IDS [IDS\
            \ ...], -i IDS [IDS ...]\n                        gi ids of sequences\
            \ to download from NCBI\n  --email EMAIL, -e EMAIL\n                 \
            \       if downloading your sequences via gi ids, please\n           \
            \             specify your email address; in case of excessive\n     \
            \                   usage, NCBI will attempt to contact a user at the\n\
            \                        e-mail address provided prior to blocking access\
            \ to\n                        the E-utilities\n  --pan_file PAN_FILE,\
            \ -p PAN_FILE\n                        File name of new PanCake Object\n\
            \                        (DEFAULT=pan_files/pancake.pan)\n  --ali [ALI\
            \ [ALI ...]], -a [ALI [ALI ...]]\n                        pairwise alignments\
            \ (BLAST or nucmer output) to\n                        include in PanCake\
            \ Object\n  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
            \ length of pairwise alignments to include\n                        (DEFUALT=25)\n\
            \  --no_self_alignments, -nsa\n                        if set, skip pairwise\
            \ alignments between regions on\n                        identical chromosomes\
            \ as input (DEFAULT=False)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --chrom
            - -c
            description: name(s) of respective chromosome(s)
            args: !RepeatFlagArg
              name: CHROM
          - !Flag
            optional: true
            synonyms:
            - --name
            - -n
            description: "new name of specified chromosome, this will become the\n\
              chromosome's name in incidental output files"
            args: !SimpleFlagArg
              name: NEW_NAME
          - !Flag
            optional: true
            synonyms:
            - --genome
            - -g
            description: name of genome CHROM belongs to
            args: !SimpleFlagArg
              name: GENOME
          - !Flag
            optional: true
            synonyms:
            - --genome_file
            - -f
            description: "input file containing mapping of chromosomes to\ngenomes\
              \ and additional chromosome names"
            args: !SimpleFlagArg
              name: FILE_NAME
          - !Flag
            optional: true
            synonyms:
            - --delete
            - -d
            description: "chromosome names to delete\n"
            args: !RepeatFlagArg
              name: OLD_NAME
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom CHROM\
            \ [CHROM ...]]\n                       [--name NEW_NAME] [--genome GENOME]\n\
            \                       [--genome_file FILE_NAME]\n                  \
            \     [--delete OLD_NAME [OLD_NAME ...]]\n\noptional arguments:\n  -h,\
            \ --help            show this help message and exit\n  --panfile PAN_FILE,\
            \ -p PAN_FILE\n                        Name of PanCake Data Object File\
            \ (required)\n  --chrom CHROM [CHROM ...], -c CHROM [CHROM ...]\n    \
            \                    name(s) of respective chromosome(s)\n  --name NEW_NAME,\
            \ -n NEW_NAME\n                        new name of specified chromosome,\
            \ this will become the\n                        chromosome's name in incidental\
            \ output files\n  --genome GENOME, -g GENOME\n                       \
            \ name of genome CHROM belongs to\n  --genome_file FILE_NAME, -f FILE_NAME\n\
            \                        input file containing mapping of chromosomes\
            \ to\n                        genomes and additional chromosome names\n\
            \  --delete OLD_NAME [OLD_NAME ...], -d OLD_NAME [OLD_NAME ...]\n    \
            \                    chromosome names to delete\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: ALI_FILE
            description: Alignment File (BLAST or nucmer output)
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --output
            - -o
            description: output pangenome file (PAN_FILE will be unchanged)
            args: !SimpleFlagArg
              name: NEW_PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --min_len
            - -l
            description: "minimum length of pairwise alignments to get included\n\
              (DEFAULT=25)"
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - --no_self_alignments
            - -nsa
            description: "if set, skip pairwise alignments between regions on\nidentical\
              \ chromosomes (DEFAULT=False)\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake addAli [-h] --panfile PAN_FILE [--output NEW_PAN_FILE]\n\
            \                      [--min_len INT] [--no_self_alignments]\n      \
            \                ALI_FILE [ALI_FILE ...]\n\npositional arguments:\n  ALI_FILE\
            \              Alignment File (BLAST or nucmer output)\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --panfile\
            \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake Data\
            \ Object File (required)\n  --output NEW_PAN_FILE, -o NEW_PAN_FILE\n \
            \                       output pangenome file (PAN_FILE will be unchanged)\n\
            \  --min_len INT, -l INT\n                        minimum length of pairwise\
            \ alignments to get included\n                        (DEFAULT=25)\n \
            \ --no_self_alignments, -nsa\n                        if set, skip pairwise\
            \ alignments between regions on\n                        identical chromosomes\
            \ (DEFAULT=False)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: PAN_FILE
            description: Name of PanCake Data Object File
          named: []
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake status [-h] PAN_FILE\n\npositional arguments:\n\
            \  PAN_FILE    Name of PanCake Data Object File\n\noptional arguments:\n\
            \  -h, --help  show this help message and exit\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --chroms
            - -c
            description: "Chromosomes in Output (by default all chromosomes\ncovered\
              \ in PAN_FILE)"
            args: !RepeatFlagArg
              name: CHROMS
          - !Flag
            optional: true
            synonyms:
            - -starts
            description: "Start positions (in same order as chromosomes),\nDEFAULT=1\
              \ on all chromosomes"
            args: !RepeatFlagArg
              name: START_POS
          - !Flag
            optional: true
            synonyms:
            - -stops
            description: "Stop positions (in same order as chromosomes),\nDEFAULT=length\
              \ of chromosomes"
            args: !RepeatFlagArg
              name: STOP_POS
          - !Flag
            optional: true
            synonyms:
            - --max_nodes
            description: "Maximal number of nodes in output graph.\n(DEFAULT=10,000):\
              \ if exceeded, PanCake will warn and\ninterrupt!"
            args: !SimpleFlagArg
              name: MAX_NODES
          - !Flag
            optional: true
            synonyms:
            - --max_edges
            description: "Maximal number of edges in output graph.\n(DEFAULT=10,000):\
              \ if exceeded, PanCake will warn and\ninterrupt!"
            args: !SimpleFlagArg
              name: MAX_EDGES
          - !Flag
            optional: true
            synonyms:
            - --max_entries
            - -me
            description: "Shared features are truncated in output if number of\ncontained\
              \ feature instances > MAX_ENTRIES (DEFAULT:\nMAX_ENTRIES=50)"
            args: !SimpleFlagArg
              name: MAX_ENTRIES
          - !Flag
            optional: true
            synonyms:
            - -all
            description: "if set, all chromosomes contained in PAN_FILE appear\nin\
              \ output (irrespective to CHROMS), DEFAULT=False"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -regions
            description: "if set, only specified regions are shown in output\n(DEFAULT=False),\
              \ ignored if -all is set"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --output
            - -o
            description: "output DOT file (DEFAULT: STDOUT)\n"
            args: !SimpleFlagArg
              name: FILE
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake graph [-h] --panfile PAN_FILE [--chroms CHROMS\
            \ [CHROMS ...]]\n                     [-starts START_POS [START_POS ...]]\n\
            \                     [-stops STOP_POS [STOP_POS ...]] [--max_nodes MAX_NODES]\n\
            \                     [--max_edges MAX_EDGES] [--max_entries MAX_ENTRIES]\n\
            \                     [-all] [-regions] [--output FILE]\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --panfile\
            \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake Data\
            \ Object File (required)\n  --chroms CHROMS [CHROMS ...], -c CHROMS [CHROMS\
            \ ...]\n                        Chromosomes in Output (by default all\
            \ chromosomes\n                        covered in PAN_FILE)\n  -starts\
            \ START_POS [START_POS ...]\n                        Start positions (in\
            \ same order as chromosomes),\n                        DEFAULT=1 on all\
            \ chromosomes\n  -stops STOP_POS [STOP_POS ...]\n                    \
            \    Stop positions (in same order as chromosomes),\n                \
            \        DEFAULT=length of chromosomes\n  --max_nodes MAX_NODES\n    \
            \                    Maximal number of nodes in output graph.\n      \
            \                  (DEFAULT=10,000): if exceeded, PanCake will warn and\n\
            \                        interrupt!\n  --max_edges MAX_EDGES\n       \
            \                 Maximal number of edges in output graph.\n         \
            \               (DEFAULT=10,000): if exceeded, PanCake will warn and\n\
            \                        interrupt!\n  --max_entries MAX_ENTRIES, -me\
            \ MAX_ENTRIES\n                        Shared features are truncated in\
            \ output if number of\n                        contained feature instances\
            \ > MAX_ENTRIES (DEFAULT:\n                        MAX_ENTRIES=50)\n \
            \ -all                  if set, all chromosomes contained in PAN_FILE\
            \ appear\n                        in output (irrespective to CHROMS),\
            \ DEFAULT=False\n  -regions              if set, only specified regions\
            \ are shown in output\n                        (DEFAULT=False), ignored\
            \ if -all is set\n  --output FILE, -o FILE\n                        output\
            \ DOT file (DEFAULT: STDOUT)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id009
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --ref_chrom
            - -rc
            description: "Reference CHROMOSOME (define either ONE reference\nchromosome\
              \ or ONE reference genome)"
            args: !SimpleFlagArg
              name: REF_CHROM
          - !Flag
            optional: true
            synonyms:
            - --ref_genome
            - -rg
            description: "Reference GENOME (define either ONE reference\nchromosome\
              \ or ONE reference genome)"
            args: !SimpleFlagArg
              name: REF_GENOME
          - !Flag
            optional: true
            synonyms:
            - --non_ref_chroms
            - -nrc
            description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n\
              reference chromosomes)"
            args: !RepeatFlagArg
              name: NON_REF_CHROMS
          - !Flag
            optional: true
            synonyms:
            - --non_ref_genomes
            - -nrg
            description: "Names of non-reference GENOMES (DEFAULT: ALL non-\nreference\
              \ genomes)"
            args: !RepeatFlagArg
              name: NON_REF_GENOMES
          - !Flag
            optional: true
            synonyms:
            - --exclude_genomes
            - -eg
            description: "Names of GENOMES to exclude from singleton analysis\n(DEFAULT:\
              \ No genomes excluded)"
            args: !RepeatFlagArg
              name: GENOME
          - !Flag
            optional: true
            synonyms:
            - --exclude_chromosomes
            - -ec
            description: "Names of CHROMOSOMES to exclude from singleton\nanalysis\
              \ (DEFAULT: No chromosomes excluded)"
            args: !RepeatFlagArg
              name: CHROMOSOME
          - !Flag
            optional: true
            synonyms:
            - --min_len
            - -l
            description: "minimum length of regions to identify as a singleton\nregion\
              \ (INTEGER, DEFAULT=25)"
            args: !SimpleFlagArg
              name: MIN_LEN
          - !Flag
            optional: true
            synonyms:
            - --output
            - -o
            description: "directory to which .fasta files of singleton regions\nare\
              \ written (DEFAULT:\nsingletons_{REF_CHROM|REF_GENOME})"
            args: !SimpleFlagArg
              name: DICT
          - !Flag
            optional: true
            synonyms:
            - --no_output
            - -no
            description: if set, supress .fasta output of singleton regions
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --bed_file
            - -b
            description: ".bed file to which singleton regions are written\n(DEFAULT=\
              \ singletons_{REF_CHROM|REF_GENOME}.bed)\n"
            args: !SimpleFlagArg
              name: BED_FILE
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake singletons [-h] --panfile PAN_FILE [--ref_chrom\
            \ REF_CHROM]\n                          [--ref_genome REF_GENOME]\n  \
            \                        [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
            \ ...]]\n                          [--non_ref_genomes NON_REF_GENOMES\
            \ [NON_REF_GENOMES ...]]\n                          [--exclude_genomes\
            \ GENOME [GENOME ...]]\n                          [--exclude_chromosomes\
            \ CHROMOSOME [CHROMOSOME ...]]\n                          [--min_len MIN_LEN]\
            \ [--output DICT] [--no_output]\n                          [--bed_file\
            \ BED_FILE]\n\noptional arguments:\n  -h, --help            show this\
            \ help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n         \
            \               Name of PanCake Data Object File (required)\n  --ref_chrom\
            \ REF_CHROM, -rc REF_CHROM\n                        Reference CHROMOSOME\
            \ (define either ONE reference\n                        chromosome or\
            \ ONE reference genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n \
            \                       Reference GENOME (define either ONE reference\n\
            \                        chromosome or ONE reference genome)\n  --non_ref_chroms\
            \ NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS\
            \ ...]\n                        Names of non-reference CHROMOSOMES (DEFAULT:\
            \ ALL non-\n                        reference chromosomes)\n  --non_ref_genomes\
            \ NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES [NON_REF_GENOMES\
            \ ...]\n                        Names of non-reference GENOMES (DEFAULT:\
            \ ALL non-\n                        reference genomes)\n  --exclude_genomes\
            \ GENOME [GENOME ...], -eg GENOME [GENOME ...]\n                     \
            \   Names of GENOMES to exclude from singleton analysis\n            \
            \            (DEFAULT: No genomes excluded)\n  --exclude_chromosomes CHROMOSOME\
            \ [CHROMOSOME ...], -ec CHROMOSOME [CHROMOSOME ...]\n                \
            \        Names of CHROMOSOMES to exclude from singleton\n            \
            \            analysis (DEFAULT: No chromosomes excluded)\n  --min_len\
            \ MIN_LEN, -l MIN_LEN\n                        minimum length of regions\
            \ to identify as a singleton\n                        region (INTEGER,\
            \ DEFAULT=25)\n  --output DICT, -o DICT\n                        directory\
            \ to which .fasta files of singleton regions\n                       \
            \ are written (DEFAULT:\n                        singletons_{REF_CHROM|REF_GENOME})\n\
            \  --no_output, -no      if set, supress .fasta output of singleton regions\n\
            \  --bed_file BED_FILE, -b BED_FILE\n                        .bed file\
            \ to which singleton regions are written\n                        (DEFAULT=\
            \ singletons_{REF_CHROM|REF_GENOME}.bed)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id010
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --chrom
            - -c
            description: Chromosome from which sequence originates
            args: !SimpleFlagArg
              name: CHROMOSOME
          - !Flag
            optional: true
            synonyms:
            - --genome
            - -g
            description: "(multiple) .fasta output of GENOME (if set, start and\n\
              stop will be ignored)"
            args: !SimpleFlagArg
              name: GENOME
          - !Flag
            optional: true
            synonyms:
            - --output
            - -o
            description: "file to which .fasta output will be written (DEFAULT =\n\
              STDOUT)"
            args: !SimpleFlagArg
              name: F
          - !Flag
            optional: true
            synonyms:
            - --linewidth
            - -lw
            description: line witdth in .fastafile (DEFAULT=100)
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -start
            description: (1-based) start position on CHROMOSME (DEFAULT = 1)
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -stop
            description: "(1-based) stop position on CHROMOSME (DEFAULT = length\n\
              of CHROMOSME)\n"
            args: !SimpleFlagArg
              name: INT
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake sequence [-h] --panfile PAN_FILE\n          \
            \              [--chrom CHROMOSOME | --genome GENOME] [--output F]\n \
            \                       [--linewidth INT] [-start INT] [-stop INT]\n\n\
            optional arguments:\n  -h, --help            show this help message and\
            \ exit\n  --panfile PAN_FILE, -p PAN_FILE\n                        Name\
            \ of PanCake Data Object File (required)\n  --chrom CHROMOSOME, -c CHROMOSOME\n\
            \                        Chromosome from which sequence originates\n \
            \ --genome GENOME, -g GENOME\n                        (multiple) .fasta\
            \ output of GENOME (if set, start and\n                        stop will\
            \ be ignored)\n  --output F, -o F      file to which .fasta output will\
            \ be written (DEFAULT =\n                        STDOUT)\n  --linewidth\
            \ INT, -lw INT\n                        line witdth in .fastafile (DEFAULT=100)\n\
            \  -start INT            (1-based) start position on CHROMOSME (DEFAULT\
            \ = 1)\n  -stop INT             (1-based) stop position on CHROMOSME (DEFAULT\
            \ = length\n                        of CHROMOSME)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id011
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --sequences
            - -s
            description: "fasta or multiple fasta file providing input\nchromosome\
              \ sequences"
            args: !RepeatFlagArg
              name: SEQUENCES
          - !Flag
            optional: true
            synonyms:
            - --ids
            - -i
            description: gi ids of sequences to download from NCBI
            args: !RepeatFlagArg
              name: IDS
          - !Flag
            optional: true
            synonyms:
            - --email
            - -e
            description: "if downloading your sequences via gi ids, please\nspecify\
              \ your email address; in case of excessive\nusage, NCBI will attempt\
              \ to contact a user at the\ne-mail address provided prior to blocking\
              \ access to\nthe E-utilities"
            args: !SimpleFlagArg
              name: EMAIL
          - !Flag
            optional: true
            synonyms:
            - --output
            - -o
            description: "output file for new PanCake Object (DEFAULT=PAN_FILE);\n\
              if specified, PanCake Data Object in PAN_FILE stays\nunchanged"
            args: !SimpleFlagArg
              name: OUTPUT
          - !Flag
            optional: true
            synonyms:
            - --ali
            description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments\
              \ (BLAST or nucmer output) to\ninclude in PanCake Object"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --min_len
            - -l
            description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
            args: !SimpleFlagArg
              name: MIN_LEN
          - !Flag
            optional: true
            synonyms:
            - --no_self_alignments
            - -nsa
            description: "if set, skip pairwise alignments between regions on\nidentical\
              \ chromosomes as input (DEFAULT=False)\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake addChrom [-h] --panfile PAN_FILE\n          \
            \              [--sequences SEQUENCES [SEQUENCES ...]]\n             \
            \           [--ids IDS [IDS ...]] [--email EMAIL]\n                  \
            \      [--output OUTPUT] [--ali [ALI [ALI ...]]]\n                   \
            \     [--min_len MIN_LEN] [--no_self_alignments]\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --panfile\
            \ PAN_FILE, -p PAN_FILE\n                        Name of PanCake Data\
            \ Object File (required)\n  --sequences SEQUENCES [SEQUENCES ...], -s\
            \ SEQUENCES [SEQUENCES ...]\n                        fasta or multiple\
            \ fasta file providing input\n                        chromosome sequences\n\
            \  --ids IDS [IDS ...], -i IDS [IDS ...]\n                        gi ids\
            \ of sequences to download from NCBI\n  --email EMAIL, -e EMAIL\n    \
            \                    if downloading your sequences via gi ids, please\n\
            \                        specify your email address; in case of excessive\n\
            \                        usage, NCBI will attempt to contact a user at\
            \ the\n                        e-mail address provided prior to blocking\
            \ access to\n                        the E-utilities\n  --output OUTPUT,\
            \ -o OUTPUT\n                        output file for new PanCake Object\
            \ (DEFAULT=PAN_FILE);\n                        if specified, PanCake Data\
            \ Object in PAN_FILE stays\n                        unchanged\n  --ali\
            \ [ALI [ALI ...]], -a [ALI [ALI ...]]\n                        pairwise\
            \ alignments (BLAST or nucmer output) to\n                        include\
            \ in PanCake Object\n  --min_len MIN_LEN, -l MIN_LEN\n               \
            \         minimum length of pairwise alignments to include\n         \
            \               (DEFUALT=25)\n  --no_self_alignments, -nsa\n         \
            \               if set, skip pairwise alignments between regions on\n\
            \                        identical chromosomes as input (DEFAULT=False)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id012
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --panfile
            - -p
            description: Name of PanCake Data Object File (required)
            args: !SimpleFlagArg
              name: PAN_FILE
          - !Flag
            optional: true
            synonyms:
            - --ref_chrom
            - -rc
            description: "Reference CHROMOSOME (define either ONE reference\nchromosome\
              \ OR ONE reference genome)"
            args: !SimpleFlagArg
              name: REF_CHROM
          - !Flag
            optional: true
            synonyms:
            - --ref_genome
            - -rg
            description: "Reference GENOME (define either ONE reference\nchromosome\
              \ OR ONE reference genome)"
            args: !SimpleFlagArg
              name: REF_GENOME
          - !Flag
            optional: true
            synonyms:
            - --non_ref_chroms
            - -nrc
            description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n\
              reference chromosomes)"
            args: !RepeatFlagArg
              name: NON_REF_CHROMS
          - !Flag
            optional: true
            synonyms:
            - --non_ref_genomes
            - -nrg
            description: "Names of non-reference GENOMES (DEFAULT: ALL non-\nreference\
              \ genomes)"
            args: !RepeatFlagArg
              name: NON_REF_GENOMES
          - !Flag
            optional: true
            synonyms:
            - --exclude_genomes
            - -eg
            description: "Names of GENOMES to exclude from core analysis\n(DEFAULT:\
              \ No genomes excluded)"
            args: !RepeatFlagArg
              name: GENOME
          - !Flag
            optional: true
            synonyms:
            - --exclude_chromosomes
            - -ec
            description: "Names of CHROMOSOMES to exclude from core analysis\n(DEFAULT:\
              \ No chromosomes excluded)"
            args: !RepeatFlagArg
              name: CHROMOSOME
          - !Flag
            optional: true
            synonyms:
            - --max_non_core_frac
            - -f
            description: "Maximum fraction of non-core sequence regions within\neach\
              \ included sequence (FLOAT, DEAFULT=0.05)"
            args: !SimpleFlagArg
              name: MAX_NON_CORE_FRAC
          - !Flag
            optional: true
            synonyms:
            - --min_len
            - -l
            description: "minimum length of regions to identify as part of core\n\
              genome (INTEGER, DEFAULT=25)"
            args: !SimpleFlagArg
              name: MIN_LEN
          - !Flag
            optional: true
            synonyms:
            - --output
            - -o
            description: "directory to which .fasta files of core regions are\nwritten\
              \ (DEFAULT: core_{REF_CHROM|REF_GENOME})"
            args: !SimpleFlagArg
              name: DICT
          - !Flag
            optional: true
            synonyms:
            - --no_output
            - -no
            description: if set, supress .fasta output of core regions
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --bed_file
            - -b
            description: ".bed file to which core regions are written (DEFAULT=\n\
              core_{REF_CHROM|REF_GENOME}.bed)"
            args: !SimpleFlagArg
              name: BED_FILE
          - !Flag
            optional: true
            synonyms:
            - --max_space
            - -s
            description: "maximum non-core space allowed within a core region\n(DEFAULT=25)\n"
            args: !SimpleFlagArg
              name: INT
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pancake core [-h] --panfile PAN_FILE [--ref_chrom REF_CHROM]\n\
            \                    [--ref_genome REF_GENOME]\n                    [--non_ref_chroms\
            \ NON_REF_CHROMS [NON_REF_CHROMS ...]]\n                    [--non_ref_genomes\
            \ NON_REF_GENOMES [NON_REF_GENOMES ...]]\n                    [--exclude_genomes\
            \ GENOME [GENOME ...]]\n                    [--exclude_chromosomes CHROMOSOME\
            \ [CHROMOSOME ...]]\n                    [--max_non_core_frac MAX_NON_CORE_FRAC]\n\
            \                    [--min_len MIN_LEN] [--output DICT] [--no_output]\n\
            \                    [--bed_file BED_FILE] [--max_space INT]\n\noptional\
            \ arguments:\n  -h, --help            show this help message and exit\n\
            \  --panfile PAN_FILE, -p PAN_FILE\n                        Name of PanCake\
            \ Data Object File (required)\n  --ref_chrom REF_CHROM, -rc REF_CHROM\n\
            \                        Reference CHROMOSOME (define either ONE reference\n\
            \                        chromosome OR ONE reference genome)\n  --ref_genome\
            \ REF_GENOME, -rg REF_GENOME\n                        Reference GENOME\
            \ (define either ONE reference\n                        chromosome OR\
            \ ONE reference genome)\n  --non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
            \ ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS ...]\n                   \
            \     Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\n        \
            \                reference chromosomes)\n  --non_ref_genomes NON_REF_GENOMES\
            \ [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES [NON_REF_GENOMES ...]\n\
            \                        Names of non-reference GENOMES (DEFAULT: ALL\
            \ non-\n                        reference genomes)\n  --exclude_genomes\
            \ GENOME [GENOME ...], -eg GENOME [GENOME ...]\n                     \
            \   Names of GENOMES to exclude from core analysis\n                 \
            \       (DEFAULT: No genomes excluded)\n  --exclude_chromosomes CHROMOSOME\
            \ [CHROMOSOME ...], -ec CHROMOSOME [CHROMOSOME ...]\n                \
            \        Names of CHROMOSOMES to exclude from core analysis\n        \
            \                (DEFAULT: No chromosomes excluded)\n  --max_non_core_frac\
            \ MAX_NON_CORE_FRAC, -f MAX_NON_CORE_FRAC\n                        Maximum\
            \ fraction of non-core sequence regions within\n                     \
            \   each included sequence (FLOAT, DEAFULT=0.05)\n  --min_len MIN_LEN,\
            \ -l MIN_LEN\n                        minimum length of regions to identify\
            \ as part of core\n                        genome (INTEGER, DEFAULT=25)\n\
            \  --output DICT, -o DICT\n                        directory to which\
            \ .fasta files of core regions are\n                        written (DEFAULT:\
            \ core_{REF_CHROM|REF_GENOME})\n  --no_output, -no      if set, supress\
            \ .fasta output of core regions\n  --bed_file BED_FILE, -b BED_FILE\n\
            \                        .bed file to which core regions are written (DEFAULT=\n\
            \                        core_{REF_CHROM|REF_GENOME}.bed)\n  --max_space\
            \ INT, -s INT\n                        maximum non-core space allowed\
            \ within a core region\n                        (DEFAULT=25)\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: pancake [-h]\n               {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
          \               ...\n\nPanCake -- A data structure for pangenomes enabling\
          \ for core and singleton\nidentification, without the requirement of annotation\
          \ data.\n\npositional arguments:\n  {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
          \    create              create a PanCake Data Object\n    status      \
          \        get overview about a PanCake Object\n    addAli              include\
          \ information from pairwise (BLAST or nucmer)\n                        alignments\
          \ into an already existing PanCake Object\n    specify             include\
          \ genome information or rename chromosomes\n    addChrom            add\
          \ chromosomes to an already existing PanCake Object\n    core          \
          \      identify core regions\n    singletons          identify singleton\
          \ regions\n    sequence            get sequence of a chromosome (or chromosomal\
          \ region)\n                        from a PanCake Object\n    graph    \
          \           graphical output of PanCake Objects (in DOT format)\n      \
          \                  #BETA MODE#\n\noptional arguments:\n  -h, --help    \
          \        show this help message and exit\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake create [-h] [--sequences SEQUENCES [SEQUENCES ...]]\n\
        \                      [--ids IDS [IDS ...]] [--email EMAIL]\n           \
        \           [--pan_file PAN_FILE] [--ali [ALI [ALI ...]]]\n              \
        \        [--min_len MIN_LEN] [--no_self_alignments]\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --sequences SEQUENCES\
        \ [SEQUENCES ...], -s SEQUENCES [SEQUENCES ...]\n                        fasta\
        \ or multiple fasta file providing input\n                        chromosome\
        \ sequences\n  --ids IDS [IDS ...], -i IDS [IDS ...]\n                   \
        \     gi ids of sequences to download from NCBI\n  --email EMAIL, -e EMAIL\n\
        \                        if downloading your sequences via gi ids, please\n\
        \                        specify your email address; in case of excessive\n\
        \                        usage, NCBI will attempt to contact a user at the\n\
        \                        e-mail address provided prior to blocking access\
        \ to\n                        the E-utilities\n  --pan_file PAN_FILE, -p PAN_FILE\n\
        \                        File name of new PanCake Object\n               \
        \         (DEFAULT=pan_files/pancake.pan)\n  --ali [ALI [ALI ...]], -a [ALI\
        \ [ALI ...]]\n                        pairwise alignments (BLAST or nucmer\
        \ output) to\n                        include in PanCake Object\n  --min_len\
        \ MIN_LEN, -l MIN_LEN\n                        minimum length of pairwise\
        \ alignments to include\n                        (DEFUALT=25)\n  --no_self_alignments,\
        \ -nsa\n                        if set, skip pairwise alignments between regions\
        \ on\n                        identical chromosomes as input (DEFAULT=False)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --chrom
        - -c
        description: name(s) of respective chromosome(s)
        args: !RepeatFlagArg
          name: CHROM
      - !Flag
        optional: true
        synonyms:
        - --name
        - -n
        description: "new name of specified chromosome, this will become the\nchromosome's\
          \ name in incidental output files"
        args: !SimpleFlagArg
          name: NEW_NAME
      - !Flag
        optional: true
        synonyms:
        - --genome
        - -g
        description: name of genome CHROM belongs to
        args: !SimpleFlagArg
          name: GENOME
      - !Flag
        optional: true
        synonyms:
        - --genome_file
        - -f
        description: "input file containing mapping of chromosomes to\ngenomes and\
          \ additional chromosome names"
        args: !SimpleFlagArg
          name: FILE_NAME
      - !Flag
        optional: true
        synonyms:
        - --delete
        - -d
        description: "chromosome names to delete\n"
        args: !RepeatFlagArg
          name: OLD_NAME
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom CHROM [CHROM\
        \ ...]]\n                       [--name NEW_NAME] [--genome GENOME]\n    \
        \                   [--genome_file FILE_NAME]\n                       [--delete\
        \ OLD_NAME [OLD_NAME ...]]\n\noptional arguments:\n  -h, --help          \
        \  show this help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n  \
        \                      Name of PanCake Data Object File (required)\n  --chrom\
        \ CHROM [CHROM ...], -c CHROM [CHROM ...]\n                        name(s)\
        \ of respective chromosome(s)\n  --name NEW_NAME, -n NEW_NAME\n          \
        \              new name of specified chromosome, this will become the\n  \
        \                      chromosome's name in incidental output files\n  --genome\
        \ GENOME, -g GENOME\n                        name of genome CHROM belongs\
        \ to\n  --genome_file FILE_NAME, -f FILE_NAME\n                        input\
        \ file containing mapping of chromosomes to\n                        genomes\
        \ and additional chromosome names\n  --delete OLD_NAME [OLD_NAME ...], -d\
        \ OLD_NAME [OLD_NAME ...]\n                        chromosome names to delete\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: ALI_FILE
        description: Alignment File (BLAST or nucmer output)
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --output
        - -o
        description: output pangenome file (PAN_FILE will be unchanged)
        args: !SimpleFlagArg
          name: NEW_PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --min_len
        - -l
        description: "minimum length of pairwise alignments to get included\n(DEFAULT=25)"
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - --no_self_alignments
        - -nsa
        description: "if set, skip pairwise alignments between regions on\nidentical\
          \ chromosomes (DEFAULT=False)\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake addAli [-h] --panfile PAN_FILE [--output NEW_PAN_FILE]\n\
        \                      [--min_len INT] [--no_self_alignments]\n          \
        \            ALI_FILE [ALI_FILE ...]\n\npositional arguments:\n  ALI_FILE\
        \              Alignment File (BLAST or nucmer output)\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --panfile PAN_FILE,\
        \ -p PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
        \  --output NEW_PAN_FILE, -o NEW_PAN_FILE\n                        output\
        \ pangenome file (PAN_FILE will be unchanged)\n  --min_len INT, -l INT\n \
        \                       minimum length of pairwise alignments to get included\n\
        \                        (DEFAULT=25)\n  --no_self_alignments, -nsa\n    \
        \                    if set, skip pairwise alignments between regions on\n\
        \                        identical chromosomes (DEFAULT=False)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: PAN_FILE
        description: Name of PanCake Data Object File
      named: []
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake status [-h] PAN_FILE\n\npositional arguments:\n \
        \ PAN_FILE    Name of PanCake Data Object File\n\noptional arguments:\n  -h,\
        \ --help  show this help message and exit\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --chroms
        - -c
        description: "Chromosomes in Output (by default all chromosomes\ncovered in\
          \ PAN_FILE)"
        args: !RepeatFlagArg
          name: CHROMS
      - !Flag
        optional: true
        synonyms:
        - -starts
        description: "Start positions (in same order as chromosomes),\nDEFAULT=1 on\
          \ all chromosomes"
        args: !RepeatFlagArg
          name: START_POS
      - !Flag
        optional: true
        synonyms:
        - -stops
        description: "Stop positions (in same order as chromosomes),\nDEFAULT=length\
          \ of chromosomes"
        args: !RepeatFlagArg
          name: STOP_POS
      - !Flag
        optional: true
        synonyms:
        - --max_nodes
        description: "Maximal number of nodes in output graph.\n(DEFAULT=10,000):\
          \ if exceeded, PanCake will warn and\ninterrupt!"
        args: !SimpleFlagArg
          name: MAX_NODES
      - !Flag
        optional: true
        synonyms:
        - --max_edges
        description: "Maximal number of edges in output graph.\n(DEFAULT=10,000):\
          \ if exceeded, PanCake will warn and\ninterrupt!"
        args: !SimpleFlagArg
          name: MAX_EDGES
      - !Flag
        optional: true
        synonyms:
        - --max_entries
        - -me
        description: "Shared features are truncated in output if number of\ncontained\
          \ feature instances > MAX_ENTRIES (DEFAULT:\nMAX_ENTRIES=50)"
        args: !SimpleFlagArg
          name: MAX_ENTRIES
      - !Flag
        optional: true
        synonyms:
        - -all
        description: "if set, all chromosomes contained in PAN_FILE appear\nin output\
          \ (irrespective to CHROMS), DEFAULT=False"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -regions
        description: "if set, only specified regions are shown in output\n(DEFAULT=False),\
          \ ignored if -all is set"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --output
        - -o
        description: "output DOT file (DEFAULT: STDOUT)\n"
        args: !SimpleFlagArg
          name: FILE
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake graph [-h] --panfile PAN_FILE [--chroms CHROMS [CHROMS\
        \ ...]]\n                     [-starts START_POS [START_POS ...]]\n      \
        \               [-stops STOP_POS [STOP_POS ...]] [--max_nodes MAX_NODES]\n\
        \                     [--max_edges MAX_EDGES] [--max_entries MAX_ENTRIES]\n\
        \                     [-all] [-regions] [--output FILE]\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --panfile PAN_FILE,\
        \ -p PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
        \  --chroms CHROMS [CHROMS ...], -c CHROMS [CHROMS ...]\n                \
        \        Chromosomes in Output (by default all chromosomes\n             \
        \           covered in PAN_FILE)\n  -starts START_POS [START_POS ...]\n  \
        \                      Start positions (in same order as chromosomes),\n \
        \                       DEFAULT=1 on all chromosomes\n  -stops STOP_POS [STOP_POS\
        \ ...]\n                        Stop positions (in same order as chromosomes),\n\
        \                        DEFAULT=length of chromosomes\n  --max_nodes MAX_NODES\n\
        \                        Maximal number of nodes in output graph.\n      \
        \                  (DEFAULT=10,000): if exceeded, PanCake will warn and\n\
        \                        interrupt!\n  --max_edges MAX_EDGES\n           \
        \             Maximal number of edges in output graph.\n                 \
        \       (DEFAULT=10,000): if exceeded, PanCake will warn and\n           \
        \             interrupt!\n  --max_entries MAX_ENTRIES, -me MAX_ENTRIES\n \
        \                       Shared features are truncated in output if number\
        \ of\n                        contained feature instances > MAX_ENTRIES (DEFAULT:\n\
        \                        MAX_ENTRIES=50)\n  -all                  if set,\
        \ all chromosomes contained in PAN_FILE appear\n                        in\
        \ output (irrespective to CHROMS), DEFAULT=False\n  -regions             \
        \ if set, only specified regions are shown in output\n                   \
        \     (DEFAULT=False), ignored if -all is set\n  --output FILE, -o FILE\n\
        \                        output DOT file (DEFAULT: STDOUT)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id009
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --ref_chrom
        - -rc
        description: "Reference CHROMOSOME (define either ONE reference\nchromosome\
          \ or ONE reference genome)"
        args: !SimpleFlagArg
          name: REF_CHROM
      - !Flag
        optional: true
        synonyms:
        - --ref_genome
        - -rg
        description: "Reference GENOME (define either ONE reference\nchromosome or\
          \ ONE reference genome)"
        args: !SimpleFlagArg
          name: REF_GENOME
      - !Flag
        optional: true
        synonyms:
        - --non_ref_chroms
        - -nrc
        description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\nreference\
          \ chromosomes)"
        args: !RepeatFlagArg
          name: NON_REF_CHROMS
      - !Flag
        optional: true
        synonyms:
        - --non_ref_genomes
        - -nrg
        description: "Names of non-reference GENOMES (DEFAULT: ALL non-\nreference\
          \ genomes)"
        args: !RepeatFlagArg
          name: NON_REF_GENOMES
      - !Flag
        optional: true
        synonyms:
        - --exclude_genomes
        - -eg
        description: "Names of GENOMES to exclude from singleton analysis\n(DEFAULT:\
          \ No genomes excluded)"
        args: !RepeatFlagArg
          name: GENOME
      - !Flag
        optional: true
        synonyms:
        - --exclude_chromosomes
        - -ec
        description: "Names of CHROMOSOMES to exclude from singleton\nanalysis (DEFAULT:\
          \ No chromosomes excluded)"
        args: !RepeatFlagArg
          name: CHROMOSOME
      - !Flag
        optional: true
        synonyms:
        - --min_len
        - -l
        description: "minimum length of regions to identify as a singleton\nregion\
          \ (INTEGER, DEFAULT=25)"
        args: !SimpleFlagArg
          name: MIN_LEN
      - !Flag
        optional: true
        synonyms:
        - --output
        - -o
        description: "directory to which .fasta files of singleton regions\nare written\
          \ (DEFAULT:\nsingletons_{REF_CHROM|REF_GENOME})"
        args: !SimpleFlagArg
          name: DICT
      - !Flag
        optional: true
        synonyms:
        - --no_output
        - -no
        description: if set, supress .fasta output of singleton regions
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --bed_file
        - -b
        description: ".bed file to which singleton regions are written\n(DEFAULT=\
          \ singletons_{REF_CHROM|REF_GENOME}.bed)\n"
        args: !SimpleFlagArg
          name: BED_FILE
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake singletons [-h] --panfile PAN_FILE [--ref_chrom REF_CHROM]\n\
        \                          [--ref_genome REF_GENOME]\n                   \
        \       [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS ...]]\n         \
        \                 [--non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES ...]]\n\
        \                          [--exclude_genomes GENOME [GENOME ...]]\n     \
        \                     [--exclude_chromosomes CHROMOSOME [CHROMOSOME ...]]\n\
        \                          [--min_len MIN_LEN] [--output DICT] [--no_output]\n\
        \                          [--bed_file BED_FILE]\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --panfile PAN_FILE,\
        \ -p PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
        \  --ref_chrom REF_CHROM, -rc REF_CHROM\n                        Reference\
        \ CHROMOSOME (define either ONE reference\n                        chromosome\
        \ or ONE reference genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n  \
        \                      Reference GENOME (define either ONE reference\n   \
        \                     chromosome or ONE reference genome)\n  --non_ref_chroms\
        \ NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS\
        \ ...]\n                        Names of non-reference CHROMOSOMES (DEFAULT:\
        \ ALL non-\n                        reference chromosomes)\n  --non_ref_genomes\
        \ NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES [NON_REF_GENOMES\
        \ ...]\n                        Names of non-reference GENOMES (DEFAULT: ALL\
        \ non-\n                        reference genomes)\n  --exclude_genomes GENOME\
        \ [GENOME ...], -eg GENOME [GENOME ...]\n                        Names of\
        \ GENOMES to exclude from singleton analysis\n                        (DEFAULT:\
        \ No genomes excluded)\n  --exclude_chromosomes CHROMOSOME [CHROMOSOME ...],\
        \ -ec CHROMOSOME [CHROMOSOME ...]\n                        Names of CHROMOSOMES\
        \ to exclude from singleton\n                        analysis (DEFAULT: No\
        \ chromosomes excluded)\n  --min_len MIN_LEN, -l MIN_LEN\n               \
        \         minimum length of regions to identify as a singleton\n         \
        \               region (INTEGER, DEFAULT=25)\n  --output DICT, -o DICT\n \
        \                       directory to which .fasta files of singleton regions\n\
        \                        are written (DEFAULT:\n                        singletons_{REF_CHROM|REF_GENOME})\n\
        \  --no_output, -no      if set, supress .fasta output of singleton regions\n\
        \  --bed_file BED_FILE, -b BED_FILE\n                        .bed file to\
        \ which singleton regions are written\n                        (DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id010
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --chrom
        - -c
        description: Chromosome from which sequence originates
        args: !SimpleFlagArg
          name: CHROMOSOME
      - !Flag
        optional: true
        synonyms:
        - --genome
        - -g
        description: "(multiple) .fasta output of GENOME (if set, start and\nstop\
          \ will be ignored)"
        args: !SimpleFlagArg
          name: GENOME
      - !Flag
        optional: true
        synonyms:
        - --output
        - -o
        description: "file to which .fasta output will be written (DEFAULT =\nSTDOUT)"
        args: !SimpleFlagArg
          name: F
      - !Flag
        optional: true
        synonyms:
        - --linewidth
        - -lw
        description: line witdth in .fastafile (DEFAULT=100)
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -start
        description: (1-based) start position on CHROMOSME (DEFAULT = 1)
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -stop
        description: "(1-based) stop position on CHROMOSME (DEFAULT = length\nof CHROMOSME)\n"
        args: !SimpleFlagArg
          name: INT
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake sequence [-h] --panfile PAN_FILE\n              \
        \          [--chrom CHROMOSOME | --genome GENOME] [--output F]\n         \
        \               [--linewidth INT] [-start INT] [-stop INT]\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --panfile PAN_FILE,\
        \ -p PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
        \  --chrom CHROMOSOME, -c CHROMOSOME\n                        Chromosome from\
        \ which sequence originates\n  --genome GENOME, -g GENOME\n              \
        \          (multiple) .fasta output of GENOME (if set, start and\n       \
        \                 stop will be ignored)\n  --output F, -o F      file to which\
        \ .fasta output will be written (DEFAULT =\n                        STDOUT)\n\
        \  --linewidth INT, -lw INT\n                        line witdth in .fastafile\
        \ (DEFAULT=100)\n  -start INT            (1-based) start position on CHROMOSME\
        \ (DEFAULT = 1)\n  -stop INT             (1-based) stop position on CHROMOSME\
        \ (DEFAULT = length\n                        of CHROMOSME)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id011
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --sequences
        - -s
        description: "fasta or multiple fasta file providing input\nchromosome sequences"
        args: !RepeatFlagArg
          name: SEQUENCES
      - !Flag
        optional: true
        synonyms:
        - --ids
        - -i
        description: gi ids of sequences to download from NCBI
        args: !RepeatFlagArg
          name: IDS
      - !Flag
        optional: true
        synonyms:
        - --email
        - -e
        description: "if downloading your sequences via gi ids, please\nspecify your\
          \ email address; in case of excessive\nusage, NCBI will attempt to contact\
          \ a user at the\ne-mail address provided prior to blocking access to\nthe\
          \ E-utilities"
        args: !SimpleFlagArg
          name: EMAIL
      - !Flag
        optional: true
        synonyms:
        - --output
        - -o
        description: "output file for new PanCake Object (DEFAULT=PAN_FILE);\nif specified,\
          \ PanCake Data Object in PAN_FILE stays\nunchanged"
        args: !SimpleFlagArg
          name: OUTPUT
      - !Flag
        optional: true
        synonyms:
        - --ali
        description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments (BLAST\
          \ or nucmer output) to\ninclude in PanCake Object"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --min_len
        - -l
        description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
        args: !SimpleFlagArg
          name: MIN_LEN
      - !Flag
        optional: true
        synonyms:
        - --no_self_alignments
        - -nsa
        description: "if set, skip pairwise alignments between regions on\nidentical\
          \ chromosomes as input (DEFAULT=False)\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake addChrom [-h] --panfile PAN_FILE\n              \
        \          [--sequences SEQUENCES [SEQUENCES ...]]\n                     \
        \   [--ids IDS [IDS ...]] [--email EMAIL]\n                        [--output\
        \ OUTPUT] [--ali [ALI [ALI ...]]]\n                        [--min_len MIN_LEN]\
        \ [--no_self_alignments]\n\noptional arguments:\n  -h, --help            show\
        \ this help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n        \
        \                Name of PanCake Data Object File (required)\n  --sequences\
        \ SEQUENCES [SEQUENCES ...], -s SEQUENCES [SEQUENCES ...]\n              \
        \          fasta or multiple fasta file providing input\n                \
        \        chromosome sequences\n  --ids IDS [IDS ...], -i IDS [IDS ...]\n \
        \                       gi ids of sequences to download from NCBI\n  --email\
        \ EMAIL, -e EMAIL\n                        if downloading your sequences via\
        \ gi ids, please\n                        specify your email address; in case\
        \ of excessive\n                        usage, NCBI will attempt to contact\
        \ a user at the\n                        e-mail address provided prior to\
        \ blocking access to\n                        the E-utilities\n  --output\
        \ OUTPUT, -o OUTPUT\n                        output file for new PanCake Object\
        \ (DEFAULT=PAN_FILE);\n                        if specified, PanCake Data\
        \ Object in PAN_FILE stays\n                        unchanged\n  --ali [ALI\
        \ [ALI ...]], -a [ALI [ALI ...]]\n                        pairwise alignments\
        \ (BLAST or nucmer output) to\n                        include in PanCake\
        \ Object\n  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
        \ length of pairwise alignments to include\n                        (DEFUALT=25)\n\
        \  --no_self_alignments, -nsa\n                        if set, skip pairwise\
        \ alignments between regions on\n                        identical chromosomes\
        \ as input (DEFAULT=False)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id012
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --panfile
        - -p
        description: Name of PanCake Data Object File (required)
        args: !SimpleFlagArg
          name: PAN_FILE
      - !Flag
        optional: true
        synonyms:
        - --ref_chrom
        - -rc
        description: "Reference CHROMOSOME (define either ONE reference\nchromosome\
          \ OR ONE reference genome)"
        args: !SimpleFlagArg
          name: REF_CHROM
      - !Flag
        optional: true
        synonyms:
        - --ref_genome
        - -rg
        description: "Reference GENOME (define either ONE reference\nchromosome OR\
          \ ONE reference genome)"
        args: !SimpleFlagArg
          name: REF_GENOME
      - !Flag
        optional: true
        synonyms:
        - --non_ref_chroms
        - -nrc
        description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\nreference\
          \ chromosomes)"
        args: !RepeatFlagArg
          name: NON_REF_CHROMS
      - !Flag
        optional: true
        synonyms:
        - --non_ref_genomes
        - -nrg
        description: "Names of non-reference GENOMES (DEFAULT: ALL non-\nreference\
          \ genomes)"
        args: !RepeatFlagArg
          name: NON_REF_GENOMES
      - !Flag
        optional: true
        synonyms:
        - --exclude_genomes
        - -eg
        description: "Names of GENOMES to exclude from core analysis\n(DEFAULT: No\
          \ genomes excluded)"
        args: !RepeatFlagArg
          name: GENOME
      - !Flag
        optional: true
        synonyms:
        - --exclude_chromosomes
        - -ec
        description: "Names of CHROMOSOMES to exclude from core analysis\n(DEFAULT:\
          \ No chromosomes excluded)"
        args: !RepeatFlagArg
          name: CHROMOSOME
      - !Flag
        optional: true
        synonyms:
        - --max_non_core_frac
        - -f
        description: "Maximum fraction of non-core sequence regions within\neach included\
          \ sequence (FLOAT, DEAFULT=0.05)"
        args: !SimpleFlagArg
          name: MAX_NON_CORE_FRAC
      - !Flag
        optional: true
        synonyms:
        - --min_len
        - -l
        description: "minimum length of regions to identify as part of core\ngenome\
          \ (INTEGER, DEFAULT=25)"
        args: !SimpleFlagArg
          name: MIN_LEN
      - !Flag
        optional: true
        synonyms:
        - --output
        - -o
        description: "directory to which .fasta files of core regions are\nwritten\
          \ (DEFAULT: core_{REF_CHROM|REF_GENOME})"
        args: !SimpleFlagArg
          name: DICT
      - !Flag
        optional: true
        synonyms:
        - --no_output
        - -no
        description: if set, supress .fasta output of core regions
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --bed_file
        - -b
        description: ".bed file to which core regions are written (DEFAULT=\ncore_{REF_CHROM|REF_GENOME}.bed)"
        args: !SimpleFlagArg
          name: BED_FILE
      - !Flag
        optional: true
        synonyms:
        - --max_space
        - -s
        description: "maximum non-core space allowed within a core region\n(DEFAULT=25)\n"
        args: !SimpleFlagArg
          name: INT
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pancake core [-h] --panfile PAN_FILE [--ref_chrom REF_CHROM]\n\
        \                    [--ref_genome REF_GENOME]\n                    [--non_ref_chroms\
        \ NON_REF_CHROMS [NON_REF_CHROMS ...]]\n                    [--non_ref_genomes\
        \ NON_REF_GENOMES [NON_REF_GENOMES ...]]\n                    [--exclude_genomes\
        \ GENOME [GENOME ...]]\n                    [--exclude_chromosomes CHROMOSOME\
        \ [CHROMOSOME ...]]\n                    [--max_non_core_frac MAX_NON_CORE_FRAC]\n\
        \                    [--min_len MIN_LEN] [--output DICT] [--no_output]\n \
        \                   [--bed_file BED_FILE] [--max_space INT]\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --panfile PAN_FILE,\
        \ -p PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
        \  --ref_chrom REF_CHROM, -rc REF_CHROM\n                        Reference\
        \ CHROMOSOME (define either ONE reference\n                        chromosome\
        \ OR ONE reference genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n  \
        \                      Reference GENOME (define either ONE reference\n   \
        \                     chromosome OR ONE reference genome)\n  --non_ref_chroms\
        \ NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS\
        \ ...]\n                        Names of non-reference CHROMOSOMES (DEFAULT:\
        \ ALL non-\n                        reference chromosomes)\n  --non_ref_genomes\
        \ NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES [NON_REF_GENOMES\
        \ ...]\n                        Names of non-reference GENOMES (DEFAULT: ALL\
        \ non-\n                        reference genomes)\n  --exclude_genomes GENOME\
        \ [GENOME ...], -eg GENOME [GENOME ...]\n                        Names of\
        \ GENOMES to exclude from core analysis\n                        (DEFAULT:\
        \ No genomes excluded)\n  --exclude_chromosomes CHROMOSOME [CHROMOSOME ...],\
        \ -ec CHROMOSOME [CHROMOSOME ...]\n                        Names of CHROMOSOMES\
        \ to exclude from core analysis\n                        (DEFAULT: No chromosomes\
        \ excluded)\n  --max_non_core_frac MAX_NON_CORE_FRAC, -f MAX_NON_CORE_FRAC\n\
        \                        Maximum fraction of non-core sequence regions within\n\
        \                        each included sequence (FLOAT, DEAFULT=0.05)\n  --min_len\
        \ MIN_LEN, -l MIN_LEN\n                        minimum length of regions to\
        \ identify as part of core\n                        genome (INTEGER, DEFAULT=25)\n\
        \  --output DICT, -o DICT\n                        directory to which .fasta\
        \ files of core regions are\n                        written (DEFAULT: core_{REF_CHROM|REF_GENOME})\n\
        \  --no_output, -no      if set, supress .fasta output of core regions\n \
        \ --bed_file BED_FILE, -b BED_FILE\n                        .bed file to which\
        \ core regions are written (DEFAULT=\n                        core_{REF_CHROM|REF_GENOME}.bed)\n\
        \  --max_space INT, -s INT\n                        maximum non-core space\
        \ allowed within a core region\n                        (DEFAULT=25)\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: pancake [-h]\n               {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
      \               ...\n\nPanCake -- A data structure for pangenomes enabling for\
      \ core and singleton\nidentification, without the requirement of annotation\
      \ data.\n\npositional arguments:\n  {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
      \    create              create a PanCake Data Object\n    status          \
      \    get overview about a PanCake Object\n    addAli              include information\
      \ from pairwise (BLAST or nucmer)\n                        alignments into an\
      \ already existing PanCake Object\n    specify             include genome information\
      \ or rename chromosomes\n    addChrom            add chromosomes to an already\
      \ existing PanCake Object\n    core                identify core regions\n \
      \   singletons          identify singleton regions\n    sequence           \
      \ get sequence of a chromosome (or chromosomal region)\n                   \
      \     from a PanCake Object\n    graph               graphical output of PanCake\
      \ Objects (in DOT format)\n                        #BETA MODE#\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake create [-h] [--sequences SEQUENCES [SEQUENCES ...]]\n\
    \                      [--ids IDS [IDS ...]] [--email EMAIL]\n               \
    \       [--pan_file PAN_FILE] [--ali [ALI [ALI ...]]]\n                      [--min_len\
    \ MIN_LEN] [--no_self_alignments]\n\noptional arguments:\n  -h, --help       \
    \     show this help message and exit\n  --sequences SEQUENCES [SEQUENCES ...],\
    \ -s SEQUENCES [SEQUENCES ...]\n                        fasta or multiple fasta\
    \ file providing input\n                        chromosome sequences\n  --ids\
    \ IDS [IDS ...], -i IDS [IDS ...]\n                        gi ids of sequences\
    \ to download from NCBI\n  --email EMAIL, -e EMAIL\n                        if\
    \ downloading your sequences via gi ids, please\n                        specify\
    \ your email address; in case of excessive\n                        usage, NCBI\
    \ will attempt to contact a user at the\n                        e-mail address\
    \ provided prior to blocking access to\n                        the E-utilities\n\
    \  --pan_file PAN_FILE, -p PAN_FILE\n                        File name of new\
    \ PanCake Object\n                        (DEFAULT=pan_files/pancake.pan)\n  --ali\
    \ [ALI [ALI ...]], -a [ALI [ALI ...]]\n                        pairwise alignments\
    \ (BLAST or nucmer output) to\n                        include in PanCake Object\n\
    \  --min_len MIN_LEN, -l MIN_LEN\n                        minimum length of pairwise\
    \ alignments to include\n                        (DEFUALT=25)\n  --no_self_alignments,\
    \ -nsa\n                        if set, skip pairwise alignments between regions\
    \ on\n                        identical chromosomes as input (DEFAULT=False)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --chrom
    - -c
    description: name(s) of respective chromosome(s)
    args: !RepeatFlagArg
      name: CHROM
  - !Flag
    optional: true
    synonyms:
    - --name
    - -n
    description: "new name of specified chromosome, this will become the\nchromosome's\
      \ name in incidental output files"
    args: !SimpleFlagArg
      name: NEW_NAME
  - !Flag
    optional: true
    synonyms:
    - --genome
    - -g
    description: name of genome CHROM belongs to
    args: !SimpleFlagArg
      name: GENOME
  - !Flag
    optional: true
    synonyms:
    - --genome_file
    - -f
    description: "input file containing mapping of chromosomes to\ngenomes and additional\
      \ chromosome names"
    args: !SimpleFlagArg
      name: FILE_NAME
  - !Flag
    optional: true
    synonyms:
    - --delete
    - -d
    description: "chromosome names to delete\n"
    args: !RepeatFlagArg
      name: OLD_NAME
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom CHROM [CHROM\
    \ ...]]\n                       [--name NEW_NAME] [--genome GENOME]\n        \
    \               [--genome_file FILE_NAME]\n                       [--delete OLD_NAME\
    \ [OLD_NAME ...]]\n\noptional arguments:\n  -h, --help            show this help\
    \ message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n                      \
    \  Name of PanCake Data Object File (required)\n  --chrom CHROM [CHROM ...], -c\
    \ CHROM [CHROM ...]\n                        name(s) of respective chromosome(s)\n\
    \  --name NEW_NAME, -n NEW_NAME\n                        new name of specified\
    \ chromosome, this will become the\n                        chromosome's name\
    \ in incidental output files\n  --genome GENOME, -g GENOME\n                 \
    \       name of genome CHROM belongs to\n  --genome_file FILE_NAME, -f FILE_NAME\n\
    \                        input file containing mapping of chromosomes to\n   \
    \                     genomes and additional chromosome names\n  --delete OLD_NAME\
    \ [OLD_NAME ...], -d OLD_NAME [OLD_NAME ...]\n                        chromosome\
    \ names to delete\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: ALI_FILE
    description: Alignment File (BLAST or nucmer output)
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --output
    - -o
    description: output pangenome file (PAN_FILE will be unchanged)
    args: !SimpleFlagArg
      name: NEW_PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --min_len
    - -l
    description: "minimum length of pairwise alignments to get included\n(DEFAULT=25)"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --no_self_alignments
    - -nsa
    description: "if set, skip pairwise alignments between regions on\nidentical chromosomes\
      \ (DEFAULT=False)\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake addAli [-h] --panfile PAN_FILE [--output NEW_PAN_FILE]\n\
    \                      [--min_len INT] [--no_self_alignments]\n              \
    \        ALI_FILE [ALI_FILE ...]\n\npositional arguments:\n  ALI_FILE        \
    \      Alignment File (BLAST or nucmer output)\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n\
    \                        Name of PanCake Data Object File (required)\n  --output\
    \ NEW_PAN_FILE, -o NEW_PAN_FILE\n                        output pangenome file\
    \ (PAN_FILE will be unchanged)\n  --min_len INT, -l INT\n                    \
    \    minimum length of pairwise alignments to get included\n                 \
    \       (DEFAULT=25)\n  --no_self_alignments, -nsa\n                        if\
    \ set, skip pairwise alignments between regions on\n                        identical\
    \ chromosomes (DEFAULT=False)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: PAN_FILE
    description: Name of PanCake Data Object File
  named: []
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake status [-h] PAN_FILE\n\npositional arguments:\n  PAN_FILE\
    \    Name of PanCake Data Object File\n\noptional arguments:\n  -h, --help  show\
    \ this help message and exit\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --chroms
    - -c
    description: "Chromosomes in Output (by default all chromosomes\ncovered in PAN_FILE)"
    args: !RepeatFlagArg
      name: CHROMS
  - !Flag
    optional: true
    synonyms:
    - -starts
    description: "Start positions (in same order as chromosomes),\nDEFAULT=1 on all\
      \ chromosomes"
    args: !RepeatFlagArg
      name: START_POS
  - !Flag
    optional: true
    synonyms:
    - -stops
    description: "Stop positions (in same order as chromosomes),\nDEFAULT=length of\
      \ chromosomes"
    args: !RepeatFlagArg
      name: STOP_POS
  - !Flag
    optional: true
    synonyms:
    - --max_nodes
    description: "Maximal number of nodes in output graph.\n(DEFAULT=10,000): if exceeded,\
      \ PanCake will warn and\ninterrupt!"
    args: !SimpleFlagArg
      name: MAX_NODES
  - !Flag
    optional: true
    synonyms:
    - --max_edges
    description: "Maximal number of edges in output graph.\n(DEFAULT=10,000): if exceeded,\
      \ PanCake will warn and\ninterrupt!"
    args: !SimpleFlagArg
      name: MAX_EDGES
  - !Flag
    optional: true
    synonyms:
    - --max_entries
    - -me
    description: "Shared features are truncated in output if number of\ncontained\
      \ feature instances > MAX_ENTRIES (DEFAULT:\nMAX_ENTRIES=50)"
    args: !SimpleFlagArg
      name: MAX_ENTRIES
  - !Flag
    optional: true
    synonyms:
    - -all
    description: "if set, all chromosomes contained in PAN_FILE appear\nin output\
      \ (irrespective to CHROMS), DEFAULT=False"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -regions
    description: "if set, only specified regions are shown in output\n(DEFAULT=False),\
      \ ignored if -all is set"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --output
    - -o
    description: "output DOT file (DEFAULT: STDOUT)\n"
    args: !SimpleFlagArg
      name: FILE
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake graph [-h] --panfile PAN_FILE [--chroms CHROMS [CHROMS\
    \ ...]]\n                     [-starts START_POS [START_POS ...]]\n          \
    \           [-stops STOP_POS [STOP_POS ...]] [--max_nodes MAX_NODES]\n       \
    \              [--max_edges MAX_EDGES] [--max_entries MAX_ENTRIES]\n         \
    \            [-all] [-regions] [--output FILE]\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n\
    \                        Name of PanCake Data Object File (required)\n  --chroms\
    \ CHROMS [CHROMS ...], -c CHROMS [CHROMS ...]\n                        Chromosomes\
    \ in Output (by default all chromosomes\n                        covered in PAN_FILE)\n\
    \  -starts START_POS [START_POS ...]\n                        Start positions\
    \ (in same order as chromosomes),\n                        DEFAULT=1 on all chromosomes\n\
    \  -stops STOP_POS [STOP_POS ...]\n                        Stop positions (in\
    \ same order as chromosomes),\n                        DEFAULT=length of chromosomes\n\
    \  --max_nodes MAX_NODES\n                        Maximal number of nodes in output\
    \ graph.\n                        (DEFAULT=10,000): if exceeded, PanCake will\
    \ warn and\n                        interrupt!\n  --max_edges MAX_EDGES\n    \
    \                    Maximal number of edges in output graph.\n              \
    \          (DEFAULT=10,000): if exceeded, PanCake will warn and\n            \
    \            interrupt!\n  --max_entries MAX_ENTRIES, -me MAX_ENTRIES\n      \
    \                  Shared features are truncated in output if number of\n    \
    \                    contained feature instances > MAX_ENTRIES (DEFAULT:\n   \
    \                     MAX_ENTRIES=50)\n  -all                  if set, all chromosomes\
    \ contained in PAN_FILE appear\n                        in output (irrespective\
    \ to CHROMS), DEFAULT=False\n  -regions              if set, only specified regions\
    \ are shown in output\n                        (DEFAULT=False), ignored if -all\
    \ is set\n  --output FILE, -o FILE\n                        output DOT file (DEFAULT:\
    \ STDOUT)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --ref_chrom
    - -rc
    description: "Reference CHROMOSOME (define either ONE reference\nchromosome or\
      \ ONE reference genome)"
    args: !SimpleFlagArg
      name: REF_CHROM
  - !Flag
    optional: true
    synonyms:
    - --ref_genome
    - -rg
    description: "Reference GENOME (define either ONE reference\nchromosome or ONE\
      \ reference genome)"
    args: !SimpleFlagArg
      name: REF_GENOME
  - !Flag
    optional: true
    synonyms:
    - --non_ref_chroms
    - -nrc
    description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\nreference\
      \ chromosomes)"
    args: !RepeatFlagArg
      name: NON_REF_CHROMS
  - !Flag
    optional: true
    synonyms:
    - --non_ref_genomes
    - -nrg
    description: "Names of non-reference GENOMES (DEFAULT: ALL non-\nreference genomes)"
    args: !RepeatFlagArg
      name: NON_REF_GENOMES
  - !Flag
    optional: true
    synonyms:
    - --exclude_genomes
    - -eg
    description: "Names of GENOMES to exclude from singleton analysis\n(DEFAULT: No\
      \ genomes excluded)"
    args: !RepeatFlagArg
      name: GENOME
  - !Flag
    optional: true
    synonyms:
    - --exclude_chromosomes
    - -ec
    description: "Names of CHROMOSOMES to exclude from singleton\nanalysis (DEFAULT:\
      \ No chromosomes excluded)"
    args: !RepeatFlagArg
      name: CHROMOSOME
  - !Flag
    optional: true
    synonyms:
    - --min_len
    - -l
    description: "minimum length of regions to identify as a singleton\nregion (INTEGER,\
      \ DEFAULT=25)"
    args: !SimpleFlagArg
      name: MIN_LEN
  - !Flag
    optional: true
    synonyms:
    - --output
    - -o
    description: "directory to which .fasta files of singleton regions\nare written\
      \ (DEFAULT:\nsingletons_{REF_CHROM|REF_GENOME})"
    args: !SimpleFlagArg
      name: DICT
  - !Flag
    optional: true
    synonyms:
    - --no_output
    - -no
    description: if set, supress .fasta output of singleton regions
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --bed_file
    - -b
    description: ".bed file to which singleton regions are written\n(DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
    args: !SimpleFlagArg
      name: BED_FILE
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake singletons [-h] --panfile PAN_FILE [--ref_chrom REF_CHROM]\n\
    \                          [--ref_genome REF_GENOME]\n                       \
    \   [--non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS ...]]\n                 \
    \         [--non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES ...]]\n        \
    \                  [--exclude_genomes GENOME [GENOME ...]]\n                 \
    \         [--exclude_chromosomes CHROMOSOME [CHROMOSOME ...]]\n              \
    \            [--min_len MIN_LEN] [--output DICT] [--no_output]\n             \
    \             [--bed_file BED_FILE]\n\noptional arguments:\n  -h, --help     \
    \       show this help message and exit\n  --panfile PAN_FILE, -p PAN_FILE\n \
    \                       Name of PanCake Data Object File (required)\n  --ref_chrom\
    \ REF_CHROM, -rc REF_CHROM\n                        Reference CHROMOSOME (define\
    \ either ONE reference\n                        chromosome or ONE reference genome)\n\
    \  --ref_genome REF_GENOME, -rg REF_GENOME\n                        Reference\
    \ GENOME (define either ONE reference\n                        chromosome or ONE\
    \ reference genome)\n  --non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS ...], -nrc\
    \ NON_REF_CHROMS [NON_REF_CHROMS ...]\n                        Names of non-reference\
    \ CHROMOSOMES (DEFAULT: ALL non-\n                        reference chromosomes)\n\
    \  --non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg NON_REF_GENOMES\
    \ [NON_REF_GENOMES ...]\n                        Names of non-reference GENOMES\
    \ (DEFAULT: ALL non-\n                        reference genomes)\n  --exclude_genomes\
    \ GENOME [GENOME ...], -eg GENOME [GENOME ...]\n                        Names\
    \ of GENOMES to exclude from singleton analysis\n                        (DEFAULT:\
    \ No genomes excluded)\n  --exclude_chromosomes CHROMOSOME [CHROMOSOME ...], -ec\
    \ CHROMOSOME [CHROMOSOME ...]\n                        Names of CHROMOSOMES to\
    \ exclude from singleton\n                        analysis (DEFAULT: No chromosomes\
    \ excluded)\n  --min_len MIN_LEN, -l MIN_LEN\n                        minimum\
    \ length of regions to identify as a singleton\n                        region\
    \ (INTEGER, DEFAULT=25)\n  --output DICT, -o DICT\n                        directory\
    \ to which .fasta files of singleton regions\n                        are written\
    \ (DEFAULT:\n                        singletons_{REF_CHROM|REF_GENOME})\n  --no_output,\
    \ -no      if set, supress .fasta output of singleton regions\n  --bed_file BED_FILE,\
    \ -b BED_FILE\n                        .bed file to which singleton regions are\
    \ written\n                        (DEFAULT= singletons_{REF_CHROM|REF_GENOME}.bed)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id010
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --chrom
    - -c
    description: Chromosome from which sequence originates
    args: !SimpleFlagArg
      name: CHROMOSOME
  - !Flag
    optional: true
    synonyms:
    - --genome
    - -g
    description: "(multiple) .fasta output of GENOME (if set, start and\nstop will\
      \ be ignored)"
    args: !SimpleFlagArg
      name: GENOME
  - !Flag
    optional: true
    synonyms:
    - --output
    - -o
    description: "file to which .fasta output will be written (DEFAULT =\nSTDOUT)"
    args: !SimpleFlagArg
      name: F
  - !Flag
    optional: true
    synonyms:
    - --linewidth
    - -lw
    description: line witdth in .fastafile (DEFAULT=100)
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -start
    description: (1-based) start position on CHROMOSME (DEFAULT = 1)
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -stop
    description: "(1-based) stop position on CHROMOSME (DEFAULT = length\nof CHROMOSME)\n"
    args: !SimpleFlagArg
      name: INT
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake sequence [-h] --panfile PAN_FILE\n                  \
    \      [--chrom CHROMOSOME | --genome GENOME] [--output F]\n                 \
    \       [--linewidth INT] [-start INT] [-stop INT]\n\noptional arguments:\n  -h,\
    \ --help            show this help message and exit\n  --panfile PAN_FILE, -p\
    \ PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
    \  --chrom CHROMOSOME, -c CHROMOSOME\n                        Chromosome from\
    \ which sequence originates\n  --genome GENOME, -g GENOME\n                  \
    \      (multiple) .fasta output of GENOME (if set, start and\n               \
    \         stop will be ignored)\n  --output F, -o F      file to which .fasta\
    \ output will be written (DEFAULT =\n                        STDOUT)\n  --linewidth\
    \ INT, -lw INT\n                        line witdth in .fastafile (DEFAULT=100)\n\
    \  -start INT            (1-based) start position on CHROMOSME (DEFAULT = 1)\n\
    \  -stop INT             (1-based) stop position on CHROMOSME (DEFAULT = length\n\
    \                        of CHROMOSME)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id011
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --sequences
    - -s
    description: "fasta or multiple fasta file providing input\nchromosome sequences"
    args: !RepeatFlagArg
      name: SEQUENCES
  - !Flag
    optional: true
    synonyms:
    - --ids
    - -i
    description: gi ids of sequences to download from NCBI
    args: !RepeatFlagArg
      name: IDS
  - !Flag
    optional: true
    synonyms:
    - --email
    - -e
    description: "if downloading your sequences via gi ids, please\nspecify your email\
      \ address; in case of excessive\nusage, NCBI will attempt to contact a user\
      \ at the\ne-mail address provided prior to blocking access to\nthe E-utilities"
    args: !SimpleFlagArg
      name: EMAIL
  - !Flag
    optional: true
    synonyms:
    - --output
    - -o
    description: "output file for new PanCake Object (DEFAULT=PAN_FILE);\nif specified,\
      \ PanCake Data Object in PAN_FILE stays\nunchanged"
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - --ali
    description: "[ALI [ALI ...]], -a [ALI [ALI ...]]\npairwise alignments (BLAST\
      \ or nucmer output) to\ninclude in PanCake Object"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --min_len
    - -l
    description: "minimum length of pairwise alignments to include\n(DEFUALT=25)"
    args: !SimpleFlagArg
      name: MIN_LEN
  - !Flag
    optional: true
    synonyms:
    - --no_self_alignments
    - -nsa
    description: "if set, skip pairwise alignments between regions on\nidentical chromosomes\
      \ as input (DEFAULT=False)\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake addChrom [-h] --panfile PAN_FILE\n                  \
    \      [--sequences SEQUENCES [SEQUENCES ...]]\n                        [--ids\
    \ IDS [IDS ...]] [--email EMAIL]\n                        [--output OUTPUT] [--ali\
    \ [ALI [ALI ...]]]\n                        [--min_len MIN_LEN] [--no_self_alignments]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  --panfile PAN_FILE, -p PAN_FILE\n                        Name of PanCake Data\
    \ Object File (required)\n  --sequences SEQUENCES [SEQUENCES ...], -s SEQUENCES\
    \ [SEQUENCES ...]\n                        fasta or multiple fasta file providing\
    \ input\n                        chromosome sequences\n  --ids IDS [IDS ...],\
    \ -i IDS [IDS ...]\n                        gi ids of sequences to download from\
    \ NCBI\n  --email EMAIL, -e EMAIL\n                        if downloading your\
    \ sequences via gi ids, please\n                        specify your email address;\
    \ in case of excessive\n                        usage, NCBI will attempt to contact\
    \ a user at the\n                        e-mail address provided prior to blocking\
    \ access to\n                        the E-utilities\n  --output OUTPUT, -o OUTPUT\n\
    \                        output file for new PanCake Object (DEFAULT=PAN_FILE);\n\
    \                        if specified, PanCake Data Object in PAN_FILE stays\n\
    \                        unchanged\n  --ali [ALI [ALI ...]], -a [ALI [ALI ...]]\n\
    \                        pairwise alignments (BLAST or nucmer output) to\n   \
    \                     include in PanCake Object\n  --min_len MIN_LEN, -l MIN_LEN\n\
    \                        minimum length of pairwise alignments to include\n  \
    \                      (DEFUALT=25)\n  --no_self_alignments, -nsa\n          \
    \              if set, skip pairwise alignments between regions on\n         \
    \               identical chromosomes as input (DEFAULT=False)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id012
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --panfile
    - -p
    description: Name of PanCake Data Object File (required)
    args: !SimpleFlagArg
      name: PAN_FILE
  - !Flag
    optional: true
    synonyms:
    - --ref_chrom
    - -rc
    description: "Reference CHROMOSOME (define either ONE reference\nchromosome OR\
      \ ONE reference genome)"
    args: !SimpleFlagArg
      name: REF_CHROM
  - !Flag
    optional: true
    synonyms:
    - --ref_genome
    - -rg
    description: "Reference GENOME (define either ONE reference\nchromosome OR ONE\
      \ reference genome)"
    args: !SimpleFlagArg
      name: REF_GENOME
  - !Flag
    optional: true
    synonyms:
    - --non_ref_chroms
    - -nrc
    description: "Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\nreference\
      \ chromosomes)"
    args: !RepeatFlagArg
      name: NON_REF_CHROMS
  - !Flag
    optional: true
    synonyms:
    - --non_ref_genomes
    - -nrg
    description: "Names of non-reference GENOMES (DEFAULT: ALL non-\nreference genomes)"
    args: !RepeatFlagArg
      name: NON_REF_GENOMES
  - !Flag
    optional: true
    synonyms:
    - --exclude_genomes
    - -eg
    description: "Names of GENOMES to exclude from core analysis\n(DEFAULT: No genomes\
      \ excluded)"
    args: !RepeatFlagArg
      name: GENOME
  - !Flag
    optional: true
    synonyms:
    - --exclude_chromosomes
    - -ec
    description: "Names of CHROMOSOMES to exclude from core analysis\n(DEFAULT: No\
      \ chromosomes excluded)"
    args: !RepeatFlagArg
      name: CHROMOSOME
  - !Flag
    optional: true
    synonyms:
    - --max_non_core_frac
    - -f
    description: "Maximum fraction of non-core sequence regions within\neach included\
      \ sequence (FLOAT, DEAFULT=0.05)"
    args: !SimpleFlagArg
      name: MAX_NON_CORE_FRAC
  - !Flag
    optional: true
    synonyms:
    - --min_len
    - -l
    description: "minimum length of regions to identify as part of core\ngenome (INTEGER,\
      \ DEFAULT=25)"
    args: !SimpleFlagArg
      name: MIN_LEN
  - !Flag
    optional: true
    synonyms:
    - --output
    - -o
    description: "directory to which .fasta files of core regions are\nwritten (DEFAULT:\
      \ core_{REF_CHROM|REF_GENOME})"
    args: !SimpleFlagArg
      name: DICT
  - !Flag
    optional: true
    synonyms:
    - --no_output
    - -no
    description: if set, supress .fasta output of core regions
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --bed_file
    - -b
    description: ".bed file to which core regions are written (DEFAULT=\ncore_{REF_CHROM|REF_GENOME}.bed)"
    args: !SimpleFlagArg
      name: BED_FILE
  - !Flag
    optional: true
    synonyms:
    - --max_space
    - -s
    description: "maximum non-core space allowed within a core region\n(DEFAULT=25)\n"
    args: !SimpleFlagArg
      name: INT
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pancake core [-h] --panfile PAN_FILE [--ref_chrom REF_CHROM]\n\
    \                    [--ref_genome REF_GENOME]\n                    [--non_ref_chroms\
    \ NON_REF_CHROMS [NON_REF_CHROMS ...]]\n                    [--non_ref_genomes\
    \ NON_REF_GENOMES [NON_REF_GENOMES ...]]\n                    [--exclude_genomes\
    \ GENOME [GENOME ...]]\n                    [--exclude_chromosomes CHROMOSOME\
    \ [CHROMOSOME ...]]\n                    [--max_non_core_frac MAX_NON_CORE_FRAC]\n\
    \                    [--min_len MIN_LEN] [--output DICT] [--no_output]\n     \
    \               [--bed_file BED_FILE] [--max_space INT]\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  --panfile PAN_FILE,\
    \ -p PAN_FILE\n                        Name of PanCake Data Object File (required)\n\
    \  --ref_chrom REF_CHROM, -rc REF_CHROM\n                        Reference CHROMOSOME\
    \ (define either ONE reference\n                        chromosome OR ONE reference\
    \ genome)\n  --ref_genome REF_GENOME, -rg REF_GENOME\n                       \
    \ Reference GENOME (define either ONE reference\n                        chromosome\
    \ OR ONE reference genome)\n  --non_ref_chroms NON_REF_CHROMS [NON_REF_CHROMS\
    \ ...], -nrc NON_REF_CHROMS [NON_REF_CHROMS ...]\n                        Names\
    \ of non-reference CHROMOSOMES (DEFAULT: ALL non-\n                        reference\
    \ chromosomes)\n  --non_ref_genomes NON_REF_GENOMES [NON_REF_GENOMES ...], -nrg\
    \ NON_REF_GENOMES [NON_REF_GENOMES ...]\n                        Names of non-reference\
    \ GENOMES (DEFAULT: ALL non-\n                        reference genomes)\n  --exclude_genomes\
    \ GENOME [GENOME ...], -eg GENOME [GENOME ...]\n                        Names\
    \ of GENOMES to exclude from core analysis\n                        (DEFAULT:\
    \ No genomes excluded)\n  --exclude_chromosomes CHROMOSOME [CHROMOSOME ...], -ec\
    \ CHROMOSOME [CHROMOSOME ...]\n                        Names of CHROMOSOMES to\
    \ exclude from core analysis\n                        (DEFAULT: No chromosomes\
    \ excluded)\n  --max_non_core_frac MAX_NON_CORE_FRAC, -f MAX_NON_CORE_FRAC\n \
    \                       Maximum fraction of non-core sequence regions within\n\
    \                        each included sequence (FLOAT, DEAFULT=0.05)\n  --min_len\
    \ MIN_LEN, -l MIN_LEN\n                        minimum length of regions to identify\
    \ as part of core\n                        genome (INTEGER, DEFAULT=25)\n  --output\
    \ DICT, -o DICT\n                        directory to which .fasta files of core\
    \ regions are\n                        written (DEFAULT: core_{REF_CHROM|REF_GENOME})\n\
    \  --no_output, -no      if set, supress .fasta output of core regions\n  --bed_file\
    \ BED_FILE, -b BED_FILE\n                        .bed file to which core regions\
    \ are written (DEFAULT=\n                        core_{REF_CHROM|REF_GENOME}.bed)\n\
    \  --max_space INT, -s INT\n                        maximum non-core space allowed\
    \ within a core region\n                        (DEFAULT=25)\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: pancake [-h]\n               {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
  \               ...\n\nPanCake -- A data structure for pangenomes enabling for core\
  \ and singleton\nidentification, without the requirement of annotation data.\n\n\
  positional arguments:\n  {create,status,addAli,specify,addChrom,core,singletons,sequence,graph}\n\
  \    create              create a PanCake Data Object\n    status              get\
  \ overview about a PanCake Object\n    addAli              include information from\
  \ pairwise (BLAST or nucmer)\n                        alignments into an already\
  \ existing PanCake Object\n    specify             include genome information or\
  \ rename chromosomes\n    addChrom            add chromosomes to an already existing\
  \ PanCake Object\n    core                identify core regions\n    singletons\
  \          identify singleton regions\n    sequence            get sequence of a\
  \ chromosome (or chromosomal region)\n                        from a PanCake Object\n\
  \    graph               graphical output of PanCake Objects (in DOT format)\n \
  \                       #BETA MODE#\n\noptional arguments:\n  -h, --help       \
  \     show this help message and exit\n"
generated_using: *id004
docker_image:
