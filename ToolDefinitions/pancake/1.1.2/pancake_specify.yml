!Command
command:
- pancake
- specify
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --panfile
  - -p
  description: Name of PanCake Data Object File (required)
  args: !SimpleFlagArg
    name: PAN_FILE
- !Flag
  optional: true
  synonyms:
  - --chrom
  - -c
  description: name(s) of respective chromosome(s)
  args: !RepeatFlagArg
    name: CHROM
- !Flag
  optional: true
  synonyms:
  - --name
  - -n
  description: "new name of specified chromosome, this will become the\nchromosome's\
    \ name in incidental output files"
  args: !SimpleFlagArg
    name: NEW_NAME
- !Flag
  optional: true
  synonyms:
  - --genome
  - -g
  description: name of genome CHROM belongs to
  args: !SimpleFlagArg
    name: GENOME
- !Flag
  optional: true
  synonyms:
  - --genome_file
  - -f
  description: "input file containing mapping of chromosomes to\ngenomes and additional\
    \ chromosome names"
  args: !SimpleFlagArg
    name: FILE_NAME
- !Flag
  optional: true
  synonyms:
  - --delete
  - -d
  description: "chromosome names to delete\n"
  args: !RepeatFlagArg
    name: OLD_NAME
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: pancake specify [-h] --panfile PAN_FILE [--chrom CHROM [CHROM ...]]\n\
  \                       [--name NEW_NAME] [--genome GENOME]\n                  \
  \     [--genome_file FILE_NAME]\n                       [--delete OLD_NAME [OLD_NAME\
  \ ...]]\n\noptional arguments:\n  -h, --help            show this help message and\
  \ exit\n  --panfile PAN_FILE, -p PAN_FILE\n                        Name of PanCake\
  \ Data Object File (required)\n  --chrom CHROM [CHROM ...], -c CHROM [CHROM ...]\n\
  \                        name(s) of respective chromosome(s)\n  --name NEW_NAME,\
  \ -n NEW_NAME\n                        new name of specified chromosome, this will\
  \ become the\n                        chromosome's name in incidental output files\n\
  \  --genome GENOME, -g GENOME\n                        name of genome CHROM belongs\
  \ to\n  --genome_file FILE_NAME, -f FILE_NAME\n                        input file\
  \ containing mapping of chromosomes to\n                        genomes and additional\
  \ chromosome names\n  --delete OLD_NAME [OLD_NAME ...], -d OLD_NAME [OLD_NAME ...]\n\
  \                        chromosome names to delete\n"
generated_using:
- --help
docker_image:
