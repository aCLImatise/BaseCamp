&id001 !Command
command:
- read_analysis.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands:
- !Command
  command:
  - read_analysis.py
  - genome
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --read
    description: Input read for training
    args: !SimpleFlagArg
      name: READ
  - !Flag
    optional: true
    synonyms:
    - -rg
    - --ref_g
    description: "Reference genome, not required if genome alignment\nfile is provided"
    args: !SimpleFlagArg
      name: REF_G
  - !Flag
    optional: true
    synonyms:
    - -a
    - --aligner
    description: "The aligner to be used, minimap2 or LAST (Default =\nminimap2)"
    args: !ChoiceFlagArg
      choices: !!set
        LAST:
        minimap2:
  - !Flag
    optional: true
    synonyms:
    - -ga
    - --g_alnm
    description: Genome alignment file in sam or maf format (optional)
    args: !SimpleFlagArg
      name: G_ALNM
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: "The location and prefix of outputting profiles\n(Default = training)"
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - --no_model_fit
    description: Disable model fitting step
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    - --num_threads
    description: "Number of threads for alignment and model fitting\n(Default = 1)\n"
    args: !SimpleFlagArg
      name: NUM_THREADS
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: read_analysis.py genome [-h] -i READ [-rg REF_G] [-a {minimap2,LAST}]\n\
    \                               [-ga G_ALNM] [-o OUTPUT] [--no_model_fit]\n  \
    \                             [-t NUM_THREADS]\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  -i READ, --read READ  Input read\
    \ for training\n  -rg REF_G, --ref_g REF_G\n                        Reference\
    \ genome, not required if genome alignment\n                        file is provided\n\
    \  -a {minimap2,LAST}, --aligner {minimap2,LAST}\n                        The\
    \ aligner to be used, minimap2 or LAST (Default =\n                        minimap2)\n\
    \  -ga G_ALNM, --g_alnm G_ALNM\n                        Genome alignment file\
    \ in sam or maf format (optional)\n  -o OUTPUT, --output OUTPUT\n            \
    \            The location and prefix of outputting profiles\n                \
    \        (Default = training)\n  --no_model_fit        Disable model fitting step\n\
    \  -t NUM_THREADS, --num_threads NUM_THREADS\n                        Number of\
    \ threads for alignment and model fitting\n                        (Default =\
    \ 1)\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/nanosim:2.6.0--0
- !Command
  command:
  - read_analysis.py
  - quantify
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --read
    description: Input reads for quantification
    args: !SimpleFlagArg
      name: READ
  - !Flag
    optional: true
    synonyms:
    - -rt
    - --ref_t
    description: Reference Transcriptome
    args: !SimpleFlagArg
      name: REF_T
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: "The location and prefix of outputting profile (Default\n= expression)"
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - -t
    - --num_threads
    description: "Number of threads for alignment (Default = 1)\n"
    args: !SimpleFlagArg
      name: NUM_THREADS
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: read_analysis.py quantify [-h] -i READ -rt REF_T [-o OUTPUT]\n\
    \                                 [-t NUM_THREADS]\n\noptional arguments:\n  -h,\
    \ --help            show this help message and exit\n  -i READ, --read READ  Input\
    \ reads for quantification\n  -rt REF_T, --ref_t REF_T\n                     \
    \   Reference Transcriptome\n  -o OUTPUT, --output OUTPUT\n                  \
    \      The location and prefix of outputting profile (Default\n              \
    \          = expression)\n  -t NUM_THREADS, --num_threads NUM_THREADS\n      \
    \                  Number of threads for alignment (Default = 1)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/nanosim:2.6.0--0
- !Command
  command:
  - read_analysis.py
  - detect_ir
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -annot
    - --annotation
    description: Annotation file in ensemble GTF/GFF formats
    args: !SimpleFlagArg
      name: ANNOTATION
  - !Flag
    optional: true
    synonyms:
    - -i
    - --read
    description: "Input read for training, not required if alignment\nfiles are provided"
    args: !SimpleFlagArg
      name: READ
  - !Flag
    optional: true
    synonyms:
    - -rg
    - --ref_g
    description: "Reference genome, not required if genome alignment\nfile is provided"
    args: !SimpleFlagArg
      name: REF_G
  - !Flag
    optional: true
    synonyms:
    - -rt
    - --ref_t
    description: "Reference Transcriptome, not required if transcriptome\nalignment\
      \ file is provided"
    args: !SimpleFlagArg
      name: REF_T
  - !Flag
    optional: true
    synonyms:
    - -a
    - --aligner
    description: "The aligner to be used: minimap2 or LAST (Default =\nminimap2)"
    args: !ChoiceFlagArg
      choices: !!set
        LAST:
        minimap2:
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: The output name and location
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - -ga
    - --g_alnm
    description: Genome alignment file in sam or maf format (optional)
    args: !SimpleFlagArg
      name: G_ALNM
  - !Flag
    optional: true
    synonyms:
    - -ta
    - --t_alnm
    description: "Transcriptome alignment file in sam or maf format\n(optional)"
    args: !SimpleFlagArg
      name: T_ALNM
  - !Flag
    optional: true
    synonyms:
    - -t
    - --num_threads
    description: "Number of threads for alignment (Default = 1)\n"
    args: !SimpleFlagArg
      name: NUM_THREADS
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: read_analysis.py detect_ir [-h] -annot ANNOTATION [-i READ] [-rg\
    \ REF_G]\n                                  [-rt REF_T] [-a {minimap2,LAST}] [-o\
    \ OUTPUT]\n                                  [-ga G_ALNM] [-ta T_ALNM] [-t NUM_THREADS]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -annot ANNOTATION, --annotation ANNOTATION\n                        Annotation\
    \ file in ensemble GTF/GFF formats\n  -i READ, --read READ  Input read for training,\
    \ not required if alignment\n                        files are provided\n  -rg\
    \ REF_G, --ref_g REF_G\n                        Reference genome, not required\
    \ if genome alignment\n                        file is provided\n  -rt REF_T,\
    \ --ref_t REF_T\n                        Reference Transcriptome, not required\
    \ if transcriptome\n                        alignment file is provided\n  -a {minimap2,LAST},\
    \ --aligner {minimap2,LAST}\n                        The aligner to be used: minimap2\
    \ or LAST (Default =\n                        minimap2)\n  -o OUTPUT, --output\
    \ OUTPUT\n                        The output name and location\n  -ga G_ALNM,\
    \ --g_alnm G_ALNM\n                        Genome alignment file in sam or maf\
    \ format (optional)\n  -ta T_ALNM, --t_alnm T_ALNM\n                        Transcriptome\
    \ alignment file in sam or maf format\n                        (optional)\n  -t\
    \ NUM_THREADS, --num_threads NUM_THREADS\n                        Number of threads\
    \ for alignment (Default = 1)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/nanosim:2.6.0--0
- !Command
  command:
  - read_analysis.py
  - transcriptome
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --read
    description: Input read for training
    args: !SimpleFlagArg
      name: READ
  - !Flag
    optional: true
    synonyms:
    - -rg
    - --ref_g
    description: Reference genome
    args: !SimpleFlagArg
      name: REF_G
  - !Flag
    optional: true
    synonyms:
    - -rt
    - --ref_t
    description: Reference Transcriptome
    args: !SimpleFlagArg
      name: REF_T
  - !Flag
    optional: true
    synonyms:
    - -annot
    - --annotation
    description: "Annotation file in ensemble GTF/GFF formats, required\nfor intron\
      \ retention detection"
    args: !SimpleFlagArg
      name: ANNOTATION
  - !Flag
    optional: true
    synonyms:
    - -a
    - --aligner
    description: "The aligner to be used: minimap2 or LAST (Default =\nminimap2)"
    args: !ChoiceFlagArg
      choices: !!set
        LAST:
        minimap2:
  - !Flag
    optional: true
    synonyms:
    - -ga
    - --g_alnm
    description: Genome alignment file in sam or maf format (optional)
    args: !SimpleFlagArg
      name: G_ALNM
  - !Flag
    optional: true
    synonyms:
    - -ta
    - --t_alnm
    description: "Transcriptome alignment file in sam or maf format\n(optional)"
    args: !SimpleFlagArg
      name: T_ALNM
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: "The location and prefix of outputting profiles\n(Default = training)"
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - --no_model_fit
    description: Disable model fitting step
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no_intron_retention
    description: Disable Intron Retention analysis
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    - --num_threads
    description: "Number of threads for alignment and model fitting\n(Default = 1)\n"
    args: !SimpleFlagArg
      name: NUM_THREADS
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: read_analysis.py transcriptome [-h] -i READ -rg REF_G -rt REF_T\n\
    \                                      [-annot ANNOTATION] [-a {minimap2,LAST}]\n\
    \                                      [-ga G_ALNM] [-ta T_ALNM] [-o OUTPUT]\n\
    \                                      [--no_model_fit] [--no_intron_retention]\n\
    \                                      [-t NUM_THREADS]\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  -i READ, --read READ\
    \  Input read for training\n  -rg REF_G, --ref_g REF_G\n                     \
    \   Reference genome\n  -rt REF_T, --ref_t REF_T\n                        Reference\
    \ Transcriptome\n  -annot ANNOTATION, --annotation ANNOTATION\n              \
    \          Annotation file in ensemble GTF/GFF formats, required\n           \
    \             for intron retention detection\n  -a {minimap2,LAST}, --aligner\
    \ {minimap2,LAST}\n                        The aligner to be used: minimap2 or\
    \ LAST (Default =\n                        minimap2)\n  -ga G_ALNM, --g_alnm G_ALNM\n\
    \                        Genome alignment file in sam or maf format (optional)\n\
    \  -ta T_ALNM, --t_alnm T_ALNM\n                        Transcriptome alignment\
    \ file in sam or maf format\n                        (optional)\n  -o OUTPUT,\
    \ --output OUTPUT\n                        The location and prefix of outputting\
    \ profiles\n                        (Default = training)\n  --no_model_fit   \
    \     Disable model fitting step\n  --no_intron_retention\n                  \
    \      Disable Intron Retention analysis\n  -t NUM_THREADS, --num_threads NUM_THREADS\n\
    \                        Number of threads for alignment and model fitting\n \
    \                       (Default = 1)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/nanosim:2.6.0--0
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: read_analysis.py [-h] [-v]\n                        {genome,transcriptome,quantify,detect_ir}\
  \ ...\n\nRead characterization step\n-----------------------------------------------------------\n\
  Given raw ONT reads, reference genome and/or transcriptome,\nlearn read features\
  \ and output error profiles\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  -v, --version         show program's version number\
  \ and exit\n\nsubcommands:\n  \n  There are four modes in read_analysis.\n  For\
  \ detailed usage of each mode:\n      read_analysis.py mode -h\n  -------------------------------------------------------\n\
  \n  {genome,transcriptome,quantify,detect_ir}\n    genome              Run the simulator\
  \ on genome mode\n    transcriptome       Run the simulator on transcriptome mode\n\
  \    quantify            Quantify expression profile of transcripts\n    detect_ir\
  \           Detect Intron Retention events using the alignment\n               \
  \         file\n"
generated_using: *id002
docker_image: quay.io/biocontainers/nanosim:2.6.0--0
