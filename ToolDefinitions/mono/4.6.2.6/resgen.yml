!Command
command:
- resgen
positional:
- !Positional
  optional: false
  position: 0
  name: source.ext
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -compile
  description: ", /compile\ntakes a list of .resX or .txt files to convert to .resources\
    \ files\nin one bulk operation, replacing .ext with .resources for the\noutput\
    \ file name (if not set)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -usesourcepath
  description: ", /useSourcePath\nto resolve relative file paths, use the directory\
    \ of the resource\nfile as current directory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -define
  description: ", /define:SYMBOL1,SYMBOL2\ntakes a comma-separated list of symbols\
    \ that control conditional\ninclusion of resources file. The source file needs\
    \ to be in\nthe '.txt' format.\nResources enclosed with #ifdef SYMBOL1 ... #endif\
    \ directives\nwill be included in the destination file when SYMBOL1 has\nbeen\
    \ specified using /define option.\nResources enclosed with #if ! SYMBOL2 ... #endif\
    \ directives\nwill be included only if SYMBOL2 has NOT been specified.\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Mono Resource Generator version 4.6.2.0\nUsage:\n\t\tresgen source.ext\
  \ [dest.ext]\n\t\tresgen [options] /compile source.ext[,dest.resources] [...]\n\n\
  Convert a resource file from one format to another.\nThe currently supported formats\
  \ are: '.txt' '.resources' '.resx' '.po'.\nIf the destination file is not specified,\
  \ source.resources will be used.\n\nOptions:\n-compile, /compile\n\ttakes a list\
  \ of .resX or .txt files to convert to .resources files\n\tin one bulk operation,\
  \ replacing .ext with .resources for the \n\toutput file name (if not set).\n-usesourcepath,\
  \ /useSourcePath\n\tto resolve relative file paths, use the directory of the resource\
  \ \n\tfile as current directory.\n-define, /define:SYMBOL1,SYMBOL2\n\ttakes a comma-separated\
  \ list of symbols that control conditional\n\tinclusion of resources file. The source\
  \ file needs to be in \n\tthe '.txt' format.\n\n\tResources enclosed with #ifdef\
  \ SYMBOL1 ... #endif directives\n\twill be included in the destination file when\
  \ SYMBOL1 has\n\tbeen specified using /define option.\n\n\tResources enclosed with\
  \ #if ! SYMBOL2 ... #endif directives\n\twill be included only if SYMBOL2 has NOT\
  \ been specified.\n\n"
generated_using:
- --help
docker_image:
