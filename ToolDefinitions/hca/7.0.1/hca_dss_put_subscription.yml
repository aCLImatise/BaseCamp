!Command
command:
- hca
- dss
- put-subscription
positional: []
named:
- !Flag
  description: "[--encoding {application/json,multipart/form-data}]\n[--es-query ES_QUERY]\n\
    [--form-fields FORM_FIELDS]\n[--hmac-key-id HMAC_KEY_ID]\n[--hmac-secret-key HMAC_SECRET_KEY]\n\
    [--jmespath-query JMESPATH_QUERY]\n[--method {POST,PUT}]\n[--payload-form-field\
    \ PAYLOAD_FORM_FIELD]\n--replica {aws,gcp}"
  synonyms:
  - --callback-url
  args: !SimpleFlagArg
    name: CALLBACK_URL
  optional: true
- !Flag
  description: "The set of bundle metadata items to be included in the payload of\
    \ a notification request to a subscription endpoint. Each property in this object\
    \ represents an attachment to the notification payload. Each attachment will be\
    \ a child property of the `attachments` property of the payload. The name of such\
    \ a child property can be chosen freely provided it does not start with an underscore.\n\
    For example, if the subscription is\n```\n{\n\"attachments\": {\n\"taxon\": {\n\
    \"type\": \"jmespath\",\n\"expression\": \"files.biomaterial_json.biomaterials[].content.biomaterial_core.ncbi_taxon_id[]\"\
    \n}\n}\n}\n```\nthe corresponding notification payload will contain the following\
    \ entry\n```\n\"attachments\": {\n\"taxon\": [9606, 9606]\n}\n```\nIf a general\
    \ error occurs during the processing of attachments, the notification will be\
    \ sent with `attachments` containing only the reserved `_errors` attachment containing\
    \ a string describing the error. If an error occurs during the processing of a\
    \ specific attachment, the notification will be sent with all successfully processed\
    \ attachments and additionally the `_errors` attachment containing an object with\
    \ one property for each failed attachment. For example,\n```\n\"attachments\"\
    : {\n\"taxon\": [9606, 9606]\n\"_errors\" {\n\"biomaterial\": \"Some error occurred\"\
    \n}\n}\n```\nThe value of the `attachments` property must be less than or equal\
    \ to 128 KiB in size when serialized to JSON and encoded as UTF-8. If it is not,\
    \ the notification will be sent with\n\"attachments\": {\n\"_errors\": \"Attachments\
    \ too large (131073 bytes)\"\n}"
  synonyms:
  - --attachments
  args: !SimpleFlagArg
    name: ATTACHMENTS
  optional: true
- !Flag
  description: "The MIME type describing the encoding of the request body * `application/json`\
    \ - the HTTP request body is the notification payload as JSON * `multipart/form-data`\
    \ - the HTTP request body is a list of form fields, each consisting of a name\n\
    and a corresponding value. See https://tools.ietf.org/html/rfc7578 for details\
    \ on this encoding.\nThe actual notification payload will be placed as JSON into\
    \ a field of the name specified via\n`payload_form_field`."
  synonyms:
  - --encoding
  args: !ChoiceFlagArg
    choices: !!set
      application/json:
      multipart/form-data:
  optional: true
- !Flag
  description: An Elasticsearch query for restricting the set of bundles for which
    the subscriber is notified. The subscriber will only be notified for newly indexed
    bundles that match the given query. If this parameter is present the subscription
    will be of type `elasticsearch`, otherwise it will be of type `jmespath`.
  synonyms:
  - --es-query
  args: !SimpleFlagArg
    name: ES_QUERY
  optional: true
- !Flag
  description: "A collection of static form fields to be supplied in the request body,\
    \ alongside the actual notification payload. The value of each field must be a\
    \ string. For example, if the subscriptions has this property set to `{\"foo\"\
    \ : \"bar\"}`, the corresponding notification HTTP request body will consist of\
    \ a multipart frame with two frames,\n```\n----------------2769baffc4f24cbc83ced26aa0c2f712\n\
    Content-Disposition: form-data; name=\"foo\"\nbar\n----------------2769baffc4f24cbc83ced26aa0c2f712\n\
    Content-Disposition: form-data; name=\"payload\"\n{\"transaction_id\": \"301c9079-3b20-4311-a131-bcda9b7f08ba\"\
    , \"subscription_id\": ...\n```\nSince the type of this property is `object`,\
    \ multi-valued fields are not supported. This property is ignored unless `encoding`\
    \ is `multipart/form-data`."
  synonyms:
  - --form-fields
  args: !SimpleFlagArg
    name: FORM_FIELDS
  optional: true
- !Flag
  description: An optional key ID to use with `hmac_secret_key`.
  synonyms:
  - --hmac-key-id
  args: !SimpleFlagArg
    name: HMAC_KEY_ID
  optional: true
- !Flag
  description: The key for signing requests to the subscriber's URL. The signature
    will be constructed according to https://tools.ietf.org/html/draft-cavage-http-signatures
    and transmitted in the HTTP `Authorization` header.
  synonyms:
  - --hmac-secret-key
  args: !SimpleFlagArg
    name: HMAC_SECRET_KEY
  optional: true
- !Flag
  description: An JMESPath query for restricting the set of bundles for which the
    subscriber is notified. The subscriber will only be notified for new bundles that
    match the given query. If `es_query` is specified, the subscription will be of
    type `elasticsearch`. If `es_query` is not present, the subscription will be of
    type `jmespath`
  synonyms:
  - --jmespath-query
  args: !SimpleFlagArg
    name: JMESPATH_QUERY
  optional: true
- !Flag
  description: The HTTP request method to use when delivering a notification to the
    subscriber.
  synonyms:
  - --method
  args: !ChoiceFlagArg
    choices: !!set
      PUT:
      POST:
  optional: true
- !Flag
  description: The name of the form field that will hold the notification payload
    when the request is made. If the default name of the payload field collides with
    that of a field in `form_fields`, this porperty can be used to rename the payload
    and avoid the collision. This property is ignored unless `encoding` is `multipart/form-data`.
  synonyms:
  - --payload-form-field
  args: !SimpleFlagArg
    name: PAYLOAD_FORM_FIELD
  optional: true
- !Flag
  description: Replica to write to.
  synonyms:
  - --replica
  args: !ChoiceFlagArg
    choices: !!set
      gcp:
      aws:
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: hca dss put-subscription [-h] [--attachments ATTACHMENTS]\n   \
  \                             --callback-url CALLBACK_URL\n                    \
  \            [--encoding {application/json,multipart/form-data}]\n             \
  \                   [--es-query ES_QUERY]\n                                [--form-fields\
  \ FORM_FIELDS]\n                                [--hmac-key-id HMAC_KEY_ID]\n  \
  \                              [--hmac-secret-key HMAC_SECRET_KEY]\n           \
  \                     [--jmespath-query JMESPATH_QUERY]\n                      \
  \          [--method {POST,PUT}]\n                                [--payload-form-field\
  \ PAYLOAD_FORM_FIELD]\n                                --replica {aws,gcp}\n\nRegister\
  \ an HTTP endpoint that is to be notified when a given event occurs.\nEach user\
  \ is allowed 100 subscriptions, a limit that may be increased in the future. Concerns\
  \ about notification service limitations should be routed to the DSS development\
  \ team.\n\nOptional Arguments:\n  -h, --help            show this help message and\
  \ exit\n  --attachments ATTACHMENTS\n                        The set of bundle metadata\
  \ items to be included in the payload of a notification request to a subscription\
  \ endpoint. Each property in this object represents an attachment to the notification\
  \ payload. Each attachment will be a child property of the `attachments` property\
  \ of the payload. The name of such a child property can be chosen freely provided\
  \ it does not start with an underscore.\n                        For example, if\
  \ the subscription is\n                        ```\n                        {\n\
  \                          \"attachments\": {\n                            \"taxon\"\
  : {\n                              \"type\": \"jmespath\",\n                   \
  \           \"expression\": \"files.biomaterial_json.biomaterials[].content.biomaterial_core.ncbi_taxon_id[]\"\
  \n                            }\n                          }\n                 \
  \       }\n                        ```\n                        the corresponding\
  \ notification payload will contain the following entry\n                      \
  \  ```\n                        \"attachments\": {\n                          \"\
  taxon\": [9606, 9606]\n                        }\n                        ```\n\
  \                        If a general error occurs during the processing of attachments,\
  \ the notification will be sent with `attachments` containing only the reserved\
  \ `_errors` attachment containing a string describing the error. If an error occurs\
  \ during the processing of a specific attachment, the notification will be sent\
  \ with all successfully processed attachments and additionally the `_errors` attachment\
  \ containing an object with one property for each failed attachment. For example,\n\
  \                        ```\n                        \"attachments\": {\n     \
  \                     \"taxon\": [9606, 9606]\n                          \"_errors\"\
  \ {\n                            \"biomaterial\": \"Some error occurred\"\n    \
  \                      }\n                        }\n                        ```\n\
  \                        The value of the `attachments` property must be less than\
  \ or equal to 128 KiB in size when serialized to JSON and encoded as UTF-8. If it\
  \ is not, the notification will be sent with\n                        \"attachments\"\
  : {\n                          \"_errors\": \"Attachments too large (131073 bytes)\"\
  \n                        }\n\nRequired Arguments:\n  --callback-url CALLBACK_URL\n\
  \                        The subscriber's URL. An HTTP request is made to the specified\
  \ URL for every attempt to deliver a notification to the subscriber. If the HTTP\
  \ response code is 2XX, the delivery attempt is considered successful. Otherwise,\
  \ more attempts will be made with an exponentially increasing delay between attempts,\
  \ until an attempt is successful or the a maximum number of attempts is reached.\n\
  \                        Occasionally, duplicate notifications may be sent. It is\
  \ up to the receiver of the notification to tolerate duplicate notifications.\n\
  \  --encoding {application/json,multipart/form-data}\n                        The\
  \ MIME type describing the encoding of the request body * `application/json` - the\
  \ HTTP request body is the notification payload as JSON * `multipart/form-data`\
  \ - the HTTP request body is a list of form fields, each consisting of a name\n\
  \                          and a corresponding value. See https://tools.ietf.org/html/rfc7578\
  \ for details on this encoding.\n                          The actual notification\
  \ payload will be placed as JSON into a field of the name specified via\n      \
  \                    `payload_form_field`.\n  --es-query ES_QUERY   An Elasticsearch\
  \ query for restricting the set of bundles for which the subscriber is notified.\
  \ The subscriber will only be notified for newly indexed bundles that match the\
  \ given query. If this parameter is present the subscription will be of type `elasticsearch`,\
  \ otherwise it will be of type `jmespath`.\n  --form-fields FORM_FIELDS\n      \
  \                  A collection of static form fields to be supplied in the request\
  \ body, alongside the actual notification payload. The value of each field must\
  \ be a string. For example, if the subscriptions has this property set to `{\"foo\"\
  \ : \"bar\"}`, the corresponding notification HTTP request body will consist of\
  \ a multipart frame with two frames,\n                        ```\n            \
  \            ----------------2769baffc4f24cbc83ced26aa0c2f712\n                \
  \        Content-Disposition: form-data; name=\"foo\"\n                        bar\n\
  \                        ----------------2769baffc4f24cbc83ced26aa0c2f712\n    \
  \                    Content-Disposition: form-data; name=\"payload\"\n        \
  \                {\"transaction_id\": \"301c9079-3b20-4311-a131-bcda9b7f08ba\",\
  \ \"subscription_id\": ...\n                        ```\n                      \
  \  Since the type of this property is `object`, multi-valued fields are not supported.\
  \ This property is ignored unless `encoding` is `multipart/form-data`.\n  --hmac-key-id\
  \ HMAC_KEY_ID\n                        An optional key ID to use with `hmac_secret_key`.\n\
  \  --hmac-secret-key HMAC_SECRET_KEY\n                        The key for signing\
  \ requests to the subscriber's URL. The signature will be constructed according\
  \ to https://tools.ietf.org/html/draft-cavage-http-signatures and transmitted in\
  \ the HTTP `Authorization` header.\n  --jmespath-query JMESPATH_QUERY\n        \
  \                An JMESPath query for restricting the set of bundles for which\
  \ the subscriber is notified. The subscriber will only be notified for new bundles\
  \ that match the given query. If `es_query` is specified, the subscription will\
  \ be of type `elasticsearch`. If `es_query` is not present, the subscription will\
  \ be of type `jmespath`\n  --method {POST,PUT}   The HTTP request method to use\
  \ when delivering a notification to the subscriber.\n  --payload-form-field PAYLOAD_FORM_FIELD\n\
  \                        The name of the form field that will hold the notification\
  \ payload when the request is made. If the default name of the payload field collides\
  \ with that of a field in `form_fields`, this porperty can be used to rename the\
  \ payload and avoid the collision. This property is ignored unless `encoding` is\
  \ `multipart/form-data`.\n  --replica {aws,gcp}   Replica to write to.\n\n"
generated_using:
- --help
