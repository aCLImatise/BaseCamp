!Command
command: &id001
- esl-shuffle
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - esl-shuffle
  - msafile
  positional:
  - !Positional
    optional: false
    position: 0
    name: esl-shuffle
    description: ''
  - !Positional
    optional: false
    position: 1
    name: seqfile
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -G
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -A
    description: ''
    args: !EmptyFlagArg {}
  parent: &id010 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: esl-shuffle
        description: ''
      - !Positional
        optional: false
        position: 1
        name: seqfile
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -G
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -A
        description: ''
        args: !EmptyFlagArg {}
      parent: &id009 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: esl-shuffle
            description: ''
          - !Positional
            optional: false
            position: 1
            name: seqfile
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -G
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -A
            description: ''
            args: !EmptyFlagArg {}
          parent: &id008 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: esl-shuffle
                description: ''
              - !Positional
                optional: false
                position: 1
                name: seqfile
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -G
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -A
                description: ''
                args: !EmptyFlagArg {}
              parent: &id007 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: esl-shuffle
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: seqfile
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -G
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -A
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - -o
                      description: ': direct output data to file <f>'
                      args: !SimpleFlagArg
                        name: f
                    - !Flag
                      optional: true
                      synonyms:
                      - -N
                      description: ': generate <n> samples (per input seq/msa)  [1]  (n>0)'
                      args: !SimpleFlagArg
                        name: n
                    - !Flag
                      optional: true
                      synonyms:
                      - -L
                      description: ': truncate outputs to length <n>  [0]  (n>=0)'
                      args: !SimpleFlagArg
                        name: n
                    - !Flag
                      optional: true
                      synonyms:
                      - -m
                      description: ': shuffle preserving monoresidue composition  [default]'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -d
                      description: ': shuffle preserving mono- and di-residue composition'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -k
                      description: ': shuffle nonoverlapping <n>-mers  (n>0)'
                      args: !SimpleFlagArg
                        name: n
                    - !Flag
                      optional: true
                      synonyms:
                      - '-0'
                      description: ': generate with 0th order Markov properties per
                        input'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - '-1'
                      description: ': generate with 1st order Markov properties per
                        input'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -r
                      description: ': reverse each input'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -w
                      description: ': regionally shuffle inputs in window size <n>  (n>0)'
                      args: !SimpleFlagArg
                        name: n
                    - !Flag
                      optional: true
                      synonyms:
                      - -b
                      description: ': take bootstrapping samples'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -v
                      description: ': shuffle residues in each column independently'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --rna
                      description: ': generate RNA sequence  [default]'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --dna
                      description: ': generate DNA sequence'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --amino
                      description: ': generate protein sequence'
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --seed
                      description: ": set random number generator's seed to <n>  [0]\
                        \  (n>=0)"
                      args: !SimpleFlagArg
                        name: n
                    - !Flag
                      optional: true
                      synonyms:
                      - --informat
                      description: ': specify that input file is in format <s>'
                      args: !SimpleFlagArg
                        name: s
                    - !Flag
                      optional: true
                      synonyms:
                      - -G
                      description: ''
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -A
                      description: ''
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: esl-shuffle
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: seqfile
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -G
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -A
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles\
                        \ individual sequences)\nUsage: esl-shuffle -A [options] <msafile>\
                        \  (shuffles msa columnwise)\nUsage: esl-shuffle -G [options]\
                        \            (generates random sequences)\n\nTo see more help\
                        \ on available options, do esl-shuffle -h\n\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - esl-shuffle
                      - seqfile
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: esl-shuffle
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: msafile
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -G
                        description: ''
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -A
                        description: ''
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles\
                        \ individual sequences)\nUsage: esl-shuffle -A [options] <msafile>\
                        \  (shuffles msa columnwise)\nUsage: esl-shuffle -G [options]\
                        \            (generates random sequences)\n\nTo see more help\
                        \ on available options, do esl-shuffle -h\n\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      description: ': help; show brief info on version and usage'
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "# esl-shuffle :: shuffling or generating random sequences\n\
                      # Easel 0.46 (Nov 2019)\n# Copyright (C) 2019 Howard Hughes\
                      \ Medical Institute.\n# Freely distributed under the BSD open\
                      \ source license.\n# - - - - - - - - - - - - - - - - - - - -\
                      \ - - - - - - - - - - - - - - - -\nUsage: esl-shuffle    [options]\
                      \ <seqfile>  (shuffles individual sequences)\nUsage: esl-shuffle\
                      \ -A [options] <msafile>  (shuffles msa columnwise)\nUsage:\
                      \ esl-shuffle -G [options]            (generates random sequences)\n\
                      \n where general options are:\n  -h     : help; show brief info\
                      \ on version and usage\n  -o <f> : direct output data to file\
                      \ <f>\n  -N <n> : generate <n> samples (per input seq/msa) \
                      \ [1]  (n>0)\n  -L <n> : truncate outputs to length <n>  [0]\
                      \  (n>=0)\n\n options for shuffling input sequences (default\
                      \ mode):\n  -m     : shuffle preserving monoresidue composition\
                      \  [default]\n  -d     : shuffle preserving mono- and di-residue\
                      \ composition\n  -k <n> : shuffle nonoverlapping <n>-mers  (n>0)\n\
                      \  -0     : generate with 0th order Markov properties per input\n\
                      \  -1     : generate with 1st order Markov properties per input\n\
                      \  -r     : reverse each input\n  -w <n> : regionally shuffle\
                      \ inputs in window size <n>  (n>0)\n\n options for shuffling\
                      \ alignments (-A mode):\n  -b : take bootstrapping samples\n\
                      \  -v : shuffle residues in each column independently\n\n options\
                      \ for generating sequences de novo (w/ -G option):\n  --rna\
                      \   : generate RNA sequence  [default]\n  --dna   : generate\
                      \ DNA sequence\n  --amino : generate protein sequence\n\n other\
                      \ infrequently used options:\n  --seed <n>     : set random\
                      \ number generator's seed to <n>  [0]  (n>=0)\n  --informat\
                      \ <s> : specify that input file is in format <s>\n"
                    generated_using: &id006
                    - -h
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles\
                    \ individual sequences)\nUsage: esl-shuffle -A [options] <msafile>\
                    \  (shuffles msa columnwise)\nUsage: esl-shuffle -G [options]\
                    \            (generates random sequences)\n\nTo see more help\
                    \ on available options, do esl-shuffle -h\n\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: esl-shuffle
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: msafile
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -G
                    description: ''
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -A
                    description: ''
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles\
                    \ individual sequences)\nUsage: esl-shuffle -A [options] <msafile>\
                    \  (shuffles msa columnwise)\nUsage: esl-shuffle -G [options]\
                    \            (generates random sequences)\n\nTo see more help\
                    \ on available options, do esl-shuffle -h\n\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "# esl-shuffle :: shuffling or generating random sequences\n\
                  # Easel 0.46 (Nov 2019)\n# Copyright (C) 2019 Howard Hughes Medical\
                  \ Institute.\n# Freely distributed under the BSD open source license.\n\
                  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\
                  \ - - - - -\nUsage: esl-shuffle    [options] <seqfile>  (shuffles\
                  \ individual sequences)\nUsage: esl-shuffle -A [options] <msafile>\
                  \  (shuffles msa columnwise)\nUsage: esl-shuffle -G [options]  \
                  \          (generates random sequences)\n\n where general options\
                  \ are:\n  -h     : help; show brief info on version and usage\n\
                  \  -o <f> : direct output data to file <f>\n  -N <n> : generate\
                  \ <n> samples (per input seq/msa)  [1]  (n>0)\n  -L <n> : truncate\
                  \ outputs to length <n>  [0]  (n>=0)\n\n options for shuffling input\
                  \ sequences (default mode):\n  -m     : shuffle preserving monoresidue\
                  \ composition  [default]\n  -d     : shuffle preserving mono- and\
                  \ di-residue composition\n  -k <n> : shuffle nonoverlapping <n>-mers\
                  \  (n>0)\n  -0     : generate with 0th order Markov properties per\
                  \ input\n  -1     : generate with 1st order Markov properties per\
                  \ input\n  -r     : reverse each input\n  -w <n> : regionally shuffle\
                  \ inputs in window size <n>  (n>0)\n\n options for shuffling alignments\
                  \ (-A mode):\n  -b : take bootstrapping samples\n  -v : shuffle\
                  \ residues in each column independently\n\n options for generating\
                  \ sequences de novo (w/ -G option):\n  --rna   : generate RNA sequence\
                  \  [default]\n  --dna   : generate DNA sequence\n  --amino : generate\
                  \ protein sequence\n\n other infrequently used options:\n  --seed\
                  \ <n>     : set random number generator's seed to <n>  [0]  (n>=0)\n\
                  \  --informat <s> : specify that input file is in format <s>\n"
                generated_using: *id006
                docker_image:
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual\
                \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles\
                \ msa columnwise)\nUsage: esl-shuffle -G [options]            (generates\
                \ random sequences)\n\nTo see more help on available options, do esl-shuffle\
                \ -h\n\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: esl-shuffle
                description: ''
              - !Positional
                optional: false
                position: 1
                name: msafile
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -G
                description: ''
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -A
                description: ''
                args: !EmptyFlagArg {}
              parent: *id007
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual\
                \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles\
                \ msa columnwise)\nUsage: esl-shuffle -G [options]            (generates\
                \ random sequences)\n\nTo see more help on available options, do esl-shuffle\
                \ -h\n\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "# esl-shuffle :: shuffling or generating random sequences\n\
              # Easel 0.46 (Nov 2019)\n# Copyright (C) 2019 Howard Hughes Medical\
              \ Institute.\n# Freely distributed under the BSD open source license.\n\
              # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\
              \ - - -\nUsage: esl-shuffle    [options] <seqfile>  (shuffles individual\
              \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles msa\
              \ columnwise)\nUsage: esl-shuffle -G [options]            (generates\
              \ random sequences)\n\n where general options are:\n  -h     : help;\
              \ show brief info on version and usage\n  -o <f> : direct output data\
              \ to file <f>\n  -N <n> : generate <n> samples (per input seq/msa) \
              \ [1]  (n>0)\n  -L <n> : truncate outputs to length <n>  [0]  (n>=0)\n\
              \n options for shuffling input sequences (default mode):\n  -m     :\
              \ shuffle preserving monoresidue composition  [default]\n  -d     :\
              \ shuffle preserving mono- and di-residue composition\n  -k <n> : shuffle\
              \ nonoverlapping <n>-mers  (n>0)\n  -0     : generate with 0th order\
              \ Markov properties per input\n  -1     : generate with 1st order Markov\
              \ properties per input\n  -r     : reverse each input\n  -w <n> : regionally\
              \ shuffle inputs in window size <n>  (n>0)\n\n options for shuffling\
              \ alignments (-A mode):\n  -b : take bootstrapping samples\n  -v : shuffle\
              \ residues in each column independently\n\n options for generating sequences\
              \ de novo (w/ -G option):\n  --rna   : generate RNA sequence  [default]\n\
              \  --dna   : generate DNA sequence\n  --amino : generate protein sequence\n\
              \n other infrequently used options:\n  --seed <n>     : set random number\
              \ generator's seed to <n>  [0]  (n>=0)\n  --informat <s> : specify that\
              \ input file is in format <s>\n"
            generated_using: *id006
            docker_image:
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual\
            \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles msa\
            \ columnwise)\nUsage: esl-shuffle -G [options]            (generates random\
            \ sequences)\n\nTo see more help on available options, do esl-shuffle\
            \ -h\n\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: esl-shuffle
            description: ''
          - !Positional
            optional: false
            position: 1
            name: msafile
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -G
            description: ''
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -A
            description: ''
            args: !EmptyFlagArg {}
          parent: *id008
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual\
            \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles msa\
            \ columnwise)\nUsage: esl-shuffle -G [options]            (generates random\
            \ sequences)\n\nTo see more help on available options, do esl-shuffle\
            \ -h\n\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "# esl-shuffle :: shuffling or generating random sequences\n# Easel\
          \ 0.46 (Nov 2019)\n# Copyright (C) 2019 Howard Hughes Medical Institute.\n\
          # Freely distributed under the BSD open source license.\n# - - - - - - -\
          \ - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nUsage: esl-shuffle\
          \    [options] <seqfile>  (shuffles individual sequences)\nUsage: esl-shuffle\
          \ -A [options] <msafile>  (shuffles msa columnwise)\nUsage: esl-shuffle\
          \ -G [options]            (generates random sequences)\n\n where general\
          \ options are:\n  -h     : help; show brief info on version and usage\n\
          \  -o <f> : direct output data to file <f>\n  -N <n> : generate <n> samples\
          \ (per input seq/msa)  [1]  (n>0)\n  -L <n> : truncate outputs to length\
          \ <n>  [0]  (n>=0)\n\n options for shuffling input sequences (default mode):\n\
          \  -m     : shuffle preserving monoresidue composition  [default]\n  -d\
          \     : shuffle preserving mono- and di-residue composition\n  -k <n> :\
          \ shuffle nonoverlapping <n>-mers  (n>0)\n  -0     : generate with 0th order\
          \ Markov properties per input\n  -1     : generate with 1st order Markov\
          \ properties per input\n  -r     : reverse each input\n  -w <n> : regionally\
          \ shuffle inputs in window size <n>  (n>0)\n\n options for shuffling alignments\
          \ (-A mode):\n  -b : take bootstrapping samples\n  -v : shuffle residues\
          \ in each column independently\n\n options for generating sequences de novo\
          \ (w/ -G option):\n  --rna   : generate RNA sequence  [default]\n  --dna\
          \   : generate DNA sequence\n  --amino : generate protein sequence\n\n other\
          \ infrequently used options:\n  --seed <n>     : set random number generator's\
          \ seed to <n>  [0]  (n>=0)\n  --informat <s> : specify that input file is\
          \ in format <s>\n"
        generated_using: *id006
        docker_image:
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual\
        \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles msa columnwise)\n\
        Usage: esl-shuffle -G [options]            (generates random sequences)\n\n\
        To see more help on available options, do esl-shuffle -h\n\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: esl-shuffle
        description: ''
      - !Positional
        optional: false
        position: 1
        name: msafile
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -G
        description: ''
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -A
        description: ''
        args: !EmptyFlagArg {}
      parent: *id009
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual\
        \ sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles msa columnwise)\n\
        Usage: esl-shuffle -G [options]            (generates random sequences)\n\n\
        To see more help on available options, do esl-shuffle -h\n\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "# esl-shuffle :: shuffling or generating random sequences\n# Easel\
      \ 0.46 (Nov 2019)\n# Copyright (C) 2019 Howard Hughes Medical Institute.\n#\
      \ Freely distributed under the BSD open source license.\n# - - - - - - - - -\
      \ - - - - - - - - - - - - - - - - - - - - - - - - - - -\nUsage: esl-shuffle\
      \    [options] <seqfile>  (shuffles individual sequences)\nUsage: esl-shuffle\
      \ -A [options] <msafile>  (shuffles msa columnwise)\nUsage: esl-shuffle -G [options]\
      \            (generates random sequences)\n\n where general options are:\n \
      \ -h     : help; show brief info on version and usage\n  -o <f> : direct output\
      \ data to file <f>\n  -N <n> : generate <n> samples (per input seq/msa)  [1]\
      \  (n>0)\n  -L <n> : truncate outputs to length <n>  [0]  (n>=0)\n\n options\
      \ for shuffling input sequences (default mode):\n  -m     : shuffle preserving\
      \ monoresidue composition  [default]\n  -d     : shuffle preserving mono- and\
      \ di-residue composition\n  -k <n> : shuffle nonoverlapping <n>-mers  (n>0)\n\
      \  -0     : generate with 0th order Markov properties per input\n  -1     :\
      \ generate with 1st order Markov properties per input\n  -r     : reverse each\
      \ input\n  -w <n> : regionally shuffle inputs in window size <n>  (n>0)\n\n\
      \ options for shuffling alignments (-A mode):\n  -b : take bootstrapping samples\n\
      \  -v : shuffle residues in each column independently\n\n options for generating\
      \ sequences de novo (w/ -G option):\n  --rna   : generate RNA sequence  [default]\n\
      \  --dna   : generate DNA sequence\n  --amino : generate protein sequence\n\n\
      \ other infrequently used options:\n  --seed <n>     : set random number generator's\
      \ seed to <n>  [0]  (n>=0)\n  --informat <s> : specify that input file is in\
      \ format <s>\n"
    generated_using: *id006
    docker_image:
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual sequences)\n\
    Usage: esl-shuffle -A [options] <msafile>  (shuffles msa columnwise)\nUsage: esl-shuffle\
    \ -G [options]            (generates random sequences)\n\nTo see more help on\
    \ available options, do esl-shuffle -h\n\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: esl-shuffle
    description: ''
  - !Positional
    optional: false
    position: 1
    name: msafile
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -G
    description: ''
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -A
    description: ''
    args: !EmptyFlagArg {}
  parent: *id010
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: esl-shuffle    [options] <seqfile>  (shuffles individual sequences)\n\
    Usage: esl-shuffle -A [options] <msafile>  (shuffles msa columnwise)\nUsage: esl-shuffle\
    \ -G [options]            (generates random sequences)\n\nTo see more help on\
    \ available options, do esl-shuffle -h\n\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "# esl-shuffle :: shuffling or generating random sequences\n# Easel 0.46\
  \ (Nov 2019)\n# Copyright (C) 2019 Howard Hughes Medical Institute.\n# Freely distributed\
  \ under the BSD open source license.\n# - - - - - - - - - - - - - - - - - - - -\
  \ - - - - - - - - - - - - - - - -\nUsage: esl-shuffle    [options] <seqfile>  (shuffles\
  \ individual sequences)\nUsage: esl-shuffle -A [options] <msafile>  (shuffles msa\
  \ columnwise)\nUsage: esl-shuffle -G [options]            (generates random sequences)\n\
  \n where general options are:\n  -h     : help; show brief info on version and usage\n\
  \  -o <f> : direct output data to file <f>\n  -N <n> : generate <n> samples (per\
  \ input seq/msa)  [1]  (n>0)\n  -L <n> : truncate outputs to length <n>  [0]  (n>=0)\n\
  \n options for shuffling input sequences (default mode):\n  -m     : shuffle preserving\
  \ monoresidue composition  [default]\n  -d     : shuffle preserving mono- and di-residue\
  \ composition\n  -k <n> : shuffle nonoverlapping <n>-mers  (n>0)\n  -0     : generate\
  \ with 0th order Markov properties per input\n  -1     : generate with 1st order\
  \ Markov properties per input\n  -r     : reverse each input\n  -w <n> : regionally\
  \ shuffle inputs in window size <n>  (n>0)\n\n options for shuffling alignments\
  \ (-A mode):\n  -b : take bootstrapping samples\n  -v : shuffle residues in each\
  \ column independently\n\n options for generating sequences de novo (w/ -G option):\n\
  \  --rna   : generate RNA sequence  [default]\n  --dna   : generate DNA sequence\n\
  \  --amino : generate protein sequence\n\n other infrequently used options:\n  --seed\
  \ <n>     : set random number generator's seed to <n>  [0]  (n>=0)\n  --informat\
  \ <s> : specify that input file is in format <s>\n"
generated_using: *id006
docker_image:
