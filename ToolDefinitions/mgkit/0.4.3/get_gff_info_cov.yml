!Command
command:
- get-gff-info
- cov
positional:
- !Positional
  optional: true
  position: 0
  name: GFF_FILE
  description: ''
- !Positional
  optional: true
  position: 1
  name: OUTPUT_FILE
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  - -f
  - --reference
  description: Reference FASTA file for the GFF  [required]
  args: !SimpleFlagArg
    name: FILENAME
- !Flag
  optional: true
  synonyms:
  - -j
  - --json-out
  description: The output will be a JSON dictionary
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --strand-specific
  description: If the coverage must be calculated on each strand
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --rename
  description: "Emulate BLAST output (use only the header part\nbefore the first space)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --progress
  description: Shows Progress Bar
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: get-gff-info cov [OPTIONS] [GFF_FILE] [OUTPUT_FILE]\n\n  Report\
  \ on how much a sequence length is covered by annotations in [gff-\n  file]\n\n\
  Options:\n  -v, --verbose\n  -f, --reference FILENAME  Reference FASTA file for\
  \ the GFF  [required]\n  -j, --json-out            The output will be a JSON dictionary\n\
  \  -s, --strand-specific     If the coverage must be calculated on each strand\n\
  \  -r, --rename              Emulate BLAST output (use only the header part\n  \
  \                          before the first space)\n\n  --progress             \
  \   Shows Progress Bar\n  --help                    Show this message and exit.\n"
generated_using:
- --help
docker_image:
