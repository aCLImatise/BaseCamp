!Command
command: &id001
- spacedToTab
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - spacedToTab
  - in.txt
  positional: []
  named:
  - !Flag
    description: not a valid option
    synonyms:
    - -h
    args: !SimpleFlagArg
      name: is
    optional: true
  parent: !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        description: not a valid option
        synonyms:
        - -h
        args: !SimpleFlagArg
          name: is
        optional: true
      parent: !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            description: not a valid option
            synonyms:
            - -h
            args: !SimpleFlagArg
              name: is
            optional: true
          parent: !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                description: not a valid option
                synonyms:
                - -h
                args: !SimpleFlagArg
                  name: is
                optional: true
              parent: &id003 !Command
                command: *id001
                positional: []
                named:
                - !Flag
                  description: ",Y,Z - Force it to have columns of the given widths.\n\
                    The final char in each column should be space or newline\n"
                  synonyms:
                  - -sizes
                  args: !SimpleFlagArg
                    name: X
                  optional: true
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    description: not a valid option
                    synonyms:
                    - -h
                    args: !SimpleFlagArg
                      name: is
                    optional: true
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "-h is not a valid option\n"
                  generated_using: &id004
                  - -h
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "spacedToTab - Convert fixed width space separated fields\
                  \ to tab separated\nNote this requires two passes, so it can't be\
                  \ done on a pipe\nusage:\n   spacedToTab in.txt out.tab\noptions:\n\
                  \   -sizes=X,Y,Z - Force it to have columns of the given widths.\n\
                  \                 The final char in each column should be space\
                  \ or newline\n\n"
                generated_using: &id005 []
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "-h is not a valid option\n"
              generated_using: *id004
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "spacedToTab - Convert fixed width space separated fields to\
              \ tab separated\nNote this requires two passes, so it can't be done\
              \ on a pipe\nusage:\n   spacedToTab in.txt out.tab\noptions:\n   -sizes=X,Y,Z\
              \ - Force it to have columns of the given widths.\n                \
              \ The final char in each column should be space or newline\n\n"
            generated_using: *id005
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "-h is not a valid option\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "spacedToTab - Convert fixed width space separated fields to tab\
          \ separated\nNote this requires two passes, so it can't be done on a pipe\n\
          usage:\n   spacedToTab in.txt out.tab\noptions:\n   -sizes=X,Y,Z - Force\
          \ it to have columns of the given widths.\n                 The final char\
          \ in each column should be space or newline\n\n"
        generated_using: *id005
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "-h is not a valid option\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "spacedToTab - Convert fixed width space separated fields to tab separated\n\
      Note this requires two passes, so it can't be done on a pipe\nusage:\n   spacedToTab\
      \ in.txt out.tab\noptions:\n   -sizes=X,Y,Z - Force it to have columns of the\
      \ given widths.\n                 The final char in each column should be space\
      \ or newline\n\n"
    generated_using: *id005
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "-h is not a valid option\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "spacedToTab - Convert fixed width space separated fields to tab separated\n\
  Note this requires two passes, so it can't be done on a pipe\nusage:\n   spacedToTab\
  \ in.txt out.tab\noptions:\n   -sizes=X,Y,Z - Force it to have columns of the given\
  \ widths.\n                 The final char in each column should be space or newline\n\
  \n"
generated_using: *id005
