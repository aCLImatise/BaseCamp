&id001 !Command
command:
- pyrpipe_diagnostic
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - pyrpipe_diagnostic
  - shell
  positional:
  - !Positional
    optional: false
    position: 0
    name: logfile
    description: The log file generated by pyrpipe
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: 'out file default: same as input logfile'
    args: !SimpleFlagArg
      name: O
  - !Flag
    optional: true
    synonyms:
    - -c
    description: 'Dump command options [(a)ll,fa(i)l,(p)ass] default: a'
    args: !SimpleFlagArg
      name: C
  - !Flag
    optional: true
    synonyms:
    - -v
    description: verbose
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: "Filter by programs. Provide a comma-separated list e.g.,\nprefetch,STAR,bowtie2\
      \ default None\n"
    args: !SimpleFlagArg
      name: F
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyrpipe_diagnostic report [<args>] <logfile>\n              \
    \      \n                    \n\npyrpipe diagnostic utility Generate shell script.\n\
    \npositional arguments:\n  logfile     The log file generated by pyrpipe\n\noptional\
    \ arguments:\n  -h, --help  show this help message and exit\n  -o O        out\
    \ file default: same as input logfile\n  -c C        Dump command options [(a)ll,fa(i)l,(p)ass]\
    \ default: a\n  -v          verbose\n  -f F        Filter by programs. Provide\
    \ a comma-separated list e.g.,\n              prefetch,STAR,bowtie2 default None\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/pyrpipe:0.0.5--py_0
- !Command
  command:
  - pyrpipe_diagnostic
  - report
  positional:
  - !Positional
    optional: false
    position: 0
    name: logfile
    description: The log file generated by pyrpipe
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: 'out file default: same as input logfile'
    args: !SimpleFlagArg
      name: O
  - !Flag
    optional: true
    synonyms:
    - -s
    - --summary
    description: Print quick summary and exit
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -e
    description: 'report output type: [md,pdf,html] default: pdf'
    args: !SimpleFlagArg
      name: E
  - !Flag
    optional: true
    synonyms:
    - -c
    description: 'Report options [(f)ull,fa(i)l,(p)ass] default: f'
    args: !SimpleFlagArg
      name: C
  - !Flag
    optional: true
    synonyms:
    - -v
    description: verbose
    args: !EmptyFlagArg {}
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyrpipe_diagnostic report [<args>] <logfile>\n              \
    \      \n                    \n\npyrpipe diagnostic utility Generate analysis\
    \ report.\n\npositional arguments:\n  logfile        The log file generated by\
    \ pyrpipe\n\noptional arguments:\n  -h, --help     show this help message and\
    \ exit\n  -o O           out file default: same as input logfile\n  -s, --summary\
    \  Print quick summary and exit\n  -e E           report output type: [md,pdf,html]\
    \ default: pdf\n  -c C           Report options [(f)ull,fa(i)l,(p)ass] default:\
    \ f\n  -v             verbose\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/pyrpipe:0.0.5--py_0
- !Command
  command:
  - pyrpipe_diagnostic
  - command
  positional:
  - !Positional
    optional: false
    position: 0
    name: report
    description: Generate analysis report
  - !Positional
    optional: false
    position: 1
    name: shell
    description: Generate all commands to shell (bash) script
  - !Positional
    optional: false
    position: 0
    name: command
    description: Subcommand to run report, shell,benchmark,multiqc,test
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Unrecognized command\nusage: pyrpipe_diagnostic <command> [<args>] <logfile>\n\
    \                        The commands are:\n                        report   \
    \  Generate analysis report\n                        shell      Generate all commands\
    \ to shell (bash) script\n                        benchmark Generate bemchmarks\n\
    \                        multiqc Generate HTML report using multiqc\n        \
    \                test Test if NCBI-SRA-Tools is working with pyrpipe\n       \
    \                 build-tools Install the tools required by pyrpipe via  bioconda.\
    \ pyrpipe must be installed under conda environment.\n                       \
    \ \n                        \n\npyrpipe diagnostic utility\n\npositional arguments:\n\
    \  command     Subcommand to run report, shell,benchmark,multiqc,test\n\noptional\
    \ arguments:\n  -h, --help  show this help message and exit\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/pyrpipe:0.0.5--py_0
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: pyrpipe_diagnostic <command> [<args>] <logfile>\n             \
  \           The commands are:\n                        report     Generate analysis\
  \ report\n                        shell      Generate all commands to shell (bash)\
  \ script\n                        benchmark Generate bemchmarks\n              \
  \          multiqc Generate HTML report using multiqc\n                        test\
  \ Test if NCBI-SRA-Tools is working with pyrpipe\n                        build-tools\
  \ Install the tools required by pyrpipe via  bioconda. pyrpipe must be installed\
  \ under conda environment.\n                        \n                        \n\
  \npyrpipe diagnostic utility\n\npositional arguments:\n  command     Subcommand\
  \ to run report, shell,benchmark,multiqc,test\n\noptional arguments:\n  -h, --help\
  \  show this help message and exit\n"
generated_using: *id002
docker_image: quay.io/biocontainers/pyrpipe:0.0.5--py_0
