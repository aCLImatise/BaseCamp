!Command
command:
- RepEnrich_setup.py
positional:
- !Positional
  optional: false
  position: 0
  name: annotation_file
  description: "List annotation file. The annotation file contains the\nrepeat masker\
    \ annotation for the genome of interest\nand may be downloaded at RepeatMasker.org\
    \ Example\n/data/annotation/mm9/mm9.fa.out"
- !Positional
  optional: false
  position: 1
  name: genomefasta
  description: "File name and path for genome of interest in fasta\nformat. Example\
    \ /data/annotation/mm9/mm9.fa"
- !Positional
  optional: false
  position: 2
  name: setup_folder
  description: "List folder to contain bamfiles for repeats and repeat\nelement psuedogenomes.\
    \ Example\n/data/annotation/mm9/setup"
named:
- !Flag
  optional: true
  synonyms:
  - --nfragmentsfile1
  description: "Output location of a description file that saves the\nnumber of fragments\
    \ processed per repname. Default\n./repnames_nfragments.txt"
  args: !SimpleFlagArg
    name: nfragmentsfile1
- !Flag
  optional: true
  synonyms:
  - --gaplength
  description: "Length of the spacer used to build repeat\npsuedogeneomes. Default\
    \ 200"
  args: !SimpleFlagArg
    name: gaplength
- !Flag
  optional: true
  synonyms:
  - --flankinglength
  description: "Length of the flanking region adjacent to the repeat\nelement that\
    \ is used to build repeat psuedogeneomes.\nThe flanking length should be set according\
    \ to the\nlength of your reads. Default 25"
  args: !SimpleFlagArg
    name: flankinglength
- !Flag
  optional: true
  synonyms:
  - --is_bed
  description: "Is the annotation file a bed file. This is also a\ncompatible format.\
    \ The file needs to be a tab\nseperated bed with optional fields. Ex. format chr\n\
    start end Name_element class family. The class and\nfamily should identical to\
    \ name_element if not\napplicable. Default FALSE change to TRUE\n"
  args: !SimpleFlagArg
    name: is_bed
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: getargs_genome_maker.py [-h] [--version]\n                    \
  \           [--nfragmentsfile1 nfragmentsfile1]\n                              \
  \ [--gaplength gaplength]\n                               [--flankinglength flankinglength]\n\
  \                               [--is_bed is_bed]\n                            \
  \   annotation_file genomefasta setup_folder\n\nPart I: Prepartion of repetive element\
  \ psuedogenomes and repetive element\nbamfiles. This script prepares the annotation\
  \ used by downstream applications\nto analyze for repetitive element enrichment.\
  \ For this script to run properly\nbowtie must be loaded. The repeat element psuedogenomes\
  \ are prepared in order\nto analyze reads that map to multiple locations of the\
  \ genome. The repeat\nelement bamfiles are prepared in order to use a region sorter\
  \ to analyze reads\nthat map to a single location of the genome.You will 1) annotation_file:\
  \ The\nrepetitive element annotation file downloaded from RepeatMasker.org database\n\
  for your organism of interest. 2) genomefasta: Your genome of interest in\nfasta\
  \ format, 3)setup_folder: a folder to contain repeat element setup files\ncommand-line\
  \ usage EXAMPLE: python master_setup.py\n/users/nneretti/data/annotation/mm9/mm9_repeatmasker.txt\n\
  /users/nneretti/data/annotation/mm9/mm9.fa\n/users/nneretti/data/annotation/mm9/setup_folder\n\
  \npositional arguments:\n  annotation_file       List annotation file. The annotation\
  \ file contains the\n                        repeat masker annotation for the genome\
  \ of interest\n                        and may be downloaded at RepeatMasker.org\
  \ Example\n                        /data/annotation/mm9/mm9.fa.out\n  genomefasta\
  \           File name and path for genome of interest in fasta\n               \
  \         format. Example /data/annotation/mm9/mm9.fa\n  setup_folder          List\
  \ folder to contain bamfiles for repeats and repeat\n                        element\
  \ psuedogenomes. Example\n                        /data/annotation/mm9/setup\n\n\
  optional arguments:\n  -h, --help            show this help message and exit\n \
  \ --version             show program's version number and exit\n  --nfragmentsfile1\
  \ nfragmentsfile1\n                        Output location of a description file\
  \ that saves the\n                        number of fragments processed per repname.\
  \ Default\n                        ./repnames_nfragments.txt\n  --gaplength gaplength\n\
  \                        Length of the spacer used to build repeat\n           \
  \             psuedogeneomes. Default 200\n  --flankinglength flankinglength\n \
  \                       Length of the flanking region adjacent to the repeat\n \
  \                       element that is used to build repeat psuedogeneomes.\n \
  \                       The flanking length should be set according to the\n   \
  \                     length of your reads. Default 25\n  --is_bed is_bed      \
  \ Is the annotation file a bed file. This is also a\n                        compatible\
  \ format. The file needs to be a tab\n                        seperated bed with\
  \ optional fields. Ex. format chr\n                        start end Name_element\
  \ class family. The class and\n                        family should identical to\
  \ name_element if not\n                        applicable. Default FALSE change\
  \ to TRUE\n"
generated_using:
- --help
docker_image:
