!Command
command: &id001
- pyfastx
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - pyfastx
  - fq2fa
  positional:
  - !Positional
    optional: false
    position: 0
    name: fastx
    description: fastq file, gzip support
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    - --out-file
    description: "output file, default: output to stdout\n"
    args: !SimpleFlagArg
      name: str
  parent: &id020 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: fastx
        description: fastq file, gzip support
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        - --out-file
        description: "output file, default: output to stdout\n"
        args: !SimpleFlagArg
          name: str
      parent: &id018 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: fastx
            description: fastq file, gzip support
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            - --out-file
            description: "output file, default: output to stdout\n"
            args: !SimpleFlagArg
              name: str
          parent: &id016 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: fastx
                description: fastq file, gzip support
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                - --out-file
                description: "output file, default: output to stdout\n"
                args: !SimpleFlagArg
                  name: str
              parent: &id014 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: fastx
                    description: fastq file, gzip support
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --out-file
                    description: "output file, default: output to stdout\n"
                    args: !SimpleFlagArg
                      name: str
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: fastx
                        description: fastq file, gzip support
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --out-file
                        description: "output file, default: output to stdout\n"
                        args: !SimpleFlagArg
                          name: str
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx fq2fa [-h] [-o str] fastx\n\npositional\
                        \ arguments:\n  fastx                 fastq file, gzip support\n\
                        \noptional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  -o str, --out-file str\n           \
                        \             output file, default: output to stdout\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id006
                      - pyfastx
                      - split
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: fastx
                        description: fasta or fastq file, gzip support
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        description: split a fasta/q file into N new files with even
                          size
                        args: !SimpleFlagArg
                          name: int
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: "split a fasta/q file into multiple files containing\n\
                          the same sequence counts"
                        args: !SimpleFlagArg
                          name: int
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --out-dir
                        description: "output directory, default is current folder\n"
                        args: !SimpleFlagArg
                          name: str
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx split [-h] (-n int | -c int) [-o\
                        \ str] fastx\n\npositional arguments:\n  fastx           \
                        \      fasta or fastq file, gzip support\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -n int                split a fasta/q file into N new files\
                        \ with even size\n  -c int                split a fasta/q\
                        \ file into multiple files containing\n                  \
                        \      the same sequence counts\n  -o str, --out-dir str\n\
                        \                        output directory, default is current\
                        \ folder\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - pyfastx
                      - sample
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        description: number of sequences to be sampled
                        args: !SimpleFlagArg
                          name: int
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        description: proportion of sequences to be sampled, 0~1
                        args: !SimpleFlagArg
                          name: float
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --seed
                        description: random seed, default is the current system time
                        args: !SimpleFlagArg
                          name: int
                      - !Flag
                        optional: true
                        synonyms:
                        - --sequential-read
                        description: "start sequential reading, particularly suitable\
                          \ for\nsampling large numbers of sequences"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --out-file
                        description: "output file, default: output to stdout\n"
                        args: !SimpleFlagArg
                          name: str
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx sample [-h] (-n int | -p float) [-s\
                        \ int] [--sequential-read]\n                      [-o str]\n\
                        \                      fastx\n\npositional arguments:\n  fastx\
                        \                 fasta or fastq file, gzip support\n\noptional\
                        \ arguments:\n  -h, --help            show this help message\
                        \ and exit\n  -n int                number of sequences to\
                        \ be sampled\n  -p float              proportion of sequences\
                        \ to be sampled, 0~1\n  -s int, --seed int    random seed,\
                        \ default is the current system time\n  --sequential-read\
                        \     start sequential reading, particularly suitable for\n\
                        \                        sampling large numbers of sequences\n\
                        \  -o str, --out-file str\n                        output\
                        \ file, default: output to stdout\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - pyfastx
                      - extract
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: fastx
                        description: fasta or fastq file, gzip support
                      - !Positional
                        optional: false
                        position: 1
                        name: name
                        description: "sequence name or read name, multiple names were\n\
                          separated by space"
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        - --list-file
                        description: "a file containing sequence or read names, one\
                          \ name per\nline"
                        args: !SimpleFlagArg
                          name: str
                      - !Flag
                        optional: true
                        synonyms:
                        - --reverse-complement
                        description: output reverse complement sequence
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-fasta
                        description: "output fasta format when extract reads from\
                          \ fastq,\ndefault output fastq format"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --out-file
                        description: 'output file, default: output to stdout'
                        args: !SimpleFlagArg
                          name: str
                      - !Flag
                        optional: true
                        synonyms:
                        - --sequential-read
                        description: "start sequential reading, particularly suitable\
                          \ for\nextracting large numbers of sequences\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx extract [-h] [-l str] [--reverse-complement]\
                        \ [--out-fasta]\n                       [-o str] [--sequential-read]\n\
                        \                       fastx [name [name ...]]\n\npositional\
                        \ arguments:\n  fastx                 fasta or fastq file,\
                        \ gzip support\n  name                  sequence name or read\
                        \ name, multiple names were\n                        separated\
                        \ by space\n\noptional arguments:\n  -h, --help          \
                        \  show this help message and exit\n  -l str, --list-file\
                        \ str\n                        a file containing sequence\
                        \ or read names, one name per\n                        line\n\
                        \  --reverse-complement  output reverse complement sequence\n\
                        \  --out-fasta           output fasta format when extract\
                        \ reads from fastq,\n                        default output\
                        \ fastq format\n  -o str, --out-file str\n               \
                        \         output file, default: output to stdout\n  --sequential-read\
                        \     start sequential reading, particularly suitable for\n\
                        \                        extracting large numbers of sequences\n"
                      generated_using: *id004
                      docker_image:
                    - &id005 !Command
                      command: &id009
                      - pyfastx
                      - stat
                      positional: []
                      named: []
                      parent: *id003
                      subcommands:
                      - !Command
                        command: &id010
                        - pyfastx
                        - stat
                        - fastx
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: pyfastx
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: COMMAND
                          description: ''
                        named: []
                        parent: *id005
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "usage: pyfastx COMMAND [OPTIONS]\npyfastx: error:\
                          \ unrecognized arguments: --usage\n"
                        generated_using: &id011
                        - --usage
                        docker_image:
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx stat [-h] fastx [fastx ...]\n\npositional\
                        \ arguments:\n  fastx       fasta or fastq file, gzip support\n\
                        \noptional arguments:\n  -h, --help  show this help message\
                        \ and exit\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id012
                      - pyfastx
                      - index
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: fastx
                        description: fasta or fastq file, gzip support
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        - --full
                        description: build full index, base composition will be calculated
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx index [-h] [-f] fastx [fastx ...]\n\
                        \npositional arguments:\n  fastx       fasta or fastq file,\
                        \ gzip support\n\noptional arguments:\n  -h, --help  show\
                        \ this help message and exit\n  -f, --full  build full index,\
                        \ base composition will be calculated\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id013
                      - pyfastx
                      - subseq
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: fastx
                        description: input fasta file, gzip support
                      - !Positional
                        optional: false
                        position: 1
                        name: region
                        description: "format is chr:start-end, start and end position\
                          \ is\n1-based, multiple regions were separated by space"
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -r
                        - --region-file
                        description: "tab-delimited file, one region per line, both\
                          \ start\nand end position are 1-based"
                        args: !SimpleFlagArg
                          name: str
                      - !Flag
                        optional: true
                        synonyms:
                        - -b
                        - --bed-file
                        description: "tab-delimited BED file, 0-based start position\
                          \ and\n1-based end position"
                        args: !SimpleFlagArg
                          name: str
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --out-file
                        description: "output file, default: output to stdout\n"
                        args: !SimpleFlagArg
                          name: str
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pyfastx subseq [-h] [-r str | -b str] [-o\
                        \ str]\n                      fastx [region [region ...]]\n\
                        \npositional arguments:\n  fastx                 input fasta\
                        \ file, gzip support\n  region                format is chr:start-end,\
                        \ start and end position is\n                        1-based,\
                        \ multiple regions were separated by space\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -r str, --region-file str\n                        tab-delimited\
                        \ file, one region per line, both start\n                \
                        \        and end position are 1-based\n  -b str, --bed-file\
                        \ str\n                        tab-delimited BED file, 0-based\
                        \ start position and\n                        1-based end\
                        \ position\n  -o str, --out-file str\n                   \
                        \     output file, default: output to stdout\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag: !Flag
                      optional: true
                      synonyms:
                      - -v
                      - --version
                      description: show program's version number and exit
                      args: !EmptyFlagArg {}
                    help_text: "usage: pyfastx COMMAND [OPTIONS]\n\nA command line\
                      \ tool for FASTA/Q file manipulation\n\noptional arguments:\n\
                      \  -h, --help     show this help message and exit\n  -v, --version\
                      \  show program's version number and exit\n\nCommands:\n  \n\
                      \    index        build index for fasta/q file\n    stat   \
                      \      show detailed statistics information of fasta/q file\n\
                      \    split        split fasta/q file into multiple files\n \
                      \   fq2fa        convert fastq file to fasta file\n    subseq\
                      \       get subsequences from fasta file by region\n    sample\
                      \       randomly sample sequences from fasta or fastq file\n\
                      \    extract      extract full sequences or reads from fasta/q\
                      \ file\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx fq2fa [-h] [-o str] fastx\n\npositional\
                    \ arguments:\n  fastx                 fastq file, gzip support\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  -o str, --out-file str\n               \
                    \         output file, default: output to stdout\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: fastx
                    description: fasta or fastq file, gzip support
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    description: split a fasta/q file into N new files with even size
                    args: !SimpleFlagArg
                      name: int
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: "split a fasta/q file into multiple files containing\n\
                      the same sequence counts"
                    args: !SimpleFlagArg
                      name: int
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --out-dir
                    description: "output directory, default is current folder\n"
                    args: !SimpleFlagArg
                      name: str
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx split [-h] (-n int | -c int) [-o str]\
                    \ fastx\n\npositional arguments:\n  fastx                 fasta\
                    \ or fastq file, gzip support\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  -n int       \
                    \         split a fasta/q file into N new files with even size\n\
                    \  -c int                split a fasta/q file into multiple files\
                    \ containing\n                        the same sequence counts\n\
                    \  -o str, --out-dir str\n                        output directory,\
                    \ default is current folder\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    description: number of sequences to be sampled
                    args: !SimpleFlagArg
                      name: int
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    description: proportion of sequences to be sampled, 0~1
                    args: !SimpleFlagArg
                      name: float
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --seed
                    description: random seed, default is the current system time
                    args: !SimpleFlagArg
                      name: int
                  - !Flag
                    optional: true
                    synonyms:
                    - --sequential-read
                    description: "start sequential reading, particularly suitable\
                      \ for\nsampling large numbers of sequences"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --out-file
                    description: "output file, default: output to stdout\n"
                    args: !SimpleFlagArg
                      name: str
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx sample [-h] (-n int | -p float) [-s int]\
                    \ [--sequential-read]\n                      [-o str]\n      \
                    \                fastx\n\npositional arguments:\n  fastx     \
                    \            fasta or fastq file, gzip support\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -n\
                    \ int                number of sequences to be sampled\n  -p float\
                    \              proportion of sequences to be sampled, 0~1\n  -s\
                    \ int, --seed int    random seed, default is the current system\
                    \ time\n  --sequential-read     start sequential reading, particularly\
                    \ suitable for\n                        sampling large numbers\
                    \ of sequences\n  -o str, --out-file str\n                   \
                    \     output file, default: output to stdout\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: fastx
                    description: fasta or fastq file, gzip support
                  - !Positional
                    optional: false
                    position: 1
                    name: name
                    description: "sequence name or read name, multiple names were\n\
                      separated by space"
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    - --list-file
                    description: "a file containing sequence or read names, one name\
                      \ per\nline"
                    args: !SimpleFlagArg
                      name: str
                  - !Flag
                    optional: true
                    synonyms:
                    - --reverse-complement
                    description: output reverse complement sequence
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-fasta
                    description: "output fasta format when extract reads from fastq,\n\
                      default output fastq format"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --out-file
                    description: 'output file, default: output to stdout'
                    args: !SimpleFlagArg
                      name: str
                  - !Flag
                    optional: true
                    synonyms:
                    - --sequential-read
                    description: "start sequential reading, particularly suitable\
                      \ for\nextracting large numbers of sequences\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx extract [-h] [-l str] [--reverse-complement]\
                    \ [--out-fasta]\n                       [-o str] [--sequential-read]\n\
                    \                       fastx [name [name ...]]\n\npositional\
                    \ arguments:\n  fastx                 fasta or fastq file, gzip\
                    \ support\n  name                  sequence name or read name,\
                    \ multiple names were\n                        separated by space\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  -l str, --list-file str\n              \
                    \          a file containing sequence or read names, one name\
                    \ per\n                        line\n  --reverse-complement  output\
                    \ reverse complement sequence\n  --out-fasta           output\
                    \ fasta format when extract reads from fastq,\n              \
                    \          default output fastq format\n  -o str, --out-file str\n\
                    \                        output file, default: output to stdout\n\
                    \  --sequential-read     start sequential reading, particularly\
                    \ suitable for\n                        extracting large numbers\
                    \ of sequences\n"
                  generated_using: *id004
                  docker_image:
                - &id015 !Command
                  command: *id009
                  positional: []
                  named: []
                  parent: *id003
                  subcommands:
                  - !Command
                    command: *id010
                    positional:
                    - !Positional
                      optional: false
                      position: 0
                      name: pyfastx
                      description: ''
                    - !Positional
                      optional: false
                      position: 1
                      name: COMMAND
                      description: ''
                    named: []
                    parent: *id005
                    subcommands: []
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "usage: pyfastx COMMAND [OPTIONS]\npyfastx: error:\
                      \ unrecognized arguments: --usage\n"
                    generated_using: *id011
                    docker_image:
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx stat [-h] fastx [fastx ...]\n\npositional\
                    \ arguments:\n  fastx       fasta or fastq file, gzip support\n\
                    \noptional arguments:\n  -h, --help  show this help message and\
                    \ exit\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id012
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: fastx
                    description: fasta or fastq file, gzip support
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    - --full
                    description: build full index, base composition will be calculated
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx index [-h] [-f] fastx [fastx ...]\n\n\
                    positional arguments:\n  fastx       fasta or fastq file, gzip\
                    \ support\n\noptional arguments:\n  -h, --help  show this help\
                    \ message and exit\n  -f, --full  build full index, base composition\
                    \ will be calculated\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id013
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: fastx
                    description: input fasta file, gzip support
                  - !Positional
                    optional: false
                    position: 1
                    name: region
                    description: "format is chr:start-end, start and end position\
                      \ is\n1-based, multiple regions were separated by space"
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -r
                    - --region-file
                    description: "tab-delimited file, one region per line, both start\n\
                      and end position are 1-based"
                    args: !SimpleFlagArg
                      name: str
                  - !Flag
                    optional: true
                    synonyms:
                    - -b
                    - --bed-file
                    description: "tab-delimited BED file, 0-based start position and\n\
                      1-based end position"
                    args: !SimpleFlagArg
                      name: str
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --out-file
                    description: "output file, default: output to stdout\n"
                    args: !SimpleFlagArg
                      name: str
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pyfastx subseq [-h] [-r str | -b str] [-o str]\n\
                    \                      fastx [region [region ...]]\n\npositional\
                    \ arguments:\n  fastx                 input fasta file, gzip support\n\
                    \  region                format is chr:start-end, start and end\
                    \ position is\n                        1-based, multiple regions\
                    \ were separated by space\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  -r str, --region-file\
                    \ str\n                        tab-delimited file, one region\
                    \ per line, both start\n                        and end position\
                    \ are 1-based\n  -b str, --bed-file str\n                    \
                    \    tab-delimited BED file, 0-based start position and\n    \
                    \                    1-based end position\n  -o str, --out-file\
                    \ str\n                        output file, default: output to\
                    \ stdout\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: pyfastx COMMAND [OPTIONS]\n\nA command line tool\
                  \ for FASTA/Q file manipulation\n\noptional arguments:\n  -h, --help\
                  \     show this help message and exit\n  -v, --version  show program's\
                  \ version number and exit\n\nCommands:\n  \n    index        build\
                  \ index for fasta/q file\n    stat         show detailed statistics\
                  \ information of fasta/q file\n    split        split fasta/q file\
                  \ into multiple files\n    fq2fa        convert fastq file to fasta\
                  \ file\n    subseq       get subsequences from fasta file by region\n\
                  \    sample       randomly sample sequences from fasta or fastq\
                  \ file\n    extract      extract full sequences or reads from fasta/q\
                  \ file\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx fq2fa [-h] [-o str] fastx\n\npositional arguments:\n\
                \  fastx                 fastq file, gzip support\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  -o str,\
                \ --out-file str\n                        output file, default: output\
                \ to stdout\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: fastx
                description: fasta or fastq file, gzip support
              named:
              - !Flag
                optional: true
                synonyms:
                - -n
                description: split a fasta/q file into N new files with even size
                args: !SimpleFlagArg
                  name: int
              - !Flag
                optional: true
                synonyms:
                - -c
                description: "split a fasta/q file into multiple files containing\n\
                  the same sequence counts"
                args: !SimpleFlagArg
                  name: int
              - !Flag
                optional: true
                synonyms:
                - -o
                - --out-dir
                description: "output directory, default is current folder\n"
                args: !SimpleFlagArg
                  name: str
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx split [-h] (-n int | -c int) [-o str] fastx\n\
                \npositional arguments:\n  fastx                 fasta or fastq file,\
                \ gzip support\n\noptional arguments:\n  -h, --help            show\
                \ this help message and exit\n  -n int                split a fasta/q\
                \ file into N new files with even size\n  -c int                split\
                \ a fasta/q file into multiple files containing\n                \
                \        the same sequence counts\n  -o str, --out-dir str\n     \
                \                   output directory, default is current folder\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -n
                description: number of sequences to be sampled
                args: !SimpleFlagArg
                  name: int
              - !Flag
                optional: true
                synonyms:
                - -p
                description: proportion of sequences to be sampled, 0~1
                args: !SimpleFlagArg
                  name: float
              - !Flag
                optional: true
                synonyms:
                - -s
                - --seed
                description: random seed, default is the current system time
                args: !SimpleFlagArg
                  name: int
              - !Flag
                optional: true
                synonyms:
                - --sequential-read
                description: "start sequential reading, particularly suitable for\n\
                  sampling large numbers of sequences"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                - --out-file
                description: "output file, default: output to stdout\n"
                args: !SimpleFlagArg
                  name: str
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx sample [-h] (-n int | -p float) [-s int]\
                \ [--sequential-read]\n                      [-o str]\n          \
                \            fastx\n\npositional arguments:\n  fastx             \
                \    fasta or fastq file, gzip support\n\noptional arguments:\n  -h,\
                \ --help            show this help message and exit\n  -n int    \
                \            number of sequences to be sampled\n  -p float       \
                \       proportion of sequences to be sampled, 0~1\n  -s int, --seed\
                \ int    random seed, default is the current system time\n  --sequential-read\
                \     start sequential reading, particularly suitable for\n      \
                \                  sampling large numbers of sequences\n  -o str,\
                \ --out-file str\n                        output file, default: output\
                \ to stdout\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional:
              - !Positional
                optional: false
                position: 0
                name: fastx
                description: fasta or fastq file, gzip support
              - !Positional
                optional: false
                position: 1
                name: name
                description: "sequence name or read name, multiple names were\nseparated\
                  \ by space"
              named:
              - !Flag
                optional: true
                synonyms:
                - -l
                - --list-file
                description: "a file containing sequence or read names, one name per\n\
                  line"
                args: !SimpleFlagArg
                  name: str
              - !Flag
                optional: true
                synonyms:
                - --reverse-complement
                description: output reverse complement sequence
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-fasta
                description: "output fasta format when extract reads from fastq,\n\
                  default output fastq format"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                - --out-file
                description: 'output file, default: output to stdout'
                args: !SimpleFlagArg
                  name: str
              - !Flag
                optional: true
                synonyms:
                - --sequential-read
                description: "start sequential reading, particularly suitable for\n\
                  extracting large numbers of sequences\n"
                args: !EmptyFlagArg {}
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx extract [-h] [-l str] [--reverse-complement]\
                \ [--out-fasta]\n                       [-o str] [--sequential-read]\n\
                \                       fastx [name [name ...]]\n\npositional arguments:\n\
                \  fastx                 fasta or fastq file, gzip support\n  name\
                \                  sequence name or read name, multiple names were\n\
                \                        separated by space\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  -l str,\
                \ --list-file str\n                        a file containing sequence\
                \ or read names, one name per\n                        line\n  --reverse-complement\
                \  output reverse complement sequence\n  --out-fasta           output\
                \ fasta format when extract reads from fastq,\n                  \
                \      default output fastq format\n  -o str, --out-file str\n   \
                \                     output file, default: output to stdout\n  --sequential-read\
                \     start sequential reading, particularly suitable for\n      \
                \                  extracting large numbers of sequences\n"
              generated_using: *id004
              docker_image:
            - &id017 !Command
              command: *id009
              positional: []
              named: []
              parent: *id014
              subcommands:
              - !Command
                command: *id010
                positional:
                - !Positional
                  optional: false
                  position: 0
                  name: pyfastx
                  description: ''
                - !Positional
                  optional: false
                  position: 1
                  name: COMMAND
                  description: ''
                named: []
                parent: *id015
                subcommands: []
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: pyfastx COMMAND [OPTIONS]\npyfastx: error: unrecognized\
                  \ arguments: --usage\n"
                generated_using: *id011
                docker_image:
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx stat [-h] fastx [fastx ...]\n\npositional\
                \ arguments:\n  fastx       fasta or fastq file, gzip support\n\n\
                optional arguments:\n  -h, --help  show this help message and exit\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id012
              positional:
              - !Positional
                optional: false
                position: 0
                name: fastx
                description: fasta or fastq file, gzip support
              named:
              - !Flag
                optional: true
                synonyms:
                - -f
                - --full
                description: build full index, base composition will be calculated
                args: !EmptyFlagArg {}
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx index [-h] [-f] fastx [fastx ...]\n\npositional\
                \ arguments:\n  fastx       fasta or fastq file, gzip support\n\n\
                optional arguments:\n  -h, --help  show this help message and exit\n\
                \  -f, --full  build full index, base composition will be calculated\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id013
              positional:
              - !Positional
                optional: false
                position: 0
                name: fastx
                description: input fasta file, gzip support
              - !Positional
                optional: false
                position: 1
                name: region
                description: "format is chr:start-end, start and end position is\n\
                  1-based, multiple regions were separated by space"
              named:
              - !Flag
                optional: true
                synonyms:
                - -r
                - --region-file
                description: "tab-delimited file, one region per line, both start\n\
                  and end position are 1-based"
                args: !SimpleFlagArg
                  name: str
              - !Flag
                optional: true
                synonyms:
                - -b
                - --bed-file
                description: "tab-delimited BED file, 0-based start position and\n\
                  1-based end position"
                args: !SimpleFlagArg
                  name: str
              - !Flag
                optional: true
                synonyms:
                - -o
                - --out-file
                description: "output file, default: output to stdout\n"
                args: !SimpleFlagArg
                  name: str
              parent: *id014
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pyfastx subseq [-h] [-r str | -b str] [-o str]\n\
                \                      fastx [region [region ...]]\n\npositional arguments:\n\
                \  fastx                 input fasta file, gzip support\n  region\
                \                format is chr:start-end, start and end position is\n\
                \                        1-based, multiple regions were separated\
                \ by space\n\noptional arguments:\n  -h, --help            show this\
                \ help message and exit\n  -r str, --region-file str\n           \
                \             tab-delimited file, one region per line, both start\n\
                \                        and end position are 1-based\n  -b str, --bed-file\
                \ str\n                        tab-delimited BED file, 0-based start\
                \ position and\n                        1-based end position\n  -o\
                \ str, --out-file str\n                        output file, default:\
                \ output to stdout\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: pyfastx COMMAND [OPTIONS]\n\nA command line tool for\
              \ FASTA/Q file manipulation\n\noptional arguments:\n  -h, --help   \
              \  show this help message and exit\n  -v, --version  show program's\
              \ version number and exit\n\nCommands:\n  \n    index        build index\
              \ for fasta/q file\n    stat         show detailed statistics information\
              \ of fasta/q file\n    split        split fasta/q file into multiple\
              \ files\n    fq2fa        convert fastq file to fasta file\n    subseq\
              \       get subsequences from fasta file by region\n    sample     \
              \  randomly sample sequences from fasta or fastq file\n    extract \
              \     extract full sequences or reads from fasta/q file\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx fq2fa [-h] [-o str] fastx\n\npositional arguments:\n\
            \  fastx                 fastq file, gzip support\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  -o str, --out-file\
            \ str\n                        output file, default: output to stdout\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: fastx
            description: fasta or fastq file, gzip support
          named:
          - !Flag
            optional: true
            synonyms:
            - -n
            description: split a fasta/q file into N new files with even size
            args: !SimpleFlagArg
              name: int
          - !Flag
            optional: true
            synonyms:
            - -c
            description: "split a fasta/q file into multiple files containing\nthe\
              \ same sequence counts"
            args: !SimpleFlagArg
              name: int
          - !Flag
            optional: true
            synonyms:
            - -o
            - --out-dir
            description: "output directory, default is current folder\n"
            args: !SimpleFlagArg
              name: str
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx split [-h] (-n int | -c int) [-o str] fastx\n\
            \npositional arguments:\n  fastx                 fasta or fastq file,\
            \ gzip support\n\noptional arguments:\n  -h, --help            show this\
            \ help message and exit\n  -n int                split a fasta/q file\
            \ into N new files with even size\n  -c int                split a fasta/q\
            \ file into multiple files containing\n                        the same\
            \ sequence counts\n  -o str, --out-dir str\n                        output\
            \ directory, default is current folder\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -n
            description: number of sequences to be sampled
            args: !SimpleFlagArg
              name: int
          - !Flag
            optional: true
            synonyms:
            - -p
            description: proportion of sequences to be sampled, 0~1
            args: !SimpleFlagArg
              name: float
          - !Flag
            optional: true
            synonyms:
            - -s
            - --seed
            description: random seed, default is the current system time
            args: !SimpleFlagArg
              name: int
          - !Flag
            optional: true
            synonyms:
            - --sequential-read
            description: "start sequential reading, particularly suitable for\nsampling\
              \ large numbers of sequences"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            - --out-file
            description: "output file, default: output to stdout\n"
            args: !SimpleFlagArg
              name: str
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx sample [-h] (-n int | -p float) [-s int] [--sequential-read]\n\
            \                      [-o str]\n                      fastx\n\npositional\
            \ arguments:\n  fastx                 fasta or fastq file, gzip support\n\
            \noptional arguments:\n  -h, --help            show this help message\
            \ and exit\n  -n int                number of sequences to be sampled\n\
            \  -p float              proportion of sequences to be sampled, 0~1\n\
            \  -s int, --seed int    random seed, default is the current system time\n\
            \  --sequential-read     start sequential reading, particularly suitable\
            \ for\n                        sampling large numbers of sequences\n \
            \ -o str, --out-file str\n                        output file, default:\
            \ output to stdout\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional:
          - !Positional
            optional: false
            position: 0
            name: fastx
            description: fasta or fastq file, gzip support
          - !Positional
            optional: false
            position: 1
            name: name
            description: "sequence name or read name, multiple names were\nseparated\
              \ by space"
          named:
          - !Flag
            optional: true
            synonyms:
            - -l
            - --list-file
            description: "a file containing sequence or read names, one name per\n\
              line"
            args: !SimpleFlagArg
              name: str
          - !Flag
            optional: true
            synonyms:
            - --reverse-complement
            description: output reverse complement sequence
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-fasta
            description: "output fasta format when extract reads from fastq,\ndefault\
              \ output fastq format"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            - --out-file
            description: 'output file, default: output to stdout'
            args: !SimpleFlagArg
              name: str
          - !Flag
            optional: true
            synonyms:
            - --sequential-read
            description: "start sequential reading, particularly suitable for\nextracting\
              \ large numbers of sequences\n"
            args: !EmptyFlagArg {}
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx extract [-h] [-l str] [--reverse-complement]\
            \ [--out-fasta]\n                       [-o str] [--sequential-read]\n\
            \                       fastx [name [name ...]]\n\npositional arguments:\n\
            \  fastx                 fasta or fastq file, gzip support\n  name   \
            \               sequence name or read name, multiple names were\n    \
            \                    separated by space\n\noptional arguments:\n  -h,\
            \ --help            show this help message and exit\n  -l str, --list-file\
            \ str\n                        a file containing sequence or read names,\
            \ one name per\n                        line\n  --reverse-complement \
            \ output reverse complement sequence\n  --out-fasta           output fasta\
            \ format when extract reads from fastq,\n                        default\
            \ output fastq format\n  -o str, --out-file str\n                    \
            \    output file, default: output to stdout\n  --sequential-read     start\
            \ sequential reading, particularly suitable for\n                    \
            \    extracting large numbers of sequences\n"
          generated_using: *id004
          docker_image:
        - &id019 !Command
          command: *id009
          positional: []
          named: []
          parent: *id016
          subcommands:
          - !Command
            command: *id010
            positional:
            - !Positional
              optional: false
              position: 0
              name: pyfastx
              description: ''
            - !Positional
              optional: false
              position: 1
              name: COMMAND
              description: ''
            named: []
            parent: *id017
            subcommands: []
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: pyfastx COMMAND [OPTIONS]\npyfastx: error: unrecognized\
              \ arguments: --usage\n"
            generated_using: *id011
            docker_image:
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx stat [-h] fastx [fastx ...]\n\npositional arguments:\n\
            \  fastx       fasta or fastq file, gzip support\n\noptional arguments:\n\
            \  -h, --help  show this help message and exit\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id012
          positional:
          - !Positional
            optional: false
            position: 0
            name: fastx
            description: fasta or fastq file, gzip support
          named:
          - !Flag
            optional: true
            synonyms:
            - -f
            - --full
            description: build full index, base composition will be calculated
            args: !EmptyFlagArg {}
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx index [-h] [-f] fastx [fastx ...]\n\npositional\
            \ arguments:\n  fastx       fasta or fastq file, gzip support\n\noptional\
            \ arguments:\n  -h, --help  show this help message and exit\n  -f, --full\
            \  build full index, base composition will be calculated\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id013
          positional:
          - !Positional
            optional: false
            position: 0
            name: fastx
            description: input fasta file, gzip support
          - !Positional
            optional: false
            position: 1
            name: region
            description: "format is chr:start-end, start and end position is\n1-based,\
              \ multiple regions were separated by space"
          named:
          - !Flag
            optional: true
            synonyms:
            - -r
            - --region-file
            description: "tab-delimited file, one region per line, both start\nand\
              \ end position are 1-based"
            args: !SimpleFlagArg
              name: str
          - !Flag
            optional: true
            synonyms:
            - -b
            - --bed-file
            description: "tab-delimited BED file, 0-based start position and\n1-based\
              \ end position"
            args: !SimpleFlagArg
              name: str
          - !Flag
            optional: true
            synonyms:
            - -o
            - --out-file
            description: "output file, default: output to stdout\n"
            args: !SimpleFlagArg
              name: str
          parent: *id016
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pyfastx subseq [-h] [-r str | -b str] [-o str]\n    \
            \                  fastx [region [region ...]]\n\npositional arguments:\n\
            \  fastx                 input fasta file, gzip support\n  region    \
            \            format is chr:start-end, start and end position is\n    \
            \                    1-based, multiple regions were separated by space\n\
            \noptional arguments:\n  -h, --help            show this help message\
            \ and exit\n  -r str, --region-file str\n                        tab-delimited\
            \ file, one region per line, both start\n                        and end\
            \ position are 1-based\n  -b str, --bed-file str\n                   \
            \     tab-delimited BED file, 0-based start position and\n           \
            \             1-based end position\n  -o str, --out-file str\n       \
            \                 output file, default: output to stdout\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: pyfastx COMMAND [OPTIONS]\n\nA command line tool for FASTA/Q\
          \ file manipulation\n\noptional arguments:\n  -h, --help     show this help\
          \ message and exit\n  -v, --version  show program's version number and exit\n\
          \nCommands:\n  \n    index        build index for fasta/q file\n    stat\
          \         show detailed statistics information of fasta/q file\n    split\
          \        split fasta/q file into multiple files\n    fq2fa        convert\
          \ fastq file to fasta file\n    subseq       get subsequences from fasta\
          \ file by region\n    sample       randomly sample sequences from fasta\
          \ or fastq file\n    extract      extract full sequences or reads from fasta/q\
          \ file\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx fq2fa [-h] [-o str] fastx\n\npositional arguments:\n\
        \  fastx                 fastq file, gzip support\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -o str, --out-file\
        \ str\n                        output file, default: output to stdout\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: fastx
        description: fasta or fastq file, gzip support
      named:
      - !Flag
        optional: true
        synonyms:
        - -n
        description: split a fasta/q file into N new files with even size
        args: !SimpleFlagArg
          name: int
      - !Flag
        optional: true
        synonyms:
        - -c
        description: "split a fasta/q file into multiple files containing\nthe same\
          \ sequence counts"
        args: !SimpleFlagArg
          name: int
      - !Flag
        optional: true
        synonyms:
        - -o
        - --out-dir
        description: "output directory, default is current folder\n"
        args: !SimpleFlagArg
          name: str
      parent: *id018
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx split [-h] (-n int | -c int) [-o str] fastx\n\npositional\
        \ arguments:\n  fastx                 fasta or fastq file, gzip support\n\n\
        optional arguments:\n  -h, --help            show this help message and exit\n\
        \  -n int                split a fasta/q file into N new files with even size\n\
        \  -c int                split a fasta/q file into multiple files containing\n\
        \                        the same sequence counts\n  -o str, --out-dir str\n\
        \                        output directory, default is current folder\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -n
        description: number of sequences to be sampled
        args: !SimpleFlagArg
          name: int
      - !Flag
        optional: true
        synonyms:
        - -p
        description: proportion of sequences to be sampled, 0~1
        args: !SimpleFlagArg
          name: float
      - !Flag
        optional: true
        synonyms:
        - -s
        - --seed
        description: random seed, default is the current system time
        args: !SimpleFlagArg
          name: int
      - !Flag
        optional: true
        synonyms:
        - --sequential-read
        description: "start sequential reading, particularly suitable for\nsampling\
          \ large numbers of sequences"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        - --out-file
        description: "output file, default: output to stdout\n"
        args: !SimpleFlagArg
          name: str
      parent: *id018
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx sample [-h] (-n int | -p float) [-s int] [--sequential-read]\n\
        \                      [-o str]\n                      fastx\n\npositional\
        \ arguments:\n  fastx                 fasta or fastq file, gzip support\n\n\
        optional arguments:\n  -h, --help            show this help message and exit\n\
        \  -n int                number of sequences to be sampled\n  -p float   \
        \           proportion of sequences to be sampled, 0~1\n  -s int, --seed int\
        \    random seed, default is the current system time\n  --sequential-read\
        \     start sequential reading, particularly suitable for\n              \
        \          sampling large numbers of sequences\n  -o str, --out-file str\n\
        \                        output file, default: output to stdout\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional:
      - !Positional
        optional: false
        position: 0
        name: fastx
        description: fasta or fastq file, gzip support
      - !Positional
        optional: false
        position: 1
        name: name
        description: "sequence name or read name, multiple names were\nseparated by\
          \ space"
      named:
      - !Flag
        optional: true
        synonyms:
        - -l
        - --list-file
        description: "a file containing sequence or read names, one name per\nline"
        args: !SimpleFlagArg
          name: str
      - !Flag
        optional: true
        synonyms:
        - --reverse-complement
        description: output reverse complement sequence
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-fasta
        description: "output fasta format when extract reads from fastq,\ndefault\
          \ output fastq format"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        - --out-file
        description: 'output file, default: output to stdout'
        args: !SimpleFlagArg
          name: str
      - !Flag
        optional: true
        synonyms:
        - --sequential-read
        description: "start sequential reading, particularly suitable for\nextracting\
          \ large numbers of sequences\n"
        args: !EmptyFlagArg {}
      parent: *id018
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx extract [-h] [-l str] [--reverse-complement] [--out-fasta]\n\
        \                       [-o str] [--sequential-read]\n                   \
        \    fastx [name [name ...]]\n\npositional arguments:\n  fastx           \
        \      fasta or fastq file, gzip support\n  name                  sequence\
        \ name or read name, multiple names were\n                        separated\
        \ by space\n\noptional arguments:\n  -h, --help            show this help\
        \ message and exit\n  -l str, --list-file str\n                        a file\
        \ containing sequence or read names, one name per\n                      \
        \  line\n  --reverse-complement  output reverse complement sequence\n  --out-fasta\
        \           output fasta format when extract reads from fastq,\n         \
        \               default output fastq format\n  -o str, --out-file str\n  \
        \                      output file, default: output to stdout\n  --sequential-read\
        \     start sequential reading, particularly suitable for\n              \
        \          extracting large numbers of sequences\n"
      generated_using: *id004
      docker_image:
    - &id021 !Command
      command: *id009
      positional: []
      named: []
      parent: *id018
      subcommands:
      - !Command
        command: *id010
        positional:
        - !Positional
          optional: false
          position: 0
          name: pyfastx
          description: ''
        - !Positional
          optional: false
          position: 1
          name: COMMAND
          description: ''
        named: []
        parent: *id019
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: pyfastx COMMAND [OPTIONS]\npyfastx: error: unrecognized\
          \ arguments: --usage\n"
        generated_using: *id011
        docker_image:
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx stat [-h] fastx [fastx ...]\n\npositional arguments:\n\
        \  fastx       fasta or fastq file, gzip support\n\noptional arguments:\n\
        \  -h, --help  show this help message and exit\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id012
      positional:
      - !Positional
        optional: false
        position: 0
        name: fastx
        description: fasta or fastq file, gzip support
      named:
      - !Flag
        optional: true
        synonyms:
        - -f
        - --full
        description: build full index, base composition will be calculated
        args: !EmptyFlagArg {}
      parent: *id018
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx index [-h] [-f] fastx [fastx ...]\n\npositional arguments:\n\
        \  fastx       fasta or fastq file, gzip support\n\noptional arguments:\n\
        \  -h, --help  show this help message and exit\n  -f, --full  build full index,\
        \ base composition will be calculated\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id013
      positional:
      - !Positional
        optional: false
        position: 0
        name: fastx
        description: input fasta file, gzip support
      - !Positional
        optional: false
        position: 1
        name: region
        description: "format is chr:start-end, start and end position is\n1-based,\
          \ multiple regions were separated by space"
      named:
      - !Flag
        optional: true
        synonyms:
        - -r
        - --region-file
        description: "tab-delimited file, one region per line, both start\nand end\
          \ position are 1-based"
        args: !SimpleFlagArg
          name: str
      - !Flag
        optional: true
        synonyms:
        - -b
        - --bed-file
        description: "tab-delimited BED file, 0-based start position and\n1-based\
          \ end position"
        args: !SimpleFlagArg
          name: str
      - !Flag
        optional: true
        synonyms:
        - -o
        - --out-file
        description: "output file, default: output to stdout\n"
        args: !SimpleFlagArg
          name: str
      parent: *id018
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pyfastx subseq [-h] [-r str | -b str] [-o str]\n        \
        \              fastx [region [region ...]]\n\npositional arguments:\n  fastx\
        \                 input fasta file, gzip support\n  region               \
        \ format is chr:start-end, start and end position is\n                   \
        \     1-based, multiple regions were separated by space\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -r str, --region-file\
        \ str\n                        tab-delimited file, one region per line, both\
        \ start\n                        and end position are 1-based\n  -b str, --bed-file\
        \ str\n                        tab-delimited BED file, 0-based start position\
        \ and\n                        1-based end position\n  -o str, --out-file\
        \ str\n                        output file, default: output to stdout\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: pyfastx COMMAND [OPTIONS]\n\nA command line tool for FASTA/Q\
      \ file manipulation\n\noptional arguments:\n  -h, --help     show this help\
      \ message and exit\n  -v, --version  show program's version number and exit\n\
      \nCommands:\n  \n    index        build index for fasta/q file\n    stat   \
      \      show detailed statistics information of fasta/q file\n    split     \
      \   split fasta/q file into multiple files\n    fq2fa        convert fastq file\
      \ to fasta file\n    subseq       get subsequences from fasta file by region\n\
      \    sample       randomly sample sequences from fasta or fastq file\n    extract\
      \      extract full sequences or reads from fasta/q file\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx fq2fa [-h] [-o str] fastx\n\npositional arguments:\n\
    \  fastx                 fastq file, gzip support\n\noptional arguments:\n  -h,\
    \ --help            show this help message and exit\n  -o str, --out-file str\n\
    \                        output file, default: output to stdout\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: fastx
    description: fasta or fastq file, gzip support
  named:
  - !Flag
    optional: true
    synonyms:
    - -n
    description: split a fasta/q file into N new files with even size
    args: !SimpleFlagArg
      name: int
  - !Flag
    optional: true
    synonyms:
    - -c
    description: "split a fasta/q file into multiple files containing\nthe same sequence\
      \ counts"
    args: !SimpleFlagArg
      name: int
  - !Flag
    optional: true
    synonyms:
    - -o
    - --out-dir
    description: "output directory, default is current folder\n"
    args: !SimpleFlagArg
      name: str
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx split [-h] (-n int | -c int) [-o str] fastx\n\npositional\
    \ arguments:\n  fastx                 fasta or fastq file, gzip support\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -n int\
    \                split a fasta/q file into N new files with even size\n  -c int\
    \                split a fasta/q file into multiple files containing\n       \
    \                 the same sequence counts\n  -o str, --out-dir str\n        \
    \                output directory, default is current folder\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -n
    description: number of sequences to be sampled
    args: !SimpleFlagArg
      name: int
  - !Flag
    optional: true
    synonyms:
    - -p
    description: proportion of sequences to be sampled, 0~1
    args: !SimpleFlagArg
      name: float
  - !Flag
    optional: true
    synonyms:
    - -s
    - --seed
    description: random seed, default is the current system time
    args: !SimpleFlagArg
      name: int
  - !Flag
    optional: true
    synonyms:
    - --sequential-read
    description: "start sequential reading, particularly suitable for\nsampling large\
      \ numbers of sequences"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    - --out-file
    description: "output file, default: output to stdout\n"
    args: !SimpleFlagArg
      name: str
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx sample [-h] (-n int | -p float) [-s int] [--sequential-read]\n\
    \                      [-o str]\n                      fastx\n\npositional arguments:\n\
    \  fastx                 fasta or fastq file, gzip support\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  -n int           \
    \     number of sequences to be sampled\n  -p float              proportion of\
    \ sequences to be sampled, 0~1\n  -s int, --seed int    random seed, default is\
    \ the current system time\n  --sequential-read     start sequential reading, particularly\
    \ suitable for\n                        sampling large numbers of sequences\n\
    \  -o str, --out-file str\n                        output file, default: output\
    \ to stdout\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional:
  - !Positional
    optional: false
    position: 0
    name: fastx
    description: fasta or fastq file, gzip support
  - !Positional
    optional: false
    position: 1
    name: name
    description: "sequence name or read name, multiple names were\nseparated by space"
  named:
  - !Flag
    optional: true
    synonyms:
    - -l
    - --list-file
    description: "a file containing sequence or read names, one name per\nline"
    args: !SimpleFlagArg
      name: str
  - !Flag
    optional: true
    synonyms:
    - --reverse-complement
    description: output reverse complement sequence
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-fasta
    description: "output fasta format when extract reads from fastq,\ndefault output\
      \ fastq format"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    - --out-file
    description: 'output file, default: output to stdout'
    args: !SimpleFlagArg
      name: str
  - !Flag
    optional: true
    synonyms:
    - --sequential-read
    description: "start sequential reading, particularly suitable for\nextracting\
      \ large numbers of sequences\n"
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx extract [-h] [-l str] [--reverse-complement] [--out-fasta]\n\
    \                       [-o str] [--sequential-read]\n                       fastx\
    \ [name [name ...]]\n\npositional arguments:\n  fastx                 fasta or\
    \ fastq file, gzip support\n  name                  sequence name or read name,\
    \ multiple names were\n                        separated by space\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -l str,\
    \ --list-file str\n                        a file containing sequence or read\
    \ names, one name per\n                        line\n  --reverse-complement  output\
    \ reverse complement sequence\n  --out-fasta           output fasta format when\
    \ extract reads from fastq,\n                        default output fastq format\n\
    \  -o str, --out-file str\n                        output file, default: output\
    \ to stdout\n  --sequential-read     start sequential reading, particularly suitable\
    \ for\n                        extracting large numbers of sequences\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional: []
  named: []
  parent: *id020
  subcommands:
  - !Command
    command: *id010
    positional:
    - !Positional
      optional: false
      position: 0
      name: pyfastx
      description: ''
    - !Positional
      optional: false
      position: 1
      name: COMMAND
      description: ''
    named: []
    parent: *id021
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: pyfastx COMMAND [OPTIONS]\npyfastx: error: unrecognized arguments:\
      \ --usage\n"
    generated_using: *id011
    docker_image:
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx stat [-h] fastx [fastx ...]\n\npositional arguments:\n\
    \  fastx       fasta or fastq file, gzip support\n\noptional arguments:\n  -h,\
    \ --help  show this help message and exit\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id012
  positional:
  - !Positional
    optional: false
    position: 0
    name: fastx
    description: fasta or fastq file, gzip support
  named:
  - !Flag
    optional: true
    synonyms:
    - -f
    - --full
    description: build full index, base composition will be calculated
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx index [-h] [-f] fastx [fastx ...]\n\npositional arguments:\n\
    \  fastx       fasta or fastq file, gzip support\n\noptional arguments:\n  -h,\
    \ --help  show this help message and exit\n  -f, --full  build full index, base\
    \ composition will be calculated\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id013
  positional:
  - !Positional
    optional: false
    position: 0
    name: fastx
    description: input fasta file, gzip support
  - !Positional
    optional: false
    position: 1
    name: region
    description: "format is chr:start-end, start and end position is\n1-based, multiple\
      \ regions were separated by space"
  named:
  - !Flag
    optional: true
    synonyms:
    - -r
    - --region-file
    description: "tab-delimited file, one region per line, both start\nand end position\
      \ are 1-based"
    args: !SimpleFlagArg
      name: str
  - !Flag
    optional: true
    synonyms:
    - -b
    - --bed-file
    description: "tab-delimited BED file, 0-based start position and\n1-based end\
      \ position"
    args: !SimpleFlagArg
      name: str
  - !Flag
    optional: true
    synonyms:
    - -o
    - --out-file
    description: "output file, default: output to stdout\n"
    args: !SimpleFlagArg
      name: str
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pyfastx subseq [-h] [-r str | -b str] [-o str]\n            \
    \          fastx [region [region ...]]\n\npositional arguments:\n  fastx     \
    \            input fasta file, gzip support\n  region                format is\
    \ chr:start-end, start and end position is\n                        1-based, multiple\
    \ regions were separated by space\n\noptional arguments:\n  -h, --help       \
    \     show this help message and exit\n  -r str, --region-file str\n         \
    \               tab-delimited file, one region per line, both start\n        \
    \                and end position are 1-based\n  -b str, --bed-file str\n    \
    \                    tab-delimited BED file, 0-based start position and\n    \
    \                    1-based end position\n  -o str, --out-file str\n        \
    \                output file, default: output to stdout\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: pyfastx COMMAND [OPTIONS]\n\nA command line tool for FASTA/Q file\
  \ manipulation\n\noptional arguments:\n  -h, --help     show this help message and\
  \ exit\n  -v, --version  show program's version number and exit\n\nCommands:\n \
  \ \n    index        build index for fasta/q file\n    stat         show detailed\
  \ statistics information of fasta/q file\n    split        split fasta/q file into\
  \ multiple files\n    fq2fa        convert fastq file to fasta file\n    subseq\
  \       get subsequences from fasta file by region\n    sample       randomly sample\
  \ sequences from fasta or fastq file\n    extract      extract full sequences or\
  \ reads from fasta/q file\n"
generated_using: *id004
docker_image:
