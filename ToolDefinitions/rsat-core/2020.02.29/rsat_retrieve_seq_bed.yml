!Command
command:
- rsat
- retrieve-seq-bed
positional:
- !Positional
  description: "\e[1mVERSION\e[0m"
  position: 0
  name: retrieve-seq-bed
  optional: false
- !Positional
  description: "\e[1mCATEGORY\e[0m"
  position: 0
  name: Jacques.van-Helden\@univ-amu.fr
  optional: false
- !Positional
  description: "\e[1mUSAGE\e[0m"
  position: 1
  name: genome
  optional: false
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    retrieve-seq-bed\n\n\e[1mVERSION\e[0m\n    $program_version\n\
  \n\e[1mDESCRIPTION\e[0m\n    Retrieve sequences for a set of genomic coordinates\
  \ provided in bed, gff\n    or vcf format. Note that gff coordinates are zero-based.\n\
  \n    This script is a wrapper around \e[33mbedtools getfasta\e[0m, an efficient\
  \ tool to\n    retrieve sequences from a fasta-formatted sequence file (e.g. all\
  \ genome\n    sequences) and a file of coordinates defined on the sequences of the\n\
  \    fasta file.\n\n    The wrapper generates the \e[33mbedtools getfasta\e[0m command\
  \ in order to retrieve\n    genomic coordinates from one of the locally supported\
  \ genomes.\n\n\e[1mAUTHORS\e[0m\n    Bruno Contreras Moreira <bcontreras\\@eead.csic.es>\n\
  \    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mCATEGORY\e[0m\n    genome\n\n\e[1mUSAGE\e\
  [0m\n    retrieve-seq-bed -org organism_name -i inputfile [-o outputfile] [-v #]\n\
  \    [...]\n\n\e[1mINPUT FORMAT\e[0m\n    The genomic coordinate file will be used\
  \ as input by \e[33mbedtools getfasta\e[0m,\n    and must be compliant with the\
  \ supported formats: BED/GFF/VCF.\n\n\e[1mOUTPUT FORMAT\e[0m\n    A sequence file\
  \ in fasta format (produced by \e[33mbedtools getfasta\e[0m.\n\n\e[1mSEE ALSO\e\
  [0m\n\e[1mWISH LIST\e[0m\n    \e[1m-server http://some.rsat.server/rsat/\e[0m\n\
  \        Send the request to a remote RSAT server via the Web services. This\n \
  \       option enables to get fasta sequences from any RSAT server without\n   \
  \     having to install them locally.\n\n    \e[1m-extend length\e[0m =item \e[1m-extend_up\
  \ up_length\e[0m =item \e[1m-extend_down\n    down_length\e[0m\n        Extend the\
  \ peaks by a given length on the upstream (\e[33m-extend_up\e[0m),\n        downstream\
  \ (\e[33m-extend_down\e[0m) or both sides (\e[33m-extend\e[0m). The side is\n  \
  \      adapted according to the strand.\n\n        Flank extension is done via \e\
  [33mbedtools flank\e[0m.\n\n        The extended coordinates are exported with the\
  \ same name as the\n        output file, supplemented with the suffix _flanks.bed.\n\
  \n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the\
  \ warning messages during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\
  \n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-i coordinate_file\e[0m\n\
  \        Genomic coordinates, in one of the formats supported by \e[33mbedtools\n\
  \        getfasta\e[0m: BED, GFF, VCF.\n\n    \e[1m-o outputfile\e[0m\n        Output\
  \ file (in fasta format), where the sequences will be saved.\n        This argument\
  \ is mandatory, since it is required by \e[33mbedtools\n        getfasta\e[0m.\n\
  \n    \e[1m-org organism_name\e[0m\n        Organism name, which must correspond\
  \ to one organism supported on\n        the local RSAT instance.\n\n    \e[1m-rm\e\
  [0m Use repeat-masked version of the genome.\n\n    \e[1m-common_chr file\e[0m,\
  \ \e[1m-add_chr\e[0m, \e[1m-remove_chr\e[0m,\n    \e[1m-check_chr\e[0m\n       \
  \ These four options allow to ensure consistency between chromosome\n        naming\
  \ in the query bed file and in the genome annotations. Indeed,\n        the chromosome\
  \ naming varies depending on the genome reference\n        center, so that a bed\
  \ file obtained with one convention may have\n        chromosome names incompatible\
  \ with the convention used in the\n        database that served as source to install\
  \ the genome in RSAT.\n\n        \e[33m-common_chr file\e[0m takes a tab-separated\
  \ file matching common, short\n        chr names to full names actually used in\
  \ underlying FASTA file.\n\n        \e[33m-add_chr\e[0m adds a prefix \"chr\" to\
  \ chromosome names of the query bed\n        file before running the analysis.\n\
  \n        \e[33m-remove_chr\e[0m removes the prefix \"chr\" from chromosome names.\n\
  \n        The option \e[33m-check_chr\e[0m analyses the input bed file and the RSAT\n\
  \        annotation table, and checks the consistency between naming\n        conventions.\n\
  \n"
generated_using:
- -h
