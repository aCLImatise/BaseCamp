!Command
command:
- rsat
- compare-scores
positional:
- !Positional
  description: 1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
  position: 0
  name: compare-scores
  optional: false
- !Positional
  description: OPTIONS
  position: 0
  name: util
  optional: false
named:
- !Flag
  description: (must be first argument) display options
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: verbose
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(use recursively to indicate several input files)\ninput file.\nAt\
    \ least 2 different input files must be specified.\nThe input files each contain\
    \ a table with several columns,\nseparated by tabulations (      ).\nThe first\
    \ column of each input file contains the key."
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: input_file
  optional: true
- !Flag
  description: "list of files specified on the command line.\nAll following arguments\
    \ are considered as input file"
  synonyms:
  - -files
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Specify a file containing the list of files to be compared.\nThis\
    \ is especially useful for long file lists of input files\n(e.g. > 500 files)."
  synonyms:
  - -filelist
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "if not specified, the standard output is used.\nThis allows to place\
    \ the command within a pipe."
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: outputfile
  optional: true
- !Flag
  description: "format (default: profiles)\nSupported formats: classes,profiles\n\
    Profiles: tab-delimited file with one column per file, and one\nrow per object\
    \ to which a score was assigned.\nClasses: 3-column tab-delimited files. The respective\
    \ columns\nindicate:\n- object\n- input file\n- score"
  synonyms:
  - -format
  args: !SimpleFlagArg
    name: export
  optional: true
- !Flag
  description: the first line of each input file as column
  synonyms:
  - -header
  args: !SimpleFlagArg
    name: use
  optional: true
- !Flag
  description: "null string (default <NULL>) displayed when one\nfile contains no\
    \ value for a given key)"
  synonyms:
  - -null
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: sort IDs numerically rather than alphabetically
  synonyms:
  - -numeric
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: sort IDs numerically in a decreasing order
  synonyms:
  - -decreasing
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: remove path (directory) from file names in the header
  synonyms:
  - -basename
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Suppress a given substring from file names in the header\nThis option\
    \ can be used iteratively to suppress different\nsubstrings.\nExample:\n-suppress\
    \ '.tab' -suppress 'oligos_'\nThe substring may contain a regular expression.\n\
    Example:\n-suppress 'w+_'"
  synonyms:
  - -suppress
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Substitute a given substring from file names in the header\nby a specified\
    \ substring.\nExample:\n-subst 'oligo_' 'ol'"
  synonyms:
  - -subst
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: (must be first argument) display full help message
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "NAME\n\tcompare-scores\n\n        1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
  \nUSAGE\n        compare-scores -i inputfile_1 -i inputfile_2 [-i inputfile_n] [-o\
  \ outputfile] [-v] [-ic #] -sc #\n\nDESCRIPTION\n\n        Compare the score associated\
  \ to keys in different input files\n\t(basically, this amounts to join different\
  \ tables on the basis\n\tof a unique identifier).\n\nCATEGORY\n\tutil\n\nOPTIONS\n\
  \        -h      (must be first argument) display full help message\n\n        -help\
  \   (must be first argument) display options\n\n\t-v\tverbose\n\n\t-i input_file\
  \ (use recursively to indicate several input files)\n\t\tinput file. \n\t\tAt least\
  \ 2 different input files must be specified.\n\t\tThe input files each contain a\
  \ table with several columns,\n\t\tseparated by tabulations (\t). \n\t\tThe first\
  \ column of each input file contains the key.\n\n\t-files\tlist of files specified\
  \ on the command line. \n\t\tAll following arguments are considered as input file\n\
  \n\t-filelist\n\t\tSpecify a file containing the list of files to be compared.\n\
  \t\tThis is especially useful for long file lists of input files\n\t\t(e.g. > 500\
  \ files).\n\n\t-o outputfile\n\t\tif not specified, the standard output is used.\n\
  \t\tThis allows to place the command within a pipe.\n\n\t-format\texport format\
  \ (default: profiles)\n\t\tSupported formats: classes,profiles\n\t\t\n\t\tProfiles:\
  \ tab-delimited file with one column per file, and one\n\t\trow per object to which\
  \ a score was assigned. \n\n\t\tClasses: 3-column tab-delimited files. The respective\
  \ columns\n\t\tindicate: \n\t\t\t  - object\n\t\t\t  - input file\n\t\t\t  - score\n\
  \n\t-sc\tscore column. \n\n\t-sc#\tscore column for the #th file\n\n\t-ic\tIdentifier\
  \ column (default 1) \n\n\t-ic#\tidentifier column for the #th file\n\n\t-header\
  \ use the first line of each input file as column\n\t        headers.\n\n\t-lc,\
  \ -uc\n\t        By default, the comparison is case-insensitive, but\n      \t \
  \       the ID case is maintained in the output. This can\n      \t        however\
  \ b modified with the options '-lc' (IDs\n      \t        converted to lowercases)\
  \ and '-uc' (IDs converted to\n      \t        uppercases).\n\n\t-null   null string\
  \ (default <NULL>) displayed when one\n\t\tfile contains no value for a given key)\n\
  \n\t-numeric\n\t\tsort IDs numerically rather than alphabetically\n\n\t-decreasing\n\
  \t\tsort IDs numerically in a decreasing order\n\n\t-basename\n\t\tremove path (directory)\
  \ from file names in the header\n\n\t-suppress\n\t\tSuppress a given substring from\
  \ file names in the header\n\t\tThis option can be used iteratively to suppress\
  \ different\n\t\tsubstrings.\n\n\t\tExample:\n\t\t\t-suppress '.tab' -suppress 'oligos_'\n\
  \t\t\t\n\t\tThe substring may contain a regular expression.\n\t\t\n\t\tExample:\n\
  \t\t\t-suppress 'w+_'\n\t-subst\n\t\tSubstitute a given substring from file names\
  \ in the header\n\t\tby a specified substring.\n\t\t\n\t\tExample:\n\t\t\t-subst\
  \ 'oligo_' 'ol'\n\t\t\n\nINPUT FORMAT\n\teach line of the input file provides the\
  \ score for a single key. \n\tThe first word of each line must be the key.\n\tThe\
  \ score can be located in any column, which will be indicated with the parameter\
  \ -sc.\n\tLines beginning with a semicolumn (;) are ignored.\n\t\nOUTPUT FORMAT\n\
  \tOne line per key. The first column is the key, followed by 1 column for \n\tthe\
  \ score associated to that key in each of the input files specified.\n\t\nEXAMPLES\n\
  \       compare-scores -v -i data_file_1 -i data_file_2 -sc 4  -o myresult\n\t\n"
generated_using:
- -h
