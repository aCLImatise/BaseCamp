&id006 !Command
command:
- rsat
- footprint-discovery
positional:
- !Positional
  description: "\e[1mVERSION\e[0m"
  position: 0
  name: footprint-discovery
  optional: false
- !Positional
  description: Motif discovery
  position: 0
  name: Sequences
  optional: false
- !Positional
  description: -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2 -taxon Enterobacteriaceae
    \
  position: 0
  name: footprint-discovery
  optional: false
- !Positional
  description: "\e[1mOUTPUT FORMAT\e[0m"
  position: 0
  name: genes.
  optional: false
- !Positional
  description: "NOTE : 'ortho' is replaced by 'leaders' in the filename prefix with"
  position: 0
  name: Feature-map
  optional: false
- !Positional
  description: dyad-analysis
  position: 0
  name: get-orthologs
  optional: false
- !Positional
  description: "\e[1mWISH LIST\e[0m"
  position: 1
  name: footprint-scan
  optional: false
- !Positional
  description: "\e[1m-taxa\e[0m\nSpecify a file containing a list of taxa, each of\
    \ which will be\nanalyzed separately. The results are stored in a separate folder\
    \ for\neach taxon. The folder name is defined automatically."
  position: 0
  name: soon.
  optional: false
- !Positional
  description: Multiple-fields can be entered either by calling this argument
  position: 0
  name: genes.
  optional: false
- !Positional
  description: "\e[1m-bg_model taxfreq|org_list|monads|file\e[0m"
  position: 0
  name: fields.
  optional: false
- !Positional
  description: The file format is one organisms per line, the comment char is ";"
  position: 0
  name: organisms.
  optional: false
- !Positional
  description: "File format: Tab delimited file with three columns.\nID of the query\
    \ gene (in the query organism)\nID of the reference gene\nID of the reference\
    \ organism"
  position: 0
  name: program.
  optional: false
- !Positional
  description: "\e[1m-sep_genes\e[0m"
  position: 0
  name: incomplete.
  optional: false
- !Positional
  description: "\e[1m-dist_thr value\e[0m"
  position: 0
  name: distance.
  optional: false
named:
- !Flag
  description: 1 -lth occ_sig 0 -uth rank 50 \
  synonyms:
  - -lth
  args: !SimpleFlagArg
    name: occ
  optional: true
- !Flag
  description: ',proba,rank -filter  \'
  synonyms:
  - -return
  args: !SimpleFlagArg
    name: occ
  optional: true
- !Flag
  description: ''
  synonyms:
  - -bg_model
  - -q
  args: !SimpleFlagArg
    name: taxfreq
  optional: true
- !Flag
  description: ''
  synonyms:
  - -sep_genes
  - -q
  - -q
  - -q
  args: !SimpleFlagArg
    name: lexA
  optional: true
- !Flag
  description: ''
  synonyms:
  - -bg_model
  - -all_genes
  - -sep_genes
  args: !SimpleFlagArg
    name: taxfreq
  optional: true
- !Flag
  description: ', see below)'
  synonyms:
  - -bgfile
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -org_list.
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', but at the level of the genus. At this level we'
  synonyms:
  - -unique_species
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - rsat
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - rsat
    - peak-motifs
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: peak-motifs
      optional: false
    - !Positional
      description: Matthieu Defrance <defrance@ccg.unam.mx>
      position: 0
      name: testing.
      optional: false
    - !Positional
      description: "\e[1mOUTPUT FORMAT\e[0m"
      position: 0
      name: supported.
      optional: false
    - !Positional
      description: The 4th column of the BED file must correspond to the fasta headers.
      position: 0
      name: track.
      optional: false
    - !Positional
      description: The file should be sufficiently large (several Mb) to provide a
      position: 0
      name: motifs.
      optional: false
    - !Positional
      description: "\e[1m-disco"
      position: 0
      name: server.
      optional: false
    - !Positional
      description: "\e[33msynthesis\e[0m"
      position: 0
      name: tasks.
      optional: false
    - !Positional
      description: "When the option \e[33m-no_merge_lengths\e[0m is active, matrices\
        \ are built"
      position: 0
      name: motifs.
      optional: false
    - !Positional
      description: "\e[33mmatrix-quality\e[0m"
      position: 0
      name: 1578-88.
      optional: false
    - !Positional
      description: If included by default, they can take a lot of disk space for large
      position: 0
      name: PSSM.
      optional: false
    named:
    - !Flag
      description: ', which detects both under- and over-represented patterns.'
      synonyms:
      - -two_tails
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    peak-motifs\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Workflow combining various algorithms to discover\
      \ motifs from set of\n    peak sequences, e.g. genomic regions obtained from\
      \ ChIP-seq or related\n    experiments (STARR-seq, ChIP-chip, ChIP-PET).\n\n\
      \e[1mAUTHORS\e[0m\n    Jacques van Helden <Jacques.van.Helden@ulb.ac.be>\n \
      \       Conception and implementation of the work flow + testing.\n\n    Morgane\
      \ Thomas-Chollier <thomas-c@molgen.mpg.de>\n        Conception of the work flow\
      \ + output layout + Web interface +\n        testing.\n\n    Matthieu Defrance\
      \ <defrance@ccg.unam.mx>\n        Implementation of the efficient algorithms\
      \ used in the work flow\n        (\e[33mcount-words\e[0m, \e[33mmatrix-scan-quick\e\
      [0m, \e[33mlocal-word-analysis\e[0m).\n\n    Olivier Sand <oly@bigre.ulb.ac.be>\
      \ for the Web services\n        Web services.\n\n    Carl Herrmann <carl.herrmann@univmed.fr>\
      \ and Denis Thieffry\n    <thieffry@tagc.univ-mrs.fr>\n        Analysis of the\
      \ case studies. Definition of optimal conditions of\n        utilization. Motif\
      \ comparisons and clustering.\n\n\e[1mCATEGORY\e[0m\n    Motif discovery\n\n\
      \e[1mUSAGE\e[0m\n    peak-motifs [-i inputfile] [-o outputfile] [-v #] [...]\n\
      \n\e[1mINPUT FORMAT\e[0m\n    The program takes as input either one (test) or\
      \ two sequence files (test\n    versus control).\n\n    All sequences formats\
      \ supported as input by \e[33mconvert-sequences\e[0m are\n    supported.\n\n\
      \e[1mOUTPUT FORMAT\e[0m\n    The pipeline runs a series of programs generating\
      \ each one or several\n    result file. An HTML index is generated in order\
      \ to synthesize the\n    results and give access to the individual result files.\n\
      \n    The index file is formed from the output directory (option -outdir) and\n\
      \    the file prefix (option -prefix).\n\n      [output_dir]/[prefix]_synthesis.html\n\
      \n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail\
      \ in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display full\
      \ help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-i test_seq_file\e\
      [0m\n        Test peak sequence file (mandatory).\n\n        For single-set\
      \ analysis, this file contains the peak sequences of\n        the unique set.\
      \ For test versus control analysis, it contains the\n        test sequences.\n\
      \n    \e[1m-source sequence_source\e[0m\n        Enter the source of the fasta\
      \ sequence file.\n\n        Supported source: galaxy\n\n        When the sequence\
      \ file comes from Galaxy, peak coordinates embedded\n        in the fasta headers\
      \ are extracted and used to convert predicted\n        site coordinates to genomic\
      \ coordinates (in the form of a bed file),\n        which can then be uploaded\
      \ to the UCSC genome browser as an\n        annotation track.\n\n        This\
      \ option is incompatible with -coord.\n\n    \e[1m-coord assembly peak_coordinate_file\e\
      [0m\n        Specify a file in bed format indicating the coordinates of each\
      \ peak\n        . The name of the file must be after the assembly corresponding\
      \ to\n        this file. Assembly are encoded in the form of uscsc (eg. mm9,\
      \ hg19\n        ...)\n\n        Example: -coord hg19 path/to/bed/file.bed\n\n\
      \        When a coordinate file is provided, predicted site coordinates are\n\
      \        also converted to genomic coordinates (in the form of a bed file),\n\
      \        which can be uploaded to the UCSC genome browser as an annotation\n\
      \        track.\n\n        The 4th column of the BED file must correspond to\
      \ the fasta headers.\n        See the documentation of the UCSC Genome Browser\
      \ for the\n        specification of the bed format.\n\n    \e[1m-ctrl control_seq_file\e\
      [0m\n        Control peak sequence file (optional).\n\n        The control sequence\
      \ file is used: - as control sequence for\n        \e[33moligo-diff\e[0m - to\
      \ estimate the background models for\n        \e[33moligo-analysis\e[0m and\
      \ \e[33mdyad-analysis\e[0m.\n\n        Control sequences are supposed to contain\
      \ a large number of\n        sequences without particular enrichment for any\
      \ motif. The choice of\n        appropriate background sequences is crucial\
      \ to detect relevant\n        motifs.\n\n        The file should be sufficiently\
      \ large (several Mb) to provide a\n        robust estimate of prior probabilities\
      \ (frequencies expected at\n        random) for oligonucleotides and dyads.\n\
      \n        Typical examples of control sequences:\n\n        - peak sequences\
      \ pulled down with the same DNA-binding protein as\n        the test but in\
      \ a different tissue (e.g. Blow et al., 2010).\n\n        - sets of sequences\
      \ pulled down in a mock experiment (without the\n        antibody) and characterized\
      \ by ChIP-seq or ChIP-chip.\n\n        - sets of peaks for a compendium of transcription\
      \ factors different\n        from the factor of interest.\n\n        - random\
      \ fragments of the genome of interest (e.g. obtained with\n        \e[33mrandom-genome-fragments\e\
      [0m)\n\n    \e[1m-max_seq_len msl\e[0m\n        Maximal sequence length. larger\
      \ sequences are truncated at the\n        specified length around the sequence\
      \ center (from -msl/2 to +msl/2).\n\n    \e[1m-top_peaks N\e[0m\n        Restrict\
      \ the analysis to the N peaks at the top of the test sequence\n        file.\
      \ Some peak calling programs return the peaks sorted by score.\n        In such\
      \ case, the -top_peaks option allows to restrict the analysis\n        to the\
      \ highest scoring peaks. In some cases, the top-scoring peaks\n        might\
      \ contain a higher density of binding sites, allowing to detect\n        motifs\
      \ with a higher significance.\n\n        This option can also be convenient\
      \ for performing quick tests,\n        parameter selection and debugging before\
      \ running the full analysis\n        of large sequence sets.\n\n        A value\
      \ of 0 is interpreted as \"no limit\" (this is convenient for\n        setting\
      \ the default value is scripts testing progressively\n        increasing values\
      \ ot TOPS).\n\n    \e[1m-ref_motifs reference_motif\e[0m\n        Reference\
      \ motifs (optional).\n\n        In some cases, we already dispose of some reference\
      \ motif(s), for\n        example motif(s) annotated in some transcription factor\
      \ database\n        (e.g. RegulonDB, Jaspar, TRANSFAC) for the transcription\
      \ factor of\n        interest. Even though these annotations may come from low-throughput\n\
      \        experiments, and rely on a poor number of sites, such reference\n \
      \       motif(s) may be informative to check correspondence between\n      \
      \  discovered motifs an prior knowledge.\n\n        Each discovered motif can\
      \ be compared to the reference motif(s), in\n        order to evaluate its correspondence\
      \ with the binding motif of the\n        factor of interest.\n\n        Reference\
      \ motif(s) should be provided in TRANSFAC format (see\n        \e[33mconvert-matrix\e\
      [0m for interconversions between matrix formats).\n\n    \e[1m-motif_db db_name\
      \ db_format db_file\e[0m\n        File containinf a database of transcription\
      \ factor binding motifs\n        (e.g. JASPAR, TRANSFAC, RegulonDB, ...) which\
      \ will be compared to\n        the discovered motifs (task motifs_vs_db).\n\n\
      \        The option requires three arguments:\n\n         - DB name\n\n    \
      \     - matrix format. same supported formats as convert-matrices, but we\n\
      \           recommend to use a format that includes an ID and a name for each\n\
      \           motif (e.g. TRANSFAC)\n\n         - file containing the DB motifs\n\
      \n        The option can be called iteratively on the same command line in\n\
      \        order to compare discovered motifs with several databases.\n\n    \
      \    Examples:\n\n         -motif_db TRANSFAC transfac transfac_download_dir/cgi-bin/data/matrix.dat\n\
      \n           will load a file containing all matrices from the TRANSFAC\n  \
      \         database, in transfac format.\n\n         -motif_db JASPAR transfac\
      \ jaspar_file.tf\n\n           will load a file containing motifs from the JASPAR\
      \ database that\n           have previously been converted to TRANSFAC format.\n\
      \n    \e[1m-outdir output_directory\e[0m\n        Output directory (mandatory).\n\
      \n        The result files and index files produced by the different programs\n\
      \        will be stored in this directory.\n\n    \e[1m-prefix output_prefix\e\
      [0m\n        Prefix for the output files.\n\n    \e[1m-title graph_title\e[0m\n\
      \        Title displayed on top of the graphs.\n\n    \e[1m-img_format img_format\e\
      [0m\n        Image format.\n\n        All the formats supported by XYgraph can\
      \ be used.\n\n    \e[1m-r_plot\e[0m\n        Use R rather than the Perl GD library\
      \ to generate plots. This gives\n        much nicer plots, but requires to have\
      \ R installed on the RSAT\n        server.\n\n    \e[1m-disco\n    oligos|dyads|positions|local_words|merged_words|meme|chipmunk\e\
      [0m\n        Specify the software tool(s) that will be used for motif discovery.\n\
      \n        Several algorithms can be specified either by using the option\n \
      \       iteratively:\n\n          -disco oligos -disco dyads\n\n        or by\
      \ entering a comma-separated list of algorithms:\n\n          -disco oligos,dyads\n\
      \n        \e[1mDefault motif discovery algorithms\e[0m\n\n        \e[33moligos\e\
      [0m\n            Run \e[33moligo-analysis\e[0m to detect over-represented oligonucleotides\n\
      \            of a given length (k, specified with option -l) in the test set\n\
      \            (van Helden et al., 1998). Prior frequencies of oligonucleotides\n\
      \            are taken from Markov model of order m (see option -markov)\n \
      \           estimated from the test set sequences themselves.\n\n        \e\
      [33mdyads\e[0m\n            Run \e[33mdyad-analysis\e[0m to detect over-represented\
      \ dyads, i.e. pairs\n            of short oligonucleotides (monads) spaced by\
      \ a region of fixed\n            width but variable content (van Helden et al.,\
      \ 2000). Spaced\n            motifs are typical of certain classes of transcription\
      \ factors\n            forming homo- or heterodimers.\n\n            By default,\
      \ peak-motifs analyzes pairs of trinucleotides with\n            any spacing\
      \ between 0 and 20.\n\n            The expected frequency of each dyad is estimated\
      \ as the product\n            of its monad frequencies in the sequences (option\
      \ -bg monads of\n            dyad-analysis).\n\n        \e[33mpositions\e[0m\n\
      \            Run \e[33mposition-analysis\e[0m to detect oligonucleotides showing\
      \ a\n            positional bias, i.e. have a non-homogeneous distribution in\
      \ the\n            peak sequence set.\n\n            This method was initially\
      \ developed to analyze termination and\n            poly-adenylation signals\
      \ in downstream sequences (van Helden et\n            al., 2001), and it turns\
      \ out to be very efficient for detecting\n            motifs centred on the\
      \ ChIP-seq peaks. For ChIP-seq analysis, the\n            reference position\
      \ is the center of each sequence.\n\n            The reference position can\
      \ however be changed with the option\n            \e[33m-origin\e[0m (center,\
      \ start, end).\n\n            Note that \e[33mpeak-motifs\e[0m also uses \e\
      [33mposition-analysis\e[0m for the task\n            \e[1mcomposition\e[0m,\
      \ in order to detect compositional biases (residues,\n            dinucleotides)\
      \ in the test sequence set.\n\n        \e[33mlocal_words\e[0m\n            Run\
      \ \e[33mlocal-word-analysis\e[0m to detect locally over-represented\n      \
      \      oligonucleotides and dyads.\n\n            The program \e[33mlocal-word-analysis\e\
      [0m (Matthieu Defrance,unpublished)\n            tests the over-representation\
      \ of each possible word (oligo,\n            dyad) in positional windows in\
      \ the sequence set.\n\n            Two types of background models are supported:\
      \ (i) Markov model\n            of order m estimated locally (within the window\
      \ under\n            consideration; (ii) the frequency observed for a word in\
      \ the\n            whole sequence set is used as estimator of the prior probability\n\
      \            of this word in the window.\n\n            After our first trials,\
      \ this program gives excellent results in\n            ChIP-seq datasets, because\
      \ its senstivitity increases with large\n            number of sequences (several\
      \ hundreds/thousands), and its\n            background model is more stringent\
      \ than for programs computing\n            the global over-representation (oligo-analysis,\
      \ dyad-analysis).\n\n        \e[33mmerged_words\e[0m\n            Extract a\
      \ position-specific scoring matrix (using\n            \e[33mmatrix-from-patterns\e\
      [0m) from all the words discovered by the\n            selected string-based\
      \ motif disovery algorithms\n            (oigos,dyads,positions and/or local_words).\n\
      \n    \e[1m-task\e[0m\n        Specify a subset of tasks to be executed.\n\n\
      \        By default, the program runs all necessary tasks. However, in some\n\
      \        cases, it can be useful to select one or several tasks to be\n    \
      \    executed separately.\n\n        Beware: task selection requires expertise,\
      \ because most tasks\n        depends on the prior execution of some other tasks\
      \ in the workflow.\n        Selecting tasks before their prerequisite tasks\
      \ have been completed\n        will provoke fatal errors.\n\n        \e[1mDefault\
      \ tasks\e[0m\n\n        \e[33mall\e[0m (default)\n            Run all the default\
      \ tasks.\n\n        \e[33mpurge\e[0m\n            Purge sequences (test set\
      \ and, if specified, control set) to\n            mask redundant fragments before\
      \ applying pattern discovey\n            algorithms. Sequence purging is necessary\
      \ because redundant\n            fragments would violate the hypothesis of independence\n\
      \            underlying the binomial significance test, resulting in a large\n\
      \            number of false positive patterns.\n\n        \e[33mseqlen\e[0m\n\
      \            Compute sequence lengths and their distribution.\n\n          \
      \  Sequence lengths are useful for the negative control (selection\n       \
      \     of random genome fragments).\n\n            Sequence length distribution\
      \ is informative to get an idea about\n            the variability of peak lengths.\n\
      \n        \e[33mcomposition\e[0m\n            Compute compositional profiles,\
      \ i.e. distributions of residues\n            and dinucleotide frequencies per\
      \ position (using\n            \e[33mposition-analysis\e[0m).\n\n          \
      \  Residue profiles may reveal composition biases in the\n            neighborhood\
      \ of the peak sequences. Dinucleotide profiles can\n            reveal (for\
      \ example) an enrichment in CpG island.\n\n            Note that \e[33mpeak-motifs\e\
      [0m also runs \e[33mposition-analysis\e[0m with larger\n            oligonucleotide\
      \ length (see option -l) to detect motifs on the\n            basis of positionally\
      \ biased oligonucleotides (see task\n            \e[1mpositions\e[0m).\n\n \
      \       \e[33mref_motifs\e[0m\n            This task combines various operations.\n\
      \n            Formating of the reference motif\n                Perform various\
      \ format conversion for the reference motif\n                (compute parameters,\
      \ consensus, logo).\n\n            Motif enrichment\n                Generate\
      \ an enriched motif by scanning the peak sequence set\n                with\
      \ the reference motif.\n\n            Motif comparison\n                Compare\
      \ all discovered motifs with the reference motif.\n\n        \e[33mdisco\e[0m\n\
      \            Run the motif discovery algorithms. See option -disco for the\n\
      \            selection of motif discovery algorithm(s).\n\n        \e[33mmeme\e\
      [0m\n            Run the motif discovery program MEME on the test sequences.\n\
      \n            \e[1mBeware\e[0m: the complexity of MEME is quadratic: the computing\
      \ time\n            increases as the square of sequence size. It is thus not\n\
      \            recommended to use MEME for data sets exceeding 1Mb. If the\n \
      \           sequence set contains many peaks, the option -task meme can be\n\
      \            combined with a restriction on the number of top peaks to be\n\
      \            considered (e.g. -top_peaks 500).\n\n            MEME reference:\
      \ Bailey, T. L. and Elkan, C. (1994). Fitting a\n            mixture model by\
      \ expectation maximization to discover motifs in\n            biopolymers. Proc\
      \ Int Conf Intell Syst Mol Biol 2, 28-36.\n\n        \e[33mchipmunk\e[0m\n \
      \           Run the motif discovery program ChIPMunk.\n\n            ChIPMunk\
      \ reference: Kulakovskiy, I. V., Boeva, V. A., Favorov,\n            A. V. and\
      \ Makeev, V. J. (2010). Deep and wide digging for\n            binding motifs\
      \ in ChIP-Seq data. Bioinformatics 26, 2622-3.\n\n        \e[33mmerge_words\e\
      [0m\n            Merge the words (oligos or dyads) discovered by the different\n\
      \            string-based motif discovery algorithms.\n\n            The table\
      \ of merged words has one row per word (oligo or dyad)\n            and one\
      \ column per motif discovery program. This table is\n            convenient\
      \ to analyze the consistency between the words detected\n            by different\
      \ approaches, e.g. show that a word is both\n            over-represented (oligo-analysis,\
      \ dyad-analysis) and\n            positionally biased (position-analysis, local-words).\
      \ A heatmap\n            is also exported to provide a graphical representation\
      \ of the\n            significance of each word (row) for each algorthm (column).\n\
      \n            The merged words can optionally be used as seeds for extracting\n\
      \            position-specific scoring matrices from the sequences, using the\n\
      \            program \e[33mmatrix-from-patterns\e[0m (see option -disco merged_words).\n\
      \n        \e[33mmotifs_vs_ref\e[0m\n            Compare each discovered motif\
      \ to the reference motifs.\n\n        \e[33mmotifs_vs_db\e[0m\n            Compare\
      \ each discovered motif to a database of known motifs\n            (e.g. Jaspar,\
      \ TRANSFAC, RegulonDB, UniProbe, ...)\n\n        \e[33mtimelog\e[0m\n      \
      \      Generate a log file summarizing the time spent in the different\n   \
      \         tasks.\n\n        \e[33msynthesis\e[0m\n            Generate the HTML\
      \ file providing a synthesis of the results and\n            pointing towards\
      \ the individual result files.\n\n        \e[1mExtra tasks\e[0m\n\n        A\
      \ few extra tasks are available, which are not executed by default.\n      \
      \  Those tasks are executed only when they are explicitly invoked with\n   \
      \     the option \e[33m-task\e[0m, they are not called with the option \"-task\
      \ all\".\n\n        \e[33mclean_seq\e[0m\n            Delete the purged sequence\
      \ files after the analysis, in order to\n            save space.\n\n       \
      \ \e[33mmeme_bg\e[0m\n            Compute meme background model from the test\
      \ sequences.\n\n    \e[1m-nmotifs max_motif_number\e[0m\n        Maximal number\
      \ of motifs (matrices) to return for each motif\n        discovery algorithm.\
      \ Note the distinction between the maximal number\n        of motifs (matrices)\
      \ and the maximum number of patterns (words,\n        dyads): a motif generally\
      \ corresponds to a set of several mutually\n        overlapping patterns (dyads,\
      \ words).\n\n    \e[1m-maxpat max_pattern_number\e[0m\n        Maximal number\
      \ of patterns (words) to return for each motif\n        discovery algorithm.\
      \ Note the distinction between the maximal number\n        of patterns (words,dyads)\
      \ and the maximum number of motifs\n        (matrices): a motif generally corresponds\
      \ to a set of several\n        mutually overlapping patterns (dyads, words).\n\
      \n    \e[1m-minol oligo_min_len\e[0m\n    \e[1m-maxol oligo_max_len\e[0m\n \
      \       Minimal (-minol) and maximal (-maxol) lengths of oligonucleotide for\n\
      \        word-counting approaches (oligo-analysis, position-analysis,\n    \
      \    local-word-analysis, oligo-diff, dreme).\n\n        In our experience,\
      \ optimal results are obtained with hexanucleotides\n        and heptanucleotides.\n\
      \n        Note: the monad length used for dyad-analysis is not affected by\n\
      \        those options. Instead it is fixed to to 3. Indeed, dyad-analysis\n\
      \        automatically detects larger motifs by sampling various spacings\n\
      \        between the two trinucleotide monads.\n\n    \e[1m-merge_lengths\e\
      [0m\n    \e[1m-no_merge_lengths\e[0m\n        These two options define whether\
      \ oligonucleotides of different\n        lengths should be merged (used algtogther)\
      \ for assembly\n        (\e[33mpattern-assembly\e[0m) and matrix building (\e\
      [33mmatrix-from-patterns\e[0m).\n\n        Default: -merge_lengths\n\n     \
      \   The program \e[33moligo-analysis\e[0m, \e[33mposition-analysis\e[0m and\n\
      \        \e[33mlocal-word-analysis\e[0m can run with different oligonucleotide\
      \ sizes\n        (e.g. 6, 7, 8), which generally reveal redundant fragments\
      \ of larger\n        motifs.\n\n        When the option \e[33m-no_merge_lengths\e\
      [0m is active, matrices are built\n        separately for each oligo length.\
      \ However, this generally leads to\n        redundant motifs, which were detected\
      \ separately as 6-mers and\n        7-mers. Separate assembly was the initial\
      \ mode of assembly since the\n        original publication of the method (2011).\n\
      \n        The option \e[33m-merge_lengths\e[0m was implemented in December 2013.\n\
      \n    \e[1m-markov\e[0m\n        Order of the Markov model used to estimate\
      \ expected oligonucleotide\n        frequencies for \e[33moligo-analysis\e[0m\
      \ and \e[33mlocal-word-analysis\e[0m.\n\n        \e[1mNote:\e[0m the option\
      \ \e[33m-markov\e[0m only applies to motif discovery. Sequence\n        scanning\
      \ is performed with a different Markov order, because the\n        scanning\
      \ time strongly increases with Markov order, whereas the\n        computing\
      \ time for \e[33moligo-analysis\e[0m and \e[33mlocal-word-analysis\e[0m is\n\
      \        independent of the Markov order. The Markov order for sequence\n  \
      \      scanning (site prediction and enrichment analysis) can be specified\n\
      \        with the option \e[33m-scan_markov\e[0m.\n\n        Higher order Markov\
      \ models are more stringent, lower order are more\n        sensitive, but tend\
      \ to return a large number of false positives.\n\n        Markov models can\
      \ be specified with either a positive or a negative\n        value. Positive\
      \ value indicate the length of the prefix in the\n        transition matrix.\
      \ Negative value indicate the order of the Markov\n        model relative to\
      \ the oligonucleotide length. For example, the\n        option -markov -2 gives\
      \ a model of order m=k-2 (thus, an order 5 for\n        heptanucleotides, an\
      \ order 4 for hexanucleotides).\n\n        The optimal Markov order depends\
      \ on the number of sequences in the\n        test set. Since ChIP-seq data typically\
      \ contain hundreds to\n        thoursands of peaks, high Markov orders are generally\
      \ good, because\n        they are stringent and still sensitive enough. In our\
      \ experience,\n        motifs are well detected with the most stringent Markov\
      \ order\n        (-markov -2).\n\n    \e[1m-min_markov min_markov_order\e[0m\n\
      \    \e[1m-max_markov max_markov_order\e[0m\n        A miminal and a maximal\
      \ value can be specified for the Markov order.\n        The program then iterates\
      \ over all markov values between\n        min_markov_order and max_markov_order.\n\
      \n    \e[1m-1str | -2str\e[0m\n        Single-strand (-1str) or double-strand\
      \ (-2str) analysis.\n\n        The default is double-strand analysis (-2str),\
      \ since ChIP-seq\n        results have no particular strand orientation.\n\n\
      \        However, for some data types such as CLIP-seq it might be relevant\n\
      \        to analyze single-strand motifs (option -1str).\n\n    \e[1m-noov |\
      \ -ovlp\e[0m\n        Treatment of self-overlapping words for motif discovery:\
      \ count\n        (-ovlp) or do not count (-noov) overlapping occurrences. In\
      \ -noov\n        mode, only renewing occurrences are counted.\n\n        It\
      \ is recommended to use the -noov mode (default) to avoid the\n        effect\
      \ of self-overlap, which violates the hypothesis of\n        independence of\
      \ successive occurrences underlying the binomial\n        significance test\
      \ (oligo-analysis, dyad-analysis).\n\n        \e[1mBeware\e[0m: the options\
      \ -noov and -ovlp only apply to motif discovery,\n        and not to compositional\
      \ profiles. Dinucleotide frequencies are\n        always computed with the option\
      \ -ovlp (count all occurrences), to\n        avoid weird effect. Since those\
      \ composition profiles further serve\n        to estimate the probability of\
      \ larger words, which may include\n        repeated residues, we need to count\
      \ all dinucleotide occurrences.\n        Indeed with the -noov mode (renewing\
      \ occurrences only), the\n        transition tables of the first order Markov\
      \ model would be\n        unbalanced: the expected frequency of all the repeated\
      \ dinucleotides\n        (AA, TT, CC, GG) would be under-estimated, leading\
      \ to an\n        under-estimation of the expected frequency of repeat-containing\n\
      \        words (e.g. AAAAAA, AAAGGG, ...).\n\n    \e[1m-under\e[0m\n       \
      \ Allows to search for under-represented motifs instead of\n        over-represented.\
      \ Only compatible with oligo-analysis.\n\n    \e[1m-ci class_interval\e[0m\n\
      \        Class interval for \e[33mposition-analysis\e[0m.\n\n    \e[1m-origin\
      \ center|start|end\e[0m\n        Default: center\n\n        Reference point\
      \ for position-analysis and sequence scanning. By\n        default, peak-motifs\
      \ aims at analyzing peaks from ChIP-seq and\n        related experiments. The\
      \ peak center is thus the default origin\n        (position 0). However, for\
      \ some particular purposes it might be\n        relevant to take the start or\
      \ the end of the sequences as position\n        0. For example, to analyze promoters\
      \ the end of the sequence\n        generally serves as reference position and\
      \ coordinates are displayed\n        as negative numbers.\n\n    \e[1m-offset\
      \ offset_value\e[0m\n        Add an offset to site positions. The offset value\
      \ must be an Integer\n        number (positive, null or negative). This option\
      \ allows to select an\n        arbitrary position as origin.\n\n\e[1mREFERENCES\e\
      [0m\n    Description and assessment of \e[33mpeak-motifs\e[0m\n\n        Thomas-Chollier,\
      \ M., Herrmann, C., Defrance, M., Sand, O., Thieffry,\n        D. & van Helden,\
      \ J. (2011). RSAT peak-motifs: motif analysis in\n        full-size ChIP-seq\
      \ datasets. Nucleic Acids Res.\n\n    The program \e[33mpeak-motifs\e[0m combines\
      \ a series of tried-and-tested programs\n    which have been detailed in the\
      \ following publications.\n\n    \e[33moligo-analysis\e[0m\n        van Helden,\
      \ J., Andre, B. and Collado-Vides, J. (1998). Extracting\n        regulatory\
      \ sites from the upstream region of yeast genes by\n        computational analysis\
      \ of oligonucleotide frequencies. J Mol Biol\n        281, 827-42.\n\n    \e\
      [33mdyad-analysis\e[0m\n        van Helden, J., Rios, A. F. and Collado-Vides,\
      \ J. (2000).\n        Discovering regulatory elements in non-coding sequences\
      \ by analysis\n        of spaced dyads. Nucleic Acids Res 28, 1808-18.\n\n \
      \   \e[33mposition-analysis\e[0m\n        van Helden, J., del Olmo, M. and Perez-Ortin,\
      \ J. E. (2000).\n        Statistical analysis of yeast genomic downstream sequences\
      \ reveals\n        putative polyadenylation signals. Nucleic Acids Res 28, 1000-10.\n\
      \n    \e[33mmatrix-scan\e[0m\n        Turatsinze, J. V., Thomas-Chollier, M.,\
      \ Defrance, M. and van Helden,\n        J. (2008). Using RSAT to scan genome\
      \ sequences for transcription\n        factor binding sites and cis-regulatory\
      \ modules. Nat Protoc 3,\n        1578-88.\n\n    \e[33mmatrix-quality\e[0m\n\
      \        Medina-Rivera, A., Abreu-Goodger, C., Thomas-Chollier, M., Salgado,\n\
      \        H., Collado-Vides, J. and van Helden, J. (2011). Theoretical and\n\
      \        empirical quality assessment of transcription factor-binding motifs.\n\
      \        Nucleic Acids Res 39, 808-24.\n\n\e[1mSEE ALSO\e[0m\n    \e[33moligo-analysis\e\
      [0m\n    \e[33mdyad-analysis\e[0m\n    \e[33mposition-analysis\e[0m\n    \e\
      [33mlocal-word-analysis\e[0m\n    \e[33mcompare-matrices\e[0m\n    \e[33mmatrix-scan\e\
      [0m\n\n\e[1mWISH LIST\e[0m\n    \e[1msite treatment\e[0m\n        Add an option\
      \ to include or not sites in the Transfac-formatted\n        PSSM.\n\n     \
      \   If included by default, they can take a lot of disk space for large\n  \
      \      sequence files, and they are partly redundant with sites resulting\n\
      \        from further scanning (which can be asked or not). For site\n     \
      \   scanning, we should also have the possibility either to store the\n    \
      \    sites, or to just calculate the distribution, coverage etc, and then\n\
      \        clean the sites. Maybe add an option \"-clean_sites\" (but then we\n\
      \        need to treat separately TRANSFAC sites) ? Or have two separate\n \
      \       options for computing motif positional distrib+ coverage and for\n \
      \       exporting sites, resp.\n\n    \e[1m-return explanation\e[0m\n      \
      \  Print guidelines for explaining the motifs, comparison tables and\n     \
      \   graphs at the bottom of the result page.\n\n    \e[1mmotif_cluster\e[0m\n\
      \        Compare all discovered motifs (plus reference motif if specified)\n\
      \        and cluster them in order to extract a consensus motif.\n\n    \e[1mweeder\e\
      [0m\n        Add a task to run Weeder on the peak sequences.\n\n         weederlauncher.out\
      \ input organism large S M T5\n\n    \e[1mmatrix_quality\e[0m\n        Run \e\
      [33mmatrix-quality\e[0m to evaluate the enrichment of each discovered\n    \
      \    motif in the test sequences, by comparing its score distribution\n    \
      \    with the theoretical distribution. The motif-specific character of\n  \
      \      the enrichment is further assessed by computing score distribution\n\
      \        with randomized matrices generated by permuting the columns of the\n\
      \        discovered motif. A \"good\" motif should show a clear enrichment\n\
      \        (more high-scoring hits than expected theoretically), whereas the\n\
      \        column-permuted matrices should fit the theoretical distribution.\n\
      \n    \e[1m-task ref_motif_enrichment\e[0m\n        Compute the enrichment of\
      \ test (and optionally control) sequences\n        for the reference motifs.\n\
      \n    \e[1mall_oligos\e[0m\n        Run \e[33moligo-analysis\e[0m without any\
      \ threshold in order to produce a plot\n        of observed versus expected\
      \ occurrences for all the\n        oligonucleotides. This analysis is performed\
      \ with the option\n        -two_tails, which detects both under- and over-represented\
      \ patterns.\n\n    \e[1min the full HTML report\e[0m\n\n        link to positin-analysis\n\
      \            Add a ink from the result page to the link table returned by\n\
      \            position-analysis (file *_graph_index.html).\n\n        sig in\
      \ report per motif\n            The significance of the motif should be added\
      \ to the report per\n            motif.\n\n"
    generated_using: &id002
    - -h
  - !Command
    command:
    - rsat
    - footprint-scan
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: footprint-scan
      optional: false
    - !Positional
      description: ECK12_ECK120012515_AgaR.24
      position: 0
      name: AC
      optional: false
    - !Positional
      description: 3     8     0     0
      position: 0
      name: '10'
      optional: false
    - !Positional
      description: 5     6     0     0
      position: 1
      name: '11'
      optional: false
    - !Positional
      description: 1     8     1     1
      position: 2
      name: '12'
      optional: false
    - !Positional
      description: 2     0     4     5
      position: 3
      name: '13'
      optional: false
    - !Positional
      description: 4     5     2     0
      position: 4
      name: '14'
      optional: false
    - !Positional
      description: 3     8     0     0
      position: 5
      name: '15'
      optional: false
    - !Positional
      description: 3     8     0     0
      position: 6
      name: '16'
      optional: false
    - !Positional
      description: 0     2     9     0
      position: 7
      name: '17'
      optional: false
    - !Positional
      description: 0     2     2     7
      position: 8
      name: '18'
      optional: false
    - !Positional
      description: 3     7     1     0
      position: 9
      name: '19'
      optional: false
    - !Positional
      description: 4     7     0     0
      position: 10
      name: '20'
      optional: false
    - !Positional
      description: 3     8     0     0
      position: 11
      name: '21'
      optional: false
    - !Positional
      description: 3     4     0     4
      position: 12
      name: '22'
      optional: false
    - !Positional
      description: 3     4     0     4
      position: 13
      name: '23'
      optional: false
    - !Positional
      description: 3     4     3     1
      position: 14
      name: '24'
      optional: false
    - !Positional
      description: 3     8     0     0
      position: 15
      name: '25'
      optional: false
    - !Positional
      description: //
      position: 16
      name: XX
      optional: false
    - !Positional
      description: ECK12_ECK120012316_AraC.18
      position: 17
      name: AC
      optional: false
    - !Positional
      description: 7     4     0     2
      position: 0
      name: '10'
      optional: false
    - !Positional
      description: 4     8     0     1
      position: 1
      name: '11'
      optional: false
    - !Positional
      description: 3     3     5     2
      position: 2
      name: '12'
      optional: false
    - !Positional
      description: 2    10     0     1
      position: 3
      name: '13'
      optional: false
    - !Positional
      description: 2     7     1     3
      position: 4
      name: '14'
      optional: false
    - !Positional
      description: 6     1     6     0
      position: 5
      name: '15'
      optional: false
    - !Positional
      description: 0    11     2     0
      position: 6
      name: '16'
      optional: false
    - !Positional
      description: 1     0     3     9
      position: 7
      name: '17'
      optional: false
    - !Positional
      description: 1     5     5     2
      position: 8
      name: '18'
      optional: false
    - !Positional
      description: 5     2     0     6
      position: 9
      name: '19'
      optional: false
    - !Positional
      description: //
      position: 10
      name: XX
      optional: false
    - !Positional
      description: The tutorial could cover the 3 interfaces (command-line, Web services
      position: 0
      name: result.
      optional: false
    - !Positional
      description: "\e[1m-bgfile background_file\e[0m"
      position: 0
      name: details.
      optional: false
    - !Positional
      description: The background model is calculated locally at each step of the
        scan,
      position: 0
      name: distributed.
      optional: false
    - !Positional
      description: "\e[1m-scan_opt\e[0m"
      position: 0
      name: XYgraph
      optional: false
    - !Positional
      description: "\e[1m-batch_matrix \e[0m"
      position: 0
      name: used.
      optional: false
    - !Positional
      description: The file format is one organisms per line, the comment char is
        ";"
      position: 0
      name: organisms.
      optional: false
    - !Positional
      description: "File format: Tab delimited file with three columns.\nID of the\
        \ query gene (in the query organism)\nID of the reference gene\nID of the\
        \ reference organism"
      position: 0
      name: program.
      optional: false
    - !Positional
      description: "\e[1m-sep_genes\e[0m"
      position: 0
      name: incomplete.
      optional: false
    - !Positional
      description: "\e[1m-dist_thr value\e[0m"
      position: 0
      name: distance.
      optional: false
    named:
    - !Flag
      description: \
      synonyms:
      - -taxon
      - -q
      - -q
      - -q
      args: !SimpleFlagArg
        name: Enterobacteriaceae
      optional: true
    - !Flag
      description: ${RSAT}/public_html/data/taxon_frequencies/Enterobacteriaceae/dyads_3nt_sp0-20_upstream-noorf_Enterobacteriaceae-noov-1str.freq.gz
        \
      synonyms:
      - -bgfile
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: \
      synonyms:
      - -m
      args: !SimpleFlagArg
        name: RegulonDB_matrices_transfac_format.txt
      optional: true
    - !Flag
      description: \
      synonyms:
      - -matrix_format
      args: !SimpleFlagArg
        name: transfac
      optional: true
    - !Flag
      description: \
      synonyms:
      - -matrix_suffix
      args: !SimpleFlagArg
        name: RegulonDB
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -sep_genes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: \
      synonyms:
      - -taxon
      - -all_genes
      args: !SimpleFlagArg
        name: Enterobacteriaceae
      optional: true
    - !Flag
      description: "'-lth score 7'"
      synonyms:
      - -occ_sig_opt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -org_list.
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ', but at the level of the genus. At this level we'
      synonyms:
      - -unique_species
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    footprint-scan\n\n\e[1mDESCRIPTION\e[0m\n    Scan\
      \ promoters of orthologous genes with one or several\n    position-specific\
      \ scoring matrices (PSSM) in order to detect enriched\n    motifs, and thereby\
      \ predict phylogenetically conserved target genes.\n\n\e[1mAUTHORS\e[0m\n  \
      \  Jacques.van. Helden <Jacques.van.Helden@ulb.ac.be>\n    Alejandra Medina-Rivera\
      \ <amedina@lcg.unam.mx>\n\n\e[1mCATEGORY\e[0m\n    comparative genomics\n\n\e\
      [1mUSAGE\e[0m\n    footprint-scan [-m matrix_inputfile] [-o outputfile] [-v\
      \ #] [...]\n\n\e[1mINPUT FORMAT\e[0m\n  \e[1mQuery gene(s)\e[0m\n    The analysis\
      \ can be performed either on a single gene, or several genes\n    separately\
      \ (option -sep_genes), or on a group of genes altogether.\n\n    Query genes\
      \ can be entered on the command line (option -q) or in a text\n    file (option-genes).\
      \ Alternatively, the option -all_genes will run the\n    analysis on all the\
      \ genes of a genome.\n\n  \e[1mPosition-specific scoring matrices (PSSMs)\e\
      [0m\n    \e[33mfootprint-scan\e[0m requires a collection of (at least one) position-specific\n\
      \    scoring matrices (PSSM).\n\n    All the format supported by \e[33mmatrix-scan\e\
      [0m can be used to enter the\n    matrices. However, we recommend to use the\
      \ TRANSFAC format, which\n    supports multiple matrices (we usually want tos\
      \ can promoters with a\n    full collection of matrices), and associates an\
      \ identifier with each\n    matrix (e.g. the name of the transcription factor).\n\
      \n   Example of TRANSFAC format\n    The following example shows a text file\
      \ describing two matrices,\n    representing the binding motifs annotated in\
      \ RegulonDB for AgaR and\n    AraC, respectively. Motifs must be separated by\
      \ a line containing a\n    double slash (//).\n\n    The complete file can be\
      \ downloaded from RegulonDB\n    (http://regulondb.ccg.unam.mx/).\n\n     AC\
      \  ECK12_ECK120012515_AgaR.24\n     XX\n     ID  ECK12_ECK120012515_AgaR.24\n\
      \     XX\n     P0       A     T     C     G\n     1        5     0     1   \
      \  5\n     2        6     1     4     0\n     3        4     0     5     2\n\
      \     4        5     4     0     2\n     5        4     6     0     1\n    \
      \ 6        1     5     3     2\n     7        0     2     8     1\n     8  \
      \      4     1     1     5\n     9        4     5     1     1\n     10     \
      \  3     8     0     0\n     11       5     6     0     0\n     12       1 \
      \    8     1     1\n     13       2     0     4     5\n     14       4     5\
      \     2     0\n     15       3     8     0     0\n     16       3     8    \
      \ 0     0\n     17       0     2     9     0\n     18       0     2     2  \
      \   7\n     19       3     7     1     0\n     20       4     7     0     0\n\
      \     21       3     8     0     0\n     22       3     4     0     4\n    \
      \ 23       3     4     0     4\n     24       3     4     3     1\n     25 \
      \      3     8     0     0\n     XX\n     //\n     AC  ECK12_ECK120012316_AraC.18\n\
      \     XX\n     ID  ECK12_ECK120012316_AraC.18\n     XX\n     P0       A    \
      \ T     C     G\n     1        0    10     0     3\n     2        7     4  \
      \   1     1\n     3        0     6     5     2\n     4        2     2     3\
      \     6\n     5        0     0     6     7\n     6        9     0     0    \
      \ 4\n     7        0     2     9     2\n     8        2     7     3     1\n\
      \     9        9     3     0     1\n     10       7     4     0     2\n    \
      \ 11       4     8     0     1\n     12       3     3     5     2\n     13 \
      \      2    10     0     1\n     14       2     7     1     3\n     15     \
      \  6     1     6     0\n     16       0    11     2     0\n     17       1 \
      \    0     3     9\n     18       1     5     5     2\n     19       5     2\
      \     0     6\n     XX\n     //\n\n\e[1mOUTPUT FORMAT\e[0m\n    The result comprises\
      \ several files for the orthologs, upstream\n    sequences, matrix-scan results,\
      \ feature-maps. By default, a directory is\n    created for each query gene,\
      \ with a name indicating the parameters:\n\n     footprints/[taxon]/[Organism]/[gene]\n\
      \n    Alternatively, the output folder can be specified manually with the\n\
      \    option \e[33m-o\e[0m.\n\n\e[1mEXAMPLES OF UTILIZATION\e[0m\n  \e[1mDetecting\
      \ trans-acting factors for single gene, with a collection of known motifs\e\
      [0m\n    Let us assume that we have a collection of PSSMs annotated for a given\n\
      \    organism (e.g. the matrices for all the \e[33mEscherichia coli\e[0m transcription\n\
      \    factors annotated in RegulonDB). We would likt to scan the promoters of\n\
      \    orthologs of a given gene, in order to predict the transcription factors\n\
      \    that might be involved in its regulation. The program will count the\n\
      \    hits for each matrix, and report those showing a significant enrichment\n\
      \    in the promoters of its orthologs.\n\n    In this example, we use a slightly\
      \ higher verbosity than usually (-v 2)\n    in order to keep track of the progress\
      \ of the analysis. This also\n    reports the commands that are executed, and\
      \ allows us to examine all\n    their parameters.\n\n     footprint-scan -v\
      \ 2  -org Escherichia_coli_GCF_000005845.2_ASM584v2 \\\n        -taxon Enterobacteriaceae\
      \ -q sodA -q lexA -q araC \\\n        -bgfile ${RSAT}/public_html/data/taxon_frequencies/Enterobacteriaceae/dyads_3nt_sp0-20_upstream-noorf_Enterobacteriaceae-noov-1str.freq.gz\
      \ \\\n        -m RegulonDB_matrices_transfac_format.txt \\\n        -matrix_format\
      \ transfac \\\n        -matrix_suffix RegulonDB \\\n        -sep_genes\n\n \
      \    footprint-scan -v 2  -org Escherichia_coli_GCF_000005845.2_ASM584v2 \\\n\
      \        -taxon Enterobacteriaceae -q sodA  \\\n        -bgfile ${RSAT}/public_html/data/taxon_frequencies/Enterobacteriaceae/dyads_3nt_sp0-20_upstream-noorf_Enterobacteriaceae-noov-1str.freq.gz\
      \ \\\n        -m RegulonDB_matrices.tab \\\n        -matrix_format tab \\\n\
      \        -matrix_suffix RegulonDB \\\n        -sep_genes\n\n  \e[1mDetecting\
      \ all putative target genes for a given transcription factor\e[0m\n    Given\
      \ a PSSM we would like detect new putative binding sites for a given\n    transcription\
      \ factor. The usual approach would be to retrieve all\n    upstream sequences\
      \ of the organism of interest, and then search for\n    high-scoring sites with\
      \ matrix-scan.\n\n    However, observing a single high scoring site in one promoter\
      \ does not\n    necessarily means that this gene is regulated by the potentially\
      \ bound\n    transcription factor.\n\n    As we know sequences with a functional\
      \ relevance migth be conserved\n    througth some branches of phylogeny. So\
      \ we expect binding sites with a\n    functional rele- vance to be conserved\
      \ in a group of close othologous\n    sequences. footprint-scan can search for\
      \ putative bindign sites in the\n    hole set of up- stream regions of an organism\
      \ while evaluating if the\n    detected binding sites are conserved (over-represented)\
      \ in the\n    respective orthologous sequences.\n\n     footprint-scan -v 2\
      \  -org Escherichia_coli_GCF_000005845.2_ASM584v2 \\\n        -taxon Enterobacteriaceae\
      \ -all_genes \\\n        -bgfile ${RSAT}/public_html/data/taxon_frequencies/Enterobacteriaceae/dyads_3nt_sp0-20_upstream-noorf_Enterobacteriaceae-noov-1str.freq.gz\
      \ \\\n        -m MetJ_Regulon_matrix.tab \\\n        -matrix_format tab \\\n\
      \        -matrix_suffix RegulonDB \\\n        -sep_genes\n\n\e[1mSEE ALSO\e\
      [0m\n  \e[1mfootprint-discovery\e[0m\n    The difference betsween \e[33mfootprint-scan\e\
      [0m and \e[33mfootprint-discovery\e[0m is that\n    \e[33mfootprint-scan\e[0m\
      \ requires prior knowledge of the motifs (in the form of\n    position-specific\
      \ matrices), whereas \e[33mfootprint-discovery\e[0m perfoms \e[33mab\n    initio\e\
      [0m motif discovery.\n\n\e[1mWISH LIST\e[0m\n  \e[1mOptions to be added\e[0m\n\
      \    \e[1m-rand\e[0m\n        When the option \e[33m-rand\e[0m is activated,\
      \ \e[33mfootprint-scan\e[0m scans random\n        selections of promoters rather\
      \ than promoters of orthologs.\n\n        This option serves to perform negative\
      \ controls in orde to estimate\n        empirically the rate of false prediction\
      \ and check its\n        correspondence with the theoretical estimation of the\
      \ significance.\n\n        The random selections are done by passing the option\
      \ \e[33m-rand\e[0m to the\n        program \e[33mget-orthologs\e[0m.\n\n   \
      \ \e[1m-crer\e[0m\n        Return Cis-Regulatory elements Enriched-Regions (CRER).\n\
      \n        Calculate the statistical significance of the number of hits in\n\
      \        windows of variable sizes. The number of hits is the sum of matches\n\
      \        above a predefined threshold set on hits p-values, for all matrices\n\
      \        and on both strands (if -2str). The maximum size for a CRER is\n  \
      \      defined by the option -crer_max.\n\n        The prior probability to\
      \ find an instance of the motif is the same\n        for all matrices, and corresponds\
      \ to the chosen pval threshold.\n        Within a region of maximal CRER size,\
      \ subwindows are defined between\n        each hits, and the observed number\
      \ of matches in a subwindow is the\n        sum of hits above the threshold.\
      \ The significance of the observed\n        number of matches in a subwindow\
      \ is estimated by calculating a\n        P-value using the binomial distribution\
      \ (Aerts et al., 2003).\n\n    \e[1m-lth_crer_size\e[0m\n        Minimal CRER\
      \ size in bps\n\n    \e[1m-crer_pval\e[0m\n        Pval cutoff for selecting\
      \ CRERs\n\n    \e[1m-uth_crer_size\e[0m\n        Maximal CRER size in bps\n\n\
      \  \e[1mRevise the manual\e[0m\n    The manual is still very incomplete, Jacques\
      \ van Helden needs to revise\n    and complete it.\n\n  \e[1mSupport as Web\
      \ services\e[0m\n    On the basis of the existing Web service for footprint-discovery.\n\
      \n  \e[1mWeb interface\e[0m\n    Alejandra Medina-Rivera will implement the\
      \ Web interface. It would be\n    more convenient to program the Web page after\
      \ the Web services, in order\n    to benefit ffrom the support of Web services\
      \ (including the token). To\n    be checked with Morgane Thomas-Chollier & Olivier\
      \ Sand.\n\n  \e[1mTutorial\e[0m\n    It would be worth preparing a tutorial\
      \ (or a chapter in Methods in\n    Molecular Biology) to explain in detail the\
      \ interpretation of the\n    result.\n\n    The tutorial could cover the 3 interfaces\
      \ (command-line, Web services\n    and Web form).\n\n  \e[1mMotif co-occurrences\e\
      [0m\n    After having detected the motifs in the different sequences, analyze\n\
      \    their co-occurrences in order to report the factors having sites in the\n\
      \    same sequences (putatively interacting factors). Actually , this option\n\
      \    should be implemented in matrix-scan rather than footprint-scan, because\n\
      \    it applies to any type of analysis.\n\n  \e[1mNeighbout gene name in output\
      \ table\e[0m\n    Add name of upstream neighbour to the synthetic tables, in\
      \ order to\n    detect pairs of gene sharing the same promoter.\n\n\e[1mOPTIONS\e\
      [0m\n    \e[1m-m matrix_file\e[0m\n        Matrix file. This argument is mandatory.\n\
      \n        This argument can be used iteratively to scan the sequence with\n\
      \        multiple matrices.\n\n    \e[1m-matrix_format matrix_format\e[0m\n\
      \        Matrix format. Default is tab. This argument is mandatory.\n\n    \e\
      [1m-matrix_suffix matrix_suffix\e[0m\n        Matrix suffix. This argument is\
      \ mandatory.\n\n        The matrix suffix indicates the nature of the matrix\
      \ file. For\n        example, if your matrix file contains a single matrix for\
      \ a\n        transcription factor (say LexA), you can indicate it with\n\n \
      \       -matrix_suffix LexA\n\n        whereas if your matrix files contains\
      \ all the matrices from the\n        RegulonDB database, you can specify\n\n\
      \        -matrix_suffix RegulonDB\n\n        The matrix suffix will be concatenated\
      \ to the output prefix, in\n        order to maintain separate output files\
      \ for distinct analyses\n        performed on the same promoter sequences. For\
      \ example, if you run\n        successively the analysis with the matrix LexA,\
      \ and then with the\n        matrix CRP, you don't want to loose the results\
      \ of the first\n        scanning when running the second scanning.\n\n    \e\
      [1m-tf transcription_factor\e[0m\n        Most matrices are derived from specific\
      \ TFBS, so they represent the\n        preferential sequence where a TF binds.\
      \ This option will search for\n        all the genomes in the given taxon where\
      \ there is an ortholog for\n        the specified tf. Orthologs for the query\
      \ genes will only be\n        retrived if the organism has an ortholog for the\
      \ TF.\n\n        -tf gene_name\n\n        If the option -matrix_table is used\
      \ instead of the name of an\n        specific TF specify the names are in the\
      \ file using:\n\n        -tf file\n\n    \e[1m-pseudo #\e[0m\n        Pseudo-count\
      \ for the matrix (default: 1). See matrix-scan for\n        details.\n\n   \
      \ \e[1m-bgfile background_file\e[0m\n        Background model file.\n\n    \e\
      [1m-bg_format background_format\e[0m\n        Format of background model file.\
      \ For supported formats see:\n        convert-background-model -h\n\n    \e\
      [1m-bginput\e[0m\n        Calculate background model from the input sequence\
      \ set.\n\n    \e[1m-markov\e[0m\n        Order of the markov chain for the background\
      \ model.\n\n        This option is incompatible with the option -bgfile.\n\n\
      \    \e[1m-window\e[0m\n        Size of the sliding window for the background\
      \ model calculation.\n        When this option is specified, the matrix pseudo-count\
      \ is equally\n        distributed.\n\n        The background model is calculated\
      \ locally at each step of the scan,\n        by computing transition frequencies\
      \ from a sliding window centred\n        around the considered segment. The\
      \ model is thus updated at each\n        scanned position. This model is called\
      \ \"adaptive\". Note that the\n        sliding window must be large enough to\
      \ train the local Markov model.\n        The required sequence length increases\
      \ exponentially with the Markov\n        order. This option is thus usually\
      \ suitable for low order models\n        only (-markov 0 to 1).\n\n        This\
      \ option is incompatible with the option -bgfile.\n\n    \e[1m-tree\e[0m Phylogenetic\
      \ tree use for the Bayesian Branch Length Scoring task,\n    it should be in\
      \ Newick format with distances and leaf names.\n    \e[1m-bbls_draw\e[0m Fomat\
      \ for the output image. Represents the phylogenetic tree\n    of organisms with\
      \ ortholog genes. Shows the conservation of the motif\n    across the tree over\
      \ the p-value. The default value is png (png, pdf or\n    none).\n    \e[1m-bg_pseudo\
      \ #\e[0m\n        Pseudo frequency for the background model. Value must be a\
      \ real\n        between 0 and 1.\n\n        If this option is not specified,\
      \ the pseudo-frequency value depends\n        on the background calculation.\n\
      \n        For -bginput and -window, the pseudo frequency is automatically\n\
      \        calculated from the length (L) of the sequence following this\n   \
      \     formula:\n\n        sqrt(L)/(L+sqrt(L))\n\n        For -bgfile, default\
      \ value is 0.05.\n\n        In other cases, if the length (L) of the training\
      \ sequence is known\n        (e.g. all promoters for the considered organism),\
      \ the value can be\n        set manually by using the option -bg_pseudo. In\
      \ such case, the\n        background pseudo-frequency might be set, as suggested\
      \ by Thijs et\n        al., to the following value:\n\n        sqrt(L)/(L+sqrt(L))\n\
      \n    \e[1m-filter\e[0m\n        Filter TF-interactions that are not present\
      \ on the query organism.\n        The option -filter_pval can be used to set\
      \ the threshold for the\n        detected sites.\n\n    \e[1m-filter_bgfile\e\
      [0m\n        Background model file for the scanning of query sequences for\n\
      \        filtering,.\n\n    \e[1m-filter_pval\e[0m\n        Set the threshold\
      \ to filter out TF-interactions that are not present\n        on the query organism.\n\
      \n    \e[1m-pval\e[0m\n        Set the threshold on site p-value to report only\
      \ the evaluated\n        over-representations of binding sites whenever the\
      \ individual sites\n        crossed it. The default is set to 1e-4.\n\n    \e\
      [1m-occ_th\e[0m\n        Threshold set on the occurrence significance (over-representation)\n\
      \        for scores that have p-value equal or smaller thant the one given as\n\
      \        threshold in the option \e[33m-pval\e[0m.\n\n        All genes are\
      \ completely analyzed, only the genes that pass both\n        threshold on pvalue\
      \ and occ_sig will be included on the synthesis\n        table and html of the\
      \ matrix.\n\n        Default is set to 5 .\n\n    \e[1m-occ_sig_opt\e[0m\n \
      \       Additional options passed to matrix-scan for the test of\n        over-representation\
      \ of matrix hits.\n\n        Supported threshold fields for the matches : score\
      \ pval eval sig\n        normw proba_M proba_B rank crer_sites crer_size\n\n\
      \        Supported threshold fields for score distributions: occ occ_sum\n \
      \       inv_cum exp_occ occ_pval occ_eval occ_sig occ_sig_rank\n\n        Examples:\
      \ To return only the \"best\" score for each gene -occ_sig_opt\n        '-uth\
      \ rank 1'\n\n        To analyze the distribution only above a weight threshold\
      \ of 7.\n        -occ_sig_opt '-lth score 7'\n\n        To analyze the distribution\
      \ for sites having a P-value threshold of\n        1e-3. -occ_sig_opt '-uth\
      \ pval 1e-3'\n\n        Note: the argument passed to matrix-scan is delimited\
      \ by single\n        quotes, and can thus not contain any quote.\n\n    \e[1m-info_lines\e\
      [0m\n        Draw reference lines on the significance profile plots, to highlight\n\
      \        some particular values.\n\n        - horizontal axis (Y=0), in violet\n\
      \n        - vertical axis (X=0), in violet\n\n        - the weight value associated\
      \ with maximal significance (only\n        weights >=0 are considered), in red\n\
      \n    \e[1m-occ_sig_graph_opt\e[0m\n        Additional options passed to XYgraph\
      \ for drawing the occurrence\n        significance graph.\n\n        Note: the\
      \ argument passed to XYgraph is delimited by single quotes,\n        and can\
      \ thus not contain any quote.\n\n    \e[1m-plot_format\e[0m\n        Format\
      \ for the occurrence plots (occurrence frequencies, occurrence\n        sinificance).\
      \ Supported: all formats supported by the program\n        XYgraph\n\n    \e\
      [1m-scan_opt\e[0m\n        Additional options passed to matrix-scan for site\
      \ detection and\n        feature-map drawing.\n\n        Examples:\n\n     \
      \   Scan sequences with an upper threshold of 0.001 on pval. -scan_opt\n   \
      \     '-uth pval 0.001'\n\n        Note: the argument passed to matrix-scan\
      \ is delimited by single\n        quotes, and can thus not contain any quote.\n\
      \n        Default: By default sites are filtered with a threshodl on p-value\n\
      \        on 1e-4\n\n    \e[1m-map_opt\e[0m\n        Additional options passed\
      \ to feature-map for feature-map drawing.\n\n        Examples:\n\n        Change\
      \ the thickness of the maps -map_opt '-mapthick 12'\n\n        Write the weight\
      \ score above each site (also activate the auto\n        adjustment of map thickness\
      \ to ensure there is enough space for\n        drawing the labels). -map_opt\
      \ '-label score -mapthick auto'\n\n        Note: the argument passed to feature-map\
      \ is delimited by single\n        quotes, and can thus not contain any quote.\n\
      \n        Default= \" -mlen 300 -mspacing 2\"\n\n    \e[1m-rand\e[0m\n     \
      \   When the option -rand is activated, the program replaces each\n        ortholog\
      \ by a gene selected at random in the genome where this\n        ortholg was\
      \ found.\n\n        This option is used (for example by footprint-scan and\n\
      \        footprint-discovery to perform negative controls, i.e. check the\n\
      \        rate of false positives in randomly selected promoters of the\n   \
      \     reference taxon.\n\n    \e[1m-matrix_table matrix_table_file.tab\e[0m\n\
      \        A table providing the paths to matrix files (one file per row) +\n\
      \        optional columns to specify parameters (factor name, format) for\n\
      \        each martrix.\n\n        The matrix list is provided as a tab-delimited\
      \ text file, where each\n        row specifies one matrix.\n\n        - The\
      \ first column indicates the path to a file containing a single\n        matrix\
      \ (in the format specified with -matrix_format).\n\n        - The second column\
      \ (optional) indicates a common name for the\n        matrix (e.g. transcription\
      \ factor name) which will be displayed in\n        the synthetic report tables.\
      \ If the option '\e[33m-tf file\e[0m' is used, this\n        column must indicate\
      \ the name of the transcription factor on which\n        the taxonomic filter\
      \ will be applied (i.e. the analysis will only be\n        led in species of\
      \ the taxon where an ortholog has been found for the\n        factor).\n\n \
      \       - The third column (optional) indicates the format of each matrix,\n\
      \        in case the search would be done with matrices obtained from\n    \
      \    different sources (e.g. TRANSFAC, consensus, meme). Note that if the\n\
      \        file contains a third column, the option -matrix_format cannot be\n\
      \        used.\n\n    \e[1m-batch_matrix \e[0m\n        Generate one footprint-scan\
      \ command per matrix and post it on the\n        queue of a PC cluster.\n\n\
      \    \e[1m-skip_m #\e[0m\n        Skip the first # matrices in the matrix_table\
      \ (useful for quick\n        testing and for resuming interrupted tasks when\
      \ using a matrix_table\n        or when several matrices are entered with the\
      \ option -m ).\n\n    \e[1m-last_m #\e[0m\n        Stop after having treated\
      \ the first # matrices in the matrix table\n        (useful for quick testing\
      \ when using a matrix_table or when several\n        matrices are entered with\
      \ the option -m ).\n\n    \e[1m-v #\e[0m\n        Level of verbosity (detail\
      \ in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display full\
      \ help message.\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-org\
      \ query_organism\e[0m\n        Query organism, to which the query genes belong.\n\
      \n    \e[1m-taxon reference_taxon\e[0m\n        Reference taxon, in which orthologous\
      \ genes have to be collected.\n\n        Alternatively, reference organisms\
      \ can be specified with the option\n        -org_list.\n\n    \e[1m-org_list\
      \ organisms_list_file\e[0m\n        This option gives the posibility to analyse\
      \ a user-specified set of\n        reference organisms rather than a full taxon.\n\
      \n        File format: the first word of each line is used as organism ID. Any\n\
      \        subsequent text is ignored. The comment char is \";\".\n\n        This\
      \ option is incompatible with the option \"-taxon\".\n\n    \e[1m-unique_species\e\
      [0m\n        Retain at most one organism per species. This enables to filter\
      \ out\n        the numerous strains sequences for some species of particular\n\
      \        interest. (e.g. Escherichia coli, Bacillus subtilis, ...).\n\n    \e\
      [1m-unique_genus\e[0m\n        Retain at most one organism per genus. Same filter\
      \ as for\n        -unique_species, but at the level of the genus. At this level\
      \ we\n        don't expect to have much redundancy, but this option can be useful\n\
      \        to select a reasonable number of organisms, e.g. to draw\n        phylogenetic\
      \ profile heatmaps.\n\n    \e[1m-no_purge\e[0m\n        This option can only\
      \ be used combined with the -org_list option,\n        this gives the posibility\
      \ to analyse a given set of sequences\n        managing sequence redundancy\
      \ using a list of \"no redundant\"\n        organisms.\n\n        The file format\
      \ is one organisms per line, the comment char is \";\"\n\n    \e[1m-orthologs_list\
      \ file\e[0m\n        This option gives the posibility to analyse a user-specified\
      \ set of\n        orthologs for specific reference organisms instead of using\
      \ the BBH\n        set of orthologs provided by RSAT.\n\n        The query genes\
      \ included here will be the ones analyzed by the\n        program.\n\n     \
      \   File format: Tab delimited file with three columns.\n\n          ID of the\
      \ query gene (in the query organism)\n          ID of the reference gene\n \
      \         ID of the reference organism\n\n        Further columns will be ignored.\
      \ The comment char is \";\".\n\n        This option is incompatible with the\
      \ option \"-taxon\", and \"-bg_model\n        taxfreq\" option.\n\n    \e[1m-use_tree_org\e\
      [0m\n        Only uses organisms in the phylogenetic tree for orthologs search.\n\
      \        Especified by option -tree. Incompatible with \"-taxon\",\n       \
      \ \"-orthologs_list\" and \"-org_list\".\n\n    \e[1m-q query\e[0m\n       \
      \ Query gene.\n\n        This option can be used iteratively on the command\
      \ line to specify\n        multiple genes.\n\n    \e[1m-genes\e[0m\n       \
      \ Specify a file containing a list of genes. Multiple genes can also\n     \
      \   be specified by using iteratively the option -q.\n\n    \e[1m-all_genes\e\
      [0m\n        Automatically analyze all the genes of a query genome, and store\n\
      \        each result in a separate folder (the folder name is defined\n    \
      \    automatically).\n\n    \e[1m-max_genes\e[0m\n        Maximal number of\
      \ genes to analyze.\n\n    \e[1m-skip #\e[0m\n        Skip the first # genes\
      \ (useful for quick testing and for resuming\n        interrupted tasks).\n\n\
      \    \e[1m-last #\e[0m\n        Stop after having treated the first # genes\
      \ (useful for quick\n        testing).\n\n    \e[1m-o output_root_dir\e[0m\n\
      \        Main output directory. The results will be dispatched in\n        sub-directories,\
      \ defined according to the taxon, query organism and\n        query gene name(s).\n\
      \n        If the main output dir is not specified, the program automatically\n\
      \        sets it to \"footprints\".\n\n    \e[1m-batch\e[0m\n        Generate\
      \ one command per query gene, and post it on the queue of a\n        PC cluster.\n\
      \n    \e[1m-dry\e[0m\n        Dry run: print the commands but do not execute\
      \ them.\n\n    \e[1m-nodie\e[0m\n        Do not die in case a sub-program returns\
      \ an error.\n\n        The option -nodie allows you to circumvent problems with\
      \ specific\n        sub-tasks, but this is not recommended because the results\
      \ may be\n        incomplete.\n\n    \e[1m-sep_genes\e[0m\n        Search footprints\
      \ for each query gene separately. The results are\n        stored in a separate\
      \ folder for each gene. The folder name is\n        defined automatically.\n\
      \n        By default, when several query genes are specified, the program\n\
      \        collects orthologs and analyzes their promoters altogether. The\n \
      \       option \e[33m-sep\e[0m allows to automatize the detection of footprint\
      \ in a set\n        of genes that will be treated separately.\n\n    \e[1m-infer_operons\e\
      [0m\n        Infer operons in order to retrieve the promoters of the predicted\n\
      \        operon leader genes rather than those located immediately upstream\n\
      \        of the orthologs. This method uses a threshold on the intergenic\n\
      \        distance.\n\n    \e[1m-dist_thr value\e[0m\n        Specify here the\
      \ intergenic distance threshold in base pairs. Pair\n        of adjacent genes\
      \ with intergenic distance equal or less than this\n        value are predicted\
      \ to be within operon. (default : 55)\n\n    \e[1m-task\e[0m\n        Specify\
      \ a subset of tasks to be executed.\n\n        By default, the program runs\
      \ all necessary tasks. However, in some\n        cases, it can be useful to\
      \ select one or several tasks to be\n        executed separately. For instance,\
      \ after having collected all the\n        promoter sequences of ortholog genes,\
      \ one might desire to run the\n        pattern detection with various parameter\
      \ values without having to\n        retrieve the same sequences each time.\n\
      \n        Beware: task selection requires expertise, because most tasks\n  \
      \      depends on the prior execution of some other tasks in the workflow.\n\
      \        Selecting tasks before their prerequisite tasks have been completed\n\
      \        will provoke fatal errors.\n\n        \e[1mSupported tasks:\e[0m\n\n\
      \        For all footprint programs (\e[33mfootprint-discovery\e[0m,\n     \
      \   \e[33mfootprint-scan\e[0m).\n\n            \e[33mall\e[0m Run all supported\
      \ tasks. If no task is specified, all tasks\n                are performed.\n\
      \n            \e[33moperons\e[0m\n                Infer operons (using \e[33minfer-operons\e\
      [0m. This option should be\n                used only for Bacteria.\n\n    \
      \        \e[33mquery_seq\e[0m\n                Retrieve upstream sequence of\
      \ the query genes (using\n                \e[33mretrieve-seq\e[0m).\n\n    \
      \        \e[33morthologs\e[0m\n                Identify theorthologs of the\
      \ query genes in the selected\n                taxon (using \e[33mget-orthologs\e\
      [0m).\n\n            \e[33mortho_seq\e[0m\n                Retrieve upstream\
      \ sequences of the orthologs (using\n                \e[33mretrieve-seq-multigenome\e\
      [0m).\n\n            \e[33mpurge\e[0m\n                Purge upstream sequences\
      \ of the orthologs (using \e[33mpurge-seq\e[0m).\n\n            \e[33mgene_index\e\
      [0m\n                Generate an HTML index with links to the result files.\n\
      \n                With the option -sep_genes, one index is generated for each\n\
      \                gene separately. An index summarizing the results for all\n\
      \                genes can be generated using the option -index.\n\n       \
      \     \e[33mindex\e[0m\n                Generate a HTML table with links to\
      \ the individual result\n                files. The table contains one row per\
      \ query gene, one column\n                by output type (sequences, dyads,\
      \ maps, ...) for\n                footpritn-discovery and for footprint-scan\
      \ on line per\n                TF-gene interacction.\n\n        Tasks specific\
      \ to \e[33mfootprint-discovery\e[0m\n\n            \e[33mfilter_dyads\e[0m\n\
      \                Detect all dyads present with at elast one occurrence in the\n\
      \                upstream sequence of the query gene (using \e[33mdyad-analysis\e\
      [0m).\n                Those dyads will be used as filter if the option \e[33m-filter\e\
      [0m has\n                been specifed.\n\n            \e[33mdyads\e[0m\n  \
      \              Detect significantly over-represented in upstream sequences\n\
      \                of orhtologs (using \e[33mdyad-analysis\e[0m).\n\n        \
      \    \e[33mmap\e[0m Draw feature maps showing the location of over-represented\n\
      \                dyads in upstream sequences of promoters (using\n         \
      \       \e[33mfeature-map\e[0m).\n\n            \e[33mnetwork\e[0m\n       \
      \         Infer a co-regulation network from the footprints, as\n          \
      \      described in Brohee et al. (2011).\n\n            \e[33mindex\e[0m\n\
      \                Generate an index file for each gene separately. The index\n\
      \                file is in the gene-specific directory, it is complementary\n\
      \                to the general index file generated with the task\n       \
      \         \"synthesis\".\n\n        Tasks specific to \e[33mfootprint-scan\e\
      [0m\n\n            \e[33morthologs_tf\e[0m\n                Ortholgous genes\
      \ will be obtained for the genes realted to\n                the specified trasncription\
      \ factors. This task shoulb be\n                executed befor the option -orthologs\
      \ when a tf is specified.\n                See -tf option description for more\
      \ information.\n\n            \e[33mocc_sig\e[0m\n                Compute the\
      \ significance of number of matrix hit occurrences\n                as a function\
      \ of the weight score (\e[33musing matrix-scan\e[0m and\n                \e\
      [33mmatrix-scan-quick\e[0m).\n\n            \e[33mocc_sig_graph\e[0m\n     \
      \           Generate graphs showing the distributions of occurrences and\n \
      \               their significances, as a function of the weight score\n   \
      \             (using >XYgraph>).\n\n            \e[33mscan\e[0m\n          \
      \      Scan upstream sequences to detect hits above a given\n              \
      \  threshold (using \e[33mmatrix-scan\e[0m).\n\n            \e[33mmap\e[0m Draw\
      \ the feature map of the hits (using \e[33mfeature-mp\e[0m).\n\n    \e[1m-rand\e\
      [0m\n        When the option -rand is activated, the program replaces each\n\
      \        ortholog by a gene selected at random in the genome where this\n  \
      \      ortholg was found.\n\n        This option is used (for example by footprint-scan\
      \ and\n        footprint-discovery to perform negative controls, i.e. check\
      \ the\n        rate of false positives in randomly selected promoters of the\n\
      \        reference taxon.\n\n    \e[1m-map_format\e[0m\n        Format for the\
      \ feature map.\n\n        Supported: any format supported by the program feature-map.\n\
      \n    \e[1m-index\e[0m\n        Deprecated, replaced by the task \"index\".\n\
      \n    \e[1m-diamond\e[0m\n        Use ranks_dmnd.tab from diamond blast computed\
      \ in genome-blast.\n\n    \e[1m-synthesis\e[0m\n        This option generated\
      \ synthetic tables (in tab-delimited text and\n        html) for all the results.\
      \ It should be combined with the option\n        \e[33m-sep_genes\e[0m. The\
      \ synthetic tables contain one row per gene, and one\n        column per parameter.\
      \ They summarize the results (maximal\n        significance, top-ranking motifs)\
      \ and give pointers to the detailed\n        result files.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - implant-sites
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: implant-sites
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '20181203'
      optional: false
    - !Positional
      description: sequences
      position: 0
      name: motifs
      optional: false
    - !Positional
      description: random-sites
      position: 0
      name: random-motif
      optional: false
    named:
    - !Flag
      description: "#, --verbosity=#   set verbosity to level #\n0 no verbosity\n\
        1 max verbosity"
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --input=#       read sequence from # (must be in FASTA format)\n\
        if not specified, the standard input is used"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --output=#      output results to #\nif not specified, the\
        \ standard output is used"
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --sites=#       read sites from # (must be in FASTA format)'
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --features=#    store site positions in #'
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not allow overlapping sites
      synonyms:
      - --noov
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "NAME\n        implant-sites\n\nVERSION\n        20181203\n\nAUTHOR\n\
      \        Matthieu Defrance <matthieu.dc.defrance@ulb.ac.be>\n\nDESCRIPTION\n\
      \        implants sites in DNA sequences\n\nCATEGORY\n        motifs\n     \
      \   sequences\n\nUSAGE        \n        implant-sites -i sequences -s sites\
      \ [-h]\n\nARGUMENTS\n    --version             show program's version number\
      \ and exit\n    -h, --help            show this help message and exit\n    -v\
      \ #, --verbosity=#   set verbosity to level #\n                            \
      \  0 no verbosity\n                              1 max verbosity\n    -i #,\
      \ --input=#       read sequence from # (must be in FASTA format)\n         \
      \                 if not specified, the standard input is used\n    -o #, --output=#\
      \      output results to #\n                          if not specified, the\
      \ standard output is used\n    -s #, --sites=#       read sites from # (must\
      \ be in FASTA format)\n    -f #, --features=#    store site positions in #\n\
      \    --noov                do not allow overlapping sites\n    \nSEE ALSO\n\
      \        random-motif\n        random-sites\n\n"
    generated_using: &id003
    - --help
  - !Command
    command:
    - rsat
    - pattern-assembly
    positional:
    - !Positional
      description: 1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: pattern-assembly
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: These options are mutually incompatible.
      position: 0
      name: submitted.
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: "strand insensitive assembly (default).\nWith the strand insensitive\
        \ option, patterns can be\nused either in direct or reverse complement\norientation\
        \ for assembly. For each pattern, the\norientation which offers the best match\
        \ is chosen."
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: strand sensitive assembly.
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#   score column\nPattern assembly is a NP-hard problem, i.e.\
        \ the time\nof calculation increases exponentially with the number\nof patterns.\
        \ Beyond a certain number of patterns, it\nis impossible to envisage all possible\
        \ assemblie in\norder to select the best ones. pattern-assembly\nimplements\
        \ a heuristic which is sensitive to the order\nof entry of the patterns. When\
        \ a score column is\nspecified, patterns are incorporated accordingly to\n\
        their scores (higher scores are incorporated first."
      synonyms:
      - -sc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "cluster column\nDefine a column containing cluster names or numbers.\n\
        If cluster column is specified, each cluster is\ntreated as a separate set\
        \ of patterns for assembly."
      synonyms:
      - -cc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximum flanking segment size (default 1).\nThe flanking segment\
        \ is the portion of a fragment that\nextends outside of the assembly on which\
        \ it is aligned."
      synonyms:
      - -maxfl
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximum allowed substitutions (default 0)."
      synonyms:
      - -subst
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nminimum number of matching residues to include a\npattern in\
        \ an assembly (default 0)."
      synonyms:
      - -match
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nminimum matching weight to include a pattern in an\nassembly\
        \ (default 0). The weight is the sum\nof informative residue matches. A single-letter\
        \ match\nhas weight 1. Matches between ambiguous nucleotides\nhave lower weight\
        \ (for example A versus [AT] has\nweight 0.5)."
      synonyms:
      - -weight
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximal number of assemblies (default: 5)"
      synonyms:
      - -max_asmb_nb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximal number of assemblies per cluster\n(default: 2).\nThis\
        \ option is only valid in combination with the\noption -cc."
      synonyms:
      - -max_asmb_per_cluster
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximal assembly size, i.e. the number of patterns per\nalignment\
        \ group (default: 50)"
      synonyms:
      - -max_asmb_size
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximal width for an assembly (default: 0)"
      synonyms:
      - -max_asmb_width
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Report the isolated words (i.e. words that do not\nmatch any other\
        \ words) separately. This was the\ndefault behaviour of the program before\
        \ April 2011.\nThe separate list of isolaed words presents the\nadvantage\
        \ of compacity (no need to create one assembly\nfor each isolated word), but\
        \ a drawback is that some\nsignificant single words may appear after less\n\
        significant assemblies of several words, and thus be\nignored for further\
        \ processing (e.g. by\nmatrix-from-patterns)."
      synonyms:
      - -single_sep
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nDefault: 100\nmaximum number of patterns to assemble.  If the\
        \ number\nof patterns in the input file exceeds the maximal\nnumber, the assembly\
        \ is restrictedd with the top patterns\nonly."
      synonyms:
      - -toppat
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximum number of allowed patterns (default\n0).  If the number\
        \ of patterns in the\ninput file exceeds the maximal number, the program\n\
        does not performa ny assembly, and returns a\ncancellation message."
      synonyms:
      - -maxpat
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tpattern-assembly\n\n        1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nUSAGE\n        pattern-assembly [-i inputfile] [-o outputfile] [-v]\n\nDESCRIPTION\n\
      \tAssemble a set of oligonucleotides or dyads into groups of\n\toverlapping\
      \ patterns (assemblies).\n\nCATEGORY\n\tsequences\n\nOPTIONS\n        -h   \
      \   (must be first argument) display full help message\n        -help   (must\
      \ be first argument) display options\n\t-v\tverbose\n\n\t-i inputfile\n\t\t\
      if not specified, the standard input is used.\n\t\tThis allows to place the\
      \ command within a pipe.\n\n\t-o outputfile\n\t\tif not specified, the standard\
      \ output is used.\n\t\tThis allows to place the command within a pipe.\n\n\t\
      -2str\tstrand insensitive assembly (default).\n\t\tWith the strand insensitive\
      \ option, patterns can be\n\t\tused either in direct or reverse complement\n\
      \t\torientation for assembly. For each pattern, the\n\t\torientation which offers\
      \ the best match is chosen.\n\n\t-1str\tstrand sensitive assembly.\n\n\t-sc\
      \ #\tscore column\n\t\tPattern assembly is a NP-hard problem, i.e. the time\n\
      \t\tof calculation increases exponentially with the number\n\t\tof patterns.\
      \ Beyond a certain number of patterns, it\n\t\tis impossible to envisage all\
      \ possible assemblie in\n\t\torder to select the best ones. pattern-assembly\n\
      \t\timplements a heuristic which is sensitive to the order\n\t\tof entry of\
      \ the patterns. When a score column is\n\t\tspecified, patterns are incorporated\
      \ accordingly to\n\t\ttheir scores (higher scores are incorporated first.\n\n\
      \t-cc\tcluster column\n\t\tDefine a column containing cluster names or numbers.\n\
      \t\tIf cluster column is specified, each cluster is\n\t\ttreated as a separate\
      \ set of patterns for assembly.\n\n\t-maxfl #\n\t\tmaximum flanking segment\
      \ size (default 1).\n\t\tThe flanking segment is the portion of a fragment that\n\
      \t\textends outside of the assembly on which it is aligned.\n\n\t-subst #\n\t\
      \tmaximum allowed substitutions (default 0).\n\n\t-match #\n\t\tminimum number\
      \ of matching residues to include a\n\t\tpattern in an assembly (default 0).\n\
      \n\t-weight #\n\t\tminimum matching weight to include a pattern in an\n\t\t\
      assembly (default 0). The weight is the sum\n\t\tof informative residue matches.\
      \ A single-letter match\n\t\thas weight 1. Matches between ambiguous nucleotides\n\
      \t\thave lower weight (for example A versus [AT] has\n\t\tweight 0.5).\n\n\t\
      -max_asmb_nb #\n\t\tmaximal number of assemblies (default: 5)\n\n\t-max_asmb_per_cluster\
      \ #\n\t\tmaximal number of assemblies per cluster\n \t\t(default: 2).\n\n\t\t\
      This option is only valid in combination with the\n\t\toption -cc. \n\n\t-max_asmb_size\
      \ #\n\t\tmaximal assembly size, i.e. the number of patterns per\n\t\talignment\
      \ group (default: 50)\n\n\t-max_asmb_width #\n\t\tmaximal width for an assembly\
      \ (default: 0)\n\n\t-single_sep\n\n\t\tReport the isolated words (i.e. words\
      \ that do not\n\t\tmatch any other words) separately. This was the\n\t\tdefault\
      \ behaviour of the program before April 2011. \n\n\t\tThe separate list of isolaed\
      \ words presents the\n\t\tadvantage of compacity (no need to create one assembly\n\
      \t\tfor each isolated word), but a drawback is that some\n\t\tsignificant single\
      \ words may appear after less\n\t\tsignificant assemblies of several words,\
      \ and thus be\n\t\tignored for further processing (e.g. by\n\t\tmatrix-from-patterns).\n\
      \n\n    Restrictions in the number of patterns\n\n       \tThe time of assembly\
      \ increases quadratically with the number\n       \tof patterns to assemble.\
      \ When too many patterns are submitted,\n       \tthis can represent a huge\
      \ time. Moreover, when too many\n       \tpatterns are returned by a motif discovery\
      \ program, it\n       \tgenerally reflects a problem (redundant sequences, wrong\n\
      \       \tselection of the threshold). Two options (-toppat and -maxpat)\n \
      \      \tcan be used to treat the cases when too many patterns are\n       \t\
      submitted.  These options are mutually incompatible.\n\n\t-toppat #\n\t\tDefault:\
      \ 100\n\t\tmaximum number of patterns to assemble.  If the number\n\t\tof patterns\
      \ in the input file exceeds the maximal\n\t\tnumber, the assembly is restrictedd\
      \ with the top patterns\n\t\tonly.\n\n\t-maxpat #\n\t\tmaximum number of allowed\
      \ patterns (default\n\t\t0).  If the number of patterns in the\n\t\tinput file\
      \ exceeds the maximal number, the program\n\t\tdoes not performa ny assembly,\
      \ and returns a\n\t\tcancellation message.\n\n\nINPUT FORMAT\n\tEach pattern\
      \ must appear as the first word of a line.\n\tLines starting with a semicolon\
      \ (;) are ignored.\n\nOUTPUT FORMAT\n\n\tThe program returns groups of aligned\
      \ patterns (oligonucleotides or\n\tdyads).  The information associated to each\
      \ pattern in the input file\n\tis returned besides the same oligo in the output\
      \ file.\n\nEXAMPLES\n       pattern-assembly -v -i mydata -o myresult -2str\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - compare-patterns
    positional:
    - !Positional
      description: AUTHOR
      position: 0
      name: compare-patterns
      optional: false
    - !Positional
      description: This program is typically used to compare a set of discovered
      position: 0
      name: supported.
      optional: false
    - !Positional
      description: sequences
      position: 0
      name: util
      optional: false
    - !Positional
      description: "seq1 and seq2 must be DNA sequences (not peptidic). \nIUPAC degenerate\
        \ code is accepted in seq1 as well as seq2."
      position: 0
      name: PATTERNS
      optional: false
    - !Positional
      description: number of matching positions
      position: 0
      name: match
      optional: false
    - !Positional
      description: "P-value for a single comparison. \nThis represents the probability,\
        \ for the comparison\nbetween two sequences, to return a match.\nWhen the\
        \ simple nucleotide alphabet (A, C, G, T) is\nused, the probability of random\
        \ match is estimated to\n1/4: given the letter in the first sequence, the\n\
        probability that a random letter would match it is\n1/4.\nNote that this assumes\
        \ that nucleotides are considered\nequiprobable.\nThe program also scores\
        \ matches between the\ndegenerated nucleotides defined by the IUPAC\ncommission\
        \ (http://www.iupac.org/).\ncode    nucleotides     mnemonics\n---------------------------------------------------------\n\
        A                       Adenine\nC                       Cytosine\nG     \
        \                  Guanine\nT                       Thymine\nR       = A or\
        \ G        puRines\nY       = C or T        pYrimidines\nW       = A or T\
        \        Weak hydrogen bonding\nS       = G or C        Strong hydrogen bonding\n\
        M       = A or C        aMino group at common position\nK       = G or T \
        \       Keto group at common position\nH       = A, C or T     not G\nB  \
        \     = G, C or T     not A\nV       = G, A, C       not T\nD       = G, A\
        \ or T     not C\nN       = G, A, C or T  aNy)\nThe probability of a match\
        \ between two degenerated\nnucleotides is calculated with the hypergeometric\n\
        distribution.\nThe underlying probabilistic model is that the two\nletters\
        \ to be macthed represent each a subset of the\nalphabet. The problem can\
        \ be thought of as an urn with\n4 balls, each ball representing one possible\n\
        nucleotide (A, C, G, T).\nFor the sake of illustration, let us assume that\
        \ we\nwant to compare the two IUPAC codes Y (C or T) and M\n(A or C). in the\
        \ urn (alphabet), we will label in\nblack the balls (nucleotides) comprised\
        \ in the first\nset (C and T). We can now consider the second IUPAC\nletter\
        \ as a random selection of 2 balls in this urn,\nwhich contains 2 black balls\
        \ (A, C) and 2 white balls\n(G, T). Our selection (C and T) contains one black\n\
        ball. It is thus a match.\nThe right tail of the hypergeometric distribution\n\
        allows us to calculate the probability to observe at\nleast one back ball\
        \ in a selection of 2 balls,\nselected at random in an urn with 2 black balls\
        \ and 2\nwhite balls.\nc      i  n-i     n\nPval = P(X >= c) = SUM  ( C  C\
        \     / C  )\ni=1     m  4-m     4\nWhere\nm   is the number of black balls\
        \ in the urn\n(nucleotides matching the first IUPAC letter)\n4-m is the number\
        \ of white balls in the urn\n(nucleotides not matching the first IUPAC\nletter)\n\
        n   is the number of nucleotides matched by the\nsecond IUPAC letter.\nc =\
        \ min(n,m) is the maximal number of common\nletters between the m nucleotides\
        \ of the 1st\nIUPAC letter and the n nucleotides of the 2nd\nIUPAC letter.\n\
        In our example (Y against M), m=2, n=2, c=min(2,2)=2.\nPval=0.83333\nWe can\
        \ check the generality of the formula with some\nexamples :\n- a trivial match\
        \ (e.g. N against A) should have a\nP-value of 1. In this case, m=4, n=1,\
        \ c=min(4,1)=1.\n1  0    1\nPval = P(X >= c) =  C  C  / C   = 4*1/4 = 1\n\
        4  0    4\n- a simple match between two non-degenerated letters\nshould have\
        \ a P-value of 1/4. Indeed, in this case\nn=1, m=1, c=min(1,1)=1.\n1  0  \
        \  1\nPval = P(X >= c) =  C  C  / C  = 0.25\n1  3    4\n- Interestingly, a\
        \ match between a IUPAC letter\nmatching 3 nucleotides (e.g. H = A, C or T)\
        \ letter\nanother matching 2 nucleotides (e.g. S = G or C)\nwill have a probability\
        \ to 1. Indeed, m=3, n=2 and\nc=min(3,2)=2, thus:\n2      i  2-i    2\nPval\
        \ = P(X >= c) = SUM  ( C  C    / C  )\ni=1     3  1      4\nThis reflects\
        \ the fact that it is impossible to\nhave not a single white ball in the selection,\
        \ when\nwe select 2 balls among a set of 3 black and 1\nwhite balls."
      position: 1
      name: Pval
      optional: false
    - !Positional
      description: "E-value for a single comparison between two sequences. \nThis\
        \ is a correction for multiple testing, taking\ninto account the fact that\
        \ a comparison between two\nsequences (or patterns) can already result in\
        \ some\nmulti-testing effects, for two reasons :\n- with the option -slide,\
        \ the two sequences are\ncompared with different offsets.\nEval_p = Pval *\
        \ noffs\n- with the option -2str, two comparisons are\nperformed per pair\
        \ of sequences. In this case,\nEval_p = Pval*2*noffs\nIt is useful to return\
        \ the Eval together with the\nnumber of offsets analyzed (corresponding to\
        \ the\nnumber of tests for a given pair of sequences).\n-return Pval,noffs,Eval,sig"
      position: 2
      name: Eval_p
      optional: false
    - !Positional
      description: Significance for a single comparison between two
      position: 3
      name: sig_p
      optional: false
    - !Positional
      description: "This is a simple logarithmic conversion of Eval_p.\nsig_p = -log10(Eval_p)"
      position: 4
      name: sequences.
      optional: false
    - !Positional
      description: "E-value for the whole analysis. \nThis E-value includes a correction\
        \ for the fact\nthat, usually, multiple sequences (patterns) are\ncompared\
        \ to multiple sequences (patterns).\nFor example, if the program is used to\
        \ compare an\noligo-analysis result file with a database of\nannotated sites,\
        \ the oligo file can typically\ncontain a dozen of words, and the database\
        \ several\nhundreds of sites."
      position: 5
      name: Eval_f
      optional: false
    - !Positional
      description: "Significance for the whole analysis. \nThis is a simple logarithmic\
        \ conversion of Eval_f.\nsig_f = -log10(Eval_f)"
      position: 6
      name: sig_f
      optional: false
    - !Positional
      description: "the weight reflects the number of matching positions,\nwith a\
        \ lower weight for matches between partially\nspecified nucleotides (IUPAC\
        \ codes).\nThe weight is calculated as\n-log4(Pval)\nFor an alignment between\
        \ non-ambigous nucleotides, the\nweight is maximal, and its value is the number\
        \ of\nmatching residues."
      position: 7
      name: weight
      optional: false
    - !Positional
      description: maximal weight for pattern 1
      position: 0
      name: max_w1
      optional: false
    - !Positional
      description: maximal weight for pattern 2
      position: 1
      name: max_w2
      optional: false
    - !Positional
      description: "lengths \nThis option returns 4 length values\nlen1   length of\
        \ sequence 1\nlen2   length of sequence 2\nmlen   length of the match\ntlen\
        \   total length of the alignment\ntlen = len1 + len2 - mlen"
      position: 0
      name: length
      optional: false
    - !Positional
      description: sequences to be compared
      position: 1
      name: seq
      optional: false
    - !Positional
      description: '----------'
      position: 0
      name: Thresholds
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "first sequence for the comparison\nThis argument can be repeated\
        \ on the same command line\nto enter multiple patterns."
      synonyms:
      - -seq1
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "second sequence for the comparison\nThe options -seq1 and -seq2\
        \ can be used iteratively to\nspecify multiple sequence patterns. Each sequence\
        \ of\ngroup 1 is then compared to each sequence of group 2.\nex: -seq1 gataag\
        \ -seq1 gattag -seq1 gataah\n-seq2 agataata -seq2 gtttag\nNote that when many\
        \ patterns have to be entered, the\noptions -file1 and -file2 are more convenient."
      synonyms:
      - -seq2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "file containing a list of patterns to be used as first\nsequences\
        \ for the comparison (see format below)."
      synonyms:
      - -file1
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "file containing a list of patterns to be used as second\nsequences\
        \ for the comparison (see format below)."
      synonyms:
      - -file2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "fields\nEach selected field is returned in a separate column.\n\
        Supported: match,Pval,Eval_p,sig_p,Eval_f,sig_f,noffs,weight,seq,id,length,offset,strand,max_w,diff_w,rel_w,top_s"
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: return
      optional: true
    - !Flag
      description: "#\nupper threshold value for a given field\nSupported_fields:\
        \ match,Pval,Eval_p,sig_p,Eval_f,sig_f,weight,len1,len2,mlen,tlen,offset,max_w1,max_w2,max_w,diff_w1,diff_w2,diff_w,rel_w1,rel_w2,rel_w"
      synonyms:
      - -uth
      args: !SimpleFlagArg
        name: field
      optional: true
    - !Flag
      description: "#\nlower threshold value for a given field\n(same fields as -uth)"
      synonyms:
      - -lth
      args: !SimpleFlagArg
        name: field
      optional: true
    - !Flag
      description: "find best match by sliding seq2 along seq1\nWhen this option is\
        \ used, the best offset is also\nreturned. The offset is the number of positions\
        \ to\nshift seq1 in order to obtain the best scoring\nalignment. Negative\
        \ values represent a shit of seq2 to\nthe left side, positive values ot the\
        \ right side."
      synonyms:
      - -slide
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Match on both strands\nIn addition to the direct matching (strand\
        \ = D), the\nreverse complement of each pattern of group 1\n(specified by\
        \ -seq1 or -file1) is matched against each\npattern of group2."
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Return a contingency table, where each row corresponds\nto one\
        \ sequence from file 1, each column to a sequence\nfrom file 2, and the cells\
        \ contain the value of the\nspecified field.\nSupported fields: match,Pval,Eval_p,sig_p,Eval_f,sig_f,weight,offset,strand,max_w,diff_w,rel_w1,rel_w2,rel_w,top_s"
      synonyms:
      - -table
      args: !SimpleFlagArg
        name: field
      optional: true
    - !Flag
      description: "null string (default ) displayed in\ncontingency tables when the\
        \ cell contains a value\nwhich does not pass the thresholds."
      synonyms:
      - -null
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tcompare-patterns\n\nAUTHOR\n\tJacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nUSAGE\n\tcompare-patterns seq1 seq2\n\nDESCRIPTION\n\n\tCount matching residues\
      \ between pairs of patterns from two\n\tsets, and assess the statistical significance\
      \ of the\n\tmatches. Patterns can be described using the IUPAC code for\n\t\
      ambiguous nucleotides. Spaced patterns (dyads) are also\n\tsupported.\n\n\t\
      This program is typically used to compare a set of discovered\n\tpatterns (e.g.\
      \ oligo-analysis result) with a set of known\n\ttranscription factor binding\
      \ sites (e.g. sites stored in the\n\tTRANSFAC database).\n\nCATEGORY\n\tutil\n\
      \tsequences\n\nOPTIONS\n\t-h\tdisplay full help message\n\t-help   (must be\
      \ first argument) display options\n\t-v\tverbose\n\t-seq1\tfirst sequence for\
      \ the comparison\n\t\tThis argument can be repeated on the same command line\n\
      \t\tto enter multiple patterns.\n\t-seq2\tsecond sequence for the comparison\n\
      \n\t\tThe options -seq1 and -seq2 can be used iteratively to\n\t\tspecify multiple\
      \ sequence patterns. Each sequence of\n\t\tgroup 1 is then compared to each\
      \ sequence of group 2.\n\t\t   ex: -seq1 gataag -seq1 gattag -seq1 gataah \n\
      \t\t       -seq2 agataata -seq2 gtttag\n\t\t Note that when many patterns have\
      \ to be entered, the\n\t\t options -file1 and -file2 are more convenient.\n\t\
      -file1 \tfile containing a list of patterns to be used as first\n         \t\
      sequences for the comparison (see format below). \n\t-file2 \tfile containing\
      \ a list of patterns to be used as second\n         \tsequences for the comparison\
      \ (see format below). \n\t-return\treturn fields\n\t\tEach selected field is\
      \ returned in a separate column.\n\t\tSupported: match,Pval,Eval_p,sig_p,Eval_f,sig_f,noffs,weight,seq,id,length,offset,strand,max_w,diff_w,rel_w,top_s\n\
      \n        -uth field #\n                upper threshold value for a given field\n\
      \                Supported_fields: match,Pval,Eval_p,sig_p,Eval_f,sig_f,weight,len1,len2,mlen,tlen,offset,max_w1,max_w2,max_w,diff_w1,diff_w2,diff_w,rel_w1,rel_w2,rel_w\n\
      \n        -lth field #\n                lower threshold value for a given field\n\
      \                (same fields as -uth)\n\n\t-slide\tfind best match by sliding\
      \ seq2 along seq1\n\t\tWhen this option is used, the best offset is also\n\t\
      \treturned. The offset is the number of positions to\n\t\tshift seq1 in order\
      \ to obtain the best scoring\n\t\talignment. Negative values represent a shit\
      \ of seq2 to\n\t\tthe left side, positive values ot the right side.\n\n\t-2str\
      \ \tMatch on both strands \n\t\tIn addition to the direct matching (strand =\
      \ D), the\n\t\treverse complement of each pattern of group 1\n\t\t(specified\
      \ by -seq1 or -file1) is matched against each\n\t\tpattern of group2.\n\n\t\
      -table field\n\t       Return a contingency table, where each row corresponds\n\
      \t       to one sequence from file 1, each column to a sequence\n\t       from\
      \ file 2, and the cells contain the value of the\n\t       specified field.\n\
      \t       Supported fields: match,Pval,Eval_p,sig_p,Eval_f,sig_f,weight,offset,strand,max_w,diff_w,rel_w1,rel_w2,rel_w,top_s\n\
      \n\t-null   null string (default ) displayed in\n                contingency\
      \ tables when the cell contains a value\n                which does not pass\
      \ the thresholds.\n\nINPUT FORMAT\n    PATTERNS\n\tseq1 and seq2 must be DNA\
      \ sequences (not peptidic). \n        IUPAC degenerate code is accepted in seq1\
      \ as well as seq2.\n\n    PATTERN FILE\n\tA pattern file is a tab-delimited\
      \ text file. Each row contains\n\tthe description of one pattern. Column content:\n\
      \t  1) Pattern sequence. This is the only mandatory column.\n\t  2) Pattern\
      \ ID (optional).\n\tAdditional columns can be used to specify other pattern\n\
      \tattributes (description, score, ...), but they are by default\n\tignored by\
      \ the program. The option -sc allows to specify a\n\tscore column.\n\nOUTPUT\
      \ FORMAT\n       The output consists in a tab-separated text table, with one\
      \ row\n       per pair of sequences, and one column per return field.\n\nRETURN\
      \ FIELDS\n       match\tnumber of matching positions\n\n       Pval     P-value\
      \ for a single comparison. \n\n       \t        This represents the probability,\
      \ for the comparison\n       \t        between two sequences, to return a match.\n\
      \n       \t\tWhen the simple nucleotide alphabet (A, C, G, T) is\n       \t\t\
      used, the probability of random match is estimated to\n       \t\t1/4: given\
      \ the letter in the first sequence, the\n       \t\tprobability that a random\
      \ letter would match it is\n       \t\t1/4.\n\n\t\tNote that this assumes that\
      \ nucleotides are considered\n\t\tequiprobable.\n\n\t\tThe program also scores\
      \ matches between the\n\t\tdegenerated nucleotides defined by the IUPAC\n\t\t\
      commission (http://www.iupac.org/).\n\n\t\tcode\tnucleotides\tmnemonics\n\t\t\
      ---------------------------------------------------------\n\t\tA\t\t\tAdenine\n\
      \t\tC\t\t\tCytosine\n\t\tG\t\t\tGuanine\n\t\tT\t\t\tThymine\n\t\tR\t= A or G\t\
      puRines\n\t\tY\t= C or T\tpYrimidines\n\t\tW\t= A or T\tWeak hydrogen bonding\n\
      \t\tS\t= G or C\tStrong hydrogen bonding\n\t\tM\t= A or C\taMino group at common\
      \ position\n\t\tK\t= G or T\tKeto group at common position\n\t\tH\t= A, C or\
      \ T\tnot G\n\t\tB\t= G, C or T\tnot A\n\t\tV\t= G, A, C\tnot T\n\t\tD\t= G,\
      \ A or T\tnot C\n\t\tN\t= G, A, C or T\taNy)\n\n\t\tThe probability of a match\
      \ between two degenerated\n                nucleotides is calculated with the\
      \ hypergeometric\n                distribution.\n\n\t\tThe underlying probabilistic\
      \ model is that the two\n\t\tletters to be macthed represent each a subset of\
      \ the\n\t\talphabet. The problem can be thought of as an urn with\n\t\t4 balls,\
      \ each ball representing one possible\n\t\tnucleotide (A, C, G, T).\n\n\t\t\
      For the sake of illustration, let us assume that we\n\t\twant to compare the\
      \ two IUPAC codes Y (C or T) and M\n\t\t(A or C). in the urn (alphabet), we\
      \ will label in\n\t\tblack the balls (nucleotides) comprised in the first\n\t\
      \tset (C and T). We can now consider the second IUPAC\n\t\tletter as a random\
      \ selection of 2 balls in this urn,\n\t\twhich contains 2 black balls (A, C)\
      \ and 2 white balls\n\t\t(G, T). Our selection (C and T) contains one black\n\
      \t\tball. It is thus a match.\n\n\t\tThe right tail of the hypergeometric distribution\n\
      \t\tallows us to calculate the probability to observe at\n\t\tleast one back\
      \ ball in a selection of 2 balls,\n\t\tselected at random in an urn with 2 black\
      \ balls and 2\n\t\twhite balls.\n\n                                        \
      \  c      i  n-i     n\n                   Pval = P(X >= c) = SUM  ( C  C  \
      \   / C  )\n                                         i=1     m  4-m     4\n\n\
      \t\tWhere\n\n\t\t   m   is the number of black balls in the urn\n\t\t      \
      \ (nucleotides matching the first IUPAC letter)\n\n\t\t   4-m is the number\
      \ of white balls in the urn \n\t\t       (nucleotides not matching the first\
      \ IUPAC\n\t\t       letter)\n\n\t\t   n   is the number of nucleotides matched\
      \ by the\n\t\t       second IUPAC letter.\n\n\t\t   c = min(n,m) is the maximal\
      \ number of common\n\t\t       letters between the m nucleotides of the 1st\n\
      \t\t       IUPAC letter and the n nucleotides of the 2nd\n\t\t       IUPAC letter.\n\
      \n                In our example (Y against M), m=2, n=2, c=min(2,2)=2.\n\t\t\
      \   Pval=0.83333\n\n\t\tWe can check the generality of the formula with some\n\
      \t\texamples : \n\n\t\t - a trivial match (e.g. N against A) should have a\n\
      \                   P-value of 1. In this case, m=4, n=1, c=min(4,1)=1.\n\n\
      \                                           1  0    1\n                   Pval\
      \ = P(X >= c) =  C  C  / C   = 4*1/4 = 1\n                                 \
      \          4  0    4\n\n\t\t\t\t   \n\t\t - a simple match between two non-degenerated\
      \ letters\n                   should have a P-value of 1/4. Indeed, in this\
      \ case\n                   n=1, m=1, c=min(1,1)=1.\n\n                     \
      \                      1  0    1\n                   Pval = P(X >= c) =  C \
      \ C  / C  = 0.25\n                                           1  3    4\n\n\t\
      \         - Interestingly, a match between a IUPAC letter\n                \
      \   matching 3 nucleotides (e.g. H = A, C or T) letter\n                   another\
      \ matching 2 nucleotides (e.g. S = G or C)\n                   will have a probability\
      \ to 1. Indeed, m=3, n=2 and\n                   c=min(3,2)=2, thus:\n\n   \
      \                                       2      i  2-i    2\n               \
      \    Pval = P(X >= c) = SUM  ( C  C    / C  )\n                            \
      \             i=1     3  1      4\n\n\t\t   This reflects the fact that it is\
      \ impossible to\n\t\t   have not a single white ball in the selection, when\n\
      \t\t   we select 2 balls among a set of 3 black and 1\n\t\t   white balls.\n\
      \n\tEval_p\t   E-value for a single comparison between two sequences. \n\n\t\
      \t   This is a correction for multiple testing, taking\n\t\t   into account\
      \ the fact that a comparison between two\n\t\t   sequences (or patterns) can\
      \ already result in some\n\t\t   multi-testing effects, for two reasons :\n\n\
      \t\t    - with the option -slide, the two sequences are\n                  \
      \    compared with different offsets.\n\t\t      \t       Eval_p = Pval * noffs\n\
      \n\t\t    - with the option -2str, two comparisons are\n                   \
      \   performed per pair of sequences. In this case,\n\t\t      \t\tEval_p = Pval*2*noffs\n\
      \n\t\t   It is useful to return the Eval together with the\n\t\t   number of\
      \ offsets analyzed (corresponding to the\n\t\t   number of tests for a given\
      \ pair of sequences).\n\t\t   \t  -return Pval,noffs,Eval,sig\n\n\tsig_p   \
      \   Significance for a single comparison between two\n\t\t   sequences. \n\t\
      \t   This is a simple logarithmic conversion of Eval_p.\n\n\t\t   \t      sig_p\
      \ = -log10(Eval_p)\n\n\tEval_f\t   E-value for the whole analysis. \n\n\t\t\
      \   This E-value includes a correction for the fact\n\t\t   that, usually, multiple\
      \ sequences (patterns) are\n\t\t   compared to multiple sequences (patterns).\n\
      \n\t\t   For example, if the program is used to compare an\n\t\t   oligo-analysis\
      \ result file with a database of\n\t\t   annotated sites, the oligo file can\
      \ typically\n\t\t   contain a dozen of words, and the database several\n\t\t\
      \   hundreds of sites.\n\n\tsig_f      Significance for the whole analysis.\
      \ \n\t\t   This is a simple logarithmic conversion of Eval_f.\n\n\t\t   \t \
      \     sig_f = -log10(Eval_f)\n\n\n\tweight \tthe weight reflects the number\
      \ of matching positions,\n                with a lower weight for matches between\
      \ partially\n                specified nucleotides (IUPAC codes).\n\n\t\tThe\
      \ weight is calculated as\n\t\t    -log4(Pval)\n\n\t\tFor an alignment between\
      \ non-ambigous nucleotides, the\n\t\tweight is maximal, and its value is the\
      \ number of\n\t\tmatching residues.\n\n\tmax weight\n\t\tMaximal weight for\
      \ the match with a given pattern.\n\t\tmax_w1\tmaximal weight for pattern 1\n\
      \t\tmax_w2\tmaximal weight for pattern 2\n\t\tmax_w maximal weight between pattern\
      \ 1 and pattern2\n\t\t      max_w = min(max_w1, max_w1)\n\n\tweight differences\n\
      \t\tDifference between match weight and maximal possible weight.\n\t\tdiff_w1\
      \ = max_w1 - weight\n\t\tdiff_w2 = max_w2 - weight\n\t\tdiff_w = max_w - weight\n\
      \n\n\trelative weight\n\t\tThe relative weight is the ratio between matching\
      \ weight and\n\t\tmaximal weight.\n\t\t   rel_w1 = weight/max_w1\n\t\t   rel_w2\
      \ = weight/max_w2\n\t\t   rel_w = weight/max_w\n\n\tlength\tlengths \n\t\tThis\
      \ option returns 4 length values\n\t\t     len1   length of sequence 1\n\t\t\
      \     len2   length of sequence 2\n\t\t     mlen   length of the match\n\t\t\
      \     tlen   total length of the alignment\n\t\t     \t    tlen = len1 + len2\
      \ - mlen\n\n\tseq\tsequences to be compared\n\nEXAMPLES\n\n\tSingle pair of\
      \ sequences\n\t------------------------\n\tcompare-patterns -seq1 GATAAT -seq2\
      \ GATWAG -return match,weight\n\n\tshould return the value 5 matches (the degenerate\
      \ code W\n        stands for \"T or A\") and a weight of 4.5\n\n\tMultiple pairs\
      \ of sequences\n\t---------------------------\n\n\tcompare-patterns -seq1 GATAAG\
      \ -seq2 GATWAG -seq2 GATAAG \\\n\t    -seq2 GATAAT -seq2 gatha -seq2 gatnns\
      \ -seq2 NNNNNN \\\n\t    -v 1 -return match,weight,Pval,length,seq\n\n     \
      \   Compares the firsts sequence with each sequence of group 2.\n        Notice\
      \ the difference between the columns match and weight.\n\n\tSliding sequences\n\
      \t-----------------\n\tcompare-patterns -v 1 -seq1 gatasg -seq2 twagtt -slide\
      \ \\\n\t    -return match,weight,Pval,seq,length\n\n        Thresholds\n\t----------\n\
      \tcompare-patterns -v 1 -seq1 gatasg -seq2 twagtt -seq2 ccccga \\\n\t    -slide\
      \ -return offset,match,weight,Pval,seq,length -lth mlen 3\n\n\tThis options\
      \ sets a lower threshold of 3 on matching length.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - random-sites
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: random-sites
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '20181203'
      optional: false
    - !Positional
      description: motifs
      position: 0
      name: PSSM
      optional: false
    - !Positional
      description: random-motif
      position: 0
      name: implant-sites
      optional: false
    named:
    - !Flag
      description: "#, --verbosity=#   set verbosity to level #\n0 no verbosity\n\
        1 max verbosity"
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --output=#      output results to #\nif not specified, the\
        \ standard output is used"
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --motif=#       read motif(s) from #\nif not specified, the\
        \ standard input is used"
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#                  number of sites to generate'
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "NAME\n        random-sites\n\nVERSION\n        20181203\n\nAUTHOR\n\
      \        Matthieu Defrance <matthieu.dc.defrance@ulb.ac.be>\n\nDESCRIPTION\n\
      \        Generates random sites according to a given motif model (PSSM)\n\n\
      CATEGORY\n        PSSM\n        motifs\n\nUSAGE        \n        random-sites\
      \ -m motif -n numberofsites [-h]\n\nARGUMENTS\n    --version             show\
      \ program's version number and exit\n    -h, --help            show this help\
      \ message and exit\n    -v #, --verbosity=#   set verbosity to level #\n   \
      \                           0 no verbosity\n                              1\
      \ max verbosity\n    -o #, --output=#      output results to #\n           \
      \               if not specified, the standard output is used\n    -m #, --motif=#\
      \       read motif(s) from #\n                          if not specified, the\
      \ standard input is used\n    -n #                  number of sites to generate\n\
      \nSEE ALSO\n        implant-sites\n        random-motif\n\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - supported-organisms-ensembl
    positional:
    - !Positional
      description: administration
      position: 0
      name: genomics
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Supported: ensembl | ensemblgenomes'
      synonyms:
      - -db
      args: !SimpleFlagArg
        name: database
      optional: true
    - !Flag
      description: "Select only species belonging to a given phylogenetic\nbranch,\
        \ given its taxonomic ID."
      synonyms:
      - -branch_id
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Output file. If not specified, the result is printed on the\n\
        standard output.\n"
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: file
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tsupported-organisms-ensembl\n\n        2008 by Olivier Sand\
      \ (oly@bigre.ulb.ac.be)\n\nUSAGE\n        supported-organisms-ensembl\n\nAUTHOR\n\
      \tOlivier Sand <oly@bigre.ulb.ac.be>\n\nDESCRIPTION\n\n\tGet the list of organisms\
      \ supported on the Ensembl database.\n\nCATEGORY\n\tgenomics\n\tadministration\n\
      \nOPTIONS\n\t-h\t(must be first argument) display full help message\n\n\t-help\t\
      (must be first argument) display options\n\n\t-db database\n\t\tSupported: ensembl\
      \ | ensemblgenomes\n\n\t-branch_id\n\t\tSelect only species belonging to a given\
      \ phylogenetic\n\t\tbranch, given its taxonomic ID.\n\n\t-o file\tOutput file.\
      \ If not specified, the result is printed on the\n\t   \tstandard output.\n\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - matrix-scan
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: matrix-scan
      optional: false
    - !Positional
      description: pattern matching
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: PSSM
      optional: false
    - !Positional
      description: "\e[33mproba_M = P(S|M)\e[0m:"
      position: 0
      name: where
      optional: false
    - !Positional
      description: "Relative frequencies can be corrected by a pseudo-count (b) to\
        \ reduce\nthe bias due to the small number of observations.\nThe pseudo-count\
        \ can be shared either in an equiprobable way,\nS<F''ij=(Nij + b/A)/[SUMi(Nij)+b]>\n\
        or according to residue prior frequencies.\nS<F''ij=(Nij + b*Pi)/[SUMi(Nij)+b]>\n\
        where\nPi  is the prior frequency for residue i\nA   is the size of the alphabet\
        \ (A=4 for DNA).\nb   is the pseudo-count, which is \"shared\" between residues\
        \ according to\ntheir prior frequencies."
      position: 0
      name: Pseudo-counts
      optional: false
    - !Positional
      description: Aerts, S., Thijs, G., Coessens, B., Staes, M., Moreau, Y. & De
        Moor, B.
      position: 0
      name: papers.
      optional: false
    - !Positional
      description: Hertz, G.Z. and G.D. Stormo (1999).
      position: 0
      name: 81-92.
      optional: false
    - !Positional
      description: Staden (1989).
      position: 0
      name: 563-77.
      optional: false
    - !Positional
      description: "\e[1m-m matrixfile\e[0m"
      position: 0
      name: distributed.
      optional: false
    - !Positional
      description: "\e[1m-matrix_name matrix_name1[,matrix_name2,...]\e[0m"
      position: 0
      name: MA0221.1
      optional: false
    - !Positional
      description: "\e[1m-first_seq N\e[0m"
      position: 0
      name: M00271
      optional: false
    - !Positional
      description: "\e[1m-bg_pseudo #\e[0m"
      position: 0
      name: default.
      optional: false
    - !Positional
      description: 'Note: in previous versions, -origin was used to specify both'
      position: 0
      name: TSS.
      optional: false
    - !Positional
      description: occ_sum inv_cum exp_occ occ_pval occ_eval occ_sig
      position: 0
      name: occ
      optional: false
    - !Positional
      description: In -window mode, if a threshold is set on pval (e.g. -uth
      position: 1
      name: occ_sig_rank
      optional: false
    - !Positional
      description: "\e[1mlimits:\e[0m limits (start, end) of the input sequences."
      position: 0
      name: efficiency.
      optional: false
    - !Positional
      description: "For each matrix and each score value, calculate the\nstatistical\
        \ significance of the number of matches. This\nallows to select the score\
        \ associated with te maximal\nsignificance, on the basis of the matrix-specific\n\
        distribution, rather than by selecting some a priori\nthreshold.\nFor each\
        \ motif (M) and each score value (s), the program\nestimates the significance\
        \ of the observed number of\nmatches (x), given the prior probability (p)\
        \ to find an\ninstance of this motif with at least this score at a\ngiven\
        \ position of the sequence. The P-value is\ncalculated using the binomial\
        \ distribution (Aerts et\nal., 2003).\nThis option requires to specify a background\
        \ score\ndistribution (option -bg_distrib) to estimate the prior\nprobabilities\
        \ of motif instances."
      position: 0
      name: sequence
      optional: false
    - !Positional
      description: "matrix-scan -v 1 -return distrib -m matrix.tab -i\nbg_sequences.fta\
        \ [...]"
      position: 0
      name: options
      optional: false
    - !Positional
      description: "\e[1mcheck_thresholds\e[0m"
      position: 0
      name: matrix.
      optional: false
    named:
    - !Flag
      description: order to select a subset of sequences for quick
      synonyms:
      - -last_seq
      args: !SimpleFlagArg
        name: in
      optional: true
    - !Flag
      description: ). The maximum size for a CRER is defined by the
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 0.0001 -lth crer_size 20 -uth crer_size 200
      synonyms:
      - -return
      - -uth
      args: !SimpleFlagArg
        name: crer
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    matrix-scan\n\n\e[1mDESCRIPTION\e[0m\n    Scan\
      \ sequences with one or several position-specific scoring matrices\n    (PSSM)\
      \ to identify instances of the corresponding motifs (putative\n    sites). This\
      \ program supports a variety of background models (Bernoulli,\n    Markov chains\
      \ of any order).\n\n\e[1mAUTHORS\e[0m\n    Jacques van Helden <Jacques.van-Helden\\\
      @univ-amu.fr>\n    Jean Valery Turatsinze <jturatsi@bigre.ulb.ac.be>\n    Morgane\
      \ Thomas-Chollier <morgane@bigre.ulb.ac.be>\n    Matthieu Defrance <defrance@bigre.ulb.ac.be>\n\
      \n\e[1mCATEGORY\e[0m\n    sequences\n    pattern matching\n    PSSM\n\n\e[1mUSAGE\e\
      [0m\n    matrix-scan -m matrixfile [-i inputfile] [-o outputfile] [-v] [-bgfile\n\
      \    backgroundfile|-bgorder #]\n\n\e[1mINPUT FORMATS\e[0m\n  \e[1mSequence\
      \ file\e[0m\n    All the formats supported in RSAT can be used as input (default:\
      \ fasta).\n\n  \e[1mMatrix file\e[0m\n    The matrix format is specified with\
      \ the option -matrix_format.\n    Supported: all the input formats supported\
      \ by \e[33mconvert-matrix\e[0m. For a\n    description of these format, see\
      \ \e[33mconvert-matrix -h\e[0m\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output is\
      \ a tab-delimited file, with one row per match. This file\n    can directly\
      \ be used as input for the program \e[33mfeature-map\e[0m.\n\n\e[1mSCORING SCHEME\e\
      [0m\n  \e[1mWEIGHT SCORE\e[0m\n    The program scans the input sequences with\
      \ a position-specific scoring\n    matrix (PSSM) by selecting, at each position,\
      \ a sequence segment (S) of\n    the same length as the matrix, and assigning\
      \ a score to this segment.\n\n    The segment score (weight) is calculated according\
      \ to the theory\n    developed by Jerry Hertz and Gary Stormo (1999), but with\
      \ the capability\n    to use Markov chain-based background models, as proposed\
      \ by Thijs et al.\n    (2001).\n\n    The weight of a sequence segment (Ws)\
      \ is calculated as the log-ratio\n    between two probabilities:\n\n    \e[33mWs\
      \ = log[P(S|M)/P(S|B)]\e[0m\n        where\n\n    \e[33mproba_M = P(S|M)\e[0m:\n\
      \        The probability to generate the sequence segment given the matrix.\n\
      \n    \e[33mproba_B = P(S|B)\e[0m:\n        The probability to generate the\
      \ sequence segment given the\n        background model.\n\n    By default, the\
      \ program uses natural logarithms, but the option -base\n    allows to specify\
      \ any alternative base (e.g. 2 to obtain bit units);\n\n  \e[1mMOTIF MODEL\e\
      [0m\n    The position-specific scoring matrix is generally built from an\n \
      \   alignment of transcription factor binding sites. The matrix indicates\n\
      \    the absolute frequency (Nij = number of occurrences) of each residue (i\n\
      \    = row) at each position (j = column) of the alignment.\n\n    Note: some\
      \ programs use \"vertical\" matrices, where rows represents\n    positions and\
      \ columns residues. See \e[33mconvert-matrix\e[0m for a description of\n   \
      \ PSSM formats.\n\n   Pseudo-counts\n    Relative frequencies can be corrected\
      \ by a pseudo-count (b) to reduce\n    the bias due to the small number of observations.\n\
      \n    The pseudo-count can be shared either in an equiprobable way,\n\n    \
      \  S<F''ij=(Nij + b/A)/[SUMi(Nij)+b]>\n\n    or according to residue prior frequencies.\n\
      \n      S<F''ij=(Nij + b*Pi)/[SUMi(Nij)+b]>\n\n    where\n\n    Pi  is the prior\
      \ frequency for residue i\n\n    A   is the size of the alphabet (A=4 for DNA).\n\
      \n    b   is the pseudo-count, which is \"shared\" between residues according\
      \ to\n        their prior frequencies.\n\n  \e[1mBACKGROUND MODELS\e[0m\n  \
      \  An essential parameter of any pattern detection approach is the choice\n\
      \    of an appropriate background model. This model is used to estimate the\n\
      \    probability for each site to occur by chance, rather than as an instance\n\
      \    of the motif.\n\n    The program matrix-scan supports Markov models of\
      \ arbitrary order as\n    background models. A Markov model of \e[33morder m\e\
      [0m means that the probability\n    of each residue depends on the \e[33mm\e\
      [0m preceding residues in the sequence.\n    Note that a Markov model of order\
      \ 0 corresponds to a Bernoulli model\n    (each residue is independent from\
      \ the preceding ones).\n\n    Markov models are represented as transition matrices,\
      \ where each row\n    represents a prefix and each column a residue (suffix),\
      \ and each cell\n    represents the conditional probability \e[33mP(r|prefix)\e\
      [0m of observing residue\n    \e[33mr\e[0m at a given position, given the prefix\
      \ (the \e[33mm\e[0m preceding letters).\n\n   Background model specification\n\
      \    The background model can be specified in different ways.\n\n    \e[33m-bgfile\e\
      [0m\n        This option allows to enter the background model from a background\n\
      \        model file. Background model files are tab-delimited files\n      \
      \  containing the specification of oligonucleotide frequencies. A\n        Markov\
      \ model of order m=k-1 is automatically obtained from the\n        frequencies\
      \ of oligonucleotides of length k. There is thus no need\n        to use the\
      \ option -markov when the background model is secified with\n        a bg file.\n\
      \n        The RSAT data folder contains pre-calibrated background model files\n\
      \        for all the supported organisms. Use the command\n        \e[33mchoose-background-model\e\
      [0m to get the path of an organism-specific\n        background model file.\n\
      \n        Different formats are supported (option B-<bg_format>).\n\n    \e\
      [33m-bginput\e[0m\n        The backgound model is calculated from the whole\
      \ set of input\n        sequences. This option requires to specify the order\
      \ of the\n        background model with the option -markov.\n\n    \e[33m-window\e\
      [0m\n        The background model is calculated locally at each step of the\
      \ scan,\n        by computing transition frequencies from a sliding window centred\n\
      \        around the considered segment. The model is thus updated at each\n\
      \        scanned position. This model is called \"adaptive\". Note that the\n\
      \        sliding window must be large enough to train the local Markov model.\n\
      \        The required sequence length increases exponentially with the Markov\n\
      \        order. This option is thus usually suitable for low order models\n\
      \        only (-markov 0 to 1).\n\n   Pseudo-frequencies for the background\
      \ model\n    The concept of pseudo-count can be extended to \e[1mpseudo-frequencies\e\
      [0m for\n    the background model, in order to increase the robustness of BG\
      \ models\n    when the training sequence set is too small. This is particularly\n\
      \    important for the adaptive models, which are trained on relatively short\n\
      \    sliding windows (a few hundreds of bases).\n\n    The reason for using\
      \ pseudo-frequencies rather than pseudo-counts is\n    that background models\
      \ are usually defined in terms of relative\n    frequencies, considered as estimates\
      \ of prior frequencies. Since the\n    absolute counts used for estimating those\
      \ probabilities are not always\n    available, we introduce the correction in\
      \ terms of pseudo-frequencies.\n\n    P'(r|prefix)=((P(r|prefix) + (b/A)/(SUMi[P(i|prefix)]+b)\n\
      \n\e[1mREFERENCES\e[0m\n    The probabilities use in this program were derived\
      \ from the following\n    papers.\n\n    Aerts, S., Thijs, G., Coessens, B.,\
      \ Staes, M., Moreau, Y. & De Moor, B.\n    (2003).\n        Toucan: deciphering\
      \ the cis-regulatory logic of coregulated genes.\n        Nucleic Acids Res\
      \ 31, 1753-64.\n\n    Bailey, T. L. & Gribskov, M. (1998).\n        Combining\
      \ evidence using p-values: application to sequence homology\n        searches.\
      \ Bioinformatics 14, 48-54.\n\n    Hertz, G.Z., G.W. Hartzell, 3rd, and G.D.\
      \ Stormo (1990).\n        Identification of consensus patterns in unaligned\
      \ DNA sequences\n        known to be functionally related. Comput Appl Biosci,\
      \ 6(2): p.\n        81-92.\n\n    Hertz, G.Z. and G.D. Stormo (1999).\n    \
      \    Identifying DNA and protein patterns with statistically significant\n \
      \       alignments of multiple sequences. Bioinformatics, 15(7-8): p.\n    \
      \    563-77.\n\n    Staden (1989).\n        Methods for calculating the probabilities\
      \ of finding patterns in\n        sequences. Comput Appl Biosci 5, 89-96.\n\n\
      \    Thijs, G., Lescot, M., Marchal, K., Rombauts, S., De Moor, B., Rouze, P.\n\
      \    & Moreau, Y. (2001).\n        A higher-order background model improves\
      \ the detection of promoter\n        regulatory elements by Gibbs sampling.\
      \ Bioinformatics 17, 1113-22.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n   \
      \     Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message.\n\n    \e[1m-help\e[0m\n    \
      \    Display only program options.\n\n    \e[1m-bgfile background_file\e[0m\n\
      \        Background model file.\n\n    \e[1m-bg_format format\e[0m\n       \
      \ Format for the background model file.\n\n        Supported formats: type \e\
      [33mconvert-background-model -h\e[0m to obtain a list\n        of supported\
      \ background model formats.\n\n    \e[1m-bginput\e[0m\n        Calculate background\
      \ model from the input sequence set.\n\n    \e[1m-markov\e[0m\n        Order\
      \ of the markov chain for the background model.\n\n        This option is incompatible\
      \ with the option -bgfile.\n\n    \e[1m-window\e[0m\n        Size of the sliding\
      \ window for the background model calculation.\n        When this option is\
      \ specified, the matrix pseudo-count is equally\n        distributed.\n\n  \
      \  \e[1m-m matrixfile\e[0m\n        Matrix file.\n\n        This argument can\
      \ be used iteratively to scan the sequence with\n        multiple matrices.\n\
      \n    \e[1m-first_matrix N\e[0m\n        Start scanning with the Nth matrix\
      \ (kip the N-1 first matrices of\n        the matrix file).\n\n        This\
      \ option is valid for some file formats containing multiple\n        matrices\
      \ (e.g. consensus, meme, MotifSampler), where the top matrix\n        is generally\
      \ the most informative.\n\n    \e[1m-last_matrix #\e[0m\n        Only scan with\
      \ the top # matrices per matrix file. This option is\n        valid for some\
      \ file formats containing multiple matrices (e.g.\n        consensus, meme,\
      \ MotifSampler), where the top matrix is generally\n        the most informative.\n\
      \n        If several matrix files are specified, the # top matrices of each\n\
      \        file are used for scanning the sequences.\n\n    \e[1m-matrix_ac matrix_ac1[,matrix_ac2,...]\e\
      [0m\n        Select one or more matrices specified by their ID.\n\n        Multiple\
      \ matrices can be specified as a coma-separated list, or by\n        calling\
      \ the argument iteratively.\n\n        Examples: matrix-scan [...] -matrix_ac\
      \ MA0049.1,MA0221.1\n\n        is equivalent to matrix-scan [...] -matrix_ac\
      \ MA0049.1 -matrix_ac\n        MA0221.1\n\n    \e[1m-matrix_name matrix_name1[,matrix_name2,...]\e\
      [0m\n        Select one or more matrices specified by their ID.\n\n        Multiple\
      \ matrices can be specified as a coma-separated list, or by\n        calling\
      \ the argument iteratively.\n\n        Examples: matrix-scan [...] -matrix_name\
      \ eve,hb\n\n        is equivalent to matrix-scan [...] -matrix_name eve -matrix_name\
      \ hb\n\n    \e[1m-matrix_id matrix_id1[,matrix_id2,...]\e[0m\n        Select\
      \ one or more matrices specified by their ID.\n\n        Multiple matrices can\
      \ be specified as a coma-separated list, or by\n        calling the argument\
      \ iteratively.\n\n        Examples: matrix-scan [...] -matrix_id M00010,M00271\n\
      \n        is equivalent to matrix-scan [...] -matrix_id M00010 -matrix_id\n\
      \        M00271\n\n    \e[1m-first_seq N\e[0m\n        Start scanning at the\
      \ Nth sequence. This option can be combined with\n        -last_seq in order\
      \ to select a subset of sequences for quick\n        testing, or for distributing\
      \ the computation on several CPUs.\n\n    \e[1m-last_seq #\e[0m\n        Only\
      \ scan with the top # sequences. This option allows to perform\n        quick\
      \ tests or to scan only a given number of sequences at the top\n        of the\
      \ input file (e.g. for collection of ChIP-seq peaks).\n\n    \e[1m-consensus_name\e\
      [0m\n        Use the motif (degenerate) consensus as matrix name.\n\n    \e\
      [1m-id_as_name\e[0m\n        Use the motif identifier as matrix name. This is\
      \ useful for TRANSFAC\n        matrices, which have a distinct accession number\
      \ (AC) and identifier\n        (ID). The identifier generally indicates the\
      \ name of the\n        transcription factor.\n\n    \e[1m-ac_as_name\e[0m\n\
      \        Use the motif accession number as matrix name. This is useful for\n\
      \        TRANSFAC matrices, which have a distinct accession number (AC) and\n\
      \        identifier (ID).\n\n    \e[1m-mlist matrix_list\e[0m\n        Matrix\
      \ list.\n\n        Indicate a file containing a list of matrices to be used\
      \ for\n        scanning the region. This facilitates the scanning of a sequence\n\
      \        with a library of matrices (e.g. all the matrices from RegulonDB, or\n\
      \        TRANSFAC).\n\n        Format: the matrix list file is a text file.\
      \ The first word of each\n        row is suppose to indicate a file name. Any\
      \ further information on\n        the same row is ignored.\n\n    \e[1m-matrix_format\
      \ matrix_format\e[0m\n        Matrix format.\n\n    \e[1m-i inputfile\e[0m\n\
      \        File containing the sequences to scan.\n\n        If no input file\
      \ is specified, the standard input is used. This\n        allows to use the\
      \ command within a pipe.\n\n    \e[1m-seq_format sequence_format\e[0m\n    \
      \    Sequence format.\n\n    \e[1m-mask upper|lower|non-dna\e[0m\n        Mask\
      \ specific types of characters (lowercases, uppercases, non-dna),\n        i.e.\
      \ replace them by N characters.\n\n    \e[1m-n [skip|score]\e[0m\n        Treatment\
      \ of N characters. These characters are often used in DNA\n        sequences\
      \ to represent undefined or masked nucleotides.\n\n        \e[33mskip\e[0m\n\
      \            N-containing regions are skipped.\n\n        \e[33mscore\e[0m\n\
      \            N-containing regions are scored. The probability of an N is 1\n\
      \            for both the background model and the matrix. The N residues\n\
      \            will thus contribute neither positively nor negatively to the\n\
      \            weight score of the N-containing fragment. This option can be\n\
      \            useful to detect sites which are at the border of N-containing\n\
      \            regions, or in cases there are isolated N in the sequences.\n\n\
      \    \e[1m-o outputfile\e[0m\n        If no output file is specified, the standard\
      \ output is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-pseudo pseudo_counts\e[0m\n        Pseudo-count for the matrix (default:\
      \ 1).\n\n        The pseudo-count reflects the possibility that residues that\
      \ were\n        not (yet) observed in the model might however be valid for future\n\
      \        observations. The pseudo-count is used to compute the corrected\n \
      \       residue frequencies.\n\n    \e[1m-equi_pseudo\e[0m\n        If this\
      \ option is called, the pseudo-weight is distributed in an\n        equiprobable\
      \ way between residues.\n\n        By default, the pseudo-weight is distributed\
      \ proportionally to\n        residue priors, except for the -window option where\
      \ equipseudo is\n        default.\n\n    \e[1m-bg_pseudo #\e[0m\n        Pseudo\
      \ frequency for the background model. Value must be a real\n        between\
      \ 0 and 1.\n\n        If this option is not specified, the pseudo-frequency\
      \ value depends\n        on the background calculation.\n\n        For -bginput\
      \ and -window, the pseudo frequency is automatically\n        calculated from\
      \ the length (L) of the sequence following this\n        formula:\n\n      \
      \    sqrt(L)/(L+sqrt(L))\n\n        For -bgfile, default value is 0.01.\n\n\
      \        In other cases, if the length (L) of the training sequence is known\n\
      \        (e.g. all promoters for the considered organism), the value can be\n\
      \        set manually by using the option -bg_pseudo. In such case, the\n  \
      \      background pseudo-frequency might be set, as suggested by Thijs et\n\
      \        al., to the following value:\n\n          sqrt(L)/(L+sqrt(L))\n\n \
      \   \e[1m-origin [start|end|center|chrom]\e[0m\n        Specify the origin for\
      \ the calculation of positions.\n\n        Supported values:\n\n        \e[1mstart\e\
      [0m\n            Site coordinates indicate their distance from the start of\
      \ the\n            input sequence. The first residue of each sequence has a\n\
      \            coordinate value of 1.\n\n        \e[1mcenter\e[0m\n          \
      \  Site coordinates are computed relative to the center of each\n          \
      \  sequence: sequence centers have coordinate 0, negative\n            coordinates\
      \ indicate positions at the left of the center.\n\n        \e[1mend\e[0m Site\
      \ coordinates are negative and indicate the distance from the\n            site\
      \ to the end of the sequence. The last residue of the input\n            sequence\
      \ has a coordinate value of -1.\n\n        \e[1mgenomic\e[0m\n            Site\
      \ coordinates indicate their distance from the start of the\n            chromosome.\
      \ The program automatically adds an offset\n            corresponding to the\
      \ chromosomal position of the input sequence.\n            This requires a properly\
      \ formatted fasta sequence, where the\n            chromosomal coordinates of\
      \ the input sequences are included in\n            their header line (lines\
      \ starting with '>').\n\n                \e[1m-seq_source\e[0m\n\n         \
      \       The option \e[33m-seq_source\e[0m can be used to specify the source\
      \ of\n                the fasta sequence, which determines its format for the\n\
      \                conversion to genomic coordinates (option \e[33m-origin genomic\e\
      [0m.\n                Supported sources: \e[33mgetfasta\e[0m, \e[33mgalaxy\e\
      [0m, \e[33mucsc\e[0m, \e[33musc2\e[0m. See the\n                help of \e[33mconvert-features\e\
      [0m for a description of the\n                corresponding fasta headers.\n\
      \n                \e[1m-offset offset_value\e[0m\n\n                Add an offset\
      \ to site positions. The offset value must be an\n                Integer number\
      \ (positive, null or negative). This option\n                allows to select\
      \ an arbitrary position as origin.\n\n                Example: the option \e\
      [33m-offset -100\e[0m can be used to specify the\n                transcription\
      \ start site (TSS) as origin, in a collection of\n                promoter sequences\
      \ including 100 residues downstream of the\n                TSS.\n\n       \
      \         Note: in previous versions, -origin was used to specify both\n   \
      \             the reference point and the offset. Since 11/2009, the\n     \
      \           offset is specified with the option -offset.\n\n               \
      \ \e[1m-base #\e[0m\n\n                Base for the logarithms used in the scores\
      \ involving a\n                log-likelihood (weight and information content).\
      \ Default:\n                exp(1) (natural logarithms).\n\n               \
      \ A common alternative to natural logarithms is to use\n                logarithms\
      \ in base 2, in which case the information content\n                is computed\
      \ in bits.\n\n                \e[1m-decimals #\e[0m\n\n                Number\
      \ of decimals displayed for the weight score.\n\n                Warning: the\
      \ computation of P-values increases exponentially\n                with the\
      \ number of decimals. For matrices wih many columns,\n                this can\
      \ become non-tractable. We thus recommend to use the\n                default\
      \ value (2 decimals).\n\n                \e[1m-lth param lower_threshold\e[0m\n\
      \n                \e[1m-uth param upper_threshold\e[0m\n\n                Threshold\
      \ on some parameter (-lth: lower, -uth: upper\n                threshold).\n\
      \n                Supported threshold fields for the matches : score pval sig\n\
      \                normw proba_M proba_B rank crer_sig crer_pval crer_sites\n\
      \                crer_size crer_site_distance\n\n                Supported threshold\
      \ fields for score distributions: occ\n                occ_sum inv_cum exp_occ\
      \ occ_pval occ_eval occ_sig\n                occ_sig_rank\n\n              \
      \  In -window mode, if a threshold is set on pval (e.g. -uth\n             \
      \   pval 0.001), a default threshold on the score (-lth score 0)\n         \
      \       will be automatically added to limit the calculation time.\n\n     \
      \           \e[1m-mth matrix_threshold_file\e[0m\n\n                Matrix-specific\
      \ thresholds.\n\n                Specify a file containing a list of thresholds\
      \ to be used\n                for scanning the region. This enables to use distinct\n\
      \                thresholds for each input matrix.\n\n                Format:\
      \ the list of thresholds is a text file with four\n                columns (separated\
      \ by spaces or tabulations) indicating the\n                following fields.\
      \ 1. matrix name 2. threshold parameter (uth\n                or lth), 3. threshold\
      \ field 4. threshold value.\n\n                The same list of fields is supported\
      \ as for the options -lth\n                and -uth. Various threshold fields\
      \ and parameters (uth and\n                lth) can be combined for each matrix.\n\
      \n                Example:\n\n                MET_matrices.1 lth score 8\n \
      \               MET_matrices.2 lth score 0\n                MET_matrices.2 uth\
      \ pval 0.0001\n\n                \e[1m-2str\e[0m\n\n                Scan both\
      \ strands for DNA sequences.\n\n                \e[1m-1str\e[0m\n\n        \
      \        single-strand search for DNA sequences.\n\n                \e[1m-return\
      \ return_fields\e[0m\n\n                List of fields to return.\n\n      \
      \          Supported fields:\n                sites,pval,seq_scores,p_score,rank,normw,limits,weight_limit\n\
      \                s,\n                distrib,occ_proba,bg_model,bg_residues,matrix,freq_matrix,we\n\
      \                ight_matrix,crer\n\n                \e[1msites:\e[0m Matching\
      \ sites.\n                    Return the position of each matching site, in\
      \ a\n                    tab-delimited format which can be sed as input by\n\
      \                    \e[33mfeature-map\e[0m (format .ft).\n\n              \
      \  \e[1mpval:\e[0m site-wise P-value\n                    The site-wise P-value\
      \ estimates the significance of the\n                    weight associated to\
      \ each site. It is computed from the\n                    matrix, according\
      \ to the probabilities described in\n                    Staden (1989), Bailey\
      \ (1998).\n\n                    In addition to the P-value, the program exports\
      \ a column\n                    with the significance, defined as sig = -log(P-value).\n\
      \                    By default, logarithms are calculated in base 10, but\n\
      \                    this can be modified with the option -base.\n\n       \
      \         \e[1mseq_scores:\e[0m sequence-wise score\n                    Score\
      \ each sequence according to Bailey (1998), with the\n                    difference\
      \ that, instead of computing the product of\n                    P-values, we\
      \ compute the sum of significances.\n\n                \e[1mproba_BM:\e[0m P(S|M)\
      \ and P(S|B)\n                    For each scored segment S, returns its probability\
      \ under\n                    the matrix model P(S|M) and its probability under\
      \ the\n                    background model P(S|B).\n\n                \e[1mp_score:\e\
      [0m return the p_score\n                    This score is given by -log(Pval(w)/Pval_tresh).\
      \ Where\n                    Pval(w) is the P-value of the wheight and Pval_tresh\
      \ the\n                    threshold on P-value given by the user.\n\n     \
      \           \e[1mrank:\e[0m Rank.\n                    Sort the sites per decreasing\
      \ values of score (weight),\n                    and return the rank value.\n\
      \n                    The rank is calculated independently for each sequence.\n\
      \                    In addition, a matrix-specidic rank is calculated for\n\
      \                    each sequence (rank_pm). This allows to distinguish\n \
      \                   between multiple matches for a single matrix (homotypic\n\
      \                    modules), and separate matches for distinct matrices\n\
      \                    (heterotypic modules reflecting synergy between distinct\n\
      \                    transcription factors).\n\n                    A common\
      \ usage of the rank is to select the top scoring\n                    site per\
      \ sequence (-uth rank 1) or the 3 top scoring\n                    sites per\
      \ sequence (-uth rank 3).\n\n                    Another possibility is to define\
      \ a maximal number of\n                    matches per matrix in the same sequence\
      \ (-uth rank_pm\n                    3).\n\n                \e[1mnormw:\e[0m\
      \ normalized weights.\n                    Normalized weights are calculated\
      \ according to Thijs'\n                    formula :\n\n                   \
      \   normw = (W -Wmin)/(Wmax - Wmin)\n\n                    Note that Wmin and\
      \ Wmax are approximated using a\n                    Bernoulli model, for reasons\
      \ of commputational\n                    efficiency.\n\n                \e[1mlimits:\e\
      [0m limits (start, end) of the input sequences.\n                    This is\
      \ useful for drawing feature maps with sequences\n                    of different\
      \ lengths.\n\n                \e[1mweight_limits:\e[0m Wmin and Wmax.\n    \
      \                For each site, returns the minimal and maximal weight.\n  \
      \                  This is useful with adaptative background models.\n\n   \
      \             \e[1mcrer\e[0m\n                    Return Cis-Regulatory elements\
      \ Enriched-Regions (CRER).\n\n                    Calculate the statistical\
      \ significance of the number of\n                    hits in windows of variable\
      \ sizes. The number of hits is\n                    the sum of matches above\
      \ a predefined threshold set on\n                    hits p-values, for all\
      \ matrices and on both strands (if\n                    -2str). The maximum\
      \ size for a CRER is defined by the\n                    option -crer_max.\n\
      \n                    The prior probability to find an instance of the motif\n\
      \                    is the same for all matrices, and corresponds to the\n\
      \                    chosen pval threshold. Within a region of maximal CRER\n\
      \                    size, subwindows are defined between each hits, and the\n\
      \                    observed number of matches in a subwindow is the sum of\n\
      \                    hits above the threshold. The significance of the\n   \
      \                 observed number of matches in a subwindow is estimated\n \
      \                   by calculating a P-value using the binomial distribution\n\
      \                    (Aerts et al., 2003).\n\n                    Example of\
      \ CRER search:\n\n                     -return crer -uth pval 0.0001 -lth crer_size\
      \ 20 -uth crer_size 200\n\n                     => the returned CRER lengths\
      \ are between 20 and 200bp, and are\n                     constructed with hits\
      \ having a pval lower than 0.0001.\n\n                \e[1mdistrib\e[0m Score\
      \ distribution.\n                    Return the score distribution for each\
      \ matrix.\n\n                \e[1mocc_proba\e[0m Probability of the number of\
      \ matches in the input\n                sequence\n                    For each\
      \ matrix and each score value, calculate the\n                    statistical\
      \ significance of the number of matches. This\n                    allows to\
      \ select the score associated with te maximal\n                    significance,\
      \ on the basis of the matrix-specific\n                    distribution, rather\
      \ than by selecting some a priori\n                    threshold.\n\n      \
      \              For each motif (M) and each score value (s), the program\n  \
      \                  estimates the significance of the observed number of\n  \
      \                  matches (x), given the prior probability (p) to find an\n\
      \                    instance of this motif with at least this score at a\n\
      \                    given position of the sequence. The P-value is\n      \
      \              calculated using the binomial distribution (Aerts et\n      \
      \              al., 2003).\n\n                    This option requires to specify\
      \ a background score\n                    distribution (option -bg_distrib)\
      \ to estimate the prior\n                    probabilities of motif instances.\n\
      \n                \e[1mbg_model:\e[0m Background model.\n                  \
      \  Report the transition matrix of the background model.\n                 \
      \   Note that this option only makes sense for fixed\n                    background\
      \ models (-bgfile or -bginput), since when the\n                    background\
      \ model is adaptive (-mindow), the transition\n                    matrix changes\
      \ along he sequence.\n\n                \e[1mbg_residues\e[0m\n            \
      \        Return for each site the composition in A,C,G and T of\n          \
      \          the background model.\n\n                \e[1mmatrix\e[0m\n     \
      \               Return as comments the count matrix (or matrices) which\n  \
      \                  were used for scanning.\n\n                \e[1mfreq_matrix\e\
      [0m\n                    Return as comments the frequency matrix (or matrices)\n\
      \                    which were used for scanning.\n\n                \e[1mweight_matrix\e\
      [0m\n                    Return as comments the weight matrix (or matrices)\
      \ which\n                    were used for scanning.\n\n                \e[1m-sort_distrib\e\
      [0m\n\n                Sort score distribution by decreasing value of significance.\n\
      \                By default, the score distributions are sorted by score\n \
      \               (weight).\n\n                \e[1m-bg_distrib bg_distrib_file\e\
      [0m\n\n                File specifying the background score distribution used\
      \ to\n                estimate prior probabilities with the option -return\n\
      \                occ_proba. When this file is specified, the prior\n       \
      \         probabilities of motif occurrences are estimated from the\n      \
      \          frequencies of the background file, rather than using the\n     \
      \           theoretical site-wise P-value.\n\n                This background\
      \ distribution can be generated by running\n                matrix-scan on a\
      \ set of background sequences, with the\n                options\n\n       \
      \             matrix-scan -v 1 -return distrib -m matrix.tab -i\n          \
      \          bg_sequences.fta [...]\n\n                Various types of background\
      \ sequences can be used as\n                background model: whole genome,\
      \ whole set of upstream\n                sequences, randomly generated sequences,\
      \ ... The choice of\n                the background model has a strong effect\
      \ on the estimated\n                significance, and should thus be done carefully,\
      \ according\n                to the biological question.\n\n               \
      \ \e[1m-crer_ids\e[0m\n\n                Assign one separate feature ID per\
      \ CRER This option is\n                convenient to distinguish separate CRERs,\
      \ but it can be\n                heavy for feature-map legends, especially when\
      \ many CRERs\n                are detected.\n\n                \e[1m-quick\e\
      [0m\n\n                Delegates scanning to the C program matrix-scan-quick\n\
      \                (developed by Matthieu Defrance) Evaluate if the quick mode\n\
      \                is compatible with the selected output parameters,\n      \
      \          otherwise, run in the slower mode.\n\n                Incompatible\
      \ with - CRER scanning - window background model\n\n                \e[1m-recursive\e\
      [0m\n\n                Run matrix-scan separately for each sequence.\n\n   \
      \             \e[1m-batch #\e[0m\n\n                Dispatch matrix-scan jobs\
      \ on a cluster. Number of sequences\n                to be analyzed by job (=\
      \ on each node of the cluster)\n\n\e[1mINTERNAL PROCEDURES\e[0m\n    \e[1mscore_segment\e\
      [0m\n        Assign a score to a sequence segment and print it if it passes\
      \ the\n        thresholds. Return value is 1 if the segment passed the thresholds.\n\
      \n        Checks global variable $total_printed_matches. =back\n\n        \e\
      [1mp-score\e[0m\n            Compute the p-score as in Bailey 2003.\n\n    \
      \    \e[1mprint_match\e[0m\n            Print the matching site.\n\n\e[1mINTERNAL\
      \ PROCEDURES\e[0m\n    \e[1mscore_crer\e[0m\n        Calculate the score of\
      \ the CRER\n\n    \e[1mprint_crer\e[0m\n        Print the CRER.\n\n    \e[1mprint_crer_details\e\
      [0m\n        Print the CRER in tab-delimited format, with detailed attribtues.\n\
      \n    \e[1mcheck_matrix_thresholds\e[0m\n        Check the lower and upper threshold\
      \ for a given hit of a given\n        matrix.\n\n    \e[1mcheck_thresholds\e\
      [0m\n        Check the lower and upper thresholds for any parameter value\n\n\
      \    \e[1mcheck_distrib_thresholds\e[0m\n        Check the lower and upper threshold\
      \ for a given parameter in the\n        score distribution.\n\n\e[1mSEE ALSO\e\
      [0m\n    \e[33mconvert-matrix\e[0m\n    \e[33mconvert-background-model\e[0m\n\
      \    \e[33mfeature-map\e[0m\n\n\e[1mWISH LIST\e[0m\n  \e[1mautomatic pseudo-count\e\
      [0m\n    Automatically define a matrix-specific pseudo-count as the square root\n\
      \    of the number of sites used to train the matrix (the sum per column in\n\
      \    the residue count matrix).\n\n    This idea was propsed by Geert Thijs\
      \ (PhD thesis) as an empirical way to\n    choose the pseudo-count. This rule\
      \ makes sense, since the relative\n    impact of the pseudo-count decreases\
      \ when the number of sites increases.\n    The square root makes sense because\
      \ it is proportional to the standard\n    deviation of a Poisson sampling (the\
      \ variance of the Poisson\n    distribution equals its mean).\n\n  \e[1mHit\
      \ table\e[0m\n    Export a table with one row per input sequence, one column\
      \ per matrix,\n    where the value of a cell \e[33mh_{i,j}\e[0m indicates the\
      \ number of hits for\n    matrix \e[33mj\e[0m in sequence \e[33mi\e[0m.\n\n\
      \  \e[1mCo-occurrence table\e[0m\n    Return a m x m table (where m is the number\
      \ of input matrices) where the\n    value of a cell \e[33mc_{i,j}\e[0m indicates\
      \ the number of input sequences having\n    at least one site for matrix \e\
      [33mM_i\e[0m and on site for matrix \e[33mM_j\e[0m.\n\n    The goal is to detect\
      \ pairs of co-occuring motifs in order to predict\n    putatively interacting\
      \ transcription factors. The motifs do not need to\n    be individually over-represented,\
      \ what matters here is that they are\n    foudn together more frequently than\
      \ expected by chance. The significance\n    of the co-occurrences is computed\
      \ using the hypergeometric function.\n\n    This option is distinct from the\
      \ CRER detection. Motif co-occurrences\n    typically applies to the analysis\
      \ of large number of small sequences\n    (e.g. all the promoters of a gien\
      \ microbe), in order to detect pairs of\n    transcription factors whose putative\
      \ target genes show a significant\n    overlap.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - infer-operons
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: infer-operons
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    - !Positional
      description: "\e[1mMETHOD\e[0m"
      position: 1
      name: genomics
      optional: false
    - !Positional
      description: infer-operons -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2
        -q
      position: 0
      name: genes.
      optional: false
    - !Positional
      description: neighbour-genes
      position: 0
      name: retrieve-seq
      optional: false
    named:
    - !Flag
      description: ',leader,operon'
      synonyms:
      - -all
      - -return
      args: !SimpleFlagArg
        name: up_info
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -org
      - -noorf
      args: !SimpleFlagArg
        name: Escherichia_coli_GCF_000005845.2_ASM584v2
      optional: true
    - !Flag
      description: \ -return q_info,up_info,operon
      synonyms:
      - -q
      - -q
      args: !SimpleFlagArg
        name: metU
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    infer-operons\n\n\e[1mDESCRIPTION\e[0m\n    Given\
      \ a list of input genes, infer the operon to which each of these\n    genes\
      \ belong.\n\n    The inferrence is based on a \e[1mvery\e[0m simplistic distance-based\
      \ method,\n    inspired from the method developed by Salgado, Moreno et al.\
      \ (Proc Natl\n    Acad Sci U S A. 2000;97:6652-7). The Salgado-Moreno method\
      \ classifies\n    intergenic distances as TUB (transcription unit border) or\
      \ OP (inside\n    operon), and infers operons by iteratively collecting genes\
      \ until a TUB\n    is found. In the original method, the TUB or OP assignation\
      \ relies on a\n    log-likelihood score calculated from a training set.\n\n\
      \    The difference is that we do not use the log-likelihood (which presents\n\
      \    risks of over-fitting), but a simple threshold on distance. Thus, we\n\
      \    infer that the region upstream of a gene is TUB if its size is larger\n\
      \    than a given distance threshold, and OP otherwise. Our validations\n  \
      \  (Rekins' Janky and Jacques van Helden, unpublished results) show that a\n\
      \    simple threshold on distance raises a similar accuracy as the\n    log-likelihood\
      \ score (Acc ~ 78% for a threshold t=55).\n\n\e[1mAUTHORS\e[0m\n    Jacques.van-Helden\\\
      @univ-amu.fr\n\n\e[1mCATEGORY\e[0m\n    genomics\n\n\e[1mMETHOD\e[0m\n    The\
      \ method relies on three simple rules, depending on the relative\n    orientation\
      \ of the adjacent genes.\n\n    Rule 1: divergently transcribed genes\n    \
      \    If the gene found upstream of a query gene is transcribed in the\n    \
      \    opposite direction, then the intergenic region is considered as a\n   \
      \     TUB, and the two flanking genes are labelled as operon leaders. This\n\
      \        prediction is reliable (as far as genome annotation is correct),\n\
      \        since operons only contain genes on the same strand.\n\n    Rule 2:\
      \ convergently transcribed genes\n        If the gene found downstream of a\
      \ query gene is transcribed in the\n        opposite direction, then the intergenic\
      \ region is considered as a\n        TUB, and the two flanking genes are labelled\
      \ as operon trailers.\n        This prediction is reliable (as far as genome\
      \ annotation is\n        correct), since operons only contain genes on the same\
      \ strand.\n\n    Rule 3: tandem genes (adjacent genes on the same strand)\n\
      \        If two adjacent genes are on the same strand, then a distance\n   \
      \     threshold (option -dist) is applied to decide whether they belong to\n\
      \        the same operon (dist <= thredhold) or not (dist > threshold). If\n\
      \        they are predicted to be in distinct operon, the upstream gene is\n\
      \        labelled as operon trailer, and the downstream gene as leader of the\n\
      \        next operon.\n\n\e[1mUSAGE\e[0m\n    infer-operons [-i inputfile] [-o\
      \ outputfile] [-v] [options]\n\n    \e[1mExample 1\e[0m\n        With the following\
      \ command, we infer the operon for a set of input\n        genes.\n\n      \
      \  infer-operons -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2 -q\n  \
      \      hisD -q mhpR -q mhpA -q mhpD\n\n    \e[1mExample 2\e[0m\n        We now\
      \ specify different return fields\n\n        infer-operons -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -q\n        hisD -q lacI \\ -return leader,trailer,up_info,down_info,operon\n\
      \n    \e[1mExample 3\e[0m\n        Infer operons for all the genes of an organism.\n\
      \n        infer-operons -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2\n\
      \        -all -return up_info,leader,operon\n\n    \e[1mExample 4\e[0m\n   \
      \     Infer operon from a set of query genes, and retrieve the upstream\n  \
      \      sequence of the inferred leader gene. Note that two of the input\n  \
      \      genes (lacZ, lacY) belong to the same operon. to avoid including\n  \
      \      twice their leader, we use the unix command sort -u (unique).\n\n   \
      \     infer-operons -org Escherichia_coli_GCF_000005845.2_ASM584v2 -return\n\
      \        leader,operon \\ -q lacI -q lacZ -q lacY | sort -u \\ | retrieve-seq\n\
      \        -org Escherichia_coli_GCF_000005845.2_ASM584v2 -noorf\n\n    \e[1mExample\
      \ 5\e[0m\n        Note that operons can contain non-coding genes. For example,\
      \ the\n        metT operon contains a series of tRNA genes for methionine, leucine\n\
      \        and glutamina, respectively.\n\n        infer-operons -org Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -q glnV\n        -q metU -q ileV \\ -return q_info,up_info,operon\n\n\e[1mINPUT\
      \ FORMAT\e[0m\n    Each row of the input file specifies one query gene. The\
      \ first word of a\n    gene is the query, the rest of the row is ignored.\n\n\
      \e[1mOUTPUT FORMAT\e[0m\n    Tab-delimited text file, with one row per query\
      \ gene, and one column per\n    selected output field.\n\n\e[1mRELATED REFERENCES\e\
      [0m\n    Salgado, H., Moreno-Hagelsieb, G., Smith, T., and Collado-Vides, J.\n\
      \    (2000). Operons in Escherichia coli: genomic analyses and predictions.\n\
      \    Proc Natl Acad Sci USA 97, 6652-6657.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v\
      \ #\e[0m\n        Level of verbosity (detail in the warning messages during\
      \ execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e\
      [0m\n        Same as -h\n\n    \e[1m-i inputfile\e[0m\n        If no input file\
      \ is specified, the standard input is used. This\n        allows to use the\
      \ command within a pipe.\n\n    \e[1m-org organism\e[0m\n        Organism name.\n\
      \n    \e[1m-all\e[0m\n        Infer operons for all the genes of the query organism.\n\
      \n    \e[1m-q query_gene\e[0m\n        Query gene. This option can be used iteratively\
      \ on the same command\n        line to specify several query genes. Example:\n\
      \n        infer-operons -org Escherischia_coli_K12 -q LACZ -q hisA\n\n    \e\
      [1m-o outputfile\e[0m\n        If no output file is specified, the standard\
      \ output is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-dist #\e[0m\n        Distance threshold.\n\n    \e[1m-sep \e[0m\n\
      \        Specify the separator for multi-value fields (e.g.: genes) in the\n\
      \        output table. By default, multi-value fields are exported in a\n  \
      \      single column with a semicolon (\";\") as separator.\n\n    \e[1m-min_gene_nb\
      \ #\e[0m\n        Specify a threshold on the number of genes in the operon.\
      \ This\n        option is generally used when predicting all operons (option\
      \ -all),\n        in order to only return predicted polycistronic transcription\
      \ units\n        (-min_gene_nb 2) or restrict the output to operons\n      \
      \  containingpredicted to contain at least a given number of genes\n       \
      \ (e.g. -min_gene_nb 4).\n\n    \e[1m-return return_fields\e[0m\n        List\
      \ of fields to return.\n\n        Supported fields:\n        leader,trailer,operon,query,name,upstr_dist,q_info,up_info,down_info\n\
      \n        \e[1mleader\e[0m\n            Predicted operon leader gene (first\
      \ gene).\n\n        \e[1mtrailer\e[0m\n            Predicted operon trailer\
      \ gene (last gene).\n\n        \e[1moperon\e[0m\n            Full composition\
      \ of the operon. The names of member genes are\n            separated by a semi-column\
      \ \";\" (note that the gene separator can\n            be changed using the\
      \ option -sep).\n\n        \e[1mquery\e[0m\n            Identifier of the query\
      \ gene(s).\n\n        \e[1mname\e[0m\n            Name of the query gene(s).\n\
      \n        \e[1mq_info\e[0m\n            Detailed info on the query gene(s).\n\
      \n        \e[1mupstr_dist\e[0m\n            Distance betwene query gene and\
      \ its first upstream neighbour.\n            Note that this distance can be\
      \ negative, in case of mutually\n            overlapping genes.\n\n        \e\
      [1mup_info\e[0m\n            Detailed info on the upstream gene.\n\n       \
      \ \e[1mdown_info\e[0m\n            Detailed info on the downstream gene.\n\n\
      \        \e[1mgene_nb\e[0m\n            Number of genes in the predicted operon.\n\
      \n\e[1mSEE ALSO\e[0m\n    retrieve-seq\n    neighbour-genes\n    add-gene-info\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - supported-organisms-ensemblgenomes
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: supported-organisms-ensemblgenomes
      optional: false
    - !Positional
      description: "\e[1mspecies_taxid\e[0m"
      position: 0
      name: expressions.
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: util
      optional: false
    - !Positional
      description: "\e[1mSEE ALSO\e[0m"
      position: 0
      name: attribute.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    supported-organisms-ensemblgenomes\n\n\e[1mVERSION\e\
      [0m\n    $program_version\n\n\e[1mDESCRIPTION\e[0m\n    Get the list of organisms\
      \ supported at the Ensembl Genomes database,\n    using the Perl API. Organisms\
      \ can be selected by different criteria:\n\n    \e[1mbranch\e[0m\n        Given\
      \ the NCBI taxonomic ID, return all species belonging to the\n        corresponding\
      \ taxon.\n\n    \e[1mname\e[0m\n        Full or partial match with the organism\
      \ name, using regular\n        expressions.\n\n    \e[1mspecies_taxid\e[0m\n\
      \        Identify species by their NCBI taxonomic ID. Beware: the IDs must\n\
      \        correspond to species (taxids from wider taxa should be treated with\n\
      \        the query of type \"branch\").\n\n    \e[1mby genomic INSDC accession\e\
      [0m\n        TO BE DONE\n\n    \e[1mby Genome Assembly accession\e[0m\n    \
      \    TO BE DONE\n\n    This script relies on the ensemblgenomes programmatic\
      \ interface\n    developed by Dan Staines (http://ensemblgenomes.org/info/access/eg_api).\n\
      \n\e[1mAUTHORS\e[0m\n    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mCATEGORY\e\
      [0m\n    util\n\n\e[1mUSAGE\e[0m\n    Examples:\n\n  \e[1mBy species name\e\
      [0m\n    Get species whose name starts with either 'escherichia' or\n    'saccharomyces'.\n\
      \n     supported-organisms-ensemblgenomes -v 1 -query_type name \\\n       -q\
      \ 'escherichia.*' -q 'saccharomyces.*'\n\n  \e[1mBy taxonomic branch\e[0m\n\
      \    Select all Fungi\n\n     supported-organisms-ensemblgenomes -v 1 -query_type\
      \ branch -q 4751\n\n    Get all species belonging eitherto the genus Escherichia\
      \ (branch 561) or\n    to genus Saccharomyces (branch 4930)\n\n     supported-organisms-ensemblgenomes\
      \ -v 1 -query_type branch -q 561 -q 4930\n\n  \e[1mBy species taxonomic ID\e\
      [0m\n    Get the model strains for \e[33mSaccharomyces cerevisiae\e[0m and \e\
      [33mEscherichia coli\n    K12 MG1655\e[0m.\n\n     supported-organisms-ensemblgenomes\
      \ -v 1 -query_type species_taxid \\\n        -q XXX -q XXX (I did not find them\
      \ yet)\n\n\e[1mOUTPUT FORMAT\e[0m\n    A tab-delimited file with one row per\
      \ organism, and one column per\n    attribute.\n\n\e[1mSEE ALSO\e[0m\n    \e\
      [1minstall-ensembl-genome\e[0m\n\n\e[1mWISH LIST\e[0m\n\e[1mOPTIONS\e[0m\n \
      \   \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
      \ during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e\
      [1m-help\e[0m\n        Same as -h\n\n    \e[1m-query_type\e[0m\n    \e[1m-q\
      \ query\e[0m\n        Query string.\n\n        For name queries, regular expressions\
      \ are supported.\n\n        Multiple queries can be entered by using iteratively\
      \ the option -q.\n\n    \e[1m-query_file query_file\e[0m\n        Enter several\
      \ queries in a file. The first word of each row is\n        considered as a\
      \ query. Additional information is ignored.\n\n    \e[1m-o outputfile\e[0m\n\
      \        If no output file is specified, the standard output is used. This\n\
      \        allows to use the command within a pipe.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - purge-sequence
    positional:
    - !Positional
      description: 1999 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: purge-sequence
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "The file containing the sequence to purge.\nIf input_file is not\
        \ specified, the standard input is\nused.  This allows to place the command\
        \ within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: input_file
      optional: true
    - !Flag
      description: format
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: sequence
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: output_file
      optional: true
    - !Flag
      description: "dry run\nprint commands without executing them"
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#   match length (default: 40)'
      synonyms:
      - -ml
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#  mismatches (default: 3)'
      synonyms:
      - -mis
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: discard duplications on the direct strand only
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: discard duplications on the reverse complement as well
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "delete repeats instead of masking them\nBy default, repeats are\
        \ masked, i.e. each nucleotide\nwithin a repeat is replaced by the letter\
        \ n.  When the\noption -del is selected, repeats are deleted. This\nmeans\
        \ that one sequence of input can be converted to\nseveral fragments in the\
        \ output."
      synonyms:
      - -del
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Mask (replace by N characters) sequences strictly\nshorter than\
        \ the specified length. This can be useful\nto discard short intergenic segments\
        \ from the motif\ndiscovery step, especially when working with bacterial\n\
        genomes, where short intergenic sequences generally\ncorrespond to intra-operon\
        \ segments."
      synonyms:
      - -mask_short
      args: !SimpleFlagArg
        name: min_seq_len
      optional: true
    - !Flag
      description: "Skip sequences strictly shorter than the specified\nlength. Same\
        \ functionality as -mask_short, except that\nshort sequences are not returned\
        \ at all in the output.\nSkipping short sequences can be useful to prevent\n\
        indexing problems, when the input files contain\nsequences shorter than the\
        \ indexing prefix."
      synonyms:
      - -skip_short
      args: !SimpleFlagArg
        name: min_seq_len
      optional: true
    - !Flag
      description: "The perl script purge-sequence does not die in case\nthe encapsulated\
        \ programs (mkvtree, vmatch) return an\nerror message.\n"
      synonyms:
      - -nodie
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tpurge-sequence\n\n        1999 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nUSAGE\n        purge-sequence [-i input_file] [-o output_file] [-v] [-2str\
      \ | -1str]\n\nDESCRIPTION\n\n\tMask redundant fragments in a sequence. This\
      \ perl script is no\n\tmore than a wrapper to facilitate this specific usage\
      \ for two\n\tprograms developed by Stefan Kurtz : mkvtree and vmatch.\n\n\t\
      When a fragment is duplicated, the first ocurrence is\n\tconserved and the second\
      \ masked (or optionally deleted). \n\n\tBy default, the program also searches\
      \ similarities between the\n\tdirect and reverse complement strand.\n\nCATEGORY\n\
      \tsequences\n\nOPTIONS\n\t-h\t(must be first argument) display full help message\n\
      \t-help\t(must be first argument) display options\n\t-v\tverbose\n\t-i input_file\n\
      \t        The file containing the sequence to purge.\n\t\tIf input_file is not\
      \ specified, the standard input is\n\t\tused.  This allows to place the command\
      \ within a pipe.\n\t-format sequence format\n\t-o output_file\n\t\tif not specified,\
      \ the standard output is used.\n\t\tThis allows to place the command within\
      \ a pipe.\n\t-n\tdry run\n\t\tprint commands without executing them\n\t-ml #\t\
      match length (default: 40)\n\t-mis #\tmismatches (default: 3)\n\t-1str\tdiscard\
      \ duplications on the direct strand only\n\t-2str\tdiscard duplications on the\
      \ reverse complement as well\n\t-del\tdelete repeats instead of masking them\n\
      \t\tBy default, repeats are masked, i.e. each nucleotide\n\t\twithin a repeat\
      \ is replaced by the letter n.  When the\n\t\toption -del is selected, repeats\
      \ are deleted. This\n\t\tmeans that one sequence of input can be converted to\n\
      \t\tseveral fragments in the output.\n\n\t-mask_short min_seq_len\n\t\tMask\
      \ (replace by N characters) sequences strictly\n\t\tshorter than the specified\
      \ length. This can be useful\n\t\tto discard short intergenic segments from\
      \ the motif\n\t\tdiscovery step, especially when working with bacterial\n\t\t\
      genomes, where short intergenic sequences generally\n\t\tcorrespond to intra-operon\
      \ segments.\n\n\t-skip_short min_seq_len \n\t\tSkip sequences strictly shorter\
      \ than the specified\n\t\tlength. Same functionality as -mask_short, except\
      \ that\n\t\tshort sequences are not returned at all in the output.\n\n\t\tSkipping\
      \ short sequences can be useful to prevent\n\t\tindexing problems, when the\
      \ input files contain\n\t\tsequences shorter than the indexing prefix.\n\n\t\
      -nodie\n\t\tThe perl script purge-sequence does not die in case\n         \t\
      the encapsulated programs (mkvtree, vmatch) return an\n         \terror message.\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - retrieve-seq
    positional:
    - !Positional
      description: CATEGORY
      position: 0
      name: genes.
      optional: false
    - !Positional
      description: sequences
      position: 1
      name: genomics
      optional: false
    - !Positional
      description: field   description
      position: 0
      name: column
      optional: false
    named:
    - !Flag
      description: "When an organism is specified, the program automatically\nloads\
        \ the appropriate genome sequence and feature table.\nIf this option is not\
        \ used, the option -seq must be used\ninstead.\n(type supported-organism to\
        \ obtain the list of supported\norganisms)"
      synonyms:
      - -org
      args: !SimpleFlagArg
        name: organism
      optional: true
    - !Flag
      description: "input sequence file\n(alternative to organism)\nSpecify the input\
        \ sequence file. See INPUT FORMAT\nbelow."
      synonyms:
      - -seq
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: input sequence format
      synonyms:
      - -informat
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: prefix for sequence identifier
      synonyms:
      - -prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Feature type.\nSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon"
      synonyms:
      - -feattype
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "sequence type\nCurrently supported sequence types\nupstream (default)\n\
        downstream\norf (warning: introns are not spliced out)\nrandom (random fragments)\n\
        To implement in the future\nintrons\ncoding\nThe sub-option\n-type random\n\
        requires to use the -n for specifying the number of sequences."
      synonyms:
      - -type
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: of sequecnes (only with -type random)
      synonyms:
      - -n
      args: !SimpleFlagArg
        name: number
      optional: true
    - !Flag
      description: "The query should be an orf identifier (eg 'metR').\nThe query\
        \ is case-insensitive.\nMultiple queries can be entered by reiteratively using\
        \ the -q\noption."
      synonyms:
      - -q
      args: !SimpleFlagArg
        name: query
      optional: true
    - !Flag
      description: "query file. The first word of each line is taken as a query.\n\
        This option is incompatible with -q."
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use this option if the queries are provided as a list\nof IDs.\
        \ This avoids to load the table of synonyms, in\norder tos ave time."
      synonyms:
      - -ids_only
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: return all genomic upstream regions
      synonyms:
      - -all
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: name of the output file
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "output features file\nin addition to the sequences, export a feature\
        \ file with the\nchromosomal location of the retrieved sequences."
      synonyms:
      - -oft
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#1 -to #2\nwhere #1 and #2 are numbers. #2 should be higher than\
        \ #1.\nlimits of the region to extract, relative to orf start\n(=position\
        \ 0). Use negative values for upstream sequence.\nexample: -from -800 -to\
        \ -1\nwill extract the 800 bp upstream the orf start.\n(this is the default)"
      synonyms:
      - -from
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "to select different output formats, with the following\noptions:\n\
        IG      IntelliGenetics (default format)\nWC      wconsensus format\nraw \
        \    only the sequence is returned, without spaces, newlines\nnor comments.\n\
        FastA"
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: allows
      optional: true
    - !Flag
      description: "##  Line width. A newline character will be inserted in the\n\
        sequence every ## bases. Default is 60.\n-lw 0 will prevent newline insertion."
      synonyms:
      - -lw
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Field(s) to be used in the sequence label.\nDefault: name.\nSupported:\
        \ id,name,query,organism_name,sequence_type,current_from,current_to,ctg,orf_strand,reg_left,reg_right\n\
        Multiple fields can be specified, separated by commas\nin the command line.\n\
        Example:\n-label org,name,id\nIn this case, the sequence identifier will contain\
        \ all\nof these fields, separated by the separator specified\nwith the option\
        \ -labelsep."
      synonyms:
      - -label
      args: !SimpleFlagArg
        name: label_fields
      optional: true
    - !Flag
      description: 'Separator between label fields. Default: |'
      synonyms:
      - -labelsep
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "prevent overlap with neighbout genes.\nWhen this option is active,\
        \ the sequence size is\nadapted to avoid including coding sequences of the\n\
        neighbour genes.\nThe reason for preventing overlap with upstream genes\n\
        is that (at least for microbial organisms, and in\nlarge part for higher eukaryotes)\
        \ most cis-acting\nelements are located in the non-coding regions. Thus,\n\
        if the neighbour gene is closer than the selected\nlimit for collecting upstream\
        \ sequences, the part of\ncoding sequences included it the result is likely\
        \ to\nadd up to the noise, without bringing any additional\nsignal.\nMore\
        \ importantly, coding and non-coding sequences\ngenerally have very different\
        \ background models. The\ninclusion of coding sequences from neighbour genes\
        \ may\nthus lead to biases in motif discovery.\nThe weaknesses of using this\
        \ option are that, in some\ncases, predicted orf do not correspond to real\
        \ genes,\nThis was particularly frequent in the early versions\nof the yeast\
        \ genome, but the annotations have been\nimproved since then.\nFor bacterial\
        \ sequences, it is essential to prevent\noverlap with upstream genes, because\
        \ intergenic\ndistances are often very short, especially between\npairs of\
        \ genes comprised in the same operon."
      synonyms:
      - -noorf
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use the repeat masked version of the genome.  Attention :\nrepeated\
        \ regions are annotated for some genomes only."
      synonyms:
      - -rm
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "no comments. Only the identifier and the sequence are\nreturned.\
        \ By default, the comment indicates the ORF and\nupstream sequence coordinates."
      synonyms:
      - -nocom
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Admit imprecise positions.\nIn the annotation of some genomes,\
        \ the limits of some genes\nare imprecisely specified (e.g. <555245, >898098).\
        \ By default,\nthese genes are not loaded. The option -imp_pos allows to\n\
        retrieve sequence for these genes as well, using the imprecise\ncoordinate\
        \ as reference position."
      synonyms:
      - -imp_pos
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Prevents warning when a gene cannot be identified.
      synonyms:
      - -nowarn
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nSelect a random set of # genes in the genome annotations.\n\
        This option ois obsolete, it has been replaced by a\nseparate command: random-genes.\
        \ The option is\nmaintained for backward compatibility."
      synonyms:
      - -randsels
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "length file\n(only with the option '-type random')\nAllows to\
        \ generate random sequences with the same\nlengths as a set of reference sequences.\
        \ The sequence\nlength file can be obtained with the command\nsequence-lengths\n\
        The length file contains two columns :\n- sequence ID (ignored)\n- sequence\
        \ length"
      synonyms:
      - -lf
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "alternate feature table. This option allows to speify\nan alternate\
        \ file where the ORF locations are found.\nSee below for a description of\
        \ the feature file format."
      synonyms:
      - -features
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "USAGE\n\tretrieve-seq -type type -org organism\n\t\t\t[-from] [-to]\
      \ [-format seqformat] [-lw line_width]\n\t\t\t[-o outpufile] -q query_orf |\
      \ -i query file | -all\n\nDESCRIPTION\n\tReturns upstream, downstream or coding\
      \ DNA sequences for list of query\n\tgenes.\n\nCATEGORY\n\tgenomics\n\tsequences\n\
      \nOPTIONS\n\t-org organism\n\t     When an organism is specified, the program\
      \ automatically\n\t     loads the appropriate genome sequence and feature table.\n\
      \n\t     If this option is not used, the option -seq must be used\n\t     instead.\n\
      \n\t     (type supported-organism to obtain the list of supported\n\t     organisms)\n\
      \n\t-seq\tinput sequence file\n\t\t(alternative to organism)\n\n\t\tSpecify\
      \ the input sequence file. See INPUT FORMAT\n\t\tbelow.\n\t-informat\tinput\
      \ sequence format\n\t-prefix\n\t\tprefix for sequence identifier\n\t-feattype\n\
      \t\tFeature type.\n\t\tSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon\n\
      \t-type\tsequence type\n\t\tCurrently supported sequence types\n\t\t\tupstream\
      \ (default)\n\t\t\tdownstream\n\t\t\torf (warning: introns are not spliced out)\n\
      \t\t\trandom (random fragments)\n\t\tTo implement in the future\n\t\t\tintrons\n\
      \t\t\tcoding\n\n\t\tThe sub-option\n\t\t    -type random\n\t\trequires to use\
      \ the -n for specifying the number of sequences.\n\t-n number of sequecnes (only\
      \ with -type random)\n\t-q query\n\t\tThe query should be an orf identifier\
      \ (eg 'metR').\n\t\tThe query is case-insensitive.\n\t\tMultiple queries can\
      \ be entered by reiteratively using the -q\n\t\toption.\n        -i     query\
      \ file. The first word of each line is taken as a query.\n                This\
      \ option is incompatible with -q.\n\n\t-ids_only\n\t\tUse this option if the\
      \ queries are provided as a list\n\t\tof IDs. This avoids to load the table\
      \ of synonyms, in\n\t\torder tos ave time.\n\t-all\treturn all genomic upstream\
      \ regions\n\n\t-o\tname of the output file\n\n\t-oft\toutput features file\n\
      \t\tin addition to the sequences, export a feature file with the\n\t\tchromosomal\
      \ location of the retrieved sequences.\n\n        -from #1 -to #2\n        \
      \        where #1 and #2 are numbers. #2 should be higher than #1.\n       \
      \         limits of the region to extract, relative to orf start\n         \
      \       (=position 0). Use negative values for upstream sequence.\n        \
      \                example: -from -800 -to -1\n                        will extract\
      \ the 800 bp upstream the orf start.\n\t\t\t (this is the default)\n\n\t-format\t\
      allows to select different output formats, with the following\n\t\toptions:\n\
      \t\tIG\tIntelliGenetics (default format)\n\t\tWC\twconsensus format\n\t\traw\t\
      only the sequence is returned, without spaces, newlines\n\t\t\tnor comments.\n\
      \                FastA\n\n\t-lw ##\tLine width. A newline character will be\
      \ inserted in the\n\t\tsequence every ## bases. Default is 60.\n\t\t-lw 0 will\
      \ prevent newline insertion.\n\n        -label label_fields\n\t       Field(s)\
      \ to be used in the sequence label.\n\t       Default: name.\n\t       Supported:\
      \ id,name,query,organism_name,sequence_type,current_from,current_to,ctg,orf_strand,reg_left,reg_right\n\
      \n\t       Multiple fields can be specified, separated by commas\n\t       in\
      \ the command line.\n\n\t       Example:\n\t\t\t-label org,name,id\n\n\t   \
      \    In this case, the sequence identifier will contain all\n\t       of these\
      \ fields, separated by the separator specified\n\t       with the option -labelsep.\n\
      \n\t-labelsep\n\t\tSeparator between label fields. Default: |\n\n\t-noorf\t\
      prevent overlap with neighbout genes.\n\n\t\tWhen this option is active, the\
      \ sequence size is\n\t\tadapted to avoid including coding sequences of the\n\
      \t\tneighbour genes.\n\n\t\tThe reason for preventing overlap with upstream\
      \ genes\n\t\tis that (at least for microbial organisms, and in\n\t\tlarge part\
      \ for higher eukaryotes) most cis-acting\n\t\telements are located in the non-coding\
      \ regions. Thus,\n\t\tif the neighbour gene is closer than the selected\n\t\t\
      limit for collecting upstream sequences, the part of\n\t\tcoding sequences included\
      \ it the result is likely to\n\t\tadd up to the noise, without bringing any\
      \ additional\n\t\tsignal.\n\n\t\tMore importantly, coding and non-coding sequences\n\
      \t\tgenerally have very different background models. The\n\t\tinclusion of coding\
      \ sequences from neighbour genes may\n\t\tthus lead to biases in motif discovery.\n\
      \n\t\tThe weaknesses of using this option are that, in some\n\t\tcases, predicted\
      \ orf do not correspond to real genes,\n\t\tThis was particularly frequent in\
      \ the early versions\n\t\tof the yeast genome, but the annotations have been\n\
      \t\timproved since then.\n\n\t\tFor bacterial sequences, it is essential to\
      \ prevent\n\t\toverlap with upstream genes, because intergenic\n\t\tdistances\
      \ are often very short, especially between\n\t\tpairs of genes comprised in\
      \ the same operon.\n\n\n\t-rm     Use the repeat masked version of the genome.\
      \  Attention :\n\t\trepeated regions are annotated for some genomes only.\n\n\
      \t-nocom\tno comments. Only the identifier and the sequence are\n\t\treturned.\
      \ By default, the comment indicates the ORF and\n\t\tupstream sequence coordinates.\n\
      \n\t-imp_pos\n\t\tAdmit imprecise positions.\n\t\tIn the annotation of some\
      \ genomes, the limits of some genes\n\t        are imprecisely specified (e.g.\
      \ <555245, >898098). By default,\n\t        these genes are not loaded. The\
      \ option -imp_pos allows to\n\t        retrieve sequence for these genes as\
      \ well, using the imprecise\n\t        coordinate as reference position.\n\n\
      \t-nowarn\n\t\tPrevents warning when a gene cannot be identified.\n\n\t-randsels\
      \ #\n\t\tSelect a random set of # genes in the genome annotations.\n\t\tThis\
      \ option ois obsolete, it has been replaced by a\n\t\tseparate command: random-genes.\
      \ The option is\n\t\tmaintained for backward compatibility.\n\n\t-lf\tlength\
      \ file\n\t\t(only with the option '-type random')\n\t\tAllows to generate random\
      \ sequences with the same\n\t\tlengths as a set of reference sequences. The\
      \ sequence\n\t\tlength file can be obtained with the command\n\t\t\tsequence-lengths\n\
      \t\tThe length file contains two columns :\n\t\t    - sequence ID (ignored)\n\
      \t\t    - sequence length\n\n\t-features\n\t\talternate feature table. This\
      \ option allows to speify\n\t\tan alternate file where the ORF locations are\
      \ found.\n\t\tSee below for a description of the feature file format.\n\nINPUT\
      \ FORMATS\n\tInput sequence file\n\t\tSequence file is of type filelist, i.e.\
      \ this file\n\t\tcontains a list of other file names, each of which\n\t\tcontains\
      \ a raw contig sequence (usually a whole\n\t\tchromosome). The raw sequence\
      \ files cannot contain any\n\t\tspace or carriage return : the character position\
      \ in\n\t\tthe file must correspond to the nucleotide position on\n\t\tthe contig.\n\
      \n\tFeature file\n\t\tThe feature file contains one line per feature, with\n\
      \t\ttab-delimited columns providing the following information:\n\t\tcolumn\t\
      field   description\n\t\t1\tid\tfeature identifier\n\t\t2\ttype\tfeature type\
      \ (Supported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon)\n\
      \t\t3\tname\tfeature name\n\t\t4\tctg\tchomosome.or contig\n\t\t5\tleft\tleft\
      \ end position\n\t\t6\tright\tright end position\n\t\t7\tstrand\tD (direct)\
      \ or R (reverse)\n\t\t8\tdescr\tshort description (optional)\n\nEXAMPLES\n\t\
      retrieve-seq -type upstream -org Escherichia_coli_GCF_000005845.2_ASM584v2 \\\
      \n\t\t     -q metJ -q meta -q metb\t\t      \\\n\t\t     -from +59 -to -200\
      \ -noorf\n\n\twill return the sequence of 260 nucleotides, 200of which\n\textracted\
      \ upstream the start codon, and the 60 following being\n\tthe beginning of the\
      \ coding sequence.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - matrix-from-patterns
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: matrix-from-patterns
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: jvhelden@ulb.ac.be
      optional: false
    - !Positional
      description: motif discovery
      position: 1
      name: sequences
      optional: false
    - !Positional
      description: "\e[1m-toppat #\e[0m"
      position: 0
      name: dyad-analysis.
      optional: false
    - !Positional
      description: "\e[1m-1str\e[0m use a single strand to build the motifs"
      position: 0
      name: Strands
      optional: false
    - !Positional
      description: "\e[1m-sites\e[0m"
      position: 0
      name: ones.
      optional: false
    - !Positional
      description: "\e[1m\e[33mmatrix-scan\e[0m\e[0m"
      position: 0
      name: PSSM.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    matrix-from-patterns\n\n\e[1mDESCRIPTION\e[0m\n\
      \    Build PSSMs from a sequence set using as seeds a set of patterns\n    (oligos,\
      \ dyads) or an assembly.\n\n    Build position-specific scoring matrices (PSSM)\
      \ by collecting sites from\n    a given sequence set, using as seeds either\
      \ a set of patterns (the\n    output of \e[33moligo-analysis\e[0m or \e[33mdyad-analysis\e\
      [0m) or an assembly made of such\n    patterns (output of \e[33mpattern-assembly\e\
      [0m).\n\n    The program proceeds in two steps:\n\n    1) A \e[1msignificance\
      \ matrix\e[0m is built by assembling the patterns (with\n    \e[33mpattern assembly\e\
      [0m), and converting each assembly to a position-specific\n    scoring matrix\
      \ (the conversion is ensured by \e[33mconvert-matrix\e[0m). This\n    significance\
      \ matrix contains one row per residue, one column per\n    position of the pattern\
      \ assembly, and each cell indicates the maximal\n    significance value observed\
      \ for a given residue at a given position in\n    the assembly.\n\n    2) The\
      \ significance matrix is then used as seed for collecting a PSSSM\n    from\
      \ the input sequences. The matrix is collected either with\n    \e[33minfo-gibbs\e\
      [0m (since Nov 2009) or with \e[33mmatrix-scan\e[0m (slow and obsolete).\n\n\
      \    Advantage of this two-step process: classically, position-specific\n  \
      \  scoring matrices are build from an alignemnt of sites (e.g. binding\n   \
      \ sites for a transcription factor). A significance matrix already gives a\n\
      \    good indication of the motif, but it does not always reflect the real\n\
      \    sites present in the sequence, because it is built by assembling\n    overlapping\
      \ oligonucleotides (or dyads), irrespective of the fact that\n    these patterns\
      \ are found together or not in the input sequence.\n\n    The program \e[33mmatrix-from-pattern\e\
      [0m solves this problem by using the\n    assembled patterns as seeds to perform\
      \ a matrix-based scanning of the\n    input sequences, and collect the most\
      \ likely instances of the motif\n    (putative sites). These sites are then\
      \ used to build an count matrix,\n    reflecting the absolute residue frequencies\
      \ at each position of the\n    collected sites.\n\n    Weakness of this approach:\
      \ the scanning step can be time-consuming when\n    the input sequences are\
      \ large (e.g. for whole-genome motif detection).\n\n\e[1mAUTHORS\e[0m\n    jvhelden@ulb.ac.be\n\
      \n\e[1mCATEGORY\e[0m\n    sequences\n    motif discovery\n\n\e[1mUSAGE\e[0m\n\
      \    matrix-from-patterns -seq sequence_filfe \\ [-pl pattern_file|-asmb\n \
      \   assembly_file] \\ [-o output_basename] [-v #]\n\n\e[1mINPUT FORMAT\e[0m\n\
      \    \e[1mSequence file\e[0m\n    \e[1mPattern file\e[0m\n        The pattern\
      \ file must be in the output format of \e[33mpattern-assembly\e[0m.\n\n\e[1mOUTPUT\
      \ FORMAT\e[0m\n    The output file contains one or several PSSM extracted from\
      \ the\n    sequences. The supported output formats are the same as for\n   \
      \ \e[33mconvert-matrix\e[0m.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n    \
      \    Level of verbosity (detail in the warning messages during execution)\n\n\
      \    \e[1m-n\e[0m  Dry run: do not run the system commands called by this script.\
      \ This\n        option can be combined with a high level of verbosity (e.g.\
      \ -v 3) in\n        order to display the commands without running them.\n\n\
      \    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n      \
      \  Same as -h\n\n    \e[1m-seq sequence_file\e[0m\n        If no input file\
      \ is specified, the standard input is used. This\n        allows to use the\
      \ command within a pipe.\n\n    \e[1m-format sequence_format\e[0m\n        Sequence\
      \ format.\n\n    \e[1m-pl pattern_file\e[0m\n        Pattern file. This file\
      \ contains a list of patterns. typically, this\n        file should be the output\
      \ of the programes oligoanalysi or\n        dyad-analysis.\n\n    \e[1m-toppat\
      \ #\e[0m\n        Max number of patterns to assemble. This argument is passed\
      \ to\n        \e[33mpattern-assembly\e[0m.\n\n    \e[1m-max_asmb_nb\e[0m\n \
      \       This parameter is passed to pattern-assembly, to indicate the\n    \
      \    maximal number of assemblies to return.\n\n        Since each assembly\
      \ is then converted into a PSSM by\n        matrix-from-pattern, this option\
      \ also indicates the maximal number\n        of matrices to return.\n\n    \
      \    Note that when matrix-from-patterns is fed with pre-assembled\n       \
      \ patterns (option -asmb instead of -pl), the option -max_asmb_nb is\n     \
      \   not working.\n\n    \e[1m-top_seq #\e[0m\n        Max number of sequences\
      \ to scan for building final matrices.\n\n    \e[1m-sc #\e[0m\n        Column\
      \ containing the pattern scores in the input pattern file. This\n        argument\
      \ is passed to \e[33mpattern-assembly\e[0m.\n\n    \e[1m-cc #\e[0m\n       \
      \ Column indicating the pattern clusters in the input pattern file\n       \
      \ (default 1). This argument is passed to \e[33mpattern-assembly\e[0m.\n\n \
      \   \e[1m-max_asmb_per_cluster\e[0m\n        This parameter is passed to pattern-assembly,\
      \ to indicate the\n        maximal number of assemblies to return per cluster.\
      \ It makes only\n        sense when the option -cc is used.\n\n    \e[1m-subst\e\
      [0m\n        Maximum number of allowed substitution for pattern assembly.\n\n\
      \        This parameter is passed to the program \e[33mpattern-assembly\e[0m.\n\
      \n    \e[1m-maxfl\e[0m\n        Maximum number of flanking residues for pattern\
      \ assembly.\n\n        This parameter is passed to the program \e[33mpattern-assembly\e\
      [0m.\n\n    \e[1m-match\e[0m\n        Minimum number of matching residues for\
      \ pattern assembly.\n\n        This parameter is passed to the program \e[33mpattern-assembly\e\
      [0m.\n\n    \e[1m-weight\e[0m\n        Minimum matching weight for pattern assembly.\n\
      \n        This parameter is passed to the program \e[33mpattern-assembly\e[0m.\n\
      \n    \e[1m-max_asmb_size\e[0m\n        Maximum assembly size (number of patterns\
      \ per assembly).\n\n        This parameter is passed to the program \e[33mpattern-assembly\e\
      [0m.\n\n    \e[1m-max_asmb_width\e[0m\n        Maximum assembly width.\n\n \
      \       This parameter is passed to the program \e[33mpattern-assembly\e[0m.\n\
      \n    \e[1m-asmb assembly_file\e[0m\n        Assembly file. As an alternative\
      \ to the pattern file, the patterns\n        can be provided in the form of\
      \ the result of pattern-assembly.\n\n    \e[1m-1str|-2str\e[0m\n        Strands\n\
      \n        \e[1m-1str\e[0m use a single strand to build the motifs\n        \e\
      [1m-2str\e[0m use both strands to build the motifs\n\n    \e[1m-o output_basename\e\
      [0m\n        The program exports several files, whose name is specified by the\n\
      \        output basename, followed by an extension.\n\n    \e[1m-prefix matrix_prefix\e\
      [0m\n    \e[1m-cluster matrix_clust_option\e[0m\n        Run \e[33mmatrix-clustering\e\
      [0m to filter out redundant matrices, on the\n        significance matrices\
      \ (\e[33m-cluster sig\e[0m), on the count matrices\n        (\e[33m-cluster\
      \ counts\e[0m), on both (\e[33m-cluster both\e[0m) or none (\e[33m-cluster none\e\
      [0m).\n\n        Applying the filtering at the level of the significance matrices\n\
      \        reduces the scanning time, since the count matrices are built by\n\
      \        scanning sequences with each significance matrix. However it might\n\
      \        result in a loss of sensitivity, some motif being absorbed by other\n\
      \        ones.\n\n    \e[1m-sites\e[0m\n        Export the sites used to build\
      \ the count matrix. These sites can be\n        used for example to draw a sequence\
      \ logo.\n\n        The sites are exported in various formats:\n\n        a separate\
      \ fasta file, after each count matrix;\n        \"BS\" fields in the transfac-formatted\
      \ output matrices.\n\n    \e[1m-collect_method\e[0m\n        Method for converting\
      \ sig matrices into count matrices.\n\n        Supported methods:\n\n      \
      \  \e[33mmatrix-scan-quick\e[0m (Default)\n            Same principle as \e\
      [33mmatrix-scan\e[0m. The program \e[33mmatrix-scan-quick\e[0m is\n        \
      \    100 times faster, but does not compute the P-values. For the\n        \
      \    time being, an arbitrary threshold is imposed on the weight\n         \
      \   score (w >= 7).\n\n        \e[33minfo-gibbs\e[0m (slow)\n            The\
      \ significance matrices (obtained from \e[33mpattern-assembly\e[0m are\n   \
      \         used as seeds by \e[33minfo-gibbs\e[0m, which runs a few iterations\
      \ of\n            gibbs sampling (default: 3).\n\n        \e[33mmatrix-scan\e\
      [0m (slow, obsolete)\n            The significance matrices are used to collect\
      \ from the input\n            sequences all the sites passing a given P-value\
      \ threshold. Those\n            sites are then aligned to buil count matrices.\
      \ This was the\n            original conversion method, but presents some drawbacks.\n\
      \            Firstly, the original implementation of matrix-scan is quite low\n\
      \            (2009 version). Secondly, some matrices may fail to return any\n\
      \            site below the P-value threshold. We therefore recommend to use\n\
      \            the info-gibbs option. =item \e[33mmatrix-scan\e[0m (slow, obsolete)\n\
      \n    \e[1m-gibbs_msps\e[0m\n        Mean number of sites per sequences passed\
      \ to info-gibbs for\n        converting significance matrices into count matrices.\
      \ This parameter\n        is particularly important and has to be adapted to\
      \ the sequence\n        sets. For example, for yeast promoters, one typically\
      \ expects 2\n        sites per sequence on average. For sequence fragments obtained\
      \ from\n        ChIP-chip or ChIP-seq datasets (typically sveral hundreds fo\n\
      \        fragments, ~200bp per fragment), it might be safer to test values\n\
      \        lower than 1, since sequences are expected to generally contain 1\n\
      \        site, and sometimes contain none.\n\n    \e[1m-gibbs_iter\e[0m\n  \
      \      Number of iterations for info-gibbs.\n\n    \e[1m-flanks\e[0m\n     \
      \   Number of flanking residues to be added on each side of the\n        significance\
      \ matrix in order to extend the motif size.\n\n    \e[1m-min_weight\e[0m\n \
      \       Minimal weight\n\n    \e[1m-gibbs_final\e[0m\n        Run the final\
      \ cycle with info-gibbs to collect the best sites.\n\n    \e[1m-logo\e[0m\n\
      \        Export the sequence logos representing the count matrix.\n\n    \e\
      [1m-links\e[0m\n        Return HTML links in the convert-matrix result, to send\
      \ the matrices\n        to external tools (TOMTOM) for comparigon with motif\
      \ collections.\n\n    \e[1m-scan_param\e[0m\n        The next argument is passed\
      \ to matrix-scan (this will raise an error\n        if these arguments are not\
      \ supported).\n\n        Example: -scan_param '-uth Pval 1e-3 -uth rank 40'\
      \ will only return\n        the 40 top ranking sites, with a maximal Pvalue\
      \ of 1e-3.\n\n        Any other parameter supported by matrix-scan can be passed\
      \ in the\n        same way. The option can be used iteratively on a command\
      \ line to\n        add up various parameters. Example: -scan_param '-uth Pval\
      \ 1e-3'\n        -scan_param '-uth rank 40' [...]\n\n        If no parameters\
      \ are specified, the Pval is set to 1e-4 by default,\n        without limit\
      \ on the number of sites.\n\n\e[1mSEE ALSO\e[0m\n  \e[1m\e[33mpattern-assembly\e\
      [0m\e[0m\n    The program \e[33mpattern-assembly\e[0m is used to assemble patterns\
      \ according to\n    their similarities.\n\n  \e[1m\e[33mconvert-matrix\e[0m\e\
      [0m\n    The program \e[33mconvert-matrix\e[0m is used to convert the collected\
      \ sites into\n    PSSM.\n\n  \e[1m\e[33mmatrix-scan\e[0m\e[0m\n    The program\
      \ \e[33mmatrix-scan\e[0m is used to build the count matrix from the\n    significance\
      \ matrix.\n\n\e[1mWISH LIST\e[0m\n    \e[1m-iter\e[0m\n        Number of iterations\
      \ for the expectation-maximization cycle (collect\n        sites with matrix\
      \ and update matrix from collected sites). Default:\n        1.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - oligo-diff
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: oligo-diff
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van.Helden@ulb.ac.be
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: util
      optional: false
    - !Positional
      description: "\e[1m-ctrl control_seq_file\e[0m"
      position: 0
      name: format.
      optional: false
    - !Positional
      description: "\e[1m-l oligo_length\e[0m"
      position: 0
      name: occurrences.
      optional: false
    - !Positional
      description: "\e[1m-return maps\e[0m"
      position: 0
      name: respectively.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    oligo-diff\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Compare oligonucleotide occurrences between two\
      \ input sequence files\n    (\"test\" and \"control\"), and return oligos that\
      \ are significantly\n    enriched in one of the files respective to the other\
      \ one.\n\n    The statistical significance of the enrichment is computed using\
      \ the\n    hypergeometric distribution.\n\n    Note that the files are named\
      \ \"test\" and \"control\" by convention, but\n    the hypergeometric test is\
      \ symmetrical. Swapping the two input sequence\n    file should thus return\
      \ exactly the same results.\n\n\e[1mAUTHORS\e[0m\n    Jacques.van.Helden@ulb.ac.be\n\
      \n\e[1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e[0m\n    oligo-diff [-i inputfile]\
      \ [-o outputfile] [-v #] [...]\n\n\e[1mINPUT FORMAT\e[0m\n    The program takes\
      \ as input a pair of sequence files in fasta format.\n\n\e[1mOUTPUT FORMAT\e\
      [0m\n    The output is a tab-delimted file with one row per oligonucleotide,\
      \ and\n    one column per statistics. The column content is detailed in the\
      \ header\n    of the output (for this, the verbosity needs to be at least 1).\n\
      \n\e[1mSTATISTICAL MODEL\e[0m\n\e[1mSEE ALSO\e[0m\n  \e[1moligo-analysis\e[0m\n\
      \    The programs \e[33moligo-diff\e[0m and \e[33moligo-analysis\e[0m serve\
      \ for related purposes:\n    discovering exceptional oligonucleotides. The difference\
      \ is that\n    \e[33moligo-analysis\e[0m considers a single sequence file, and\
      \ compares pobserved\n    oligo-frequencies with those expected from a background\
      \ model (Bernoulli\n    or Markov). This background model is generally estimated\
      \ from a set of\n    background sequences.\n\n    In the situation where one\
      \ wants to compare a small sequence file (e.g.\n    50 promoters of co-expressed\
      \ genes) to a large one (e.g. the 6000 other\n    promoters of the considered\
      \ organism), \e[33moligo-diff\e[0m should return more or\n    less the same\
      \ results as \e[33moligo-analysis\e[0m with a background model based on\n  \
      \  the large file. Slight differences come from the use of the\n    hypergeometric\
      \ (\e[33moligo-diff\e[0m) versus binomial (\e[33moligo-analysis\e[0m) statistics.\n\
      \n  \e[1mcount-words\e[0m\n    \e[33moligo-diff\e[0m calls the program \e[33mcount-words\e\
      [0m to count oligonucleotide\n    occurrences in the two input sequence files.\
      \ The program \e[33mcount-words\e[0m is\n    part of the RSAT suite (it is written\
      \ in C, and has to be compiled as\n    explained in the RSAT installation guide).\n\
      \n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail\
      \ in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display full\
      \ help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-test\
      \ test_seq_file\e[0m\n        Test sequence file.\n\n        Both the test and\
      \ control sequences must be provided in fasta\n        format.\n\n    \e[1m-ctrl\
      \ control_seq_file\e[0m\n        Control sequence file.\n\n    \e[1m-side test\
      \ | ctrl | both\e[0m\n        Side of the significance test. In practice, the\
      \ side is converted\n        into a threshold on the ratio test/control occurrences.\n\
      \n        \e[33m-side test\e[0m\n            Only tests over-representation\
      \ in the test sequences. This is\n            converted into a lower threshold\
      \ of 1 for the test/control\n            ratio. More stringent thresholds can\
      \ also be specified with the\n            option -lth. For example, -lth ratio\
      \ 2 will only report patterns\n            at least 2 times more frequent in\
      \ test than in control\n            sequences.\n\n        \e[33m-side both\e\
      [0m\n            Test over-representation in either the test or the control\
      \ set.\n\n        \e[33m-side ctrl\e[0m\n            Only tests over-representation\
      \ in the control sequences. This is\n            converted into an upper threshold\
      \ of 1 for the test/control\n            ratio. More stringent thresholds can\
      \ also be specified with the\n            option -uth. For example, -uth ratio\
      \ 0.5 will only report\n            patterns at least 2 times more frequent\
      \ in control than in test\n            sequences.\n\n    \e[1m-purge\e[0m\n\
      \        Purge input sequences before counting oligonucleotide occurrences.\n\
      \n        This is highly recommended because redundant sequence fragment bias\n\
      \        the over-representation statistics and create false positives.\n\n\
      \        The option -purge is active by default, and can be canceled with the\n\
      \        option -nopurge.\n\n    \e[1m-nopurge\e[0m\n        Do not purge input\
      \ sequences before counting oligonucleotide\n        occurrences.\n\n    \e\
      [1m-l oligo_length\e[0m\n        Oligonucleotide length.\n\n    \e[1m-1str\e\
      [0m\n        Count oligonucleotides on a single strand only.\n\n        Alternative\
      \ option: -2str\n\n    \e[1m-2str\e[0m\n        Sum oligonucleotides on both\
      \ strands.\n\n        More precisely, each pair of reverse complements is counted\
      \ as a\n        single motif (the count is performed on a single strand, but\
      \ pairs\n        of reverse complements are merged).\n\n        Alternative\
      \ option: -1str\n\n    \e[1m-noov\e[0m\n        Do not accept overlap between\
      \ successive occurrences of the same\n        word. Only renewing occurrences\
      \ are counted.\n\n        E.g.: TATATATATATA is counted as 2 occurrences of\
      \ TATATA\n\n        Alternative option: -ovlp\n\n    \e[1m-ovlp\e[0m\n     \
      \   Count all occurrences of self-overlapping words.\n\n        E.g.: TATATATATATA\
      \ is counted as 4 occurrences of TATATA\n\n        Alternative option: -noov\n\
      \n    \e[1m-o outputfile\e[0m\n        If no output file is specified, the standard\
      \ output is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-lth key value\e[0m\n        Lower threshold on some output field.\n\
      \n        Supported fields for threshold: occ,occ_sig,occ_P,occ_E\n\n    \e\
      [1m-uth key value\e[0m\n        Upper threshold on some output field.\n\n\e\
      [1mWISH LIST\e[0m\n    \e[1m-return assembly\e[0m\n        Assemble the significant\
      \ patterns with \e[33mpattern-assembly\e[0m. The\n        oligonucleotides significantly\
      \ enriched in test are assembled\n        separately from those significant\
      \ in ctrl.\n\n        The option -return assembly requires to specify an output\
      \ file. The\n        assembly files have the suffix _test.asmb and _ctrl.asmb,\n\
      \        respectively.\n\n    \e[1m-return maps\e[0m\n        Generate feature\
      \ maps of the over-represented patterns, using the\n        program \e[33mfeature-map\e\
      [0m.\n\n    \e[1m-return pssm\e[0m\n        Convert the assembled oligonucleotides\
      \ in position-speicific scoring\n        matrices (PSSM), using the program\
      \ \e[33mmatrix-from-patterns\e[0m.\n\n    \e[1m-return index\e[0m\n        Return\
      \ a HTML file indexing the result files (oligos, assembly,\n        PSSM, maps).\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - dyad-analysis
    positional:
    - !Positional
      description: sequences
      position: 0
      name: statistics
      optional: false
    - !Positional
      description: OPTIONS
      position: 1
      name: pattern-discovery
      optional: false
    - !Positional
      description: Sig value higher than 0
      position: 0
      name: oligonucleotide.
      optional: false
    - !Positional
      description: exp(dyad) = exp(oligo1)*exp(oligo2)
      position: 0
      name: Then
      optional: false
    - !Positional
      description: P(X>=x) =  1 - SUM P(j)
      position: 0
      name: x-1
      optional: false
    - !Positional
      description: 'Interpretation: the P-value (Pval) represents the nominal risk'
      position: 0
      name: accuracy.
      optional: false
    - !Positional
      description: "By default, the program calculates the P-value on the right\n\
        tail of the probability distribution, which represents the\nprobability to\
        \ observe at least x occurrences by chance:\nT\nP(X>=x) = SUM P(X=i)\ni=x\n\
        With the option -under, the P-value is calculated on the left\ntail of the\
        \ distribution, which represents the probability of\nhaving at most x occurrences:\n\
        x-1\nP(X<=x) =  SUM P(X=i)\ni=0\nThe option -under does not affect the other\
        \ statistics\n(zscore, loglikelihood). For z-score, the negative values\n\
        indicate under-representation.\nWith the option -two_tails, the P-value is\
        \ calculated on\neither the left or the right-tail of the distribution,\n\
        depending on the observed/expected comparison:\nif k >= exp_occ, right tail\
        \ (over-representation)\nif k < exp_occ, left tail (under-representation)"
      position: 0
      name: OVER/UNDER-REPRESENTATION
      optional: false
    - !Positional
      description: "The probability of occurrence by itself is not fully\ninformative,\
        \ because the threshold must be adapted depending\non the number of patterns\
        \ considered. Indeed, a simple\nhexanucleotide analysis amounts to consider\
        \ 4096\nhypotheses.\nThe E-value (Eval) represents the expected number of\
        \ patterns\nwhich would be returned at random for a given threshold of\nnominal\
        \ P-value.\nEval = NPO * P(X>=x)\nwhere NPO is the number of possible oligomers\
        \ of the chosen\nlength (eg 4096 for hexanucleotides).\nNote that when searches\
        \ are performed on both strands, NPO is\ncorrected for the fact that non-palindromic\
        \ patterns are\ngrouped by pairs (for example, there are 4096 possible\nhexanucleotides\
        \ when the count is performed on a single\nstrand, but only 2080 when the\
        \ count is performed on both\nstrands).\nInterpretation: the E-value (Eval)\
        \ represents the expected\nnumber of false positives, for a given threshold\
        \ of P-value\n(Pval)."
      position: 1
      name: E-VALUE
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: output_file
      optional: true
    - !Flag
      description: "The sequence to be analyzed. Multiple sequences can\nbe entered\
        \ at once with most sequence formats (see below)."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: input_file
      optional: true
    - !Flag
      description: "|lower\nMask lower or uppercases, respecively, i.e. replace\n\
        selected case by N characters."
      synonyms:
      - -mask
      args: !SimpleFlagArg
        name: upper
      optional: true
    - !Flag
      description: "Input sequence format. Various standards are\nsupported.\nraw:\
        \ the raw sequence without any identifier or comment.\nmulti: several raw\
        \ sequences concatenated.\nIG: IntelliGenetics format.\nFastA: the sequence\
        \ format used by FastA, BLAST, Gibbs\nsampler and a lot of other bioinformatic\
        \ programs.\nWconsensus: the format defined by Jerry Hertz for\nhis programs\
        \ (patser, consensus, wconsensus)."
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: format
      optional: true
    - !Flag
      description: "#    oligo_length\nOligonucleotide size (default 3)\nThis is the\
        \ size of a single element (a half dyad)."
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#-# spacing (default 0-20)\nSpacing between the elements of the\
        \ dyad.\nThe spacing is the number of bases between the end of\nthe first\
        \ element and the start of the second one.\nSpacing formats\n---------------\n\
        A single integer value means that the spacing is fixed.\nVariable spacing\
        \ can be introdued by entering the min and\nmax values separated by a hyphen.\n\
        For example 8-12 means that all occurrences of the dyad\nwith a spacing between\
        \ 8 and 12 qill be counted together\nand their significance estimated globally.\n\
        Warning, this is different from scanning one by one the\nspacing values 8\
        \ to 12."
      synonyms:
      - -sp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(dr|ir|any)\nIn order to fasten execution, the program can be\
        \ asked\nto restrict its analysis to symmetric dyads.\nThree types are accepted\n\
        dr   direct repeats: the second element is the same as the\nfirst one\nir\
        \   inverted repeats: the second element is the reverse\ncomplement of the\
        \ first one.\nrep  repeats: direct and inverted repeats are evaluated\nany\
        \  (default)\nWhen selecting the option any, the analysis is\nperformed on\
        \ all non-symmetric dyads as well."
      synonyms:
      - -type
      args: !SimpleFlagArg
        name: dyad_type
      optional: true
    - !Flag
      description: "Specify a file containing a list of accepted\ndyads. The analysis\
        \ is then restricted to these\ndyads. Since the number of tested dyads is\
        \ reduced by\nthis selection, the multitesting correction is\ngenerally lower,\
        \ which increases the significance of\nthe accepted dyads, compared to the\
        \ default situation\nwhere all dyads are analyzed.\nFile format: the first\
        \ word of each row specifies a\ndyad. Subsequent words are ignored."
      synonyms:
      - -accept
      args: !SimpleFlagArg
        name: accepted_dyad_file
      optional: true
    - !Flag
      description: "Group dyads made of the same words (monads) but with\ndifferent\
        \ spacings."
      synonyms:
      - -groupsp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "count on oth strands\nThe occurrences of each oligonucleotide\
        \ are summed on both\nstrands. This allows to detect elements which act in\
        \ an\norientation-insensitive way (as is generally the case for\nyeast upstream\
        \ elements)."
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "single strand count\nonly the direct strand is considered for\
        \ oligonucleotide and\ndyad occurrence counting."
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "input sequence is proteic. In this case, the analysis\nconcerns\
        \ pairs of oligopeptides instead of oligonucleotides"
      synonyms:
      - -prot
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "file with an expected frequency table\nBy default, the frequency\
        \ expected for each dyad is the\nproduct of the frequency expected for each\
        \ element\n(oligonucleotide):\nexp(dyad) = exp(oligo1)*exp(oligo2)\nBy default,\
        \ the oligonucleotide frequencies observed in the\ninput sequences are used\
        \ to estimate the expected oligo\nfrequencies.\nAlternatively, predefined\
        \ frequency tables can be used.\nThese tables can for instance be calculated\
        \ on basis of\n- the whole yeast genome\n- all yeast intergenic regions\n\
        - all yeast gene regions\nThis allows to correct the bias due to the highly\
        \ variable\ndistribution of oligonucleotides observed in the yeast genome."
      synonyms:
      - -expfreq
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(deprecated, use \"-bg intergenic\" instead)\nuse intergenic frequencies\
        \ as background frequencies"
      synonyms:
      - -ncf
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "background model\nType of sequences used as background model for\n\
        estimating expected dyad frequencies.\nEither -org or -taxon is required with\
        \ the option -bg.\nSupported models:\n-bg upstream\nall upstream sequences,\
        \ allowing overlap with\nupstream ORFs\n-bg upstream-noorf\nall upstream sequences,\
        \ preventing overlap\nwith upstream ORFs\n-bg intergenic\nintergenic frequencies\n\
        Whole set of intergenic regions, including\nupstream and downstream sequences\n\
        -bg monads (default)\nCalcualte expected dyad frequency from the monad\nfrequencies\
        \ observed in the input sequences.\n-bg input\nSame as -bg monads, allowed\
        \ for consistency with\noligo-analysis."
      synonyms:
      - -bg
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: organism
      synonyms:
      - -org
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "taxon\nOrganism or taxon that used as reference for the\nestimation\
        \ of a background model based on a genome\nsubset (option -bg).  Either -org\
        \ or -taxon is\nrequired with the option -bg.\nOptions -org and -taxon are\
        \ mutually exclusive."
      synonyms:
      - -taxon
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nThreshold on occurrence significance.\n(obsolete: use -lth\
        \ occ_sig instead)"
      synonyms:
      - -thosig
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "value\nLower threshold on some parameter. All patterns with a\n\
        parameter value smaller than the threshold are\ndiscarded.\nSupported parameters:\
        \ occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
        Example: select patterns with a positive value for the\noccurrence significance.\n\
        -lth occ_sig 0"
      synonyms:
      - -lth
      args: !SimpleFlagArg
        name: param
      optional: true
    - !Flag
      description: "value\nUpper threshold on some parameter. All patterns with a\n\
        parameter value higher than the threshold are\ndiscarded.\nSupported parameters:\
        \ occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
        Example: to select no more than 50 patterns\n-uth rank 50"
      synonyms:
      - -uth
      args: !SimpleFlagArg
        name: param
      optional: true
    - !Flag
      description: sort results by decreasing order of significance
      synonyms:
      - -sort
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "output fields may contain one or several of the following\nwords:\n\
        freq\nocc\nproba (binomial probability)\nzscore\nratio\nrank\nthe fields have\
        \ to be separated by commas\nBy default, only occurrences are returned."
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: output_fields
      optional: true
    - !Flag
      description: "detect under-represented instead of over-represented\ndyads (left-tail\
        \ significance test)."
      synonyms:
      - -under
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "detect under-represented and over-represented dyads\n(two-tail\
        \ significance test)."
      synonyms:
      - -two_tails
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Report also dyads with zero occurrences (provided they\nfit the\
        \ other thresholds).  By default, the program\nreports only patterns present\
        \ in the sequence.  If the\nleft tail or two-tail test is applied, patterns\
        \ with\nzero occurrences are automatically taken into\naccount.\nIn some other\
        \ cases, one would also like to detect\npatterns absent from the sequence.\
        \ This is the\nfunction of the option -zeroocc."
      synonyms:
      - -zeroocc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Quick count mode: delegate the counting of word\noccurrences to\
        \ count-words, a program written in C by\nMatthieu Defrance.\nThis option\
        \ is incompatible with the following output\nfields:"
      synonyms:
      - -quick
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not allow overlapping matches of the same word
      synonyms:
      - -noov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\ntimeout (in seconds). Default = 3600.\ndyad-analysis can be\
        \ time consuming. In order to\nprotect the server from endless queries, the\
        \ program\nwill automatically stop after 1 hour (default) of\ncalculation.\
        \ The time out value can be changed for\nheavy tasks."
      synonyms:
      - -timeout
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "dna|prot|other\nInput sequence type\n. DNA (default)\nOnly A,\
        \ C, G, and T residues are\naccepted. oligomers that contain partly defined\n\
        (IUPAC code) or undefined nucleotides (N) are\ndiscarded from the countings.\n\
        . protein\nOligopeptide analysis instead of oligonucleotide.\nThis inactivates\
        \ the grouping of oligomers with\ntheir reverse complements, and modifies\
        \ the\nalphabet size.\n. other\nAny type of letters found in the input sequence\
        \ is\nconsidered valid. This allows to analyze texts in\nhuman language."
      synonyms:
      - -seqtype
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\nNAME dyad-analysis\n\n\t1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nDESCRIPTION\n\tDetects overrepresented dyads (spaced pairs) in a set of DNA\n\
      \tsequences. A dyad is defined here as a pair of\n\toligonucleotides of the\
      \ same size separated by a fixed number\n\tof bases.\n\n\tThis algorithm is\
      \ able to detect binding sites that escape detection by\n\toligo-analysis, because\
      \ of the sequence degeneracy within the spacer\n\tregion. A typical example\
      \ of patterns that are efficiently detected by\n\tthe dyad analysis is the binding\
      \ site for the yeast Gal4p\n\ttranscription factor, which has the consensus\
      \ CGGNNNNNWNNNNNCCG.\n\n\tThe dyad-analysis is generally efficient to detect\
      \ binding sites\n\tfor HTH factors from E.coli, and for C6 Zinc cluster proteins\
      \ in yeast.\n\nCATEGORY\n\tstatistics\n\tsequences\n\tpattern-discovery\n\n\
      OPTIONS\n\t-h      (must be first argument) display full help message\n\n\t\
      -help   (must be first argument) display options\n\n\t-o output_file\n\n\t-i\
      \ input_file\n\t\tThe sequence to be analyzed. Multiple sequences can\n\t\t\
      be entered at once with most sequence formats (see below).\n\n\t-mask upper|lower\n\
      \t\tMask lower or uppercases, respecively, i.e. replace\n\t\tselected case by\
      \ N characters.\n\n\t-format format\n\t\tInput sequence format. Various standards\
      \ are\n\t\tsupported.\n\t\t   raw: the raw sequence without any identifier or\
      \ comment.\n\t\t   multi: several raw sequences concatenated.\n\t\t   IG: IntelliGenetics\
      \ format.\n\t\t   FastA: the sequence format used by FastA, BLAST, Gibbs\n\t\
      \t\t  sampler and a lot of other bioinformatic programs.\n\t\t   Wconsensus:\
      \ the format defined by Jerry Hertz for\n\t\t\t       his programs (patser,\
      \ consensus, wconsensus).\n\t-l #\toligo_length\n\t\tOligonucleotide size (default\
      \ 3)\n\t\tThis is the size of a single element (a half dyad).\n\t-sp #-#\tspacing\
      \ (default 0-20)\n\t\tSpacing between the elements of the dyad.\n\t\tThe spacing\
      \ is the number of bases between the end of\n\t\tthe first element and the start\
      \ of the second one.\n\t\tSpacing formats\n\t\t---------------\n\t\tA single\
      \ integer value means that the spacing is fixed.\n\t\tVariable spacing can be\
      \ introdued by entering the min and\n\t\tmax values separated by a hyphen.\n\
      \t\tFor example 8-12 means that all occurrences of the dyad\n\t\twith a spacing\
      \ between 8 and 12 qill be counted together\n\t\tand their significance estimated\
      \ globally.\n\t\tWarning, this is different from scanning one by one the\n\t\
      \t spacing values 8 to 12.\n\t-type dyad_type (dr|ir|any)\n\t\tIn order to fasten\
      \ execution, the program can be asked\n\t\tto restrict its analysis to symmetric\
      \ dyads.\n\t\tThree types are accepted\n\t\t   dr\tdirect repeats: the second\
      \ element is the same as the\n\t\t\tfirst one\n\t\t   ir\tinverted repeats:\
      \ the second element is the reverse\n\t\t\tcomplement of the first one.\n\t\t\
      \   rep  repeats: direct and inverted repeats are evaluated\n\t\t   any\t(default)\n\
      \t\t\tWhen selecting the option any, the analysis is\n\t\t\tperformed on all\
      \ non-symmetric dyads as well.\n\n\t-accept accepted_dyad_file\n\t\tSpecify\
      \ a file containing a list of accepted\n\t\tdyads. The analysis is then restricted\
      \ to these\n\t\tdyads. Since the number of tested dyads is reduced by\n\t\t\
      this selection, the multitesting correction is\n\t\tgenerally lower, which increases\
      \ the significance of\n\t\tthe accepted dyads, compared to the default situation\n\
      \t\twhere all dyads are analyzed.\n\n\t\tFile format: the first word of each\
      \ row specifies a\n\t\tdyad. Subsequent words are ignored.\n\n\t-groupsp\n\t\
      \tGroup dyads made of the same words (monads) but with\n\t\tdifferent spacings.\n\
      \n\t-2str\tcount on oth strands\n\t\tThe occurrences of each oligonucleotide\
      \ are summed on both\n\t\tstrands. This allows to detect elements which act\
      \ in an\n\t\torientation-insensitive way (as is generally the case for\n\t\t\
      yeast upstream elements).\n\n\t-1str\tsingle strand count\n\t\tonly the direct\
      \ strand is considered for oligonucleotide and\n\t\tdyad occurrence counting.\n\
      \n\t-prot\tinput sequence is proteic. In this case, the analysis\n\t\tconcerns\
      \ pairs of oligopeptides instead of oligonucleotides\n\n\t-expfreq\tfile with\
      \ an expected frequency table\n\t\tBy default, the frequency expected for each\
      \ dyad is the\n\t\tproduct of the frequency expected for each element\n\t\t\
      (oligonucleotide):\n\n\t\t  exp(dyad) = exp(oligo1)*exp(oligo2)\n\n\t\tBy default,\
      \ the oligonucleotide frequencies observed in the\n\t\tinput sequences are used\
      \ to estimate the expected oligo\n\t\tfrequencies.\n\t\tAlternatively, predefined\
      \ frequency tables can be used.\n\t\tThese tables can for instance be calculated\
      \ on basis of\n\t\t- the whole yeast genome\n\t\t- all yeast intergenic regions\n\
      \t\t- all yeast gene regions\n\t\tThis allows to correct the bias due to the\
      \ highly variable\n\t\tdistribution of oligonucleotides observed in the yeast\
      \ genome.\n\n\t-ncf\t(deprecated, use \"-bg intergenic\" instead)\n\t\tuse intergenic\
      \ frequencies as background frequencies\n\n\t-bg\tbackground model\n\t\tType\
      \ of sequences used as background model for\n\t\testimating expected dyad frequencies.\n\
      \n\t\tEither -org or -taxon is required with the option -bg.\n\n\t\tSupported\
      \ models:\n\t\t-bg upstream\n\t\t\t all upstream sequences, allowing overlap\
      \ with\n\t\t         upstream ORFs\n\n\t\t-bg upstream-noorf\n\t\t\t  all upstream\
      \ sequences, preventing overlap\n\t\t\t  with upstream ORFs\n\n\t\t-bg intergenic\n\
      \t\t         intergenic frequencies\n\t\t\t Whole set of intergenic regions,\
      \ including\n\t\t\t upstream and downstream sequences\n\n\t\t-bg monads (default)\n\
      \t\t    Calcualte expected dyad frequency from the monad\n\t\t    frequencies\
      \ observed in the input sequences.\n\n\t\t-bg input\n\t\t    Same as -bg monads,\
      \ allowed for consistency with\n\t\t    oligo-analysis.\n\n\n\t-org\torganism\n\
      \t-taxon\ttaxon\n\t\tOrganism or taxon that used as reference for the\n\t\t\
      estimation of a background model based on a genome\n\t\tsubset (option -bg).\
      \  Either -org or -taxon is\n\t\trequired with the option -bg.\n\n   \t\tOptions\
      \ -org and -taxon are mutually exclusive.\n\n\t-thosig #\n\t\tThreshold on occurrence\
      \ significance.\n\t\t(obsolete: use -lth occ_sig instead)\n\n\t-lth param value\n\
      \t\tLower threshold on some parameter. All patterns with a\n\t\tparameter value\
      \ smaller than the threshold are\n\t\tdiscarded.\n\t\tSupported parameters:\
      \ occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
      \t      \tExample: select patterns with a positive value for the\n\t      \t\
      occurrence significance.\n\n\t\t\t -lth occ_sig 0\n\n\t-uth param value\n\t\t\
      Upper threshold on some parameter. All patterns with a\n\t\tparameter value\
      \ higher than the threshold are\n\t\tdiscarded.\n\t\tSupported parameters: occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
      \t\tExample: to select no more than 50 patterns\n\t\t        -uth rank 50\n\n\
      \t-sort\tsort results by decreasing order of significance\n\n\t-return\toutput_fields\n\
      \t\toutput fields may contain one or several of the following\n\t\twords:\n\t\
      \t\tfreq\n\t\t\tocc\n\t\t\tproba (binomial probability)\n\t\t\tzscore\n\t\t\t\
      ratio\n\t\t\trank\n\t\tthe fields have to be separated by commas\n\t\tBy default,\
      \ only occurrences are returned.\n\n\t-under\n                detect under-represented\
      \ instead of over-represented\n         \tdyads (left-tail significance test).\n\
      \n\t-two_tails\n\t\tdetect under-represented and over-represented dyads\n\t\t\
      (two-tail significance test).\n\n\t-zeroocc\n\t\tReport also dyads with zero\
      \ occurrences (provided they\n\t\tfit the other thresholds).  By default, the\
      \ program\n\t\treports only patterns present in the sequence.  If the\n\t\t\
      left tail or two-tail test is applied, patterns with\n\t\tzero occurrences are\
      \ automatically taken into\n\t\taccount.\n\n\t\tIn some other cases, one would\
      \ also like to detect\n\t\tpatterns absent from the sequence. This is the\n\t\
      \tfunction of the option -zeroocc.\n\n\t-quick\n\t\tQuick count mode: delegate\
      \ the counting of word\n\t\toccurrences to count-words, a program written in\
      \ C by\n\t\tMatthieu Defrance.\n\n\t\tThis option is incompatible with the following\
      \ output\n  \t        fields: \n\n\t-noov\tdo not allow overlapping matches\
      \ of the same word\n\n\t-timeout #\n\t\ttimeout (in seconds). Default = 3600.\n\
      \t\tdyad-analysis can be time consuming. In order to\n\t\tprotect the server\
      \ from endless queries, the program\n\t\twill automatically stop after 1 hour\
      \ (default) of\n\t\tcalculation. The time out value can be changed for\n\t\t\
      heavy tasks.\n\n\t-seqtype  dna|prot|other\n\t\tInput sequence type\n\t\t. DNA\
      \ (default)\n\t\t    Only A, C, G, and T residues are\n\t\t    accepted. oligomers\
      \ that contain partly defined\n\t\t    (IUPAC code) or undefined nucleotides\
      \ (N) are\n\t\t    discarded from the countings.\n\t\t. protein\n\t\t    Oligopeptide\
      \ analysis instead of oligonucleotide.\n\t\t    This inactivates the grouping\
      \ of oligomers with\n\t\t    their reverse complements, and modifies the\n\t\
      \t    alphabet size.\n\t\t. other\n\t\t    Any type of letters found in the\
      \ input sequence is\n\t\t    considered valid. This allows to analyze texts\
      \ in\n\t\t    human language.\n\nOUTPUT COLUMNS\n\tDyad pattern\n\tDyad identifier.\
      \ Same as pattern, with th reverse complement added\n\t\twhen the counting was\
      \ performed on both strands.\n\n\tExpected frequency (exp_frq): the probability\
      \ to observe the dyad at\n\t\teach position. This value is calculated on basis\
      \ of the\n\t\texpected frequency table (see above), or of the\n\t\toligonucleotide\
      \ frequencies observed in the input sequences.\n\n\tObserved occurrences (occ):\
      \ the number of ocurrences\n\t\tobserved for each dyad.\n\t\tOverlapping matches\
      \ are detected and summed in the counting.\n\n\tExpected number of occurrences\
      \ (exp_occ): the number of\tocurrences\n\t\texpected for each dyad. This value\
      \ is calculated on basis of\n\t\tthe oligonucleotide frequency table selected.\n\
      \n\tOccurrence P-value (occ_P): the probability to have N or more\n\t\toccurrences,\
      \ given the expected number of occurrences\n\t\t(where N is the observed number\
      \ of occurrences).\n\n\tOccurrence E-value (occ_E): the expected number of false\n\
      \t\tpositives, given the number of false\n\t\t\tE-value = P-value * nb_tested_patterns\n\
      \t\tThis is a correction for multi-testing, taking into\n\t\taccount the number\
      \ of patterns for which a test of\n\t\tsignificance has been performed (which\
      \ varies with the\n\t\tsize of the monad, and with the number of spacings\n\t\
      \tsampled)/\n\n\tOccurrence Significance (occ_sig):\n\t\tA logarithmic transformation\
      \ of the E-value.\n\t\t  \t      occ_sig = -log10(occ_E)\n\t\tThe highest sig\
      \ correspond to the most overrepresented\n\t\toligonucleotide.  Sig value higher\
      \ than 0\n\t\tindicate a significant overrepresentation (E-value < 1).\n\nPROBABILITIES\n\
      \tVarious calibration models can be used to estimate the probability of\n\t\
      each oligonucleotide (see above). From there, and expected number of\n\toccurrences\
      \ is calculated and compared to the observed number of\n\toccurrences. The significance\
      \ of the observed number of occurrences\n\tis calculated with the binomial formulae.\n\
      \n    EXPECTED DYAD FREQUENCY\n        If exp(oligo1) is the expected frequency\
      \ for the first element, and\n           exp(oligo1) is the expected frequency\
      \ for the second element\n\n        Then\n           exp(dyad) = exp(oligo1)*exp(oligo2)\n\
      \n    NUMBER OF POSSIBLE DYADS\n        This number depends on the dyad type\
      \ selected by the user.\n        When the analysis is restricted to inverted\
      \ repeats, or to direct\n        repeats, the first element univocally determines\
      \ the second one,\n        thus:\n                nb_poss_dyads = nb_poss_oligo\n\
      \                              = 4^w\n                where w is the oligonucleotide\
      \ length.\n         When any dyad is allowed, each oligonucleotide can combine\
      \ with any\n        other or itself, thus:\n                nb_poss_dyads =\
      \ nb_poss_oligo * nb_poss_oligo\n                              = 4^2w\n    EXPECTED\
      \ OCCURRENCES\n                              r\n           Exp_occ = p * 2 *\
      \ SUM (Lj + 1 - d) = p * T\n                             j=1\n\n        where\
      \   p  = expected dyad frequency\n                n  = number of input sequences\n\
      \                Lj = length of the jth input sequence\n                d  =\
      \ length of the dyad, calculated as follows:\n                        d = 2w\
      \ + s\n                        where w is the oligonucleotide length\n     \
      \                         s is the spacer length\n                T  = the number\
      \ of possible matching positions in the\n                     whole set of input\
      \ sequences.\n                The factor 2 stands for the fact that occurrences\
      \ are summed\n                on both strands (it is omitted when the option\
      \ -1str\n                is active).\n\n    PROBABILITY OF THE OBSERVED NUMBER\
      \ OF OCCURRENCES\n        The probability to observe exactly obs occurrences\
      \ in the whole set\n        of sequences is calculated by the binomial\n\n \
      \                                                   x     T-x\n            P(X=x)\
      \ = bin(p,T,x) =       T!         p (1-p)\n                                \
      \   -------------\n                                     x! (T-x)!\n\n      \
      \  where   x is the observed number of dyad occurrences,\n                p\
      \   is the expected dyad frequency,\n                T   is the number of possible\
      \ matching positions,\n                    as defined above.\n\n        The\
      \ probability to observe obs or more occurrences in the\n        whole set of\
      \ of sequences is calculated by the sum of\n        binomials:\n\n         \
      \                   x-1\n             P(X>=x) =  1 - SUM P(j)\n            \
      \                j=0\n\n\n        Note that the the P-value (Pval) is not computed\
      \ by directly\n        applying this formula, but by using an efficient algorithm\n\
      \        (based on recursion), which increases both computing speed and\n  \
      \      accuracy.\n\n        Interpretation: the P-value (Pval) represents the\
      \ nominal risk\n        of false positive, i.e. the risk to consider a given\
      \ dyad as\n        over-represented whereas it is not.\n\n    OVER/UNDER-REPRESENTATION\n\
      \n        By default, the program calculates the P-value on the right\n\ttail\
      \ of the probability distribution, which represents the\n\tprobability to observe\
      \ at least x occurrences by chance:\n\n\t\t\t               T\n\t\t\t    P(X>=x)\
      \ = SUM P(X=i)\n\t\t\t              i=x\n\n\tWith the option -under, the P-value\
      \ is calculated on the left\n\ttail of the distribution, which represents the\
      \ probability of\n\thaving at most x occurrences:\n\n\t\t\t               x-1\n\
      \t\t\t    P(X<=x) =  SUM P(X=i)\n\t\t\t               i=0\n\n\tThe option -under\
      \ does not affect the other statistics\n\t(zscore, loglikelihood). For z-score,\
      \ the negative values\n\tindicate under-representation.\n\n\tWith the option\
      \ -two_tails, the P-value is calculated on\n\teither the left or the right-tail\
      \ of the distribution,\n\tdepending on the observed/expected comparison:\n\t\
      \ if k >= exp_occ, right tail (over-representation)\n\t if k < exp_occ, left\
      \ tail (under-representation)\n\n\n    E-VALUE\n\n\tThe probability of occurrence\
      \ by itself is not fully\n\tinformative, because the threshold must be adapted\
      \ depending\n\ton the number of patterns considered. Indeed, a simple\n\thexanucleotide\
      \ analysis amounts to consider 4096\n\thypotheses.\n\n\tThe E-value (Eval) represents\
      \ the expected number of patterns\n\twhich would be returned at random for a\
      \ given threshold of\n\tnominal P-value.\n\n\t      Eval = NPO * P(X>=x)\n\n\
      \twhere NPO is the number of possible oligomers of the chosen\n\t          length\
      \ (eg 4096 for hexanucleotides).\n\n        Note that when searches are performed\
      \ on both strands, NPO is\n        corrected for the fact that non-palindromic\
      \ patterns are\n        grouped by pairs (for example, there are 4096 possible\n\
      \        hexanucleotides when the count is performed on a single\n        strand,\
      \ but only 2080 when the count is performed on both\n        strands).\n\n\t\
      Interpretation: the E-value (Eval) represents the expected\n\tnumber of false\
      \ positives, for a given threshold of P-value\n\t(Pval). \n\n    SIGNIFICANCE\
      \ INDEX\n\n        The significance index is simply a negative logarithm\n \
      \       conversion of the E-value (in base 10).\n\n\tThe significance index\
      \ is calculated as follows:\n\n\t      sig = -log10(E-value);\n\n\tThis index\
      \ is very convenient to interpret : higher values\n\tcorrespond to exceptional\
      \ patterns. A significance of 0\n\tcorresponds to an E-value of 1. A significance\
      \ of 2 to an\n\tE-value of 1e-2 (i.e. one expects no more than 0.01 false\n\t\
      positives in the whole collection of patterns).\n\nAVAILABILITY\n      The program\
      \ can be used through its web interface at:\n      http://rsat.bigre.ulb.ac.be/rsat/\n\
      \n      dyad-analysis is a perl script running on unix machines (SUN,\n    \
      \  SGI, DEC Alpha, Max OSX have been tested). The web interface is\n      a\
      \ perl-cgi script.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - info-gibbs
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: info-gibbs
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '20140213'
      optional: false
    - !Positional
      description: motif discovery
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: "#, --verbosity=#   set verbosity to level #\n0 no verbosity\n\
        1 low verbosity\n2 high verbosity\n3 maximal verbosity + debug + trace"
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --input=#       read sequence from # (must be in FASTA format)\n\
        if not specified, the standard input is used"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --width=#       set the motif width to #\nwhen the option dyad\
        \ is used # represents the length monad1 + monad2\nEXAMPLE: --length=7"
      synonyms:
      - -w
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#        set maximal spacing between motif monad to # (only for\
        \ dyadic motif).\nin this case the parameter -l corresponds to length of monad1\
        \ + monad2 (without spacing)"
      synonyms:
      - --maxspacing
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#        set minimal spacing between motif monad to # (only for\
        \ dyadic motif).\nin this case the parameter -l corresponds to length of monad1\
        \ + monad2 (without spacing)"
      synonyms:
      - --minspacing
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --strand=#      search in foward strand + or in both strands\
        \ +-\nEXAMPLE: --strand=+"
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --iter=#        maximum number of Gibbs sampling iterations'
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#             number of motif occurrences that are expected to\n\
        be found (incompatible with -e)"
      synonyms:
      - --sites
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --mean_sps=#    mean number of motif occurrences (sites) expected\
        \ per sequence\nthat are expected to be found (incompatible with --sites)\n\
        DEFAULT: 1"
      synonyms:
      - -e
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: try to find 0 or 1 site per sequence
      synonyms:
      - --zoops
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --motifs=#      number of motifs to extract (one by default)'
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --bgfile=#      use # predefined INCLUSive background model\n\
        [http://homes.esat.kuleuven.be/~thijs/help/help_motifsampler.html#background]\n\
        EXAMPLE --bgfile=mybgfile"
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --dmin=#        set minimal distance between 2 motif occurrences
        to #'
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#                  set the temperature (should be in range [0.6\
        \ 1.4])\nDEFAULT: 1.0"
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#  --nrun=#        try to run the Gibbs sampling seach # times'
      synonyms:
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "try to collect the N best sites using their weight scores\n(during\
        \ the collection --dmin and --zoops are not taken into account)"
      synonyms:
      - --collect
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '=#        start sampling form sites collected by scanning the
        sequences with matrix #'
      synonyms:
      - --seedmatrix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =#  when using seed matrix specify the number of sites for each
        matrix (n1,n2,n3)
      synonyms:
      - --seedmatrix_sites
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '=#            when using --seedmatrix add extra # positions around
        the matrix'
      synonyms:
      - --flanks
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '=#             set random seed to #'
      synonyms:
      - --rseed
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '=#             add title # to output'
      synonyms:
      - --title
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: print version
      synonyms:
      - -V
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "\nNAME\n        info-gibbs\n\nVERSION\n        20140213\n\nAUTHOR\n\
      \        Matthieu Defrance <defrance@bigre.ulb.ac.be>\n\nDESCRIPTION\n     \
      \   Gibbs sampling algorithm for motifs discovery.\n        Searches for highly\
      \ conserved motifs in a set of DNA sequences.\n        Convervation is based\
      \ on the motif information content (Relative Entropy).\n\nCATEGORY\n       \
      \ sequences\n        motif discovery\n        \nUSAGE        \n        info-gibbs\
      \ -w motif_width [-i inputfile] [-h | --help]\n\nARGUMENTS\n  GENERAL OPTIONS\n\
      \    -h, --help            show this help message and exit\n\n    -v #, --verbosity=#\
      \   set verbosity to level #\n                              0 no verbosity\n\
      \                              1 low verbosity\n                           \
      \   2 high verbosity\n                              3 maximal verbosity + debug\
      \ + trace\n\n    -i #, --input=#       read sequence from # (must be in FASTA\
      \ format)\n                          if not specified, the standard input is\
      \ used\n\n    -w #, --width=#       set the motif width to #\n             \
      \             when the option dyad is used # represents the length monad1 +\
      \ monad2\n                          EXAMPLE: --length=7\n\n    --maxspacing=#\
      \        set maximal spacing between motif monad to # (only for dyadic motif).\n\
      \                          in this case the parameter -l corresponds to length\
      \ of monad1 + monad2 (without spacing)\n\n    --minspacing=#        set minimal\
      \ spacing between motif monad to # (only for dyadic motif).\n              \
      \            in this case the parameter -l corresponds to length of monad1 +\
      \ monad2 (without spacing)\n\n    -s #, --strand=#      search in foward strand\
      \ + or in both strands +-\n                          EXAMPLE: --strand=+\n\n\
      \    -n #, --iter=#        maximum number of Gibbs sampling iterations\n\n \
      \   --sites=#             number of motif occurrences that are expected to\n\
      \                          be found (incompatible with -e)\n\n    -e #, --mean_sps=#\
      \    mean number of motif occurrences (sites) expected per sequence\n      \
      \                    that are expected to be found (incompatible with --sites)\n\
      \                          DEFAULT: 1\n\n    --zoops               try to find\
      \ 0 or 1 site per sequence\n\n    -m #, --motifs=#      number of motifs to\
      \ extract (one by default)\n\n    -b #, --bgfile=#      use # predefined INCLUSive\
      \ background model\n                          [http://homes.esat.kuleuven.be/~thijs/help/help_motifsampler.html#background]\
      \    \n                          EXAMPLE --bgfile=mybgfile\n\n    -d #, --dmin=#\
      \        set minimal distance between 2 motif occurrences to #\n\n    -t # \
      \                 set the temperature (should be in range [0.6 1.4])\n     \
      \                     DEFAULT: 1.0\n\n    -r #  --nrun=#        try to run the\
      \ Gibbs sampling seach # times\n\n    --collect             try to collect the\
      \ N best sites using their weight scores \n                          (during\
      \ the collection --dmin and --zoops are not taken into account)\n\n    --seedmatrix=#\
      \        start sampling form sites collected by scanning the sequences with\
      \ matrix #\n\n    --seedmatrix_sites=#  when using seed matrix specify the number\
      \ of sites for each matrix (n1,n2,n3) \n\n    --flanks=#            when using\
      \ --seedmatrix add extra # positions around the matrix\n\n    --rseed=#    \
      \         set random seed to #\n\n    --title=#             add title # to output\n\
      \n    -V, --version         print version\n\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - get-orthologs-compara
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: get-orthologs-compara
      optional: false
    - !Positional
      description: As for genes, the reference organisms can also be entered on the
        command
      position: 0
      name: ignored.
      optional: false
    - !Positional
      description: get-orthologs-compara -v 1 -supported_organisms \
      position: 0
      name: organisms.
      optional: false
    - !Positional
      description: Note that in Compara polyploids such as wheat are separated by
      position: 0
      name: one2one.
      optional: false
    - !Positional
      description: "\e[33mDefinition\e[0m: the term homoeologous, also spelled homeologous,\
        \ is"
      position: 0
      name: one2one
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: compara_organisms.tab
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -type
      - -q
      args: !SimpleFlagArg
        name: ortholog
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -ident_query
      - -ident_target
      args: !SimpleFlagArg
        name: '70'
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    get-orthologs-compara\n\n\e[1mDESCRIPTION\e[0m\n\
      \    Returns orthologues, plus optionally paralogues and homeologues, for a\n\
      \    set of genes in one or more organisms. Relies on primary data from\n  \
      \  Ensembl Compara.\n\n\e[1mAUTHORS\e[0m\n    Bruno Contreras-Moreira <bcontreras\\\
      @eead.csic.es>\n    Jacques van Helden <Jacques.van-Helden\\@univ-amu.fr>\n\n\
      \e[1mCATEGORY\e[0m\n    comparative genomics\n\n\e[1mUSAGE\e[0m\n    get-orthologs-compara\
      \ -q GENE1 -q GENE2 -ref_org organism_name [...]\n\n\e[1mHOMOLOGY CRITERIA\e\
      [0m\n    Ensembl Compara gene orthology and paralogy predictions are generated\
      \ by\n    a pipeline where maximum likelihood phylogenetic gene trees play a\n\
      \    central role. They attempt to represent the evolutionary history of gene\n\
      \    families, i.e. genes that diverged from a common ancestor. These gene\n\
      \    trees reconciled with their species tree have their internal nodes\n  \
      \  annotated to distinguish duplication or speciation events, and thus\n   \
      \ support the annotation of orthologous and paralagous genes, which can be\n\
      \    part of complex one-to-many and many-to-many relations.\n\n    Pairs of\
      \ homologous sequences are scored in terms of % amino acid\n    identity, which\
      \ is calculated with respect to query and target in order\n    to capture length\
      \ and possibly domain content differentes. For example,\n    if the species\
      \ selected is Arabidopsis thaliana, and the homologue is in\n    maize, the\
      \ query sequence is the A.thaliana protein and the target is\n    the maize\
      \ protein. \e[33mident_query\e[0m in this case is the % of the query\n    identical\
      \ to the maize protein, and \e[33mident_target\e[0m is the % of the maize\n\
      \    protein identical to the A.thaliana protein. These % identities will\n\
      \    only be the same if the length (number of amino acids) of both sequences\n\
      \    are the same.\n\n    [Adapted from:\n    <http://www.ensembl.org/info/genome/compara/homology_method.html>].\n\
      \n    This program queries a BerkeleyDB db of Ensembl Compara records, created\n\
      \    with \e[33mparse-compara\e[0m, which should be installed as\n    $RSAT/data/genomes/compara.dbd\
      \ .\n\n\e[1mINPUT FORMAT\e[0m\n    Query genes can be directly entered on the\
      \ command line (option \e[33m-q\e[0m) or\n    in an input file (option \e[33m-i\e\
      [0m). The first word of each row of such a file\n    is handled as a gene. Any\
      \ additional information on the same row is\n    ignored.\n\n    As for genes,\
      \ the reference organisms can also be entered on the command\n    line (option\
      \ \e[33m-ref_org\e[0m) or in an input file (option \e[33m-org_list\e[0m).\n\n\
      \e[1mOUTPUT FORMAT\e[0m\n    A tab-separated file with seven columns. Each row\
      \ of the output file\n    describes a homology relation between a query gene\
      \ and a target gene.\n    Output contains the following columns:\n\n    1. ID\
      \ of target homologous gene (Ensembl gene_stable_id).\n    2. Name of reference\
      \ organism (of target gene).\n    3. type of homology relationship.\n    4.\
      \ ID of the query gene.\n    5. Name of query organism (of query gene).\n  \
      \  6. % protein sequence identity with respect to target length.\n    7. % protein\
      \ sequence identity with respect to query length.\n\n\e[1mEXAMPLES\e[0m\n  \e\
      [1mQuick demo\e[0m\n    The option \e[33m-demo\e[0m selects orthologs for a\
      \ single gene in a single genome.\n\n     get-orthologs-compara -v 1 -demo\n\
      \n  \e[1mGet the list of suppported organisms\e[0m\n    Beware, the list of\
      \ organisms supported for compara is a subset of those\n    installed in the\
      \ RSAT server. For this reason, get-orthologs-compara has\n    a specific option\
      \ \e[33m-supported_organisms\e[0m to get the relevant list of\n    organisms.\n\
      \n     get-orthologs-compara -v 1 -supported_organisms \\\n          -o compara_organisms.tab\n\
      \n  \e[1mGet orthologs from a query gene in a list of reference genomes\e[0m\n\
      \     get-orthologs-compara -v 1 -org_list compara_organisms.tab \\\n      \
      \ -type ortholog -q AT5G45730.1\n\n  \e[1mGet all orthologs from a query genome,\
      \ shortening genome names\e[0m\n     get-orthologs-compara -query_org brachypodium_distachyon\
      \ \\\n       -ref_org arabidopsis_thaliana -short -o brachy.thaliana.tab\n\n\
      \  \e[1mGet paralogs for all genes of Arabidopsis thaliana in its own genome\
      \ (inparalogues)\e[0m\n     get-orthologs-compara -query_org arabidopsis_thaliana\
      \ \\\n       -ref_org arabidopsis_thaliana -type paralog\n\n  \e[1mGet homeologs\
      \ within the wheat genome with stringent identity cut-off values\e[0m\n    \
      \ get-orthologs-compara -query_org triticum_aestivum \\\n       -ref_org triticum_aestivum\
      \ -type homeolog \\\n       -ident_query 70 -ident_target 70\n\n\e[1mOPTIONS\e\
      [0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
      \ during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e\
      [1m-help\e[0m\n        Same as -h\n\n    \e[1m-demo\e[0m\n        Run demo,\
      \ ignores all other options.\n\n    \e[1m-i inputfile\e[0m\n        If no input\
      \ file is specified, the standard input is used. This\n        allows to use\
      \ the command within a pipe.\n\n    \e[1m-o outputfile\e[0m\n        If no output\
      \ file is specified, the standard output is used. This\n        allows to use\
      \ the command within a pipe.\n\n    \e[1m-ref_org organism\e[0m\n        Reports\
      \ homologues of this reference organism.\n\n        This option can be used\
      \ iteratively to specify multiple reference\n        organisms. An alternative\
      \ is to use the option \e[33m-org_list\e[0m in order to\n        specify a file\
      \ containing the list of reference organisms.\n\n    \e[1m-org_list\e[0m\n \
      \       This option gives the posibility to specify a set of reference\n   \
      \     organisms instead of a single one. Homologous genes will only be\n   \
      \     searched in listed organisms.\n\n        File format: each row should\
      \ contain the identifier of one organism.\n        Lines starting with # or\
      \ ; are ignored.\n\n    \e[1m-bdbfile\e[0m\n        This option gives the posibility\
      \ to specify a user-selected\n        BerkeleyDB file produced with parse-compara.\
      \ A valid path to that\n        file should be indicated.\n\n    \e[1m-supported_organisms\e\
      [0m\n        Lists supported organisms in local Compara database.\n\n      \
      \  This option is incompatible with the option \e[33mref_org\e[0m.\n\n     \
      \   To obtain a list of supported organisms, use the option\n        \e[33m-supported_organisms\e\
      [0m.\n\n    \e[1m-short\e[0m\n        Print short organism names on output.\n\
      \n    \e[1m-q query_gene\e[0m\n        Query gene ID.\n\n        This option\
      \ can be used iteratively on the same command to specify\n        multiple query\
      \ genes.\n\n        Alternatively, a list of query genes can be provided in\
      \ a text file,\n        specified with the option \e[33m-i\e[0m.\n\n    \e[1m-query_org\
      \ organism\e[0m\n        Name of query organism.\n\n        This option allows\
      \ to search homologues for all genes in a query\n        organism. Genes with\
      \ no homologues are not listed in output.\n\n    \e[1m-type homology_type\e\
      [0m\n        Supported homology types: ortholog, paralog, homeolog, all\n\n\
      \        Default: ortholog\n\n        \e[33mall\e[0m Returns all types of homologues\
      \ annotated in Compara.\n\n        \e[33mortholog\e[0m\n            Returns\
      \ only orthologous genes, including many2many, one2many &\n            one2one.\n\
      \n            Note that in Compara polyploids such as wheat are separated by\n\
      \            subgenome (ie A,B,D) and labels (one2one, one2many, etc) are not\n\
      \            reevaluated after the subgenomes are merged.\n\n        \e[33mparalog\e\
      [0m\n            Returns only paralogues, including within_species_paralog,\n\
      \            other_paralog & gene_split\n\n        \e[33mhomeolog\e[0m\n   \
      \         Returns only homeologues, including many2many, one2many &\n      \
      \      one2one\n\n            \e[33mDefinition\e[0m: the term homoeologous,\
      \ also spelled homeologous, is\n            used to describe the relationship\
      \ of similar chromosomes or\n            parts of chromosomes brought together\
      \ following inter-species\n            hybridization and allopolyploidization,\
      \ and whose relationship\n            was completely homologous in an ancestral\
      \ species\n            [<https://en.m.wikipedia.org/wiki/Polyploid>].\n\n  \
      \  \e[1m-ident_target % amino acid identity over target length\e[0m\n      \
      \  Homologues with lower ident_target values are skipped. Default: 0 .\n\n \
      \   \e[1m-ident_query % amino acid identity over query length\e[0m\n       \
      \ Homologues with lower ident_query values are skipped. Default: 0 .\n\n\e[1mDEMO\e\
      [0m\n        get-orthologs-compara -q BRADI_1g48830v3 -ref_org triticum_aestivum\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - install-organism
    positional:
    - !Positional
      description: AUTHOR
      position: 0
      name: install-organism
      optional: false
    - !Positional
      description: '-max_strains #'
      position: 0
      name: column.
      optional: false
    - !Positional
      description: This option avoids filling disk with
      position: 0
      name: parse/install.
      optional: false
    - !Positional
      description: -organism Full name of the organism (e.g. 'Saccharomyces
      position: 0
      name: list.
      optional: false
    - !Positional
      description: install-organism -task dyads
      position: 0
      name: e.g.
      optional: false
    - !Positional
      description: "list available species on the NCBI FTP site.\nThis task cannot\
        \ be combine with any\nother task."
      position: 0
      name: available
      optional: false
    - !Positional
      description: "download genome from the NCBI FTP site\n(ftp://ftp.ncbi.nih.gov/genomes/refseq/)\n\
        via the rsync protocol."
      position: 1
      name: download
      optional: false
    - !Positional
      description: "print the list of downloaded strains for the\nuser-specified species."
      position: 2
      name: list
      optional: false
    - !Positional
      description: "parse genome data (sequence, features) from \ngenbank-formatted\
        \ flat files (gbff)\ndownloaded from NCBI. Parsing is ensured\nby the program\
        \ parse-genbank.pl."
      position: 3
      name: parse
      optional: false
    - !Positional
      description: update configuration file
      position: 4
      name: config
      optional: false
    - !Positional
      description: calculate start and stop codon
      position: 5
      name: start_stop
      optional: false
    - !Positional
      description: allup        retrieve all upstream sequences
      position: 6
      name: frequencies
      optional: false
    - !Positional
      description: "retrieve sequences and limits of genome segments\n(intergenic,\
        \ genic)"
      position: 7
      name: genome_segments
      optional: false
    - !Positional
      description: "calculate oligonucleotide frequencies\nThis task requires to specify,\
        \ in\naddition, the type(s) of sequences for\nwhich oligo frequencies have\
        \ to be\ncalculated (upstream_freq,\nintergenic_freq, genome_freq)."
      position: 8
      name: oligos
      optional: false
    - !Positional
      description: "calculate dyad frequencies\nThis task requires to specify, in\n\
        addition, the type(s) of sequences for\nwhich dyad frequencies have to be\n\
        calculated (upstream_freq,\nintergenic_freq, genome_freq)."
      position: 9
      name: dyads
      optional: false
    - !Positional
      description: "calculate oligo and dyad frequencies in\nintergenic segments"
      position: 10
      name: ncf
      optional: false
    - !Positional
      description: "calculate oligo and dyad frequencies for\nall upstream sequences"
      position: 11
      name: upstream_freq
      optional: false
    - !Positional
      description: "calculate oligo and dyad frequencies for\nall intergenic sequences"
      position: 12
      name: intergenic_freq
      optional: false
    - !Positional
      description: "calculate oligo and dyad frequencies for\nthe whole genome sequence.\
        \ This is not\nrecommended for higher organisms, where\nthe genome represents\
        \ several Gigabases,\nand the computation of all oligo and dyad\nfrequencies\
        \ might take ages."
      position: 13
      name: genome_freq
      optional: false
    - !Positional
      description: remove unnecessary sequence files
      position: 14
      name: clean
      optional: false
    - !Positional
      description: 'install-organism -v 1 -group fungi -task download '
      position: 0
      name: species.
      optional: false
    - !Positional
      description: 'install-organism -v 1 '
      position: 0
      name: parallel.
      optional: false
    - !Positional
      description: "The program I<install-organism> performs all the formatting\n\
        and calibration tasks for importing genomes from the reference\ndatabases\
        \ (NCBI, EMBL) to RSAT.\nThe program I<download-organism> transfers the RSAT-formatted\n\
        genomes from a RSAT server.\nIf a genome is available on the RSAT server,\
        \ it is recommended\nto use download-genomes in order to obtain it immediately\
        \ in\nthe RSAT format, rather than install-genomes.\n"
      position: 0
      name: download-organisms
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -org
      - -org_file
      - -all_organisms
      - -taxon.
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "taxon name (mutually exclusive with -org)\nThe installation will\
        \ iterate over all organisms of\nthe selected taxon. Note that the command\
        \ will only\napply to the organisms previously declared with the\ncommand\
        \ install-organism -task config. The option\n-taxon is thus convenient for\
        \ re-running installation\ntasks on previously installed organisms rather\
        \ than\nfor installing new genomes downloaded e.g. from NCBI.\nThe option\
        \ -taxon can be used iteratively on the same\ncommand line to iterate the\
        \ installation over multiple\ntaxa."
      synonyms:
      - -taxon
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "group according to the NCBI/Refseq ftp/rsync\nsite (ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq).\n\
        Examples: bacteria, fungi, protozoa, plant,\ninvertebrate, vertebrate_mammalian,\
        \ vertebrate_other"
      synonyms:
      - -group
      args: !SimpleFlagArg
        name: taxonomic
      optional: true
    - !Flag
      description: "name, with space replaced by underscore\n(e.g. Saccharomyces_cerevisiae).\n\
        Note that one species may correspond to several\norganisms if several strains\
        \ are available for this\nspecies. In particular, for some bacteria there\
        \ are\nseveral thousands of sequenced strains\n(e.g. Escherichia coli).\n\
        The option -max_strains can be used to restrict the\nnumber of installed strains\
        \ per species.\nAn alternative is to specify a custom list of species\n+ strains\
        \ with the option -org_table (this is the\nrecommended way to install multiple\
        \ genomes from\nNCBI)."
      synonyms:
      - -species
      args: !SimpleFlagArg
        name: species
      optional: true
    - !Flag
      description: containing species names in the first
      synonyms:
      - -species_file
      args: !SimpleFlagArg
        name: file
      optional: true
    - !Flag
      description: "the download to a single strain or\nassembly. By default all strains\
        \ of the selected\nspecies are downloaded, but this can be heavy for some\n\
        bacterial species where thousands of strains have been\nsequenced (e.g. Escherichia\
        \ coli).\nNote: the RSAT organism name is automatically built by\nconcatenating\
        \ the NCBI species name and strain\nidentifier."
      synonyms:
      - -strain
      args: !SimpleFlagArg
        name: restrict
      optional: true
    - !Flag
      description: "Table extracted from the NCBI ftp site, indicating the\norganisms\
        \ to install.\nExample: assembly table of fungi:\nftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/fungi/assembly_summary.txt\n\
        The table can be the full table for a given group, or\na custom subset, which\
        \ can be selected on some\ninformative fields of the assembly table.\nWe recommend\
        \ to select the subset of rows having\neither \"Complete genome\" or \"Chromosome\"\
        \ in the 12th\ncolumn (\"assembly_level\"), and to add a filter on\n\"refseq_category\"\
        \ in order to select \"representative\ngenome\" or \"reference genome\".\n\
        The assembly table can also be filtered out manually\nin order to select a\
        \ custom subset of the available\ngenomes."
      synonyms:
      - -assembly_table
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Local directory containing the mirror of the refseq\ngenomes found\
        \ on the NCBI site:\nftp://ftp.ncbi.nih.gov/genomes/refseq\nNormally, the\
        \ refseq directory is specified by\ndefining a global variable REFSEQ_DIR\
        \ in the config\nfile. The option -refseq allows to overwrite this\nvalue."
      synonyms:
      - -refseq
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# Skip the first # organisms of the list.\nThis option is convenient\
        \ to resume the installation\nof a list of organisms, when it has been interrupted.\n\
        It also allows to organize the installation by chunks\nof organisms."
      synonyms:
      - -skip
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# skip the first # of the list of NCBI species.\nNote that one\
        \ species can correspond to several\norganisms, if several strains have been\
        \ sequenced."
      synonyms:
      - -skip_species
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# Stop after the first # organisms of the list.\nThis option can\
        \ be used to organize the installation\nby chunks of organisms."
      synonyms:
      - -last
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '# Stop after the first # species of the NCBI'
      synonyms:
      - -last_species
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: source
      synonyms:
      - -source
      args: !SimpleFlagArg
        name: data
      optional: true
    - !Flag
      description: "{install}\nAbsolute path of the installation directory.\nBEWARE\
        \ : you should provide the absolute path of the\ninstallation directory, not\
        \ the relative path."
      synonyms:
      - -dir
      args: !SimpleFlagArg
        name: dir
      optional: true
    - !Flag
      description: "some tasks (for example the calibration of oligos\nand dyads)\
        \ in batch mode.  This options works on our\nlab cluster, but could be adapted\
        \ for other\nconfigurations by adapting the parameters in\nRSAT_config.props."
      synonyms:
      - -batch
      args: !SimpleFlagArg
        name: run
      optional: true
    - !Flag
      description: "specify a queue to send the job with the option -batch.\nOn this\
        \ instance of RSAT, default queue is rsat\nType 'qstat -f' to get a list of\
        \ existing queues."
      synonyms:
      - -queue
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Specify an alternative organism configuration file for the\ngenome\
        \ to be installed.\nBy default, the organism configuration file is\n$RSAT/public_html/data/genomes/supported_organisms.pl"
      synonyms:
      - -config
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Store a backup copy of the organism table before\noverwriting\
        \ it."
      synonyms:
      - -backup_org_table
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Absolute path of a RSA local config file.\nBy default, the newly\
        \ installed organism is added to\nthe main RSA config file is changed (provided\
        \ the user\nhas write access to the RSA config file).\nIn addition to the\
        \ organisms installed by the RSAT\nsystem administrator (found in\n/usr/local/share/rsat/public_html/data/supported_organisms.tab),\
        \ users can\ninstall some organisms locally.\nFor this, the user must first\
        \ define an environment\nvariable called RSA_LOCAL_CONFIG, and indicating\
        \ the\nabsolute path of the local config file.\nE.g.\nexport RSA_LOCAL_CONFIG=/home/fred/RSA.local.config\n\
        When install-organism is called with the option\n-local, the new organism\
        \ is added to the file\nindicated by the environment variable RSA_LOCAL_CONFIG\n\
        rather than the main RSA config file."
      synonyms:
      - -local
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "synonym table\nA tab-delimited file containing two coloumns. The\n\
        forst column contains a gene ID, the second a gene\nname."
      synonyms:
      - -syn
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: limit of the upstream regions (e.g. -800 for yeast)
      synonyms:
      - -up_from
      args: !SimpleFlagArg
        name: distal
      optional: true
    - !Flag
      description: proximal limit of the upstream regions (e.g. -1)
      synonyms:
      - -up_to
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: directory (obsolete, see refseq)
      synonyms:
      - -genbank
      args: !SimpleFlagArg
        name: genbank
      optional: true
    - !Flag
      description: "idname\npassed to parse-genbank.pl"
      synonyms:
      - -prefid
      args: !SimpleFlagArg
        name: feattype
      optional: true
    - !Flag
      description: "Force the 'last_update' attribute to a given date.\nThis option\
        \ is used by download-organism to ensure\nthat the local genome has the same\
        \ installation date\nas the server, rather than using the date of download\n\
        as update date."
      synonyms:
      - -date
      args: !SimpleFlagArg
        name: last_update
      optional: true
    - !Flag
      description: "ENSEMBL directory. Directory containing the ENSEMBL\nflat files\
        \ in Genbank format (ext .dat)\nExample:\nftp.ensembl.org/pub/current_worm/data/flatfiles/genbank"
      synonyms:
      - -ensembl
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specification of a single installation task
      synonyms:
      - -task
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "calibrate oligo and dyad frequncies on repeat masked\nsequences,\
        \ in addition to the non-masked sequences."
      synonyms:
      - -rm
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: image format for the graphs of sequence length distribution
      synonyms:
      - -img_format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: available_vertebrate.tab
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tinstall-organism\n\nAUTHOR\n        Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nUSAGE\n        install-organism -org organism_name\n\nDESCRIPTION\n\tInstall\
      \ one or several organisms on the local RSAT instance.\n\n\tThis script is a\
      \ task manager, which (depending on the\n\tselected tasks) manages different\
      \ steps necessary for the\n\tinstallation of an organism from the NCBI flat\
      \ files:\n\n\t- Downloading genomes from the NCBI/Refseq ftp site via the\n\
      \          rsync protocol\n          (rsync://ftp.ncbi.nlm.nih.gov/genomes/refseq).\n\
      \n\t- Parsing the .gbff files (Genbank-formatted flat files).\n\n\t- Adding\
      \ the organism in the config file.\n\n\t- Calculating trinucleotide frequencies\
      \ in the start and stop\n          codons (a way to check consistency of the\
      \ gene locations).\n\n\t- Calculating oligonucleotide and dyad frequencies,\
      \ which will\n          be used as background models for motif discovery.\n\n\
      CATEGORY\n\tData management.\n\nOPTIONS\n\t-h\t(must be first argument) display\
      \ full help message\n\t-help\t(must be first argument) display options\n\t-v\t\
      verbose\n\n    MANDATORY ARGUMENTS\n\n    \tThe only mandatory option is to\
      \ specify one or more\n    \torganism(s) to be installed. This can be done with\
      \ any of the\n    \tfollowing options: -org, -org_file, -all_organisms, -taxon.\n\
      \n\t-org\torganism name without spaces (e.g. Saccharomyces_cerevisiae)\n\n\t\
      \tThe option -org can be used iteratively on the same\n\t\tcommand line to iterate\
      \ the installation over multiple\n\t\torganisms.\n\n        -org_file organism_file_name\n\
      \t\tText file containing a list of organisms to install.\n\t\tThe first word\
      \ of each row is taken as a query\n\t\torgnanism. Further information of the\
      \ same row is\n\t\tignored.\n\n\t-all_organisms\n\n\t\tInstall all the organisms\
      \ found in the Refseq\n\t\tdirectory (see option -refseq).\n\n      \t-taxon\
      \  taxon name (mutually exclusive with -org)\n\n\t\tThe installation will iterate\
      \ over all organisms of\n\t\tthe selected taxon. Note that the command will\
      \ only\n\t\tapply to the organisms previously declared with the\n\t\tcommand\
      \ install-organism -task config. The option\n\t\t-taxon is thus convenient for\
      \ re-running installation\n\t\ttasks on previously installed organisms rather\
      \ than\n\t\tfor installing new genomes downloaded e.g. from NCBI.\n\n\t\tThe\
      \ option -taxon can be used iteratively on the same\n\t\tcommand line to iterate\
      \ the installation over multiple\n\t\ttaxa.\n\n    SPECIFIC ARGUMENTS FOR THE\
      \ DOWNLOAD AND PARSE TASK\n\n        -group taxonomic group according to the\
      \ NCBI/Refseq ftp/rsync\n\t       site (ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq).\
      \ \n\n\t       Examples: bacteria, fungi, protozoa, plant,\n\t       invertebrate,\
      \ vertebrate_mammalian, vertebrate_other\n\n\t-species species name, with space\
      \ replaced by underscore\n\t         (e.g. Saccharomyces_cerevisiae). \n\n\t\
      \t Note that one species may correspond to several\n\t         organisms if\
      \ several strains are available for this\n\t         species. In particular,\
      \ for some bacteria there are\n\t         several thousands of sequenced strains\n\
      \t         (e.g. Escherichia coli). \n\n\t\t The option -max_strains can be\
      \ used to restrict the\n\t         number of installed strains per species.\
      \ \n\n\t\t An alternative is to specify a custom list of species\n\t\t + strains\
      \ with the option -org_table (this is the\n\t\t recommended way to install multiple\
      \ genomes from\n\t\t NCBI).\n\n\t-species_file file containing species names\
      \ in the first\n\t        column.\n\n\t-max_strains #\n\n\t        Maximal number\
      \ of strains per species to\n\t\tparse/install.  This option avoids filling\
      \ disk with\n\t\tparticular bacterial species for which thousands of\n\t\tstrains\
      \ have been sequenced (e.g. Escherichia coli).\n\n\t-strain restrict the download\
      \ to a single strain or\n                assembly. By default all strains of\
      \ the selected\n                species are downloaded, but this can be heavy\
      \ for some\n                bacterial species where thousands of strains have\
      \ been\n                sequenced (e.g. Escherichia coli).\n\n\t      Note:\
      \ the RSAT organism name is automatically built by\n\t      concatenating the\
      \ NCBI species name and strain\n\t      identifier.\n\n\t-assembly_table\n\n\
      \t        Table extracted from the NCBI ftp site, indicating the\n\t       \
      \ organisms to install. \n\n\t\tExample: assembly table of fungi:\n\n\t    \
      \    ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/fungi/assembly_summary.txt\n\n\
      \t\tThe table can be the full table for a given group, or\n\t\ta custom subset,\
      \ which can be selected on some\n\t\tinformative fields of the assembly table.\
      \ \n\n                We recommend to select the subset of rows having\n\t\t\
      either \"Complete genome\" or \"Chromosome\" in the 12th\n\t\tcolumn (\"assembly_level\"\
      ), and to add a filter on\n\t\t\"refseq_category\" in order to select \"representative\n\
      \t\tgenome\" or \"reference genome\". \n\n\t\tThe assembly table can also be\
      \ filtered out manually\n\t\tin order to select a custom subset of the available\n\
      \t\tgenomes.\n\n\t-refseq\n\t\tLocal directory containing the mirror of the\
      \ refseq\n\t\tgenomes found on the NCBI site:\n\t\t       ftp://ftp.ncbi.nih.gov/genomes/refseq\n\
      \t\tNormally, the refseq directory is specified by\n\t\tdefining a global variable\
      \ REFSEQ_DIR in the config\n\t\tfile. The option -refseq allows to overwrite\
      \ this\n\t\tvalue.\n\n\n    OPTIONAL ARGUMENTS\n\n\t-skip #\tSkip the first\
      \ # organisms of the list.\n\n\t        This option is convenient to resume\
      \ the installation\n\t        of a list of organisms, when it has been interrupted.\n\
      \n\t\tIt also allows to organize the installation by chunks\n\t\tof organisms.\n\
      \n\t-skip_species # skip the first # of the list of NCBI species. \n\n\t   \
      \     Note that one species can correspond to several\n\t        organisms,\
      \ if several strains have been sequenced.\n\n\t-last #\tStop after the first\
      \ # organisms of the list.\n\n\t\tThis option can be used to organize the installation\n\
      \t\tby chunks of organisms.\n\n\t-last_species # Stop after the first # species\
      \ of the NCBI\n\t        list.\n\n\t-organism Full name of the organism (e.g.\
      \ 'Saccharomyces\n\t\tcerevisiae'). This option is only valid when a single\n\
      \t\torganism is installed.\n\n\t-source\tdata source\n\n\t-dir dir{install}\n\
      \t\tAbsolute path of the installation directory. \n\t\tBEWARE : you should provide\
      \ the absolute path of the\n\t\tinstallation directory, not the relative path.\n\
      \n\t-batch run some tasks (for example the calibration of oligos\n\t\tand dyads)\
      \ in batch mode.  This options works on our\n\t\tlab cluster, but could be adapted\
      \ for other\n\t\tconfigurations by adapting the parameters in\n\t\tRSAT_config.props.\n\
      \n\t-queue  specify a queue to send the job with the option -batch. \n\n\t \
      \       On this instance of RSAT, default queue is rsat\n\n                Type\
      \ 'qstat -f' to get a list of existing queues.\n\n\t-config\n\t\tSpecify an\
      \ alternative organism configuration file for the\n\t\tgenome to be installed.\n\
      \n\t\tBy default, the organism configuration file is \n\t      \t$RSAT/public_html/data/genomes/supported_organisms.pl\n\
      \n        -backup_org_table\n                Store a backup copy of the organism\
      \ table before\n                overwriting it.\n\n\t-local\n\t\tAbsolute path\
      \ of a RSA local config file.\n\n\t\tBy default, the newly installed organism\
      \ is added to\n\t\tthe main RSA config file is changed (provided the user\n\t\
      \thas write access to the RSA config file).\n\n\t\tIn addition to the organisms\
      \ installed by the RSAT\n\t\tsystem administrator (found in\n\t\t/usr/local/share/rsat/public_html/data/supported_organisms.tab),\
      \ users can\n\t\tinstall some organisms locally.\n\n\t\tFor this, the user must\
      \ first define an environment\n\t\tvariable called RSA_LOCAL_CONFIG, and indicating\
      \ the\n\t\tabsolute path of the local config file.  \n\t\tE.g.  \n\t\t  export\
      \ RSA_LOCAL_CONFIG=/home/fred/RSA.local.config\n\n\t\tWhen install-organism\
      \ is called with the option\n\t\t-local, the new organism is added to the file\n\
      \t\tindicated by the environment variable RSA_LOCAL_CONFIG\n\t\trather than\
      \ the main RSA config file.\n\n\t-syn\tsynonym table\n\t\tA tab-delimited file\
      \ containing two coloumns. The\n\t\tforst column contains a gene ID, the second\
      \ a gene\n\t\tname.\n\n\t-up_from distal limit of the upstream regions (e.g.\
      \ -800 for yeast)\n\n\t-up_to\tproximal limit of the upstream regions (e.g.\
      \ -1)\n\n\t-genbank genbank directory (obsolete, see refseq)\n\n\t-prefid feattype\
      \ idname\n\t        passed to parse-genbank.pl\n\n\t-date last_update\n\n\t\
      \        Force the 'last_update' attribute to a given date. \n\n\t\tThis option\
      \ is used by download-organism to ensure\n\t\tthat the local genome has the\
      \ same installation date\n\t\tas the server, rather than using the date of download\n\
      \t\tas update date.\n\n\t-ensembl\n\t\tENSEMBL directory. Directory containing\
      \ the ENSEMBL\n\t\tflat files in Genbank format (ext .dat)\n\n\t\tExample: \n\
      \t\tftp.ensembl.org/pub/current_worm/data/flatfiles/genbank\n\n\t-task\tspecification\
      \ of a single installation task\n\t\t    e.g.\n\t\t\tinstall-organism -task\
      \ dyads\n\t\tsupported tasks: available,download,list,parse,config,phylogeny,start_stop,allup,seq_len_distrib,genome_segments,upstream_freq,genome_freq,protein_freq,protein_len,oligos,dyads,fasta_genome,fasta_genome_rm,chrom_sizes,index_bedtools,uninstall,erase,distrib,ncf,intergenic_freq,ensembl_freq,clean,default,rewrite,all\n\
      \n\t\tDescription of the tasks\n\t\t------------------------\n\n\t\tavailable\
      \    list available species on the NCBI FTP site.\n\t\t             This task\
      \ cannot be combine with any\n\t\t             other task.\n\n\t\tdownload \
      \    download genome from the NCBI FTP site\n\t\t             (ftp://ftp.ncbi.nih.gov/genomes/refseq/)\n\
      \t\t             via the rsync protocol.\n\n\t\tlist         print the list\
      \ of downloaded strains for the\n\t\t             user-specified species.\n\n\
      \t\tparse        parse genome data (sequence, features) from \n\t\t        \
      \     genbank-formatted flat files (gbff)\n\t\t             downloaded from\
      \ NCBI. Parsing is ensured\n\t\t             by the program parse-genbank.pl.\n\
      \n\t\tconfig\t     update configuration file\n\n\t\tstart_stop   \n\t\t\t  \
      \   calculate start and stop codon\n\t\t\t     frequencies\n\n\t\tallup\t  \
      \   retrieve all upstream sequences\n\n\t\tgenome_segments\n\t\t\t     retrieve\
      \ sequences and limits of genome segments\n\t\t\t     (intergenic, genic)\n\n\
      \t\toligos\t     calculate oligonucleotide frequencies\n\n\t\t\t     This task\
      \ requires to specify, in\n\t\t\t     addition, the type(s) of sequences for\n\
      \t\t\t     which oligo frequencies have to be\n\t\t\t     calculated (upstream_freq,\n\
      \t\t\t     intergenic_freq, genome_freq).\n\n\t\tdyads\t     calculate dyad\
      \ frequencies\n\n\t\t\t     This task requires to specify, in\n\t\t\t     addition,\
      \ the type(s) of sequences for\n\t\t\t     which dyad frequencies have to be\n\
      \t\t\t     calculated (upstream_freq,\n\t\t\t     intergenic_freq, genome_freq).\n\
      \n\t\tncf\t     calculate oligo and dyad frequencies in\n\t\t\t     intergenic\
      \ segments\n\n\t\tupstream_freq\n\t\t\t     calculate oligo and dyad frequencies\
      \ for\n\t\t\t     all upstream sequences\n\n\t\tintergenic_freq\n\t\t\t    \
      \ calculate oligo and dyad frequencies for\n\t\t\t     all intergenic sequences\n\
      \n\t\tgenome_freq  \n\t\t\t     calculate oligo and dyad frequencies for\n\t\
      \t\t     the whole genome sequence. This is not\n\t\t\t     recommended for\
      \ higher organisms, where\n\t\t\t     the genome represents several Gigabases,\n\
      \t\t\t     and the computation of all oligo and dyad\n\t\t\t     frequencies\
      \ might take ages.\n\n\t\tclean\t     remove unnecessary sequence files\n\n\t\
      -rm\tcalibrate oligo and dyad frequncies on repeat masked\n\t\tsequences, in\
      \ addition to the non-masked sequences.\n\n\t-img_format\n\t\timage format for\
      \ the graphs of sequence length distribution\n\nEXAMPLES\n\n    Get the list\
      \ of available genomes for one of the supported groups\n    on the NCBI FTP/rsync\
      \ site.  Supported values for option -group\n    are the subdirectories of the\
      \ FTP site\n    (rsync://ftp.ncbi.nlm.nih.gov/genomes/refseq).\n\n\tinstall-organism\
      \ -v 1 -group [GROUP]  -task available \n            -o available_vertebrate.tab\n\
      \n    Download one species with rsync:\n\n    \tinstall-organism -v 1  -group\
      \ [GROUP] -species [SPECIES] \n            -task download\n\n    Parse the genome\
      \ for a given species, and declare it in RSAT\n    supported organism. NOTE:\
      \ this installs all the strains for the\n    selected species. For some species\
      \ this can represent thousands of\n    strains (e.g. Eschrichia coli). Strains\
      \ can be restricted with the\n    options -strain or -max_strains.\n\n     \
      \   install-organism -v 1  -group [GROUP] -species [SPECIES] \n            -task\
      \ parse,config\n\n    Run the default installation steps for a given species.\
      \ Note: the\n    option -list is required in order to collect the organism names,\n\
      \    which are made by concatenating species and strain\n\n        install-organism\
      \ -v 1  -group [GROUP] -species [SPECIES] \n            -task list,default\n\
      \n    Installation can be automated and parallelized with a job\n    scheduler\
      \ (e.g. qsub) in order to install all the species of a\n    given group.\n\n\
      \    Example: install all species of the group \"fungi\" at NCBI.\n\n    Step\
      \ 1: get the list of species available at NCBI\n\n        install-organism -v\
      \ 1 -group fungi -task available \n\t    -o fungi_available_species.txt\n\n\
      \    Step 2: download genome for all the strains of these\n    species. Beware,\
      \ this takes space, there are several hundreds of\n    species.\n\n\tinstall-organism\
      \ -v 1 -group fungi -task download \n    \t    -species_file fungi_available_species.txt\n\
      \n    Step 3: parse the genomes of all strains for each fungal species.\n\n\t\
      install-organism -v 1 -group fungi -task parse,config \n    \t    -species_file\
      \ fungi_available_species.txt\n\n    Step 4: collect the list of downloaded\
      \ organisms. Organism names\n    are built by concatenating species and strain\
      \ names.\n\n\tinstall-organism -v 1 -group fungi \n    \t    -species_file fungi_available_species.txt\
      \ \n\t    -task list \n\t    -o fungi_downloaded_orgnanisms.txt\n\n    Step\
      \ 5: extract fasta sequences for different types of genomic\n    regions, and\
      \ run some control tests (e.g. oligonucleotide\n    frequencies of start and\
      \ stop codons). With the option -batch, the\n    tasks are sent to a job scheuler\
      \ (qsub) in order to be executed in\n    parallel.\n\n\tinstall-organism -v\
      \ 1 \n\t    -org_file fungi_downloaded_orgnanisms.txt \n\t    -task start_stop,allup,seq_len_distrib,genome_segments\
      \ \n\t    -task protein_len,fasta_genome,fasta_genome_rm \n\t    -task chrom_sizes,index_bedtools\
      \ \n\t    -batch\n\n    Step 6: compute the oligomer frequency tables. In batch\
      \ mode, this\n    task can be done only after the previous job list is finished,\n\
      \    because of the dependencies between the parallelized tasks\n    (upstream\
      \ sequences have to be computed before computing their\n    oligonucleotide\
      \ and dyad frequencies).\n\n\tinstall-organism -v 1 \n\t    -org_file fungi_downloaded_orgnanisms.txt\
      \ \n\t    -task upstream_freq,genome_freq,protein_freq,oligos,dyads \n\t   \
      \ -batch\n\nSEE ALSO\n\n    download-organisms\n\n        The program I<install-organism>\
      \ performs all the formatting\n\tand calibration tasks for importing genomes\
      \ from the reference\n\tdatabases (NCBI, EMBL) to RSAT.\n\n\tThe program I<download-organism>\
      \ transfers the RSAT-formatted\n\tgenomes from a RSAT server. \n\n \tIf a genome\
      \ is available on the RSAT server, it is recommended\n\tto use download-genomes\
      \ in order to obtain it immediately in\n\tthe RSAT format, rather than install-genomes.\n\
      \n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - supported-organisms-server
    positional:
    - !Positional
      description: USAGE
      position: 0
      name: supported-organisms
      optional: false
    - !Positional
      description: DESCRIPTION
      position: 0
      name: Jacques.van-Helden@univ-amu.fr
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: Genomes
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Specify the URL of the remote RSAT server.\nDefault: http://rsat-tagc.univ-mrs.fr/rsat/\n\
        The option -url can be combined with the option\n-taxon in order to obtain\
        \ the list of organisms\nsupported on the main RSAT server, before downloading\n\
        them.\nExamples:\nsupported-organisms-server -taxon Fungi\n-server http://rsat-tagc.univ-mrs.fr/rsat/\n\
        supported-organisms-server -taxon Metazoa\n-server http://rsat.sb-roscoff.fr/\n\
        Select additional output fields:\nsupported-organisms-server -taxon Viridiplantae\n\
        -return last_update,ID,taxonomy\n-server http://floresta.eead.csic.es/rsat/\n\
        Choose a specific taxon:\nsupported-organisms-server -taxon Archaea\n-server\
        \ http://embnet.ccg.unam.mx/rsa-tools\nRestrict taxon depth:\nsupported-organisms-server\
        \ -taxon Bacteria\n-depth 5 -server http://embnet.ccg.unam.mx/rsa-tools"
      synonyms:
      - -url
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "fields\nsupported: ID,name,taxid,source,last_update,nb,seq_format,up_from,up_to,taxonomy,data,genome,genome_assembly,genome_version,download_date,variant_available,variant_source,path_to_variant_files,blast_available"
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: output
      optional: true
    - !Flag
      description: Only returns organisms belonging to a selected taxon.
      synonyms:
      - -taxon
      args: !SimpleFlagArg
        name: selected_taxon
      optional: true
    - !Flag
      description: "#\nDepth for exploring the taxonomic tree. When the value\ndiffers\
        \ from 0, the program only returns one\n\"representative\" organism per taxon\
        \ of the specified\ndepth.\nThis option is convenient to select a non-redundant\
        \ set\nof species. Note that the biological relevance of the\nresult strongly\
        \ depends on the annotation of the\ntaxonomy in the original database from\
        \ whichb RSAT\ngenomes were downloaded.\nPositive value indicate that the\
        \ tree should be\ntraversed from root to leaves.\nNegative values indicate\
        \ that the tree should be\ntraversed from leaves to root. Beware: level 0\
        \ is the\nspecies. Level -1 this corresponds to the lowest level\nof the taxonomy.\n\
        Also note that the depth of the taxonomic annotations\nvary along branches,\
        \ so that positive values will give\ndifferent results from negative values.\n"
      synonyms:
      - -depth
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tsupported-organisms\n\nUSAGE\n        supported-organisms\
      \ [-i inputfile] [-o outputfile] [-v]\n\nAUTHORS\n\tOlivier Sand\n\tJacques.van-Helden@univ-amu.fr\n\
      \nDESCRIPTION\n\n\tGet the list of organisms supported on a remote RSAT\n\t\
      server. Optionally, the list of supported organisms can be\n\trestricted at\
      \ a given taxonomic level (option -taxon).\n\nCATEGORY\n\tGenomes\n\nOPTIONS\n\
      \t-h\t(must be first argument) display full help message\n\n\t-help\t(must be\
      \ first argument) display options\n\n\t-url    Specify the URL of the remote\
      \ RSAT server. \n                Default: http://rsat-tagc.univ-mrs.fr/rsat/\n\
      \n\t\tThe option -url can be combined with the option\n\t\t-taxon in order to\
      \ obtain the list of organisms\n\t\tsupported on the main RSAT server, before\
      \ downloading\n\t\tthem.\n\n\t\tExamples: \n\t\t   supported-organisms-server\
      \ -taxon Fungi \n\t\t      -server http://rsat-tagc.univ-mrs.fr/rsat/\n\n\t\t\
      \   supported-organisms-server -taxon Metazoa \n\t\t      -server http://rsat.sb-roscoff.fr/\n\
      \n\t\t Select additional output fields:\n\t\t   supported-organisms-server -taxon\
      \ Viridiplantae \n\t\t      -return last_update,ID,taxonomy \n\t\t      -server\
      \ http://floresta.eead.csic.es/rsat/ \n\n\t\t Choose a specific taxon:\n\t\t\
      \   supported-organisms-server -taxon Archaea \n\t\t      -server http://embnet.ccg.unam.mx/rsa-tools\n\
      \n\t\t Restrict taxon depth:\n\t\t   supported-organisms-server -taxon Bacteria\
      \ \n\t\t      -depth 5 -server http://embnet.ccg.unam.mx/rsa-tools\n\n\n \t\
      -return output fields\n\t\tsupported: ID,name,taxid,source,last_update,nb,seq_format,up_from,up_to,taxonomy,data,genome,genome_assembly,genome_version,download_date,variant_available,variant_source,path_to_variant_files,blast_available\n\
      \n        -taxon selected_taxon \n\t       Only returns organisms belonging\
      \ to a selected taxon.\n\n\t-depth #\n\t       Depth for exploring the taxonomic\
      \ tree. When the value\n\t       differs from 0, the program only returns one\n\
      \t       \"representative\" organism per taxon of the specified\n\t       depth.\n\
      \n\t       This option is convenient to select a non-redundant set\n\t     \
      \  of species. Note that the biological relevance of the\n\t       result strongly\
      \ depends on the annotation of the\n\t       taxonomy in the original database\
      \ from whichb RSAT\n\t       genomes were downloaded.\n\n\t       Positive value\
      \ indicate that the tree should be\n\t       traversed from root to leaves.\n\
      \n\t       Negative values indicate that the tree should be\n\t       traversed\
      \ from leaves to root. Beware: level 0 is the\n\t       species. Level -1 this\
      \ corresponds to the lowest level\n\t       of the taxonomy.\n\n\t       Also\
      \ note that the depth of the taxonomic annotations\n\t       vary along branches,\
      \ so that positive values will give\n\t       different results from negative\
      \ values.\n\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - sequence-lengths
    positional:
    - !Positional
      description: 1999 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: sequence-lengths
      optional: false
    - !Positional
      description: USAGE
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "|kb|mb|gb\nUnits for sequence lengths.\nSupported units:\nbp \
        \       base pairs\nkb        kilobases\nmb        megabases\ngb        gigabases"
      synonyms:
      - -unit
      args: !SimpleFlagArg
        name: bp
      optional: true
    - !Flag
      description: "input format\nThe input file can contain either sequences or genomic\n\
        coordinates (-in_format bed).\nFor a list of supported input sequences, type\n\
        convert-seq -help"
      synonyms:
      - -in_format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "If not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: only return sum of sequene lengths
      synonyms:
      - -sum
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tsequence-lengths\n\n        1999 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nDESCRIPTION\n\tReturn the length of each sequence for a user-speficied\n\t\
      sequence file. Optionally, return the sum of lengths.\n\nCATEGORY\n\tsequences\n\
      \nUSAGE\n        sequence-lengths [-i inputfile] [-o outputfile] [-v]\n\nOPTIONS\n\
      \t-h\t(must be first argument) display full help message\n\n\t-help\t(must be\
      \ first argument) display options\n\n\t-v\tverbose\n\n\t-i inputfile\n\t\tif\
      \ not specified, the standard input is used.\n\t\tThis allows to place the command\
      \ within a pipe.\n\n\t-unit bp|kb|mb|gb\n\t      Units for sequence lengths.\n\
      \t      Supported units:\n\t      bp\tbase pairs\n\t      kb\tkilobases\n\t\
      \      mb\tmegabases\n\t      gb\tgigabases\n\n\t-in_format   input format\n\
      \n\t\tThe input file can contain either sequences or genomic\n\t\tcoordinates\
      \ (-in_format bed).\n\n\t\tFor a list of supported input sequences, type\n\t\
      \t    convert-seq -help\n\n\t-o outputfile\n\t\tIf not specified, the standard\
      \ output is used.\n\t        This allows to place the command within a pipe.\n\
      \n\t-sum\tonly return sum of sequene lengths\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - supported-organisms
    positional:
    - !Positional
      description: USAGE
      position: 0
      name: supported-organisms
      optional: false
    - !Positional
      description: "Management of taxonomic tree: \nRekin's Janky (Rekins.Janky@vib.be)."
      position: 0
      name: Jacques.van-Helden.fr
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: Genomes
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "format\nsupported: tab,tree,html_tree,newick\ntab: tab-delimited\
        \ text format, with one row per\norganism and one column per field (see option\n\
        -return).\ntree: a textual representation of the tree, with\nhyphen-based\
        \ indentation to indicate taxon depth.\nhtml_tree: same as tree, but wiht\
        \ HTML tags (organism\nnames in italics, taxon names in bold)."
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: output
      optional: true
    - !Flag
      description: "fields\nsupported: ID,name,taxid,source,last_update,nb,seq_format,up_from,up_to,taxonomy,data,genome,genome_assembly,genome_version,download_date,variant_available,variant_source,path_to_variant_files,blast_available"
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: output
      optional: true
    - !Flag
      description: "Only returns organisms belonging to a selected taxon.\nExample:\n\
        supported-organisms -taxon Enterobacteriaceae"
      synonyms:
      - -taxon
      args: !SimpleFlagArg
        name: selected_taxon
      optional: true
    - !Flag
      description: "Only returns organisms belonging to a selected\n\"taxonomic\"\
        \ group.\nSupported groups (as defined by EnsemblGenomes):\nFungi\nProkaryotes\n\
        Bacteria\nArchaea\nProtists\nMetazoa\nPlants\nNote that some of the \"groups\"\
        \ correspond to a specific\ntaxon defined by its systematic name (e.g. Metazoa,\n\
        Fungi) or by its common name (Plants, Prokaryotes),\nwhilst others are defined\
        \ according ot the common usage\n(e.g. Protists) but do not properly speaking\
        \ correspond\nto a taxonomic group. These non-taxonomic groups are\nconverted\
        \ as follows:\n- \"Protists\" is converted to\n\"(Eukaryota NOT (Metazoa OR\
        \ Fungi)) OR EnsemblProtists\"\n- \"Plants\" is converted to Viridiplantae\n\
        - \"Prokaryotes\" is converted to \"Bacteria OR Archaea\"\nExample:\nsupported-organisms\
        \ -taxon Protists\nsupported-organisms -taxon Prokaryotes"
      synonyms:
      - -group
      args: !SimpleFlagArg
        name: selected_group
      optional: true
    - !Flag
      description: "Only return organisms from a user-selected source(s).\nThis argument\
        \ can be used iteratively to accept\nmultiple sources.\nExample:\nsupported-organisms\
        \ -source ensembl\nsupported-organisms -source ensemblgenomes\nsupported-organisms\
        \ -source ensembl -source ensemblgenomes"
      synonyms:
      - -source
      args: !SimpleFlagArg
        name: selected_source
      optional: true
    - !Flag
      description: "#\nDepth for exploring the taxonomic tree. When the value\ndiffers\
        \ from 0, the program only returns one\n\"representative\" organism per taxon\
        \ of the specified\ndepth.\nThis option is convenient to select a non-redundant\
        \ set\nof species. Note that the biological relevance of the\nresult strongly\
        \ depends on the annotation of the\ntaxonomy in the original database from\
        \ whichb RSAT\ngenomes were downloaded.\nPositive value indicate that the\
        \ tree should be\ntraversed from root to leaves.\nNegative values indicate\
        \ that the tree should be\ntraversed from leaves to root. Beware: level 0\
        \ is the\nspecies. Level -1 this corresponds to the lowest level\nof the taxonomy.\n\
        Also note that the depth of the taxonomic annotations\nvary along branches,\
        \ so that positive values will give\ndifferent results from negative values."
      synonyms:
      - -depth
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Select at most one organism per species. This option\naims at\
        \ avoiding to be submerged by hundreds of\nstrains sequenced for the same\
        \ species\n(e.g. Escherichia coli).\nSince the current annotations do not\
        \ contain any\nexplicit mention of the taxonomic depth in the\ntaxonomic classification,\
        \ we use a somewhat pedestrial\ncriterion to identify species, by considering\
        \ the\nfirst word of the organism name as the genus, and the\nsecond name\
        \ as the species."
      synonyms:
      - -unique_species
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Select at most one organism per genus. See option\n-unique_species\
        \ for the details."
      synonyms:
      - -unique_genus
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "the list of organisms supported on a remote\nRSAT server, via\
        \ the Web services interface\n(http://www.rsat.eu/web_services/RSATWS.wsdl).\n\
        The option -server can be combined with the option\n-taxon in order to obtain\
        \ the list of organisms\nsupported on the main RSAT server, before downloading\n\
        them.\nEx:\nsupported-organisms -taxon Fungi -server\nAn alternative server\
        \ RSAT server can be selected by\nspecifying the URL of the Web server.\n\
        supported-organisms -server http://embnet.ccg.unam.mx/rsa-tools\n"
      synonyms:
      - -server
      args: !SimpleFlagArg
        name: Return
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tsupported-organisms\n\nUSAGE\n        supported-organisms\
      \ [-i inputfile] [-o outputfile] [-v]\n\nAUTHORS\n\tJacques.van-Helden.fr\n\n\
      \tManagement of taxonomic tree: \n\t   Rekin's Janky (Rekins.Janky@vib.be).\n\
      \nDESCRIPTION\n\n\tReturns the list of organisms supported on the local\n\t\
      Regulatory Sequence Analysis Tools (default) or on a remote\n\tserver (option\
      \ -server). The list can be restricted at a given\n\ttaxonomic level (option\
      \ -taxon).\n\nCATEGORY\n\tGenomes\n\nOPTIONS\n\t-h\t(must be first argument)\
      \ display full help message\n\n\t-help\t(must be first argument) display options\n\
      \n\t-format\toutput format\n\t\tsupported: tab,tree,html_tree,newick\n\n\t\t\
      tab: tab-delimited text format, with one row per\n\t\torganism and one column\
      \ per field (see option\n\t\t-return).\n\n\t\ttree: a textual representation\
      \ of the tree, with\n\t\thyphen-based indentation to indicate taxon depth.\n\
      \n\t\thtml_tree: same as tree, but wiht HTML tags (organism\n\t\tnames in italics,\
      \ taxon names in bold).\n\n \t-return output fields\n\t\tsupported: ID,name,taxid,source,last_update,nb,seq_format,up_from,up_to,taxonomy,data,genome,genome_assembly,genome_version,download_date,variant_available,variant_source,path_to_variant_files,blast_available\n\
      \n        -taxon selected_taxon \n\t       Only returns organisms belonging\
      \ to a selected taxon.\n\t       Example: \n\t           supported-organisms\
      \ -taxon Enterobacteriaceae\n\n        -group selected_group \n\n\t       Only\
      \ returns organisms belonging to a selected\n\t       \"taxonomic\" group.\n\
      \n\t       Supported groups (as defined by EnsemblGenomes): \n\t           Fungi\n\
      \t           Prokaryotes\n\t\t   Bacteria\n\t\t   Archaea\n\t\t   Protists\n\
      \t\t   Metazoa\n\t\t   Plants\n\n\t       Note that some of the \"groups\" correspond\
      \ to a specific\n\t       taxon defined by its systematic name (e.g. Metazoa,\n\
      \t       Fungi) or by its common name (Plants, Prokaryotes),\n\t       whilst\
      \ others are defined according ot the common usage\n\t       (e.g. Protists)\
      \ but do not properly speaking correspond\n\t       to a taxonomic group. These\
      \ non-taxonomic groups are\n\t       converted as follows:\n\t       - \"Protists\"\
      \ is converted to \n\t         \"(Eukaryota NOT (Metazoa OR Fungi)) OR EnsemblProtists\"\
      \n\t       - \"Plants\" is converted to Viridiplantae\n\t       - \"Prokaryotes\"\
      \ is converted to \"Bacteria OR Archaea\" \n\n\t       Example: \n\t       \
      \    supported-organisms -taxon Protists\n\t           supported-organisms -taxon\
      \ Prokaryotes\n\n\t-source selected_source\n\t       Only return organisms from\
      \ a user-selected source(s).\n\t       This argument can be used iteratively\
      \ to accept\n\t       multiple sources.\n\n\t       Example: \n\t          \
      \ supported-organisms -source ensembl\n\t           supported-organisms -source\
      \ ensemblgenomes\n\t           supported-organisms -source ensembl -source ensemblgenomes\n\
      \n\t-depth #\n\t       Depth for exploring the taxonomic tree. When the value\n\
      \t       differs from 0, the program only returns one\n\t       \"representative\"\
      \ organism per taxon of the specified\n\t       depth.\n\n\t       This option\
      \ is convenient to select a non-redundant set\n\t       of species. Note that\
      \ the biological relevance of the\n\t       result strongly depends on the annotation\
      \ of the\n\t       taxonomy in the original database from whichb RSAT\n\t  \
      \     genomes were downloaded.\n\n\t       Positive value indicate that the\
      \ tree should be\n\t       traversed from root to leaves.\n\n\t       Negative\
      \ values indicate that the tree should be\n\t       traversed from leaves to\
      \ root. Beware: level 0 is the\n\t       species. Level -1 this corresponds\
      \ to the lowest level\n\t       of the taxonomy.\n\n\t       Also note that\
      \ the depth of the taxonomic annotations\n\t       vary along branches, so that\
      \ positive values will give\n\t       different results from negative values.\n\
      \n\t-unique_species\n\n\t        Select at most one organism per species. This\
      \ option\n\t        aims at avoiding to be submerged by hundreds of\n\t    \
      \    strains sequenced for the same species\n\t        (e.g. Escherichia coli).\n\
      \t\t\n\n\t\tSince the current annotations do not contain any\n\t\texplicit mention\
      \ of the taxonomic depth in the\n\t\ttaxonomic classification, we use a somewhat\
      \ pedestrial\n\t\tcriterion to identify species, by considering the\n\t\tfirst\
      \ word of the organism name as the genus, and the\n\t\tsecond name as the species.\n\
      \n\t-unique_genus\n\n\t        Select at most one organism per genus. See option\n\
      \t        -unique_species for the details.\n\n\t-server Return the list of organisms\
      \ supported on a remote\n\t\tRSAT server, via the Web services interface\n\t\
      \t(http://www.rsat.eu/web_services/RSATWS.wsdl).\n\n\t\tThe option -server can\
      \ be combined with the option\n\t\t-taxon in order to obtain the list of organisms\n\
      \t\tsupported on the main RSAT server, before downloading\n\t\tthem.\n\n\t\t\
      Ex: \n\t\t   supported-organisms -taxon Fungi -server\n\n\t\tAn alternative\
      \ server RSAT server can be selected by\n\t\tspecifying the URL of the Web server.\n\
      \n\t\tsupported-organisms -server http://embnet.ccg.unam.mx/rsa-tools\n\n"
    generated_using: *id002
  - &id004 !Command
    command:
    - rsat
    - IUPAC-to-regular
    positional: []
    named: []
    parent: *id001
    subcommands:
    - !Command
      command:
      - rsat
      - IUPAC-to-regular
      - IUPAC-to-regular
      positional: []
      named:
      - !Flag
        description: '[cg]age'
        synonyms:
        - --u
        args: !EmptyFlagArg {}
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--u[cg]age\n"
      generated_using: &id005
      - --usage
    - !Command
      command:
      - rsat
      - IUPAC-to-regular
      - util
      positional: []
      named:
      - !Flag
        description: '[cg]age'
        synonyms:
        - --u
        args: !EmptyFlagArg {}
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--u[cg]age\n"
      generated_using: *id005
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nNAME\n\tIUPAC-to-regular\n\tby Jacques van Helden, 26 June 1997\n\
      \n\nDESCRIPTION \n\n        Convert a pattern described with the IUPAC code\
      \ for ambiguous\n\tnucleotides into an equivalent regular expression. This\n\
      \texpression can be used to search for complex patterns with\n\tgeneral string\
      \ search program like grep or gais.\n\nCATEGORY\n\tutil\n\tsequence\n\nUSAGE\n\
      \tIUPAC-to-regular 'input_sequence'\n\t\nINPUT\n\tAny sequence conform to the\
      \ standard degenerate nucleotide code of the \n\tIUPAC-IUB commission. The pattern\
      \ sequence should thus only contain the \n\tfollowing characters:\n\t\tA, T,\
      \ G, C\tsingle nucleotide codes\n\t\tR\t= A or G\n\t\tY\t= C or T\n\t\tM\t=\
      \ A or C\n\t\tK\t= G or T\n\t\tS\t= G or C\n\t\tW\t= A or T\n\t\tB\t= all except\
      \ A\n\t\tD\t= all except C\n\t\tH\t= all except G\n\t\tV\t= all except T\n\t\
      \tN\t= any nucleotide\n\t\t\n\tUpper and lower case are considered equivalent.\n\
      \t\t\nEXAMPLES\n\tIUPAC-to-regular CANNTG\n\t\treturns CA[ACGT][ACGT]TG\n\t\t\
      \n\tIUPAC-to-regular GATWA\n\t\treturns GAT[AT]A\n\t\t\n\tIUPAC-to-regular SSSSSSSSS\n\
      \t\treturns [GC][GC][GC][GC][GC][GC][GC][GC][GC]\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - dna-pattern
    positional:
    - !Positional
      description: perl script v1.1 by Jacques van Helden, 30 July 1997.
      position: 0
      name: dna-pattern
      optional: false
    - !Positional
      description: CATEGORY
      position: 0
      name: expressions.
      optional: false
    - !Positional
      description: pattern matching
      position: 1
      name: sequences
      optional: false
    - !Positional
      description: "-i sequencefile -format seq_format -p pattern [-id identifier]\n\
        [-1str|-2str|-R] [-c|-ct] [-noov]\n[-N flanking] [-v]"
      position: 0
      name: dna-pattern
      optional: false
    - !Positional
      description: FastA format
      position: 0
      name: fasta
      optional: false
    - !Positional
      description: IntelliGenetics format
      position: 1
      name: IG
      optional: false
    - !Positional
      description: a single sequence in a file
      position: 2
      name: raw
      optional: false
    - !Positional
      description: each new line is a new sequence
      position: 3
      name: multi
      optional: false
    - !Positional
      description: "a list of files containing each\na single raw sequence"
      position: 4
      name: filelist
      optional: false
    - !Positional
      description: Nucleotide(s)   Description
      position: 0
      name: Symbol
      optional: false
    - !Positional
      description: DIRECT PATTERN INPUT
      position: 0
      name: nucleotides.
      optional: false
    - !Positional
      description: "The input file must contain raw sequences without any\ncomment\
        \ or other text. Tabs (\\t), blank spaces and newline\ncharacters (\\n) are\
        \ accepted (they will be automatically\nremoved before analysis). The sequence\
        \ must be terminated by\na newline character."
      position: 0
      name: raw
      optional: false
    - !Positional
      description: "file list. Each line of the input file contains the\nname of a\
        \ file containing a single sequence in raw format."
      position: 1
      name: filelist
      optional: false
    - !Positional
      description: "IntelliGenetics format.\nThe first non-comment line must be the\
        \ sequence identifier\n(a single word without spaces).\nThe sequence follows\
        \ the identifier line identifier. It can\ninclude spaces, tabs or newlines,\
        \ that will be removed for\nsequence analysis.\nThe end of one sequence is\
        \ indicated by termination character:\n1 for linear, 2 for circular sequences.\n\
        A single file may contain several sequences.\nEXAMPLE of IG suite:\n; sequence\
        \ of the region upstream from NIL1\n; Locus GAT1\n; ORF YFL021W  coord:  \
        \ 6 95964 97496\n; upstream region size: 100\n; upstream region coord:   \
        \     6 95864 95963\nGAT1\nACAGAGCAACAATAATAACAGCACTATGAGTCGCACACTT\nGCGGTGCCCGGCCCAGCCACATATATATAGGTGTGTGCCA\n\
        CTCCCGGCCCCGGTATTAGC\n1\n; sequence of the region upstream from PUT4\n; Locus\
        \ PUT4\n; ORF YOR348C  coord:   15 988773 986890\n; upstream region size:\
        \ 100\n; upstream region coord:        15 988873 988774\nPUT4\nGGGTTTGTGTTCCTCTTCCTTTCCTTTTTTTTTCTCTCTT\n\
        CCCTTCCAGTTTCTTTTATTCTTTGCTGTTTCGAAGAATC\nACACCATCAATGAATAAATC\n1"
      position: 2
      name: IG
      optional: false
    named:
    - !Flag
      description: short help message
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "input sequence file. This file contains the sequences where the\
        \ pattern(s)\nwill be searched for.\nVarious format are accepted\nIf omitted,\
        \ standard input (eg keyboard) will be used.\nThis allows to use the program\
        \ within a pipe."
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "|lower\nMask lower or uppercases, respecively, i.e. replace\n\
        selected case by N characters."
      synonyms:
      - -mask
      args: !SimpleFlagArg
        name: upper
      optional: true
    - !Flag
      description: sequence format. The accepted formats are
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: input
      optional: true
    - !Flag
      description: "output file.\nIf omitted, standard output (eg screen) will be\
        \ used.\nThis allows to use the program within a pipe."
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "pattern entered directly after -p.\nAlternatively use -pl."
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "name of the file containing the patterns to search .\n(see format\
        \ below)"
      synonyms:
      - -pl
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nallow # substitutions."
      synonyms:
      - -subst
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "The pattern is considered as a standard regular expression.\n\
        It is convenient to specifically search for masked sequences represented\n\
        by \"N\" characters in sequences:\nie : dna-pattern -i your_sequence_file\
        \ -p \"N+\" -noov -1str -noIUPAC"
      synonyms:
      - -noIUPAC
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nscore column\nthe #th column of the pattern file contains a\
        \ number\nindicating the score for a match of this pattern. This\noption allows\
        \ to weight the matches according to a\nuser-defined scheme."
      synonyms:
      - -sc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "do not search pattern identifier in the second column\nof pattern\
        \ file. instead the id takes the same content\nas the pattern sequence."
      synonyms:
      - -noid
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Do not count overlapping matches for self-overlapping\npatterns."
      synonyms:
      - -noov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: search matches on both strands (direct and reverse complement)
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: search matches only on the direct strand.
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: search matches only on the reverse complement strand.
      synonyms:
      - -R
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "pattern identifier (one word).\nUse this option combined with\
        \ -p, to specify the ID of\na unique pattern entered on the command line.\
        \ For\nmultple patterns, it is more convenient to use a\npattern file (option\
        \ -pl)."
      synonyms:
      - -id
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "[,field2,...]\nList of fields to return. Multiple fields can be\n\
        entered separated by commas, or by using iteratively\nthe option.\n-return\
        \ field1 [-return field2 ...]\nSupported fields: colsum,counts,ct,limits,notacgt,profiles,rank,rowsum,scores,sites,stats,table,total.\n\
        -return sites:   return match positions (default)\n-return limits: return\
        \ start and end positions for each\ninput sequence\n-return notacgt: return\
        \ positions for characters that\ndo not correspond not standard nucleotides\
        \ (ACGT) eg: N, X and\ndegenerate nucleotides from IUPAC code (eg: W, K)\n\
        -return counts: return the count of matches per\nsequence.\n-return rank:\
        \ return the rank of the sequence (this is\nespecially useful in combination\
        \ with the option\n-sort).\n-return score: return a score per sequence, computed\n\
        by summing the scores of the matching patterns.\n-return ct:    same as '-return\
        \ counts', except that it\nreturns the sum of matches in all the files of\
        \ the\nsequence file list, instead of the count within\neach separate file.\n\
        -return table: return the count of pattern matches per\nsequence in the form\
        \ of a table.  (one line per\nsequence, one column per pattern)\n-return colsum\
        \ (together with -return table) prints an extra\ncolumn with the total occurrences\
        \ per sequence\n-return rowsum (together with -return table) prints an\nextra\
        \ row with total occurrences per pattern\n-return total (together with -return\
        \ table) prints an\nextra column with the total occurrences per\nsequence\
        \ and an extra row with total occurrences\nper pattern.  (amounts to combine\
        \ -colsum and\n-rowsum)\n-return stats return matching statistics\n-return\
        \ profiles return matching profiles with sliding\nwindows."
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: field1
      optional: true
    - !Flag
      description: 'format for returning matches (supported: fasta, table)'
      synonyms:
      - -match_format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#   Threshold.\nReturn match count only for sequences with >=\
        \ # matches.\nOnly valid in combination with -c."
      synonyms:
      - -th
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "merge mutually overlapping matches. When succesive\nmatches overlap,\
        \ they are converted into a single\nmatch. The merged match takes the ID \"\
        merged\". The\nscore is the highest score of the matching patterns."
      synonyms:
      - -merge
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#    return matching sequences with # flanking nucleotides'
      synonyms:
      - -N
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#   return matching sequences with # left flanking nucleotides'
      synonyms:
      - -NL
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#   return matching sequences with # right flanking nucleotides'
      synonyms:
      - -NR
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose.
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\ndefine # as the origin for the calculation of positions.\n\
        -origin -0 defines the end of each sequence as the\norigin. The matching positions\
        \ are then negative values,\nproviding the distance between the match and\
        \ the end of the\nsequence."
      synonyms:
      - -origin
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nSliding window size. The score at each position is\ncalculated\
        \ by summing the scores of all patterns\nencountered within a sliding window\
        \ of size #. This\noption automatically returns matching positions.\nA threshold\
        \ can be specified to specify the minimal\nmatching score to be returned."
      synonyms:
      - -window
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(with sliding window only)\nonly return the top score obtained\
        \ with the sliding\nwindow for each sequence."
      synonyms:
      - -top
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(with -top only)\nsort sequences according to their top score"
      synonyms:
      - -sort
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: help (displays the current message)
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tdna-pattern\n\tperl script v1.1 by Jacques van Helden, 30\
      \ July 1997.\n\nDESCRIPTION\n\tSearches all occurrences of a pattern within\
      \ DNA sequences.\n        The pattern can be entered as a simple nucleotide\
      \ sequence,\n        but can also include degenerate nucleotide codes, or regular\n\
      \        expressions.\n\nCATEGORY\n\tsequences\n\tpattern matching\n\nUSAGE\n\
      \t(get help)\n\tdna-pattern -h\n\n\t(directly enter the sequence to search)\n\
      \tdna-pattern  -i sequencefile -format seq_format -p pattern [-id identifier]\n\
      \t\t\t[-1str|-2str|-R] [-c|-ct] [-noov]\n\t\t\t[-N flanking] [-v]\n\n\t(read\
      \ a list of patterns from a file)\n\tdna-pattern -i sequencefile -format seq_format\
      \ -pl pattern_file\n   \t\t\t[-1str|-2str|-R] [-c|-ct]  [-noov]\n   \t\t\t[-N\
      \ flanking] [-v]\n\nARGUMENTS\n\t-h\thelp (displays the current message)\n\n\
      \t-help\tshort help message\n\n\t-i\tinput sequence file. This file contains\
      \ the sequences where the pattern(s)\n\t\twill be searched for.\n\t\tVarious\
      \ format are accepted\n\t\tIf omitted, standard input (eg keyboard) will be\
      \ used.\n\t\tThis allows to use the program within a pipe.\n\n\t-mask upper|lower\n\
      \t\tMask lower or uppercases, respecively, i.e. replace\n\t\tselected case by\
      \ N characters.\n\n\t-format\tinput sequence format. The accepted formats are\n\
      \t\tfasta\t       FastA format\n\t\tIG\t       IntelliGenetics format\n\t\t\
      raw\t       a single sequence in a file\n\t\tmulti\t       each new line is\
      \ a new sequence\n\t\tfilelist       a list of files containing each\n\t\t\t\
      \       a single raw sequence\n\t-o\toutput file.\n\t\tIf omitted, standard\
      \ output (eg screen) will be used.\n\t\tThis allows to use the program within\
      \ a pipe.\n\n\t-p\tpattern entered directly after -p.\n\t\tAlternatively use\
      \ -pl.\n\n\t-pl\tname of the file containing the patterns to search .\n\t\t\
      (see format below)\n\n\t-subst #\n               allow # substitutions.\n\t\
      -noIUPAC\n\t\tThe pattern is considered as a standard regular expression.\n\t\
      \tIt is convenient to specifically search for masked sequences represented\n\
      \t\tby \"N\" characters in sequences:\n\t\tie : dna-pattern -i your_sequence_file\
      \ -p \"N+\" -noov -1str -noIUPAC\n\t-sc #\n\t\tscore column\n\n\t\tthe #th column\
      \ of the pattern file contains a number\n\t\tindicating the score for a match\
      \ of this pattern. This\n\t\toption allows to weight the matches according to\
      \ a\n\t\tuser-defined scheme.\n\n\t-noid\n\t\tdo not search pattern identifier\
      \ in the second column\n\t\tof pattern file. instead the id takes the same content\n\
      \t\tas the pattern sequence.\n\n\t-noov\n\t\tDo not count overlapping matches\
      \ for self-overlapping\n\t\tpatterns.\n\n\t-2str\tsearch matches on both strands\
      \ (direct and reverse complement)\n\n\t-1str\tsearch matches only on the direct\
      \ strand.\n\n\t-R \tsearch matches only on the reverse complement strand.\n\n\
      \t-id\tpattern identifier (one word).\n\t\tUse this option combined with -p,\
      \ to specify the ID of\n\t\ta unique pattern entered on the command line. For\n\
      \t\tmultple patterns, it is more convenient to use a\n\t\tpattern file (option\
      \ -pl).\n\n\t-return field1[,field2,...]\n\n\t\tList of fields to return. Multiple\
      \ fields can be\n\t\tentered separated by commas, or by using iteratively\n\t\
      \tthe option.\n\t\t    -return field1 [-return field2 ...]\n\n\t\tSupported\
      \ fields: colsum,counts,ct,limits,notacgt,profiles,rank,rowsum,scores,sites,stats,table,total.\n\
      \n\t\t-return sites:   return match positions (default)\n\n\t\t-return limits:\
      \ return start and end positions for each\n\t\t    input sequence\n\n\t\t-return\
      \ notacgt: return positions for characters that\n\t\tdo not correspond not standard\
      \ nucleotides (ACGT) eg: N, X and\n\t\tdegenerate nucleotides from IUPAC code\
      \ (eg: W, K)\n\n\t\t-return counts: return the count of matches per\n\t\t  \
      \  sequence.\n\n\t\t-return rank: return the rank of the sequence (this is\n\
      \                     especially useful in combination with the option\n   \
      \                  -sort).\n\n\t\t-return score: return a score per sequence,\
      \ computed\n                     by summing the scores of the matching patterns.\n\
      \n\t\t-return ct:    same as '-return counts', except that it\n\t\t    returns\
      \ the sum of matches in all the files of the\n\t\t    sequence file list, instead\
      \ of the count within\n\t\t    each separate file.\n\n\t\t-return table: return\
      \ the count of pattern matches per\n\t\t    sequence in the form of a table.\
      \  (one line per\n\t\t    sequence, one column per pattern)\n\n\t\t-return colsum\
      \ (together with -return table) prints an extra\n\t\t    column with the total\
      \ occurrences per sequence\n\n\t\t-return rowsum (together with -return table)\
      \ prints an\n\t\t    extra row with total occurrences per pattern\n\n\t\t-return\
      \ total (together with -return table) prints an\n\t\t    extra column with the\
      \ total occurrences per\n\t\t    sequence and an extra row with total occurrences\n\
      \t\t    per pattern.  (amounts to combine -colsum and\n\t\t    -rowsum)\n\n\t\
      \t-return stats return matching statistics\n\n\t\t-return profiles return matching\
      \ profiles with sliding\n                    windows.\n\n\t-match_format\n\t\
      \tformat for returning matches (supported: fasta, table)\n\n        -th #  \
      \ Threshold.\n                Return match count only for sequences with >=\
      \ # matches.\n                Only valid in combination with -c.\n\n\t-merge\
      \  merge mutually overlapping matches. When succesive\n\t\tmatches overlap,\
      \ they are converted into a single\n\t\tmatch. The merged match takes the ID\
      \ \"merged\". The\n\t\tscore is the highest score of the matching patterns.\n\
      \n\t-N #\treturn matching sequences with # flanking nucleotides\n\n\t-NL #\t\
      return matching sequences with # left flanking nucleotides\n\n\t-NR #\treturn\
      \ matching sequences with # right flanking nucleotides\n\n\t-v\tverbose.\n\n\
      \        -origin #\n                define # as the origin for the calculation\
      \ of positions.\n                -origin -0 defines the end of each sequence\
      \ as the\n                origin. The matching positions are then negative values,\n\
      \                providing the distance between the match and the end of the\n\
      \                sequence.\n\n\t-window #\n\t\tSliding window size. The score\
      \ at each position is\n\t\tcalculated by summing the scores of all patterns\n\
      \t\tencountered within a sliding window of size #. This\n\t\toption automatically\
      \ returns matching positions.\n\t\tA threshold can be specified to specify the\
      \ minimal\n\t\tmatching score to be returned.\n\n\t-top\t(with sliding window\
      \ only)\n\t\tonly return the top score obtained with the sliding\n\t\twindow\
      \ for each sequence.\n\n\t-sort\t(with -top only)\n\t\tsort sequences according\
      \ to their top score\n\nPATTERN FORMATS\n\n    PATTERN SEQUENCE\n\n\tThe standard\
      \ degenerate nucleotide code of the IUPAC-IUB\n\tcommission is supported (http://www.iupac.org/,\
      \ see\n\thttp://www.chem.qmw.ac.uk/iupac/misc/naseq.html for complete\n\tinformation).\n\
      \n\tThe pattern sequence should thus only contain the following characters:\n\
      \n            ------------------------------------------------------\n     \
      \       Symbol  Nucleotide(s)   Description\n            ------------------------------------------------------\n\
      \            A       A               Adenosine\n            C       C      \
      \         Cytidine\n            G       G               Guanosine\n        \
      \    T       T               Thymidine\n            R       A or G         \
      \ puRines\n            Y       C or T          pYrimidines\n            W  \
      \     A or T          Weak hydrogen bonding\n            S       G or C    \
      \      Strong hydrogen bonding\n            M       A or C          aMino group\
      \ at common position\n            K       G or T          Keto group at common\
      \ position\n            H       A, C or T       not G\n            B       G,\
      \ C or T       not A\n            V       G, A, C         not T\n          \
      \  D       G, A or T       not C\n            N       G, A, C or T    aNy\n\
      \            ------------------------------------------------------\n\n\tUpper\
      \ and lower case are considered equivalent.\n\n\tPatterns can either be entered\
      \ directly by the user, or listed\n\tin a file.\n\n        The pattern can also\
      \ contain regular expression elements:\n        - GAT[TA]AG means \"GATAAG or\
      \ GATTAG\" (equivalent to GATWAG).\n        - CGGN{11}CCG means CGG followed\
      \ by 10 N followed by CCG.\n        - GATAAGN{0,30}GATAAG means two GATAAG spaced\
      \ by 0 to 30\n          nucleotides.\n\n    DIRECT PATTERN INPUT\n\n\tType the\
      \ -p option directly followed by a pattern sequence.\n\tAn optional identifier\
      \ can be further entered after the -id option.\n\n    PATTERN FILE\n\n\tA pattern\
      \ file is a tab-delimited text file. Each row contains\n\tthe description of\
      \ one pattern. Column content:\n\t  1) Pattern sequence. This is the only mandatory\
      \ column.\n\t  2) Pattern ID (optional).\n\tAdditional columns can be used to\
      \ specify other pattern\n\tattributes (description, score, ...), but they are\
      \ by default\n\tignored by the program. The option -sc allows to specify a\n\
      \tscore column.\n\nSEQUENCE FILE FORMAT\n        Different formats are supported:\n\
      \        - raw\n\t- wc (=wconsensus)\n        - filelist\n        - IG (intelligenetics)\n\
      \n\traw\tThe input file must contain raw sequences without any\n           \
      \     comment or other text. Tabs (\\t), blank spaces and newline\n        \
      \        characters (\\n) are accepted (they will be automatically\n       \
      \         removed before analysis). The sequence must be terminated by\n   \
      \             a newline character.\n\n\tfilelist\n\t\tfile list. Each line of\
      \ the input file contains the\n\t\tname of a file containing a single sequence\
      \ in raw format.\n\n\tIG\tIntelliGenetics format.\n \t\tThe first non-comment\
      \ line must be the sequence identifier\n\t\t(a single word without spaces).\n\
      \t\tThe sequence follows the identifier line identifier. It can\n          \
      \      include spaces, tabs or newlines, that will be removed for\n        \
      \        sequence analysis.\n                The end of one sequence is indicated\
      \ by termination character:\n\t\t1 for linear, 2 for circular sequences.\n\t\
      \tA single file may contain several sequences.\n\n\t\tEXAMPLE of IG suite:\n\
      \n\t\t; sequence of the region upstream from NIL1\n\t        ; Locus GAT1\n\
      \ \t        ; ORF YFL021W  coord:   6 95964 97496\n \t        ; upstream region\
      \ size: 100\n \t        ; upstream region coord:        6 95864 95963\n \t \
      \       GAT1\n \t        ACAGAGCAACAATAATAACAGCACTATGAGTCGCACACTT\n  \t    \
      \    GCGGTGCCCGGCCCAGCCACATATATATAGGTGTGTGCCA\n  \t        CTCCCGGCCCCGGTATTAGC\n\
      \  \t        1\n \t        ; sequence of the region upstream from PUT4\n   \
      \             ; Locus PUT4\n                ; ORF YOR348C  coord:   15 988773\
      \ 986890\n                ; upstream region size: 100\n                ; upstream\
      \ region coord:        15 988873 988774\n                PUT4\n            \
      \    GGGTTTGTGTTCCTCTTCCTTTCCTTTTTTTTTCTCTCTT\n                CCCTTCCAGTTTCTTTTATTCTTTGCTGTTTCGAAGAATC\n\
      \                ACACCATCAATGAATAAATC\n                1\n\nOUTPUT\n\tThe output\
      \ file contains columns separated by tabs (\\t).\n\n\tColumn contents:\n\n\t\
      1- pattern identifier\n\t2- matching strand : direct (D) or reverse complement\
      \ (R)\n\t3- pattern sequence\n\t4- name of the sequence matching the pattern\n\
      \t5- start position of the match\n\t6- end position of the match\n\t7- match\
      \ sequence\n\t8- matching score\n\n\tIf the -c option is entered, output file\
      \ returns the following\n\tcolumns :\n\n\t1- query pattern identifier word\n\
      \t2- query pattern sequence\n\t3- sequence file name\n\t4- number of matches\
      \ for the current pattern in the current file\n\nEXAMPLES\n\tdna-pattern -i\
      \ GATA -p GATWA -i my_file.fasta -c\n\n\twill count all occurences of the strings\
      \ 'GATAA' and 'GATTA' present\n\tin the file my_file.fasta\nWEB VERSION\n\t\
      http://www.bigre.ulb.ac.be/bioinformatics/rsa-tools/\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - local-word-analysis
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: local-word-analysis
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '20181203'
      optional: false
    - !Positional
      description: pattern discovery
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: "The probability to observe exactly k occurrences of a given oligomer\n\
        is computed using the binomial statistics\nunderrepresentation\nk        \
        \   k       (N-k)\nP(X<=k) = SUM C(k,N)  p   (1-p)\ni=0\noverreprensentation\n\
        N            k       (N-k)\nP(X>=k) = SUM  C(k,N)  p   (1-p)\ni=k"
      position: 0
      name: P-VALUE
      optional: false
    - !Positional
      description: E-VALUE = number_of_tests * P-VALUE
      position: 1
      name: E-VALUE
      optional: false
    named:
    - !Flag
      description: '#, --verbosity=#   set verbosity to level #'
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --input=#       read sequence from # (must be in FASTA format)\n\
        if not specified, the standard input is used"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --output=#      output results to #\nif not specified, the\
        \ standard output is used"
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --length=#      set oligomer length to # (REQUIRED ARGUMENT)\n\
        when the option dyad is used # represents the length of one monad\nEXAMPLE:\
        \ --length=7"
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: count dyads instead of oligomers
      synonyms:
      - --dyad
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ":B         when using dyads set the spacing between A to B\nEXAMPLE:\
        \ --length=3 --dyad --spacing=1:20"
      synonyms:
      - --spacing
      args: !SimpleFlagArg
        name: A
      optional: true
    - !Flag
      description: use under-represented words statistics
      synonyms:
      - --under
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --strand=#      search in forward strand + or in both strands\
        \ +- (default)\nEXAMPLE: --strand=+"
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "allow overlapping oligomer occurrences\nEXAMPLE: --overlap"
      synonyms:
      - -p
      - --overlap
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#            count oligomers in fixed window of length #\nuse\
        \ --window=variable to use a variable size window (slower)\nuse --window=none\
        \ to search without window\nEXAMPLE: --window=20 (window of length 20)"
      synonyms:
      - --window
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#       count oligomers in fixed window of length #, 2#, ...\n\
        only valid when the --center option is used\nEXAMPLE: --center=0 --windowgroup=20\
        \ (use a window of length 20, 40, 60, ...)"
      synonyms:
      - --windowgroup
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#             use right bound position as reference\nposition\
        \ #. This should be used when dealing with\nupstream sequences.\nEXAMPLE:\
        \ --right=-1 (use right bound of input\nsequence as position -1)"
      synonyms:
      - --right
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#              use left bound position as reference\nposition\
        \ #. This should be used when dealing with\ndownstream sequences.\nEXAMPLE:\
        \ --left=0 (use left bound of input\nsequences as position 0)"
      synonyms:
      - --left
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#            use center position as reference\nposition #.\n\
        EXAMPLE: --center=0 (use center of input\nsequences as position 0)"
      synonyms:
      - --center
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --markov=#      use a Markov model of order # calibrated from\n\
        input sequences\norder 0 corresponds to single nucleotide frequencies\nEXAMPLE:\
        \ --markov=2 (Markov chain of order 2)"
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#            use a predefined local-word-analysis background\
        \ model.\nEXAMPLE --bgfile=mybgfile"
      synonyms:
      - --bgfile
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#           use a predefined oligo-analysis background model\n\
        EXAMPLE: --bgolio=myfile.gz"
      synonyms:
      - --bgoligo
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#     use a Markovian background model loaded from a\npredefined\
        \ oligo-analysis file\nEXAMPLE: --bgoligomarkov=myfile.gz"
      synonyms:
      - --bgoligomarkov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=#          use a widow size of length # in background model\n\
        EXAMPLE: --bgwindow=200 (use a background window of length 200)"
      synonyms:
      - --bgwindow
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "VALUE     limit output to items that have PARAM <= VALUE\nEXAMPLE:\
        \ --max rank 10\nSupported parameters: seq,identifier,obs_freq,exp_\nfreq,occ,exp_occ,occ_P,occ_E,occ_sig,start,end,wid\n\
        th,n_win,n_pos,w_rank,rank"
      synonyms:
      - --max
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "VALUE     limit output to items that have PARAM >= VALUE\nEXAMPLE:\
        \ --min occ_sig 0\nSupported parameters:seq,identifier,obs_freq,exp_f\nreq,occ,exp_occ,occ_P,occ_E,occ_sig,start,end,widt\n\
        h,n_win,n_pos,w_rank,rank"
      synonyms:
      - --min
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "=[+][-]PARAM    sort ouput according to PARAM in growing\norder\
        \ (+) or inverse (-)\nEXAMPLE: --sort=+label\nSupported parameters:seq,identifier,obs_freq,exp_f\n\
        req,occ,exp_occ,occ_P,occ_E,occ_sig,start,end,width\nh,n_win,n_pos,w_rank,rank"
      synonyms:
      - --sort
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "NAME\n        local-word-analysis\n\nVERSION\n        20181203\n\n\
      AUTHOR\n        Matthieu Defrance <matthieu.dc.defrance@ulb.ac.be>\n\nDESCRIPTION\n\
      \        compute oligomer frequencies in a set of sequences,\n        and detects\
      \ locally overrepresented oligomers.\n\nCATEGORY\n        sequences\n      \
      \  pattern discovery\n        \nARGUMENTS\n    GENERAL OPTIONS\n        --version\
      \             show program's version number and exit\n        -h, --help   \
      \         show this help message and exit\n        -v #, --verbosity=#   set\
      \ verbosity to level #\n        \n\n        -i #, --input=#       read sequence\
      \ from # (must be in FASTA format)\n                              if not specified,\
      \ the standard input is used\n        -o #, --output=#      output results to\
      \ #\n                              if not specified, the standard output is\
      \ used\n    COUNTING OPTIONS\n        -l #, --length=#      set oligomer length\
      \ to # (REQUIRED ARGUMENT)\n                              when the option dyad\
      \ is used # represents the length of one monad\n                           \
      \   EXAMPLE: --length=7    \n        --dyad                count dyads instead\
      \ of oligomers                              \n        --spacing=A:B        \
      \ when using dyads set the spacing between A to B\n                        \
      \      EXAMPLE: --length=3 --dyad --spacing=1:20\n        --under          \
      \     use under-represented words statistics\n        -s #, --strand=#     \
      \ search in forward strand + or in both strands +- (default)\n             \
      \                 EXAMPLE: --strand=+\n        -p, --overlap         allow overlapping\
      \ oligomer occurrences\n                              EXAMPLE: --overlap\n \
      \       --window=#            count oligomers in fixed window of length #\n\
      \                              use --window=variable to use a variable size\
      \ window (slower)\n                              use --window=none to search\
      \ without window\n                              EXAMPLE: --window=20 (window\
      \ of length 20)\n        --windowgroup=#       count oligomers in fixed window\
      \ of length #, 2#, ...\n                              only valid when the --center\
      \ option is used\n                              EXAMPLE: --center=0 --windowgroup=20\
      \ (use a window of length 20, 40, 60, ...)\n        --right=#             use\
      \ right bound position as reference\n                              position\
      \ #. This should be used when dealing with \n                              upstream\
      \ sequences.\n                              EXAMPLE: --right=-1 (use right bound\
      \ of input\n                              sequence as position -1)\n       \
      \ --left=#              use left bound position as reference\n             \
      \                 position #. This should be used when dealing with\n      \
      \                        downstream sequences.\n                           \
      \   EXAMPLE: --left=0 (use left bound of input\n                           \
      \   sequences as position 0)\n        --center=#            use center position\
      \ as reference\n                              position #.\n                \
      \              EXAMPLE: --center=0 (use center of input\n                  \
      \            sequences as position 0)\n                              \n    BACKGROUND\
      \ MODEL OPTIONS                              \n        -m #, --markov=#    \
      \  use a Markov model of order # calibrated from\n                         \
      \     input sequences\n                              order 0 corresponds to\
      \ single nucleotide frequencies\n                              EXAMPLE: --markov=2\
      \ (Markov chain of order 2)\n        --bgfile=#            use a predefined\
      \ local-word-analysis background model.\n                              EXAMPLE\
      \ --bgfile=mybgfile\n        --bgoligo=#           use a predefined oligo-analysis\
      \ background model\n                              EXAMPLE: --bgolio=myfile.gz\n\
      \        --bgoligomarkov=#     use a Markovian background model loaded from\
      \ a\n                              predefined oligo-analysis file\n        \
      \                      EXAMPLE: --bgoligomarkov=myfile.gz\n        --bgwindow=#\
      \          use a widow size of length # in background model \n             \
      \                 EXAMPLE: --bgwindow=200 (use a background window of length\
      \ 200)\n\n    FILTER OPTIONS                             \n        --max=PARAM\
      \ VALUE     limit output to items that have PARAM <= VALUE\n               \
      \               EXAMPLE: --max rank 10\n                              Supported\
      \ parameters: seq,identifier,obs_freq,exp_\n                              freq,occ,exp_occ,occ_P,occ_E,occ_sig,start,end,wid\n\
      \                              th,n_win,n_pos,w_rank,rank\n        --min=PARAM\
      \ VALUE     limit output to items that have PARAM >= VALUE\n               \
      \               EXAMPLE: --min occ_sig 0\n                              Supported\
      \ parameters:seq,identifier,obs_freq,exp_f\n                              req,occ,exp_occ,occ_P,occ_E,occ_sig,start,end,widt\n\
      \                              h,n_win,n_pos,w_rank,rank\n        --sort=[+][-]PARAM\
      \    sort ouput according to PARAM in growing\n                            \
      \  order (+) or inverse (-)\n                              EXAMPLE: --sort=+label\n\
      \                              Supported parameters:seq,identifier,obs_freq,exp_f\n\
      \                              req,occ,exp_occ,occ_P,occ_E,occ_sig,start,end,width\n\
      \                              h,n_win,n_pos,w_rank,rank\n\n\n\nSTATISTICS\n\
      \    P-VALUE\n        The probability to observe exactly k occurrences of a\
      \ given oligomer\n        is computed using the binomial statistics\n\n    \
      \    underrepresentation\n\n                   k           k       (N-k)\n \
      \       P(X<=k) = SUM C(k,N)  p   (1-p)\n                  i=0    \n\n     \
      \   overreprensentation\n\n                   N            k       (N-k)\n \
      \       P(X>=k) = SUM  C(k,N)  p   (1-p)\n                  i=k    \n\n    E-VALUE\n\
      \        E-VALUE = number_of_tests * P-VALUE\n\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - position-scan
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: position-scan
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: j.a.c.mondragon@ncmm.uio.no
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: util
      optional: false
    - !Positional
      description: 'Default: 1e-3'
      position: 0
      name: specified.
      optional: false
    - !Positional
      description: "\e[1m-diff\e[0m"
      position: 0
      name: done.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    position-scan\n\n\e[1mVERSION\e[0m\n    1\n\n\e\
      [1mDESCRIPTION\e[0m\n    Compute the positional distribution of predicted binding\
      \ sites for a set\n    of PSSMs in a set of sequences of the same length.\n\n\
      \e[1mAUTHORS\e[0m\n    j.a.c.mondragon@ncmm.uio.no\n\n\e[1mCATEGORY\e[0m\n \
      \   util\n\n\e[1mUSAGE\e[0m\n    position-scan [-i inputfile] [-o outputfile]\
      \ [-v #] [...]\n\n\e[1mINPUT FORMAT\e[0m\n\e[1mOUTPUT FORMAT\e[0m\n\e[1mSEE\
      \ ALSO\e[0m\n\e[1mWISH LIST\e[0m\n    \e[1mwish 1\e[0m\n    \e[1mwish 2\e[0m\n\
      \n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail\
      \ in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display full\
      \ help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-seq input_sequences_file\e\
      [0m\n        A file containing the sequences in fasta format.\n\n    \e[1m-seq_format\
      \ sequence_format\e[0m\n        Sequence format.\n\n    \e[1m-seq_control control_sequences_file\e\
      [0m\n        A file containing the control sequences in fasta format.\n\n  \
      \  \e[1m-seq_control_format sequence_format\e[0m\n        Control sequences\
      \ format.\n\n    \e[1m-matrix input_motif_file\e[0m\n        The input file\
      \ contains a set of position-specific scoring matrices.\n\n    \e[1m-matrix_format\
      \ matrix_format\e[0m\n        Specify the input matrix format.\n\n        \e\
      [1mSupported matrix formats\e[0m\n\n        Since the program takes several\
      \ matrices as input, it only accepts\n        matrices in formats supporting\
      \ several matrices per file (transfac,\n        tf, tab, cluster-buster, cb,\
      \ infogibbs, meme, stamp, uniprobe).\n\n        For a description of these formats,\
      \ see the help of \e[33mconvert-matrix\e[0m.\n\n    \e[1m-title title\e[0m\n\
      \        Title displayed on top of the report page.\n\n    \e[1m-top_matrices\
      \ X\e[0m\n        Only analyze the first X motifs of the input file. This options\
      \ is\n        convenient for quick testing before starting the full analysis.\n\
      \n    \e[1m-skip_matrices X\e[0m\n        Skip the first X motifs of the input\
      \ file. This options is\n        convenient for testing the program on a subset\
      \ of the motifs before\n        starting the full analysis.\n\n    \e[1m-top_sequences\
      \ X\e[0m\n        Only analyze the first X sequences of the input sequence file.\n\
      \n    \e[1m-skip_sequences X\e[0m\n        Skip the first X sequences of the\
      \ input sequence file.\n\n    \e[1m-bin bin_length\e[0m\n        The length\
      \ of the bin (in bp).\n\n        Default: 50\n\n    \e[1m-pval p_value\e[0m\n\
      \        Select only those matches with a p-value equal or lower than the\n\
      \        specified.\n\n        Default: 1e-3\n\n    \e[1m-legend_pos legend_position\e\
      [0m\n        The place where the legend will be inserted in the profile plot.\n\
      \n        Default: bottom\n\n        Supported: bottom,side\n\n    \e[1m-heatmap_dendogram\e\
      [0m\n        Indicate if the dendogram in the profiles heatmap should be visible\n\
      \        or not.\n\n        Default: show\n\n        Supported: show,hide\n\n\
      \    \e[1m-bgfile background_file\e[0m\n        A file containing the background\
      \ model used to scan the sequences.\n\n    \e[1m-bg_format background_file\e\
      [0m\n        Format for the background model file.\n\n                Supported\
      \ formats: all the input formats supported by\n                I<convert-background-model>.\n\
      \n    \e[1m-bginput\e[0m\n        Calculate background model from the input\
      \ sequence set.\n\n    \e[1m-markov\e[0m\n        Order of the markov chain\
      \ for the background model.\n\n        This option is incompatible with the\
      \ option -bgfile.\n\n    \e[1m-rand_motifs\e[0m\n        Scan the sequences\
      \ with the randomly permuted input matrices.\n\n        Use this option as negative\
      \ control.\n\n    \e[1m-rand_seq\e[0m\n        The input sequences are randomly\
      \ permuted (thus the interdependence\n        of nucleotides is lost).\n\n \
      \       If option -bg_file is selected, the Background model is calculated\n\
      \        from these shuffled sequences.\n\n        Use this option as negative\
      \ control.\n\n    \e[1m-heatmap_color_palette Color_Palette\e[0m\n        Select\
      \ the color palette used in the heatmaps (divergent scales) The\n        color\
      \ palettes (and their names) are taken from ColorBrewer2 website\n        (http://colorbrewer2.org/)\n\
      \n        Supported: Spectral,RdYlGn,RdYlBu,RdGy,RdBu,PuOr,PRGn,PiYG,BrBG\n\n\
      \        Default: RdBu\n\n    \e[1m-heatmap_color_classes X\e[0m\n        This\
      \ option specifies in how many color classes the color palette\n        will\
      \ be divided.\n\n        For sequential color palettes: max 9 For diverging\
      \ color palettes:\n        max 11\n\n        If the user specified a color greater\
      \ than the maximum allowed, the\n        program takes this maximum value.\n\
      \n        For more information see ColorBrewer2 website\n        (http://colorbrewer2.org/)\n\
      \n    \e[1m-task tasks\e[0m\n        Specify one or several tasks to be run.\
      \ If this option is not\n        specified, all the tasks are run.\n\n     \
      \   Note that some tasks depend on others. This option should thus be\n    \
      \    used with caution, by advanced users only.\n\n        Supported tasks:\
      \ (all, scan, plots)\n\n        \e[1mall\e[0m Execute all the parts of the program\
      \ (default)\n\n        \e[1mscan\e[0m\n            Run the motif scaning step\
      \ with \e[33mmatrix-scan\e[0m. Usually this is the\n            slower step.\
      \ Generate a table with the putative TFBSs of each\n            PSSMs on the\
      \ input sequences.\n\n        \e[1mplots\e[0m\n            Skip the matrix scan\
      \ step (if the \e[33mmatrix-scan\e[0m results already\n            exists) and\
      \ only executes the step where the p-values are\n            calculated and\
      \ the plots are generated.\n\n            This option is ideal to saving time\
      \ once the scaning has been\n            done.\n\n    \e[1m-diff\e[0m\n    \
      \    Activate the differential mode where the distribution of TFBSs in\n   \
      \     the input sequences are compared relative the control sequences.\n\n \
      \   \e[1m-o output_prefix\e[0m\n        Prefix for the output files and folders.\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - get-orthologs
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: get-orthologs
      optional: false
    - !Positional
      description: ID of the reference (target) gene
      position: 0
      name: ref_id
      optional: false
    - !Positional
      description: Name of the reference (target) organism
      position: 1
      name: ref_organism
      optional: false
    - !Positional
      description: ID of the query gene
      position: 2
      name: query_id
      optional: false
    - !Positional
      description: Common name of the query gene
      position: 3
      name: query_name
      optional: false
    - !Positional
      description: "Common name of the gene found in the reference genome.\n\e[1mBeware:\e\
        [0m this output field requires to load synonym tables\nfor all the organisms\
        \ of the reference taxon, which\nincreases the running time (a few seconds\
        \ per taxon)."
      position: 4
      name: ref_name
      optional: false
    - !Positional
      description: Name of the query organism
      position: 5
      name: query_organism
      optional: false
    - !Positional
      description: Percent of identity (a number between 0 and 100)
      position: 6
      name: ident
      optional: false
    - !Positional
      description: Alignment lengths (in residues)
      position: 7
      name: ali_len
      optional: false
    - !Positional
      description: Number of mismatches
      position: 8
      name: mismat
      optional: false
    - !Positional
      description: Number of gap openings
      position: 9
      name: gap_open
      optional: false
    - !Positional
      description: E-value (expected number of false positives)
      position: 10
      name: e_value
      optional: false
    - !Positional
      description: Bit score
      position: 11
      name: bit_sc
      optional: false
    - !Positional
      description: Rank
      position: 12
      name: rank
      optional: false
    - !Positional
      description: Source rank (rank of the hit for the query organism).
      position: 13
      name: s_rank
      optional: false
    named:
    - !Flag
      description: ', but at the level of the genus. At this level we'
      synonyms:
      - -unique_species
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '50'
      synonyms:
      - -return
      - -lth
      args: !SimpleFlagArg
        name: ali_len
      optional: true
    - !Flag
      description: '1'
      synonyms:
      - -uth
      args: !SimpleFlagArg
        name: s_rank
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    get-orthologs\n\n\e[1mDESCRIPTION\e[0m\n    Return\
      \ orthologs or paralogs for a set of gene of a given organism\n    (query organism)\
      \ in all organisms belonging to a given taxon (reference\n    taxon).\n\n\e\
      [1mAUTHORS\e[0m\n    Rekin's Janky <Rekins.Janky\\@vib.be>\n    Jacques van\
      \ Helden <jvhelden@ulb.ac.be>\n\n\e[1mCATEGORY\e[0m\n    comparative genomics\n\
      \n\e[1mUSAGE\e[0m\n    get-orthologs -org query_organism -q GENE1 -q GENE2 ...\
      \ -taxon ref_taxon\n    [other options]\n\n\e[1mORTHOLOGY CRITERIA\e[0m\n  \
      \  \e[1mSemantic remark:\e[0m the appropriate criteria for establishing \e[1morthology\e\
      [0m or\n    \e[1mparalogy\e[0m relationship require to reconciliate the species\
      \ tree with the\n    molecular tree. For practical reasons, we cannot do this\
      \ for all the\n    species supported in RSAT. Pragmatically, \e[33mget-orthologs\e\
      [0m is thus based on\n    a very rudimentary (but widely used) criterion to\
      \ decide whether a gene\n    is or not ortholog: we run BLAST for all proteins\
      \ of the query genome\n    against all proteins of the reference taxon, and\
      \ maintain lists of hits\n    in subdirectories $RSAT/data/genome/[Organism_name]/blast_hits.\n\
      \n    The program filters the matches of these tables depending on the\n   \
      \ user-specified homology criteria and thresholds on all the fields.\n\n   \
      \ Actually, this program allows to retrieve supposed \e[1morthologs\e[0m (options\n\
      \    \e[1m-type BBH\e[0m, and to some extent option \e[33m-type BH\e[0m), but\
      \ also \e[1mparalogs\e[0m\n    (option -type all).\n\n\e[1mINPUT FORMAT\e[0m\n\
      \    Query genes can be directly entered on the command line (command -q) or\n\
      \    in an input file.\n\n    The first word of each row of input file is considered\
      \ as a query. Any\n    additional information on the same row is ignored.\n\n\
      \e[1mOUTPUT FORMAT\e[0m\n    A tab-separated file with two (or more) columns.\
      \ Each row of the output\n    file describes one similarity between a query\
      \ gene and another gene\n    (orhtolog or paralog, depending on the parameters).\n\
      \n    The first column indicates the \"hit\" gene (the one identified by BLAST\n\
      \    as similar to the query), the second column gives the reference organism\n\
      \    (the organism in which the BLAST search was performed). The third column\n\
      \    inciates the ID of the query gene.\n\n    Additional columns (percentage\
      \ of identity, hit rank, e_value, ...) can\n    be specified with the option\
      \ -return.\n\n    1. ID of the ortholog gene.\n    2. Name of the reference\
      \ organism.\n    3. ID of the query gene.\n    4. E-value\n    5. rank query\
      \ -> reference rank\n        Rank of this reference (target) gene among all\
      \ those matching the\n        same query gene for this pair of organisms.\n\n\
      \    6. s_rank reference <- query rank\n        Reciprocal rank. Rank of this\
      \ query gene among all those matching\n        the same reference (target) gene\
      \ for this pair of organisms.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n   \
      \     Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n     \
      \   Same as -h\n\n    \e[1m-i inputfile\e[0m\n        If no input file is specified,\
      \ the standard input is used. This\n        allows to use the command within\
      \ a pipe.\n\n    \e[1m-all\e[0m\n        Get orthologs for all the genes of\
      \ the query organism. This option\n        is particularly convenient to extract\
      \ phylogenetic profiles.\n\n    \e[1m-o outputfile\e[0m\n        If no output\
      \ file is specified, the standard output is used. This\n        allows to use\
      \ the command within a pipe.\n\n    \e[1m-org query_organism\e[0m\n        Organisms\
      \ to whih the query gene(s) belong.\n\n    \e[1m-q query_gene\e[0m\n       \
      \ Query gene. The query can be either the gene identifier, or any\n        supported\
      \ name (synonyms, cross-references).\n\n        This option can be used iteratively\
      \ on the same command to specify\n        multiple query genes.\n\n    \e[1m-taxon\
      \ ref_taxon\e[0m\n        Reference taxon. Orthologs are returned for each supported\
      \ organism\n        belonging to the reference taxon.\n\n    \e[1m-depth #\e\
      [0m\n        Depth for exploring the taxonomic tree. When the value differs\
      \ from\n        0, the program only returns one \"representative\" organism\
      \ per taxon\n        of the specified depth.\n\n        This option is convenient\
      \ to select a non-redundant set of species.\n        Note that the biological\
      \ relevance of the result strongly depends on\n        the annotation of the\
      \ taxonomy in the original database from whichb\n        RSAT genomes were downloaded.\n\
      \n        Positive value indicate that the tree should be traversed from root\n\
      \        to leaves.\n\n        Negative values indicate that the tree should\
      \ be traversed from\n        leaves to root. Beware: level 0 is the species.\
      \ Level -1 this\n        corresponds to the lowest level of the taxonomy.\n\n\
      \        Also note that the depth of the taxonomic annotations vary along\n\
      \        branches, so that positive values will give different results from\n\
      \        negative values.\n\n    \e[1m-unique_species\e[0m\n        Retain at\
      \ most one organism per species. This enables to filter out\n        the numerous\
      \ strains sequences for some species of particular\n        interest. (e.g.\
      \ Escherichia coli, Bacillus subtilis, ...).\n\n    \e[1m-unique_genus\e[0m\n\
      \        Retain at most one organism per genus. Same filter as for\n       \
      \ -unique_species, but at the level of the genus. At this level we\n       \
      \ don't expect to have much redundancy, but this option can be useful\n    \
      \    to select a reasonable number of organisms, e.g. to draw\n        phylogenetic\
      \ profile heatmaps.\n\n    \e[1m-type homology_type\e[0m\n        Supported\
      \ homology types: BBH,BH,all.\n\n        Default: BBH\n\n        \e[33mall\e\
      [0m Return all genes reported as similar in the pre-computed BLAST\n       \
      \     tables of RSAT (for details on BLAST procedure used to build\n       \
      \     these tables, type \e[33mgenome-blast -help\e[0m).\n\n            The\
      \ result thus contains not only orthologs but also paralogs.\n\n        \e[33mauto\e\
      [0m\n            Automatically set thresholds to return the BBH with reasonable\n\
      \            thresholds on additional fields (percent identity, alignment\n\
      \            length).\n\n            This option automatically adds the following\
      \ parameters:\n\n            Return percent of identity -return ident\n\n  \
      \          Return alignment length, and set threshold to at least 50 bp\n  \
      \          -return ali_len -lth ali_len 50\n\n            Return e-value, and\
      \ set thresholds to 1e-05 -return e_value -uth\n            e_value 1e-05\n\n\
      \            Require the best-matching hit (BH criterion) -return rank -uth\n\
      \            rank 1\n\n            Require the best reciprocal hit (combined\
      \ with previous\n            criterion, it returns the BBH, also called RBH)\
      \ -return s_rank\n            -uth s_rank 1\n\n    \e[1m-lth field lower_threshold\e\
      [0m\n        Lower threshold value on the specified field.\n\n    \e[1m-uth\
      \ field upper_threshold\e[0m\n        Upper threshold value on the specified\
      \ field.\n\n        Supported threshold values:\n        ali_len,mismat,gap_open,q_start,q_end,s_start,s_end,e_value,bit_sc,r\n\
      \        ank,s_rank\n\n    \e[1m-return output_fields\e[0m\n        Output field(s).\n\
      \n        By default, the output is a two-column file indicating the ID of the\n\
      \        gene identified as similar to the query gene, and the name of the\n\
      \        reference organism.\n\n        The option -return can be used to specify\
      \ additional output fields.\n\n        Supported fields:\n\n            ref_id\n\
      \                ID of the reference (target) gene\n\n            ref_organism\n\
      \                Name of the reference (target) organism\n\n            query_id\n\
      \                ID of the query gene\n\n            query_name\n          \
      \      Common name of the query gene\n\n            ref_name\n             \
      \   Common name of the gene found in the reference genome.\n\n             \
      \   \e[1mBeware:\e[0m this output field requires to load synonym tables\n  \
      \              for all the organisms of the reference taxon, which\n       \
      \         increases the running time (a few seconds per taxon).\n\n        \
      \    query_organism\n                Name of the query organism\n\n        \
      \    ident\n                Percent of identity (a number between 0 and 100)\n\
      \n            ali_len\n                Alignment lengths (in residues)\n\n \
      \           mismat\n                Number of mismatches\n\n            gap_open\n\
      \                Number of gap openings\n\n            e_value\n           \
      \     E-value (expected number of false positives)\n\n            bit_sc\n \
      \               Bit score\n\n            rank\n                Rank\n\n    \
      \        s_rank\n                Source rank (rank of the hit for the query\
      \ organism).\n\n        The option -return can be used iteratively on the same\
      \ command line\n        to specify several output fields. Another way to specify\
      \ multiple\n        output fields is to enter them separated by commas.\n\n\
      \        Examples:\n\n            -return query_id -return e_value -return rank\n\
      \n            -return query_id,e_value,rank\n\n    \e[1m-nogrep\e[0m\n     \
      \   Disable the pre-filtering with grep. This pre-filtering accelerates\n  \
      \      the selection of hits, but some grep versions do not support the -E\n\
      \        option. If this is the case on your operating system, you can still\n\
      \        obtain the correct results by inactivating the grep filter.\n\n   \
      \ \e[1m-org_list\e[0m\n        This option gives the posibility to specify a\
      \ set of reference\n        organisms rather than a taxon. Orthologs will only\
      \ be searched in\n        the organisms belonging to the given list.\n\n   \
      \     File format: each row should contain the identifier of one organism.\n\
      \        Lines starting with a semicolumn are ignored.\n\n    \e[1m-diamond\e\
      [0m\n        Use ranks_dmnd from diamond blast computed in genome-blast.\n\n\
      \    \e[1m-rand\e[0m\n        When the option \e[33m-rand\e[0m is activated,\
      \ the program replaces each\n        ortholog by a gene selected at random in\
      \ the genome where this\n        ortholg was found.\n\n        This option is\
      \ used (for example by \e[33mfootprint-scan\e[0m and\n        \e[33mfootprint-discovery\e\
      [0m to perform negative controls, i.e. check the\n        rate of false positives\
      \ in randomly selected promoters of the\n        reference taxon.\n\n    \e\
      [1m-nowarn\e[0m\n        Do not issue warning about organisms for which there\
      \ is no BLAST\n        file in the data repository.\n\n        (previous option:\
      \ -only_blast)\n\n\e[1mEXAMPLES\e[0m\n        get-orthologs -q lexA -org Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -taxon Gammaproteobacteria\n\n\e[1mSEE ALSO\e[0m\n  \e[1mgenome-blast\e[0m\n\
      \    The program \e[33mgenome-blast\e[0m is used to run BLAST for all proteins\
      \ of a\n    query organism against all proteins of a reference organism. This\n\
      \    program can be used by RSAT administrators to generate the similiraty\n\
      \    tables that are used by \e[33mget-orthologs\e[0m.\n\n  \e[1mfootprint-discovery\e\
      [0m\n    The program \e[33mfootprint-discovery\e[0m is a flow chart that combines\n\
      \    \e[33mget-orthologs\e[0m with other programs in order to discover conserved\n\
      \    elements in promoters of orthologous genes.\n\n\e[1mWISH LIST\e[0m\n  \e\
      [1moption -return hit_profiles\e[0m\n    This option returns statistics about\
      \ the number of hits per gene rather\n    than the compete listing of matching\
      \ genes in the reference taxon.\n\n   Output format\n    When the option \e\
      [33mhit_stats\e[0m is activated, the program returns a table with\n    one row\
      \ per query gene, one column per genome of the refence taxon, and\n    each\
      \ cell indicates the number of hits.\n\n  \e[1moption -return hit_profile_sum\e\
      [0m\n    Add a column to hit profiles, with the sum of hits.\n\n  \e[1moption\
      \ -return eval_profiles\e[0m\n    Same as -return hit_profiles, but the cells\
      \ of the output matrix\n    indicate the E-value of the best hit from the query\
      \ organism to the\n    reference genome.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - rescan-matrix
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: rescan-matrix
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    named:
    - !Flag
      description: ) of site detection <-> matrix building. The process stops at
      synonyms:
      - -iterations
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    rescan-matrix\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Rebuild a given position-specific scoring matrix\
      \ based on a set of sites\n    (instances of the motif) found by scaning a given\
      \ sequence set with the\n    input matrix.\n\n    The process can be iterated\
      \ for a specified number of cycles (option\n    -iterations) of site detection\
      \ <-> matrix building. The process stops at\n    convergence, i.e. as soon as\
      \ an iteration returns a matrix identical as\n    the previous one.\n\n\e[1mAUTHORS\e\
      [0m\n    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mCATEGORY\e[0m\n    Matrix\
      \ tools\n\n\e[1mUSAGE\e[0m\n    rescan-matrix -seq sequence_file -seq_format\
      \ format \\ -m matrix_file\n    [-iterations #] [-v #] [...]\n\n\e[1mINPUT FORMAT\e\
      [0m\n    See \e[33mconvert-seq\e[0m for supported input sequence formats.\n\n\
      \    If the matrix file contains several matrices, each of them will be\n  \
      \  treated separately. See \e[33mconvert-matrix\e[0m for supported matrix formats.\n\
      \n\e[1mOUTPUT FORMAT\e[0m\n    The output is a matrix file, containing one or\
      \ several matrices.\n\n\e[1mSEE ALSO\e[0m\n\e[1mWISH LIST\e[0m\n    \e[1mwish\
      \ 1\e[0m\n    \e[1mwish 2\e[0m\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n  \
      \      Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n     \
      \   Same as -h\n\n    \e[1m-seq sequence_file\e[0m\n        Sequence file\n\n\
      \    \e[1m-seq_format format\e[0m\n        Sequence format (default: fasta)\n\
      \n    \e[1m-m matrix_file\e[0m\n        Matrix file. Can contain one or several\
      \ matrices.\n\n    \e[1m-matrix_format format\e[0m\n         Matrixformat (default:\
      \ transfac)\n\n    \e[1m-iterations #\e[0m\n        Maximal number of iterations.\n\
      \n    \e[1m-scan_param scanning_parameters\e[0m\n        Parameters to scan\
      \ the sites. The argument is passed to matrix-scan.\n\n    \e[1m-o output_file\e\
      [0m\n        Output file. This file will contain the matrices resulting from\
      \ the\n        rescan process.\n\n        Additional output files might be exported\
      \ depending on the options\n        (-return sites, -return all_matrices). In\
      \ such case, the basename of\n        the main output file is used as prefix\
      \ to define the name of these\n        additional files.\n\n"
    generated_using: *id002
  - *id006
  - !Command
    command:
    - rsat
    - sub-sequence
    positional:
    - !Positional
      description: 1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: sub-sequence
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "|lower\nMask lower or uppercases, respecively, i.e. replace\n\
        selected case by N characters."
      synonyms:
      - -mask
      args: !SimpleFlagArg
        name: upper
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: "fragment_file\nThis option allows to specify a list of fragments\
        \ t be\nretrieved from each sequence of the input file.\nEach row contains\
        \ the coordinates of a fragment in 4\nor 5 columns:\n1) fragment ID\n2) sequence\
        \ ID (must be the same as in the sequence file)\n3) fragment start\n4) fragment\
        \ end\n5) strand (optional). If not specified, all\nfragments are taken on\
        \ the direct strand.\nexample:\nfrag1   chr2L   344641  348496  D\nfrag2 \
        \  chr2L   346419  350309  R\nfrag3   chr2R   350781  354418  D"
      synonyms:
      - -frag
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "| center | end\nReference for calculating positions.\nThe value\
        \ should be chosen according to the sequence\ntype. For instance:\n-origin\
        \ start for downstream sequences\n-origin end for promoter sequences\n-origin\
        \ center can be useful for ChIP-seq peaks, which\ncan have variable lengths,\
        \ but are supposed to\nbe more or less centred on the TF binding\nqsites."
      synonyms:
      - -origin
      args: !SimpleFlagArg
        name: start
      optional: true
    - !Flag
      description: "# starting position\nif not specified, the subsequence starts\
        \ at 1st position."
      synonyms:
      - -from
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#   end position\nif not specified, the end of the sequence is\
        \ used."
      synonyms:
      - -to
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: input format. Default is fasta
      synonyms:
      - -iformat
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: output format. Default is fasta
      synonyms:
      - -oformat
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: format. Default is fasta
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: input-output
      optional: true
    - !Flag
      description: return the reverse complement of the sub-sequences
      synonyms:
      - -rc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "add a suffix to sequence IDs to indicate the limits of\nthe sub-sequence."
      synonyms:
      - -limits
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tsub-sequence\n\n        1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nUSAGE\n        sub-sequence [-i inputfile] -from # -to # [-o outputfile] [-v]\n\
      \nDESCRIPTION\n\tReturn a subset of input sequences, specified by a start and\
      \ end positions.\n\nCATEGORY\n\tsequences\n\nOPTIONS\n        -h      (must\
      \ be first argument) display full help message\n\n        -help   (must be first\
      \ argument) display options\n\n\t-v\tverbose\n\n\t-i inputfile\n\t\tif not specified,\
      \ the standard input is used.\n\t\tThis allows to place the command within a\
      \ pipe.\n\n\t-mask upper|lower\n\t\tMask lower or uppercases, respecively, i.e.\
      \ replace\n\t\tselected case by N characters.\n\n\t-o outputfile\n\t\tif not\
      \ specified, the standard output is used.\n\t\tThis allows to place the command\
      \ within a pipe.\n\n\t-frag\tfragment_file\n\n\t\tThis option allows to specify\
      \ a list of fragments t be\n\t\tretrieved from each sequence of the input file.\n\
      \n\t\tEach row contains the coordinates of a fragment in 4\n\t\tor 5 columns:\n\
      \n\t\t     1) fragment ID\n\t\t     2) sequence ID (must be the same as in the\
      \ sequence file)\n\t\t     3) fragment start\n\t\t     4) fragment end\n\t\t\
      \     5) strand (optional). If not specified, all\n                        fragments\
      \ are taken on the direct strand.\n\n    \t\texample:\n\t\tfrag1\tchr2L\t344641\t\
      348496\tD\n\t\tfrag2\tchr2L\t346419\t350309\tR\n\t\tfrag3\tchr2R\t350781\t354418\t\
      D\n\n\t-origin start | center | end\n\t\tReference for calculating positions.\n\
      \n\t\tThe value should be chosen according to the sequence\n\t\ttype. For instance:\n\
      \n\t\t-origin start for downstream sequences\n\n\t\t-origin end for promoter\
      \ sequences\n\n\t\t-origin center can be useful for ChIP-seq peaks, which\n\t\
      \t\tcan have variable lengths, but are supposed to\n\t\t\tbe more or less centred\
      \ on the TF binding\n\t\t\tqsites.\n\n\t-from #\tstarting position\n\t\tif not\
      \ specified, the subsequence starts at 1st position.\n\n\t-to #\tend position\n\
      \t\tif not specified, the end of the sequence is used.\n\n\t-iformat\n\t\tinput\
      \ format. Default is fasta\n\n\t-oformat\n\t\toutput format. Default is fasta\n\
      \n\t-format\tinput-output format. Default is fasta\n\n\t-rc\treturn the reverse\
      \ complement of the sub-sequences\n\n\t-limits\n\t\tadd a suffix to sequence\
      \ IDs to indicate the limits of\n\t\tthe sub-sequence.\n\nPOSITION SPECIFICATION\n\
      \tPositive position are used to refer to the sequence start. +1 is\n\tthe first\
      \ residue from the sequence.\n\tNegative positions refer to the sequence end\
      \ (-1 is the last residue\n\tfrom the sequence).\n\nINPUT-OUTPUT FORMAT\n\t\
      Various sequence formats are supported:\n\t- IG\n\t- Fasta\n\t- Wconsensus\n\
      \t- raw\n\t- multi\n\tWhen the input contains several sequences in the same\
      \ file, the\n\tprograms extracts the fragment at the specified positions from\n\
      \teach of them.\n\nEXAMPLES\n\tsub-sequence -v -i mydata -o myresult -from -353\
      \ -to -397\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - install-ensembl-genome
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: install-ensembl-genome
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: "\e[1mdownload-ensembl-features\e[0m"
      position: 0
      name: package.
      optional: false
    - !Positional
      description: "This corresponds to the lastest release of Ensembl. Beware: this\n\
        release is not guaranteed to be compatible with RSAT, in case\nEnsembl would\
        \ change their file formats or locations."
      position: 0
      name: latest
      optional: false
    - !Positional
      description: "This task is executed by running \e[33minstall-organism\e[0m."
      position: 0
      name: analysis.
      optional: false
    - !Positional
      description: "\e[1m-dry\e[0m"
      position: 0
      name: incomplete.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    install-ensembl-genome\n\n\e[1mVERSION\e[0m\n\
      \    $program_version\n\n\e[1mDESCRIPTION\e[0m\n    Install genomes from ensembl\
      \ (<http://www.ensembl.org/>) to the local\n    RSAT instance. The installation\
      \ includes genomic sequence, annotations\n    (features) and (optionally) variations.\n\
      \n    The connection to ensembl is ensured by a combination of their Perl API\n\
      \    and their ftp site (some information can not be obtained directly from\n\
      \    the API, e.g. the taxonomy).\n\n\e[1mAUTHORS\e[0m\n    \e[33mJeremy Delerce\e\
      [0m (Master 2 thesis 2013)\n    \e[33mAlejandra Medina-Rivera\e[0m (amedina@lcg.unam.mx)\n\
      \    \e[33mJacques van Helden\e[0m (Jacques.van-Helden\\@univ-amu.fr)\n\n\e\
      [1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e[0m\n    \"install-ensembl-genome\
      \ [-release #] [-task #] [-o outputfile] [-v #]\n    [...]\"\n\n  \e[1mExample\e\
      [0m\n    \"install-ensembl-genome -v 1 -species Saccharomyces_cerevisiae\"\n\
      \n\e[1mOUTPUT FORMAT\e[0m\n    The program exports chromosome sequences and\
      \ genomic features.\n\n  \e[1mChromosome sequence format\e[0m\n    Chromosome\
      \ sequences are exported in raw format (sequences only, no\n    space, no carriage\
      \ return), which is indispensable in order to enable\n    direct access to any\
      \ piece of sequences on the hard drive, rather than\n    loading the whole chromosome\
      \ in memory.\n\n  \e[1mGenomic features\e[0m\n    Genomic features (genes, CDS,\
      \ mRNAs, ...) are exported in gft format\n    (the RSAT specification of genomic\
      \ features). For a description, of this\n    format and conversions from/to\
      \ other formats, type\n\n    \"convert-features -h\"\n\n  \e[1mVariation features\e\
      [0m\n    Variation features are exported in a tab-delimited format specific\
      \ to\n    RSAT. This format can be generated from files in classical formats\
      \ (VCF,\n    GVF) with the tool \e[33mconvert-variations\e[0m.\n\n    For a\
      \ description, of variation formats\n\n    \"download-ensembl-variations -h\"\
      \n\n    \"convert-variations -h\"\n\n\e[1mSEE ALSO\e[0m\n  \e[1mdownload-ensembl-genome\e\
      [0m\n    \e[33minstall-ensembl-genome\e[0m calls \e[33mdownload-ensembl-genome\e\
      [0m to download genome\n    sequences and install them in the appropriate data\
      \ directory of the RSAT\n    package.\n\n  \e[1mdownload-ensembl-features\e\
      [0m\n    \e[33minstall-ensembl-genome\e[0m calls \e[33mdownload-ensembl-features\e\
      [0m to download\n    genomic features from ensembl API and install them in the\
      \ RSAT data\n    directory.\n\n  \e[1mdownload-ensembl-variations\e[0m\n   \
      \ \e[33minstall-ensembl-genome\e[0m calls \e[33mdownload-ensembl-variations\e\
      [0m to download\n    variation features from ensembl ftp and install them in\
      \ the RSAT data\n    directory.\n\n\e[1mWISH LIST\e[0m\n\e[1mOPTIONS\e[0m\n\
      \    \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
      \ during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e\
      [1m-help\e[0m\n        Same as -h\n\n    \e[1m-available_species\e[0m\n    \
      \    Get available species on Ensembl for all available task\n\n    \e[1m-species\
      \ #\e[0m\n        Name of the species (organism).\n\n        This option can\
      \ be used iteratively to install multiple genomes.\n        Alternatively, a\
      \ file contianing a list of species names can be\n        entered with the option\
      \ \e[33m-species_file\e[0m.\n\n        Use the option \e[33m-available_species\e\
      [0m to print a list of available\n        species at Ensembl, or options \e\
      [33m-available_species -db\n        ensemblgenomes\e[0m to get the species available\
      \ at EnsemblGenomes\n        (extended Ensembl).\n\n    \e[1m-species_file #\e\
      [0m\n        File containing the list of species to install. The file must be\
      \ in\n        text format. The first word of each row (everything that precedes\
      \ a\n        space or tab) is considered as a species name. Further information\n\
      \        on the line is ignored.\n\n    \e[1m-release #\e[0m\n        The release\
      \ release of ensEMBL.\n\n        Supported releases: releases later than 70,\
      \ safe, latest. This\n        script was developed while Ensembl was at release\
      \ 72.\n\n        Default : \e[33msafe\e[0m\n\n        \e[33msafe\e[0m\n    \
      \        The file locations and/or formats of the Ensembl ftp\n            distribution\
      \ may change between two Ensembl release.\n\n            For this reason, we\
      \ defined the \"safe\" release, which\n            corresponds to the latest\
      \ release of ensembl which has been\n            checked to work with this script.\n\
      \n        latest\n            This corresponds to the lastest release of Ensembl.\
      \ Beware: this\n            release is not guaranteed to be compatible with\
      \ RSAT, in case\n            Ensembl would change their file formats or locations.\n\
      \n    \e[1m-assembly\e[0m\n        Choose a particular assembly for the configuration.\
      \ In principle\n        this option should not be used, since the assembly is\
      \ automatically\n        determined when the request is send to Ensembl.\n\n\
      \        This option can be convenient to enable the option \e[33m-task config\e\
      [0m when\n        the genome has been synchronized from another RSAT server.\n\
      \n    \e[1m-species_suffix\e[0m\n        Suffix to append to the full species\
      \ ID.\n\n        By default, the full species ID is composed by concatenating\
      \ the\n        Ensembl species and assembly. The option \e[33m-species_suffix\e\
      [0m allows to\n        specify a string (e.g. _ensembl76, _for_testing, ...)\
      \ that will be\n        appended to the full species ID.\n\n    \e[1m-task #\e\
      [0m\n        What you whant to install\n\n        Supported tasks : genome,\
      \ features, variations, config, install\n\n        \e[1m-task genome\e[0m\n\
      \            Download all genomic sequences from Ensembl. This task is\n   \
      \         executed by running \e[33mdownload-ensembl-genome\e[0m.\n\n      \
      \  \e[1m-task features\e[0m\n            Download all genomic features from\
      \ Ensembl. This task is\n            executed by running \e[33mdownload-ensembl-features\e\
      [0m.\n\n        \e[1m-task variations\e[0m\n            Download all genomic\
      \ variations from Ensembl. This task is\n            executed by running \e\
      [33mdownload-ensembl-variations\e[0m.\n\n        \e[1m-task config\e[0m\n  \
      \          Declare the organism to RSAT. This step is necessary for this\n \
      \           organism to become supported on the local RSAT installation.\n \
      \           This task is executed by running \e[33minstall-organism\e[0m.\n\n\
      \        \e[1m-task install\e[0m\n            Perform a series of installation\
      \ tasks in order to have the\n            organims fully supported in RSAT.\
      \ In particular, compute the\n            frequencies of oligonuleotides and\
      \ dyads in all upstream\n            sequences, in order to calibrate background\
      \ models for motif\n            analysis.\n\n            This task is executed\
      \ by running \e[33minstall-organism\e[0m.\n\n    \e[1m-db ensembl|ensemblgenomes\e\
      [0m\n        Default: Ensembl\n\n        Select the source database.\n\n   \
      \     \e[33mensembl\e[0m\n            The \"historical\" Ensembl database (<http://ensembl.org/>),\n\
      \            restricted to a series of genomes from model organisms (69\n  \
      \          supported species on Oct 30, 2014).\n\n        \e[33mensemblgenomes\e\
      [0m\n            The exended EnsemblGenomes database\n            (<http://ensemblgenomes.org/>),\
      \ which comprises repositories for\n            the following taxa: Bacteria\
      \ (actually includes Archaea), Fungi,\n            Metazoa, Plants, Protists.\n\
      \n            In Oct 2014, EnsemblGenomes supports >15,000 species.\n\n    \
      \    \e[33mensemblall\e[0m\n            Load both Ensembl and Ensembl Genomes.\n\
      \n    \e[1m-o outputfile\e[0m\n        If no output file is specified, the standard\
      \ output is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-only_api\e[0m\n        Only use API to download. This argument is\
      \ passed to\n        \e[33mdownload-ensembl-features\e[0m.\n\n    \e[1m-nodie\e\
      [0m\n        Do not die in case a sub-program returns an error.\n\n        The\
      \ option -nodie allows you to circumvent problems with specific\n        sub-tasks,\
      \ but this is not recommended because the results may be\n        incomplete.\n\
      \n    \e[1m-dry\e[0m\n        Dry run: print the commands without running them\
      \ (for testing and\n        debugging).\n\n    \e[1m-batch\e[0m\n        Run\
      \ the last installation tasks (\e[33minstall-organism\e[0m) in batch. This\n\
      \        option requires to dispose of a PC cluster, and to configure it\n \
      \       properly in the configuration file $RSAT/RSAT_config.props.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - compare-matrices
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: compare-matrices
      optional: false
    - !Positional
      description: pattern matching
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: PSSM
      optional: false
    - !Positional
      description: '[prefix].gml'
      position: 0
      name: column.
      optional: false
    - !Positional
      description: '[prefix_alignments_pairwise.tab]'
      position: 0
      name: graphviz.
      optional: false
    - !Positional
      description: "wr1 = w / w1\nwr2 = w / w2"
      position: 0
      name: matrices.
      optional: false
    - !Positional
      description: "\e[1mSum of Squared Distances (SSD)\e[0m"
      position: 0
      name: respectively.
      optional: false
    - !Positional
      description: "An alternative would be to use as normalizing factor the length\
        \ of the\nalignment (w) relative to the length of the shorter motif.\nNcor\
        \ = cor * w / min(w1,w2)\nThis however tends to favour matches between very\
        \ short motifs (4-5\nresidues) which cover only a fraction of the query motif."
      position: 0
      name: Note
      optional: false
    - !Positional
      description: "\e[1m-top1 X\e[0m"
      position: 0
      name: convert-background-model.
      optional: false
    - !Positional
      description: "This is the typical use of \e[33mcompare-matrices\e[0m: comparing\
        \ one or"
      position: 0
      name: file2.
      optional: false
    - !Positional
      description: "This mode is used by \e[33mcluster-matrices\e[0m in order to obtain\
        \ a table"
      position: 0
      name: pair.
      optional: false
    - !Positional
      description: Matching profiles are convenient for drawing the similarity
      position: 0
      name: matrices.
      optional: false
    - !Positional
      description: "Comparing motifs in a strand-insensitive way (-strand DR)\nDNA-binding\
        \ motifs are usually strand-insensitive. A motif may\nbe detected in one given\
        \ orientation by a motif-discovery\nalgorithm, but annotated in the reverse\
        \ complementary\norientation in a motif database. For DNA binding motifs,\
        \ we thus\nrecomment the DR option.\nOn the contrary, RNA-related signals\
        \ (termination,\npoly-adenylation, miRNA) are strand-sensitive, and should\
        \ be\ncompared in a single orientation (-strand D)."
      position: 0
      name: example
      optional: false
    - !Positional
      description: DNA signals can either be symmetrical (reverse complementary
      position: 0
      name: symmetry.
      optional: false
    - !Positional
      description: "\e[33mmatch_rank\e[0m"
      position: 0
      name: mode.
      optional: false
    - !Positional
      description: The graph is exported in GML (open with CytoScape or yet) and
      position: 0
      name: matrices.
      optional: false
    - !Positional
      description: z-score = (score - mean(score) ) / sd(score)
      position: 0
      name: matches.
      optional: false
    named:
    - !Flag
      description: ).
      synonyms:
      - -format2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ).
      synonyms:
      - -format1
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    compare-matrices\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Compare two collections of position-specific scoring\
      \ matrices (PSSM),\n    and return various similarity statistics + matrix alignments\
      \ (pairwise,\n    one-to-n).\n\n\e[1mAUTHORS\e[0m\n    Jacques van Helden <Jacques.van.Helden@ulb.ac.be>\n\
      \n\e[1mCATEGORY\e[0m\n    sequences\n    pattern matching\n    PSSM\n\n\e[1mUSAGE\e\
      [0m\n    compare-matrices -file1 inputfile1 -file2 inputfile2 [-o outputfile]\
      \ [-v\n    #] [...]\n\n\e[1mINPUT FORMATS\e[0m\n    The user has to specify\
      \ exactly input files (options \e[33m-file1\e[0m and \e[33m-file2\e[0m),\n \
      \   each containing one or several PSSMs. Each matrix of file one is\n    compared\
      \ with each matrix of file2.\n\n    Any PSSM format supported in RSAT (type\
      \ \e[33mconvert-matrix -h\e[0m for a\n    description).\n\n\e[1mOUTPUT FORMATS\e\
      [0m\n    By default, the output format is a tab-delimited file with one row\
      \ per\n    matrix comparison, and one column per statistics. Depending on the\n\
      \    requested output fields (option \e[33m-return\e[0m), \e[33mcompare-matrices\e\
      [0m can also\n    export a series of additional files.\n\n    [prefix].tab\n\
      \        Tab-delimited text file containing the primary result (comparison\n\
      \        score table): one column per comparison (match or profile position),\n\
      \        one row per field (score, matrix descriptor, ...).\n\n    [prefix].html\n\
      \        HTML file presenting the comparison table in a user-friendly way.\n\
      \        The clickable headers allow to re-order the table according to any\n\
      \        column.\n\n    [prefix].gml\n        Matrix comparison graph in GML\
      \ format, which can be open with\n        CitoScape or Yed.\n\n    [prefix].dot\n\
      \        Matrix comparison graph in dot format, which can be open with\n   \
      \     graphviz.\n\n    [prefix_alignments_pairwise.tab]\n        Tab-delimited\
      \ text file containing the shifted matrices resulting\n        from pairwise\
      \ alignments.\n\n    [prefix_alignments_pairwise.html]\n        HTML file presentig\
      \ the pairwise alignments in a user-friendly way:\n        motifs are presented\
      \ as sequence logos.\n\n    [prefix_alignments_1ton.tab]\n        Tab-delimited\
      \ text file containing the shifted matrices resulting\n        from 1-to-n alignments.\n\
      \n    [prefix_alignments_1ton.html]\n        HTML file presentig the 1-to-n\
      \ alignments in a user-friendly way:\n        motifs are presented as sequence\
      \ logos.\n\n\e[1mALGORITHM\e[0m\n    The program successively computes one or\
      \ several (dis)similiraty metrics\n    between each matrix of the first input\
      \ file and each matrix of the secnd\n    input file.\n\n    Since the matrices\
      \ are not supposed to be in phase, for each pair of\n    matrix, the program\
      \ tests all possible \e[33moffset\e[0m (shift) values between the\n    two matrices.\n\
      \n\e[1mMATCHING SCORES\e[0m\n  \e[1mSymbols used for the metrics\e[0m\n    In\
      \ the formula below, symbols are defined as follows\n\n    \e[33mm1, m2\e[0m\n\
      \        Two position-specific scoring matrices.\n\n    \e[33mw1,w2\e[0m\n \
      \       Number of columns of matrices m1 and m2, respectively.\n\n    Row number\
      \ \e[33mr\e[0m\n        Number of rows in each matrix, which correspond to the\
      \ number of\n        residues in the alphabet (A,C,G,T for DNA motifs).\n\n\
      \    Aligned length \e[33mw\e[0m\n        Number of aligned columns between\
      \ matrices m1 and m2 (depends on the\n        offset between the two matrices).\n\
      \n         w <= w1\n         w <= w2\n\n    Total length \e[33mW\e[0m\n    \
      \    Total length of the alignent between matrices m1 and m2.\n\n         W\
      \ = w1 + w2 - w\n\n    Relative lengths \e[33mWr, wr1, wr2\e[0m\n        A measure\
      \ of the mutual overlap between the aligned matrices.\n\n          Wr = w /\
      \ W\n\n        This actually corresponds to the Jaccard coefficient (intersection\
      \ /\n        union), applied to the alignment lengths.\n\n        The program\
      \ also computes the width relative to each of the aligned\n        matrices.\n\
      \n          wr1 = w / w1\n          wr2 = w / w2\n\n    \e[33ms1, s2\e[0m\n\
      \        Number of sites in matrices m1 and m2, respectively.\n\n    \e[33mn\e\
      [0m   Number of cells in the aligned portion of the matrices.\n\n         n\
      \ = w * r\n\n    \e[33mi\e[0m   Index of a row of the aligned PSSM (corresponds\
      \ to a residue).\n\n    \e[33mj\e[0m   Index of a column of the aligned PSSM\
      \ (corresponds to an aligned\n        position).\n\n    \e[33mf1{i,j}\e[0m\n\
      \        Frequency of \e[33mith\e[0m residue in the \e[33mjth\e[0m column of\
      \ the aligned subset of\n        the first matrix (taking the offset into account).\n\
      \n    \e[33mf2{i,j}\e[0m\n        Frequency of \e[33mith\e[0m residue in the\
      \ \e[33mjth\e[0m column of the aligned subset of\n        the second matrix\
      \ (taking the offset into account).\n\n    \e[33mf1m, f2m\e[0m\n        Mean\
      \ frequency computed over all cells of matrices m1 and m2,\n        respectively.\n\
      \n  \e[1mSum of Squared Distances (SSD)\e[0m\n    BEWARE: this metrics is the\
      \ real SSD, i.e. the simple sum of squared\n    distance. It is a distance metric,\
      \ in contrast with the \"SSD\" defined in\n    STAMP, which is converted to\
      \ a similarity metrics (see\n    Sandelin-Wasserman below).\n\n     SSD = SUM{i=1->r}\
      \ SUM{j=1->w} [(f1{i,j} - f2{i,j})^2)]\n\n  \e[1mSandelin-Wasserman similarity\
      \ (SW)\e[0m\n    Also implemented in STAMP (under the name SSD) and TOMTOM (under\
      \ the\n    name Sandelin-Wasserman). This is a distance to similarity conversion\
      \ of\n    the SSD. The conversion is ensured by substracting each squared distance\n\
      \    to a constant 2 (the max distance between two columns containing\n    relative\
      \ frequencies, i.e. one residue has frequency 1 in one column,\n    and another\
      \ residue has ffrequency 1 in the other column).\n\n     SW = SUM{i=1->r} SUM{j=1->w}\
      \ [2 - (f1{i,j} - f2{i,j})^2) ]\n\n    Source: Sandelin A & Wasserman WW (2004)\
      \ J Mol Biol 338:207-215.\n\n  \e[1mNormalized Sandelin-Wasserman similarity\
      \ (NSW)\e[0m\n    Sandelin-Wasserman (SW) similarity normalized by the number\
      \ of aligned\n    columns (\e[33mw\e[0m).\n\n     NSW = SW / (2*w)\n\n    NSW\
      \ takes a value comprized between 0 (not a single corresponding\n    residue)\
      \ and 1 (matrices are identical for all the aligned columns).\n\n  \e[1mEuclidian\
      \ distance (dEucl)\e[0m\n     dEucl = sqrt( SUM{i=1->r} SUM{j=1->w} (f1{i,j}\
      \ - f2{i,j})^2)\n\n    Since relative frequencies can take values from 0 to\
      \ 1, the Euclidian\n    distance can take values from 0 to sqrt(2)*w.\n\n  \e\
      [1mNormalized Euclidian distance (NdEucl)\e[0m\n    Euclidian distance normalized\
      \ by the number of aligned columns (\e[33mw\e[0m).\n\n     NdEucl = dEucl /\
      \ w\n\n    NdEucl can take values from 0 to sqrt(2).\n\n    Note that this differs\
      \ from the definition provided in Pape et al.\n    (2008).\n\n  \e[1mNormalized\
      \ Euclidian similarity (NsEucl)\e[0m\n    A similarity metrics derived from\
      \ the normalized Euclidian distance.\n\n     NsEucl = (Max(NdEucl) - NdEucl)\
      \ / Max(NdEucl)\n            = (sqrt(2) - NdEucl) / sqrt(2)\n\n    where \e\
      [33mMax(NdEucl)\e[0m=sqrt(2) is the maximal possible Euclidian distance for\n\
      \    the current pair of matrices. The Normalized Euclidian similarity can\n\
      \    vary from 0 (idential matrices) to 1 (matrices with a single residue per\n\
      \    column, and those residues systematically differ between the two\n    matrices).\n\
      \n  \e[1mKullback-Leibler distance (dKL)\e[0m\n    As defined in Aerts et al.\
      \ (2003). Also called \e[1mMutual Information\e[0m.\n\n     dKL = 1/(2w) * SUM{i=1->r}\
      \ SUM{j=1->w} (\n                       f1{i,j}*log(f1{i,j}/f2{i,j})\n     \
      \                  + f2{i,j}*log(f2{i,j}/f1{i,j}))\n\n    Note that the KL distance\
      \ is problematic for matrices containing zero\n    values: for example, if f1(i,k)=0\
      \ and f2(i,j)=1, we have : KL(i,j) =\n    (0*log(0) + 1*log(1/0)) = 0 + log(Inf)\
      \ = Inf\n\n    One can circumvent this problem by using pseudo-count corrected\
      \ matrices\n    (f'(i,j)), but then the KL distance is strongly dependent on\
      \ the\n    somewhat arbitrary choice of the pseudo-count value.\n\n  \e[1mCovariance\
      \ (cov)\e[0m\n     cov = 1/(r*w) * SUM{i=1->r} SUM{j=1->w} (f1{i,j} - f1m) *\
      \ (f2{i,j} - f2m)\n\n    Beware : this is the classical covariance defined in\
      \ statistical\n    textbooks. It has nothing to do with the \"natural covariance\"\
      \ of Pape\n    (which still needs to be implemented here). What we compute here\
      \ is\n    simply the covariance between the counts in the aligned cells of the\n\
      \    respective matrices.\n\n  \e[1mCoefficient of correlation (cor)\e[0m\n\
      \     v1 = 1/n * SUM{i=1->r} SUM{j=1->w} (f1{i,j} - f1m)^2\n     v2 = 1/n *\
      \ SUM{i=1->r} SUM{j=1->w} (f2{i,j} - f2m)^2\n     cor = cov/ sqrt(v1*v2)\n\n\
      \  \e[1mNormalized correlation (Ncor, Ncor1, Ncor2, NcorS)\e[0m\n    The normalized\
      \ correlation prevents matches covering only a small\n    fraction of the matrix\
      \ (e.g. matches between the last column of the\n    query matrix and the first\
      \ column of the reference matrix, or matches of\n    a very small motif against\
      \ a large one).\n\n    The normalization factor is the relative length (Wr),\
      \ i.e. the number of\n    aligned columns divided by the total columns of the\
      \ alignment.\n\n    Ncor = cor * Wr\n\n    This correction is particularly important\
      \ to avoid selecting spurious\n    alignments between short fragments of the\
      \ flanks of the matrices (e.g.\n    single-column alignments). For this reasons,\
      \ \e[33mNcor\e[0m generally gives a\n    better estimation of motif similarity\
      \ than \e[33mcor\e[0m, and we recommend it as\n    similarity score.\n\n   \
      \ Imposing a too stringent lower threshold on Ncor may however reduce the\n\
      \    sensitivity, and in particular prevent from detecting matches between\n\
      \    half-motifs (e.g. in the case of dimeric transcription factor\n    recognizing\
      \ composite motifs).\n\n   Note\n    An alternative would be to use as normalizing\
      \ factor the length of the\n    alignment (w) relative to the length of the\
      \ shorter motif.\n\n     Ncor = cor * w / min(w1,w2)\n\n    This however tends\
      \ to favour matches between very short motifs (4-5\n    residues) which cover\
      \ only a fraction of the query motif.\n\n   Ncor1, Ncor2, NcorS\n    In addition\
      \ to Ncor, we define separate normalized correlations relative\n    to w1 and\
      \ w2 resp.\n\n    Ncor1 = cor * w / w1\n    Ncor2 = cor * w / w2\n    NcorS\
      \ = cor * w / min(w1, w2)\n        Normalize the correlation by the alignemnt\
      \ width (w) relative to the\n        width of the smallest of the two aligned\
      \ matrices. This may return\n        more suitable results when matrices of\
      \ different sizes are aligned\n        (e.g. small motif included in a composite\
      \ motif), but sometimes the\n        sub-motifs will score better than the full\
      \ motifs.\n\n  \e[1mCorrelation of the information content (Icor)\e[0m\n   \
      \ Pearson's correlation computed on the information content matrices (I1,\n\
      \    I2) rather than on the frequencies.\n\n     Icov = 1/n * SUM{i=1->r} SUM{j=1->w}\
      \ (I1{i,j} - f1m) * (I2{i,j} - f2m)\n     Iv1 = 1/n * SUM{i=1->r} SUM{j=1->w}\
      \ (I1{i,j} - f1m)^2\n     Iv2 = 1/n * SUM{i=1->r} SUM{j=1->w} (I2{i,j} - f2m)^2\n\
      \     cor = Icov/ sqrt(Iv1*Iv2)\n\n    The \e[33mIcor\e[0m score fixes a weakness\
      \ of the \e[33mcor\e[0m score and all other other\n    metrics above, which\
      \ only take into account the residue frequencies\n    whilst ignoring the background\
      \ frequencies.\n\n    A typical manifestation of this problem is that the \e\
      [33mcor\e[0m score\n    occasionally returns alignements between non-informative\
      \ pieces of the\n    matrices , which appear flat on the aligned logos. The\
      \ reason why\n    uninformative columns may have a good correlation is that,\
      \ if both\n    matrices have the same compositional bias (for example 30%A,\
      \ 20%C, 20%G\n    and 30%T), they will be correlated. Consequently, the columns\
      \ reflecting\n    the background will contribute to increase the correlation\
      \ coefficient.\n\n    The information content corrects this bias by relativizing\
      \ the matrix\n    frequencies with respect to the background residue probaiblities.\n\
      \n     I{i,j} = f{i,j} log (f{i,j}/p{j})\n\n    where \e[33mp{j}\e[0m is the\
      \ prior probability of residue \e[33mj\e[0m.\n\n\e[1mREFERENCES\e[0m\n    Distances\
      \ between PSSMs have been treated in many ways. The most recent\n    and relevant\
      \ articles are cited hereafter.\n\n    Aerts, S., Van Loo, P., Thijs, G., Moreau,\
      \ Y. and De Moor, B. (2003).\n    Computational detection of cis -regulatory\
      \ modules. Bioinformatics 19\n    Suppl 2, II5-II14.\n    Gupta, S., Stamatoyannopoulos,\
      \ J. A., Bailey, T. L. and Noble, W. S.\n    (2007). Quantifying similarity\
      \ between motifs. Genome Biol 8, R24.\n    Pape, U.J., Rahman, S., and Vingron,\
      \ M. (2008). Natural similarity\n    measures between position frequency matrices\
      \ with an application to\n    clustering. Bioinformatics 24 (3) pp. 350-7.\n\
      \    Mahony, S. and Benos, P. V. (2007). STAMP: a web tool for exploring\n \
      \   DNA-binding motif similarities. Nucleic Acids Res 35, W253-8.\n    Sandelin,\
      \ A. and Wasserman, W. W. (2004). Constrained binding site\n    diversity within\
      \ families of transcription factors enhances pattern\n    discovery bioinformatics.\
      \ J Mol Biol 338, 207-15.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n       \
      \ Level of verbosity (detail in the warning messages during execution)\n\n \
      \   \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n       \
      \ Same as -h\n\n    \e[1m-quick\e[0m\n        Delegates comparison to the C\
      \ program compare-matrices-quick\n        Evaluate if the quick mode is compatible\
      \ with the selected output\n        parameters, otherwise, run in the slower\
      \ mode.\n\n        Supported metrics: cor,Ncor,Ncor1,Ncor2\n\n    \e[1m-file1\
      \ matrix_file1\e[0m\n        The first input file containing one or several\
      \ matrices.\n\n    \e[1m-file2 matrix_file2\e[0m\n        The second input file\
      \ containing one or several matrices.\n\n    \e[1m-file single_matrix_file\e\
      [0m\n        Use a single matrix file as input. Each matrix of this file is\n\
      \        compared to each other. This is equivalent to: -file1\n        single_matrix_file\
      \ -file2 single_matrix_file\n\n    \e[1m-mlist1 matrix list\e[0m\n        The\
      \ fisrt input file contaning a list of matrix files (given as\n        paths)\n\
      \n    \e[1m-mlist2 matrix list\e[0m\n        The second input file contaning\
      \ a list of matrix files (given as\n        paths) The reverse complement is\
      \ computed for this set of matrices.\n\n    \e[1m-format1 matrix_format1\e[0m\n\
      \        Specify the matrix format for the first input file only (requires\n\
      \        -format2).\n\n    \e[1m-format2 matrix_format2\e[0m\n        Specify\
      \ the matrix format for the second input file only (requires\n        -format1).\n\
      \n    \e[1m-format matrix_format\e[0m\n        Specify the matrix format for\
      \ both input files (alternatively, see\n        options -format1 and -format2).\n\
      \n    \e[1m-bgfile background_file\e[0m\n        Background model file.\n\n\
      \    \e[1m-bg_format format\e[0m\n        Format for the background model file.\n\
      \n        Supported formats: all the input formats supported by\n        convert-background-model.\n\
      \n    \e[1m-top1 X\e[0m\n        Only analyze the first X motifs of the first\
      \ file. This options is\n        convenient for quick testing before starting\
      \ the full analysis.\n\n        It can also be combined with the option \e[33m-skip1\e\
      [0m to restrict the\n        analysis to a subset of a large matrix library.\n\
      \n    \e[1m-top2 X\e[0m\n        Only analyze the first X motifs of the second\
      \ file. This options is\n        convenient for quick testing before starting\
      \ the full analysis.\n\n        It can also be combined with the option \e[33m-skip2\e\
      [0m to restrict the\n        analysis to a subset of a large matrix library.\n\
      \n    \e[1m-top X\e[0m\n        Only analyze the first X motifs of the input\
      \ file(s).\n\n        This combines the effect of -top1 and -top2.\n\n    \e\
      [1m-skip1 X\e[0m\n        Skip the first X motifs of the first input matrix\
      \ file. This options\n        can be combined with the option \e[33m-top1\e\
      [0m in order to restrict the\n        analysis to a given subset of a large\
      \ library.\n\n    \e[1m-skip2 X\e[0m\n        Skip the first X motifs of the\
      \ second input matrix file. This\n        options can be combined with the option\
      \ \e[33m-top2\e[0m in order to restrict\n        the analysis to a given subset\
      \ of a large library.\n\n    \e[1m-skip X\e[0m\n        Skip the first X motifs\
      \ of the input file(s).\n\n        This combines the effect of -skip1 and -skip2.\n\
      \n    \e[1m-o prefix\e[0m\n        Prefix for the output files. The output prefix\
      \ is mandatory for some\n        return fields (alignments, graphs, ...).\n\n\
      \        This prefix will be appended with a series of suffixes for the\n  \
      \      different output types (see section OUTPUT FORMATS above for the\n  \
      \      detail).\n\n    \e[1m-nobuf\e[0m\n        No buffering.\n\n        By\
      \ default, the Perl language holds the output in memory (buffering)\n      \
      \  and writes output files piece by piece rather than line by line.\n\n    \
      \    This creates a particlar problem when \e[33mcompare-matrices\e[0m is\n\
      \        encapsulated in another program (e.g. \e[33mpeak-footprints\e[0m),\
      \ beacause the\n        script occasionally exits while the bufer is still being\
      \ printed\n        out, and the output file is thus not yet ready for further\
      \ analysis.\n\n        The option -nobuf turns off buffering. The printing out\
      \ is probably\n        slower (the output stream is printed at each match),\
      \ so we maintain\n        buffering by default.\n\n    \e[1m-mode matches |\
      \ scores | profiles | scan \e[0m\n\n        \e[33m-mode matches\e[0m (default)\n\
      \            Return matches between any matrix of the file1 and any matrix of\n\
      \            file2.\n\n            This is the typical use of \e[33mcompare-matrices\e\
      [0m: comparing one or\n            several query motifs (e.g. obtained from\
      \ motif discovery) with a\n            collection of reference motifs (e.f.\
      \ a database of\n            experimentally characterized transcription factor\
      \ binding\n            motifs, such as JASPAR, TRANSFAC, RegulonDB, ...).\n\n\
      \            For a given pair of matrices (one from file1 and one from\n   \
      \         file2), the program tests all possible offsets, and measures one\n\
      \            or several matching scores (see section \"(Dis)similarity\n   \
      \         metrics\" above). The program only returns the score of the best\n\
      \            alignemnt between the two matrices. The \"best\" alignement is\
      \ the\n            combination of offset and strand (with the option -strand\
      \ DR)\n            that maximizes the default score (Ncor). Alternative scores\
      \ can\n            be used as optimality criteria with the option -sort.\n\n\
      \        \e[33m-mode scores\e[0m\n            Return scores of the best-matching\
      \ alignment between each matrix\n            pair.\n\n            This mode\
      \ is used by \e[33mcluster-matrices\e[0m in order to obtain a table\n      \
      \      with pairwise comparison scores between each pair of input\n        \
      \    matrices. Since the hierarchical clustering requires a table\n        \
      \    with all scores defined, the score mode is incompatible with the\n    \
      \        options -uth and -lth.\n\n        \e[33m-mode profiles\e[0m\n     \
      \       Return a table with one row for each possible alignment offset\n   \
      \         between two matrices, and various columns indicating the\n       \
      \     matching parameters (offset, strand, aligned width,...), the\n       \
      \     matching scores, and the consensus of the aligned columns of the\n   \
      \         matrices.\n\n            Matching profiles are convenient for drawing\
      \ the similarity\n            profiles, or for analyzing the correlations between\
      \ various\n            similarity metrics, but they are too verbosy for the\
      \ typical use\n            of \e[33mcompare-matrices\e[0m (detect matches between\
      \ a query matrix and a\n            database of reference matrices). The formats\
      \ \"matches\" and\n            \"table\" are more convenient for basic use.\n\
      \n        \e[33m-mode scan\e[0m\n            Scan \e[33mreference matrices\e\
      [0m with \e[33mquery matrices\e[0m in order to identify\n            matching\
      \ positons. This mode was designed to identify regulatory\n            motifs\
      \ in phylogenetically conserved blocks resulting from\n            genome alignments\
      \ (e.g. the multi-alignment files from UCSC).\n            Multiple alignments\
      \ can be converted to position-specific\n            matrices (conserved blocks),\
      \ which can be used as reference\n            matrices to be scanned with transcription\
      \ factor binding motifs\n            (query matrices).\n\n    \e[1m-distinct\e\
      [0m\n        Skip comparison between a matrix and itself.\n\n        This option\
      \ is useful when the program is sused to compare all\n        matrices of a\
      \ given file to all matrices of the same file, to avoid\n        comparing each\
      \ matrix to itself.\n\n        Beware: the criterion for considering two matrices\
      \ identical is that\n        they have the same identifier. If two matrices\
      \ have exactly the same\n        content (in terms of occurrences per position)\
      \ but different\n        identifiers, they will be compared.\n\n    \e[1m-strand\
      \ D | R | DR\e[0m\n        Perform matrix comparisons in direct (D) reverse\
      \ complementary (R)\n        or both orientations (DR, default option).\n\n\
      \        When the R or DR options are activated, all matrices of the second\n\
      \        matrix file are converted to the reverse complementary matrix.\n\n\
      \        This option is useful to answer very particular questions, for\n  \
      \      example\n\n        Comparing motifs in a strand-insensitive way (-strand\
      \ DR)\n            DNA-binding motifs are usually strand-insensitive. A motif\
      \ may\n            be detected in one given orientation by a motif-discovery\n\
      \            algorithm, but annotated in the reverse complementary\n       \
      \     orientation in a motif database. For DNA binding motifs, we thus\n   \
      \         recomment the DR option.\n\n            On the contrary, RNA-related\
      \ signals (termination,\n            poly-adenylation, miRNA) are strand-sensitive,\
      \ and should be\n            compared in a single orientation (-strand D).\n\
      \n        Detecting reverse complementary palindromic motifs\n            An\
      \ example of reverse complementary palindromic motif is\n            tCAGswwsGTGa.\
      \ When a motif is reverse complementary palindromic,\n            the matrix\
      \ is correlated to its own reverse complement.\n\n            \e[33mRemark about\
      \ a frequent misconception of biological\n            palindromes\e[0m\n\n \
      \           Reverse complementary palindroms are frequent in DNA signals\n \
      \           (e.g. transcription factor binding sites, restriction sites,\n \
      \           ...) because they correspond to a rotational symmetry in the 3D\n\
      \            structure. Such symmetrical motifs are often characteristic of\n\
      \            sites recognized by homodimeric complexes.\n\n            By contrast,\
      \ simple string-based palindromes (e.g. CAGTTGAC) do\n            absolutely\
      \ not correspond to any symmetry on the biochemical\n            point of view,\
      \ because the 3D structure of the corresponding\n            double helix is\
      \ not symmetrical. The apparent symmetry is an\n            artifact of the\
      \ string-based representation, but the\n            corresponding molecule has\
      \ neither rotational nor translational\n            symmetry.\n\n          \
      \  DNA signals can either be symmetrical (reverse complementary\n          \
      \  palindromes, tandem repeats) or asymmetrical.\n\n    \e[1m-matrix_id #\e\
      [0m\n        Obsolete option for returning matrix names, Replaced by -return\n\
      \        matrix_name. Maintained for backward compatibility.\n\n    \e[1m-return\
      \ return_fields\e[0m\n        List of fields to return (only valid for the formats\
      \ \"profiles\" and\n        \"matches\").\n\n        Supported return fields:\n\
      \n        \e[33moffset\e[0m\n            Offset (shift) between the two compared\
      \ matrices.\n\n        \e[33mcor\e[0m Pearsons coefficient of correlatiojn.\n\
      \n        \e[33mNcor\e[0m\n            Normalized correlation (default sorting\
      \ criterion for the\n            matching mode).\n\n        \e[33mNcor1\e[0m\n\
      \            Normalized correlation relative to w1.\n\n              NcorS =\
      \ cor * w / w1\n\n        \e[33mNcor2\e[0m\n            Normalized correlation\
      \ relative to w2.\n\n              NcorS = cor * w / w2\n\n        \e[33mNcorS\e\
      [0m\n            Normalized correlation relative to the smallest of the two\n\
      \            aligned matrices:\n\n              NcorS = cor * w / min(w1, w2)\n\
      \n        \e[33mcov\e[0m Covariance.\n\n        \e[33mSSD\e[0m Sum of squared\
      \ distances.\n\n        \e[33mNSW\e[0m Normalized Sandelin-Wasserman similarity.\n\
      \n        \e[33mSW\e[0m  Sandelin-Wasserman similarity.\n\n        \e[33mdEucl\e\
      [0m\n            Euclidian distance\n\n        \e[33mNdEucl\e[0m\n         \
      \   Normalized Euclidian distance.\n\n        \e[33mNsEucl\e[0m\n          \
      \  Normalized Euclidian similarity.\n\n        \e[33mdKL\e[0m Kullback-Leibler\
      \ distance\n\n        \e[33mmatrix_number\e[0m\n            Number of the matrices\
      \ in the input files\n\n        \e[33mmatrix_id\e[0m\n            Identifiers\
      \ of the matrices\n\n        \e[33mmatrix_name\e[0m\n            Names of the\
      \ matrices\n\n        \e[33mmatrix_label\e[0m\n            Label of the matrices.\
      \ The label is made of a concatenation of\n            user-specificed fields\
      \ (using the option \e[33m-labels\e[0m).\n\n        \e[33mmatrix_ac\e[0m\n \
      \           Accession number of the matrices (TRANSFAC format makes a\n    \
      \        distinction between IDs and accession numbers).\n\n        \e[33mwidth\e\
      [0m\n            Width of the matrices and the alignment\n\n        \e[33mstrand\e\
      [0m\n            Direct (D) or Reverse complementary (R) comparison\n\n    \
      \    \e[33moffset\e[0m\n            Offset between the positions of the first\
      \ and second matrix\n\n        \e[33mpos\e[0m Relative positions the aligned\
      \ matrices (start, end, strand,\n            width)\n\n        \e[33mconsensus\e\
      [0m\n            Aligned consensus. The residues of the consensus corresponding\n\
      \            to aligned columns are displaye, non-aligned columns are\n    \
      \        replaced by dots.\n\n        \e[33moffset_rank\e[0m\n            During\
      \ pairwise alignment, scores are computed for each offset\n            and offsets\
      \ are sorted according to the sorting criterion. The\n            offset_rank\
      \ indicates the rank of an offset in this sorted list.\n            This is\
      \ a \"within-alignment\" rank, which is useful in profile\n            mode.\n\
      \n        \e[33mmatch_rank\e[0m\n            In matching mode, ranks can be\
      \ computed for all the selected\n            metrics, and a mean rank is computed.\n\
      \n        \e[33mgraph\e[0m\n            Return a matrix comparison graph where\
      \ nodes correspond to\n            matrices, and edges represent similarities\
      \ between pairs of\n            matrices.\n\n            The graph is exported\
      \ in GML (open with CytoScape or yet) and\n            dot (graphiviz) format.\n\
      \n            An advantage if the GML and dot formats is that they include\n\
      \            disconnected nodes, in contrast with the tab-delimited matrix\n\
      \            comparison table.\n\n        \e[33malignments_pairwise\e[0m\n \
      \           Shifted matrices resulting from the pairwise alignments.\n\n   \
      \     \e[33malignments_1ton\e[0m\n            Shifted matrices resulting from\
      \ the 1-to-N alignments.\n\n        \e[33malignments\e[0m\n            Shifted\
      \ matrices resulting from the alignments (pairwise and\n            1-to-N).\n\
      \n        \e[33mlogos\e[0m\n            Draw logos of each input matrix.\n\n\
      \            These logos are independent from the (shifted) logos of the\n \
      \           aligned matrices, returned with the options \e[33m-return\n    \
      \        alignments_pairwise\e[0m and \e[33m-return alignments_1ton\e[0m.\n\n\
      \        \e[33mmatrix_desc\e[0m\n            A tab-delimited file contanin a\
      \ description of the input\n            matrices, wich one row per matrix, and\
      \ one column per attribute.\n\n        \e[33mall\e[0m All supported output fields,\
      \ including all metrics.\n\n    \e[1m-labels\e[0m\n        Attributes to inclute\
      \ in the matrix labels of the description table.\n\n        \e[1mSupported labels\e\
      [0m\n\n        (name, consensus, id)\n\n        The order of the fields is taken\
      \ into consideration.\n\n        Example: -labels id,name,consensus wll give\
      \ a different result from\n        -labels id,consensus,name\n\n    \e[1m-sort\
      \ sort_field\e[0m\n        Field to sort the results. The sorting direction\
      \ depends on the\n        metric: ascending for dissimilarity metrics, decreasing\
      \ for\n        similarity metrics.\n\n        Supported sort fields:\n\n   \
      \     \e[33moffset\e[0m, ascending (default sorting criterion for the profile\n\
      \        mode)\n        \e[33mNcor\e[0m, decreasing (default sorting criterion\
      \ for the matching\n        mode)\n        \e[33mNcor1\e[0m, decreasing\n  \
      \      \e[33mNcor2\e[0m, decreasing\n        \e[33mNcorS\e[0m, decreasing\n\
      \        \e[33mcor\e[0m, decreasing\n        \e[33mcov\e[0m, decreasing\n  \
      \      \e[33mSSD\e[0m, ascending\n        \e[33mSW\e[0m, decreasing\n      \
      \  \e[33mNSW\e[0m, decreasing\n        \e[33mdEucl\e[0m, ascending\n       \
      \ \e[33mNdEucl\e[0m, ascending\n        \e[33mNsEucl\e[0m, decreasing\n    \
      \    \e[33mdKL\e[0m, ascending\n\n    \e[1m-lth param lower_threshold\e[0m\n\
      \    \e[1m-uth param upper_threshold\e[0m\n        Threshold on some parameter\
      \ (-lth: lower, -uth: upper threshold).\n\n        Supported threshold fields\
      \ : rank, dEucl, cor, cov, ali_len, offset\n\n\e[1mSEE ALSO\e[0m\n    \e[1mconvert-matrix\e\
      [0m\n    \e[1mmatrix-scan\e[0m\n\n\e[1mWISH LIST\e[0m\n    \e[1mz-scores\e[0m\n\
      \        All the metrics defined above can be converted into z-scores, by\n\
      \        computing the mean and standard deviation of the score for all the\n\
      \        matches.\n\n         z-score = (score - mean(score) ) / sd(score)\n\
      \n    \e[1mAdditional metrics\e[0m\n\n        \e[33mMutual information\e[0m\n\
      \            We should check if this fixes the problems of 0 values that we\n\
      \            have with the KL distance.\n\n        \e[33m\"natural covariance\"\
      \e[0m\n            Pape, U. J., Rahmann, S. and Vingron, M. (2008). Natural\n\
      \            similarity measures between position frequency matrices with an\n\
      \            application to clustering. Bioinformatics 24, 350-7.\n\n      \
      \      This metrics measures the covariance between hits of two\n          \
      \  matrices above a given threshold for each of them.\n\n        \e[33mchi2\
      \ P-value\e[0m\n            Note that a condition of applicability of the chi2\
      \ P-value is\n            that the expected value should be >= 5 for each cell\
      \ of the\n            matrix. This condition is usually not fulfilled for the\
      \ PSSM we\n            use for motif scanning.\n\n            The chi2 distance\
      \ was proposed in 2 articles:\n\n            1. Kielbasa,S.M., Gonze,D. and\
      \ Herzel,H. (2005) Measuring\n            similarities between transcription\
      \ factor binding sites. BMC\n            Bioinformatics, 6, 237.\n\n       \
      \     2. Schones,D.E., Sumazin,P. and Zhang,M.Q. (2005) Similarity of\n    \
      \        position frequency matrices for transcription factor binding\n    \
      \        sites. Bioinformatics, 21, 307-313.\n\n        Average Log Likelihood\
      \ Ratio (ALLR)\n             Source: Wang T & Stormo GD (2003) Bioinformatics\
      \ 19:2369-2380\n             Also implemented in STAMP.\n\n    \e[1m-pseudo\e\
      [0m\n        Pseudo-counts to be added to all matrices.\n\n    \e[1m-comparison_mode\
      \ table | consensus\e[0m\n\n        \e[33m-return clusters\e[0m\n          \
      \  Cluster motifs (only valid with a single input file).\n\n        \e[33m-return\
      \ crosstable field\e[0m\n            Export a table with one row per matrix\
      \ of the file 1, one column\n            per matrix of file 2, where each cell\
      \ indicates the value of the\n            selected field for the corresponding\
      \ pair of matrices.\n\n        \e[33m-return graph\e[0m\n            Export\
      \ a graph where nodes correspond to input matrices, and\n            edges indicate\
      \ similarities between them.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - retrieve-ensembl-seq
    positional:
    - !Positional
      description: sequences
      position: 0
      name: genomics
      optional: false
    named:
    - !Flag
      description: "underscore between words (eg 'homo_sapiens')\nIf this option is\
        \ not used, the option -dbname must be used\ninstead.\n(type 'supported-organisms\
        \ | grep EnsEMBL' to obtain the list of supported\norganisms)"
      synonyms:
      - -org
      args: !SimpleFlagArg
        name: organism
      optional: true
    - !Flag
      description: address of ensembl database server (default is EBI server)
      synonyms:
      - -ensemblhost
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "of EnsEMBL database\n(alternative to organism)"
      synonyms:
      - -dbname
      args: !SimpleFlagArg
        name: name
      optional: true
    - !Flag
      description: 'version of ensembl database (example: 47)'
      synonyms:
      - -dbversion
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Feature type.\nSupported: cds,exon,gene,intron,mrna,transcript,utr\n\
        Defaut: mrna"
      synonyms:
      - -feattype
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "sequence type\nCurrently supported sequence types\nupstream (default)\n\
        downstream\nfeature"
      synonyms:
      - -type
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Type(s) of UTR (untranslated region) to return.\nSupported: all\
        \ | 5prime | 3prime"
      synonyms:
      - -utr
      args: !SimpleFlagArg
        name: utr_type
      optional: true
    - !Flag
      description: "The query should be an EnsEMBL gene identifier (eg 'ENSG00000177799').\n\
        Multiple queries can be entered by reiteratively using the -q\noption."
      synonyms:
      - -q
      args: !SimpleFlagArg
        name: query
      optional: true
    - !Flag
      description: "query file. The first word of each line is taken as a query.\n\
        This option is incompatible with -q."
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: return all genomic upstream/downstream regions
      synonyms:
      - -all
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: name of the output file
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#1 -to #2\nwhere #1 and #2 are numbers. #2 should be higher than\
        \ #1.\nlimits of the region to extract, relative to feattype start or end\n\
        (=position 0). Use negative values for upstream sequence.\nexample: -from\
        \ -800 -to -1\nwill extract the 800 bp upstream the feattype start or end.\n\
        (this is the default"
      synonyms:
      - -from
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "the upstream/downstream sequence can only contain non-coding sequence.\n\
        i.e. the -from values is modified if a predicted orf\nis encountered within\
        \ its range.\nThe weaknesses of using this option are that\n- all predicted\
        \ orf do not correspond to real orf,\n- there is no a priori reason to exclude\
        \ a regulatory site\nwhich would overlap the upstream coding sequence."
      synonyms:
      - -noorf
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: upstream/downstream sequence can only contain non-transcribed sequence.
      synonyms:
      - -nogene
      args: !SimpleFlagArg
        name: the
      optional: true
    - !Flag
      description: all coding sequence is replaced by N in the retrieved sequence
      synonyms:
      - -maskcoding
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use the repeat masked version of the genome.  Attention :\nrepeated\
        \ regions are annotated for some genomes only."
      synonyms:
      - -rm
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Get sequences for all transcripts of genes.\nUse -uniqseqs if\
        \ you do motif discovery afterwards"
      synonyms:
      - -alltranscripts
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: With -alltranscripts, returns only non-redondant sequences
      synonyms:
      - -uniqseqs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: With feattype intron, get only first intron sequence
      synonyms:
      - -firstintron
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: With feattype exon, get only non-coding (part of) exons
      synonyms:
      - -noncoding
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Chromosome name or number (to use with -left and -right)
      synonyms:
      - -chrom
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Left limit of sequence to retrieve
      synonyms:
      - -left
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Right limit of sequence to retrieve
      synonyms:
      - -right
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'of sequence to retrieve when using -left and -right. Values: 1,
        -1'
      synonyms:
      - -strand
      args: !SimpleFlagArg
        name: Strand
      optional: true
    - !Flag
      description: file
      synonyms:
      - -ftfile
      args: !SimpleFlagArg
        name: Feature
      optional: true
    - !Flag
      description: 'Feature file format. Supported: ft, gft'
      synonyms:
      - -ftfileformat
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Retrieve homologous sequences from EnsEMBL Compara databases
      synonyms:
      - -ortho
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Filter on homology type. (example: ortholog, ortholog_one2one)'
      synonyms:
      - -ortho_type
      args: !SimpleFlagArg
        name: Type
      optional: true
    - !Flag
      description: "name\nPrints homology info to a tab delimited file"
      synonyms:
      - -homologs_table
      args: !SimpleFlagArg
        name: File
      optional: true
    - !Flag
      description: 'Filter on taxonomic level (example: Mammalia)'
      synonyms:
      - -taxon
      args: !SimpleFlagArg
        name: Taxon
      optional: true
    - !Flag
      description: "Type of organism name to use in the fasta header (scientific,\
        \ common or none).\nDefault is scientific. Common name is only accessible\
        \ with -ortho."
      synonyms:
      - -header_org
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Information used as sequence label in the fasta header.\nSupported\
        \ label types:\n-label query\nuse as sequence label the identifier or name\
        \ used as query.\n"
      synonyms:
      - -label
      args: !SimpleFlagArg
        name: label_type
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "USAGE\n\tretrieve-ensembl-seq [-type type] -org organism | -dbname\
      \ database\n\t\t\t[-from] [-to] [-noorf] [-rm] [-maskcoding]\n\t\t\t[-o outpufile]\
      \ -q query_orf | -i query file | -all\n\nDESCRIPTION\n\n\tReturns upstream,\
      \ downstream, intronic, exonic or UTR DNA\n\tsequences for a list of query genes.\n\
      \nCATEGORY\n\tgenomics\n\tsequences\n\nREMARK\n\n    This script requires a\
      \ local installation of the EnsEMBL Perl Core\n    and Compara APIs (see RSAT\
      \ installation guide).\n\nOPTIONS\n\t-org organism\n\t        underscore between\
      \ words (eg 'homo_sapiens')\n\n\t        If this option is not used, the option\
      \ -dbname must be used\n\t         instead.\n\n\t        (type 'supported-organisms\
      \ | grep EnsEMBL' to obtain the list of supported\n\t         organisms)\n\n\
      \        -ensemblhost\n                address of ensembl database server (default\
      \ is EBI server)\n\n\t-dbname\tname of EnsEMBL database\n\t\t(alternative to\
      \ organism)\n\n        -dbversion\n\t        version of ensembl database (example:\
      \ 47)\n\n\t-feattype\n\t\tFeature type.\n\t\tSupported: cds,exon,gene,intron,mrna,transcript,utr\n\
      \t\tDefaut: mrna\n\n\t-type\tsequence type\n\t\tCurrently supported sequence\
      \ types\n\t\t\tupstream (default)\n\t\t\tdownstream\n                      \
      \  feature\n\n       -utr utr_type\n\n              Type(s) of UTR (untranslated\
      \ region) to return.\n\n              Supported: all | 5prime | 3prime\n\n\t\
      -q query\n\t\tThe query should be an EnsEMBL gene identifier (eg 'ENSG00000177799').\n\
      \t\tMultiple queries can be entered by reiteratively using the -q\n\t\toption.\n\
      \n        -i     query file. The first word of each line is taken as a query.\n\
      \                This option is incompatible with -q.\n\n\t-all\treturn all\
      \ genomic upstream/downstream regions\n\n\t-o\tname of the output file\n\n \
      \       -from #1 -to #2\n                where #1 and #2 are numbers. #2 should\
      \ be higher than #1.\n                limits of the region to extract, relative\
      \ to feattype start or end\n                (=position 0). Use negative values\
      \ for upstream sequence.\n                        example: -from -800 -to -1\n\
      \                        will extract the 800 bp upstream the feattype start\
      \ or end.\n\t\t\t (this is the default\n\n\t-noorf\tthe upstream/downstream\
      \ sequence can only contain non-coding sequence.\n\t\ti.e. the -from values\
      \ is modified if a predicted orf\n\t\tis encountered within its range.\n\t\t\
      The weaknesses of using this option are that\n\t\t- all predicted orf do not\
      \ correspond to real orf,\n\t\t- there is no a priori reason to exclude a regulatory\
      \ site\n\t\t  which would overlap the upstream coding sequence.\n\n        -nogene\
      \ the upstream/downstream sequence can only contain non-transcribed sequence.\n\
      \n        -maskcoding\n                all coding sequence is replaced by N\
      \ in the retrieved sequence\n\n\t-rm     Use the repeat masked version of the\
      \ genome.  Attention :\n\t\trepeated regions are annotated for some genomes\
      \ only.\n\n        -alltranscripts\n                Get sequences for all transcripts\
      \ of genes.\n                Use -uniqseqs if you do motif discovery afterwards\n\
      \n        -uniqseqs\n                With -alltranscripts, returns only non-redondant\
      \ sequences\n\n        -firstintron\n                With feattype intron, get\
      \ only first intron sequence\n\n        -noncoding\n                With feattype\
      \ exon, get only non-coding (part of) exons\n\n        -chrom  Chromosome name\
      \ or number (to use with -left and -right)\n\n        -left   Left limit of\
      \ sequence to retrieve\n\n        -right  Right limit of sequence to retrieve\n\
      \n        -strand Strand of sequence to retrieve when using -left and -right.\
      \ Values: 1, -1\n\n        -ftfile Feature file\n\n        -ftfileformat\n \
      \               Feature file format. Supported: ft, gft\n\n\t-ortho  Retrieve\
      \ homologous sequences from EnsEMBL Compara databases\n\n\t-ortho_type Type\n\
      \                Filter on homology type. (example: ortholog, ortholog_one2one)\n\
      \n        -homologs_table File name\n                Prints homology info to\
      \ a tab delimited file\n\n        -taxon Taxon  Filter on taxonomic level (example:\
      \ Mammalia)\n\n\t-header_org   Type of organism name to use in the fasta header\
      \ (scientific, common or none).\n\t\t      Default is scientific. Common name\
      \ is only accessible with -ortho.\n\n        -label label_type\n\t       Information\
      \ used as sequence label in the fasta header. \n\n\t       Supported label types:\
      \ \n\n\t       -label query \n\t       \t      use as sequence label the identifier\
      \ or name used as query. \n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - matrix-quality
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: matrix-quality
      optional: false
    - !Positional
      description: "\e[1mMatrix sites\e[0m"
      position: 0
      name: interest.
      optional: false
    - !Positional
      description: If the left-out sequence has one or more "twin" (identical site)
        in the
      position: 0
      name: set.
      optional: false
    - !Positional
      description: This approach may however pose problem in the specific case of
      position: 0
      name: distribution.
      optional: false
    - !Positional
      description: "\e[1mComparing the scores of the matrix sites to the theoretical"
      position: 0
      name: computed.
      optional: false
    - !Positional
      description: 'Beware: the score distribution of matrix sites is fake. Indeed,
        those'
      position: 0
      name: distribution.
      optional: false
    - !Positional
      description: "The theoretical distribution of scores, computing according to\
        \ the\nbackground model;"
      position: 0
      name: theory
      optional: false
    - !Positional
      description: "The score distribution of the matrix sites (which is biased by\
        \ the\nfact that these sites were used to build the matrix)."
      position: 1
      name: matrix_sites
      optional: false
    - !Positional
      description: "This is the distribution of scores for the matrix sites, evaluated\n\
        with the LOO procedure."
      position: 2
      name: matrix_sites_cv
      optional: false
    - !Positional
      description: pattern matching
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: evaluation
      position: 1
      name: PSSM
      optional: false
    - !Positional
      description: "\e[1m-top top_matrices\e[0m"
      position: 0
      name: one.
      optional: false
    - !Positional
      description: "\e[1m-kfold k\e[0m"
      position: 0
      name: sequences.
      optional: false
    - !Positional
      description: "\e[1m-nograph\e[0m"
      position: 0
      name: steps.
      optional: false
    - !Positional
      description: "\e[1m-decimals #\e[0m"
      position: 0
      name: convert-background-model.
      optional: false
    - !Positional
      description: Calculate the OCC proba.
      position: 0
      name: sequence_type
      optional: false
    - !Positional
      description: If the option '-bgfile' is specified, the specified background
        model
      position: 0
      name: statistics.
      optional: false
    named:
    - !Flag
      description: 0 -bgfile my_background.txt \
      synonyms:
      - -no_cv
      - -perm
      args: !SimpleFlagArg
        name: matrix_sites
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: my_matrix_quality
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -h.
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -plot
      args: !SimpleFlagArg
        name: seq_type
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    matrix-quality\n\n\e[1mDESCRIPTION\e[0m\n    Evaluate\
      \ the quality of a Position-Specific Scoring Matrix (PSSM), by\n    comparing\
      \ score distributions obtained with this matrix in various\n    sequence sets.\n\
      \n    The most classical use of the program is to compare score distributions\n\
      \    between \"positive\" sequences (e.g. true binding sites for the considered\n\
      \    transcription factor) and \"negative\" sequences (e.g. intergenic\n   \
      \ sequences between convergently transcribed genes).\n\n  \e[1mPositive set\
      \ : annotated binding sites\e[0m\n    The typical positive set is a collection\
      \ of sites that have been shown\n    (with experimental methods) to bind the\
      \ transcription factor of\n    interest.\n\n  \e[1mMatrix sites\e[0m\n    A\
      \ particular case of postive control is to estimate the distribution of\n  \
      \  scores of the sites that served to build the matrix. This however\n    provkes\
      \ some bias (over-estimation of the scores), since the matrix is\n    used to\
      \ score the sites on which it was \"trained\". This bias can be\n    circumvented\
      \ by applying a cross-validation.\n\n  \e[1mCross-validation\e[0m\n    An important\
      \ bias of evaluation (and a frequent trap in published\n    articles) can result\
      \ from an over-fitting of the matrix to the positive\n    set, in case one would\
      \ use the same sites for building the PSSM and for\n    evaluating it. To avoid\
      \ this bias, \e[33mmatrix-quality\e[0m supports two modes of\n    cross-validation\
      \ (CV):\n\n     1. Leave-one-out (LOO)\n     2. k-fold cross-validation (kfold)\n\
      \n    The cross-validation can only be performed when the matrix is specified\n\
      \    in a format that includes both the matrix and the sites (sequences) that\n\
      \    were used to build this matrix. This is the case for matrices in MEME,\n\
      \    consensus, transfac and MotifSampler formats.\n\n   k-fold cross-validation\n\
      \    The set of input sequence (matrix site sequences) is partitionned into\
      \ k\n    randomly selected subets of approx. equal size (the number of sites\
      \ is\n    not always an exact multiple of k).\n\n    The program then iterates\
      \ over the testing set in the following way. All\n    the sites that are not\
      \ part of the testing sets are used as trianing\n    sites to build a partial\
      \ matrix. The testing sites are then scored with\n    this partial matrix.\n\
      \n   Leave-One-Out (LOO) test\n    In LOO cross-validation mode, one sequence\
      \ (the \"left-out sequence\") is\n    temporarily discarded from the positive\
      \ set, and the remaining sequences\n    are used to build a matrix, which is\
      \ then used to score the left out\n    sequence. The process iterates over all\
      \ the sequences of the positive\n    set.\n\n    If the left-out sequence has\
      \ one or more \"twin\" (identical site) in the\n    positive set, they are also\
      \ temporarily excluded from the positive set\n    and not included in the matrix\
      \ used to score the left out sequence.\n\n   LOO or k-fold ?\n    The LOO is\
      \ actually a particular case of k-fold cross-validation, where\n    k equals\
      \ the total number of sites used to build the original matrix.\n    The LOO\
      \ is particularly adapted for matrices built from a very small\n    number of\
      \ sites (e.g. matrices built from a handful of well-documented\n    sites as\
      \ usually found in transcription factor databases).\n\n    On the contrary,\
      \ the k-fold cross-validation is useful to save computing\n    time for matrices\
      \ built from large collection of sites (e.g. thousands\n    of sites resulting\
      \ from ChIP-seq experiments).\n\n  \e[1mNegative set\e[0m\n    It is sometimes\
      \ difficult to find a good negative set, i.e. a collection\n    of sequences\
      \ which supposedly do not contain any binding site for the\n    transcription\
      \ factor of interest.\n\n   Random selection of biological sequences\n    One\
      \ possibility is to select a random set of genome fragments (e.g. use\n    \e\
      [33mrandom-genes\e[0m to select promoters of 100 randomly selected genes).\n\
      \    However, some of these randomly selected sequences might contain\n    effective\
      \ binding sites for the transcripton factor.\n\n   Artificial sequences\n  \
      \  Another possiblity is to generate artificial sequences according to some\n\
      \    background model (uing \e[33mrandom-seq\e[0m), but there is always a risk\
      \ that for\n    model to be an over-simplification of the real sequences.\n\n\
      \   Biological sequences scanned with column-permuted matrices\n    Yet another\
      \ approach to perform the negative test os to scan biological\n    sequences\
      \ (e.g. upstream regions of 100 randomly picked genes) with\n    column-permuted\
      \ matrices. The advantage of this approach is that the\n    sequences are realistic,\
      \ but the permuted matrices hopefully do not\n    correspond to any actual motif,\
      \ and their empirical distribution\n    observed in the test sequences is thus\
      \ supposed to fit the theoretcial\n    distribution.\n\n    This approach may\
      \ however pose problem in the specific case of\n    weak-complexity motifs (e.g.\
      \ CCGCCC, AATTTT), since many permutations\n    will give motifs that are similar,\
      \ if not equal, to the original motif.\n\n\e[1mHOW TO USE THIS PROGRAM ?\e[0m\n\
      \    Let us be frank, this program can do many things, but requires a bit of\n\
      \    expertise. A good strategy to get familiar with its multiple results is\n\
      \    to start runing the simplest possible analysis, and progressively adding\n\
      \    the more advanced tasks.\n\n    We propose hereafter a step-by-step schedule\
      \ of utilization, where\n    subsequent tasks are progressively added.\n\n \
      \   We assume here that the user disposes of a PSSM in a format that\n    includes\
      \ both the matrix and the aligned sites used to compute the\n    matrix (e.g.\
      \ MEME format). Beware, the sites actually incorporated in\n    the matrix may\
      \ differ frfom the collection of sites used as input for\n    the matrix-building\
      \ program. For instance, if you use MEME (with the\n    option -zoops) to build\
      \ a matrix from a collection of annotated TFBS,\n    some sites may be incorporated\
      \ in the matrix, and some other skipped. We\n    use hereafter the expression\
      \ \e[1m\"matrix sites\"\e[0m to refer to the sites used\n    in the alignment\
      \ from which the residues frequencies of the matrix were\n    computed.\n\n\
      \  \e[1mComparing the scores of the matrix sites to the theoretical\ndistribution\e\
      [0m\n     matrix-quality -v 1 -ms my_matrix.meme -matrix_format meme \\\n  \
      \     -no_cv -perm matrix_sites 0 -bgfile my_background.txt \\\n       -o my_matrix_quality\n\
      \n    This will produce the simplest possible analysis: computing the score\n\
      \    distribution of the matrix sites, and comparing it to the theoretical\n\
      \    distribution.\n\n    Beware: the score distribution of matrix sites is\
      \ fake. Indeed, those\n    are the very stes that were used to build the matrix.\
      \ Each site partly\n    contributed to the matrix scores (weights) that will\
      \ serve to score it.\n    There is thus a problem of over-fitting: we train\
      \ a matrix with some\n    data, and we evaluate the matrix with the same data.\n\
      \n  \e[1mAssessing matrix sites with a Leave-One-Out (LOO) procedure\e[0m\n\
      \    To circumvent the problem of over-fitting mentioned above, we have need\n\
      \    to perform the Leave-One-Out (LOO) procedure. Actually, \e[33mmatrix-scan\e\
      [0m\n    automatically runs the leave-one-out test by default. The reason why\
      \ it\n    was not done in the previous section is because we used the option\n\
      \    -no_cv, for the only purpose of illustrating the problem of overfitting.\n\
      \    We will now run \e[33mmatrix-scan\e[0m in the normal way, without inactivating\
      \ the\n    LOO procedure.\n\n     matrix-quality -v 1 -ms my_matrix.meme -matrix_format\
      \ meme \\\n       -perm matrix_sites 0 -bgfile my_background.txt \\\n      \
      \ -o my_matrix_quality\n\n    The result distributions now contain 3 curves:\n\
      \n    theory\n        The theoretical distribution of scores, computing according\
      \ to the\n        background model;\n\n    matrix_sites\n        The score distribution\
      \ of the matrix sites (which is biased by the\n        fact that these sites\
      \ were used to build the matrix).\n\n    matrix_sites_cv\n        This is the\
      \ distribution of scores for the matrix sites, evaluated\n        with the LOO\
      \ procedure.\n\n\e[1mAUTHORS\e[0m\n    Jacques van Helden <Jacques.van-Helden\\\
      @univ-amu.fr>\n    Alejandra Medina-Rivera <amedina@lcg.unam.mx> (CCG, UNAM,\
      \ Mexico)\n    Morgane Thomas-Chollier <morgane@bigre.ulb.ac.be>\n\n\e[1mCATEGORY\e\
      [0m\n    sequences\n    pattern matching\n    PSSM\n    evaluation\n\n\e[1mUSAGE\e\
      [0m\n    matrix-quality [-i inputfile] [-o outputfile] [-v]\n\n\e[1mOPTIONS\e\
      [0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
      \ during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e\
      [1m-dry\e[0m\n        Dry run: print the commands but do not execute them.\n\
      \n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-m matrix_file\e[0m\n\
      \        Matrix file. If the file includes several matrices, it will only\n\
      \        take the first one.\n\n    \e[1m-ms matrix_sites\e[0m\n        File\
      \ containing both a matrix and its sites. The sites are then used\n        as\
      \ positive sequence set, and labelled as \"matrix_sites\" in the\n        distribution\
      \ tables and graphs.\n\n        The option -ms is only valid with the file formats\
      \ which contain\n        both the matrix and its sites (e.g. consensus, MotifSampler,\
      \ meme,\n        infogibbs and transfac). The format of the matrix+site file\
      \ can be\n        specified with the option '-matrix_format'.\n\n        If\
      \ the matrix and its sites are only available in separate files, an\n      \
      \  equivalent effect can be obtained by combining the options \"-m\n       \
      \ my_matrix.tab\" and \"-seq matrix_sites site_sequences.fasta\".\n        Althougth\
      \ when this option is used the LOO test is not performed.\n\n        If \e[33mmatrix-scan-quick\e\
      [0m is available in the machine this programe will\n        be used instead\
      \ of matrix-scan. For \e[33mmatrix-scan-quick\e[0m the matrix\n        most\
      \ be in infogibbs or tab format.\n\n        If the file includes several matrices,\
      \ it will only take the first\n        one.\n\n    \e[1m-top top_matrices\e\
      [0m\n        Maximal number of matrices to analyze.\n\n        Some input formats\
      \ can contain several matrices in a single file\n        (e.g. transfac, consensus,\
      \ meme, MotifSampler). By default, all the\n        matrices are parsed and\
      \ exported. The option -top allows to restrict\n        the number of matrices\
      \ to be exported.\n\n    \e[1m-matrix_format matrix_format\e[0m\n        Format\
      \ of the matrix file.\n\n    \e[1m-seq seq_type seq_file\e[0m\n        File\
      \ containing a sequence set of a given type. The first next\n        argument\
      \ indicates the type of the sequence (which will appear in\n        the leend\
      \ of the plots), and the second next argument the file name.\n\n    \e[1m-seq_format\
      \ sequence_format\e[0m\n        Sequence format.\n\n    \e[1m-scanopt seq_type\
      \ \"option1 option2 ...\"\e[0m\n        Sequence set-specific options for matrix-scan.\
      \ These options are\n        added at the end of the matrix-scan command for\
      \ scanning the\n        specified sequence set.\n\n    \e[1m-no_cv\e[0m\n  \
      \      Do not apply the leave-one-out (LOO) test on the matrix site\n      \
      \  sequences.\n\n    \e[1m-kfold k\e[0m\n        k-fold cross-validation.\n\n\
      \        Divide the matrix sites in k chunks for cross-validation. The chunks\n\
      \        are sampled in a random way.\n\n    \e[1m-noperm\e[0m\n        Skip\
      \ the matrix permutation step. This option is mainly used for\n        debugging,\
      \ or to run the last steps (comparison + graph generation)\n        without\
      \ re-running the time-consuming scanning steps.\n\n    \e[1m-noscan\e[0m\n \
      \       Skip the matrix-scan step. This option is mainly used for debugging,\n\
      \        or to run the last steps (comparison + graph generation) without\n\
      \        re-running the time-consuming scanning steps.\n\n    \e[1m-nocompa\e\
      [0m\n        Skip the step of comparisons between distributions. This option\
      \ is\n        mainly used for debugging, or to run the last steps (comparison\
      \ +\n        graph generation) without re-running the time-consuming scanning\n\
      \        steps.\n\n    \e[1m-nograph\e[0m\n        Skip the step of drawing\
      \ comparison graphs.\n\n    \e[1m-noicon\e[0m\n        Do not generate the small\
      \ graphs (icons) used for the galleries in\n        the indexes.\n\n    \e[1m-export_hits\e\
      [0m\n        Return matrix-scan scores in addition to the distribution of scores.\n\
      \        Beware ! This option can produce very large files and use lots of\n\
      \        disk space.\n\n    \e[1m-perm seq_type #\e[0m\n        Number of permutations\
      \ for a specific set (default 0).\n\n    \e[1m-perm_sep\e[0m\n        Calculate\
      \ the distributions for each permuted matrix separately.\n        This provides\
      \ an estimate of the variability between permutations,\n        but the resulting\
      \ graph is less readable, because of the\n        multiplicity of curves.\n\n\
      \        \e[1mNote:\e[0m the option to merge permutations (\e[33m-perm_merged\e\
      [0m) has been\n        disactivated since we swapped from matrix-scan to matrix-scan-quick.\n\
      \        The option \e[33m-perm_sep\e[0m is thus currently the only mode of\n\
      \        presentation. We still need to implement the merging of the\n     \
      \   distributions, in order to re-activate the option -perm_merged (see\n  \
      \      with list).\n\n    \e[1m-pseudo pseudo_counts\e[0m\n        Pseudo-counts.\
      \ The pseudo-count reflects the possibility that\n        residues that were\
      \ not (yet) observed in the model might however be\n        valid for future\
      \ observations. The pseudo-count is used to compute\n        the corrected residue\
      \ frequencies.\n\n    \e[1m-bgfile background_file\e[0m\n        Background\
      \ model to be used to calculate the matrix theoretical\n        distribution.\
      \ The matrix theoretical distribution is calculated with\n        \e[33mmatrix-distrib\e\
      [0m.\n\n    \e[1m-bg_format background_file\e[0m\n        Format for the background\
      \ model file.\n\n                Supported formats: all the input formats supported\
      \ by\n                convert-background-model.\n\n    \e[1m-decimals #\e[0m\n\
      \        Number of decimals for computing weight scores (default 2). This\n\
      \        arguments is passed to \e[33mmatrix-scan\e[0m and \e[33mmatrix-distrib\e\
      [0m.\n\n    \e[1m-o output_prefix\e[0m\n        Prefix of the output files.\
      \ The program generates various files, and\n        automatically adds a specific\
      \ suffix to each output file.\n\n        \e[33mpos_scores\e[0m\n           \
      \ Scores of the positive sequence set.\n\n    \e[1m-graph_option 'option1 options2\
      \ ...'\e[0m\n        Specify options that will be passed to the program \e[33mXYgraph\e\
      [0m for\n        generating the distributions and the ROC curves.\n\n      \
      \  Beware: if an option requires to be followed by a value (ex -xsize\n    \
      \    1000), you have to embrace the option and its value in quotes.\n\n    \
      \      Example\n           -graph_option '-size 800 -title \"LexA matrix\" -bg\
      \ blue'\n\n        This option can be used iteratively on a command line.\n\n\
      \          Example\n           -graph_option '-xsize 1000' -graph_option '-title\
      \ \"LexA matrix\"'\n\n    \e[1m-roc_ref\e[0m\n        Reference distribution\
      \ for the ROC curve.\n\n    \e[1m-roc_option 'option1 options2 ...'\e[0m\n \
      \       Specify options that will be passed to the program \e[33mXYgraph\e[0m\
      \ for\n        generating the ROC curves (ot the distribution curves).\n\n \
      \       Beware: if an option requires to be followed by a value (ex -xsize\n\
      \        1000), you have to embrace the option and its value in quotes.\n\n\
      \          Example\n           -roc_option '-ygstep1 0.1 -ygstep2 0.02'\n\n\
      \        This option can be used iteratively on a command line.\n\n        \
      \  Example\n           -roc_option '-ygstep1 0.1' -roc_option '-ygstep2 0.02'\n\
      \n    \e[1m-distrib_option 'option1 options2 ...'\e[0m\n        Specify options\
      \ that will be passed to the program \e[33mXYgraph\e[0m for\n        generating\
      \ the distribution curves (not the ROC curves).\n\n        Beware: if an option\
      \ requires to be followed by a value (ex -xsize\n        1000), you have to\
      \ embrace the option and its value in quotes.\n\n          Example\n       \
      \    -distrib_option '-xmin -35 -xmax 20'\n\n    \e[1m-img_format\e[0m\n   \
      \     Image format for the plots (ROC curve, score profiles, ...). To\n    \
      \    display the supported formats, type the following command: XYgraph\n  \
      \      -h.\n\n        Multiple image formats can be specified either by using\
      \ iteratively\n        the option, or by separating them by commas.\n\n    \
      \    Example: -img_format png,pdf\n\n    \e[1m-r_plot\e[0m\n        Generate\
      \ plots using R instead of the Perl GD module. The resulting\n        graphs\
      \ are of higher quality, but this requires to have R installed\n        on the\
      \ server.\n\n        The option is actually passed to the XYgraph commands.\n\
      \n    \e[1m-logo_format\e[0m\n        Image format for the sequence logos.\n\
      \n        Multiple image formats can be specified either by using iteratively\n\
      \        the option, or by separating them by commas.\n\n        Example: -logo_format\
      \ png,pdf\n\n    \e[1m-plot seq_id nwd,occ_proba\e[0m\n        Additions plots\
      \ will be drawn to compare: a) The enrichment of\n        scores in a set of\
      \ sequences for different matrices b) The\n        enrichment of scores in different\
      \ sequence sets for one matrix\n\n        \e[33mNWD curve\e[0m: At each frequency\
      \ value (y-axis) we calculate the weigh\n        difference (WD), defined as\
      \ the difference between the observed Ws\n        in all upstream non-codingsequence\
      \ set and the expected Ws in the\n        theoretical distribution of the PSSM\
      \ for a given P-value.\n\n        The WD can be visualized as the horizontal\
      \ distance between the\n        distribution curves. As larger matrices allow\
      \ higher scores, we\n        divided the difference by the matrix width to obtain\
      \ the normalized\n        weight difference.\n\n        NWD Heatmap comparison:\
      \ When at least two matrices and two sequences\n        are used to calculate\
      \ NWD curves the program will generate a heatmap\n        to facilitate the\
      \ analysis.\n\n        Usage: -plot seq_type nwd\n\n        \e[33mOCC Proba\
      \ Curve\e[0m: Probability of the number of matches in the input\n        sequence\
      \ For each matrix and each score value, calculate the\n        statistical significance\
      \ of the number of matches. This allows to\n        select the score associated\
      \ with te maximal significance, on the\n        basis of the matrix-specific\
      \ distribution, rather than by selecting\n        some a priori threshold.\n\
      \n        Usage: -plot seq_type occ_proba\n\n    \e[1m-archive\e[0m\n      \
      \  Compress the result directory into a zip archive of the same name\n     \
      \   (with suffix .zip).\n\n         ## Title for html\n\n    \e[1m-html_title\e\
      [0m\n        Get a title for the html page.\n\n    \e[1m-task tasks\e[0m\n \
      \       Specify one or several tasks to be run. If this option is not\n    \
      \    specified, all the tasks are run.\n\n        Note that some tasks depend\
      \ on other ones. This option should thus\n        be used with caution, by experimented\
      \ users only.\n\n        Supported tasks:\n\n        \e[1mscan\e[0m\n      \
      \      Scan sequences with matrix-scan\n\n        \e[1mtheor\e[0m\n        \
      \    Calculate the theoretical distribution\n\n        \e[1mloo\e[0m Leave-one-out\
      \ test on the matrix sites\n\n        \e[1mtheor_cv\e[0m\n            Calculate\
      \ the theoretical distribution of loo partial matrices\n\n        \e[1mpermute\e\
      [0m\n            Scan sequences with permuted matrices\n\n        \e[1mcompare\e\
      [0m\n            Compare distributions between the various input files\n\n \
      \       \e[1mgraphs\e[0m\n            Draw the graphs with distrib comparisons\n\
      \n        \e[1msynthesis\e[0m\n            Generate a HTML file with a synthetic\
      \ report, which displays the\n            main graphs (distribution curves and\
      \ ROC curve) and provides\n            links to the result files.\n\n      \
      \      In order to be correctly indexed, the graphs have to be\n           \
      \ generated in png format.\n\n        \e[1mplot\e[0m\n            Calculate\
      \ the Normalized Weight Distance between the theoretical\n            distribution\
      \ and a score distribution in a specified\n            sequence_type\n\n   \
      \         Calculate the OCC proba.\n\n    \e[1mBackground model\e[0m\n     \
      \   \e[33mmatrix-distrib\e[0m requires to specify a background model, which\
      \ will be\n        passed to \e[33mmatrix-distrib\e[0m and \e[33mmatrix-scan\e\
      [0m. This background model can\n        be specified with the same options as\
      \ for \e[33mmatrix-scan\e[0m.\n\n    \e[1mOther options\e[0m\n        All the\
      \ other options are automatically passed to \e[33mmatrix-scan\e[0m, in\n   \
      \     order to specify the scanning parameters (strands, background model,\n\
      \        ...).\n\n        Note that the option '-return' of matrix-scan cannot\
      \ be used here,\n        because matrix-quality specifies the return fields\
      \ required for its\n        statistics.\n\n        If the option '-bgfile' is\
      \ specified, the specified background model\n        will be used to calculate\
      \ the matrix theoretical distribution. If\n        another type of background\
      \ model is specified for matrix-scan\n        ('-bginput' or '-window'), use\
      \ '-th_prior' option to specify the\n        background model to be used for\
      \ the calculation of the matrix\n        theoretical distribution.\n\n\e[1mSEE\
      \ ALSO\e[0m\n    \e[1mmatrix-scan\e[0m\n        Called by \e[33mmatrix-quality\e\
      [0m for scanning the different sets (positive,\n        negative) with the input\
      \ matrix.\n\n    \e[1mmatrix-distrib\e[0m\n        Called by \e[33mmatrix-quality\e\
      [0m for computing the theoretical distribution\n        of scores.\n\n    \e\
      [1mconvert-matrix\e[0m\n        Called by \e[33mmatrix-quality\e[0m to generate\
      \ column-permuted matrices.\n\n\e[1m\e[1mWISH LIST\e[0m\e[0m\n    \e[1m-perm_merged\e\
      [0m\n        Merge the permutations in order to obtain a more robust distribution\n\
      \        of the permuted matrices. The figure is more readable than with the\n\
      \        option -perm_sep (default), but does not reflect the variability\n\
      \        between the different permutations.\n\n    \e[1m-th_prior\e[0m\n  \
      \      File in oligo-analysis format.\n\n        This option should better be\
      \ removed, so the user has to specify the\n        bg file with the option -bgfile.\
      \ To check.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - genome-blast
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: genome-blast
      optional: false
    - !Positional
      description: "\e[1mINPUT FORMAT\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: Although the matching is performed at the protein level, the table
      position: 0
      name: organism.
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: comparison.
      optional: false
    - !Positional
      description: The formatdb step has to be done before running blastall. Note
        that both
      position: 0
      name: blastall
      optional: false
    - !Positional
      description: 'Example: matching all Fungi against all Bacteria genome-blast
        -qtaxon'
      position: 0
      name: comparisons.
      optional: false
    - !Positional
      description: "\e[1m-outdir output_directory\e[0m"
      position: 0
      name: default.
      optional: false
    - !Positional
      description: "genome-blast -v 1 -q my_org -dbtaxon my_taxon -task blastall\n\
        genome-blast -v 1 -db my_org -qtaxon my_taxon -task blastall -no_self"
      position: 0
      name: blast.
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -dbtaxon
      - -task
      - -batch
      args: !SimpleFlagArg
        name: Fungi
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    genome-blast\n\n\e[1mDESCRIPTION\e[0m\n    Use\
      \ BLAST to detect homologs between all the protein of query and\n    reference\
      \ organisms.\n\n    The BLAST result is exported as a tab-delimited file, contining\
      \ one row\n    per hit. This hit table is post-processed to rank the hits and\
      \ identify\n    the bidirectional best hits (BBH).\n\n\e[1mCATEGORY\e[0m\n \
      \   util\n\n\e[1mINPUT FORMAT\e[0m\n    This program requires the complete set\
      \ of protein sequences of the query\n    and reference genomes. The protein\
      \ sequence files must be in fasta\n    format (.fasta or .fasta.gz), with the\
      \ file name assigned by the RSAT\n    program install-genome.\n\n\e[1mOUTPUT\
      \ FORMAT\e[0m\n    The output format is a set of tab-delimited files (one per\
      \ pairwise\n    genome comparison).\n\n    The first 14 columns correspond to\
      \ the BLAST tab-delimited output\n    (directly obtained with the option -m\
      \ 8).\n\n    1. query_organism\n        Name of the query organism, i.e. the\
      \ organism for which each protein\n        is used as a query for BLAST.\n\n\
      \    2. db_organism\n        Name of the query organism, i.e. the organism against\
      \ which the\n        query protein will be matched.\n\n        The BLAST formatting\
      \ of the proteome of the db organism has to be\n        done before the search\
      \ is started. Formatting is done with the\n        option \e[33m-task format\e\
      [0m.\n\n    3. query\n        The ID of the gene coding for the query protein\
      \ in the query\n        organism.\n\n        Although the matching is performed\
      \ at the protein level, the table\n        returns the corresponding genes,\
      \ because the goal is to idenfity\n        pairs of homologous genes.\n\n  \
      \  4. subject\n        The ID of the gene in the db organism whose product matched\
      \ the\n        query protein. The name \"subject\" corresponds to the blast\n\
      \        nomenclature, to indicate the protein of the database that was\n  \
      \      matched by the query protein.\n\n    5. ident\n        Percentage of\
      \ identity.\n\n    6. ali_len\n        Total length of the alignment.\n\n  \
      \  7. mismat\n        Number of mismatches in the alignment.\n\n    8. gap_open\n\
      \        Number of gap openings in the alignment.\n\n    9. q_start\n      \
      \  Starting position of the aligned segment in the query protein.\n\n    10.\
      \ q_end\n        Ending position of the aligned segment in the query protein.\n\
      \n    11. s_start\n        Starting position of the aligned segment in the matched\
      \ protein (the\n        \"subject\", according to BLAST nomenclature).\n\n \
      \   12. s_end\n        Ending position of the aligned segment in the matched\
      \ protein (the\n        \"subject\", according to BLAST nomenclature).\n\n \
      \   13. e_value\n        E-value of the alignment.\n\n    14. bit_sc\n     \
      \   Bit score of the alignment.\n\n    15. q_rank (post-processing)\n      \
      \  Query rank: rank of the hit among all the hits found for the current\n  \
      \      query protein in the database genome.\n\n    16. s_rank (post-processing)\n\
      \        Database rank: rank of the hit among all the hits found for the\n \
      \       current database (subject) protein in the database genome.\n\n\e[1mSPACE\
      \ REQUIREMENT\e[0m\n    The BLAST tables are compressed (.gz) to save space,\
      \ but the genome-wide\n    comparisons occupy an important disk space. As a\
      \ rough estimation, each\n    pairwise genome comparison requires a space of\
      \ ~250Mb.\n\n    There are currently (March 2009) more than 1000 bacterial genomes.\n\
      \    Matching all against all qould require a disk space of 1000*1000*250Mb\
      \ =\n    250Tb. The RSAT server is not able tosupport the all-against-all\n\
      \    comparison.\n\n\e[1mUSAGE\e[0m\n  \e[1mFirst step: formatting the database\
      \ organism\e[0m\n    genome-blast -q query_organism -db db_organism -task formatdb\n\
      \n      genome-blast -q Escherichia_coli_GCF_000005845.2_ASM584v2 -db Bacillus_subtilis\
      \ -task formatdb\n\n    The query organism is simply ignore for this task.\n\
      \n  \e[1mEven better: formatting all database organisms for a given taxon\e\
      [0m\n    If you want to blast one or several query genomes against several\n\
      \    database genomes (which is usually the case), a much more convenient way\n\
      \    to proceed is run the formatdb task with the option -dbtaxon.\n\n    genome-blast\
      \ -q query_organism -dbtaxon db_taxon -task formatdb\n\n     genome-blast -q\
      \ Escherichia_coli_GCF_000005845.2_ASM584v2 -dbtaxon Bacteria -task formatdb\n\
      \n  \e[1mMatching a query genome against a single database genome\e[0m\n   \
      \ Each comparison has to be performed in both direction, in order to\n    identify\
      \ the reciprocal hits (used to infer orthology).\n\n     genome-blast -q organism_1\
      \ -db organism_2 -task blastall\n     genome-blast -db organism_2 -db organism_1\
      \ -task blastall\n\n    Example: genome-blast -q Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -db\n    Bacillus_subtilis -task blastall genome-blast -db\n    Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -q Bacillus_subtilis -task\n    blastall\n\n    The formatdb step has to be\
      \ done before running blastall. Note that both\n    taks can be requested in\
      \ a single command, in which case formatdb is run\n    before blastall.\n\n\
      \     genome-blast -q Escherichia_coli_GCF_000005845.2_ASM584v2 -db Bacillus_subtilis\
      \ -task formatdb,blastall\n     genome-blast -db Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -q Bacillus_subtilis -task formatdb,blastall\n\n  \e[1mMatching a query genome\
      \ against all genomes of a given taxon\e[0m\n     genome-blast -q query_organism\
      \ -dbtaxon db_taxon -task blastall\n     genome-blast -db query_organism -qtaxon\
      \ db_taxon -task blastall\n\n     genome-blast -q Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -dbtaxon Bacteria -task blastall\n     genome-blast -db Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -qtaxon Bacteria -task blastall\n\n  \e[1mRunning taxon-wide comparisons on\
      \ a PC cluster\e[0m\n    Beware, each BLAST comparison can take several minutes.\
      \ In 2009, there\n    are more than 1000 available Bacterial genomes and this\
      \ number increases\n    exponentially with time. It is thus generally recommended\
      \ to run\n    taxon-wide comparisons on a PC cluster, by using the option \e\
      [33m-batch\e[0m.\n\n     genome-blast -q Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -dbtaxon Bacteria -task blastall -batch\n     genome-blast -db Escherichia_coli_GCF_000005845.2_ASM584v2\
      \ -qtaxon Bacteria -task blastall -batch\n\n  \e[1mMatching a taxon against\
      \ another taxon\e[0m\n    The options -dbtaxon and -qtaxon can be used to match\
      \ all genomes of a\n    given taxon (the query taxon) against all genomes of\
      \ another taxon (the\n    database taxon).\n\n    Beware, with 1000 Bacterial\
      \ genomes (available in the beginning of\n    2009), an all-against-all comparison\
      \ would represent 10^6 genome\n    comparisons.\n\n    Example: matching all\
      \ Fungi against all Bacteria genome-blast -qtaxon\n    Fungi -dbtaxon Bacteria\
      \ -task blastall -batch genome-blast -qtaxon\n    bacteria -dbtaxon Fungi -task\
      \ blastall -batch\n\n    Example: matching all Fungi against all Fungi genome-blast\
      \ -qtaxon Fungi\n    -dbtaxon Fungi -task blastall -batch\n\n    In the latter\
      \ case, there is no need to run the reciprocal blast, since\n    the query yaxon\
      \ is the same as the database taxon.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n\
      \        Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n     \
      \   display options\n\n    \e[1m-q query_organism\e[0m\n        Name of the\
      \ query organism. This option can be used iteratively to\n        specify several\
      \ query organisms.\n\n    \e[1m-db db_organism\e[0m\n        Name of the db\
      \ organism. This option can be used iteratively to\n        specify several\
      \ db organisms.\n\n    \e[1m-qtaxon query_taxon\e[0m\n        Name of the query\
      \ taxon. All the organisms included in this taxon\n        will be used as QUERY\
      \ organisms. This option can be used iteratively\n        to specify several\
      \ taxons.\n\n    \e[1m-dbtaxon db_taxon\e[0m\n        Name of the db taxon.\
      \ All the organisms included in this taxon will\n        be used as DB organisms.\
      \ This option can be used iteratively to\n        specify several taxons.\n\n\
      \    \e[1m-db_org_file\e[0m\n        File containing a list of database organisms.\n\
      \n    \e[1m-query_org_file\e[0m\n        File containing a list of database\
      \ organisms.\n\n    \e[1m-reciprocal\e[0m\n        Run blastall in both direction,\
      \ i.e. after having blasted query\n        organism against database organism,\
      \ blast database organism against\n        taxon organism. This option is useless\
      \ when dbtaxon == qtaxon.\n\n    \e[1m-diamond\e[0m\n        Use diamond instead\
      \ of formatdb and blastall.\n\n        genome-blast uses blastall by default.\
      \ This option makes it use\n        diamond blast which has a significant increase\
      \ in speed. Although,\n        slighly less sensitive.\n\n    \e[1m-threads\e\
      [0m\n        Specifies the number of threads used for diamond blast. Uses 1\
      \ by\n        default.\n\n    \e[1m-outdir output_directory\e[0m\n        Specify\
      \ the ourput directory.\n\n        By default, blast results are exported in\
      \ the RSAT genome directory\n        ($RSAT/public_html/data/genomes), but for\
      \ this you need to have\n        write access to that directory. If this is\
      \ not the case, the output\n        can be redirected to another directory of\
      \ your choice.\n\n    \e[1m-task selected_task\e[0m\n        Select the tasks\
      \ to be performed. Supported tasks:\n        formatdb,blastall,rank,cleandb,all.\n\
      \n        This option can be used iteratively on the same command line to\n\
      \        select multiple tasks.\n\n        Example:\n\n        -task formatdb,blastall\n\
      \n        For a full analysis, simply type '-task all'\n\n    \e[1m-new_only\e\
      [0m\n        Skip blastall if the files already exist, even if they are old.\
      \ By\n        default, blastall runs and overwrites the old files, but for updates\n\
      \        this option is convenient to run only the searches for the newly\n\
      \        installed organisms.\n\n    \e[1m-no_self\e[0m\n        Avoid self-comparison.\
      \ Note that self-comparison is required for\n        get-orthologs, but this\
      \ option alllows to run it twice when running\n        blast of an organism\
      \ against a taxon in both directions. In this\n        case, you use the option\
      \ -no_self only when running the reciprocal\n        blast.\n\n         genome-blast\
      \ -v 1 -q my_org -dbtaxon my_taxon -task blastall\n         genome-blast -v\
      \ 1 -db my_org -qtaxon my_taxon -task blastall -no_self\n\n    \e[1m-skip_db_org\
      \ X\e[0m\n        Skip the first X DB organisms.\n\n        This is convenient\
      \ to resume an interrupted list of genomes.\n\n    \e[1m-skip_query_org X\e\
      [0m\n        Skip the first X query organisms.\n\n        This is convenient\
      \ to resume an interrupted list of genomes.\n\n    \e[1m-n\e[0m  Dry run: echo\
      \ the tasks but do not execute them.\n\n    \e[1m-nodie\e[0m\n        Don't\
      \ die on error.\n\n    \e[1m-batch\e[0m\n        Run the tasks in batch. This\
      \ option requires to dispose of a PC\n        cluster, and to properly configure\
      \ it in the configuration file\n        $RSAT/RSAT_config.props.\n\n    \e[1m-batch\
      \ batch_nb\e[0m\n        If the first argument following the option \e[33m-batch\e\
      [0m is a strictly\n        positive Natural number, jobs are posted to the cluster\
      \ queue by\n        groups of \e[33mbatch_nb\e[0m tasks (each job script regroups\
      \ \e[33mbatch_nb\e[0m tasks).\n\n    \e[1m-queue\e[0m\n        Cluster queue.\n\
      \n        By default, the cluster queue is specified in the configuration file\n\
      \        ($RSAT/RSAT_config.props). However, since each BLAST task can take\
      \ a\n        more or less long time depending on the proteome sizes, it is\n\
      \        recommended to use a queue that supports long time (e.g. 1h per job\n\
      \        or more).\n\n\e[1mSEE ALSO\e[0m\n    \e[1mget-orthologs\e[0m\n    \
      \    The program \e[33mget-orthologs\e[0m uses as input the BLAST similarity\
      \ tables\n        computed by genome-blast.\n\n\e[1mWISH LIST\e[0m\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - random-motif
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: random-motif
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '20181203'
      optional: false
    - !Positional
      description: USAGE
      position: 0
      name: motifs
      optional: false
    - !Positional
      description: implant-sites
      position: 0
      name: random-sites
      optional: false
    named:
    - !Flag
      description: "#, --verbosity=#   set verbosity to level #\n0 no verbosity\n\
        1 max verbosity"
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#, --output=#      output results to #\nif not specified, the\
        \ standard output is used"
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --length=#      motif length'
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --conserv=#     motif conservation (0.91 or low)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --mutiplier=#   mutliply each cell by #'
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#, --motifs=#      generate # motifs (one by default)'
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: use integer values
      synonyms:
      - --round
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "NAME\n        random-motif\n\nVERSION\n        20181203\n\nAUTHOR\n\
      \        Matthieu Defrance <matthieu.dc.defrance@ulb.ac.be>\n\nDESCRIPTION\n\
      \        random motif generator\n\nCATEGORY\n        motifs\n\nUSAGE\n     \
      \   random-motif -l motiflength [-c conservation] [-h]\n\nARGUMENTS\n    --version\
      \             show program's version number and exit\n    -h, --help       \
      \     show this help message and exit\n    -v #, --verbosity=#   set verbosity\
      \ to level #\n                              0 no verbosity\n               \
      \               1 max verbosity\n    -o #, --output=#      output results to\
      \ #\n                          if not specified, the standard output is used\n\
      \    -l #, --length=#      motif length\n    -c #, --conserv=#     motif conservation\
      \ (0.91 or low)\n    -m #, --mutiplier=#   mutliply each cell by #\n    -n #,\
      \ --motifs=#      generate # motifs (one by default)\n    --round          \
      \     use integer values\nSEE ALSO\n        random-sites\n        implant-sites\n\
      \n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - convert-background-model
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: convert-background-model
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: "\e[1mMEME (input/output)\e[0m"
      position: 0
      name: sequence.
      optional: false
    - !Positional
      description: MEME background files can be generated with the program
      position: 0
      name: models.
      optional: false
    - !Positional
      description: "\e[1mpatser (output)\e[0m"
      position: 0
      name: sequence.
      optional: false
    - !Positional
      description: Alternatively, the background model can be specified by combining
      position: 0
      name: formats.
      optional: false
    - !Positional
      description: "See \e[33moligo-analysis\e[0m for more details on this option"
      position: 0
      name: words.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    convert-background-model\n\n\e[1mDESCRIPTION\e\
      [0m\n    Interconversions between formats of background models supported by\n\
      \    different programs (oligo-analysis, dyad-analysis, matrix-scan, patser,\n\
      \    consensus, MotifLocator, MotifSampler, MEME, ...).\n\n    Background models\
      \ can be automatically loaded from the RSAT collection\n    of pre-calculated\
      \ background models.\n\n    This is a temporary version, with only some formats\
      \ supported.\n    Additional formats will be progressively added.\n\n\e[1mAUTHORS\e\
      [0m\n    Jacques van Helden Jacques.van-Helden\\@univ-amu.fr\n    Jean Valery\
      \ Turatsinze jturatsi@bigre.ulb.ac.be\n    Morgane Thomas-Chollier morgane@bigre.ulb.ac.be\n\
      \n\e[1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e[0m\n    convert-background-model\
      \ [-i inputfile] [-o outputfile] [-v]\n\n\e[1mBACKGROUND MODEL FORMATS\e[0m\n\
      \    \e[1mNote\e[0m: some formats are supported for both input and output, but\
      \ some\n    formats are supported only for input or for output.\n\n  \e[1moligos\
      \ (input/output)\e[0m\n    Oligonucleotide frequency table, as exported by the\
      \ RSAT program\n    \e[33moligo-analysis\e[0m.\n\n    An oligo file containing\
      \ k-mers frequencies corresponds to a Markov\n    model of order \e[33mm=k-1\e\
      [0m. Frequencies are converted to transition\n    probabilities by calculating\
      \ the relative frequencies of all oligomers\n    of size k having the same prefix\
      \ (first m letters).\n\n    The oligo frequency table have one row per oligonucleotide.\
      \ Columns\n    indicate respectively:\n\n     1. oligo sequence\n     2. oligo\
      \ ID (single ID for single strand models, ID|RC for two-strands models)\n  \
      \   3. frequency (probablity to find the oligo at a giben sequence position)\n\
      \     4. occurrences (total number of occurrences in the training set)\n\n \
      \   Additional columns are ignored.\n\n    Oligo frequency files are generated\
      \ using either \e[33mcount-words\e[0m or\n    \e[33moligo-analysis -return occ,freq\e\
      [0m.\n\n  \e[1mdyads (input)\e[0m\n    Oligonucleotide frequency table, as exported\
      \ by the RSAT program\n    \e[33mdyad-analysis\e[0m. Dyads with spacing 0 are\
      \ converted to oligos, and\n    frequencies are converted into transition probabilities\
      \ as for the\n    format \"oligos\".\n\n  \e[1mMotifSampler (input/output)\e\
      [0m\n    Also called \e[33minclusive\e[0m or \e[33mms\e[0m.\n\n    This format\
      \ can be used by the various programs of the software suite\n    INCLUSive developed\
      \ by Gert Thijs\n    (http://homes.esat.kuleuven.be/~thijs/download.html).\n\
      \n    MotifSampler background files can be generated with the program\n    \e\
      [33mCreateBackgroundModel\e[0m, which creates a Markov model from a background\n\
      \    sequence.\n\n  \e[1mMEME (input/output)\e[0m\n    MEME (http://meme.sdsc.edu/meme/)\
      \ is a matrix-based motif discovery\n    program developed by Tim Bailey, and\
      \ supporting Marckov chain background\n    models.\n\n    MEME background files\
      \ can be generated with the program\n    \e[33mfasta-get-markov\e[0m, which\
      \ creates a Markov model from a background\n    sequence.\n\n  \e[1mpatser (output)\e\
      [0m\n    Export the Markov model in patser format. \e[33mpatser\e[0m isa pattern\
      \ matching\n    program developed by Jerry Hertz.\n\n    WARNING: patser only\
      \ supports Bernoulli models ! If the Markov order is\n    superior to 0, this\
      \ function issues a fatal error.\n\n  \e[1mtransitions (output)\e[0m\n    Transition\
      \ table with one row per prefix, one column per suffix, each\n    cell indicating\
      \ the transition frequency.\n\n  \e[1mtables (output)\e[0m\n    Export tables\
      \ with various statistics: - oligo frequencies\n\n     - frequencies: oligomer\
      \ frequencies, presented in a\n       prefix/suffix table\n\n      - relative\
      \ frequencies: relative oligomer frequencies. These differ\n        from the\
      \ raw frequencies only i the input file contained\n        non-normalized frequencies\
      \ (e.g. pattern occurrences).\n\n      - transition frequencies: see the format\
      \ \"transitions\" above.\n\n    This output is convenient for understanding\
      \ the different steps for the\n    conversion between oligomer frequencies (oligomer\
      \ length k=m+1) and\n    transition tables.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v\
      \ #\e[0m\n        Level of verbosity (detail in the warning messages during\
      \ execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e\
      [0m\n        Same as -h\n\n    \e[1m-i input_file\e[0m\n        The input file\
      \ contains a background model, in any of the supported\n        formats.\n\n\
      \        Alternatively, the background model can be specified by combining\n\
      \        the options \e[33m-org\e[0m, \e[33m-bg\e[0m.\n\n        If no input\
      \ file is specified, the standard input is used. This\n        allows to use\
      \ the command within a pipe.\n\n    \e[1m-org organism_name\e[0m\n        Specify\
      \ an organism supported in RSAT, in order to load a background\n        model\
      \ from the pre-computed organism-specific models supported in\n        RSAT.\
      \ This option must be combined with the optin \e[33m-bg\e[0m.\n\n        \e\
      [1mNote:\e[0m Specify the format of the background model with '-from'\n    \
      \    option. Accepted values are oligos and dyad.\n\n    \e[1m-bg background\
      \ model\e[0m\n        Type of sequences used as background model for estimating\
      \ expected\n        oligonucleotide frequencies.\n\n        Supported models:\
      \ see the help of \e[33mchoose-background-model\e[0m\n\n    \e[1m-seq_type\e\
      [0m\n        Sequence type (dna | protein).\n\n    \e[1m-markov #\e[0m\n   \
      \     Markov chain order for the background model.\n\n    \e[1m-noov\e[0m\n\
      \        Prevent overlap between successive occurrences of self-overlpping\n\
      \        words.\n\n        See \e[33moligo-analysis\e[0m for more details on\
      \ this option\n\n    \e[1m-ovlp\e[0m\n        Count overlapping occurrences\
      \ of self-overlpping words.\n\n        See \e[33moligo-analysis\e[0m for more\
      \ details on this option\n\n    \e[1m-1str\e[0m\n        Strand-sensitive background\
      \ model\n\n    \e[1m-2str\e[0m\n        Strand-insensitive background model\n\
      \n    \e[1m-o outputfile\e[0m\n        If no output file is specified, the standard\
      \ output is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-from input_format\e[0m\n        Input format.\n\n        Supported:\
      \ motifsampler,ms,oligo-analysis,meme,oligos,dyads (see\n        description\
      \ below).\n\n    \e[1m-to output_format\e[0m\n        Output format.\n\n   \
      \     Supported: transitions, tab, oligo-analysis, oligos, meme,\n        motifsampler,\
      \ ms, inclusive, patser, tables.\n\n    \e[1m-bg_pseudo #\e[0m\n        Pseudo\
      \ frequency for the background models. Value must be a real\n        between\
      \ 0 and 1 (default: 0.01) If the training sequence length (L)\n        is known,\
      \ the value can be set to square-root of L divided by\n        L+squareroot\
      \ of L\n\n    \e[1m-decimals #\e[0m\n        Number of decimals to print or\
      \ the transition probabilities.\n\n    \e[1m-to2str\e[0m\n        Convert to\
      \ a strand-insensitive background model, by averaging\n        transition frequencies\
      \ on each pair of reverse complements.\n\n\e[1mSEE ALSO\e[0m\n    \e[1mchoose-background-model\e\
      [0m\n        Indicate the file path of pre-computed background models for the\n\
      \        organisms supported in RSAT.\n\n    \e[1mseq-proba\e[0m\n        Calculate\
      \ the probability of a sequence fiven a background model.\n\n    \e[1mmatrix-scan\e\
      [0m\n        Scan sequences with a PSSM, accepting various background models.\n\
      \n    \e[1mpatser\e[0m\n        Scan sequences with a PSSM. Program developed\
      \ by Jerry Hertz.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - gene-info
    positional:
    - !Positional
      description: USAGE
      position: 0
      name: gene-info
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: genomics
      optional: false
    - !Positional
      description: gene-info -org yeast -i query_file.txt
      position: 0
      name: query.
      optional: false
    named:
    - !Flag
      description: display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: organism
      synonyms:
      - -org
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: query. can be reiterated within the same command line
      synonyms:
      - -q
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: query file
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: output file
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: full match only (no substring matching)
      synonyms:
      - -full
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not print the query at the beginning of each line
      synonyms:
      - -noquery
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "match queries against the description\n(in addition to gene ID\
        \ and  names)"
      synonyms:
      - -descr
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Feature type.\nSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon"
      synonyms:
      - -feattype
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tgene-info\n\nUSAGE\n\tgene-info -org organism -q query\n\t\
      gene-info -org organism -q query1 -q query2 -q query3 ...\n\tgene-info -org\
      \ organism i query_file\n\nDESCRIPTION\n\tReturns the information about genes\
      \ (CDS, mRNA, ...) specified\n\teither by their identifier, name, or by any\
      \ supported synonym.\n\n\tSearches can also be done by specifying a sub-string\
      \ of the\n\tgene descriptions. Regular expressions are supported.\n\nCATEGORY\n\
      \tgenomics\n\nOPTIONS\n\t-h\tdisplay full help message\n\t-help\tdisplay options\n\
      \t-v\tverbose\n\t-org\torganism\n\t-q\tquery. can be reiterated within the same\
      \ command line\n\t-i\tquery file\n\t-o\toutput file\n\t-full\tfull match only\
      \ (no substring matching)\n\t-noquery\n\t\tdo not print the query at the beginning\
      \ of each line\n\t-descr\tmatch queries against the description\n\t\t(in addition\
      \ to gene ID and  names)\n\t-feattype\n\t\tFeature type.\n\t\tSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon\n\
      QUERY\n\tThe simplest way to enter a query is with the -q option :\n\t    the\
      \ query can be a ORF identifier\n\t\tgene-info -org yeast -q YML115C\n\t   \
      \ or a gene name\n\t\tgene-info -org yeast -q arg81\n\n\tRegular expressions\
      \ can be used in the query. In this case, it is safer to\n\tquote the query\n\
      \t\tgene-info -org yeast -q 'arg.*'\n\t\tgene-info -org yeast -q '.*4'\n\n\t\
      The search is case insensitive.\n\n\tSeveral queries can be combined on the\
      \ command line by\n\titerative use of the -q command :\n\t\tgene-info -org yeast\
      \ -q pho5 -q pho81 -q pho11\n\n\tAlternatively, a list of queries can be provided\
      \ in a text\n\tfile. The first word of each line is considered as a new\n\t\
      query.\n\t\tgene-info -org yeast -i query_file.txt\n\nSYNONYMS\n\tIt often happens\
      \ that a gene bears several names.\n\tgene-info will look for all synonyms of\
      \ the query.\n\t\tgene-info -org yeast -q nil1\n\twill provide the information\
      \ about its synonym GAT1.\n\nWEB VERSION\n\thttp://www.bigre.ulb.ac.be/bioinformatics/rsa-tools/\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - compare-scores
    positional:
    - !Positional
      description: 1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: compare-scores
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: util
      optional: false
    - !Positional
      description: -lc, -uc
      position: 1
      name: headers.
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(use recursively to indicate several input files)\ninput file.\n\
        At least 2 different input files must be specified.\nThe input files each\
        \ contain a table with several columns,\nseparated by tabulations (      ).\n\
        The first column of each input file contains the key."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: input_file
      optional: true
    - !Flag
      description: "list of files specified on the command line.\nAll following arguments\
        \ are considered as input file"
      synonyms:
      - -files
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Specify a file containing the list of files to be compared.\n\
        This is especially useful for long file lists of input files\n(e.g. > 500\
        \ files)."
      synonyms:
      - -filelist
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: "format (default: profiles)\nSupported formats: classes,profiles\n\
        Profiles: tab-delimited file with one column per file, and one\nrow per object\
        \ to which a score was assigned.\nClasses: 3-column tab-delimited files. The\
        \ respective columns\nindicate:\n- object\n- input file\n- score"
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: export
      optional: true
    - !Flag
      description: the first line of each input file as column
      synonyms:
      - -header
      args: !SimpleFlagArg
        name: use
      optional: true
    - !Flag
      description: "null string (default <NULL>) displayed when one\nfile contains\
        \ no value for a given key)"
      synonyms:
      - -null
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: sort IDs numerically rather than alphabetically
      synonyms:
      - -numeric
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: sort IDs numerically in a decreasing order
      synonyms:
      - -decreasing
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: remove path (directory) from file names in the header
      synonyms:
      - -basename
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Suppress a given substring from file names in the header\nThis\
        \ option can be used iteratively to suppress different\nsubstrings.\nExample:\n\
        -suppress '.tab' -suppress 'oligos_'\nThe substring may contain a regular\
        \ expression.\nExample:\n-suppress 'w+_'"
      synonyms:
      - -suppress
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Substitute a given substring from file names in the header\nby\
        \ a specified substring.\nExample:\n-subst 'oligo_' 'ol'"
      synonyms:
      - -subst
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tcompare-scores\n\n        1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nUSAGE\n        compare-scores -i inputfile_1 -i inputfile_2 [-i inputfile_n]\
      \ [-o outputfile] [-v] [-ic #] -sc #\n\nDESCRIPTION\n\n        Compare the score\
      \ associated to keys in different input files\n\t(basically, this amounts to\
      \ join different tables on the basis\n\tof a unique identifier).\n\nCATEGORY\n\
      \tutil\n\nOPTIONS\n        -h      (must be first argument) display full help\
      \ message\n\n        -help   (must be first argument) display options\n\n\t\
      -v\tverbose\n\n\t-i input_file (use recursively to indicate several input files)\n\
      \t\tinput file. \n\t\tAt least 2 different input files must be specified.\n\t\
      \tThe input files each contain a table with several columns,\n\t\tseparated\
      \ by tabulations (\t). \n\t\tThe first column of each input file contains the\
      \ key.\n\n\t-files\tlist of files specified on the command line. \n\t\tAll following\
      \ arguments are considered as input file\n\n\t-filelist\n\t\tSpecify a file\
      \ containing the list of files to be compared.\n\t\tThis is especially useful\
      \ for long file lists of input files\n\t\t(e.g. > 500 files).\n\n\t-o outputfile\n\
      \t\tif not specified, the standard output is used.\n\t\tThis allows to place\
      \ the command within a pipe.\n\n\t-format\texport format (default: profiles)\n\
      \t\tSupported formats: classes,profiles\n\t\t\n\t\tProfiles: tab-delimited file\
      \ with one column per file, and one\n\t\trow per object to which a score was\
      \ assigned. \n\n\t\tClasses: 3-column tab-delimited files. The respective columns\n\
      \t\tindicate: \n\t\t\t  - object\n\t\t\t  - input file\n\t\t\t  - score\n\n\t\
      -sc\tscore column. \n\n\t-sc#\tscore column for the #th file\n\n\t-ic\tIdentifier\
      \ column (default 1) \n\n\t-ic#\tidentifier column for the #th file\n\n\t-header\
      \ use the first line of each input file as column\n\t        headers.\n\n\t\
      -lc, -uc\n\t        By default, the comparison is case-insensitive, but\n  \
      \    \t        the ID case is maintained in the output. This can\n      \t \
      \       however b modified with the options '-lc' (IDs\n      \t        converted\
      \ to lowercases) and '-uc' (IDs converted to\n      \t        uppercases).\n\
      \n\t-null   null string (default <NULL>) displayed when one\n\t\tfile contains\
      \ no value for a given key)\n\n\t-numeric\n\t\tsort IDs numerically rather than\
      \ alphabetically\n\n\t-decreasing\n\t\tsort IDs numerically in a decreasing\
      \ order\n\n\t-basename\n\t\tremove path (directory) from file names in the header\n\
      \n\t-suppress\n\t\tSuppress a given substring from file names in the header\n\
      \t\tThis option can be used iteratively to suppress different\n\t\tsubstrings.\n\
      \n\t\tExample:\n\t\t\t-suppress '.tab' -suppress 'oligos_'\n\t\t\t\n\t\tThe\
      \ substring may contain a regular expression.\n\t\t\n\t\tExample:\n\t\t\t-suppress\
      \ 'w+_'\n\t-subst\n\t\tSubstitute a given substring from file names in the header\n\
      \t\tby a specified substring.\n\t\t\n\t\tExample:\n\t\t\t-subst 'oligo_' 'ol'\n\
      \t\t\n\nINPUT FORMAT\n\teach line of the input file provides the score for a\
      \ single key. \n\tThe first word of each line must be the key.\n\tThe score\
      \ can be located in any column, which will be indicated with the parameter -sc.\n\
      \tLines beginning with a semicolumn (;) are ignored.\n\t\nOUTPUT FORMAT\n\t\
      One line per key. The first column is the key, followed by 1 column for \n\t\
      the score associated to that key in each of the input files specified.\n\t\n\
      EXAMPLES\n       compare-scores -v -i data_file_1 -i data_file_2 -sc 4  -o myresult\n\
      \t\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - matrix-scan-quick
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: matrix-scan-quick
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '20160208'
      optional: false
    - !Positional
      description: pattern matching
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: 'USAGE        '
      position: 1
      name: PSSM
      optional: false
    named:
    - !Flag
      description: "#                  read sequence from filename # (FASTA format).\n\
        if not specified, the standard input is used."
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#                  print the output to filename #.\nif not specified,\
        \ the standard output is used."
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#                  read the matrix # or first matrix in # (must
        be in tab format).'
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#             use # as background model (must be in INCLUSive\
        \ format).\nby default an equiprobable model is used."
      synonyms:
      - -bgfile
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: scan both DNA strands.
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: scan only one DNA strand.
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#                  capture sites with a score >= #.\ncapture sites\
        \ with a P-value <= # if -distrib is used."
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#               set the matrix name to #.'
      synonyms:
      - -name
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#            read score distrib file # (generated by matrix-distrib).'
      synonyms:
      - -distrib
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#           precision parameter for the -return distrib option.'
      synonyms:
      - -decimals
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#             pseudo-count for the matrix (1.0 by default).'
      synonyms:
      - -pseudo
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: only report the first hit per sequence.
      synonyms:
      - -first_hit_per_seq
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "[start|end|center]\nspecify the origin for the calculation of\
        \ positions\n(see matrix-scan manual for details)."
      synonyms:
      - -origin
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#             add an offset to the origin (0 by default)'
      synonyms:
      - -offset
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\nNAME\n        matrix-scan-quick\n\nVERSION\n        20160208\n\n\
      AUTHOR\n        Matthieu Defrance <matthieu.dc.defrance@ulb.ac.be>\n\nDESCRIPTION\n\
      \        Faster but limited version of matrix-scan.\n\nCATEGORY\n        sequences\n\
      \        pattern matching\n        PSSM\n        \nUSAGE        \n        matrix-scan-quick\
      \ -m matrix [-i sequences] [-bgfile background] [-h | --help]\n\nINPUT FORMATS\n\
      \  Sequence file\n    Only sequences in FASTA format are supported.\n\n  Matrix\
      \ file\n    Only the tab format is supported.\n    Only the first matrix in\
      \ the file is used.\n    See convert-matrix for details.\n\n  Background file\n\
      \    Only the INCLUSive format is supported.\n    See convert-background-model\
      \ for details.\n\nOUTPUT FORMAT\n    The output is a tab-delimited file, with\
      \ one row per match.\n    If the option -t is not specified, the results will\
      \ not be displayed.\n\nSCORING SCHEME\n    See matrix-scan -h for details.\n\
      \nARGUMENTS\n    -h, --help            show this help message and exit.\n\n\
      \    -i #                  read sequence from filename # (FASTA format).\n \
      \                         if not specified, the standard input is used.\n\n\
      \    -o #                  print the output to filename #.\n               \
      \           if not specified, the standard output is used.\n\n    -m #     \
      \             read the matrix # or first matrix in # (must be in tab format).\n\
      \ \n    -bgfile #             use # as background model (must be in INCLUSive\
      \ format).\n                          by default an equiprobable model is used.\n\
      \n    -2str                 scan both DNA strands.\n\n    -1str            \
      \     scan only one DNA strand.\n\n    -t #                  capture sites with\
      \ a score >= #.\n                          capture sites with a P-value <= #\
      \ if -distrib is used.\n\n    -name #               set the matrix name to #.\n\
      \n    -return distrib       output the weight score distribution.\n\n    -return\
      \ sites         output the list of sites (default).\n\n    -distrib #      \
      \      read score distrib file # (generated by matrix-distrib).\n\n    -decimals\
      \ #           precision parameter for the -return distrib option.\n\n    -pseudo\
      \ #             pseudo-count for the matrix (1.0 by default).\n\n    -first_hit_per_seq\
      \    only report the first hit per sequence.\n\n    -origin [start|end|center]\n\
      \                          specify the origin for the calculation of positions\n\
      \                           (see matrix-scan manual for details).\n\n    -offset\
      \ #             add an offset to the origin (0 by default)\n\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - count-words
    positional:
    - !Positional
      description: AUTHOR
      position: 0
      name: count-words
      optional: false
    - !Positional
      description: pattern discovery
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: '#             change verbosity level (0, 1, 2)'
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#             set oligomer length to # (monad size when using
        dyads)'
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#             input filename'
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: add reverse complement
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not add reverse complement
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#-#          spacing between the two parts of the dyads from #
        to #'
      synonyms:
      - -sp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not allow overlapping occurrences
      synonyms:
      - -noov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: group reverse complement with the direct sequence
      synonyms:
      - -grouprc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not group reverse complement with the direct sequence
      synonyms:
      - -nogrouprc
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag: !Flag
      description: print version
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "NAME\n        count-words\n\nAUTHOR\n        Matthieu Defrance\n\n\
      DESCRIPTION\n        calculates oligomer frequencies from a set of sequences\n\
      \nCATEGORY\n        sequences\n        pattern discovery\n\nUSAGE\n        count-words\
      \ -l length -i inputfile\n\nARGUMENTS\n    INPUT OPTIONS\n        --version\
      \        print version\n        -v #             change verbosity level (0,\
      \ 1, 2)\n        -l #             set oligomer length to # (monad size when\
      \ using dyads)\n        -i #             input filename\n        -2str     \
      \       add reverse complement\n        -1str            do not add reverse\
      \ complement\n        -sp #-#          spacing between the two parts of the\
      \ dyads from # to # \n        -noov            do not allow overlapping occurrences\n\
      \        -grouprc         group reverse complement with the direct sequence\n\
      \        -nogrouprc       do not group reverse complement with the direct sequence\n\
      \n\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - classfreq
    positional:
    - !Positional
      description: AUTHORS
      position: 0
      name: classfreq
      optional: false
    - !Positional
      description: USAGE
      position: 0
      name: statistics
      optional: false
    - !Positional
      description: is the count of (x <= upperlimit)
      position: 0
      name: cum
      optional: false
    - !Positional
      description: is the count of (x >= lowerlimit)
      position: 1
      name: dcum
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Only the numbers will be read, other words are ignored.\nif not\
        \ specified, the standard input is used.\nThis allows to place the command\
        \ within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: "class interval. If not specified, takes the value\n(max - min)/20\n\
        so that 21 classes are specified."
      synonyms:
      - -ci
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "column to which apply the program. This option can\nbe used iteratively."
      synonyms:
      - -col
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#  nusmbers strictly smaller than # are not taken into account.\n\
        # also determines the lower limit of the first class."
      synonyms:
      - -min
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#  numbers strictly greater than # are not taken into account.'
      synonyms:
      - -max
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# inferior limit for the classes to display\nvalues lower than\
        \ this limit are however taken into account\nin the calculation of statistics\
        \ (mean, variance, ...) and of\nclass frequencies (In contrast with the -min\
        \ option)."
      synonyms:
      - -from
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#   superior limit for the classes to display\nvalues higher than\
        \ this limit are however taken into account\nin the calculation of statistics\
        \ (mean, variance, ...) and of\nclass frequencies (In contrast with the -max\
        \ option)."
      synonyms:
      - -to
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# threshold\nOnly display classes with absolute frequency higher\n\
        than or equal to the threshold. This option is useful\nfor sparse data, where\
        \ many classes do not contain any\nobservation (-thr 1)."
      synonyms:
      - -thr
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\nNAME\n\tclassfreq\n\nAUTHORS\n\n\tFirst version dates from July\
      \ 1997 by Jacques van Helden\n\t(jvhelden@ulb.ac.be).\n\n\tUpgrades in 2007\
      \ by Sylvain Brohee (sylvain@bigre.ulb.ac.be).\n\nDESCRIPTION\n\n\tComputes\
      \ frequency distribution of numerical values found in a\n\tcolumn of a tab-delimited\
      \ text file.\n\n\tClass intervals can be specified as a fixed value (-ci #)\
      \ or\n\tautomatically derived from the data.\n\nCATEGORY\n\tstatistics\n\nUSAGE\n\
      \n\tclassfreq [-i inputfile] [-o outputfile] [-ci class_interval]\n\t[-min #][-max\
      \ #][-s][-p] [-col #]\n\nINPUT\n\n\tAny text file containing numbers. Will be\
      \ read as a number any\n\tword containing only digits, plus optionnally a dot\
      \ (decimal\n\tseparator), and a sign (- or +). Scientific notation (ex:\n\t\
      3.5E-7) is also supported.  Words that do not correspond to\n\tnumbers are ignored.\n\
      \n\tLines starting with a semicolon (;) or with # are ignored (this\n\tallows\
      \ to include comments in the input file).\n\nOUTPUT\n\tResults are printed as\
      \ one line per class, with the following information:\n\t- limits of the class\
      \ (in the form [lower, upper[).\n        - class center\n\t- absolute frequency\n\
      \        - cumulated frequency (inclusive)\n        - inverted cumulated frequency\
      \ (inclusive)\n        - relative frequency\n        - cumulated relative frequency\
      \ (inclusive)\n        - inverted cumulated relative frequency (inclusive)\n\
      \n\tWith the option -v, the list of class frequencies is followed by a\n\tshort\
      \ statistical report on the data.\n\n\tWithin each class are counted all numbers\
      \ that are\n\t- greater or equal to the lower limit, and\n\t- strictly smaller\
      \ than the upper limit of the class\n\t(lowerlimit <= x < upperlimit).\n\n\t\
      Cumulative frequencies are inclusive, i.e. :\n\tcum\t   is the count of (x <=\
      \ upperlimit)\n\tdcum\t   is the count of (x >= lowerlimit)\n\nOPTIONS\n\n \
      \       -h      (must be first argument) display full help message\n\n     \
      \   -help   (must be first argument) display options\n\n\t-v\tverbose\n\n\t\
      -i inputfile\n\t\tOnly the numbers will be read, other words are ignored.\n\t\
      \tif not specified, the standard input is used.\n\t\tThis allows to place the\
      \ command within a pipe.\n\n\t-o outputfile\n\t\tif not specified, the standard\
      \ output is used.\n\t\tThis allows to place the command within a pipe.\n\n\t\
      -ci\tclass interval. If not specified, takes the value\n\t\t\t(max - min)/20\n\
      \t\tso that 21 classes are specified.\n\n\t-col\tcolumn to which apply the program.\
      \ This option can\n\t\tbe used iteratively.\n\n\t-min #\tnusmbers strictly smaller\
      \ than # are not taken into account.\n\t\t# also determines the lower limit\
      \ of the first class.\n\n\t-max #\tnumbers strictly greater than # are not taken\
      \ into account.\n\n\t-from #\tinferior limit for the classes to display\n\t\t\
      values lower than this limit are however taken into account\n\t\tin the calculation\
      \ of statistics (mean, variance, ...) and of\n\t\tclass frequencies (In contrast\
      \ with the -min option).\n\n\t-to #\tsuperior limit for the classes to display\n\
      \t\tvalues higher than this limit are however taken into account\n\t\tin the\
      \ calculation of statistics (mean, variance, ...) and of\n\t\tclass frequencies\
      \ (In contrast with the -max option).\n\n\t-v\tverbose.\n\t\tReturn some statistics\
      \ over the data :\n\t\t- total # of elements,\n\t\t- mean value\n\t\t- standard\
      \ deviation (std)\n\t\t- mininum\n\t\t- maximum\n\t\tIf -min or -max options\
      \ are used, the statistics only take\n\t\tinto account the numbers falling into\
      \ this range.\n\n\t-thr # threshold\n\t        Only display classes with absolute\
      \ frequency higher\n\t        than or equal to the threshold. This option is\
      \ useful\n\t        for sparse data, where many classes do not contain any\n\
      \t        observation (-thr 1).\n\nEXAMPLES\n\tTo get the distribution of all\
      \ numbers x such that 0 <= x <= 1000,\n\tgrouped within classes of interval\
      \ 100 :\n\t\tclassfreq -i myfile -ci 100 -min 0 -max 1000\n\tNote that the limits\
      \ of the last class will be [1000, 1100[, though\n\tthis class will only contain\
      \ the occurences of 1000 (since numbers\n\tgreater than 1000 are discarded).\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - seq-proba
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: seq-proba
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: util
      optional: false
    - !Positional
      description: matrix-scan
      position: 0
      name: convert-background-model
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    seq-proba\n\n\e[1mDESCRIPTION\e[0m\n    Calculates\
      \ the probability of a sequence, given a background model.\n\n\e[1mAUTHORS\e\
      [0m\n    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mCATEGORY\e[0m\n    util\n\n\
      \e[1mUSAGE\e[0m\n    seq-proba [-i inputfile] [-o outputfile] [-v]\n\n\e[1mINPUT\
      \ FORMAT\e[0m\n    A sequence file, in any of the supported formats.\n\n\e[1mOUTPUT\
      \ FORMAT\e[0m\n    A tab-delimited file with one row per sequence, and two columns\n\
      \    indicating (1) sequence ID; (2) sequence probability given the\n    background\
      \ model.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity\
      \ (detail in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display\
      \ full help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-i\
      \ inputfile\e[0m\n        If no input file is specified, the standard input\
      \ is used. This\n        allows to use the command within a pipe.\n\n    \e\
      [1m-seq_format seq_format\e[0m\n        Sequence format.\n\n    \e[1m-bgfile\
      \ background_file\e[0m\n        Background model file.\n\n        This argument\
      \ can be used iteratively to speciy alternative\n        backgound models. In\
      \ this case, the program returns the\n        probabilities corresponding to\
      \ each model in separate columns.\n\n    \e[1m-bg_format bg_format\e[0m\n  \
      \      Format of the background model. Supported: all input formats\n      \
      \  supported in convert-background-model.\n\n    \e[1m-o outputfile\e[0m\n \
      \       If no output file is specified, the standard output is used. This\n\
      \        allows to use the command within a pipe.\n\n    \e[1m-return return_fields\e\
      [0m\n        List of fields to return (default: id,proba_b).\n\n        Supported\
      \ fields: id,proba_b,len,seq, detail\n\n        \e[1mid\e[0m  Sequence identifier.\n\
      \n        \e[1mproba_b\e[0m\n            Probability of the sequence given the\
      \ background model.\n\n        \e[1mlen\e[0m Sequence length.\n\n        \e\
      [1mseq\e[0m Sequence.\n\n        \e[1mdetail\e[0m\n            Complete detail\
      \ of the computation with transition frequencies +\n            the incremental\
      \ computation of the probability.\n\n\e[1mSEE ALSO\e[0m\n    convert-background-model\n\
      \    matrix-scan\n\n\e[1mWISH LIST\e[0m\n    Support sequences with IUPAC letters\n\
      \        This should be relatively easy to implement.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - random-genes
    positional:
    - !Positional
      description: 2002 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: random-genes
      optional: false
    - !Positional
      description: "There are several modes of utilization.\n(1) -n       returns\
        \ random genes.\n(2) -g       groups. Create a group file with g groups of\
        \ n\ngenes (n must be specified)\n(3) -pairs   returns random pairs of genes.\n\
        (4) -fam     takes a group file (see multiple-group-analysis)\nas input, and\
        \ return another group file with\nthe same number of groups, the same number\n\
        of random genes per group as in the input\nfile. This allows to deal with\
        \ groups of\ndifferent sizes in the same file, and to\nperform negative controls\
        \ in exactly the same\nconditions as the test."
      position: 0
      name: organism.
      optional: false
    - !Positional
      description: USAGE
      position: 0
      name: util
      optional: false
    - !Positional
      description: It is a text file containing 2 columns separated by
      position: 0
      name: families.
      optional: false
    - !Positional
      description: ; genes responding to Phosphate stress
      position: 0
      name: Example
      optional: false
    - !Positional
      description: PHO
      position: 1
      name: pho5
      optional: false
    - !Positional
      description: PHO
      position: 2
      name: pho8
      optional: false
    - !Positional
      description: NIT
      position: 0
      name: DAL5
      optional: false
    - !Positional
      description: NIT
      position: 1
      name: GAP1
      optional: false
    named:
    - !Flag
      description: (must be first argument) display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: organism
      synonyms:
      - -org
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "alternate feature table. This option allows to speify\nan alternate\
        \ file where the ORF locations are found.\nSee below for a description of\
        \ the feature file format."
      synonyms:
      - -features
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Feature type.\nSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon"
      synonyms:
      - -feattype
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "random selection with replacement\n(a same ORF might appear several\
        \ times in the output)"
      synonyms:
      - -replace
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#    number of random genes to return'
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#    groups (number of random groups).'
      synonyms:
      - -g
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nnumber of random pairs of genes to return. Each row of\nthe\
        \ output contains two genes, separated by a tab."
      synonyms:
      - -pairs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "file\nA 2-column file containing gene names in the first\ncolumn\
        \ and group (cluster) name in the second column.\n(same format as for multiple-group-analysis).\n\
        The program returns a file of the same size as the\ninput, where input genes\
        \ have been substituted by\nrandom genes."
      synonyms:
      - -fam
      args: !SimpleFlagArg
        name: group
      optional: true
    - !Flag
      description: "#\n(requires the option -fam)\nNumber of repetitions for each\
        \ input group.\nThis option generates, for each input group, R output\nrandom\
        \ gene selections of the same size."
      synonyms:
      - -repeat
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: (must be first argument) display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\trandom-genes\n\n        2002 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nDESCRIPTION\n\tReturns a random selection of genes for the specified\n\torganism.\n\
      \n\tThere are several modes of utilization.\n\n\t   (1) -n\treturns random genes.\n\
      \           (2) -g       groups. Create a group file with g groups of n\n\t\t\
      \tgenes (n must be specified)\n\t   (3) -pairs\treturns random pairs of genes.\n\
      \t   (4) -fam\ttakes a group file (see multiple-group-analysis)\n\t\t\tas input,\
      \ and return another group file with\n\t\t\tthe same number of groups, the same\
      \ number\n\t\t\tof random genes per group as in the input\n\t\t\tfile. This\
      \ allows to deal with groups of\n\t\t\tdifferent sizes in the same file, and\
      \ to\n\t\t\tperform negative controls in exactly the same\n\t\t\tconditions\
      \ as the test.\n\nCATEGORY\n\tutil\n\nUSAGE\n        random-genes [-i inputfile]\
      \ [-o outputfile] [-v]\n\nOPTIONS\n\t-h\t(must be first argument) display full\
      \ help message\n\t-help\t(must be first argument) display options\n\t-v\tverbose\n\
      \t-o outputfile\n\t\tif not specified, the standard output is used.\n\t\tThis\
      \ allows to place the command within a pipe.\n\t-org\torganism\n\t-features\t\
      \n\t\talternate feature table. This option allows to speify\n\t\tan alternate\
      \ file where the ORF locations are found. \n\t\tSee below for a description\
      \ of the feature file format.\n\t-feattype\n\t\tFeature type.\n\t\tSupported:\
      \ gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon\n\t-replace\t\
      \n\t\trandom selection with replacement\n\t\t(a same ORF might appear several\
      \ times in the output)\n\n    Exporting g groups of n genes\n\t-n #\tnumber\
      \ of random genes to return\n\t-g #\tgroups (number of random groups).\n\n \
      \   Exporting pairs of genes\n\t-pairs #\n\t\tnumber of random pairs of genes\
      \ to return. Each row of\n\t\tthe output contains two genes, separated by a\
      \ tab.\n\n    Using a group file as template\n\t-fam group file\n\t\tA 2-column\
      \ file containing gene names in the first\n\t\tcolumn and group (cluster) name\
      \ in the second column.\n\t\t(same format as for multiple-group-analysis).\n\
      \t\tThe program returns a file of the same size as the\n\t\tinput, where input\
      \ genes have been substituted by \n\t\trandom genes.\n\t-repeat #\n\t\t(requires\
      \ the option -fam)\n\t\tNumber of repetitions for each input group. \n\t\tThis\
      \ option generates, for each input group, R output\n\t\trandom gene selections\
      \ of the same size.\n\nFILE FORMATS\n    CLASS FILE\n\tThe class file specifies\
      \ the composition of several gene\n\tfamilies.  It is a text file containing\
      \ 2 columns separated by\n\ta tab character.\n\n\t    col 1:   class member\n\
      \t    col 2:   class name\n\n        Additional columns are ignored. \n\n\t\
      Lines starting with a semicolumn (;) are ignored, allowing to\n\tdocument the\
      \ class files with comments.\n\n        A given element (e.g. gene) can belong\
      \ simultaneously to\n        several families. In such a case, the element will\
      \ appear on\n        several rows (one per class),\n\n\tExample\n\t\t; genes\
      \ responding to Phosphate stress\n\t\tpho5\tPHO\n\t\tpho8\tPHO\n\t\t; genes\
      \ responding to nitrogen starvation\n\t\tDAL5    NIT\n\t\tGAP1    NIT\n\t\t\
      ...\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - reverse-complement
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: reverse-complement
      optional: false
    - !Positional
      description: "\e[1mAUTHORS\e[0m"
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 1
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 2
      name: util
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    reverse-complement\n\n\e[1mDESCRIPTION\e[0m\n\
      \    Returns the reverse complement of input DNA sequences or IUPAC-formatted\n\
      \    motifs. The IUPAC code for ambiguous nucleotides is supported, as well\n\
      \    as dyad-type spacings.\n\n\e[1mCATEGORY\e[0m\n    sequences\n\n\e[1mAUTHORS\e\
      [0m\n    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mCATEGORY\e[0m\n    util\n\n\
      \e[1mUSAGE\e[0m\n    reverse-complement [-i inputfile] [-o outputfile] [-v #]\
      \ [...]\n\n\e[1mINPUT FORMAT\e[0m\n    Any input format supported by \e[33mconvert-seq\e\
      [0m. For details, type convert-seq\n    -h\n\n    The standard degenerate nucleotide\
      \ code of the IUPAC-IUB commission is\n    supported. The pattern sequence should\
      \ thus only contain the following\n    characters: A, T, G, C single nucleotide\
      \ codes R = A or G Y = C or T M =\n    A or C K = G or T S = G or C W = A or\
      \ T B = all except A D = all except\n    C H = all except G V = all except T\
      \ N = any nucleotide\n\n    Upper and lower case are considered equivalent.\
      \ The multiplier (ex: A{5}\n    = AAAAA, T{5,10} = any combination of 5 to 10\
      \ Ts) can be used, but in\n    this case the input sequence must be embraced\
      \ in single quotes (ex:\n    'CCCN{8}GGG').\n\n    Alternatively to the degenerate\
      \ code, brackets can be used (ex: [AG]\n    means A or G).\n\n\e[1mEXAMPLES\e\
      [0m\n     echo GATAAG | reverse-complement -in_format raw\n        Returns GTTATC\n\
      \n     echo TTTRTT  | reverse-complement -in_format raw\n        returns AAYAAA\n\
      \n     echo 'GAT[TA]A' | reverse-complement -in_format raw\n        returns\
      \ T[TA]ATC\n\n     echo 'cccn{8,10}aaa' | reverse-complement -in_format raw\
      \ -lc\n        returns tttn{8,10}ggg\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n\
      \        Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n     \
      \   Same as -h\n\n    \e[1m-i inputfile\e[0m\n        If no input file is specified,\
      \ the standard input is used. This\n        allows to use the command within\
      \ a pipe.\n\n    \e[1m-o outputfile\e[0m\n        If no output file is specified,\
      \ the standard output is used. This\n        allows to use the command within\
      \ a pipe.\n\n    \e[1m-in_format input_format\e[0m\n        Input sequence format.\
      \ Can be any input format supported by\n        \e[33mconvert-seq\e[0m.\n\n\
      \        Default: fasta.\n\n    \e[1m-out_format output_format\e[0m\n      \
      \  Output sequence format. Can be any output format supported by\n        \e\
      [33mconvert-seq\e[0m.\n\n        Default: fasta.\n\n    \e[1m-lc\e[0m Export\
      \ sequences in lowercases.\n\n    \e[1m-uc\e[0m Export sequences in uppercases.\n\
      \n    \e[1m-add\e[0m\n        Add the reverse complement besides the direct\
      \ sequences of the\n        input. The result is a tab-delimited file with 2\
      \ columns: 1) input\n        sequence 2) reverse complement\n\n    \e[1m-sep\e\
      [0m\n        Output separator between direct and reverse complementary sequence.\n\
      \n        Default: \\t (tab character)\n\n        This option is only valid\
      \ when the option -add is active.\n\n\e[1mSEE ALSO\e[0m\n  \e[1mconvert-seq\e\
      [0m\n    \e[33mconvert-seq\e[0m includes an option -addrc that adds the reverse\
      \ complement.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - compare-qualities
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: compare-qualities
      optional: false
    - !Positional
      description: "\e[1mAUTHORS\e[0m"
      position: 0
      name: comparison.
      optional: false
    - !Positional
      description: PSSM
      position: 0
      name: util
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: evaluation
      optional: false
    - !Positional
      description: "\e[1mOPTIONS\e[0m"
      position: 0
      name: ALL
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    compare-qualities\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Compare the empirical distributioins of weight\
      \ score obtained with\n    different matrices in a given sequence set.\n\n \
      \   In order to estimate the capability of a PSSM to distinguish bona fide\n\
      \    binding sites from genome background, we propose a method that relies on\n\
      \    the combined analysis of theoretical and empirical score distributions\n\
      \    in positive and negative control sets.\n\n    \e[1mmatrix-quality\e[0m\
      \ computes the theoretical distribution of scores for a\n    PSSM, and compares\
      \ it to several empirical distributions obtained from\n    various sequence\
      \ sets.\n\n    There might be several PSSMs capable to detect similar binding\
      \ motifs,\n    we can measure their quality independently, althougth we would\
      \ like to\n    detect the one with the best perfromance in orther to use only\
      \ one.\n\n    With the different score distributions obtained with \e[1mmatrix-quality\e\
      [0m it\n    should be possible to compare the detection capability of a set\
      \ of\n    matrices over the same set of sequences.\n\n    This is done using\
      \ the Weight Diference (WD), by default this value is\n    defined as the difference\
      \ between the observed Weigth Score (WS) in all\n    promoters of an organism\
      \ (e.g. Escherichia coli K12) and the expected WS\n    in the theoretical distribution\
      \ of the PSSM for a given P-value (see\n    \e[1mmatrix-distrib\e[0m).\n\n \
      \   Information of compared matrices is returned together with the graphic\n\
      \    comparison.\n\n\e[1mAUTHORS\e[0m\n    Alejandra Medina-Rivera <amedina@lcg.unam.mx>\n\
      \n\e[1mCATEGORY\e[0m\n    util\n    PSSM\n    evaluation\n\n\e[1mUSAGE\e[0m\n\
      \    compare-qualities [-i inputfile] [-o outputfile] [-v #] [...]\n\n\e[1mINPUT\
      \ FORMAT\e[0m\n    Each line contains the output path and prefix for one run\
      \ of matrix\n    quality .\n\n    Eg: /Users/matrix_eval/AgaR/AgaR_eval\n\n\
      \    With this path and prefix the files for score distribitions comparison\n\
      \    and info about the matrix are obtained.\n\n\e[1mOUTPUT FORMAT\e[0m\n  \
      \  Tow files will be created:\n\n    Tab delimited file, containing information\
      \ about all matrices.\n        Matrix_name, sites, consensus, total_IC, column_IC,\
      \ E-value, FPR_50%\n        (LOO), FPR_90% (LOO), FPR_100% (LOO), FPR_50% (matrix_sites),\n\
      \        FPR_90% (matrix_sites), FPR_100% (matrix_sites),FPR_50%\n        (LOO)/FPR_50%\
      \ (matrix_sites)\n\n    Graph displaying FPR_50% (LOO)/FPR_50% (matrix_sites)\
      \ ratio for all\n    matrices in the list. If some matrix doesn't have sites,\
      \ this values\n    will be empty and set to NA\n\n\e[1mSEE ALSO\e[0m\n    \e\
      [1mmatrix-quality\e[0m\n    \e[1mmatrix-distrib\e[0m\n    \e[1mmatrix-scan\e\
      [0m\n    \e[1mconvert-matrix\e[0m\n\n\e[1mWISH LIST\e[0m\n    ALL\n\n\e[1mOPTIONS\e\
      [0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
      \ during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e\
      [1m-help\e[0m\n        Same as -h\n\n    \e[1m-quality_list file_list_matrix_and_quality_file\e\
      [0m\n        Scores comparison, inverse cumulative distribution\n\n    \e[1m-cluster\e\
      [0m\n        Cluster matrix-quality results\n\n    \e[1m-img_format\e[0m\n \
      \       Image format for the plot comparin CV_FPR_50% /\n        Matrix_sites_FPR_50%.\
      \ To display the supported formats, type the\n        following command:\n\n\
      \        XYgraph -h.\n\n        Multiple image formats can be specified either\
      \ by using iteratively\n        the option, or by separating them by commas.\n\
      \n        Example: -img_format png,pdf\n\n    \e[1m-o outputpath\e[0m\n    \
      \    Output directory for the outfiles and the outfigures.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - matrix-clustering
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: matrix-clustering
      optional: false
    - !Positional
      description: "\e[1mConception\e[0m"
      position: 0
      name: Jacques.van-Helden@univ-amu.fr
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: "\e[1mSEE ALSO\e[0m"
      position: 0
      name: computer.
      optional: false
    - !Positional
      description: This label is useful when two motifs for the same TF come from
      position: 0
      name: results.
      optional: false
    - !Positional
      description: "\e[1m-task tasks\e[0m"
      position: 0
      name: displayed.
      optional: false
    - !Positional
      description: Assumes the users already have the description table and
      position: 0
      name: step.
      optional: false
    - !Positional
      description: We suggest use this option for a big set of input motifs > 300
      position: 0
      name: version.
      optional: false
    - !Positional
      description: "\e[1mNOTE:\e[0m By the moment the only a few thresholds can be\
        \ used with this"
      position: 1
      name: motifs.
      optional: false
    - !Positional
      description: 'NOTE: take into account the input file size'
      position: 0
      name: file.
      optional: false
    - !Positional
      description: This parameter can be useful to prevent submission of excessive
      position: 0
      name: warning.
      optional: false
    - !Positional
      description: "\e[33maverage\e[0m (default)"
      position: 0
      name: nodes.
      optional: false
    - !Positional
      description: 'Supported metrics : cor, Ncor, dEucl, NdEucl, logocor, logoDP,'
      position: 0
      name: clustering.
      optional: false
    - !Positional
      description: The hierarchical tree in JSON format is always exported, since
      position: 0
      name: HTML.
      optional: false
    - !Positional
      description: This option is useful when the user wants to explore the data
      position: 0
      name: cluster.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    matrix-clustering\n\n\e[1mDESCRIPTION\e[0m\n \
      \   Taking as input one or several sets of position-specific scoring\n    matrices\
      \ (PSSM), this program applies hierarchical clustering to\n    identify clusters\
      \ of similar motifs. It produces a set of trees (one per\n    cluster) and builds\
      \ branch motifs at each node of each tree by merging\n    the matrices of all\
      \ descendent nodes.\n\n\e[1mAUTHORS\e[0m\n  \e[1mImplementation\e[0m\n    Jaime\
      \ Castro-Mondragon <j.a.c.mondragon@ncmm.uio.no>\n    Jacques.van-Helden@univ-amu.fr\n\
      \n  \e[1mConception\e[0m\n    Jacques van Helden\n    Jaime Castro-Mondragon\n\
      \        The following collaborators contributed to the definition of\n    \
      \    requirements for this program.\n\n    Carl Herrmann\n    Denis Thieffry\n\
      \    Morgane Thomas-Chollier\n\n\e[1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e\
      [0m\n    matrix-clustering [-matrix inputfile] [-o outputfile] [-v ] [...]\n\
      \n\e[1mOUTPUT FORMAT\e[0m\n    This program produces a large number of files\
      \ (similarity matrix, motifs\n    for the internal nodes and roots of the motif\
      \ clusters, dynamic trees to\n    visualised the motif clusters, ...\n\n   \
      \ These files are accessible via an html page\n    [output_prefix]_SUMMARY.html.\
      \ The program also produces a zip archive\n    with all the files to facilitate\
      \ the transfer from a server to the local\n    computer.\n\n\e[1mSEE ALSO\e\
      [0m\n    \e[33mcompare-matrices\e[0m\n        The program \e[33mcompare-matrices\e\
      [0m is used by \e[33mcluster-matrices\e[0m to measure\n        pairwise similarities\
      \ and define the best alignment (offset, strand)\n        between each pair\
      \ of matrices.\n\n\e[1mDEPENDENCIES\e[0m\n    Some R packages are required in\
      \ \e[33mmatrix-clustering\e[0m in order to convert\n    the hierarchical tree\
      \ into different output formats, to manipulate the\n    dendrogram which is\
      \ exported, and to produce heatmaps.\n\n        RJSONIO : http://cran.r-project.org/web/packages/RJSONIO/index.html\n\
      \        ctc : http://www.bioconductor.org/packages/release/bioc/html/ctc.html\n\
      \        dendextend : http://cran.r-project.org/web/packages/dendextend/index.html\n\
      \        gplots : http://cran.r-project.org/web/packages/gplots/index.html\n\
      \n    The JavaScript library \e[33mD3\e[0m (Data Driven Documents) is required\
      \ to\n    visualize the logo forest.\n\n    The option \e[33m-d3_base\e[0m enables\
      \ to connect directly with the server to load\n    the functions of this library.\n\
      \n        D3 : http://d3js.org/\n\n    As many files are produced with \e[33mmatrix-clustering\e\
      [0m we create a dynamic\n    web page giving access to the complete list of\
      \ results. We use the\n    Javascript library \e[33mJQuery\e[0m to create this\
      \ dynamic website.\n\n        JQuery: https://jquery.com/\n\n\e[1mWISH LIST\e\
      [0m\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail\
      \ in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display full\
      \ help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-matrix\
      \ matrix_title input_matrix_file\e[0m\n        The input file contains a set\
      \ of position-specific scoring matrices.\n\n        Example: -matrix OCt_motifs\
      \ Oct_motifs_peakmotifs.tf tf\n\n        The matrix_title will be concatenated\
      \ to each motif ID in order to\n        create unique motif IDs. The collection\
      \ label is displayed in the\n        results.\n\n        This label is useful\
      \ when two motifs for the same TF come from\n        different files and the\
      \ user wants to know to which collection does\n        the motif come from.\n\
      \n        \e[1mSupported matrix formats\e[0m\n\n        Since the program takes\
      \ several matrices as input, it only accepts\n        matrices in formats supporting\
      \ several matrices per file (transfac,\n        tf, tab, cluster-buster, cb,\
      \ infogibbs, meme, stamp, uniprobe).\n\n        For a description of these formats,\
      \ see the help of \e[33mconvert-matrix\e[0m.\n\n    \e[1m-matrix_file_table\
      \ matrix_file_table\e[0m\n        This option is recommended when the input\
      \ number of files is large\n        (> 20), which would have a large command\
      \ line and some programs are\n        not capable of read such large arguments.\n\
      \n        The input file contains a tab-delimited table with two columns:\n\n\
      \        1) The motif file - The path to the file with the motif 2) The\n  \
      \      collection label\n\n        Example:\n\n        Sox_pssms.tf Sox Oct_pssms.tf\
      \ Oct Nanog_pssms.tf Nanog\n\n    \e[1m-matrix_format matrix_format\e[0m\n \
      \       Specify the input matrix format.\n\n        \e[1mSupported matrix formats\e\
      [0m\n\n        Since the program takes several matrices as input, it only accepts\n\
      \        matrices in formats supporting several matrices per file (transfac,\n\
      \        tf, tab, clusterbuster, cb, infogibbs, meme, stamp, uniprobe).\n\n\
      \        For a description of these formats, see the help of \e[33mconvert-matrix\e\
      [0m.\n\n    \e[1m-ref_collection Matrix_collection_file Matrix_format\e[0m\n\
      \        This option allows to annotate the root motifs according to a\n   \
      \     reference motif database.\n\n        Use this option when you cluster\
      \ motifs obtained from a motif\n        discovery algorithm.\n\n        Example:\
      \ -ref_collection Jaspar_vertebrates_2020.tf tf\n\n    \e[1m-seq Sequence_file\
      \ Seq_format\e[0m\n        This option allows to generate the branch (including\
      \ the root)\n        motifs from an input set of sequences. Instead of sum or\
      \ average the\n        counts, the new marged matrix will be built from the\
      \ sites found in\n        the provided sequences, this will produce a more realistic\
      \ matrix\n        suppoted by real sequences.\n\n        Example: -seq Oct4_peaks.fa\
      \ fasta\n\n    \e[1m-rescan_iter #\e[0m\n        Default: 3\n\n        Number\
      \ of times each matrix is re-scanned in a provided set of\n        sequences\
      \ before producing the branch motifs.\n\n        Use this option in combination\
      \ with -seq parameter.\n\n    \e[1m-ID_link_color_table matrix_ID_link_color_table\e\
      [0m\n        This option allows to add a link to a any website specified by\
      \ the\n        user and can be used to visualize complete databases (e.g. Jaspar),\n\
      \        thus each motif in the logo tree will point to its respective link\n\
      \        in the Jaspar website.\n\n        Format: a tab-separated file Column\
      \ 1: Motif ID (the same as the\n        input motif file) Column 2: Link to\
      \ any website Column 3: Color in\n        Hexadecimal code\n\n        This option\
      \ may be combined with the -radial_tree_only. By default\n        the motifs\
      \ names will be displayed in black, unless the third color\n        is specified.\n\
      \n    \e[1m-title title\e[0m\n        Title displayed on top of the report page.\n\
      \n    \e[1m-radial_tree_only\e[0m\n        Generates a radial motif tree (option\
      \ recommended for visualization\n        purposes). When this option is indicated,\
      \ all the input motifs are\n        forced to be aligned in a single alignment\
      \ displayed in a radial\n        tree (this tree is not interactive). This option\
      \ skips the\n        generation of branch-motifs and the generation of the dynamic\
      \ output\n        (e.g., heatmaps).\n\n    \e[1m-o output_prefix\e[0m\n    \
      \    Prefix for the output files.\n\n        Mandatory option: since the program\
      \ \e[33mcluster-matrices\e[0m returns a list\n        of output files (pairwise\
      \ matrix comparisons, matrix clusters).\n\n    \e[1m-heatmap_position_tree [row,col,both,none]\e\
      [0m\n        The position in the heatmap where the hierarchical tree will be\n\
      \        displayed.\n\n    \e[1m-task tasks\e[0m\n        Specify one or several\
      \ tasks to be run. If this option is not\n        specified, all the tasks are\
      \ run.\n\n        Note that some tasks depend on others. This option should\
      \ thus be\n        used with caution, by advanced users only.\n\n        Supported\
      \ tasks: (all, comparison, clustering, report)\n\n        \e[1mall\e[0m Execute\
      \ all the parts of the program (default)\n\n        \e[1mcomparison\e[0m\n \
      \           Run the motif comparison step. The input set of motifs are\n   \
      \         compared against themselves. The output is the pairwise\n        \
      \    comparison between the input motifs and a description table\n         \
      \   showing the main features of each motif (name, id, consensus,\n        \
      \    width).\n\n        \e[1mclustering\e[0m\n            Skip the matrix comparison\
      \ step and only executes the clustering\n            step.\n\n            Assumes\
      \ the users already have the description table and\n            comparison table\
      \ exported from the program \e[33mcompare-matrices\e[0m.\n\n            This\
      \ option is ideal to saving time once all comparison beteen\n            the\
      \ input motifs had been done.\n\n    \e[1m-label_in_tree\e[0m\n        Option\
      \ to select the labels displayed in the logo tree.\n\n        \e[1mSupported\
      \ labels\e[0m\n\n         (name, consensus, id)\n\n    \e[1m-label_motif\e[0m\n\
      \        Option to select the labels displayed in the cluster summary.\n\n \
      \       \e[1mSupported labels\e[0m\n\n         (name, consensus, collection)\n\
      \n        Default: name::collection\n\n    \e[1m-quick\e[0m\n        With this\
      \ option the motif comparison is done with the program\n        \e[33mcompare-matrices-quick\e\
      [0m (implemented in C) rather than the program\n        compare-matrices (implemented\
      \ in Perl). The quick version runs x100\n        times faster, but has not all\
      \ implemented options as in the Perl\n        version.\n\n        We suggest\
      \ use this option for a big set of input motifs > 300\n        motifs.\n\n \
      \       \e[1mNOTE:\e[0m By the moment the only a few thresholds can be used\
      \ with this\n        option. (cor, Ncor, w)\n\n    \e[1m-no_clone_input\e[0m\n\
      \        Desactive tha option to copy the input file. If more than one\n   \
      \     collections of motifs are provided, they are exported in a single\n  \
      \      file.\n\n        NOTE: take into account the input file size\n\n    \e\
      [1m-rand\e[0m\n        When this option is selected, the columns of the input\
      \ motifs are\n        randomly permuted (conserving thus the Information Content),\
      \ the new\n        motifs are used as input for the pairwise-comparison and\
      \ clustering.\n\n    \e[1m-heatmap_color_palette Color_Palette\e[0m\n      \
      \  Select the color palette used in the heatmaps (sequential scales)\n     \
      \   The color palettes (and their names) are taken from ColorBrewer2\n     \
      \   website (http://colorbrewer2.org/)\n\n        Supported:\n        YlOrRd,YlOrBr,YlGnBu,YlGn,PuRd,PuBuGn,PuBu,OrRd,GnBu,BuPu,BuGn,Reds,\n\
      \        Purples,Oranges,Greys,Greens,Blues\n\n        Default: YlOrRd\n\n \
      \   \e[1m-heatmap_color_classes X\e[0m\n        This option specifies in how\
      \ many color classes the color palette\n        will be divided.\n\n       \
      \ For sequential color palettes: max 9 For diverging color palettes:\n     \
      \   max 11\n\n        If the user specified a color greater than the maximum\
      \ allowed, the\n        program takes this maximum value.\n\n        For more\
      \ information see ColorBrewer2 website\n        (http://colorbrewer2.org/)\n\
      \n    \e[1m-max_matrices X\e[0m\n        This option specifies how many matrices\
      \ can be clustered in the same\n        analysis. If there are more matrices\
      \ than the specified number, the\n        program restrics the analyses to the\
      \ first X matrices, and issues a\n        warning.\n\n        This parameter\
      \ can be useful to prevent submission of excessive\n        datasets to the\
      \ Web server, or for running quick tests before\n        starting the analysis\
      \ of a large matrix collection.\n\n    \e[1m-hclust_method\e[0m\n        Option\
      \ to select the agglomeration rule for hierarchical clustering.\n\n        Supported\
      \ agglomeration rules:\n\n        \e[33mcomplete\e[0m\n            Compute inter-cluster\
      \ distances based on the two most distant\n            nodes.\n\n        \e\
      [33maverage\e[0m (default)\n            Compute inter-cluster distances as the\
      \ average distance between\n            nodes belonging to the relative clusters.\
      \ (UPGMA)\n\n        \e[33msingle\e[0m\n            Compute inter-cluster distances\
      \ based on the closest nodes.\n\n    \e[1m-top_matrices X\e[0m\n        Only\
      \ analyze the first X motifs of the input file. This options is\n        convenient\
      \ for quick testing before starting the full analysis.\n\n        If several\
      \ motif files are specified, the selection of top motifs is\n        performed\
      \ independently for each motif collection (the max number of\n        motifs\
      \ will this be X * the number of input files).\n\n    \e[1m-skip_matrices X\e\
      [0m\n        Skip the first X motifs of the input file. This options is\n  \
      \      convenient for testing the program on a subset of the motifs before\n\
      \        starting the full analysis.\n\n        If several motif files are specified,\
      \ the option is applied to each\n        file independently.\n\n    \e[1m-metric_build_tree\
      \ metric\e[0m\n        Select the metric which will be used to cluster the motifs.based\
      \ in\n        one metric of to measure motif similarity. This metric can be\
      \ a\n        similarity or distance, in both cases the values are converted\
      \ to a\n        distance table which is used as input for the hierarchical\n\
      \        clustering.\n\n        Supported metrics : cor, Ncor, dEucl, NdEucl,\
      \ logocor, logoDP,\n        Nlogocor, Icor, NIcor, SSD, rank_mean, mean_zscore\n\
      \n        Default: Ncor\n\n    \e[1m-lth param lower_threshold\e[0m\n    \e\
      [1m-uth param upper_threshold\e[0m\n        Threshold on some parameters (-lth:\
      \ lower, -uth: upper threshold).\n\n        Once the hierarchical tree is built,\
      \ this tree is traversed in a\n        bottom-up way. On each branch the descendant\
      \ motifs are evaluated in\n        the same way the clustering method selected\
      \ by the user (average,\n        complete, single).\n\n        In this algorithm,\
      \ the threshold can be set combining values of\n        different metrics.\n\
      \n        If the descendant motifs for a particular branch do not satisfy the\n\
      \        threshold a new cluster is created.\n\n        For a complete description\
      \ of the thresholds and the motif\n        comparison metrics see the help of\
      \ \e[33mcompare-matrices\e[0m\n\n        Suggested thresholds:\n\n         \
      \   cor >= 0.7\n\n            Ncor >= 0.4\n\n            w >= 5\n\n    \e[1m-calc\
      \ merging_stat\e[0m\n        Specify the operator used to merge matrices (argument\
      \ passed to\n        \e[33mmerge-matrices)\e[0m.\n\n        Supported:\n\n \
      \       \e[33mmean\e[0m (default)\n            Each cell of the output matrix\
      \ contains the mean of the values\n            found in the corresponding cell\
      \ of the input matrices.\n\n        \e[33msum\e[0m Each cell of the output matrix\
      \ contains the sum of the values\n            found in the corresponding cell\
      \ of the input matrices.\n\n            Note: the option \e[33mdiff\e[0m, supported\
      \ by \e[33mmerge-matrices\e[0m, is not\n            accepted for \e[33mmatrix-clustering\e\
      [0m.\n\n    \e[1m-trim_threshold #\e[0m\n        Trimming threshold.\n\n   \
      \     Left- and right-most columns whose information content are smaller\n \
      \       than this threshold will be trimmed, to avoid exporting large\n    \
      \    matrices with non-informative flanks.\n\n        \e[1mBeware:\e[0m in some\
      \ cases the trimming can deteriorate the motifs, by\n        cutting moderately\
      \ informative positions.\n\n    \e[1m-return return_fields\e[0m\n        List\
      \ of fields to return.\n\n        Supported fields:\n\n         heatmap,json,newick,root_matrices\n\
      \n        \e[1mclone_input:\e[0m Copy input file.\n            When this field\
      \ is selected, the input motif database is copied\n            and exported\
      \ in the results folder.\n\n            NOTE: take into account the input file\
      \ size.\n\n        \e[1mheatmap:\e[0m Heatmap with similarities.\n         \
      \   When this field is selected, exports a heatmap showing the\n           \
      \ similarities, the clusters and the hierarchical tree of the\n            input\
      \ motifs.\n\n            The heatmap is exported in JPEG and PDF format.\n\n\
      \            We recommend to use this option when the number of motifs is\n\
      \            lower than 300.\n\n        \e[1mjson:\e[0m Hierarchical tree in\
      \ JSON format.\n            File format used for D3 library to visualize the\
      \ logo forest in\n            HTML.\n\n            The hierarchical tree in\
      \ JSON format is always exported, since\n            it is required to display\
      \ the logo tree with the d3 library.\n\n        \e[1mnewick:\e[0m Hierarchical\
      \ tree in newick format.\n            When this field is specified, the hierarchical\
      \ tree is converted\n            and exported in Newick format, a widely used\
      \ text format to\n            represent phylogenetic trees.\n\n        \e[1mroot_matrices:\e\
      [0m Return only the root motif of each cluster.\n            When this field\
      \ is specified, matrix-clustering runs the minimal\n            analysis and\
      \ return a text file with the root motifs of each\n            cluster.\n\n\
      \            This option is useful when the user wants to explore the data\n\
      \            and to avoid the cimputation of the visual elements.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - random-seq
    positional:
    - !Positional
      description: USAGE
      position: 0
      name: random-seq
      optional: false
    - !Positional
      description: OPTIONS
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: "-a      alphabet\nmust be followed by residue frequencies expressed\
        \ precisely\nthis way:\n-a a:t # c:g #\nex:\n-a a:t 0.3 c:g 0.2\nThe option\n\
        -a yeast\nwill automatically use the residue frequencies from yeast\ngenome."
      position: 0
      name: PROBABILITIES
      optional: false
    named:
    - !Flag
      description: sequence length
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Number of sequences.\nGenerate a set of n sequences, each of length\
        \ l."
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose.
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the comand within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: 'for sequence identifiers (default: rand).'
      synonyms:
      - -prefix
      args: !SimpleFlagArg
        name: prefix
      optional: true
    - !Flag
      description: "format.\nTwo options are available:\nIG      IG suite from IntelliGenetics\n\
        raw     (default)"
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: output
      optional: true
    - !Flag
      description: "##  Line width. A newline character will be inserted in the\n\
        sequence every ## bases. Default is 70.\n-lw 0 will prevent newline insertion."
      synonyms:
      - -lw
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: protein|DNA|other
      synonyms:
      - -type
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '# seed for the random generator'
      synonyms:
      - -seed
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Generate random sequences with lengths specified in a template\n\
        file.\nVarious template types are supported (option -template_format):\nsequences\
        \ (in fasta), genomic coordinates (in bed), sequence\nlengths.\nThis option\
        \ is incompatible with options -l and -n."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: template_file
      optional: true
    - !Flag
      description: "Format for the template set (specified with the option -i).\n\
        Supported formats:\nfasta (default)\nTemplates are provided as a fasta-formatted\
        \ sequence file. The\nprogram random-genome-fragments calls sequence-lengths\
        \ to define\nthe template lengths.\nbed\nTemplates are provided as a bed-formatted\
        \ file of genomic\ncoordinates. The program random-genome-fragments calls\n\
        sequence-lengths -format bed to define the lengths of the bed\nfeatures.\n\
        Bed file must contain at least 3 columns, indicating, for each\nfeature:\n\
        1. id (ignored)\n2. start coordinate\n3. end coordinate\nlen\nTemplates are\
        \ provided as a tab-delimited file indicating the\nlength of each template\
        \ sequence (this file can be produced by\nsequence-lengths)."
      synonyms:
      - -template_format
      args: !SimpleFlagArg
        name: template_format
      optional: true
    - !Flag
      description: "file\nDeprecated. Replaced by -i template_file -template_format\
        \ len.\nMaintained for backward compatibility.\nGenerate random sequences\
        \ with the same lengths as a set of template\nsequences. The sequence length\
        \ file can be obtained with the command\nsequence-lengths.\nThis option is\
        \ incompatible with options -l and -n.\nThe length file contains two columns\
        \ :\n-sequence ID (ignored)\n-sequence length"
      synonyms:
      - -lf
      args: !SimpleFlagArg
        name: length
      optional: true
    - !Flag
      description: "Specifyt a file describing the background model. This\nfile must\
        \ be in oligo format, i.e. a table with\nexpected oligomer frequencies. See\n\
        I<convert-background-model> for conversion of other\nbackground model formats\
        \ into oligomer frequency\ntables.\nWhen this option is used, the sequences\
        \ are generated\naccording to a Markov chain. For instance if the\nfrequency\
        \ file contains tetramers, each base will be\nselected randomly with a probability\
        \ depending on the\n3 preceding bases:\np(Wj-3,j)\np(Bj=B) = -----------\n\
        p(Wj-3,j-1)\nwhere   Bj      is the base at position j\nB       is a residue,\
        \ ie A, C, G or T\nWj-3,j-1\nis a word found in the sequence between\npositions\
        \ j-3 and j-1\nWj-3,j  is the same word with the character B\nconcatenated\
        \ at its end"
      synonyms:
      - -expfreq
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "background model\nAutomatically load a pre-calibrated exected\
        \ frequency\nfile from the RSAT genome distribution. When this\noption is\
        \ used, the options -org and -ol are also\nrequired, to indicate the organism\
        \ and the\noligonucleotide length, respectively.\nWhen the option -bg is used,\
        \ it is necessary to\ndefine the order of the markov chain, either with the\n\
        option -markov, or with the option -ol (oligo length).\nThis option is incompatible\
        \ with the option -expfreq.\nType of sequences used as background model for\n\
        estimating expected oligonucleotide frequencies.\nSupported models:\n-bg equi\n\
        equiprobable residue frequencies (default)\n-bg upstream-noorf\nall upstream\
        \ sequences, preventing overlap with\nupstream open reading frames (ORFs).\
        \ Requires to\nspeciy a model organism.\n-bg upstream\nall upstream sequences,\
        \ allowing overlap with\nupstream ORFs. Requires to speciy a model\norganism.\n\
        -bg intergenic\nintergenic frequencies Whole set of intergenic\nregions, including\
        \ upstream and downstream\nsequences. Requires to speciy a model organism.\n\
        -bg protein\ngenerate random peptidic sequences using a Markov\nchain calibrated\
        \ on all peptidic sequences of the\nselected organism."
      synonyms:
      - -bg
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "organism\nThis is necessary with the option -bg, to determine\n\
        which frequency file has to be sued for expected\nfrequency calibration."
      synonyms:
      - -org
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "order for the background model\nNote: options -markov and -ol\
        \ are mutually exclusive."
      synonyms:
      - -markov
      args: !SimpleFlagArg
        name: markov
      optional: true
    - !Flag
      description: "oligo-length\nOligonucleotide length used to train the Markov\n\
        background model. If the oligo length is k, the markov\norder is m = k-1."
      synonyms:
      - -ol
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Number of repetitions\nThe list if sequence lengths is repeated\
        \ rep times.\nThis option only serves when a length file is used to\nspecify\
        \ sequence-sise lengths.\nThis option is incompatible with the options -l\
        \ and\n-n."
      synonyms:
      - -rep
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "NAME\n\trandom-seq\n\nUSAGE\n\trandom-seq -l seqlength [-v] [-o outputfile]\n\
      \nDESCRIPTION\n\tGenerates random sequences according to different\n\tprobabilistic\
      \ models (Bernoulli, Markov chains).\n\nCATEGORY\n\tsequences\n\nOPTIONS\n \
      \   OUTPUT OPTIONS\n\t-l\tsequence length\n\n\t-n\tNumber of sequences.\n  \
      \              Generate a set of n sequences, each of length l.\n\n\t-v\tverbose.\n\
      \n\t-o outputfile\n\t\tif not specified, the standard output is used.\n\t\t\
      This allows to place the comand within a pipe.\n\n\t-prefix\tprefix for sequence\
      \ identifiers (default: rand).\n\n\t-format\toutput format. \n\t\tTwo options\
      \ are available:\n\t\tIG\tIG suite from IntelliGenetics\n\t\traw\t(default)\
      \ \n        -lw ##  Line width. A newline character will be inserted in the\
      \ \n                sequence every ## bases. Default is 70. \n             \
      \   -lw 0 will prevent newline insertion.\n\n\t-type\tprotein|DNA|other\n\n\t\
      -seed #\tseed for the random generator\n\n   TEMPLATE FILES\n\n   The following\
      \ options allow to taylor the sequence number and the\n   size of each sequence\
      \ on the basis of template files (sequence\n   file, bed file or sequence-length\
      \ output file).\n\n    -i template_file\n\n        Generate random sequences\
      \ with lengths specified in a template\n        file.\n\n        Various template\
      \ types are supported (option -template_format):\n        sequences (in fasta),\
      \ genomic coordinates (in bed), sequence\n        lengths.\n\n        This option\
      \ is incompatible with options -l and -n.\n\n    -template_format template_format\n\
      \        Format for the template set (specified with the option -i).\n\n   \
      \     Supported formats:\n\n        fasta (default)\n            Templates are\
      \ provided as a fasta-formatted sequence file. The\n            program random-genome-fragments\
      \ calls sequence-lengths to define\n            the template lengths.\n\n  \
      \      bed\n            Templates are provided as a bed-formatted file of genomic\n\
      \            coordinates. The program random-genome-fragments calls\n      \
      \      sequence-lengths -format bed to define the lengths of the bed\n     \
      \       features.\n\n            Bed file must contain at least 3 columns, indicating,\
      \ for each\n            feature:\n\n            1. id (ignored)\n          \
      \  2. start coordinate\n            3. end coordinate\n\n        len\n     \
      \       Templates are provided as a tab-delimited file indicating the\n    \
      \        length of each template sequence (this file can be produced by\n  \
      \          sequence-lengths).\n\n    -lf length file\n        Deprecated. Replaced\
      \ by -i template_file -template_format len.\n        Maintained for backward\
      \ compatibility.\n\n        Generate random sequences with the same lengths\
      \ as a set of template\n        sequences. The sequence length file can be obtained\
      \ with the command\n        sequence-lengths.\n\n        This option is incompatible\
      \ with options -l and -n.\n\n        The length file contains two columns :\n\
      \n        -sequence ID (ignored)\n        -sequence length\n\n\n\n    PROBABILITIES\n\
      \t-a\talphabet\n\t\tmust be followed by residue frequencies expressed precisely\
      \ \n\t\tthis way:\n\t\t-a a:t # c:g #\n\t\tex: \n\t\t-a a:t 0.3 c:g 0.2\n\n\t\
      \tThe option\n\t\t-a yeast\n\t\twill automatically use the residue frequencies\
      \ from yeast \n\t\tgenome.\n\n\t-expfreq\n\n\t\tSpecifyt a file describing the\
      \ background model. This\n\t\tfile must be in oligo format, i.e. a table with\n\
      \t\texpected oligomer frequencies. See\n\t\tI<convert-background-model> for\
      \ conversion of other\n\t\tbackground model formats into oligomer frequency\n\
      \t\ttables.\n\n                When this option is used, the sequences are generated\n\
      \t\taccording to a Markov chain. For instance if the\n\t\tfrequency file contains\
      \ tetramers, each base will be\n\t\tselected randomly with a probability depending\
      \ on the\n\t\t3 preceding bases:\n\n\t\t           p(Wj-3,j)\n\t\tp(Bj=B) =\
      \ -----------\n\t\t          p(Wj-3,j-1)\n\n\t\twhere\tBj\tis the base at position\
      \ j\n\t\t\tB\tis a residue, ie A, C, G or T\n\t\t\tWj-3,j-1\n\t\t\t\tis a word\
      \ found in the sequence between \n\t\t\t\tpositions j-3 and j-1\n\t\t\tWj-3,j\t\
      is the same word with the character B \n\t\t\t\tconcatenated at its end\n\n\t\
      -bg\tbackground model\n\n\t\tAutomatically load a pre-calibrated exected frequency\n\
      \t\tfile from the RSAT genome distribution. When this\n\t\toption is used, the\
      \ options -org and -ol are also\n\t\trequired, to indicate the organism and\
      \ the\n\t\toligonucleotide length, respectively.\n\n\t\tWhen the option -bg\
      \ is used, it is necessary to\n\t\tdefine the order of the markov chain, either\
      \ with the\n\t\toption -markov, or with the option -ol (oligo length).\n\n\t\
      \tThis option is incompatible with the option -expfreq. \n\n\t\tType of sequences\
      \ used as background model for\n\t\testimating expected oligonucleotide frequencies.\n\
      \n\t\tSupported models:\n\t\t-bg equi\n\t\t    equiprobable residue frequencies\
      \ (default)\n\n\t\t-bg upstream-noorf\n\t\t    all upstream sequences, preventing\
      \ overlap with\n\t\t    upstream open reading frames (ORFs). Requires to\n\t\
      \t    speciy a model organism.\n\n\t\t-bg upstream\n\t\t    all upstream sequences,\
      \ allowing overlap with\n\t\t    upstream ORFs. Requires to speciy a model\n\
      \t\t    organism.\n\n\t\t-bg intergenic\n\t\t    intergenic frequencies Whole\
      \ set of intergenic\n\t\t    regions, including upstream and downstream\n\t\t\
      \    sequences. Requires to speciy a model organism.\n\n\t\t-bg protein\n\t\t\
      \    generate random peptidic sequences using a Markov\n\t\t    chain calibrated\
      \ on all peptidic sequences of the\n\t\t    selected organism.\n\n\t-org\torganism\n\
      \t\tThis is necessary with the option -bg, to determine\n\t\twhich frequency\
      \ file has to be sued for expected\n\t\tfrequency calibration.\n\n\t-markov\t\
      markov order for the background model\n\n\t\tNote: options -markov and -ol are\
      \ mutually exclusive. \n\n\t-ol\toligo-length\n\n\t\tOligonucleotide length\
      \ used to train the Markov\n\t\tbackground model. If the oligo length is k,\
      \ the markov\n\t\torder is m = k-1.\n\n\t-lf\tlength file \n\n\t\tGenerate random\
      \ sequences with the same lengths as a\n\t\tset of reference sequences. \n\n\
      \t\tThis option is incompatible with the options -l and -n.\n\n\t\tThe sequence\
      \ length file can be obtained with the\n\t\tcommand\n\t\t\tsequence-lengths\n\
      \n\t\tThe length file contains two columns : \n\t\t    - sequence ID (ignored)\n\
      \t\t    - sequence length\n\n\t-rep\tNumber of repetitions\n\n\t\tThe list if\
      \ sequence lengths is repeated rep times.\n\n\t\tThis option only serves when\
      \ a length file is used to\n\t\tspecify sequence-sise lengths.\n\n\t\tThis option\
      \ is incompatible with the options -l and\n\t\t-n.\n\nWEB VERSION\n\thttp://bigre.ulb.ac.be/bioinformatics/rsa-tools/\n\
      \n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - compare-features
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: compare-features
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: "\e[1mOUTPUT TYPES\e[0m"
      position: 0
      name: negative.
      optional: false
    - !Positional
      description: Length (in residues) of the intersection between two features.
      position: 0
      name: inter_len
      optional: false
    - !Positional
      description: "Coverage of the intersection between two features. The coverage\n\
        (inter_cov) is defined as\ninter_cov = inter_len / inter_pair\nwhere inter_len\
        \ is the length of the intersection, pair_len is\nthe total length covered\
        \ by the pair of intersecting features."
      position: 1
      name: inter_cov
      optional: false
    - !Positional
      description: convert-features
      position: 0
      name: feature-map
      optional: false
    - !Positional
      description: "Add columns with the coordinates of feature from f1 and f2 when\n\
        there is an intersection. If features belong to set f2.not.f1,\nindicate NA\
        \ in the f1 columns (and reciprocally).\n"
      position: 0
      name: all_coordinates
      optional: false
    named:
    - !Flag
      description: considered as input files.
      synonyms:
      - -files
      args: !SimpleFlagArg
        name: are
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    compare-features\n\n\e[1mDESCRIPTION\e[0m\n  \
      \  Compare two or more sets of features.\n\n    This program takes as input\
      \ several feature files (two or more), and\n    calculates the intersection,\
      \ union and difference between features. It\n    also computes contingency tables\
      \ and comparison statistics.\n\n\e[1mAUTHORS\e[0m\n    Jean Valery Turatsinze\
      \ <jturatsi@ulb.ac.be>\n\n    Jacques van Helden <Jacques.van-Helden\\@univ-amu.fr>\n\
      \n\e[1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e[0m\n    compare-features -i inputfile_1\
      \ -i inputfile_2 [-i inputfile_3 ... ...]\n    [-o outputfile] [-v]\n\n\e[1mINPUT\
      \ FORMAT\e[0m\n    The default input format is .ft (the same as for feature-map).\
      \ Other\n    formats are also supported ($supported_input_formats).\n\n  \e\
      [1mFeature format\e[0m\n    Each feature is represented by a single line, which\
      \ should provide the\n    following information:\n\n    Input file columns:\n\
      \n    1. map label (eg gene name)\n    2. feature type\n    3. feature identifier\
      \ (ex: GATAbox, Abf1_site)\n    4. strand (D for Direct, R for Reverse),\n \
      \   5. feature start position\n    6. feature end position\n    7. (optional)\
      \ description\n    8. (optional) score\n\n    The standard input format assumes\
      \ that these topics are provided in this\n    order, separated by tabs. Start\
      \ and end positions can be positive or\n    negative.\n\n\e[1mOUTPUT TYPES\e\
      [0m\n  \e[1minter\e[0m\n    Intersections between features (pairwise comparisons).\
      \ For each\n    intersection between two features, a feature of type \"inter\"\
      \ is created.\n\n    The ID of an \"inter\" feature indicates the files to which\
      \ the\n    intersecting features belong. For example \"f1.and.f3\" means that\
      \ the\n    intersection feture was obtained from a feature of the first input\
      \ file\n    and a feature of the second input file.\n\n  \e[1mdiff\e[0m\n  \
      \  Pairwise differences between files. For each pair of file, a feature of\n\
      \    type \"diff\" is created.\n\n    The ID of the \"diff\" feature indicates\
      \ the number of the files\n    containing and not containing the feature, respezctively.\
      \ For example,\n    the ID \"f1.not.f3\" indictaes a feature found in file 1\
      \ and without any\n    intersection with features oof file 3.\n\n  \e[1mstats\e\
      [0m\n    Calculate statistics about the intersections between features of each\n\
      \    pair of input file.\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output depends\
      \ on the return type(s), which can be specified with\n    the option -return.\n\
      \n  \e[1minter,diff\e[0m\n    The intersection and differences are reported\
      \ as features. Different\n    output formats can be specified with the option\
      \ -oformat (supported:\n    $supported_output_formats).\n\n  \e[1mstats\e[0m\n\
      \    Matching statistics are exported as tab-delimited tables. Each row is\n\
      \    starting with a comment character ';', so that the statistics are\n   \
      \ ignored when the program is used as input by feature-map.\n\n    These comment\
      \ characters can easily be removed if the result has to be\n    used by other\
      \ programs. Try for example:\n\n        perl -pe 's/^;//' outfile\n\n\e[1mOPTIONS\e\
      [0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
      \ during execution)\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e\
      [1m-help\e[0m\n        Display options\n\n    \e[1m-i inputfile\e[0m\n     \
      \   This option can be used iteratively to specify several input files.\n  \
      \      It must be used at least 2 times, since the comparison requires at\n\
      \        least two feature files.\n\n    \e[1m-files inputfile_1 inputfile_2\
      \ ...\e[0m\n        Specify multiple input files. All the arguments following\
      \ the option\n        -files are considered as input files.\n\n    \e[1m-filelist\
      \ file_list_file\e[0m\n        Provide a file containing a list of input files.\n\
      \n    \e[1m-ref reference_file\e[0m\n        Specify a reference file. Only\
      \ one reference file can be specified.\n\n        All the other input files\
      \ (specified with -i or -files) are then\n        compared to the reference\
      \ file. When the option '-return stats' is\n        combined with a reference\
      \ fiile, some additional statistics are\n        calculated (PPV, sensitivity,\
      \ accuracy).\n\n    \e[1m-o outputfile\e[0m\n        If no output file is specified,\
      \ the standard output is used. This\n        allows to use the command within\
      \ a pipe.\n\n    \e[1m-oft output_feature_file\e[0m\n        In addition to\
      \ the output, export a feature file containing the type\n        of the feature,\
      \ and chromosomal location of each feature. This\n        option is compatible\
      \ with -return inter.\n\n    \e[1m-iformat input_format\e[0m\n        Input\
      \ feature format (Supported: $supported_input_formats)\n\n    \e[1m-oformat\
      \ output_format\e[0m\n        Output feature format (Supported: $supported_output_formats)\n\
      \n    \e[1m-self\e[0m\n        Also perform comparison between features in the\
      \ same file\n        (self-comparison). This can be useful to detect redundancy\
      \ between\n        annotated features.\n\n    \e[1m-return output1[,output2,...]\e\
      [0m\n        Specify the output type(s).\n\n        Supported output types:\
      \ stats,inter,diff\n\n    \e[1m-lth parameter value\e[0m\n        Specify the\
      \ value of the lower threshold on some parameter.\n\n        Examples:\n\n \
      \       -lth inter_len 3\n        -lth inter_cov 0.8\n\n        Supported parameters\
      \ :\n\n        inter_len\n            Length (in residues) of the intersection\
      \ between two features.\n\n        inter_cov\n            Coverage of the intersection\
      \ between two features. The coverage\n            (inter_cov) is defined as\n\
      \n            inter_cov = inter_len / inter_pair\n\n            where inter_len\
      \ is the length of the intersection, pair_len is\n            the total length\
      \ covered by the pair of intersecting features.\n\n\e[1mSEE ALSO\e[0m\n    feature-map\n\
      \n    convert-features\n\n\e[1mWISH LIST\e[0m\n  \e[1m-return ref_vs_others\e\
      [0m\n    This option requires to activate the option -ref in order to indicate\n\
      \    which input file serves as reference (the file which ahs to be compared\n\
      \    to each other file).\n\n    For example, the option could be used to compare\
      \ a set of ChIP-seq peaks\n    (the reference file) with a series of files describing\
      \ epigenetic marks,\n    TF binding, RNA pol II, .... (one query file per mark\
      \ type).\n\n    The option -features_vs_files returns a separate table with\
      \ one row per\n    feature of the reference file, and one column per query feature\
      \ file,\n    containing a 1/0 value indicating whether or not the reference\
      \ feature\n    intersects at least one feature of the query file.\n\n  \e[1msupport\
      \ .bed as output format\e[0m\n  \e[1mtranspose contingency tables\e[0m\n   \
      \ The row/column convention is counter-intuitive\n\n  \e[1mshorter intersection\
      \ description\e[0m\n    The description is much too verbosy. Reduce to strict\
      \ minimum (f1 inter\n    f2), and export description only on demand.\n\n  \e\
      [1mseparate columns for additional parameters\e[0m\n    all_coordinates\n  \
      \      Add columns with the coordinates of feature from f1 and f2 when\n   \
      \     there is an intersection. If features belong to set f2.not.f1,\n     \
      \   indicate NA in the f1 columns (and reciprocally).\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - matrix-distrib
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: matrix-distrib
      optional: false
    - !Positional
      description: PSSM
      position: 0
      name: util
      optional: false
    - !Positional
      description: "For a description of available format, see \e[33mconvert-backgound-model"
      position: 0
      name: oligo-analysis.
      optional: false
    - !Positional
      description: "\e[1m-bgfile background_file\e[0m\nBackground model file."
      position: 0
      name: details.
      optional: false
    - !Positional
      description: "\e[1m-bg_pseudo #\e[0m"
      position: 0
      name: convert-background-model.
      optional: false
    named:
    - !Flag
      description: ': oligo-analysis, MotifSampler, meme. Default is:'
      synonyms:
      - -bg_format.Supported
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: "\e[0m"
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    matrix-distrib\n\n\e[1mDESCRIPTION\e[0m\n    Computes\
      \ the theoretical distribution of score probabilities of a given\n    PSSM.\
      \ Score probabilities can be computed according to bernoulli as well\n    as\
      \ markov-chain background models.\n\n\e[1mAUTHORS\e[0m\n    Jacques van Helden\
      \ Jacques.van-Helden\\@univ-amu.fr\n    Jean Valery Turatsinze jturatsi@bigre.ulb.ac.be\n\
      \    Morgane Thomas-Chollier morgane@bigre.ulb.ac.be\n    With the help of Matthieu\
      \ de France defrance@bigre.ulb.ac.be\n\n\e[1mCATEGORY\e[0m\n    util\n    PSSM\n\
      \n\e[1mUSAGE\e[0m\n    matrix-distrib [-i matrixfile] [-bgfile bgfile][-o outputfile]\
      \ [-v]\n\n\e[1mINPUT FORMATS\e[0m\n  \e[1mMatrix file\e[0m\n    The matrix format\
      \ is specified with the option -matrix_format. Supported\n    : tab,cb,consensus,gibbs,meme,assembly.\
      \ Default : tab.\n\n    For a description of these format, see \e[33mconvert-matrix\
      \ -h\e[0m\n\n  \e[1mBackground model file\e[0m\n    The background model format\
      \ is specified with the option\n    -bg_format.Supported : oligo-analysis, MotifSampler,\
      \ meme. Default is:\n    oligo-analysis.\n\n    For a description of available\
      \ format, see \e[33mconvert-backgound-model\n    -h\e[0m\n\n\e[1mOUTPUT FORMAT\e\
      [0m\n    The output is a tab-delimited file with the following columns:\n\n\
      \    1 weight: log-likelihood score: w=P(S|M)/P(S|B)\n    2 proba: probability\
      \ density function: P(W=w)\n    3 cum: cumulative density function: P(W <= w)\n\
      \    4 Pval: P-value = inverse cumulative density function: Pval = P(W >= w)\n\
      \    5 ln_Pval: natural logarithm of the P-value\n    6 log_P: base 10 logarithm\
      \ of the P-value\n    7 sig: significance: sig = -log10(Pval)\n\n\e[1mTHEORICAL\
      \ DISTRIBUTION COMPUTATION\e[0m\n        The scoring scheme is the weight (see\
      \ \e[33mmatrix-scan -h\e[0m for more\n        details). We calculate in an exaustive\
      \ way the probabilities that\n        are associated to each score (weight)\
      \ that can be obtained from a\n        given PSSM.\n\n        For Bernoulli\
      \ (Markov order 0) background models, the distribution\n        of scores is\
      \ computed with the algorithm described by Bailey\n        (Bioinformatics,\
      \ 1999).\n\n        For Markov background models with higher orders, we have\
      \ extended\n        this algorithm to take into account the dependencies between\n\
      \        residues. For each iteration of the algorithm, weigths associated to\n\
      \        all possible transitions are tagged with a prefix. Each residue\n \
      \       weight is calculated according to the prefix tag. The prefix\n     \
      \   corresponds to a word of Markov order size that preceeds the\n        position\
      \ of the iteration.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level\
      \ of verbosity (detail in the warning messages during execution)\n\n    \e[1m-h\e\
      [0m  Display full help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n\
      \    \e[1m-m matrixfile\e[0m\n        Matrix file.\n\n        This argument\
      \ can be used iteratively to scan the sequence with\n        multiple matrices.\n\
      \n    \e[1m-top top_matrix_nb\e[0m\n        Restrict the analysis to the N top\
      \ matrices of the input file. This\n        option is useful when the input\
      \ file contains multiple matrices (for\n        example fo the Web interface,\
      \ where the program supports a single\n        matrix).\n\n    \e[1m-mlist matrix_list\e\
      [0m\n        Matrix list.\n\n        Indicate a file containing a list of matrices\
      \ to be used for\n        scanning the region. This facilitates the scanning\
      \ of a sequence\n        with a library of matrices (e.g. all the matrices from\
      \ RegulonDB, or\n        TRANSFAC).\n\n        Format: the matrix list file\
      \ is a text file. The first word of each\n        row is suppose to indicate\
      \ a file name. Any further information on\n        the same row is ignored.\n\
      \n    \e[1m-o outputfile\e[0m\n        If no output file is specified, the standard\
      \ output is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-matrix_format matrix_format\e[0m\n        Matrix format. Default\
      \ is tab.\n\n    \e[1m-pseudo #\e[0m\n        Pseudo-count for the matrix (default:\
      \ 1). See matrix-scan for\n        details.\n\n    \e[1m-bgfile background_file\e\
      [0m\n         Background model file.\n\n    \e[1m-bg_format background_format\e\
      [0m\n                Supported formats: all the input formats supported by\n\
      \                convert-background-model.\n\n    \e[1m-bg_pseudo #\e[0m\n \
      \       Pseudo frequency for the background models. Value must be a real\n \
      \       between 0 and 1 (default: 0) If the training sequence length (L) is\n\
      \        known, the value can be set to square-root of L divided by\n      \
      \  L+squareroot of L.\n\n    \e[1m-decimals #\e[0m\n        Number of decimals\
      \ to print or the transition probabilities.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - retrieve-seq-bed
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: retrieve-seq-bed
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 1
      name: genome
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    retrieve-seq-bed\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Retrieve sequences for a set of genomic coordinates\
      \ provided in bed, gff\n    or vcf format. Note that gff coordinates are zero-based.\n\
      \n    This script is a wrapper around \e[33mbedtools getfasta\e[0m, an efficient\
      \ tool to\n    retrieve sequences from a fasta-formatted sequence file (e.g.\
      \ all genome\n    sequences) and a file of coordinates defined on the sequences\
      \ of the\n    fasta file.\n\n    The wrapper generates the \e[33mbedtools getfasta\e\
      [0m command in order to retrieve\n    genomic coordinates from one of the locally\
      \ supported genomes.\n\n\e[1mAUTHORS\e[0m\n    Bruno Contreras Moreira <bcontreras\\\
      @eead.csic.es>\n    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mCATEGORY\e[0m\n\
      \    genome\n\n\e[1mUSAGE\e[0m\n    retrieve-seq-bed -org organism_name -i inputfile\
      \ [-o outputfile] [-v #]\n    [...]\n\n\e[1mINPUT FORMAT\e[0m\n    The genomic\
      \ coordinate file will be used as input by \e[33mbedtools getfasta\e[0m,\n \
      \   and must be compliant with the supported formats: BED/GFF/VCF.\n\n\e[1mOUTPUT\
      \ FORMAT\e[0m\n    A sequence file in fasta format (produced by \e[33mbedtools\
      \ getfasta\e[0m.\n\n\e[1mSEE ALSO\e[0m\n\e[1mWISH LIST\e[0m\n    \e[1m-server\
      \ http://some.rsat.server/rsat/\e[0m\n        Send the request to a remote RSAT\
      \ server via the Web services. This\n        option enables to get fasta sequences\
      \ from any RSAT server without\n        having to install them locally.\n\n\
      \    \e[1m-extend length\e[0m =item \e[1m-extend_up up_length\e[0m =item \e\
      [1m-extend_down\n    down_length\e[0m\n        Extend the peaks by a given length\
      \ on the upstream (\e[33m-extend_up\e[0m),\n        downstream (\e[33m-extend_down\e\
      [0m) or both sides (\e[33m-extend\e[0m). The side is\n        adapted according\
      \ to the strand.\n\n        Flank extension is done via \e[33mbedtools flank\e\
      [0m.\n\n        The extended coordinates are exported with the same name as\
      \ the\n        output file, supplemented with the suffix _flanks.bed.\n\n\e\
      [1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the\
      \ warning messages during execution)\n\n    \e[1m-h\e[0m  Display full help\
      \ message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-i coordinate_file\e\
      [0m\n        Genomic coordinates, in one of the formats supported by \e[33mbedtools\n\
      \        getfasta\e[0m: BED, GFF, VCF.\n\n    \e[1m-o outputfile\e[0m\n    \
      \    Output file (in fasta format), where the sequences will be saved.\n   \
      \     This argument is mandatory, since it is required by \e[33mbedtools\n \
      \       getfasta\e[0m.\n\n    \e[1m-org organism_name\e[0m\n        Organism\
      \ name, which must correspond to one organism supported on\n        the local\
      \ RSAT instance.\n\n    \e[1m-rm\e[0m Use repeat-masked version of the genome.\n\
      \n    \e[1m-common_chr file\e[0m, \e[1m-add_chr\e[0m, \e[1m-remove_chr\e[0m,\n\
      \    \e[1m-check_chr\e[0m\n        These four options allow to ensure consistency\
      \ between chromosome\n        naming in the query bed file and in the genome\
      \ annotations. Indeed,\n        the chromosome naming varies depending on the\
      \ genome reference\n        center, so that a bed file obtained with one convention\
      \ may have\n        chromosome names incompatible with the convention used in\
      \ the\n        database that served as source to install the genome in RSAT.\n\
      \n        \e[33m-common_chr file\e[0m takes a tab-separated file matching common,\
      \ short\n        chr names to full names actually used in underlying FASTA file.\n\
      \n        \e[33m-add_chr\e[0m adds a prefix \"chr\" to chromosome names of the\
      \ query bed\n        file before running the analysis.\n\n        \e[33m-remove_chr\e\
      [0m removes the prefix \"chr\" from chromosome names.\n\n        The option\
      \ \e[33m-check_chr\e[0m analyses the input bed file and the RSAT\n        annotation\
      \ table, and checks the consistency between naming\n        conventions.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - permute-matrix
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: permute-matrix
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van.Helden@ulb.ac.be
      optional: false
    - !Positional
      description: matrix
      position: 1
      name: util
      optional: false
    - !Positional
      description: "\e[1mOPTIONS\e[0m"
      position: 0
      name: convert-matrix
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    permute-matrix\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Randomize a set of input matrices by permuting\
      \ their columns. The\n    resulting motifs have the same nucleotide composition\
      \ and information\n    content as the original ones.\n\n    This program is\
      \ just a wrapper that selects the appropriate options of\n    \e[33mconvert-matrix\e\
      [0m and checks the consistency of parameters.\n\n\e[1mAUTHORS\e[0m\n    Jacques.van.Helden@ulb.ac.be\n\
      \n\e[1mCATEGORY\e[0m\n    util\n    matrix\n\n\e[1mUSAGE\e[0m\n    permute-matrix\
      \ [-i inputfile] [-o outputfile] [-v #] [...]\n\n\e[1mOUTPUT FORMAT\e[0m\n \
      \   Any output format supported by \e[33mconvert-matrix\e[0m.\n\n\e[1mSEE ALSO\e\
      [0m\n    convert-matrix\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level\
      \ of verbosity (detail in the warning messages during execution)\n\n    \e[1m-h\e\
      [0m  Display full help message.\n\n    \e[1m-help\e[0m\n        Same as -h.\n\
      \n    \e[1m-i inputfile\e[0m\n        If no input file is specified, the standard\
      \ input is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-in_format matrix_format\e[0m\n        Format of the input matrices.\
      \ Any input format supported by\n        \e[33mconvert-matrix\e[0m is also supported\
      \ by \e[33mpermute-matrix\e[0m.\n\n    \e[1m-o outputfile\e[0m\n        If no\
      \ output file is specified, the standard output is used. This\n        allows\
      \ to use the command within a pipe.\n\n    \e[1m-out_format matrix_format\e\
      [0m\n        Format of the output matrices. Any output format supported by\n\
      \        \e[33mconvert-matrix\e[0m is also supported by \e[33mpermute-matrix\e\
      [0m.\n\n    \e[1m-perm #\e[0m\n        Number of permutations to apply to each\
      \ input matrix (default 1).\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - supported-organisms-ucsc
    positional:
    - !Positional
      description: "\e[1mAUTHORS\e[0m"
      position: 0
      name: suuported-organism-uscs
      optional: false
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: Jacques.van-Helden\@univ-amu.fr
      optional: false
    - !Positional
      description: "Retrieve mammal genome disponible on UCSC.\nsupported-organims-uscs.pl\
        \ -taxon mammal"
      position: 0
      name: Examples
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    suuported-organism-uscs\n\n\e[1mAUTHORS\e[0m\n\
      \    Jeremy Delerce\n    Jacques.van-Helden\\@univ-amu.fr\n\n\e[1mVERSION\e\
      [0m\n    $program_version\n\n\e[1mDESCRIPTION\e[0m\n    Get the list of organisms\
      \ available at the UCSC Genome browser\n    (http://genome.ucsc.edu/).\n\n\e\
      [1mUSAGE\e[0m\n    supported-organims-uscs.pl [-o file] [-v #] [...]\n\n   \
      \ Examples\n\n    Retrieve mammal genome disponible on UCSC.\n\n     supported-organims-uscs.pl\
      \ -taxon mammal\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity\
      \ (detail in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display\
      \ full help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-o\
      \ outputfile\e[0m\n        The output file is in fasta format.\n\n        If\
      \ no output file is specified, the standard output is used. This\n        allows\
      \ to use the command within a pipe.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - merge-matrices
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: merge-matrices
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: PSSM
      optional: false
    - !Positional
      description: "\e[1mSEE ALSO\e[0m"
      position: 0
      name: width.
      optional: false
    - !Positional
      description: "\e[1m-id matrix_ID\e[0m"
      position: 0
      name: formats.
      optional: false
    - !Positional
      description: "\e[1m-o outputfile\e[0m"
      position: 0
      name: rescan-matrix.
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    merge-matrices\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    This programs takes as input a list of position-specific\
      \ scoring\n    matrices, and merges them by applying a user-selected operator\
      \ on the\n    aligned cell of all matrices.\n\n    Supported operators (option\
      \ -calc): sum, mean, diff.\n\n    The diff operator returns the result of the\
      \ subtraction between the\n    first and the second matrices (if the input file\
      \ contains more than two\n    matrices, a warning message is issued).\n\n\e\
      [1mAUTHORS\e[0m\n    Jaime Castro <jcastro@lcg.unam.mx>\n\n    Jacques van Helden\
      \ <Jacques.van-Helden\\@univ-amu.fr>\n\n\e[1mCATEGORY\e[0m\n    PSSM\n\n\e[1mUSAGE\e\
      [0m\n    merge-matrices [-v #] [-i inputfile] [-in_format input_format] \\ [-o\n\
      \    outputfile] [-out_format output_format] [-calc sum|mean|diff]\n\n\e[1mINPUT/OUTPUT\
      \ FORMAT\e[0m\n    \e[33mmerge-matrices\e[0m supports the same input and output\
      \ formats as\n    \e[33mconvert-matrix\e[0m.\n\n  \e[1mConstraint on matrix\
      \ widths\e[0m\n    The merging operations assume that all input matrices have\
      \ the same\n    width.\n\n\e[1mSEE ALSO\e[0m\n  \e[1mconvert-matrix\e[0m\n \
      \ \e[1mmatrix-clustering\e[0m\n    The program \e[33mmatrix-clustering\e[0m\
      \ uses \e[33mmerge-matrices\e[0m to generate the merged\n    matrices and consensuses\
      \ at each intermediate branch of the matrix tree.\n\n\e[1mWISH LIST\e[0m\n \
      \   \e[1m-merged_attr key value\e[0m\n        Impose the value of specific attribtues\
      \ of the merged matrix.\n\n        This option is useful to specify meaningful\
      \ identifiers or names\n        depending on the context of the analysis.\n\n\
      \    \e[1m-consensus_name\e[0m\n        Calculate the consensus and use it as\
      \ name for the merged matrix.\n\n    \e[1mdecimals\e[0m\n        JvH should\
      \ Fix a bug with the decimals: currently, they only apply\n        to frequencies,\
      \ not to counts.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of\
      \ verbosity (detail in the warning messages during execution)\n\n    \e[1m-h\e\
      [0m  Display full help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n\
      \    \e[1m-i inputfile\e[0m\n        If no input file is specified, the standard\
      \ input is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-in_format input_formaat\e[0m\n        Input format. See \e[33mconvert-matrix\e\
      [0m for a list of supported input\n        formats.\n\n    \e[1m-id matrix_ID\e\
      [0m\n        Specify the ID of the output matrix.\n\n    \e[1m-name matrix_name\e\
      [0m\n        Specify the name of the output matrix.\n\n    \e[1m-calc merging_stat\e\
      [0m\n        Specify the operator used to merge matrices.\n\n        Supported:\n\
      \n        \e[33mmean\e[0m (default)\n            Each cell of the output matrix\
      \ contains the mean of the values\n            found in the corresponding cell\
      \ of the input matrices.\n\n        \e[33msum\e[0m Each cell of the output matrix\
      \ contains the sum of the values\n            found in the corresponding cell\
      \ of the input matrices.\n\n        \e[33mdiff\e[0m\n            Each cell of\
      \ the output matrix contains the difference between\n            the two input\
      \ matrices. \e[1mBeware\e[0m: this option ssumes that the\n            input\
      \ file contains only two matrices.\n\n        If specified, the merged matrix\
      \ (computed with sum or mean) and the\n        sequences are passed to \e[33mrescan-matrix\e\
      [0m in order to build a secondary\n        matrix from binding sites foundin\
      \ the input sequence.\n\n        A typical application is the merging of matrices\
      \ obtained by\n        different motif discovery algorithms in ChIP-seq peak\
      \ sequences.\n        This enables to base the merged matrix on the actual (predicted)\n\
      \        sites from the sequence rather than summing counts which are liely\n\
      \        to result from largely overlapping colections of sites. .\n\n    \e\
      [1m-iterations #\e[0m\n        Maximal number of iterations for rescan-matrix\
      \ (useful only if\n        combined with -seq option).\n\n    \e[1m-scan_param\
      \ scanning_parameters\e[0m\n        Parameters to scan the sites. The argument\
      \ is passed to\n        rescan-matrix.\n\n    \e[1m-o outputfile\e[0m\n    \
      \    If no output file is specified, the standard output is used. This\n   \
      \     allows to use the command within a pipe.\n\n    \e[1m-out_format output_formaat\e\
      [0m\n        Output format. See \e[33mconvert-matrix\e[0m for a list of supportd\
      \ output\n        formats.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - calc-taxfreq
    positional:
    - !Positional
      description: "\e[1mDESCRIPTION\e[0m"
      position: 0
      name: calc-taxfreq
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    calc-taxfreq\n\n\e[1mDESCRIPTION\e[0m\n    Calculate\
      \ the oligo and dyads frequencies for each taxon by averaging\n    frequencies\
      \ over the included genomes.\n\n\e[1mREQUIREMENTS\e[0m\n    This program uses\
      \ other RSAT programs : compare-scores (in order to make\n    one table combining\
      \ all frequencies for all organisms) and row-stats (in\n    order to calculate\
      \ the average of the frequencies).\n\n\e[1mPROTOCOL\e[0m\n    calc-taxfreq -v\
      \ 1 -t Saccharomycetes -r Fungi\n\n\e[1mOPTIONS\e[0m\n    \e[33m--opt\e[0m\n\
      \        Prints the options and their default value.\n\n    \e[33m-h|--help\e\
      [0m\n        Prints this help message\n\n    \e[33m-v|--verbosity [integer]\e\
      [0m\n        Level of verbosity (information displayed on the screen to indicate\n\
      \        the processing)\n\n    \e[33m-t|--taxa [taxon_names]\e[0m\n       \
      \ (ex: Bacteria,Gammaproteobacteria,Saccharomycetes)\n\n        Specify here\
      \ the taxa for which the frequencies will be calculated.\n        If not specified,\
      \ the average frequencies will be calculated for all\n        sub-classes of\
      \ the root.\n\n    \e[33m-r|--root [taxon_name]\e[0m\n        Default:Organisms.\n\
      \n        Specify the root of the tree.\n\n    \e[33m--bg [background]\e[0m\n\
      \        (default:upstream-noorf)\n\n        Specify the background model (see\
      \ oligo-analysis -h).\n\n    \e[33m--oligo_length [integer]\e[0m\n        (default:6)\n\
      \n        Length of oligonucleotides in nucleotides. This value may be shorter\n\
      \        if used with dyads (3nt).\n\n    \e[33m--noov\e[0m\n        No overlapping\
      \ (see oligo-analysis -h).\n\n    \e[33m--str [1 or 2]\e[0m\n        (default:2)\n\
      \n        oligonucleotide occurrences found on both strands (str=2) are summed\n\
      \        or not (str=1).\n\n    \e[33m--dyads\e[0m\n        Use dyads (spaced\
      \ motifs). The spacing is 0-20. If not selected, the\n        program will analyze\
      \ oligonucleotides.\n\n    \e[33m-e|--export_dir [path]\e[0m\n        Results\
      \ will be exported as tab-delimited text files in the results\n        directory.\
      \ If not specified, files are exported in RSAT in the\n        subdirectory\
      \ oligo-frequencies/ of each taxon directory RSAT/taxa/.\n\n    \e[33m--batch\e\
      [0m\n        Run the tasks in batch. This option requires o have correctly\n\
      \        configured the cluster options in the RSAT_config.props file of this\n\
      \        RSAT instance.\n\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - position-analysis
    positional:
    - !Positional
      description: 1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: position-analysis
      optional: false
    - !Positional
      description: pattern-discovery
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "|any\nSequence type"
      synonyms:
      - -seqtype
      args: !SimpleFlagArg
        name: dna
      optional: true
    - !Flag
      description: "#\nStop after # sequences (for quick testing)\nThe possibility\
        \ to limit the analysis to a few sequences\n(e.g.50 of the input file can\
        \ be useful for fine-tuning\nthe options and ensuring that the result will\
        \ appear as\nrequested. Note that this option should not be used for\nthe\
        \ final analysis, since the significance drastically\ndepends on the number\
        \ of input sequences."
      synonyms:
      - -last
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nSkip the first # sequences."
      synonyms:
      - -skip
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nFirst sequence to analyze.\nThe option \"-first n\" has the\
        \ same effect as \"-skip x\",\nwhere x = n-1.  These two somewhat redundant\
        \ options\nexist because in some cases it is easier to indicate the\nfirst\
        \ sequences (e.g. for naming result files according\nto the first and last\
        \ sequences analyzed).\nThe options -skip, -last, -first and -seqnb are\n\
        convenient for analyzing successive slices of at\ndifferent depths in the\
        \ sequence file (e.g. from 1 to\n1000, then from 5001 to 6000, then from 10001\
        \ to 11000,\netc). This allows to test if the position bias of a\npattern\
        \ is consistent over the whole sequence file, or if\nit is confined to the\
        \ top sequences.\nAn example of useful application of this slice-based\nanalysis\
        \ is to estimate the number of relevant sequences\nin peaks returned by applying\
        \ peak-calling programs on\nChIP-seq reads.  Peak sequences should be sorted\
        \ by\ndecreasing score values."
      synonyms:
      - -first
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nMaximal number of sequences to analyze. The program stops\n\
        reading the sequences after having reached this\nnumber. This option is convenient\
        \ for analyzing\nsuccessive slices of at different depths in the sequence\n\
        file (e.g. for peak sequences sorted by decreasing\nscores.\nExample: analyze\
        \ N sequences starting from the X_th one.\n-first X -seqnnb N\nWhen used without\
        \ -skip or -first, the option -seqnb\ngives the same result as -last."
      synonyms:
      - -seqnb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "|lower\nMask lower or uppercases, respecively, i.e. replace\n\
        selected case by N characters."
      synonyms:
      - -mask
      args: !SimpleFlagArg
        name: upper
      optional: true
    - !Flag
      description: "file format. Must be followed by one of the\nfollowing options:\n\
        fasta (default)\nwconsensus\nIG\nfilelist\nraw\nSee below for the description\
        \ of these formats."
      synonyms:
      - -format
      args: !SimpleFlagArg
        name: input
      optional: true
    - !Flag
      description: "outputfile. Returns a list of the oligonucleotides\nencountered\
        \ in the sequences, with their frequencies."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: file
      optional: true
    - !Flag
      description: '#    verbose level.'
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: oligonucleotide length.
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "window interval (default 20 bases).\nThe width of the position\
        \ windows (in number of bases)"
      synonyms:
      - -ci
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "| center | end\nReference for calculating positions.\nThe value\
        \ should be chosen according to the sequence\ntype. For instance:\n-origin\
        \ start for downstream sequences\n-origin end for promoter sequences\n-origin\
        \ center can be useful for ChIP-seq peaks, which\ncan have variable lengths,\
        \ but are supposed to\nbe more or less centred on the TF binding\nqsites."
      synonyms:
      - -origin
      args: !SimpleFlagArg
        name: start
      optional: true
    - !Flag
      description: "Add an offset to site positions. The offset value must\nbe an\
        \ Integer number (positive, null or\nnegative). This option allows to select\
        \ an arbitrary\nposition as origin.\nExample: the option I<-offset -100> can\
        \ be used to\nspecify the transcription start site (TSS) as origin,\nin a\
        \ collection of promoter sequences including 100\nresidues downstream of the\
        \ TSS.\nNote: in previous versions, -origin was used to\nspecify both the\
        \ reference point and the offset. Since\nMarch 2010, the offset is specified\
        \ with the option\n-offset."
      synonyms:
      - -offset
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: group reverse complement pairs
      synonyms:
      - -grouprc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: do not group reverse complement pairs
      synonyms:
      - -nogrouprc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "sort oligonucleotides according to the chi2\nstatistics, reflecting\
        \ the level of bias in\ndistribution profile"
      synonyms:
      - -sort
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "inactivates the summation of occurrences on both\nstrands."
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "oligonucleotide occurrences found on both stands are\nsummed."
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "no overlap\noverlapping occurrences of the same pattern are\n\
        only taken into account once"
      synonyms:
      - -noov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "supported fields:\nhtml    HTML formatted results + index file\n\
        distrib k-mer occurrences per position window\nexp_occ expected occurrences\
        \ for each window\nchi     chi-square value\nrank    rank of the pattern according\
        \ to the sorting\ncriterion\ngraphs  one graph file per oligont profile\n\
        clusters run k-mer clustering (regroup k-mers having\nsimilar occurrence profiles).\n\
        Several return fields can be entered, separated by\ncommas."
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: fields_to_return
      optional: true
    - !Flag
      description: "task1,task2,...\nSupported tasks:\npos: analyze oligonucleotide\
        \ occurrences (\"main\"\nanalysis)\nclusters: cluster oligonucleotides according\
        \ to\ntheir occurrence profiles.\nmatrices: build position-specific scoring\
        \ matrices\nfrom clusters of oligonucleotides occupying\nsimilar positions.\n\
        When different values would be entered for\noptions -min_clust_nb and -max_clust_nb,\n\
        matrices and logos are only generated for the\nmaximal number of cluster (max_clust_nb),\
        \ for\nthe sake of time efficiency and readability of\nthe HTML reports.\n\
        graphs: generate a XY graph with the occurernce\nprofile of each oligonucleotide.\n\
        index: generate the HTML file with links to the\nresult files.\nall: run all\
        \ the tasks above\nRun specific tasks rather than the whole analysis.\nThis\
        \ option mainly serve to avoir re-running the whole\nsequence analysis for\
        \ re-running cluster analysis with\nmodified parameters."
      synonyms:
      - -task
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Order for the Markov model use to compute\nposition-specific expected\
        \ word frequencies.\nBy default, expected frequencies are estimated by\nassuming\
        \ a homogeneous repartition of k-mer\noccurrences (as in the original publication\
        \ by van\nHelden et al., 2000).\nAlternatively, the option -markov indicates\
        \ that\nexpected frequency of each k-mer in each position\nwindow will be\
        \ calculated on the basis of the observed\nfrequencies for smaller words."
      synonyms:
      - -markov
      args: !SimpleFlagArg
        name: markov_order
      optional: true
    - !Flag
      description: "#      lower threshold on chi2\nreturn only words with a chi2\
        \ value > #"
      synonyms:
      - -lth_chi
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#      lower threshold on significance\nreturn only words with\
        \ a sig value > #"
      synonyms:
      - -lth_sig
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#      lower threshold on occurrences\nreturn only words with\
        \ a number of occurrences > #"
      synonyms:
      - -lth_occ
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#     upper threshold on rank\nreturn maximum # words"
      synonyms:
      - -uth_rank
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '#   maximal number of graphs to export'
      synonyms:
      - -max_graphs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "A file containing a selection of patterns.  The\nanalysis is then\
        \ restricted to these patterns.  The\nfirst word of each new line is considered\
        \ as a new\npattern.  A score can be associated to each pattern\nwith the\
        \ option -sc."
      synonyms:
      - -pl
      args: !SimpleFlagArg
        name: pattern_file
      optional: true
    - !Flag
      description: "#   score column\n(only valid whith the option -pl)\nThe column\
        \ containing a score value for each pattern\nof the pattern file"
      synonyms:
      - -sc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nminimal position to take into account for the\nchi-square calculation\
        \ This value must be a multiple\nof the window interval."
      synonyms:
      - -minpos
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nmaximal position to take into account for the\nchi-square calculation\
        \ This value must be a multiple\nof the window interval."
      synonyms:
      - -maxpos
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "do not check the applicability condition on the\nchi-square. By\
        \ default, the program checks that each\nwindow has at least 5 observations.\
        \ The chi-square is\nbracketed for words which do not fill this\nconditions.\
        \ It is now recognized that this condition\nis too restrictive, and that the\
        \ chi2 is still valid\nwith smaller clas effective. We allow to suppress the\n\
        checking, but the responsibility is left to the user,\nto decide whether the\
        \ chi2 is or not significant."
      synonyms:
      - -nocheck
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Do not discard oligos which do not fit the condition\nof applicability.\
        \ Instead, mark them by including the\nchi2 value in curly brackets."
      synonyms:
      - -nofilter
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "| midfloor | min | max | interval\nInformation to display in column\
        \ headers of the\ndistributions.\nmid: class middle points (centers)\nmidfloor:\
        \ floor of class middle points (centers).\nthis avoids to display non-integer\
        \ mid points\n(e.g. for interval 1-10 the midpoint is 5.5)\nmin: class min\n\
        max: class max\ninterval: class intervals: [min,max]"
      synonyms:
      - -header
      args: !SimpleFlagArg
        name: mid
      optional: true
    - !Flag
      description: "#\nSelect the top # sequences for building position-specific\n\
        scoring matrices (PSSM).  This argument is passed to the\nprogram matrix-from-pattern.\n\
        This option does not affect the number of sequences used\nfor motif discovery\
        \ (detecting positionally biased\noligonucelotides), but it can be useful\
        \ to test the\nsecond phase of motif discovery: extracion of matrices\nfrom\
        \ the selected oligonucleotides."
      synonyms:
      - -top_seq_for_matrices
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Image format (this parameter is passed to XYgraph).
      synonyms:
      - -img_format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Title for the index table and position profile plots.
      synonyms:
      - -title
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Agglomeration rule for the hierarchical\nclustering. Supported:\
        \ complete, average, single,\nward. Default: complete."
      synonyms:
      - -clust_method
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nNumber of clusters (default: 8)."
      synonyms:
      - -clust_nb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Suffix to append to the cluster file and the directory\ncontianing\
        \ cluster graphics. Default: 'clusters'.\n"
      synonyms:
      - -clust_suffix
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "NAME\n\tposition-analysis\n\n        1998 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nDESCRIPTION\n\tCalculates the positional distribution of oligonucleotides\
      \ in\n\ta set of sequences, and detects those which significantly\n\tdiscard\
      \ from a homogeneous repartition.\n\nCATEGORY\n\tsequences\n\tpattern-discovery\n\
      \nDETAILED DESCRIPTION\n\n\tThis programs takes a sequence set as input, and\
      \ calculates\n\tthe number of occurrences of each word in a set of\n\tnon-overlapping\
      \ positional windows. The window width (in\n\tnumber of residues) is specified\
      \ with the option -ci (window\n\tinterval).\n\n\tThe expected number of occurrences\
      \ per window is then computed\n\ton the basis of a model of homogeneous repartition\
      \ of the\n\toccurrences. Beware : homogeneous repartition does not\n\tnecessarily\
      \ mean \"flat\". Indeed, if the sequence set contains\n\tsequences of unequal\
      \ lengths, the number of sequence fragments\n\tvaries from window to window.\n\
      \n\tObserved and expected occurrences are compared using the\n\tchi-squared\
      \ formula:\n\n\t\tchisq = SUM_i ( (obs-exp)^2 / exp )\n\n\twhere i is the window\
      \ number.\n\n\tA P-value is calculated for each word.\n\n\t  Pval = P(chisq\
      \ >= x)\n\nUSAGE\n\tposition-analysis [-i inputfile]  [-format input_format]\n\
      \                [-o outputfile] -l length -ci pos_interval\n              \
      \  [-1str | -2str] [-grouprc | -nogrouprc]\n\n\tposition-analysis [-h | -help]\n\
      \t\tprovides a detailed or synthetic documentation\n\n\nOPTIONS\n\t-i inputfile\n\
      \t\tif not specified, the standard input is used.\n\t\tThis allows to place\
      \ the command within a pipe.\n\n\t-seqtype dna|any\n\t\t  Sequence type\n\n\t\
      -last #\n\t      Stop after # sequences (for quick testing)\n\n\t      The possibility\
      \ to limit the analysis to a few sequences\n\t      (e.g.50 of the input file\
      \ can be useful for fine-tuning\n\t      the options and ensuring that the result\
      \ will appear as\n\t      requested. Note that this option should not be used\
      \ for\n\t      the final analysis, since the significance drastically\n\t  \
      \    depends on the number of input sequences.\n\n\t-skip #\n\t      Skip the\
      \ first # sequences.\n\n\t-first #\n\n\t     First sequence to analyze.\n\n\t\
      \     The option \"-first n\" has the same effect as \"-skip x\",\n\t     where\
      \ x = n-1.  These two somewhat redundant options\n\t     exist because in some\
      \ cases it is easier to indicate the\n\t     first sequences (e.g. for naming\
      \ result files according\n\t     to the first and last sequences analyzed).\n\
      \n\t     The options -skip, -last, -first and -seqnb are\n\t     convenient\
      \ for analyzing successive slices of at\n\t     different depths in the sequence\
      \ file (e.g. from 1 to\n\t     1000, then from 5001 to 6000, then from 10001\
      \ to 11000,\n\t     etc). This allows to test if the position bias of a\n\t\
      \     pattern is consistent over the whole sequence file, or if\n\t     it is\
      \ confined to the top sequences.\n\n\t     An example of useful application\
      \ of this slice-based\n\t     analysis is to estimate the number of relevant\
      \ sequences\n\t     in peaks returned by applying peak-calling programs on\n\
      \t     ChIP-seq reads.  Peak sequences should be sorted by\n\t     decreasing\
      \ score values.\n\n        -seqnb #\n\n\t     Maximal number of sequences to\
      \ analyze. The program stops\n\t     reading the sequences after having reached\
      \ this\n\t     number. This option is convenient for analyzing\n\t     successive\
      \ slices of at different depths in the sequence\n\t     file (e.g. for peak\
      \ sequences sorted by decreasing\n\t     scores.\n\n\t     Example: analyze\
      \ N sequences starting from the X_th one.\n\t\t-first X -seqnnb N\n\n\t    \
      \ When used without -skip or -first, the option -seqnb\n\t     gives the same\
      \ result as -last.\n\n\t-mask upper|lower\n\t\tMask lower or uppercases, respecively,\
      \ i.e. replace\n\t\tselected case by N characters.\n\n\t-format\tinput file\
      \ format. Must be followed by one of the\n\t\tfollowing options:\n\t\t   fasta\
      \ (default)\n\t\t   wconsensus\n\t\t   IG\n\t\t   filelist\n\t\t   raw\n\t\t\
      See below for the description of these formats.\n\n\t-o file\toutputfile. Returns\
      \ a list of the oligonucleotides\n\t\tencountered in the sequences, with their\
      \ frequencies.\n\n\t-v #\tverbose level.\n\n\t-l\toligonucleotide length.\n\n\
      \t-ci\twindow interval (default 20 bases).\n\t\tThe width of the position windows\
      \ (in number of bases)\n\n\t-origin start | center | end\n\t\tReference for\
      \ calculating positions.\n\n\n\t\tThe value should be chosen according to the\
      \ sequence\n\t\ttype. For instance:\n\n\t\t-origin start for downstream sequences\n\
      \n\t\t-origin end for promoter sequences\n\n\t\t-origin center can be useful\
      \ for ChIP-seq peaks, which\n\t\t\tcan have variable lengths, but are supposed\
      \ to\n\t\t\tbe more or less centred on the TF binding\n\t\t\tqsites.\n\n\t-offset\n\
      \t\tAdd an offset to site positions. The offset value must\n\t\tbe an Integer\
      \ number (positive, null or\n\t\tnegative). This option allows to select an\
      \ arbitrary\n\t\tposition as origin.\n\n\t\tExample: the option I<-offset -100>\
      \ can be used to\n\t\tspecify the transcription start site (TSS) as origin,\n\
      \t\tin a collection of promoter sequences including 100\n\t\tresidues downstream\
      \ of the TSS.\n\n\t\tNote: in previous versions, -origin was used to\n\t\tspecify\
      \ both the reference point and the offset. Since\n\t\tMarch 2010, the offset\
      \ is specified with the option\n\t\t-offset.\n\n\t-grouprc        group reverse\
      \ complement pairs\n\n\t-nogrouprc      do not group reverse complement pairs\n\
      \n\t-sort\n\t\tsort oligonucleotides according to the chi2\n\t\tstatistics,\
      \ reflecting the level of bias in\n\t\tdistribution profile\n\n\t-1str\n\t\t\
      inactivates the summation of occurrences on both\n\t\tstrands.\n\n\t-2str\n\t\
      \toligonucleotide occurrences found on both stands are\n\t\tsummed.\n\n\t-noov\t\
      no overlap\n\t\t\toverlapping occurrences of the same pattern are\n\t\t\tonly\
      \ taken into account once\n\n\t-return\tfields_to_return\n\t\tsupported fields:\n\
      \n\t\thtml\tHTML formatted results + index file\n\n\t\tdistrib\tk-mer occurrences\
      \ per position window\n\n\t\texp_occ\texpected occurrences for each window\n\
      \n\t\tchi\tchi-square value\n\n\t\trank \trank of the pattern according to the\
      \ sorting\n\t\t\tcriterion\n\n\t\tgraphs\tone graph file per oligont profile\n\
      \n\t\tclusters run k-mer clustering (regroup k-mers having\n\t\t\tsimilar occurrence\
      \ profiles).\n\n\t\tSeveral return fields can be entered, separated by\n\t\t\
      commas.\n\n\t-task   task1,task2,...\n\n\t\tSupported tasks:\n\n\t\t   pos:\
      \ analyze oligonucleotide occurrences (\"main\"\n\t\t   \tanalysis)\n\n\t\t\
      \   clusters: cluster oligonucleotides according to\n\t\t        their occurrence\
      \ profiles.\n\n\t\t   matrices: build position-specific scoring matrices\n\t\
      \t   \tfrom clusters of oligonucleotides occupying\n\t\t   \tsimilar positions.\n\
      \n\t\t        When different values would be entered for\n\t\t\toptions -min_clust_nb\
      \ and -max_clust_nb,\n\t\t\tmatrices and logos are only generated for the\n\t\
      \t\tmaximal number of cluster (max_clust_nb), for\n\t\t\tthe sake of time efficiency\
      \ and readability of\n\t\t\tthe HTML reports.\n\n\t\t   graphs: generate a XY\
      \ graph with the occurernce\n\t\t        profile of each oligonucleotide.\n\n\
      \t\t   index: generate the HTML file with links to the\n   \t\t        result\
      \ files.\n\n\t\t   all: run all the tasks above\n\n\t\tRun specific tasks rather\
      \ than the whole analysis. \n\n\t\tThis option mainly serve to avoir re-running\
      \ the whole\n\t\tsequence analysis for re-running cluster analysis with\n\t\t\
      modified parameters.\n\n\t-markov markov_order\n\t\tOrder for the Markov model\
      \ use to compute\n\t\tposition-specific expected word frequencies.\n\n\t\tBy\
      \ default, expected frequencies are estimated by\n\t\tassuming a homogeneous\
      \ repartition of k-mer\n\t\toccurrences (as in the original publication by van\n\
      \t\tHelden et al., 2000).\n\n\t\tAlternatively, the option -markov indicates\
      \ that\n\t\texpected frequency of each k-mer in each position\n\t\twindow will\
      \ be calculated on the basis of the observed\n\t\tfrequencies for smaller words.\n\
      \n\t-lth_chi #\tlower threshold on chi2\n\t\treturn only words with a chi2 value\
      \ > #\n\n\t-lth_sig #\tlower threshold on significance\n\t\treturn only words\
      \ with a sig value > #\n\n\t-lth_occ #\tlower threshold on occurrences\n\t\t\
      return only words with a number of occurrences > #\n\n\t-uth_rank #\tupper threshold\
      \ on rank\n\t\treturn maximum # words\n\n\t-max_graphs #\tmaximal number of\
      \ graphs to export\n\n\t-pl pattern_file\n\t\tA file containing a selection\
      \ of patterns.  The\n\t\tanalysis is then restricted to these patterns.  The\n\
      \t\tfirst word of each new line is considered as a new\n\t\tpattern.  A score\
      \ can be associated to each pattern\n\t\twith the option -sc.\n\n\t-sc #\tscore\
      \ column\n\t\t(only valid whith the option -pl)\n\t\tThe column containing a\
      \ score value for each pattern\n\t\tof the pattern file\n\n\t-minpos #\n\t\t\
      minimal position to take into account for the\n\t\tchi-square calculation This\
      \ value must be a multiple\n\t\tof the window interval.\n\n\t-maxpos #\n\t\t\
      maximal position to take into account for the\n\t\tchi-square calculation This\
      \ value must be a multiple\n\t\tof the window interval.\n\n\t-nocheck\n\t\t\
      do not check the applicability condition on the\n\t\tchi-square. By default,\
      \ the program checks that each\n\t\twindow has at least 5 observations. The\
      \ chi-square is\n\t\tbracketed for words which do not fill this\n\t\tconditions.\
      \ It is now recognized that this condition\n\t\tis too restrictive, and that\
      \ the chi2 is still valid\n\t\twith smaller clas effective. We allow to suppress\
      \ the\n\t\tchecking, but the responsibility is left to the user,\n\t\tto decide\
      \ whether the chi2 is or not significant.\n\n\t-nofilter\n\t\tDo not discard\
      \ oligos which do not fit the condition\n\t\tof applicability. Instead, mark\
      \ them by including the\n\t\tchi2 value in curly brackets.\n\n\t-header mid\
      \ | midfloor | min | max | interval\n\n\t\tInformation to display in column\
      \ headers of the\n\t\tdistributions.\n\n                  mid: class middle\
      \ points (centers)\n\n                  midfloor: floor of class middle points\
      \ (centers).\n                      this avoids to display non-integer mid points\n\
      \                      (e.g. for interval 1-10 the midpoint is 5.5)\n\n    \
      \              min: class min\n\n                  max: class max\n\n      \
      \            interval: class intervals: [min,max]\n\n\t-top_seq_for_matrices\
      \ #\n\n\t     Select the top # sequences for building position-specific\n\t\
      \     scoring matrices (PSSM).  This argument is passed to the\n\t     program\
      \ matrix-from-pattern.\n\n\t     This option does not affect the number of sequences\
      \ used\n\t     for motif discovery (detecting positionally biased\n\t     oligonucelotides),\
      \ but it can be useful to test the\n\t     second phase of motif discovery:\
      \ extracion of matrices\n\t     from the selected oligonucleotides. \n\n\t-img_format\n\
      \t\tImage format (this parameter is passed to XYgraph).\n\n\t-title\n\t\tTitle\
      \ for the index table and position profile plots.\n\n   CLUSTERING OPTIONS\n\
      \n       Oligonucleotide clusters are defined by running hierarchical\n    \
      \   clustering on the word occurrence profiles, and by cutting the\n       tree\
      \ with a predefined number of clusters.\n\n       -clust_method\n\n\t    Agglomeration\
      \ rule for the hierarchical\n\t    clustering. Supported: complete, average,\
      \ single,\n\t    ward. Default: complete.\n\n\t-clust_nb #\n\t    Number of\
      \ clusters (default: 8).\n\n\t-clust_suffix\n\n\t    Suffix to append to the\
      \ cluster file and the directory\n\t    contianing cluster graphics. Default:\
      \ 'clusters'.\n\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - crer-scan
    positional:
    - !Positional
      description: ''
      position: 0
      name: crer-scan
      optional: false
    named:
    - !Flag
      description: If not specified, input is read from STDIN
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: INFILE
      optional: true
    - !Flag
      description: "input_format. Default: ft (produced by RSAT matrix-\nscan and\
        \ dna-pattern). Supported: ft, bed"
      synonyms:
      - -in_format
      args: !SimpleFlagArg
        name: FORMAT
      optional: true
    - !Flag
      description: Output file in ft format
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: OUTFILE
      optional: true
    - !Flag
      description: "level of verbose. Messages are wrote on standard\nerror. Supported:\
        \ Integer = 1,2,3. By default : 1 = No\nmessage. Level 2 : moderately density\
        \ of messages.\nLevel 3 : High density"
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: VERBOSE
      optional: true
    - !Flag
      description: "Extract some input parameters from the commented rows\n(starting\
        \ with ';') of the input file. This option is\nonly valid for files produced\
        \ by matrix-scan with a\nverbosity of at least 1."
      synonyms:
      - -autoparam
      args: !SimpleFlagArg
        name: AUTOPARAM
      optional: true
    - !Flag
      description: "sort the list of sites. Very recommended. The sites\nare sorted\
        \ by center position"
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "return every limits of sequences. By default : no\nreturn any\
        \ limits"
      synonyms:
      - -return_limits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "return the limits filtered of the sequence. Only the\nsequence\
        \ limits of CRERs. By default : no return any\nlimits"
      synonyms:
      - -return_limits_filtered
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: minimal site score to be considered
      synonyms:
      - -lth_score
      args: !SimpleFlagArg
        name: LTH_SITE_SCORE
      optional: true
    - !Flag
      description: maximal site score to be considered
      synonyms:
      - -uth_score
      args: !SimpleFlagArg
        name: UTH_SITE_SCORE
      optional: true
    - !Flag
      description: "maximal p_value of sites to be considered. recommended\nto be\
        \ the higher site p_value considered"
      synonyms:
      - -uth_site_pval
      args: !SimpleFlagArg
        name: UTH_SITE_PVAL
      optional: true
    - !Flag
      description: "number of matrix used for the discovery of\ntranscription factor\
        \ binding sites. Warning : Not\nconsidered if autoparam is on"
      synonyms:
      - -number_of_matrix
      args: !SimpleFlagArg
        name: NUMBER_OF_MATRIX
      optional: true
    - !Flag
      description: "minimal size of the enriched region (in bp). Default:\nminimal\
        \ size = 30bp"
      synonyms:
      - -lth_crer_size
      args: !SimpleFlagArg
        name: LTH_CRER_SIZE
      optional: true
    - !Flag
      description: "maximal size of the enriched region (in bp). Default:\nmaximal\
        \ site = 500bp"
      synonyms:
      - -uth_crer_size
      args: !SimpleFlagArg
        name: UTH_CRER_SIZE
      optional: true
    - !Flag
      description: "minimal number of sites covered by the enriched\nregion. Default:\
        \ minimal number of sites = 2"
      synonyms:
      - -lth_crer_sites
      args: !SimpleFlagArg
        name: LTH_CRER_SITES
      optional: true
    - !Flag
      description: "maximal number of sites covered by the enriched\nregion."
      synonyms:
      - -uth_crer_sites
      args: !SimpleFlagArg
        name: UTH_CRER_SITES
      optional: true
    - !Flag
      description: "distance between successive sites to be considered. A\nminimal\
        \ inter-site distance can be used to prevent\noverlap between redundant matrices.\
        \ Default = minimal\ndistance = 1"
      synonyms:
      - -lth_crer_sites_distance
      args: !SimpleFlagArg
        name: LTH_CRER_SITES_DISTANCE
      optional: true
    - !Flag
      description: "distance between successive sites to be considered. A\nmaximal\
        \ inter-site distance can be used to prevent\nmerging distinct modules into\
        \ a single one. Note: the\nmaximal inter-site distance is one of the most\n\
        influential parameters in cluster-buster. Default:\nmaximal distance = 35"
      synonyms:
      - -uth_crer_sites_distance
      args: !SimpleFlagArg
        name: UTH_CRER_SITES_DISTANCE
      optional: true
    - !Flag
      description: 'maximal binomial p-value. Default: 1e-4'
      synonyms:
      - -uth_crer_pval
      args: !SimpleFlagArg
        name: UTH_CRER_PVAL
      optional: true
    - !Flag
      description: 'maximal e-value. Default: 1e-4'
      synonyms:
      - -uth_crer_eval
      args: !SimpleFlagArg
        name: UTH_CRER_EVAL
      optional: true
    - !Flag
      description: 'minimal binomial significance. Default: 2'
      synonyms:
      - -lth_crer_sig
      args: !SimpleFlagArg
        name: LTH_CRER_SIGNIFICANCE
      optional: true
    - !Flag
      description: maximal overlap to define two distinct sites
      synonyms:
      - -uth_overlap
      args: !SimpleFlagArg
        name: UTH_OVERLAP
      optional: true
    - !Flag
      description: compute CRER without p value
      synonyms:
      - -nopval
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "compute a table where is all possible p_value. Useful\nwhere there\
        \ is a huge number of sites to scan.\n"
      synonyms:
      - -pre_table
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: crer-scan [-h] [-i INFILE] [-in_format FORMAT] [-o OUTFILE]\n\
      \                 [-v VERBOSE] [-autoparam AUTOPARAM] [-s] [-return_limits]\n\
      \                 [-return_limits_filtered] [-lth_score LTH_SITE_SCORE]\n  \
      \               [-uth_score UTH_SITE_SCORE] [-uth_site_pval UTH_SITE_PVAL]\n\
      \                 [-number_of_matrix NUMBER_OF_MATRIX]\n                 [-lth_crer_size\
      \ LTH_CRER_SIZE] [-uth_crer_size UTH_CRER_SIZE]\n                 [-lth_crer_sites\
      \ LTH_CRER_SITES]\n                 [-uth_crer_sites UTH_CRER_SITES]\n     \
      \            [-lth_crer_sites_distance LTH_CRER_SITES_DISTANCE]\n          \
      \       [-uth_crer_sites_distance UTH_CRER_SITES_DISTANCE]\n               \
      \  [-uth_crer_pval UTH_CRER_PVAL] [-uth_crer_eval UTH_CRER_EVAL]\n         \
      \        [-lth_crer_sig LTH_CRER_SIGNIFICANCE]\n                 [-uth_overlap\
      \ UTH_OVERLAP] [-nopval] [-pre_table]\n\noptional arguments:\n  -h, --help \
      \           show this help message and exit\n  -i INFILE             If not\
      \ specified, input is read from STDIN\n  -in_format FORMAT     input_format.\
      \ Default: ft (produced by RSAT matrix-\n                        scan and dna-pattern).\
      \ Supported: ft, bed\n  -o OUTFILE            Output file in ft format\n  -v\
      \ VERBOSE            level of verbose. Messages are wrote on standard\n    \
      \                    error. Supported: Integer = 1,2,3. By default : 1 = No\n\
      \                        message. Level 2 : moderately density of messages.\n\
      \                        Level 3 : High density\n  -autoparam AUTOPARAM  Extract\
      \ some input parameters from the commented rows\n                        (starting\
      \ with ';') of the input file. This option is\n                        only\
      \ valid for files produced by matrix-scan with a\n                        verbosity\
      \ of at least 1.\n  -s                    sort the list of sites. Very recommended.\
      \ The sites\n                        are sorted by center position\n  -return_limits\
      \        return every limits of sequences. By default : no\n               \
      \         return any limits\n  -return_limits_filtered\n                   \
      \     return the limits filtered of the sequence. Only the\n               \
      \         sequence limits of CRERs. By default : no return any\n           \
      \             limits\n  -lth_score LTH_SITE_SCORE\n                        minimal\
      \ site score to be considered\n  -uth_score UTH_SITE_SCORE\n               \
      \         maximal site score to be considered\n  -uth_site_pval UTH_SITE_PVAL\n\
      \                        maximal p_value of sites to be considered. recommended\n\
      \                        to be the higher site p_value considered\n  -number_of_matrix\
      \ NUMBER_OF_MATRIX\n                        number of matrix used for the discovery\
      \ of\n                        transcription factor binding sites. Warning :\
      \ Not\n                        considered if autoparam is on\n  -lth_crer_size\
      \ LTH_CRER_SIZE\n                        minimal size of the enriched region\
      \ (in bp). Default:\n                        minimal size = 30bp\n  -uth_crer_size\
      \ UTH_CRER_SIZE\n                        maximal size of the enriched region\
      \ (in bp). Default:\n                        maximal site = 500bp\n  -lth_crer_sites\
      \ LTH_CRER_SITES\n                        minimal number of sites covered by\
      \ the enriched\n                        region. Default: minimal number of sites\
      \ = 2\n  -uth_crer_sites UTH_CRER_SITES\n                        maximal number\
      \ of sites covered by the enriched\n                        region.\n  -lth_crer_sites_distance\
      \ LTH_CRER_SITES_DISTANCE\n                        distance between successive\
      \ sites to be considered. A\n                        minimal inter-site distance\
      \ can be used to prevent\n                        overlap between redundant\
      \ matrices. Default = minimal\n                        distance = 1\n  -uth_crer_sites_distance\
      \ UTH_CRER_SITES_DISTANCE\n                        distance between successive\
      \ sites to be considered. A\n                        maximal inter-site distance\
      \ can be used to prevent\n                        merging distinct modules into\
      \ a single one. Note: the\n                        maximal inter-site distance\
      \ is one of the most\n                        influential parameters in cluster-buster.\
      \ Default:\n                        maximal distance = 35\n  -uth_crer_pval\
      \ UTH_CRER_PVAL\n                        maximal binomial p-value. Default:\
      \ 1e-4\n  -uth_crer_eval UTH_CRER_EVAL\n                        maximal e-value.\
      \ Default: 1e-4\n  -lth_crer_sig LTH_CRER_SIGNIFICANCE\n                   \
      \     minimal binomial significance. Default: 2\n  -uth_overlap UTH_OVERLAP\n\
      \                        maximal overlap to define two distinct sites\n  -nopval\
      \               compute CRER without p value\n  -pre_table            compute\
      \ a table where is all possible p_value. Useful\n                        where\
      \ there is a huge number of sites to scan.\n"
    generated_using: *id003
  - !Command
    command:
    - rsat
    - draw-heatmap
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: draw-heatmap
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: "\e[1m-out_format img_format\e[0m"
      position: 0
      name: heatmap.
      optional: false
    named:
    - !Flag
      description: (2016-02-29).
      synonyms:
      - -r_plot
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[png|jpeg]'
      synonyms:
      - -out_format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: model_transition_heatmap.png
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    draw-heatmap\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Draw a heatmap from a table\n\n\e[1mAUTHORS\e[0m\n\
      \    Sylvain Brohee <sbrohee\\@ulb.ac.be>\n\n    With the help of Morgane Thomas-Chollier\
      \ <morgane@bigre.ulb.ac.be> for\n    Chaos representation\n\n    Jacques van\
      \ Helden <Jacques.van-Helden@univ-amu.fr> for the optio\n    -r_plot (2016-02-29).\n\
      \n\e[1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e[0m\n    draw-heatmap [-i inputfile]\
      \ -o outputfile [-v #] [-chaos] [...]\n    -out_format [png|jpeg]\n\n\e[1mINPUT\
      \ FORMAT\e[0m\n    A tab delimited table.\n\n    It may contain a header (starting\
      \ with a '#' symbol). The cells nlt\n    containing real values will not be\
      \ taken into account.\n\n\e[1mOUTPUT FORMAT\e[0m\n    A heatmap in the specified\
      \ format.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n        Level of verbosity\
      \ (detail in the warning messages during execution)\n\n    \e[1m-h\e[0m  Display\
      \ full help message\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-i\
      \ inputfile\e[0m\n        Input file name. This option is mandatory.\n\n   \
      \ \e[1m-o outputfile\e[0m\n        Name of the output file. This option is mandatory.\n\
      \n    \e[1m-html html_map_file\e[0m\n        If a HTML map file is defined,\
      \ draw-heatmap then produces a HTML\n        file that loads the HEATMAP. Moreover,\
      \ each of the cells is defined\n        so that when the mouse is over in a\
      \ web browser, a tooltip displays\n        the row name, column name and the\
      \ value of the cell.\n\n        For CHAOS game representation, the word corresponding\
      \ to the cell\n        and its associated value are given.\n\n    \e[1m-rownames\e\
      [0m\n        Use this option if the first column contain the row names.\n\n\
      \    \e[1m-no_text\e[0m\n        Using this option, the values are not written\
      \ in the cells of the\n        heatmap.\n\n    \e[1m-out_format img_format\e\
      [0m\n        Output format. Supported: png,jpeg\n\n    \e[1m-title\e[0m\n  \
      \      Title for the graph (only works with option -r_plot so far).\n\n    \e\
      [1m-gradient\e[0m\n        Color of the intensity gradient of the heatmap. Default\
      \ is grey.\n        Supported : green, blue, red, fire, grey.\n\n    \e[1m-col_width\
      \ #\e[0m\n        Width of the columns (in pixel).\n\n        If the row height\
      \ is to small, the label of the heatmap will not be\n        indicated. (Default\
      \ : 50 px)\n\n    \e[1m-row_height #\e[0m\n        Height of the rows (in pixel).\n\
      \n        If the row height is to small, the label of the heatmap will not be\n\
      \        indicated. (Default : 30 px)\n\n    \e[1m-min #\e[0m\n        Minimal\
      \ value of the heatmap. By default, this value is the minimal\n        value\
      \ of the input file. If the specified value is larger than the\n        minimal\
      \ value of the heatmap, then the minimal value of the heatmap\n        will\
      \ be used as minimal value.\n\n    \e[1m-max #\e[0m\n        Maximal value of\
      \ the heatmap. By default, this value is the maximal\n        value of the input\
      \ file. If the specified value is smaller than the\n        maximal value of\
      \ the heatmap, then the maximal value of the heatmap\n        will be used as\
      \ maximal value.\n\n    \e[1m-digits #\e[0m\n        Round the values to the\
      \ specified number of digit.\n\n    \e[1m-lines\e[0m\n        Add black vertical\
      \ and horizontal separations lines between the\n        cells of the heatmap\n\
      \n    \e[1m-chaos\e[0m\n        The heatmap is a CHAOS Game Representation.\
      \ This option enables to\n        label the angles of the figure with the nucleotide\
      \ letters,\n        activates -no_text, and col_width equals row_height to obtain\n\
      \        squares. see \e[33mchaos-table\e[0m for details on CHAOS Game Representation.\n\
      \n    \e[1m-r_plot\e[0m\n        Use R to generate the heatmap, rather than\
      \ using the Perl GD module.\n\n\e[1mSEE ALSO\e[0m\n  \e[1mconvert-background-model\e\
      [0m\n    Heatmaps can be used to provide an intuitive feeling of Markovian\n\
      \    background models provided as transition matrices. Such models can be\n\
      \    obtained with the command.\n\n     convert-background-model -i model.tab\
      \ -from oligos -to transitions \\\n       | cut -f 1-5 | heatmap -out_format\
      \ png -min 0 -max 1 \\\n          -o model_transition_heatmap.png\n\n\e[1mWISH\
      \ LIST\e[0m\n    \e[1m-out_format\e[0m\n        Add support for ps and pdf formats>\n\
      \n    \e[1m-title 'My title text'\e[0m\n        Display a title on the top of\
      \ the image.\n\n    \e[1m-xlab 'X label'\e[0m\n        Display the label along\
      \ the X axis of the image.\n\n    \e[1m-ylab 'Y label'\e[0m\n        Display\
      \ the label along the Y axis of the image.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - add-gene-info
    positional:
    - !Positional
      description: DESCRIPTION
      position: 0
      name: add-gene-info
      optional: false
    named:
    - !Flag
      description: display options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: column containing gene IDs.
      synonyms:
      - -col
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -org
      args: !SimpleFlagArg
        name: organism
      optional: true
    - !Flag
      description: 'information type (supported: id,ctg,strand,left,right,name,descr,names,upstr_neighb_name,upstr_neighb_id,upstr_limit,upstr_size,downstr_neighb_name,downstr_neighb_id,downstr_limit,downstr_size,right_neighb_name,right_neighb_id,right_limit,right_size,left_neighb_name,left_neighb_id,left_limit,left_size)'
      synonyms:
      - -info
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "the information before the input line (by default,\nthe info is\
        \ added at the end of each input line)."
      synonyms:
      - -before
      args: !SimpleFlagArg
        name: add
      optional: true
    - !Flag
      description: 'to display for undefined values (default: <NULL>).'
      synonyms:
      - -null
      args: !SimpleFlagArg
        name: String
      optional: true
    - !Flag
      description: "Feature type.\nSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon"
      synonyms:
      - -feattype
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: display full help message
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n\tadd-gene-info\n\nDESCRIPTION\n\n\tTakes as input a tab-delimited\
      \ file with one ore more columns\n\tcontaining gene IDs, and adds columns with\
      \ information about\n\tthe corresponding genes.\n\nCATEGORY genomics\n\nUSAGE\n\
      \        add-gene-info [-i inputfile] [-o outputfile] [-v] \n        [-col id_column_1]\
      \ [-col id_column_2] -org organism\n\t\nOPTIONS\n\t-h\tdisplay full help message\n\
      \n\t-help\tdisplay options\n\n\t-v\tverbose\n\t\n\t-col\tcolumn containing gene\
      \ IDs. \n\n\t-i inputfile\n\t\tif not specified, the standard input is used.\n\
      \t\tThis allows to place the command within a pipe.\n\n\t-o outputfile\n\t\t\
      if not specified, the standard output is used.\n\t\tThis allows to place the\
      \ command within a pipe.\n\n\t-org organism\n\n\t-info\tinformation type (supported:\
      \ id,ctg,strand,left,right,name,descr,names,upstr_neighb_name,upstr_neighb_id,upstr_limit,upstr_size,downstr_neighb_name,downstr_neighb_id,downstr_limit,downstr_size,right_neighb_name,right_neighb_id,right_limit,right_size,left_neighb_name,left_neighb_id,left_limit,left_size)\n\
      \n\t-before add the information before the input line (by default,\n       \
      \  \tthe info is added at the end of each input line).\n\t\n\t-null String to\
      \ display for undefined values (default: <NULL>).\n\n\t-feattype\n\t\tFeature\
      \ type.\n\t\tSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon\n\
      \nINPUT FORMAT\n\n\tAny text file containing a column with gene identifiers\
      \ or\n\tgene names.\n\t\nOUTPUT FORMAT\n\n\tA text file with tab-separated values\
      \ reproducing the content\n\tof the input file with added colums containing\
      \ the requested\n\tinformation fields.\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - convert-seq
    positional:
    - !Positional
      description: v1.0, 1997 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)
      position: 0
      name: convert-seq
      optional: false
    - !Positional
      description: sequences
      position: 0
      name: util
      optional: false
    - !Positional
      description: embl
      position: 0
      name: INPUT
      optional: false
    - !Positional
      description: filelist
      position: 1
      name: fasta
      optional: false
    - !Positional
      description: gcg
      position: 2
      name: ft
      optional: false
    - !Positional
      description: ig
      position: 3
      name: genbank
      optional: false
    - !Positional
      description: multi
      position: 4
      name: maf
      optional: false
    - !Positional
      description: raw
      position: 5
      name: ncbi
      optional: false
    - !Positional
      description: wc
      position: 6
      name: tab
      optional: false
    - !Positional
      description: 'OUTPUT '
      position: 7
      name: wconsensus
      optional: false
    - !Positional
      description: fastq
      position: 8
      name: fasta
      optional: false
    - !Positional
      description: ft
      position: 9
      name: filelist
      optional: false
    - !Positional
      description: multi
      position: 10
      name: ig
      optional: false
    - !Positional
      description: tab
      position: 11
      name: raw
      optional: false
    - !Positional
      description: wconsensus
      position: 12
      name: wc
      optional: false
    - !Positional
      description: "The input file should contain raw sequences without any\ncomment\
        \ or other text. Tabs (\\t), blank spaces and newline\ncharacters (\\n) are\
        \ accepted (they will be automatically\nremoved before analysis). The sequence\
        \ must be terminated by\na newline character."
      position: 0
      name: raw
      optional: false
    - !Positional
      description: "same as raw except than each new line is considered to contain\n\
        a new independent sequence in raw format."
      position: 1
      name: multi
      optional: false
    - !Positional
      description: "file list. Each line of the input file contains the\nname of a\
        \ file containing a single sequence."
      position: 2
      name: filelist
      optional: false
    - !Positional
      description: FastA format.
      position: 3
      name: fasta
      optional: false
    - !Positional
      description: "IntelliGenetics format.\nThe first non-comment line must be the\
        \ sequence identifier\n(a single word without spaces).\nThe sequence follows\
        \ the identifier line identifier. It can\ninclude spaces, tabs or newlines,\
        \ that will be removed for\nsequence analysis.\nThe end of one sequence is\
        \ indicated by termination character:\n1 for linear, 2 for circular sequences.\n\
        A single file may contain several sequences.\nEXAMPLE of IG suite:\n; sequence\
        \ of the region upstream from NIL1\n; Locus GAT1\n; ORF YFL021W  coord:  \
        \ 6 95964 97496\n; upstream region size: 100\n; upstream region coord:   \
        \     6 95864 95963\nGAT1\nACAGAGCAACAATAATAACAGCACTATGAGTCGCACACTT\nGCGGTGCCCGGCCCAGCCACATATATATAGGTGTGTGCCA\n\
        CTCCCGGCCCCGGTATTAGC\n1\n; sequence of the region upstream from PUT4\n; Locus\
        \ PUT4\n; ORF YOR348C  coord:   15 988773 986890\n; upstream region size:\
        \ 100\n; upstream region coord:        15 988873 988774\nPUT4\nGGGTTTGTGTTCCTCTTCCTTTCCTTTTTTTTTCTCTCTT\n\
        CCCTTCCAGTTTCTTTTATTCTTTGCTGTTTCGAAGAATC\nACACCATCAATGAATAAATC\n1"
      position: 4
      name: IG
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -id
      args: !SimpleFlagArg
        name: identifier
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -from
      - -to
      args: !SimpleFlagArg
        name: inputformat
      optional: true
    - !Flag
      description: '#    verbose level'
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "|lower|non-dna\nMask lowercases, uppercases, or non-dna characters,\
        \ respecively.\nMasked characters are replaced by by N characters, or\nby\
        \ a dot (option -dotmask)."
      synonyms:
      - -mask
      args: !SimpleFlagArg
        name: upper
      optional: true
    - !Flag
      description: Remove empty sequences from the set (same as -skip_short 1)
      synonyms:
      - -noempty
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Mask (replace by N characters) sequences shorter than\nthe specified\
        \ length. This can be useful to discard\nshort intergenic segments from the\
        \ motif discovery\nstep, especially when working with bacterial genomes,\n\
        where short intergenic sequences generally correspond\nto intra-operon segments."
      synonyms:
      - -mask_short
      args: !SimpleFlagArg
        name: min_seq_len
      optional: true
    - !Flag
      description: "Skip sequences shorter than the specified length. Same\nfunctionality\
        \ as -mask_short, except that short\nsequences are not returned at all in\
        \ the output."
      synonyms:
      - -skip_short
      args: !SimpleFlagArg
        name: min_seq_len
      optional: true
    - !Flag
      description: "Skip sequences longer than the specified length. These\nsequences\
        \ are not returned at all in the output."
      synonyms:
      - -skip_long
      args: !SimpleFlagArg
        name: max_seq_len
      optional: true
    - !Flag
      description: Stop after the Nth sequence.
      synonyms:
      - -last
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: "Same as -last N\n(maintained for backward compatibility)"
      synonyms:
      - -top
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: "Start at the Nth sequence (skip the N-1 first\nsequences)."
      synonyms:
      - -first
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: "Skip the N first sequences (start at sequence N+1).\nOptions -first\
        \ (or -skip) and -top can be combined to\nextract a subset from the i^th to\
        \ the j^th sequence (a\n\"slice\" of the sequence file).\nExample:\nconvert-seq\
        \ -skip 100 -last 200\nequivalent to\nconvert-seq -first 101 -last 200\nwill\
        \ extract the sequences 101 to 200 from the input\nfile."
      synonyms:
      - -skip
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: "if not specified, the standard output is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: outputfile
      optional: true
    - !Flag
      description: "column containing sequence identifiers in tab format\n(default:\
        \ 1)."
      synonyms:
      - -id_col
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "column containing sequence sequences in tab format\n(default:\
        \ 2)."
      synonyms:
      - -seq_col
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "column containing sequence comments (sequence\ndescription) in\
        \ tab format (default:\n)."
      synonyms:
      - -comment_col
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#   line width. A carriage return is inserted every #\ncharacters\
        \ within the output sequence.\nDefault is 60. A 0 value indicates that no\
        \ carriage\nreturn must be inserted."
      synonyms:
      - -lw
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "adds the reverse complement of each input sequence\nto the output\
        \ file. This is usefull for programs that\ncannot handle reverse complement\
        \ (like the Gibbs Sampler)."
      synonyms:
      - -addrc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: lowercase. the sequence is printed in lowercase.
      synonyms:
      - -lc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: lowercase. the sequence is printed in uppercase.
      synonyms:
      - -uc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "convert any non-acgt character into \"n\" characters.\nThis is\
        \ to filter out partly specified nucleotides."
      synonyms:
      - -dna
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "convert masked characters into dots.\nThis is useful for programs\
        \ like consensus, or\nAlignACE, which do not support N characters in the\n\
        sequences."
      synonyms:
      - -dotmask
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "sequence prefix (useful for converting from a multi\nsequence)"
      synonyms:
      - -prefix
      args: !SimpleFlagArg
        name: prefix
      optional: true
    - !Flag
      description: Prevent to check sequence IDs for conversion to file list
      synonyms:
      - -nocheckid
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "NAME\n\tconvert-seq\n\n        v1.0, 1997 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\
      \nDESCRIPTION\n\tConverts sequences between different formats. Optionally, also\n\
      \treturns the reverse-complement of the input sequences, or\n\tperform some\
      \ cleaning operations (skip short sequences,\n\tsuppress Ns, ...).\n\nCATEGORY\n\
      \tutil\n\tsequences\n\nUSAGE\n        consert-seq [-i inputfile] [-o outputfile]\
      \ [-v]\n\t          -id identifier\n                  -from inputformat -to\
      \ outputformat\n                  [-lw line_width]\n\nOPTIONS\n\t-v #\tverbose\
      \ level\n\n\t-i inputfile\n\t\tif not specified, the standard input is used.\n\
      \t\tThis allows to place the command within a pipe.\n\n\t-mask upper|lower|non-dna\n\
      \t\tMask lowercases, uppercases, or non-dna characters, respecively.\n\n\t\t\
      Masked characters are replaced by by N characters, or\n\t\tby a dot (option\
      \ -dotmask).\n\n\t-noempty\n\t\tRemove empty sequences from the set (same as\
      \ -skip_short 1)\n\n\t-mask_short min_seq_len\n\t\tMask (replace by N characters)\
      \ sequences shorter than\n\t\tthe specified length. This can be useful to discard\n\
      \t\tshort intergenic segments from the motif discovery\n\t\tstep, especially\
      \ when working with bacterial genomes,\n\t\twhere short intergenic sequences\
      \ generally correspond\n\t\tto intra-operon segments.\n\n\t-skip_short min_seq_len\n\
      \t\tSkip sequences shorter than the specified length. Same\n\t\tfunctionality\
      \ as -mask_short, except that short\n\t\tsequences are not returned at all in\
      \ the output.\n\n\t-skip_long max_seq_len\n\t\tSkip sequences longer than the\
      \ specified length. These\n\t\tsequences are not returned at all in the output.\n\
      \n\t-last N\n\t        Stop after the Nth sequence.\n\n\t-top N\n\t\tSame as\
      \ -last N\n\t\t (maintained for backward compatibility)\n\n\t-first N\n\t\t\
      Start at the Nth sequence (skip the N-1 first\n\t\tsequences).\n\n\t-skip N\n\
      \t\tSkip the N first sequences (start at sequence N+1).\n\n\t\tOptions -first\
      \ (or -skip) and -top can be combined to\n\t\textract a subset from the i^th\
      \ to the j^th sequence (a\n\t\t\"slice\" of the sequence file).\n\n\t\tExample:\
      \ \n\t\t\t convert-seq -skip 100 -last 200\n\t\tequivalent to\n\t\t\t convert-seq\
      \ -first 101 -last 200\n\n\t\twill extract the sequences 101 to 200 from the\
      \ input\n\t\tfile.\n\n\t-o outputfile\n\t\tif not specified, the standard output\
      \ is used.\n\t\tThis allows to place the command within a pipe.\n\n\t-from \
      \  input format\n\t\t    Supported input formats : \n\t\t\tembl\n\t\t\tfasta\n\
      \t\t\tfilelist\n\t\t\tft\n\t\t\tgcg\n\t\t\tgenbank\n\t\t\tig\n\t\t\tmaf\n\t\t\
      \tmulti\n\t\t\tncbi\n\t\t\traw\n\t\t\ttab\n\t\t\twc\n\t\t\twconsensus\n\n\t\
      -id_col\n\t\tcolumn containing sequence identifiers in tab format\n\t\t(default:\
      \ 1).\n\n\t-seq_col\n\t\tcolumn containing sequence sequences in tab format\n\
      \t\t(default: 2).\n\n\t-comment_col\n\t\tcolumn containing sequence comments\
      \ (sequence\n\t\tdescription) in tab format (default:\n\t\t).\n\n        -to\
      \     output format\n\t\t    Supported output formats : \n\t\t\tfasta\n\t\t\t\
      fastq\n\t\t\tfilelist\n\t\t\tft\n\t\t\tig\n\t\t\tmulti\n\t\t\traw\n\t\t\ttab\n\
      \t\t\twc\n\t\t\twconsensus\n\n        -lw #   line width. A carriage return\
      \ is inserted every #\n                characters within the output sequence.\n\
      \                Default is 60. A 0 value indicates that no carriage\n     \
      \           return must be inserted.\n\n        -addrc  adds the reverse complement\
      \ of each input sequence\n                to the output file. This is usefull\
      \ for programs that\n                cannot handle reverse complement (like\
      \ the Gibbs Sampler).\n\n\t-lc\tlowercase. the sequence is printed in lowercase.\n\
      \n\t-uc\tlowercase. the sequence is printed in uppercase.\n\n\t-dna\tconvert\
      \ any non-acgt character into \"n\" characters.\n\t\tThis is to filter out partly\
      \ specified nucleotides.\n\n \t-dotmask\n\t\tconvert masked characters into\
      \ dots.\n\t\tThis is useful for programs like consensus, or\n\t\tAlignACE, which\
      \ do not support N characters in the\n\t\tsequences.\n\n\t-id identifier\n\t\
      \tsequence identifier (useful for converting a raw\n\t\tsequence from the STDIN)\n\
      \n\t-prefix prefix\n\t\tsequence prefix (useful for converting from a multi\n\
      \t\tsequence)\n\n\t-nocheckid\n\t\tPrevent to check sequence IDs for conversion\
      \ to file list\n\nSUPPORTED FORMATS\n    INPUT \n\t\t\tembl\n\t\t\tfasta\n\t\
      \t\tfilelist\n\t\t\tft\n\t\t\tgcg\n\t\t\tgenbank\n\t\t\tig\n\t\t\tmaf\n\t\t\t\
      multi\n\t\t\tncbi\n\t\t\traw\n\t\t\ttab\n\t\t\twc\n\t\t\twconsensus\n\n    OUTPUT\
      \ \n\t\t\tfasta\n\t\t\tfastq\n\t\t\tfilelist\n\t\t\tft\n\t\t\tig\n\t\t\tmulti\n\
      \t\t\traw\n\t\t\ttab\n\t\t\twc\n\t\t\twconsensus\n\nFORMAT DESCRIPTION\n\traw\t\
      The input file should contain raw sequences without any\n                comment\
      \ or other text. Tabs (\\t), blank spaces and newline\n                characters\
      \ (\\n) are accepted (they will be automatically\n                removed before\
      \ analysis). The sequence must be terminated by\n                a newline character.\n\
      \n\tmulti\tsame as raw except than each new line is considered to contain\n\
      \ \t\ta new independent sequence in raw format.\n\n\tfilelist\n\t\tfile list.\
      \ Each line of the input file contains the\n\t\tname of a file containing a\
      \ single sequence.\n\n\tfasta\tFastA format.\n\n\tIG\tIntelliGenetics format.\n\
      \ \t\tThe first non-comment line must be the sequence identifier\n\t\t(a single\
      \ word without spaces).\n\t\tThe sequence follows the identifier line identifier.\
      \ It can\n                include spaces, tabs or newlines, that will be removed\
      \ for\n                sequence analysis.\n                The end of one sequence\
      \ is indicated by termination character:\n\t\t1 for linear, 2 for circular sequences.\n\
      \t\tA single file may contain several sequences.\n\n\t\tEXAMPLE of IG suite:\n\
      \n\t\t; sequence of the region upstream from NIL1\n\t        ; Locus GAT1\n\
      \ \t        ; ORF YFL021W  coord:   6 95964 97496\n \t        ; upstream region\
      \ size: 100\n \t        ; upstream region coord:        6 95864 95963\n \t \
      \       GAT1\n \t        ACAGAGCAACAATAATAACAGCACTATGAGTCGCACACTT\n  \t    \
      \    GCGGTGCCCGGCCCAGCCACATATATATAGGTGTGTGCCA\n  \t        CTCCCGGCCCCGGTATTAGC\n\
      \  \t        1\n \t        ; sequence of the region upstream from PUT4\n   \
      \             ; Locus PUT4\n                ; ORF YOR348C  coord:   15 988773\
      \ 986890\n                ; upstream region size: 100\n                ; upstream\
      \ region coord:        15 988873 988774\n                PUT4\n            \
      \    GGGTTTGTGTTCCTCTTCCTTTCCTTTTTTTTTCTCTCTT\n                CCCTTCCAGTTTCTTTTATTCTTTGCTGTTTCGAAGAATC\n\
      \                ACACCATCAATGAATAAATC\n                1\n\nEXAMPLES\n\tconvert-seq\
      \ -i myseq.multi -from multi -to FASTA -o myseq.FASTA\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - download-organism
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: download-organism
      optional: false
    - !Positional
      description: "\e[1mCATEGORY\e[0m"
      position: 0
      name: Jacques.van.Helden@ulb.ac.be
      optional: false
    - !Positional
      description: The query to the remote server can also be restricted to a given
        taxon.
      position: 0
      name: supported-organisms-server
      optional: false
    - !Positional
      description: "This differs from \e[33mdownload-organism\e[0m, which transfers\
        \ the RSAT-formatted"
      position: 0
      name: RSAT.
      optional: false
    - !Positional
      description: "\e[1manonymous rsync\e[0m"
      position: 0
      name: wget.
      optional: false
    - !Positional
      description: The option -org can be used iteratively on teh command line to
      position: 0
      name: Escherichia_coli_GCF_000005845.2_ASM584v2
      optional: false
    named:
    - !Flag
      description: ).
      synonyms:
      - -taxon
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    download-organism\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Download organism(s) from an RSAT server in order\
      \ to support it on this\n    RSAT instance.\n\n    Organisms can be loaded one\
      \ by one (option -org), or by taxon (option\n    -taxon).\n\n\e[1mAUTHORS\e\
      [0m\n    Jacques.van.Helden@ulb.ac.be\n\n\e[1mCATEGORY\e[0m\n    Data management\n\
      \n\e[1mREQUIREMENTS\e[0m\n    This program relies on a Web aspirator to download\
      \ genomes from the\n    remote server to the local machine. By default, we use\
      \ the freeware\n    program \e[33mwget\e[0m.\n\n\e[1mUSAGE\e[0m\n    Download\
      \ one or several organisms by species identifiers.\n\n     download-organism\
      \ -org Species_id_1 -org Species_id_2 ...\n\n    Download all the organisms\
      \ belonging to a given taxon.\n\n     download-organism -taxon taxon\n\n\e[1mOUTPUT\e\
      [0m\n    By default, the downloaded organisms are stored in the $RSAT genome\n\
      \    repository ($RSAT/public_html/data/genomes).\n\n\e[1mSEE ALSO\e[0m\n  \e\
      [1msuported-organisms\e[0m\n    The program \e[33msupported-organism\e[0m can\
      \ be used to obtain the list of\n    supported organisms on remote RSAT server.\n\
      \n     supported-organisms-server\n\n    The query to the remote server can\
      \ also be restricted to a given taxon.\n\n     supported-organisms-server -taxon\
      \ Fungi\n\n  \e[1minstall-organism\e[0m\n    The program \e[33minstall-organism\e\
      [0m performs all the formatting and calibration\n    tasks for importing genomes\
      \ from the reference databases (NCBI, EMBL) to\n    RSAT.\n\n    This differs\
      \ from \e[33mdownload-organism\e[0m, which transfers the RSAT-formatted\n  \
      \  genomes from a RSAT server.\n\n    If a genome is available on the RSAT server,\
      \ it is recommended to use\n    download-genomes in order to obtain it immediately\
      \ in the RSAT format,\n    rather than install-genomes.\n\n\e[1mWISH LIST\e\
      [0m\n    \e[1m-taxfreq\e[0m\n        Download the taxon-wise oligo and dyad\
      \ frequencies. Those are\n        required for comparative genomics approaches\
      \ (footprint-discovery,\n        footprint-scan).\n\n    \e[1m-get_command\e\
      [0m\n        Use an alternative program for downloading the genome data. Default:\n\
      \        wget.\n\n    \e[1manonymous rsync\e[0m\n        Downloading with \e\
      [33mrsync\e[0m is currently reserved to the RSAT team\n        because it requires\
      \ a password on the RSAT server. We have currently\n        no way to ensure\
      \ an anonymous rsync, but this may be envisaged in\n        the future for the\
      \ convenience of external users.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n\
      \        Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n     \
      \   Same as -h\n\n    \e[1m-org organism\e[0m\n        ID of the organism to\
      \ be downloaded. This ID is generally the full\n        name of the organism,\
      \ where spaces and weird characters have been\n        replaced by an underscore\
      \ (_).\n\n        Ex: download-organism -v 1 -org\n        Escherichia_coli_GCF_000005845.2_ASM584v2\n\
      \n        The option -org can be used iteratively on teh command line to\n \
      \       specify multiple organisms.\n\n         download-organism -v 1 -org\
      \ Escherichia_coli_GCF_000005845.2_ASM584v2 \\\n            -org Mycoplasma_genitalium\
      \ \\\n            -org Saccharomyces_cerevisiae\n\n    \e[1m-org_list\e[0m\n\
      \        This option gives the posibility to specify a set of reference\n  \
      \      organisms rather than a taxon. Orthologs will only be searched in\n \
      \       the organisms belonging to the given list.\n\n        File format: each\
      \ row should contain the identifier of one organism.\n        Lines starting\
      \ with a semicolumn are ignored.\n\n    \e[1m-taxon taxon\e[0m\n        Name\
      \ of a taxon for which all organisms will be downloaded.\n\n        The option\
      \ -taxon can be used iteratively on the command line to\n        specify multiple\
      \ taxa.\n\n         download-organism -v 1 -taxon Enterobacteriaceae \\\n  \
      \          -taxon Saccharomycetales\n\n    \e[1m-no_blast\e[0m | \e[1m-blast\e\
      [0m\n        Options to specify whether the cross-species blast files should\
      \ be\n        downloaded or not together with the genome.\n\n        Default:\
      \ -no_blast\n\n        These files are used by several comparative genomics\
      \ programs\n        (\e[33mget-orthologs\e[0m, \e[33mfootprint-discovery\e[0m,\
      \ \e[33mfootprint-scan\e[0m...). With the\n        increase of th number of\
      \ sequenced genomes, the blast-hit folder\n        occupies a large disk space,\
      \ and should be downloaded only\n\n    \e[1m-dir output directory\e[0m\n   \
      \     Directory for exporting the genome(s) of the selected organism(s).\n\n\
      \        By default, genomes are exported in the standar RSAT genome folder\n\
      \        ($RSAT/public_html/data/genomes/). This requires write permissions\n\
      \        on this folder. If you don't have those writing permissions,\n    \
      \    specifying an alternative directory may be convenient for obtaining\n \
      \       the data files, but the downloaded genoems will not be supported on\n\
      \        the local machine unless the configuration file is adapted (and this\n\
      \        anyways requires the writing permission in the RSAT directory).\n\n\
      \    \e[1m-o outputfile\e[0m\n        The output file contains timing and information\
      \ about downloaded\n        organisms (installation directories, ...).\n\n \
      \       If no output file is specified, the standard output is used. This\n\
      \        allows to use the command within a pipe.\n\n    \e[1m-server server/path\e\
      [0m\n        Specify an alternative server.\n\n        Default: http://rsat-tagc.univ-mrs.fr/rsat/\n\
      \n    \e[1m-rsync\e[0m\n        This option requires a ssh login on the main\
      \ RSAT server, it is\n        reserved for the RSAT maintenance team.\n\n  \
      \      When this option is activated, genomes are downloaded with the\n    \
      \    program \e[33mrsync\e[0m is used instead of \e[33mwget\e[0m. This ensures\
      \ a faster\n        transfer (using the powerful featres of rsync such as on-the-fly\n\
      \        compression, smart updating, etc).\n\n    \e[1m-ssh your.login@some.rsat.server\e\
      [0m =item \e[1m-ssh\n    your.login@some.rsat.server:rsat_path_on_server\e[0m\n\
      \        This option requires a ssh login on the main RSAT server, it is\n \
      \       reserved for the RSAT maintenance team.\n\n        When this option\
      \ is activated, genomes are downloaded with the\n        program \e[33mrsync\e\
      [0m is used instead of \e[33mwget\e[0m. This ensures a faster\n        transfer\
      \ (using the powerful features of rsync such as on-the-fly\n        compression,\
      \ smart updating, etc).\n\n        The rsync connection however requires a user\
      \ account enabled with\n        ssh access on the server, so it is reserved\
      \ to the members of the\n        RSAT team.\n\n        The RSAT path on the\
      \ remote server can be specified in the argument.\n        If not, the program\
      \ will attempt to obtain the RSAT environment\n        variable by ssh connection\
      \ to the server, but this might fail (e.g.\n        if the server issues some\
      \ message at login).\n\n        Examples:\n\n          download-organism -v\
      \ 1 -org Saccharomyces_cerevisiae \\\n            -ssh your.login@your.rsat.server.org\n\
      \n          download-organism -v 1 -org Saccharomyces_cerevisiae \\\n      \
      \      -ssh your.login@your.rsat.server.org:rsat_path_on_server\n\n    \e[1m-bashrc\
      \ bahrc_file\e[0m\n        This option is only used with the option -ssh.\n\n\
      \        Specify the path of the RSAT bashrc file. The ssh synchronization\n\
      \        mode requires for the client to load the RSAT_config.bashrc file.\n\
      \        Depending on server configuration, this file might not be loaded in\n\
      \        non-interactive secure shell mode. The file specified with the\n  \
      \      option -bashrc will be sourced as the first instruction of the\n    \
      \    remote ssh commands.\n\n    \e[1m-upload\e[0m\n        This option is only\
      \ possible with the ssh option.\n\n    \e[1m-skip\e[0m\n        Skip the N first\
      \ organisms of the list. This option is useful for\n        resuming an interrupted\
      \ download.\n\n    \e[1m-last\e[0m\n        Stop after the N first organisms\
      \ of the list. This option is useful\n        for testing the options with taxon-wise\
      \ queries.\n\n    \e[1m-no_config\e[0m\n        Download (or upload) the files\
      \ but do not run the configuration task\n        (install-organisms -task config).\n\
      \n    \e[1m-dry\e[0m\n        Dry run: print the commands but do not execute\
      \ them (just for\n        testing).\n\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - oligo-analysis
    positional:
    - !Positional
      description: VERSION
      position: 0
      name: oligo-analysis
      optional: false
    - !Positional
      description: AUTHOR
      position: 1
      name: '1.169'
      optional: false
    - !Positional
      description: motif discovery
      position: 0
      name: sequences
      optional: false
    - !Positional
      description: "-lth param value\nLower threshold on some parameter. All patterns\
        \ with a\nparameter value smaller than the threshold are\ndiscarded.\nSupported\
        \ parameters: occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
        Example: select patterns with a positive value for the\noccurrence significance.\n\
        -lth occ_sig 0"
      position: 0
      name: THRESHOLDS
      optional: false
    - !Positional
      description: "p  = probability of the pattern\nSeveray models are supported\
        \ for estimating the\nprior probability (see options -a, -expfreq and\n-bg).\n\
        S  = number of sequences in the sequence set.\nLj = length of the jth regulatory\
        \ region\nk  = length of oligomer\nT = the number of possible matching positions."
      position: 0
      name: where
      optional: false
    - !Positional
      description: a is the coefficient of autocorrelation
      position: 0
      name: Where
      optional: false
    - !Positional
      description: "x   is the observed number of occurrences,\np   is the expected\
        \ frequency for the pattern,\nT   is the number of possible matching positions,\n\
        as defined above."
      position: 0
      name: where
      optional: false
    - !Positional
      description: 'Interpretation: the P-value (Pval) represents the nominal risk'
      position: 0
      name: accuracy.
      optional: false
    - !Positional
      description: "By default, the program calculates the P-value on the right\n\
        tail of the probability distribution, which represents the\nprobability to\
        \ observe at least x occurrences by chance:\nT\nP(X>=x) = SUM P(X=i)\ni=x\n\
        With the option -under, the P-value is calculated on the left\ntail of the\
        \ distribution, which represents the probability of\nhaving at most x occurrences:\n\
        x-1\nP(X<=x) =  SUM P(X=i)\ni=0\nThe option -under does not affect the other\
        \ statistics\n(zscore, loglikelihood). For z-score, the negative values\n\
        indicate under-representation.\nWith the option -two_tails, the P-value is\
        \ calculated on\neither the left or the right-tail of the distribution,\n\
        depending on the observed/expected comparison:\nif k >= exp_occ, right tail\
        \ (over-representation)\nif k < exp_occ, left tail (under-representation)"
      position: 0
      name: OVER/UNDER-REPRESENTATION
      optional: false
    - !Positional
      description: W     is a given word
      position: 0
      name: where
      optional: false
    - !Positional
      description: is the reverse complement of W
      position: 1
      name: Wr
      optional: false
    - !Positional
      description: "The probability of occurrence by itself is not fully\ninformative,\
        \ because the threshold must be adapted depending\non the number of patterns\
        \ considered. Indeed, a simple\nhexanucleotide analysis amounts to consider\
        \ 4096\nhypotheses.\nThe E-value (Eval) represents the expected number of\
        \ patterns\nwhich would be returned at random for a given threshold of\nnominal\
        \ P-value.\nEval = NPO * P(X>=x)\nwhere NPO is the number of possible oligomers\
        \ of the chosen\nlength (eg 4096 for hexanucleotides).\nNote that when searches\
        \ are performed on both strands, NPO is\ncorrected for the fact that non-palindromic\
        \ patterns are\ngrouped by pairs (for example, there are 4096 possible\nhexanucleotides\
        \ when the count is performed on a single\nstrand, but only 2080 when the\
        \ count is performed on both\nstrands).\nInterpretation: the E-value (Eval)\
        \ represents the expected\nnumber of false positives, for a given threshold\
        \ of P-value\n(Pval)."
      position: 0
      name: E-VALUE
      optional: false
    - !Positional
      description: "The Z-score is calculated in the following way\nZsc = (obs_occ\
        \ - exp_occ)/sd_occ\n= (obs_occ - exp_occ)/sqrt(var_occ)"
      position: 0
      name: Z-SCORE
      optional: false
    - !Positional
      description: "obs_occ is the observed number of occurrences\nexp_occ is the\
        \ expected number of occurrences\nsd_occ and var_occ\nare the estimated standard\
        \ deviation and variances\nfor the occurrences, respectively."
      position: 1
      name: where
      optional: false
    - !Positional
      description: '-i /public_html/data/Saccharomyces_cerevisiae/genome/contigs.txt '
      position: 0
      name: oligo-analysis
      optional: false
    - !Positional
      description: "Detect over- and under-represented dyads (i.e. a pair of short\n\
        oligonucleotides separated by a spacing of fixed width but\nvariable content)."
      position: 0
      name: dyad-analysis
      optional: false
    - !Positional
      description: "Program written in C (developed by Matthieu Defrance) to\nensure\
        \ an efficient counting of oligonucleotides. This program\nruns about 100\
        \ times faster than oligo-analysis but has\nrestricted functionality (only\
        \ return word occurrences and\nfrequencies)."
      position: 1
      name: count-words
      optional: false
    named:
    - !Flag
      description: "if not specified, the standard input is used.\nThis allows to\
        \ place the command within a pipe."
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: inputfile
      optional: true
    - !Flag
      description: "|lower\nMask lower or uppercases, respecively, i.e. replace\n\
        selected case by N characters."
      synonyms:
      - -mask
      args: !SimpleFlagArg
        name: upper
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -format
      - -l
      - -occ
      - -freq
      - -o
      - -v
      args: !SimpleFlagArg
        name: filelist
      optional: true
    - !Flag
      description: oligomer length.
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(mutually exclusive with -calibN, -calib1 and -a)\nfile containing\
        \ the estimations for expected oligomer\nfrequencies. This can be for instance\
        \ the olignonucleotide\nfrequency measured in the whole genome, or in all\
        \ intergenic\nregions, or in all coding regions.\nThis information is used\
        \ for the calculation of probabilities."
      synonyms:
      - -expfreq
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(mutually exclusive with -expfreq and -a) File\ncontaining the\
        \ estimations for the mean and variance\nof oligomer occurrences. This calibration\
        \ can be\nperformed with the script calibrate-oligos.\nCalibration file contains\
        \ (among other informations)\nthe occurrence means and variances of the simulation,\n\
        which is used for the calculation of probabilities, on\nthe basis of a negative\
        \ binomial model."
      synonyms:
      - -calibN
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "file based on single sequence analysis.\nThe mean and variance\
        \ of occurrences are estimated my\nmultiplying single-sequence estimators\
        \ by the number\nof sequences (we checked the linearity)."
      synonyms:
      - -calib1
      args: !SimpleFlagArg
        name: calibration
      optional: true
    - !Flag
      description: "(deprecated, use \"-bg intergenic\" instead)\nuse intergenic frequencies\
        \ as background frequencies"
      synonyms:
      - -ncf
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "background model\nType of sequences used as background model for\n\
        estimating expected oligonucleotide frequencies.\nEither -org or -taxon is\
        \ required with the option -bg.\nSupported models:\n-bg upstream\nall upstream\
        \ sequences, allowing overlap with\nupstream ORFs. Calibrations with a single\n\
        size per genome.\n-bg upstreamL\nall upstream sequences, allowing overlap\
        \ with\nupstream ORFs. Length-specific calibration\nsets.\n-bg upstream-noorf\n\
        all upstream sequences, preventing overlap\nwith upstream ORFs\n-bg intergenic\n\
        intergenic frequencies\nWhole set of intergenic regions, including\nupstream\
        \ and downstream sequences\n-bg input\nEstimate word frequency from residue\n\
        frequencies in the input sequences (Bernoulli\nmodel)."
      synonyms:
      - -bg
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "organism\nOrganism used to estimate background frequencies.\n\
        The list of supported organisms can be obtained with the\ncommand I<supported-organisms>."
      synonyms:
      - -org
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "taxon\nOrganism or taxon that used as reference for the\nestimation\
        \ of a background model based on a genome\nsubset (option -bg).  Either -org\
        \ or -taxon is\nrequired with the option -bg.\nOptions -org and -taxon are\
        \ mutually exclusive."
      synonyms:
      - -taxon
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nMarkov chain: the frequency expected for each word is\ncalculated\
        \ on basis of subword frequencies observed in the\ninput set.\nThe number\
        \ # indicates the order of the Markov chain.\nIf negative, # is substracted\
        \ to word length\ne.g:\n-l 6 -markov -2\nis equivalent to\n-l 6 -markov 5\n\
        Order 0 is equivalent to using single nucleotide frequencies\n(-a input).\n\
        Ex: calculation of expected 6nt frequencies on basis\nof a Markov chain of\
        \ order 4 :\nobs(GATAA) x obs(ATAAG)\nexp(GATAAG) = -----------------------\n\
        obs(ATAA)"
      synonyms:
      - -markov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Expected word frequencies are calculated on the basis\nof subword\
        \ frequencies, in a similar (but not\nidentical) way to the \"dictionary\"\
        \ approach developed\nby Harmen Bussemaker.  Each word is segmented in 2\n\
        subwords in all possible ways:\nGATAAG  G & ATAAG\nGA & TAAG\nGAT & TAG\n\
        GATA & AG\nGATAA & G\nThe expected frequency of each segmented pair is the\n\
        product of expected frequencies of its members. The\nexpected word frequency\
        \ is the maximum expected pair\nfrequency."
      synonyms:
      - -lexicon
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nPseudo-frequency for the background model, where #\nmust be\
        \ a real value between 0 and 1.\nThis allows to circumvent the problem that\
        \ the\nexpected frequency file might be incomplete (due to\na too small reference\
        \ sequence set), in which case\nsome oligonucleotides might have an observed\n\
        frequency > 0, whereas the expected frequency is 0\n(leading to an impossible\
        \ event). The expected\nfrequency is corrected by a pseudo-frequency, which\n\
        is the pseudo-frequency divided by the number of\npossible patterns."
      synonyms:
      - -pseudo
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "no overlapping.\nDisable the detection of overlapping matches\
        \ for\nself-overlapping patterns (ex TATATA, GATAGA)."
      synonyms:
      - -noov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(default)\noligonucleotide occurrences found on both stands are\
        \ summed."
      synonyms:
      - -2str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: inactivates the summation of occurrences on both strands.
      synonyms:
      - -1str
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "dna|prot|other\nInput sequence type\n. DNA (default)\nOnly A,\
        \ C, G, and T residues are\naccepted. oligomers that contain partly defined\n\
        (IUPAC code) or undefined nucleotides (N) are\ndiscarded from the countings.\n\
        . protein\nOligopeptide analysis instead of oligonucleotide.\nThis inactivates\
        \ the grouping of oligomers with\ntheir reverse complements, and modifies\
        \ the\nalphabet size.\n. other\nAny type of letters found in the input sequence\
        \ is\nconsidered valid. This allows to analyze texts in\nhuman language."
      synonyms:
      - -seqtype
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Output file. If not specified, the result is printed on the\n\
        standard output."
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: file
      optional: true
    - !Flag
      description: "#    verbose level\n1 report parameters and statistics\n2 warn\
        \ when the program enters a new subroutine\n3 warn when the program reads\
        \ a new sequence\n4 very high verbosity (for debugging)"
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "of statistics to return\nthis option is followed by a list of\
        \ words,\nseparated by commas, indicating which values\nhave to be returned\
        \ for each oligomer.\nSupported statistics:\nocc     number of occurrences\
        \ .\nmseq    number of matching sequences.\nfreq    relative frequencies\n\
        (occurrences/sum of occurrences)\nproba   binomial probability for observing\n\
        >= k occurrences\nratio   observed/expected ratio\nzscore  z-score\nlike \
        \   log likelihood\npos     matching positions for each oligomer\nrank   \
        \ rank of the pattern according to the sorting\ncriterion\nex: -return freq,occ,zscore"
      synonyms:
      - -return
      args: !SimpleFlagArg
        name: list
      optional: true
    - !Flag
      description: only return reverse palindroms
      synonyms:
      - -pal
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "return a table where rows represents input sequences,\nand columns\
        \ the counts of occurrences for each\npossible oligo"
      synonyms:
      - -table
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: return occurrence distributions (one row per pattern)
      synonyms:
      - -distrib
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(default)\ngroup reverse complement with the direct sequence in\
        \ the\noutput file. This avoids redundancy (since the frequence of\nAAAAA\
        \ is the same as TTTTT when one searches on both strands).\nCan be inactivated\
        \ by the -nogrouprc option.\nIncompatible with -1str."
      synonyms:
      - -grouprc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: inactivates grouping of reverse complement pairs.
      synonyms:
      - -nogrouprc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "group oligonucleotides by neighborhood, where one neighborhood\n\
        is defined as a set of oligo differing by one mismatch at a\ncommon position.\n\
        ex: the oligonucleotide atg admits 3 distinct neighborhoods:\natN\naNg\nNtg"
      synonyms:
      - -oneN
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "insert one ambiguous nucleotide code at each\nposition of each\
        \ pattern"
      synonyms:
      - -onedeg
      args: !SimpleFlagArg
        name: sucessively
      optional: true
    - !Flag
      description: "Specify a file containing a list of accepted\noligos. The analysis\
        \ is then restricted to these\noligos. Since the number of tested oligos is\
        \ reduced\nby this selection, the multitesting correction is\ngenerally lower,\
        \ which increases the significance of\nthe accepted oligos, compared to the\
        \ default situation\nwhere all oligos are analyzed.\nFile format: the first\
        \ word of each row specifies a\noligo. Subsequent words are ignored."
      synonyms:
      - -accept
      args: !SimpleFlagArg
        name: accepted_oligo_file
      optional: true
    - !Flag
      description: "sort oligomers according to overrepresentation.\nThe sort criterion\
        \ depends on the estimators returned,\nby preference:\n- Z-score\n- binomial\
        \ significance\n- occurrence number"
      synonyms:
      - -sort
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "detect under-represented instead of over-represented words\n(left-tail\
        \ significance test, see below for details)."
      synonyms:
      - -under
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "detect under-represented and over-represented words\n(two-tails\
        \ significance test, see below for details)."
      synonyms:
      - -two_tails
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Report also patterns with zero occurrences (provided\nthey fit\
        \ the other thresholds).\nBy default, the program reports only patterns present\n\
        in the sequence.\nIf the left tail or two-tail test is applied, patterns\n\
        with zero occurrences are automatically taken into\naccount.-\nIn some other\
        \ cases, one would also like to detect\npatterns absent from the sequence.\
        \ This is the\nfunction of this option."
      synonyms:
      - -zeroocc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Quick count mode: delegate the counting of word\noccurrences to\
        \ count-words, a program written in C by\nMatthieu Defrance.\nThis option\
        \ is incompatible with the following output\nfields:\nIt is also incompatible\
        \ with the output types\n-table\n-distrib"
      synonyms:
      - -quick
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Evaluate if the quick mode is compatible with the\nselected output\
        \ parameters, and, if so, run in this\nmode."
      synonyms:
      - -quick_if_possible
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#  where # is an integer. Occurrence threshold: only returns the\n\
        patterns occuring at least # times in the whole sequences.\nThis criterion\
        \ differs from thg in that multiple occurrences\nof a pattern in the same\
        \ upstream regions are taken into\naccount."
      synonyms:
      - -tho
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# where # is a real value comprised between 0 and 1.\nThreshold\
        \ on occurrence probability: only returns the patterns\nfor which the probability\
        \ to encounter a number of occurrences\nhigher or equals to that observed\
        \ is smaller than #."
      synonyms:
      - -thpo
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nthreshold on occurence significance index.\nOnly returns the\
        \ patterns for which the occurence significance\nindex is higher than or equal\
        \ to #."
      synonyms:
      - -thosig
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nthreshold on observed/expected occurrence ratio\nOnly returns\
        \ patterns with higher ratios than the threshold."
      synonyms:
      - -thratio
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "# where # is an integer. Threshold on matching\nsequences: only\
        \ returns the patterns encountered at\nleast once in at least # sequences."
      synonyms:
      - -thms
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "on frequency of matching sequences (propotion\nof sequences with\
        \ at least one occurrence of the\npattern)"
      synonyms:
      - -thmsf
      args: !SimpleFlagArg
        name: threshold
      optional: true
    - !Flag
      description: "#\nwhere # is a real value comprised between 0 and 1.\nThreshold\
        \ on occurrence probability: only returns the patterns\nfor which the probability\
        \ of a number of matching sequences\nhigher or equals to that observed is\
        \ smaller than #."
      synonyms:
      - -thpms
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "#\nthreshold on matching sequence significance index.\nOnly returns\
        \ the patterns for which the significance\nindex of matching sequences is\
        \ higher than or equal to #."
      synonyms:
      - -thmssig
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "NAME\n\toligo-analysis\n\nVERSION\n        1.169\n\nAUTHOR\n     \
      \   1997-2007 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)\n\nDESCRIPTION\n\
      \tcalculates oligomer frequencies in a set of sequences,\n        and detects\
      \ overrepresented oligomers.\n\nCATEGORY\n\tsequences\n\tmotif discovery\n\n\
      USAGE\n\toligo-analysis -l length [-i inputfile]  [-format input_format]\n\t\
      \t[-o outputfile]\n\t\t[-return occ,freq,ratio,mseq,proba,zscore,like,rank]\n\
      \t\t[-bfile background_model_file | -expfreq exp_freq_file | -calibN calibration_file\
      \ | -a alphabet | -markov #]\n\t\t[-1str | -2str] [-seqtype dna|prot|other][-grouprc\
      \ | -nogrouprc]\n\t\t[-oneN | -onedeg][-v]\n\t\t[-lth parameter value][-uth\
      \ parameter value]\n        oligo-analysis [-h | -help]\n\nARGUMENTS\n    INPUT\
      \ OPTIONS\n\t-i inputfile\n\t\tif not specified, the standard input is used.\n\
      \t\tThis allows to place the command within a pipe.\n\n\t-mask upper|lower\n\
      \t\tMask lower or uppercases, respecively, i.e. replace\n\t\tselected case by\
      \ N characters.\n\n\t-format\tinput file format. Must be followed by one of\
      \ the\n\t\tfollowing options:\n\t\t   fasta (default)\n\t\t   wconsensus\n\t\
      \t   IG\n\t\t   filelist\n\t\t   raw\n\t\tSee below for the description of these\
      \ formats.\n\t-l\toligomer length.\n\n    PROBABILISTIC MODEL\n\t-a\talphabet\n\
      \t\tmust be followed by nucleotide frequencies expressed precisely\n\t\tthis\
      \ way:\n\t\t-a a:t # c:g #\n\t\tex:\n\t\t-a a:t 0.3 c:g 0.2\n\n\t\tSpecial alphabet\
      \ options\n        -a input\n                use the alphabet of the input sequence\n\
      \t\t(deprecated, use \"-bg input\" instead)\n\t-expfreq\n\t\t(mutually exclusive\
      \ with -calibN, -calib1 and -a)\n\t\tfile containing the estimations for expected\
      \ oligomer\n\t\tfrequencies. This can be for instance the olignonucleotide\n\
      \t\tfrequency measured in the whole genome, or in all intergenic\n\t\tregions,\
      \ or in all coding regions.\n\t\tThis information is used for the calculation\
      \ of probabilities.\n\t-calibN\n\t\t(mutually exclusive with -expfreq and -a)\
      \ File\n\t\tcontaining the estimations for the mean and variance\n\t\tof oligomer\
      \ occurrences. This calibration can be\n\t\tperformed with the script calibrate-oligos.\n\
      \t\tCalibration file contains (among other informations)\n\t\tthe occurrence\
      \ means and variances of the simulation,\n\t\twhich is used for the calculation\
      \ of probabilities, on\n\t\tthe basis of a negative binomial model.\n\t-calib1\t\
      calibration file based on single sequence analysis.\n\t\tThe mean and variance\
      \ of occurrences are estimated my\n\t\tmultiplying single-sequence estimators\
      \ by the number\n\t\tof sequences (we checked the linearity).\n\t-ncf\t(deprecated,\
      \ use \"-bg intergenic\" instead)\n\t\tuse intergenic frequencies as background\
      \ frequencies\n\t-bg\tbackground model\n\t\tType of sequences used as background\
      \ model for\n\t\testimating expected oligonucleotide frequencies.\n\n\t\tEither\
      \ -org or -taxon is required with the option -bg.\n\n\t\tSupported models:\n\
      \t\t-bg upstream\n\t\t\t all upstream sequences, allowing overlap with\n\t\t\
      \         upstream ORFs. Calibrations with a single\n\t\t         size per genome.\n\
      \n\t\t-bg upstreamL\n\t\t\t all upstream sequences, allowing overlap with\n\t\
      \t         upstream ORFs. Length-specific calibration\n\t\t         sets.\n\n\
      \t\t-bg upstream-noorf\n\t\t\t  all upstream sequences, preventing overlap\n\
      \t\t\t  with upstream ORFs\n\n\t\t-bg intergenic\n\t\t         intergenic frequencies\n\
      \t\t\t Whole set of intergenic regions, including\n\t\t\t upstream and downstream\
      \ sequences\n\t\t-bg input\n\t\t\t Estimate word frequency from residue\n\t\t\
      \t frequencies in the input sequences (Bernoulli\n\t\t\t model).\n\n\t-org\t\
      organism\n\t        Organism used to estimate background frequencies.\n\n\t\
      \        The list of supported organisms can be obtained with the\n\t      \
      \  command I<supported-organisms>.\n\n\t-taxon\ttaxon\n\t\tOrganism or taxon\
      \ that used as reference for the\n\t\testimation of a background model based\
      \ on a genome\n\t\tsubset (option -bg).  Either -org or -taxon is\n\t\trequired\
      \ with the option -bg.\n\n   \t\tOptions -org and -taxon are mutually exclusive.\n\
      \n\t-markov #\n\t\tMarkov chain: the frequency expected for each word is\n\t\
      \tcalculated on basis of subword frequencies observed in the\n\t\tinput set.\n\
      \n\t\tThe number # indicates the order of the Markov chain.\n\t\tIf negative,\
      \ # is substracted to word length\n\t\te.g:\n\t\t\t-l 6 -markov -2\n\t\tis equivalent\
      \ to\n\t\t\t-l 6 -markov 5\n\n\t\tOrder 0 is equivalent to using single nucleotide\
      \ frequencies\n\t\t(-a input).\n\n\t\tEx: calculation of expected 6nt frequencies\
      \ on basis\n\t\tof a Markov chain of order 4 :\n\t\t              obs(GATAA)\
      \ x obs(ATAAG)\n\t\texp(GATAAG) = -----------------------\n\t\t            \
      \       obs(ATAA)\n\n\t-lexicon\n\t\tExpected word frequencies are calculated\
      \ on the basis\n\t\tof subword frequencies, in a similar (but not\n\t\tidentical)\
      \ way to the \"dictionary\" approach developed\n\t\tby Harmen Bussemaker.  Each\
      \ word is segmented in 2\n\t\tsubwords in all possible ways:\n\n\t\t\tGATAAG\t\
      G & ATAAG\n\t\t\t\tGA & TAAG\n\t\t\t\tGAT & TAG\n\t\t\t\tGATA & AG\n\t\t\t\t\
      GATAA & G\n\n\t\tThe expected frequency of each segmented pair is the\n\t\t\
      product of expected frequencies of its members. The\n\t\texpected word frequency\
      \ is the maximum expected pair\n\t\tfrequency.\n\n\t-pseudo #\n            \
      \     Pseudo-frequency for the background model, where #\n\t\t must be a real\
      \ value between 0 and 1.\n\n\t\t This allows to circumvent the problem that\
      \ the\n\t\t expected frequency file might be incomplete (due to\n\t\t a too\
      \ small reference sequence set), in which case\n\t\t some oligonucleotides might\
      \ have an observed\n\t\t frequency > 0, whereas the expected frequency is 0\n\
      \t\t (leading to an impossible event). The expected\n\t\t frequency is corrected\
      \ by a pseudo-frequency, which\n\t\t is the pseudo-frequency divided by the\
      \ number of\n\t\t possible patterns.\n\n    COUNTING OPTIONS\n\t-noov\tno overlapping.\n\
      \t\tDisable the detection of overlapping matches for\n\t\tself-overlapping patterns\
      \ (ex TATATA, GATAGA).\n\t-2str\t(default)\n\t\toligonucleotide occurrences\
      \ found on both stands are summed.\n\t-1str\n\t\tinactivates the summation of\
      \ occurrences on both strands.\n\n    SEQUENCE TYPE\n\t-seqtype  dna|prot|other\n\
      \t\tInput sequence type\n\t\t. DNA (default)\n\t\t    Only A, C, G, and T residues\
      \ are\n\t\t    accepted. oligomers that contain partly defined\n\t\t    (IUPAC\
      \ code) or undefined nucleotides (N) are\n\t\t    discarded from the countings.\n\
      \t\t. protein\n\t\t    Oligopeptide analysis instead of oligonucleotide.\n\t\
      \t    This inactivates the grouping of oligomers with\n\t\t    their reverse\
      \ complements, and modifies the\n\t\t    alphabet size.\n\t\t. other\n\t\t \
      \   Any type of letters found in the input sequence is\n\t\t    considered valid.\
      \ This allows to analyze texts in\n\t\t    human language.\n\n    OUTPUT OPTIONS\n\
      \tNote:\tBy default, the occurrences of each oligonucleotide on both\n\t\tstrands\
      \ are summed. This can be inactivated with the\n\t\t-1str option.\n\n\t-o file\t\
      Output file. If not specified, the result is printed on the\n\t   \tstandard\
      \ output.\n\n\t-v #\tverbose level\n\t\t\t1 report parameters and statistics\n\
      \t\t\t2 warn when the program enters a new subroutine\n\t\t\t3 warn when the\
      \ program reads a new sequence\n\t\t\t4 very high verbosity (for debugging)\n\
      \n\t-return\tlist of statistics to return\n\t\tthis option is followed by a\
      \ list of words,\n\t\tseparated by commas, indicating which values\n\t\thave\
      \ to be returned for each oligomer.\n\t\tSupported statistics:\n\t\t\tocc\t\
      number of occurrences .\n\t\t\tmseq\tnumber of matching sequences.\n\t\t\tfreq\t\
      relative frequencies\n\t\t\t\t(occurrences/sum of occurrences)\n\t\t\tproba\t\
      binomial probability for observing\n\t\t\t\t>= k occurrences\n\t\t\tratio\t\
      observed/expected ratio\n\t\t\tzscore\tz-score\n\t\t\tlike\tlog likelihood\n\
      \t\t\tpos\tmatching positions for each oligomer\n\t\t\trank\trank of the pattern\
      \ according to the sorting\n\t\t\t\tcriterion\n\t\tex: -return freq,occ,zscore\n\
      \n\t-pal\n\t\tonly return reverse palindroms\n\t-table\n\t\treturn a table where\
      \ rows represents input sequences,\n\t\tand columns the counts of occurrences\
      \ for each\n\t\tpossible oligo\n\t-distrib\n\t\treturn occurrence distributions\
      \ (one row per pattern)\n\t-grouprc (default)\n\t\tgroup reverse complement\
      \ with the direct sequence in the\n                output file. This avoids\
      \ redundancy (since the frequence of\n                AAAAA is the same as TTTTT\
      \ when one searches on both strands).\n \t\tCan be inactivated by the -nogrouprc\
      \ option.\n\t\tIncompatible with -1str.\n\t-nogrouprc\n\t\tinactivates grouping\
      \ of reverse complement pairs.\n\t-oneN\tgroup oligonucleotides by neighborhood,\
      \ where one neighborhood\n \t\tis defined as a set of oligo differing by one\
      \ mismatch at a\n\t\tcommon position.\n\t\tex: the oligonucleotide atg admits\
      \ 3 distinct neighborhoods:\n\t\t\tatN\n\t\t\taNg\n\t\t\tNtg\n\t-onedeg\tsucessively\
      \ insert one ambiguous nucleotide code at each\n\t\tposition of each pattern\n\
      \n\t-accept accepted_oligo_file\n\t\tSpecify a file containing a list of accepted\n\
      \t\toligos. The analysis is then restricted to these\n\t\toligos. Since the\
      \ number of tested oligos is reduced\n\t\tby this selection, the multitesting\
      \ correction is\n\t\tgenerally lower, which increases the significance of\n\t\
      \tthe accepted oligos, compared to the default situation\n\t\twhere all oligos\
      \ are analyzed.\n\n\t\tFile format: the first word of each row specifies a\n\
      \t\toligo. Subsequent words are ignored.\n\n\t-sort   sort oligomers according\
      \ to overrepresentation.\n\t\tThe sort criterion depends on the estimators returned,\n\
      \t\tby preference:\n\t\t- Z-score\n\t\t- binomial significance\n\t\t- occurrence\
      \ number\n\n\t-under\n\t        detect under-represented instead of over-represented\
      \ words\n\t\t(left-tail significance test, see below for details).\n\n\t-two_tails\n\
      \t\tdetect under-represented and over-represented words\n\t\t(two-tails significance\
      \ test, see below for details).\n\n\t-zeroocc\n\t\tReport also patterns with\
      \ zero occurrences (provided\n\t\tthey fit the other thresholds).\n\t\tBy default,\
      \ the program reports only patterns present\n\t\tin the sequence.\n\t\tIf the\
      \ left tail or two-tail test is applied, patterns\n\t\twith zero occurrences\
      \ are automatically taken into\n\t\taccount.-\n\t\tIn some other cases, one\
      \ would also like to detect\n\t\tpatterns absent from the sequence. This is\
      \ the\n\t\tfunction of this option.\n\n\t-quick\n\t\tQuick count mode: delegate\
      \ the counting of word\n\t\toccurrences to count-words, a program written in\
      \ C by\n\t\tMatthieu Defrance.\n\n\t\tThis option is incompatible with the following\
      \ output\n  \t        fields: \n\n\t\tIt is also incompatible with the output\
      \ types\n\t\t   -table\n\t\t   -distrib\n\n\t-quick_if_possible\n\t\tEvaluate\
      \ if the quick mode is compatible with the\n\t\tselected output parameters,\
      \ and, if so, run in this\n\t\tmode.\n\n    THRESHOLDS\n\t-lth param value\n\
      \t\tLower threshold on some parameter. All patterns with a\n\t\tparameter value\
      \ smaller than the threshold are\n\t\tdiscarded.\n\t\tSupported parameters:\
      \ occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
      \t      \tExample: select patterns with a positive value for the\n\t      \t\
      occurrence significance.\n\n\t\t\t -lth occ_sig 0\n\n\n\t-uth param value\n\t\
      \tUpper threshold on some parameter. All patterns with a\n\t\tparameter value\
      \ higher than the threshold are\n\t\tdiscarded.\n\t\tSupported parameters: occ,occ_P,occ_E,occ_sig,observed_freq,exp_freq,zscore,mseq,ms_P,ms_E,ms_sig,ratio,rank\n\
      \t\tExample: to select no more than 50 patterns\n\t\t        -uth rank 50\n\n\
      \n    DEPRECATED THRESHOLD OPTIONS\n\n        The following options are still\
      \ supported for backward\n        compatibility, but they should be replaced\
      \ by the -lth and\n        -uth options.\n\n\t-tho #\twhere # is an integer.\
      \ Occurrence threshold: only returns the\n\t\tpatterns occuring at least # times\
      \ in the whole sequences.\n\t\tThis criterion differs from thg in that multiple\
      \ occurrences\n                of a pattern in the same upstream regions are\
      \ taken into\n                account.\n\t-thpo #\twhere # is a real value comprised\
      \ between 0 and 1.\n\t\tThreshold on occurrence probability: only returns the\
      \ patterns\n                for which the probability to encounter a number\
      \ of occurrences\n                higher or equals to that observed is smaller\
      \ than #.\n\t-thosig #\n                threshold on occurence significance\
      \ index.\n\t\tOnly returns the patterns for which the occurence significance\n\
      \                index is higher than or equal to #.\n\t-thratio #\n\t\tthreshold\
      \ on observed/expected occurrence ratio\n\t\tOnly returns patterns with higher\
      \ ratios than the threshold.\n\n\t-thms # where # is an integer. Threshold on\
      \ matching\n\t\tsequences: only returns the patterns encountered at\n\t\tleast\
      \ once in at least # sequences.\n\n\t-thmsf threshold on frequency of matching\
      \ sequences (propotion\n\t        of sequences with at least one occurrence\
      \ of the\n\t        pattern)\n\n\t-thpms #\n                where # is a real\
      \ value comprised between 0 and 1.\n\t\tThreshold on occurrence probability:\
      \ only returns the patterns\n                for which the probability of a\
      \ number of matching sequences\n                higher or equals to that observed\
      \ is smaller than #.\n\t-thmssig #\n                threshold on matching sequence\
      \ significance index.\n\t\tOnly returns the patterns for which the significance\n\
      \                index of matching sequences is higher than or equal to #.\n\
      \nINPUT FORMATS\n      All the input formats supported by convert-seq are also\n\
      \      supported by oligo-analysis. For a description of those formats, type\n\
      \      \t\tconvert-seq -h\n\nPROBABILITIES\n\n    EXPECTED OCCURRENCES\n\t \
      \                         S\n\t   Exp_occ = p * T = p * SUM (Lj + 1 - k)\n\t\
      \                         j=1\n\n\twhere\tp  = probability of the pattern\n\t\
      \t     Severay models are supported for estimating the\n\t\t     prior probability\
      \ (see options -a, -expfreq and\n\t\t     -bg).\n\t\tS  = number of sequences\
      \ in the sequence set.\n\t\tLj = length of the jth regulatory region\n\t\tk\
      \  = length of oligomer\n                T = the number of possible matching\
      \ positions.\n\n\n\n    PROBABILITY OF SEQUENCE MATCHING\n\tThe probability\
      \ to find at least one occurrence of the pattern within\n\ta single sequence\
      \ is :\n\n\t                 T\n\t    q = 1 - (1-p)\n\n\twith the same abbreviations\
      \ as above\n\n\n    EXPECTED NUMBER OF MATCHING SEQUENCES\n\n\tIn this counting\
      \ mode, only the first occurrence of each\n\tsequence is taken into connsideration.\
      \ We have thus to\n\tcalculate a probability of first occurrence.\n\n\t   Exp_ms\
      \ = n (1 - (1 - p)^T)\n\n\twith the same abbreviations as above\n\n\tCorrection\
      \ for autocorrelation (from Mireille Regnier)\n\t\tExp_ms_corrected = n (1 -\
      \ (1 - p/a)^T)\n\t   Where\n\t\t a is the coefficient of autocorrelation\n\n\
      \n    PROBABILITY OF THE OBSERVED NUMBER OF OCCURRENCES (BINOMIAL)\n\n     \
      \   The probability to observe exactly k occurrences in the whole\n  \tfamily\
      \ of sequences is calculated by the binomial\n\n\t                         \
      \                 x      T-x\n\t    P(X=x) = bin(p,T,x) =       T!      p  (1-p)\n\
      \                                   -----------\n                          \
      \         x! * (T-x)!\n\n\twhere   x   is the observed number of occurrences,\n\
      \                p   is the expected frequency for the pattern,\n          \
      \      T   is the number of possible matching positions,\n                 \
      \   as defined above.\n\n\tThe probability to observe x or more occurrences\
      \ in the\n  \tsequence set is calculated by the sum of binomials:\n\n\t    \
      \                   T                 k-1\n\t    Pval = P(X>=x) =  SUM P(X=i)\
      \ =  1 -  SUM  P(i)\n\t                      i=x                i=0\n\n    \
      \    Note that the the P-value (Pval) is not computed by directly\n        applying\
      \ this formula, but by using an efficient algorithm\n        (based on recursion),\
      \ which increases both computing speed and\n        accuracy.\n\n        Interpretation:\
      \ the P-value (Pval) represents the nominal risk\n        of false positive,\
      \ i.e. the risk to consider a given word as\n        over-represented whereas\
      \ it is not.\n\n\n    OVER/UNDER-REPRESENTATION\n\n        By default, the program\
      \ calculates the P-value on the right\n\ttail of the probability distribution,\
      \ which represents the\n\tprobability to observe at least x occurrences by chance:\n\
      \n\t\t\t               T\n\t\t\t    P(X>=x) = SUM P(X=i)\n\t\t\t           \
      \   i=x\n\n\tWith the option -under, the P-value is calculated on the left\n\
      \ttail of the distribution, which represents the probability of\n\thaving at\
      \ most x occurrences:\n\n\t\t\t               x-1\n\t\t\t    P(X<=x) =  SUM\
      \ P(X=i)\n\t\t\t               i=0\n\n\tThe option -under does not affect the\
      \ other statistics\n\t(zscore, loglikelihood). For z-score, the negative values\n\
      \tindicate under-representation.\n\n\tWith the option -two_tails, the P-value\
      \ is calculated on\n\teither the left or the right-tail of the distribution,\n\
      \tdepending on the observed/expected comparison:\n\t if k >= exp_occ, right\
      \ tail (over-representation)\n\t if k < exp_occ, left tail (under-representation)\n\
      \n    SPECIFIC TREATMENT FOR DOUBLE STRAND COUNTS\n\n\tWhen occurrences are\
      \ counted on both strands, each pattern is\n\tgrouped with its erverse complement.\n\
      \n\tFor reverse-palindromic patterns, probabilities are calculated\n\ton the\
      \ basis of the single strand count, since the occurrence\n\ton the reverse complement\
      \ strand is completely dependent on\n\tthat on the direct strand.\n\n      \
      \  A more biological justification for this is that, although the\n        word\
      \ is foudn on both strands in a string representation of\n        the sequences,\
      \ at the structural level, there is a single\n        binding site for the factor.\n\
      \n\n\tOn the contrary, for non-palindrommic patterns, occurrences on\n     \
      \   the direct and reverse complement strand represent distinct\n        binding\
      \ sites. Thus,\n\n\t\t occ(W|Wr) = occ(W) + occ(Wr)\n\t\t exp_freq(W|Wr) = exp_freq(W)\
      \ + exp_freq(Wr)\n\n\t   where\n\t\t W     is a given word\n\t\t Wr    is the\
      \ reverse complement of W\n\n\tProbabilities are then calculated as above, on\
      \ the basis of\n\tthe event W|Wr instead of simply W.\n\n    E-VALUE\n\n\tThe\
      \ probability of occurrence by itself is not fully\n\tinformative, because the\
      \ threshold must be adapted depending\n\ton the number of patterns considered.\
      \ Indeed, a simple\n\thexanucleotide analysis amounts to consider 4096\n\thypotheses.\n\
      \n\tThe E-value (Eval) represents the expected number of patterns\n\twhich would\
      \ be returned at random for a given threshold of\n\tnominal P-value.\n\n\t \
      \     Eval = NPO * P(X>=x)\n\n\twhere NPO is the number of possible oligomers\
      \ of the chosen\n\t          length (eg 4096 for hexanucleotides).\n\n     \
      \   Note that when searches are performed on both strands, NPO is\n        corrected\
      \ for the fact that non-palindromic patterns are\n        grouped by pairs (for\
      \ example, there are 4096 possible\n        hexanucleotides when the count is\
      \ performed on a single\n        strand, but only 2080 when the count is performed\
      \ on both\n        strands).\n\n\tInterpretation: the E-value (Eval) represents\
      \ the expected\n\tnumber of false positives, for a given threshold of P-value\n\
      \t(Pval). \n\n    SIGNIFICANCE INDEX\n\n        The significance index is simply\
      \ a negative logarithm\n        conversion of the E-value (in base 10).\n\n\t\
      The significance index is calculated as follows:\n\n\t      sig = -log10(E-value);\n\
      \n\tThis index is very convenient to interpret : higher values\n\tcorrespond\
      \ to exceptional patterns. A significance of 0\n\tcorresponds to an E-value\
      \ of 1. A significance of 2 to an\n\tE-value of 1e-2 (i.e. one expects no more\
      \ than 0.01 false\n\tpositives in the whole collection of patterns).\n\n   \
      \ OVERLAP COEFFICIENT\n        overlap coefficient is calculated as follows\n\
      \        (after Pevzner et al.(1989). J. Biomol. Struct & Dynamics\n       \
      \ 5:1013-1026):\n\n\t           l\n            Kov = SUM kj (1/4)^j\n      \
      \            j=1\n\n        where l  is the pattern length.\n              j\
      \  is the overlap position, comprised between 0 and l.\n              kj takes\
      \ the value 1 if there is an overlap at pos j,\n                 0 otherwise.\n\
      \n        When counts are performed on both strands, overlaps between\n    \
      \    the pattern and its reverse complement are also taken into account\n  \
      \      into the same formula.\n\n    Z-SCORE\n\tThe Z-score is calculated in\
      \ the following way\n\n\t\tZsc = (obs_occ - exp_occ)/sd_occ\n\t            =\
      \ (obs_occ - exp_occ)/sqrt(var_occ)\n\n\twhere\n\t\tobs_occ\tis the observed\
      \ number of occurrences\n\t\texp_occ\tis the expected number of occurrences\n\
      \t\tsd_occ and var_occ\n                    are the estimated standard deviation\
      \ and variances\n                    for the occurrences, respectively.\n\n\t\
      The estimation of the variance is derived from Pevzner et al.(1989).\n\tJ Biomol\
      \ Struct & Dynamics 5:1013-1026):\n\t\tvar_occ = exp_occ(2*Kov - 1 - (2*w+1)*exp_freq)\n\
      \n\tIn random sequences of *infinite* size, occurrence counts tend\n\ttowards\
      \ a normal distribution. This has justified the use of\n\tZ-score in some publications,\
      \ but it also presents strong\n\tdisadvantages (see below). In short, you should\
      \ generaly use\n\tthe binomial proba (-return proba) rather than the Z-score.\n\
      \n\tComparison between the Z-score and the binomial probability\n\t-----------------------------------------------------------\n\
      \tI implemented the Z-score in 2000, for a particular article\n\t(analysis of\
      \ yeast downstream sequences) because at that time\n\tmy method for computing\
      \ binomial was slow (time was increasing\n\tquadratically with occurrence number)\
      \ and imprecise (precision\n\twas restricted to ~1e-15). In the mean time, I\
      \ implemented an\n\tefficient (linear) and precise (1e-300) version of the\n\
      \tbinomial, so that the Z-score does not present any advantage\n\tanymore. It\
      \ presents several flaws that are described below\n\tfor the people who would\
      \ like to know more about the choice of\n\ta scoring statistics.\n\n\t- The\
      \ use of Z-score statistics measures the distance between\n          each observation\
      \ and the mean of the population, in\n          standardized units (i.e. counting\
      \ the number of standard\n          deviations that separates each observation\
      \ from the mean).\n          \n\t- The Z-score is commonly interpreted by converting\
      \ Z values\n          to a P-values, by reference to a Gaussian distribution.\
      \ This\n          is however generally NOT valid for word counts in\n      \
      \    sequences. The Z-score has been used in some publications to\n        \
      \  detect over-represented words, with the underlying\n          assumption\
      \ that it provides a reasonable approximation for\n          the binomial. This\
      \ assumption is however generally NOT\n          valid. The convergence of the\
      \ binomial towards the Gaussian\n          requires very large sequences (so\
      \ that the expected number\n          of occurrences for each word is >> 10).\
      \ However, even in the\n          cases where the sequences are very large (e.g.\
      \ entire\n          genomes), the convergence between the binomial and Z-score\n\
      \          distributions concerns the center of the distribution, but\n    \
      \      the tails remain well separated (you need to plot them on a\n       \
      \   Y log graph to see this effect). And the problem is that,\n          when\
      \ we detect over- or under-represented motifs, we are\n          precisely considering\
      \ the tails of the distribution, not its\n          center. Thus, the Z-score\
      \ should generally be avoided.\n\n\t- An advantage of the Z-score is that one\
      \ can introduce two\n\t  separate parameters for the mean and standard deviation,\n\
      \t  which enables a correction for the bias due to word\n\t  self-overlap (eg\
      \ AAAAAA, TATATA). Self-overlap of a word\n\t  provokes an aggregative dispersion,\
      \ with a higher variance\n\t  than the binomial/Poisson distributions. If uncorrected,\
      \ the\n\t  increased variance leads to an overestimation of the over-\n\t  and\
      \ under-representation. \n\n\t  Note that for the binomial statistics, the bias\
      \ is corrected\n\t  by using the option -noov (discard overlapping occurrences\n\
      \t  of the same word).\n\n\t- Its calculation is very fast.  This is especially\
      \ critical\n\t  when analyzing very big sequences (whole genomes), where the\n\
      \t  expected oligont occurrences are very high (binomial\n\t  calculation is\
      \ slower but not catastrophically so).\n\n\t- Z-score provides a way to detect\
      \ both over- and\n\t  under-represented patterns. Note that the binomial\n\t\
      \  probability can also detect both over- and under-represented\n\t  motifs\
      \ (options -under and -two_tails).\n\n\t- Multitesting correction: The Z-score\
      \ can be misleading,\n  \t  because it has to be interpreted in terms of\n \
      \ \t  multi-tests. So, the same value of Z-score (say 5) can have\n  \t  very\
      \ different E-values if you are considering 3-mers,\n  \t  5-mers or 10-mers.\
      \ With the binomial distribution, the\n  \t  program oligo-analysis returns\
      \ not only a P-value, but also\n  \t  an E-value (correction on the P-value\
      \ to account for\n  \t  multi-testing) and a sig index.\n\n\nEXAMPLES OF UTILISATION\n\
      \toligo-analysis \n\t\t -i /public_html/data/Saccharomyces_cerevisiae/genome/contigs.txt\
      \ \n\t\t -format filelist -l 6 -occ \n                 -freq -o hexanucleotides.occ_and_freq\
      \ -v\n\n\twill return a list of all hexanucleotides found in yeast genome, with\n\
      \tthe number of occurrences and relative frequency for each one.\n\n\tThere\
      \ are many ways to use oligo-analysis. The best way to\n\tfamiliarize yourself\
      \ with its use is \n\t1) to follow the tutorial on the Web site;\n\t2) to read\
      \ the user manual for the command line utilization of\n \t   the tools.\n\n\
      SEE ALSO\n\n  dyad-analysis \n  \tDetect over- and under-represented dyads (i.e.\
      \ a pair of short\n\toligonucleotides separated by a spacing of fixed width\
      \ but\n\tvariable content).\n\n  count-words\n\tProgram written in C (developed\
      \ by Matthieu Defrance) to\n\tensure an efficient counting of oligonucleotides.\
      \ This program\n\truns about 100 times faster than oligo-analysis but has\n\t\
      restricted functionality (only return word occurrences and\n\tfrequencies).\n\
      \nWEB VERSION\n\toligo-analysis can be used via internet at the RSAT Web site:\n\
      \ \t    http://www.rsat.eu/\n"
    generated_using: *id002
  - !Command
    command:
    - rsat
    - variation-info
    positional:
    - !Positional
      description: "\e[1mVERSION\e[0m"
      position: 0
      name: variation-info
      optional: false
    - !Positional
      description: "\e[1mUSAGE\e[0m"
      position: 0
      name: util
      optional: false
    - !Positional
      description: The definition of the BED format is provided on the UCSC Genome
        Browser
      position: 0
      name: ignored.
      optional: false
    - !Positional
      description: "\e[1mWISH LIST\e[0m"
      position: 0
      name: matrices.
      optional: false
    - !Positional
      description: variations specified either by their IDs or by a set of genomic
      position: 0
      name: get
      optional: false
    - !Positional
      description: 'Supported formats:'
      position: 1
      name: regions.
      optional: false
    - !Positional
      description: "\e[33mdeletion\e[0m"
      position: 0
      name: '0001483'
      optional: false
    - !Positional
      description: http://www.sequenceontology.org/browser/release_2.5/term/SO:0000159
      position: 1
      name: Deletion
      optional: false
    - !Positional
      description: http://www.sequenceontology.org/browser/release_2.5/term/SO:0000667
      position: 0
      name: Insertion
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\e[1mNAME\e[0m\n    variation-info\n\n\e[1mVERSION\e[0m\n    $program_version\n\
      \n\e[1mDESCRIPTION\e[0m\n    Taking as input a set of either variation IDs (rs\
      \ numbers) or genomic\n    regions (bed format), retrieve information about\
      \ matching variants.\n\n    The collected information is reported in varBed\
      \ format, which is a\n    specific type of bed format for variations (see \e\
      [33mconvert-variations\e[0m for\n    info).\n\n\e[1mAUTHORS\e[0m\n    \e[1mAlejandra\
      \ Medina Rivera\e[0m <amedina@lcg.unam.mx>\n    \e[1mJacques van Helden\e[0m\
      \ <Jacques.van-Helden\\@univ-amu.fr>\n    \e[1mWalter Santana Garcia\e[0m revised\
      \ the code and made useful suggestions to\n    enhance the efficiency. =item\
      \ \e[1mJeremy Delerce\e[0m wrote a first prototype of\n    the variation tools\
      \ in 2012 (1st-year Master project)\n\n\e[1mCATEGORY\e[0m\n    util\n\n\e[1mUSAGE\e\
      [0m\n    variation-info [-i inputfile] [-o outputfile] [-v #] [-format\n   \
      \ variatio_format] [- col ID_column ] [-mml #] [-o output_file] [...]\n\n\e\
      [1mINPUT FORMAT\e[0m\n  \e[1mGenomic coordinate file\e[0m\n    The option \e\
      [33m-i\e[0m allows to specify a genomic coordinate file (in bed\n    format).\
      \ The program only takes into account the 3 first columns of the\n    bed file,\
      \ which specify the genomic coordinates. Additional columns are\n    ignored.\n\
      \n    The definition of the BED format is provided on the UCSC Genome Browser\n\
      \    web site (http://genome.ucsc.edu/FAQ/FAQformat#format1).\n\n  \e[1mExample\
      \ of bed coordinates\e[0m\n     chr1   3473041 3473370\n     chr1   4380371\
      \ 4380650\n     chr1   4845581 4845781\n     chr1   4845801 4846260\n\n  \e\
      [1mInterpretation of bed coordinates\e[0m\n    \e[1mBeware\e[0m: input bed files\
      \ are expected to follow the UCSC convention:\n\n    \e[33mzero-based coordinates\e\
      [0m: coordinates start at 0, i.e. position 0\n    corresponds to the first nucleotide\
      \ of a contig, position i to the\n    (i+1)th nucleotide.\n    \e[33msemi-open\
      \ interval\e[0m: coordinates are specified as semi-open interval\n    [start:end[.\
      \ The interval thus includes the start position, but not the\n    end position.\n\
      \n    For example, the following line in a bed file:\n\n     chr1   27 28\n\n\
      \    corresponds to the interval [28,28[ i.e. the 28th nucleotide on\n    chromosome\
      \ 1.\n\n    1. chrom\n        The name of the chromosome (e.g. chr3, chrY, chr2_random)\
      \ or\n        scaffold (e.g. scaffold10671).\n\n    2. chromStart\n        The\
      \ starting position of the feature in the chromosome or scaffold,\n        specified\
      \ according to the UCSC-specific zero-based notation for the\n        start:\
      \ the first position of a sequence has coordinate 0.\n\n    3. chromEnd\n  \
      \      The ending position of the feature in the chromosome or scaffold,\n \
      \       according to UCSC convention for bed files: zero-based specification\n\
      \        of the coordinates, but the ending position is the first one <after>\n\
      \        the feature.\n\n        For example, a feature extending from positions\
      \ 10 to 20 of the\n        sequence will have a chromStart of 9 (zero-based\
      \ specification of\n        the first position of the feature) and a chromEnd\
      \ of 20 (zero-based\n        position of the first nucleotide after the feature).\n\
      \n  \e[1mVariation file\e[0m\n    See \e[33mdownload-ensembl-variation\e[0m\
      \ output format.\n\n  \e[1mVariation ID list\e[0m\n    A text file where the\
      \ first word of each row indicates a query,\n    specified in the form of a\
      \ variation ID. Tab-separated value files can\n    be provided, but the first\
      \ column will be considerded to contain qury\n    IDs, and the subsequent columns\
      \ are ignored.\n\n\e[1mOUTPUT FORMAT\e[0m\n    varBed format is a tab-separated\
      \ value with the first 3 columns\n    corresponding to bed-specified coordinates,\
      \ and additional columns\n    providing additional informatiion specific to\
      \ variants.\n\n    The file includes the following columns:\n\n    1. \e[1mchr\e\
      [0m: Chromosome name.\n    2. \e[1mstart\e[0m: start position of the variant.\n\
      \    3. \e[1mend\e[0m: end position of the variant.\n    4. \e[1mstrand\e[0m:\
      \ strand of the variation.\n    5. \e[1mID\e[0m: variant identifier (rs number).\n\
      \    6. \e[1mref\e[0m: sequence of the reference allele.\n    7. \e[1malt\e\
      [0m: sequence of the alternative allele.\n    8. \e[1mso_term\e[0m: \"Sequence\
      \ ontology\" (so) term, indicating the type of\n    variation (SNP, insertion,\
      \ deletion).\n    9. \e[1mvalidated\e[0m: Boolean value indicating whether the\
      \ variation has been\n    validated (1) or not (0).\n    10. \e[1mminor_allele_freq\e\
      [0m: frequency of the minor allele.\n    11. \e[1mis_supvar\e[0m: 1 if this\
      \ variant is a \"super-variation\", i.e. was build\n    by merging overlapping\
      \ variants.\n    12. \e[1min_supvar\e[0m: a value of 1 indicates that this variant\
      \ overlaps with\n    other annotated variants.\n\n\e[1mSEE ALSO\e[0m\n  \e[1mdownload-ensembl-genome\e\
      [0m\n    Install organims from Ensembl or EnsemblGenomes.\n\n  \e[1mdownload-ensembl-variations\e\
      [0m\n    Get variation coordiantes from Ensembl or EnsemblGenomes.\n\n    Variant\
      \ information obtained with this tool can then be retrived by\n    \e[33mvariation-info\e\
      [0m.\n\n  \e[1mconvert-variations\e[0m\n    Interconversions between different\
      \ file formats used to describe\n    polymorphic variations.\n\n    \e[33mvariation-info\e\
      [0m exports variants in varBed format, <convert-variations>\n    can be used\
      \ to convert to VCF and GVF formats.\n\n  \e[1mretrieve-variations-seq\e[0m\n\
      \    Given a set of regions, variant IDs (rsNumber) or variants in varBed\n\
      \    format <retrieve-variation-seq> will retrive the corresponding genomic\n\
      \    sequence surrounding the genetic variants.\n\n  \e[1mvariation-scan\e[0m\n\
      \    Scan variation sequences with one or several position-specific scoring\n\
      \    matrices.\n\n\e[1mWISH LIST\e[0m\n    \e[1mdirect retrieval from Ensembl\
      \ or BioMart\e[0m\n        Ensembl presents several application-programmatic\
      \ interfaces (APIs)\n        that should enable us to retrieve variation info\
      \ by remote queries\n        rather than having to install the (heavy) variation\
      \ files on the\n        RSAT server.\n\n\e[1mOPTIONS\e[0m\n    \e[1m-v #\e[0m\n\
      \        Level of verbosity (detail in the warning messages during execution)\n\
      \n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n     \
      \   Same as -h\n\n    \e[1m-org organism\e[0m\n        Organism name. This name\
      \ must correspond to the species of the\n        variation/bed/id file if provided.\n\
      \n    \e[1m-i inputfile\e[0m\n        If no input file is specified, the standard\
      \ input is used. This\n        allows to use the command within a pipe.\n\n\
      \    \e[1m-format query_format\e[0m\n        Format of the input query file.\
      \ The different formats actually\n        correspond to different modalities\
      \ of usage of the tool: get\n        variations specified either by their IDs\
      \ or by a set of genomic\n        regions.\n\n        Supported formats:\n\n\
      \        \e[33mvarBed\e[0m\n            Format of variation files used by all\
      \ RSAT scripts.\n\n        \e[33mid\e[0m  tab-delimited file with all variation\
      \ IDs in a given column,\n            which can be specified by the option \e\
      [33m-col\e[0m.\n\n        \e[33mbed\e[0m General format for the description\
      \ of genomic features (see\n            https://genome.ucsc.edu/FAQ/FAQformat.html#format1).\n\
      \n    \e[1m-type accepted_variation_types\e[0m\n        Specify one or several\
      \ accepted types of variation.\n\n        Variation types are specified according\
      \ to the Sequence Ontology\n        (\"SO term\" column of the output file).\n\
      \n        Several types can be specified separated by commas.\n\n        Supported\
      \ variation types:\n\n        \e[33mSNV\e[0m Single Nucleotide Variant (=SNP,\
      \ Single Nucleotide Polymorphism)\n\n             http://www.sequenceontology.org/miso/release_2.5/term/SO:0001483\n\
      \n        \e[33mdeletion\e[0m\n            Deletion\n\n             http://www.sequenceontology.org/browser/release_2.5/term/SO:0000159\n\
      \n        \e[33mdeletion\e[0m\n            Insertion\n\n             http://www.sequenceontology.org/browser/release_2.5/term/SO:0000667\n\
      \n        \e[33msequence_alteration\e[0m\n\n        Example 1: only accept single\
      \ nucleotide variations\n\n          -type SNV\n\n        Example 2: only accept\
      \ deletions and insertions\n\n          -type insertion,deletion\n\n    \e[1m-col\
      \ id_column_nb\e[0m\n        Number of the column containing the variation IDs\
      \ with the input\n        format \"id\".\n\n        Default : 1\n\n    \e[1m-chunk_size\e\
      [0m\n        Default: 500\n\n        Maximal number of IDs to submit to grep\
      \ for the selection of query\n        variations from VCF files.\n\n       \
      \ In order to avoid loading all the variant files in Perl memory (tens\n   \
      \     of millions of lines) variation-scan runs the Unix command grep to\n \
      \       select lines containing the ID strings. This works fine for queries\n\
      \        encompassing a few hundreds IDs, but may fail for large queries\n \
      \       (e.g. 20,000 IDs), probably due to a problem with the complexity of\n\
      \        the grep pattern.\n\n        To circumvent this, queries are teated\
      \ by chunks.\n\n    \e[1m-skip\e[0m\n        Skip the N first variations of\
      \ the input file. This option is useful\n        for quick tests, or to split\
      \ an analysis in separate tasks.\n\n    \e[1m-last\e[0m\n        Stop after\
      \ the N first variations of the list. This option is useful\n        for quick\
      \ tests, or to split an analysis in separate tasks.\n\n    \e[1m-o outputfile\e\
      [0m\n        If no output file is specified, the standard output is used. This\n\
      \        allows to use the command within a pipe.\n\n"
    generated_using: *id002
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "rsat -- Regulatory Sequence Analysis Tools\n\nUsage: rsat <subcommand>\
    \ [options]\n\nSupported rsat subcommands\n\n[ Genomes and genes ]\n\tsupported-organisms\t\
    Get the list of organisms supported on this RSAT server\n\tsupported-organisms-server\t\
    Get the list of organisms supported on a remote RSAT server\n\tgene-info\tGet\
    \ information for one or more genes specified by identifiers, names or descriptions.\n\
    \tadd-gene-info\tAdd information about genes identified in user-specified columns\
    \ of a TSV file\n\tinfer-operons\tInfer bacterial operons based on intergenic\
    \ distances\n\tget-orthologs\tGet homologs (orthologs or others) in given taxon\
    \ for a list of query genes\n \n[ Genome management ]\n\tdownload-organism\tDownload\
    \ organism(s) from an RSAT server to this RSAT instance\n\tinstall-organism\t\
    Install one or several organisms on the local RSAT instance\n\tinstall-ensembl-genome\t\
    Install genomes from ensembl to the local RSAT instance\n\tsupported-organisms-ensembl\t\
    Get the list of organisms supported at Ensmebl (http://ensembl.org)\n\tsupported-organisms-ensemblgenomes\t\
    Get the list of organisms supported at EnsemblGenomes (http://ensemblgenomes.org/)\n\
    \tsupported-organisms-ucsc\tGet the list of organisms available at the UCSC Genome\
    \ browser (http://genome.ucsc.edu/)\n\ttaxon-frequencies\tCalculate taxon-wide\
    \ oligo and dyad frequencies.\n\tcalc-taxfreq\tCalculate the oligo and dyads frequencies\
    \ for a taxon by averaging frequencies over included genomes\n\tgenome-blast\t\
    Use BLAST to detect homologs between all the protein of query and reference organisms\n\
    \ \n[ Sequences ]\n\tretrieve-seq\tGet non-coding upstream or downstream sequences\
    \ for a list of query genes\n\tretrieve-ensembl-seq\tRetrieve regulatory sequences\
    \ from the Ensembl database for a list of query genes\n\tfetch-sequences\tRetrieve\
    \ sequences from the UCSC database for a set of genomic regions (bed format)\n\
    \tretrieve-seq-bed\tRetrieve sequences for a set of genomic coordinates provided\
    \ in bed, gff or vcf format\n\tpurge-sequence\tMask repeated segments from a sequence\
    \ set\n\tconvert-seq\tInter-conversions between various sequence formats\n\tsub-sequence\t\
    Return a subset of input sequences, specified by a start and end positions\n\t\
    reverse-complement\tReturns the reverse complement of input DNA sequences or IUPAC-formatted\
    \ motifs.  \n\tsequence-lengths\tReturn the length of each input sequence, or\
    \ the sum of lengths\n \n[ Matrix tools ]\n\tretrieve-matrix\tRetrieve matrices\
    \ from a motif collection by specifying one or more identifiers\n\tconvert-matrix\t\
    Convert different formats of position-specific scoring matrices (PSSM), and calculate\
    \ statistical parameters + logos\n\tmatrix-from-patterns\tBuild PSSMs from a sequence\
    \ set using as seeds a set of patterns (oligos, dyads) or an assembly\n\trescan-matrix\t\
    Rebuild a PSSM by scanning sequences for sites (one or more iterations)\n\tcompare-matrices\t\
    Compute (dis)imilarity scores between matrices from two collections of position-specific\
    \ scoring matrices\n\tmatrix-clustering\tIdentify groups (clusters) of similarities\
    \ between motifs from one (or several) collections\n\tmerge-matrices\tIdentify\
    \ groups (clusters) of similarities between motifs from one (or several) collections\n\
    \tmatrix-distrib\tCompute theoretical distribution of score probabilities of a\
    \ PSSM given a Markov model\n\tmatrix-symmetry\tDetect symmetry in binding motifs\
    \ represented as position-specific scoring matrices (PSSMs).\n\tmatrix-quality\t\
    Evaluate the quality of a PSSM by comparing the empirical score distributions\
    \ obtained in various sequence sets\n\tcompare-qualities\tCompare the empirical\
    \ distributioins of weight score obtained with different matrices in a given sequence\
    \ set\n \n[ Control sets ]\n\trandom-genes\tSelect random genes for a given organism\n\
    \trandom-seq\tGenerate random DNA or protein sequences according to various probabilistic\
    \ models\n\trandom-genome-fragments\tSelect random genomic regions, and return\
    \ their coordinates and/or sequences\n\trandom-motif\tGenerate random motifs\n\
    \tpermute-matrix\tRandomize a set of input matrices by permuting their columns.\n\
    \trandom-sites\tGenerate random sites given a motif (PSSM)\n\timplant-sites\t\
    Implant sequences (e.g. TF binding sites) at random positions of other sequences\
    \ (e.g. regulatory regions)\n \n[ Motif discovery ]\n\toligo-analysis\tDetect\
    \ over- or under-represented oligomers (k-mers) in sequences\n\toligo-diff\tReturn\
    \ oligonucleotides (k-mers) significantly enriched in a sequence file (test) compared\
    \ to another one (control)\n\tdyad-analysis\tDetect over- or under-represented\
    \ dyads (spaced pairs of k-mers) in sequences\n\tposition-analysis\tDetect oligomers\
    \ (k-mers) whose positions significantly discard from a homogeneous distribution\n\
    \tlocal-word-analysis\tDetect oligomers (k-mers) over-represented at specific\
    \ positions of a sequence set\n\tpattern-assembly\tAssemble string-based patterns\
    \ (oligos or dyads)\n\tcount-words\tCalculate oligomer frequencies from a set\
    \ of sequences\n\tinfo-gibbs\tA gibbs sampler based on a stochastic optimization\
    \ of information content\n \n[ Pattern matching ]\n\tmatrix-scan\tScan DNA sequences\
    \ with position-specific scoring matrices (PSSM) - full option\n\tmatrix-scan-quick\t\
    Scan DNA sequences with position-specific scoring matrices (PSSM) - fast version\n\
    \tposition-scan\tCompute the positional distribution of predicted binding sites\
    \ for a set of PSSMs in a set of sequences of the same length\n\tcrer-scan\tPredict\
    \ cis-regulatory motifs (CRMs) by detecting cis-regulatory enriched regions (CRERs)\n\
    \tdna-pattern\tSearch string-based patterns (IUPAC, regexp) in DNA sequences\n\
    \tcompare-patterns\tCount matching residues between patterns (regexp, IUPAC) and\
    \ assess the statistical significance of the matches\n\tIUPAC-to-regular\tConvert\
    \ a pattern described with the IUPAC code for ambiguous nucleotides into an equivalent\
    \ regular expression\n \n[ Comparative genomics ]\n\tget-orthologs\tGet homologs\
    \ (orthologs and others) in given taxon for a list of query genes\n\tget-orthologs-compara\t\
    Return orthologs plus optionally paralogs and homeologs for a set of genes in\
    \ one or more organisms\n\tfootprint-discovery\tDiscover conserved motifs (phylogenetic\
    \ footprints) in the promoters of orthologous genes\n\tfootprint-scan\tScan promoters\
    \ of orthologous genes with one or more user-provided motifs to detect enriched\
    \ (over-represented) motifs.\n \n[ NGS ]\n\tpeak-motifs\tDiscover exceptional\
    \ motifs (over-represented, positionally biased) in a collection of ChIP-seq peaks\n\
    \tfetch-sequences\tRetrieve sequences from the UCSC database for a set of genomic\
    \ regions (bed format)\n\tretrieve-seq-bed\tRetrieve sequences for a set of genomic\
    \ coordinates provided in bed, gff or vcf format\n\trandom-genome-fragments\t\
    Select random genomic regions, and return their coordinates and/or sequences\n\
    \ \n[ Regulatory variants ]\n\tvariation-info\tGet information about variations\
    \ for a given list of variation IDS or genomic regions\n\tretrieve-variation-seq\t\
    Given a set of polymorphic variations, retrieve the variants and their flanking\
    \ sequences\n\tvariation-scan\tScan sequences of polymorphic variants  with a\
    \ list of motifs to predict TFBS affected by the variations\n\tconvert-variations\t\
    Convert between different file formats that store genetic variation information\n\
    \ \n[ Utilities ]\n\tclassfreq\tCompute frequency distribution of numerical values\
    \ provided in a given column of a tab-delimited text file\n\tcreate-background-model\t\
    Estimate the parameters of a background model from sequences (Bernoulli or Markov)\n\
    \tconvert-background-model\tInterconversions between background model formats.\n\
    \tseq-proba\tCalculate the probability of a sequence, given a background model\
    \ (Bernoulli or Markov)\n\tconvert-features\tInterconversions between formats\
    \ of feature descriptions\n\tcompare-features\tCompare two or more features sets:\
    \ compute intersection, union and difference, contingency tables and comparison\
    \ statistics\n \n[ Visualisation ]\n\tfeature-map\tGenerate a graphical map of\
    \ features localised on one or several sequences\n\tXYgraph\tDraw a scatter plot\
    \ (XY graph) from values provided in a tab-separated value file. \n\tdraw-heatmap\t\
    Draw a heat map to display values from a matrix of numerical values\n \n[ Stat\
    \ utilities ]\n\tcompare-classes\tCompute comparison statistics between two class/cluster\
    \ files (intersection, union, p-value, ...)\n\tcompare-scores\tCompare the score\
    \ associated to common keys in different tab-separated value files\n \nType rsat\
    \ [subcommand] -h to display the subcommand help.\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    footprint-discovery\n\n\e[1mVERSION\e[0m\n    $program_version\n\
  \n\e[1mDESCRIPTION\e[0m\n    Detect phylogenetic footprints by applying dyad-analysis\
  \ in promoters of\n    a set of orthologous genes.\n\n    Adapted from the procedure\
  \ described in Janky & van Helden (2008).\n\n\e[1mAUTHORS\e[0m\n    Rekin's Janky\
  \ <Rekins.Janky\\@vib.be>\n    Jacques van Helden <jacques.van.helden@ulb.ac.be>\n\
  \n\e[1mCATEGORY\e[0m\n    Sequences\n\n    Motif discovery\n\n\e[1mUSAGE\e[0m\n\
  \    footprint-discovery [-i inputfile] -o [output_prefix] \\ -org\n    query_organism\
  \ -taxon ref_taxon \\ -q query_gene [-q query_gene2 ...] \\\n    [-v #] [...]\n\n\
  \e[1mEXAMPLES\e[0m\n  \e[1mSingle-gene footprint discovery\e[0m\n    Discover conserved\
  \ motifs in the promoters of the orthologs of lexA in\n    Enterobacteriaceae.\n\
  \n     footprint-discovery  -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2\
  \ -taxon Enterobacteriaceae \\\n                    -lth occ 1 -lth occ_sig 0 -uth\
  \ rank 50 \\\n                    -return occ,proba,rank -filter  \\\n         \
  \           -bg_model taxfreq -q lexA\n\n  \e[1mAnalysis of a few genes\e[0m\n \
  \   Discover conserved motifs in the promoters of the orthologs of lexA in\n   \
  \ Enterobacteriaceae.\n\n     footprint-discovery  -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2\
  \ -taxon Enterobacteriaceae \\\n                    -lth occ 1 -lth occ_sig 0 -uth\
  \ rank 50 \\\n                    -return occ,proba,rank -filter  \\\n         \
  \           -bg_model taxfreq \\\n                    -sep_genes -q lexA -q recA\
  \ -q uvrA\n\n    Note the option -sep_genes indicating that the genes have to be\
  \ analyzed\n    separately rather than grouped.\n\n    The genes can also be specified\
  \ in a file with the option -genes.\n\n  \e[1mFootprint discovery applied iteratively\
  \ to each gene of a genome\e[0m\n    Iterate footprint discovery for each gene separately.\n\
  \n     footprint-discovery  -v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2\
  \ -taxon Enterobacteriaceae \\\n                    -lth occ 1 -lth occ_sig 0 -uth\
  \ rank 50 \\\n                    -return occ,proba,rank -filter \\\n          \
  \          -bg_model taxfreq -all_genes -sep_genes\n\n\e[1mINPUT FORMAT\e[0m\n \
  \   The program takes as input a taxon of interest + one or several query\n    genes.\n\
  \n\e[1mOUTPUT FORMAT\e[0m\n    The output consists in a set of files, containing\
  \ the results of the\n    different steps of the analysis.\n\n    [prefix]_log.txt\n\
  \        Log file listing the analysis parameters + output file names;\n\n    [prefix]_query_genes.tab\n\
  \        List of query genes (one or several genes can be entered)\n\n    [prefix]_ortho_bbh.tab\n\
  \        List of orthologous genes\n\n    [prefix]_ortho_seq.fasta\n        Promoter\
  \ sequences of the orthologous genes\n\n    [prefix]_ortho_seq_purged.fasta\n  \
  \      Purged promoter sequences (for motif discovery) =item\n        [prefix]_ortho_filter_dyads.tab\n\
  \n        Dyads found in the query genes (for dyad filtering)\n\n    [prefix]_ortho_dyads.tab\n\
  \        Significant dyads found in the promoters of orthologous genes (the\n  \
  \      footprints)\n\n    [prefix]_ortho_dyads.asmb\n        Assembled dyads\n\n\
  \    [prefix]_ortho_dyads.png\n        Feature-map\n\n    NOTE : 'ortho' is replaced\
  \ by 'leaders' in the filename prefix with\n    option -infer_operons\n\n\e[1mREFERENCES\e\
  [0m\n  \e[1mDescription of the footprint-discovery method\e[0m\n    Janky, R. and\
  \ van Helden, J. Evaluation of phylogenetic footprint\n    discovery for the prediction\
  \ of bacterial cis-regulatory elements\n    (2008). BMC Bioinformatics 2008, 9:37\
  \ [Pubmed 18215291].\n\n  \e[1mInference of co-regulation network from the footprints\e\
  [0m\n    Brohee, S., Janky, R., Abdel-Sater, F., Vanderstocken, G., Andre, B. and\n\
  \    van Helden, J. (2011). Unraveling networks of co-regulated genes on the\n \
  \   sole basis of genome sequences. Nucleic Acids Res. [Pubmed 21572103]\n    [Open\
  \ access]\n\n\e[1mSEE ALSO\e[0m\n    get-orthologs\n    dyad-analysis\n    footprint-scan\n\
  \n\e[1mWISH LIST\e[0m\n    The following options are not yet implemented, but this\
  \ should be done\n    soon.\n\n    \e[1m-taxa\e[0m\n        Specify a file containing\
  \ a list of taxa, each of which will be\n        analyzed separately. The results\
  \ are stored in a separate folder for\n        each taxon. The folder name is defined\
  \ automatically.\n\n    \e[1m-all_taxa\e[0m\n        Automatically analyze all the\
  \ taxa, and store each result in a\n        separate folder (the folder name is\
  \ defined automatically).\n\n\e[1mOPTIONS\e[0m\n    \e[1m-lth field value\e[0m\n\
  \        Lower threshold for dyad-analysis.\n\n        See the manual of dyad-analysis\
  \ for a description of the fields on\n        which a threshold can be imposed.\n\
  \n    \e[1m-uth field value\e[0m\n        Upper threshold for dyad-analysis.\n\n\
  \        See the manual of dyad-analysis for a description of the fields on\n  \
  \      which a threshold can be imposed.\n\n    \e[1m-return dyad_return_fields\e\
  [0m\n        Return fields for dyad-analysis. This argument is passed to\n     \
  \   dyad-analysis for the discovery of dyads in promoters of orthologous\n     \
  \   genes.\n\n        Multiple-fields can be entered either by calling this argument\n\
  \        iterativelyk or by entering multiple fields separated by commas.\n\n  \
  \      Type \e[33mdyad-analysis -help\e[0m to obtain the list of supported return\n\
  \        fields.\n\n    \e[1m-bg_model taxfreq|org_list|monads|file\e[0m\n     \
  \   Allow the user to choose among alternative background model (see\n        Janky\
  \ & van Helden, 2008).\n\n        Supported background model types:\n\n        \e\
  [33mmonads\e[0m\n            Expected dyad frequencies are estimated by taking the\
  \ product of\n            the monad frequencies observed in the input sequence set.\n\
  \            Example:\n\n               F_exp(CAGn{10}GTA) = F_obs(CAG) * F_obs(GTA)\n\
  \n        \e[33mtaxfreq\e[0m\n            Only valid in combination with the option\
  \ -taxon.\n\n            Expected dyad frequencies are computed by summing the\n\
  \            frequencies of all dyads in the non-coding upstream sequences of\n\
  \            all genes for all the organisms of the reference taxon.\n\n       \
  \ \e[33morg_list\e[0m\n            Only valid in combination with the option -org_list.\n\
  \n            Expected dyad frequencies are computed by summing the\n          \
  \  frequencies of all dyads in the non-coding upstream sequences of\n          \
  \  all genes for each organism of user-specified list.\n\n        \e[33mfile\e[0m\n\
  \            Only valid in combination with the option -bgfile.\n\n            Precises\
  \ that the background model that will be used for\n            dyad-analysis will\
  \ be a file given as argument (with the option\n            -bgfile, see below)\n\
  \n    \e[1m-bgfile\e[0m\n        File containing the word frequencies to be used\
  \ as the background\n        model for dyad-analysis. This option must be used in\
  \ combination\n        with the option -bg_model file\n\n    \e[1m-filter\e[0m\n\
  \        Only accept dyads found in the promoter of the query gene, in the\n   \
  \     query organism. (option selected by default)\n\n    \e[1m-no_filter\e[0m\n\
  \        Accept all dyads, even if they are not found in the promoter of the\n \
  \       query gene, in the query organism. (will cancel -filter option if\n    \
  \    selected)\n\n    \e[1m-max_dyad_degree #\e[0m\n        Maximal dyad degree\
  \ for network inference. Default: 20.\n\n        Some dyads are found significant\
  \ in a very large number of genes,\n        for various reasons (binding motifs\
  \ of global factors,\n        low-complexity motifs). These \"ubiquitous\" dyads\
  \ create many links\n        in the network, which makes problem to extract clusters\
  \ of\n        putatively co-regulated genes. To circumvent this problem, we\n  \
  \      discard \"hub\" dyads, i.e. dyads found in the footprints of too many\n \
  \       query genes.\n\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in\
  \ the warning messages during execution)\n\n    \e[1m-h\e[0m  Display full help\
  \ message.\n\n    \e[1m-help\e[0m\n        Same as -h\n\n    \e[1m-org query_organism\e\
  [0m\n        Query organism, to which the query genes belong.\n\n    \e[1m-taxon\
  \ reference_taxon\e[0m\n        Reference taxon, in which orthologous genes have\
  \ to be collected.\n\n        Alternatively, reference organisms can be specified\
  \ with the option\n        -org_list.\n\n    \e[1m-org_list organisms_list_file\e\
  [0m\n        This option gives the posibility to analyse a user-specified set of\n\
  \        reference organisms rather than a full taxon.\n\n        File format: the\
  \ first word of each line is used as organism ID. Any\n        subsequent text is\
  \ ignored. The comment char is \";\".\n\n        This option is incompatible with\
  \ the option \"-taxon\".\n\n    \e[1m-unique_species\e[0m\n        Retain at most\
  \ one organism per species. This enables to filter out\n        the numerous strains\
  \ sequences for some species of particular\n        interest. (e.g. Escherichia\
  \ coli, Bacillus subtilis, ...).\n\n    \e[1m-unique_genus\e[0m\n        Retain\
  \ at most one organism per genus. Same filter as for\n        -unique_species, but\
  \ at the level of the genus. At this level we\n        don't expect to have much\
  \ redundancy, but this option can be useful\n        to select a reasonable number\
  \ of organisms, e.g. to draw\n        phylogenetic profile heatmaps.\n\n    \e[1m-no_purge\e\
  [0m\n        This option can only be used combined with the -org_list option,\n\
  \        this gives the posibility to analyse a given set of sequences\n       \
  \ managing sequence redundancy using a list of \"no redundant\"\n        organisms.\n\
  \n        The file format is one organisms per line, the comment char is \";\"\n\
  \n    \e[1m-orthologs_list file\e[0m\n        This option gives the posibility to\
  \ analyse a user-specified set of\n        orthologs for specific reference organisms\
  \ instead of using the BBH\n        set of orthologs provided by RSAT.\n\n     \
  \   The query genes included here will be the ones analyzed by the\n        program.\n\
  \n        File format: Tab delimited file with three columns.\n\n          ID of\
  \ the query gene (in the query organism)\n          ID of the reference gene\n \
  \         ID of the reference organism\n\n        Further columns will be ignored.\
  \ The comment char is \";\".\n\n        This option is incompatible with the option\
  \ \"-taxon\", and \"-bg_model\n        taxfreq\" option.\n\n    \e[1m-use_tree_org\e\
  [0m\n        Only uses organisms in the phylogenetic tree for orthologs search.\n\
  \        Especified by option -tree. Incompatible with \"-taxon\",\n        \"-orthologs_list\"\
  \ and \"-org_list\".\n\n    \e[1m-q query\e[0m\n        Query gene.\n\n        This\
  \ option can be used iteratively on the command line to specify\n        multiple\
  \ genes.\n\n    \e[1m-genes\e[0m\n        Specify a file containing a list of genes.\
  \ Multiple genes can also\n        be specified by using iteratively the option\
  \ -q.\n\n    \e[1m-all_genes\e[0m\n        Automatically analyze all the genes of\
  \ a query genome, and store\n        each result in a separate folder (the folder\
  \ name is defined\n        automatically).\n\n    \e[1m-max_genes\e[0m\n       \
  \ Maximal number of genes to analyze.\n\n    \e[1m-skip #\e[0m\n        Skip the\
  \ first # genes (useful for quick testing and for resuming\n        interrupted\
  \ tasks).\n\n    \e[1m-last #\e[0m\n        Stop after having treated the first\
  \ # genes (useful for quick\n        testing).\n\n    \e[1m-o output_root_dir\e\
  [0m\n        Main output directory. The results will be dispatched in\n        sub-directories,\
  \ defined according to the taxon, query organism and\n        query gene name(s).\n\
  \n        If the main output dir is not specified, the program automatically\n \
  \       sets it to \"footprints\".\n\n    \e[1m-batch\e[0m\n        Generate one\
  \ command per query gene, and post it on the queue of a\n        PC cluster.\n\n\
  \    \e[1m-dry\e[0m\n        Dry run: print the commands but do not execute them.\n\
  \n    \e[1m-nodie\e[0m\n        Do not die in case a sub-program returns an error.\n\
  \n        The option -nodie allows you to circumvent problems with specific\n  \
  \      sub-tasks, but this is not recommended because the results may be\n     \
  \   incomplete.\n\n    \e[1m-sep_genes\e[0m\n        Search footprints for each\
  \ query gene separately. The results are\n        stored in a separate folder for\
  \ each gene. The folder name is\n        defined automatically.\n\n        By default,\
  \ when several query genes are specified, the program\n        collects orthologs\
  \ and analyzes their promoters altogether. The\n        option \e[33m-sep\e[0m allows\
  \ to automatize the detection of footprint in a set\n        of genes that will\
  \ be treated separately.\n\n    \e[1m-infer_operons\e[0m\n        Infer operons\
  \ in order to retrieve the promoters of the predicted\n        operon leader genes\
  \ rather than those located immediately upstream\n        of the orthologs. This\
  \ method uses a threshold on the intergenic\n        distance.\n\n    \e[1m-dist_thr\
  \ value\e[0m\n        Specify here the intergenic distance threshold in base pairs.\
  \ Pair\n        of adjacent genes with intergenic distance equal or less than this\n\
  \        value are predicted to be within operon. (default : 55)\n\n    \e[1m-task\e\
  [0m\n        Specify a subset of tasks to be executed.\n\n        By default, the\
  \ program runs all necessary tasks. However, in some\n        cases, it can be useful\
  \ to select one or several tasks to be\n        executed separately. For instance,\
  \ after having collected all the\n        promoter sequences of ortholog genes,\
  \ one might desire to run the\n        pattern detection with various parameter\
  \ values without having to\n        retrieve the same sequences each time.\n\n \
  \       Beware: task selection requires expertise, because most tasks\n        depends\
  \ on the prior execution of some other tasks in the workflow.\n        Selecting\
  \ tasks before their prerequisite tasks have been completed\n        will provoke\
  \ fatal errors.\n\n        \e[1mSupported tasks:\e[0m\n\n        For all footprint\
  \ programs (\e[33mfootprint-discovery\e[0m,\n        \e[33mfootprint-scan\e[0m).\n\
  \n            \e[33mall\e[0m Run all supported tasks. If no task is specified, all\
  \ tasks\n                are performed.\n\n            \e[33moperons\e[0m\n    \
  \            Infer operons (using \e[33minfer-operons\e[0m. This option should be\n\
  \                used only for Bacteria.\n\n            \e[33mquery_seq\e[0m\n \
  \               Retrieve upstream sequence of the query genes (using\n         \
  \       \e[33mretrieve-seq\e[0m).\n\n            \e[33morthologs\e[0m\n        \
  \        Identify theorthologs of the query genes in the selected\n            \
  \    taxon (using \e[33mget-orthologs\e[0m).\n\n            \e[33mortho_seq\e[0m\n\
  \                Retrieve upstream sequences of the orthologs (using\n         \
  \       \e[33mretrieve-seq-multigenome\e[0m).\n\n            \e[33mpurge\e[0m\n\
  \                Purge upstream sequences of the orthologs (using \e[33mpurge-seq\e\
  [0m).\n\n            \e[33mgene_index\e[0m\n                Generate an HTML index\
  \ with links to the result files.\n\n                With the option -sep_genes,\
  \ one index is generated for each\n                gene separately. An index summarizing\
  \ the results for all\n                genes can be generated using the option -index.\n\
  \n            \e[33mindex\e[0m\n                Generate a HTML table with links\
  \ to the individual result\n                files. The table contains one row per\
  \ query gene, one column\n                by output type (sequences, dyads, maps,\
  \ ...) for\n                footpritn-discovery and for footprint-scan on line per\n\
  \                TF-gene interacction.\n\n        Tasks specific to \e[33mfootprint-discovery\e\
  [0m\n\n            \e[33mfilter_dyads\e[0m\n                Detect all dyads present\
  \ with at elast one occurrence in the\n                upstream sequence of the\
  \ query gene (using \e[33mdyad-analysis\e[0m).\n                Those dyads will\
  \ be used as filter if the option \e[33m-filter\e[0m has\n                been specifed.\n\
  \n            \e[33mdyads\e[0m\n                Detect significantly over-represented\
  \ in upstream sequences\n                of orhtologs (using \e[33mdyad-analysis\e\
  [0m).\n\n            \e[33mmap\e[0m Draw feature maps showing the location of over-represented\n\
  \                dyads in upstream sequences of promoters (using\n             \
  \   \e[33mfeature-map\e[0m).\n\n            \e[33mnetwork\e[0m\n               \
  \ Infer a co-regulation network from the footprints, as\n                described\
  \ in Brohee et al. (2011).\n\n            \e[33mindex\e[0m\n                Generate\
  \ an index file for each gene separately. The index\n                file is in\
  \ the gene-specific directory, it is complementary\n                to the general\
  \ index file generated with the task\n                \"synthesis\".\n\n       \
  \ Tasks specific to \e[33mfootprint-scan\e[0m\n\n            \e[33morthologs_tf\e\
  [0m\n                Ortholgous genes will be obtained for the genes realted to\n\
  \                the specified trasncription factors. This task shoulb be\n    \
  \            executed befor the option -orthologs when a tf is specified.\n    \
  \            See -tf option description for more information.\n\n            \e\
  [33mocc_sig\e[0m\n                Compute the significance of number of matrix hit\
  \ occurrences\n                as a function of the weight score (\e[33musing matrix-scan\e\
  [0m and\n                \e[33mmatrix-scan-quick\e[0m).\n\n            \e[33mocc_sig_graph\e\
  [0m\n                Generate graphs showing the distributions of occurrences and\n\
  \                their significances, as a function of the weight score\n      \
  \          (using >XYgraph>).\n\n            \e[33mscan\e[0m\n                Scan\
  \ upstream sequences to detect hits above a given\n                threshold (using\
  \ \e[33mmatrix-scan\e[0m).\n\n            \e[33mmap\e[0m Draw the feature map of\
  \ the hits (using \e[33mfeature-mp\e[0m).\n\n    \e[1m-rand\e[0m\n        When the\
  \ option -rand is activated, the program replaces each\n        ortholog by a gene\
  \ selected at random in the genome where this\n        ortholg was found.\n\n  \
  \      This option is used (for example by footprint-scan and\n        footprint-discovery\
  \ to perform negative controls, i.e. check the\n        rate of false positives\
  \ in randomly selected promoters of the\n        reference taxon.\n\n    \e[1m-map_format\e\
  [0m\n        Format for the feature map.\n\n        Supported: any format supported\
  \ by the program feature-map.\n\n    \e[1m-index\e[0m\n        Deprecated, replaced\
  \ by the task \"index\".\n\n    \e[1m-diamond\e[0m\n        Use ranks_dmnd.tab from\
  \ diamond blast computed in genome-blast.\n\n    \e[1m-synthesis\e[0m\n        This\
  \ option generated synthetic tables (in tab-delimited text and\n        html) for\
  \ all the results. It should be combined with the option\n        \e[33m-sep_genes\e\
  [0m. The synthetic tables contain one row per gene, and one\n        column per\
  \ parameter. They summarize the results (maximal\n        significance, top-ranking\
  \ motifs) and give pointers to the detailed\n        result files.\n\n"
generated_using: *id002
