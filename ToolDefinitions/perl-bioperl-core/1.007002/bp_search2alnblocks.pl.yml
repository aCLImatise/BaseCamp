!Command
command:
- bp_search2alnblocks.pl
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --maxevalue
  description: Maximum E-value for an HSP
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minevalue
  description: Minimum E-value for an HSP
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minlen
  description: Minimum length of an HSP [default 0]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --maxid
  description: "Maximum Percent Id [default 100]\n(to help remove sequences which\
    \ are really close)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minid
  description: Minimum Percent Identity for an HSP [default 0]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: An optional input filename (expects input on STDIN by default)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: An optional output filename (exports to STDOUT by default)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --format
  description: "Specify a different Search Alignment format-\n{fasta, axt, waba, blast,\
    \ blastxml} are all permitted\nalthough the format must have actual alignment\n\
    sequence for this script to work\nSee L<Bio::SearchIO> for more information."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -of
  - --outformat
  description: "format for the alignment blocks, anything\nL<Bio::AlignIO> supports."
  args: !SimpleFlagArg
    name: Output
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Turn on debugging
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    bp_search2alnblocks - Turn SearchIO parseable reports(s) into\
  \ a set of\n    aligned blocks\n\nSYNOPSIS\n      bp_search2alnblocks --minid PERCENTID\
  \ --minlen LEN --minevalue EVALUE file1.\n      blast file2.blast ...> out.fas\n\
  \nDESCRIPTION\n    This script will parse and filter BLAST (or other formats Bio::SearchIO\n\
  \    can parse) output and format the alignment as blocks of alignments based\n\
  \    on the HSPs. Note this can only work if the input file parsed contains\n  \
  \  the necessary.\n\n    Typically this can be used to turn BLAST output into a\
  \ FASTA alignment\n    format for input into the QRNA comparative gene finder for\
  \ RNA genes\n    (E.Rivas).\n\nOPTIONS\n     --maxevalue   Maximum E-value for an\
  \ HSP\n     --minevalue   Minimum E-value for an HSP \n     --minlen      Minimum\
  \ length of an HSP [default 0] \n     --maxid       Maximum Percent Id [default\
  \ 100]\n                   (to help remove sequences which are really close)\n \
  \    --minid       Minimum Percent Identity for an HSP [default 0]\n     -i/--input\
  \    An optional input filename (expects input on STDIN by default)\n     -o/--output\
  \   An optional output filename (exports to STDOUT by default)\n     -f/--format\
  \   Specify a different Search Alignment format- \n                   {fasta, axt,\
  \ waba, blast, blastxml} are all permitted\n                   although the format\
  \ must have actual alignment \n                   sequence for this script to work\n\
  \                   See L<Bio::SearchIO> for more information.\n     -of/--outformat\
  \ Output format for the alignment blocks, anything\n                   L<Bio::AlignIO>\
  \ supports.\n     -v/--verbose  Turn on debugging\n\nAUTHOR - Jason Stajich\n  \
  \  Jason Stajich, jason-at-bioperl-dot-org.\n\n"
generated_using:
- --help
docker_image:
