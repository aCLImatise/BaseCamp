!Command
command:
- idmatrix.sh
positional:
- !Positional
  optional: false
  position: 0
  name: in
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -Xmx
  description: "This will set Java's memory usage, overriding automatic\nmemory detection.\
    \ -Xmx20g will specify\n20 gigs of RAM, and -Xmx200m will specify 200 megs.\n\
    The max is typically 85% of physical memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -eoom
  description: "This flag will cause the process to exit if an out-of-memory\nexception\
    \ occurs.  Requires Java 8u92+."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -da
  description: Disable assertions.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified November 25, 2014\n\nDescription:\
  \  Generates an identity matrix via all-to-all alignment.\n\n*** WARNING: This program\
  \ may produce incorrect results in some cirumstances.\n*** It is not advisable to\
  \ use until fixed.\n\nUsage:\tidmatrix.sh in=<file> out=<file>\n\nParameters:\n\
  in=<file>       File containing reads. in=stdin.fa will pipe from stdin.\nout=<file>\
  \      Matrix output. out=stdout will pipe to stdout.\nthreads=auto    (t) Set number\
  \ of threads to use; default is number of \n                logical processors.\n\
  percent=f       Output identity as percent rather than a fraction.\nedits=     \
  \     Allow at most this much edit distance.  Default is the\n                length\
  \ of the longest input sequence. Lower is faster.\nwidth=          Alignment bandwidth,\
  \ lower is faster.  Default: 2*edits+1.\nusejni=f        (jni) Do alignments faster,\
  \ in C code.  Requires \n                compiling the C code; details are in /jni/README.txt.\n\
  \nJava Parameters:\n-Xmx            This will set Java's memory usage, overriding\
  \ automatic\n                memory detection. -Xmx20g will specify \n         \
  \       20 gigs of RAM, and -Xmx200m will specify 200 megs.  \n                The\
  \ max is typically 85% of physical memory.\n-eoom           This flag will cause\
  \ the process to exit if an out-of-memory\n                exception occurs.  Requires\
  \ Java 8u92+.\n-da             Disable assertions.\n\nPlease contact Brian Bushnell\
  \ at bbushnell@lbl.gov if you encounter any problems.\n\n"
generated_using:
- --help
docker_image:
