!Command
command:
- bbnorm.sh
positional:
- !Positional
  optional: false
  position: 0
  name: in
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -Xmx
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will specify 20 gigs of RAM, and -Xmx200m will specify 200 megs.\nThe max is\
    \ typically 85% of physical memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -eoom
  description: "This flag will cause the process to exit if an\nout-of-memory exception\
    \ occurs.  Requires Java 8u92+."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -da
  description: Disable assertions.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified October 19, 2017\n\nDescription:\
  \  Normalizes read depth based on kmer counts.\nCan also error-correct, bin reads\
  \ by kmer depth, and generate a kmer depth histogram.\nHowever, Tadpole has superior\
  \ error-correction to BBNorm.\nPlease read bbmap/docs/guides/BBNormGuide.txt for\
  \ more information.\n\nUsage:     bbnorm.sh in=<input> out=<reads to keep> outt=<reads\
  \ to toss> hist=<histogram output>\n\nInput parameters:\nin=null             Primary\
  \ input.  Use in2 for paired reads in a second file\nin2=null            Second\
  \ input file for paired reads in two files\nextra=null          Additional files\
  \ to use for input (generating hash table) but not for output\nfastareadlen=2^31\
  \   Break up FASTA reads longer than this.  Can be useful when processing scaffolded\
  \ genomes\ntablereads=-1       Use at most this many reads when building the hashtable\
  \ (-1 means all)\nkmersample=1        Process every nth kmer, and skip the rest\n\
  readsample=1        Process every nth read, and skip the rest\ninterleaved=auto\
  \    May be set to true or false to force the input read file to ovverride autodetection\
  \ of the input file as paired interleaved.\nqin=auto            ASCII offset for\
  \ input quality.  May be 33 (Sanger), 64 (Illumina), or auto.\n\nOutput parameters:\n\
  out=<file>          File for normalized or corrected reads.  Use out2 for paired\
  \ reads in a second file\noutt=<file>         (outtoss) File for reads that were\
  \ excluded from primary output\nreads=-1            Only process this number of\
  \ reads, then quit (-1 means all)\nsampleoutput=t      Use sampling on output as\
  \ well as input (not used if sample rates are 1)\nkeepall=f           Set to true\
  \ to keep all reads (e.g. if you just want error correction).\nzerobin=f       \
  \    Set to true if you want kmers with a count of 0 to go in the 0 bin instead\
  \ of the 1 bin in histograms.\n                    Default is false, to prevent\
  \ confusion about how there can be 0-count kmers.\n                    The reason\
  \ is that based on the 'minq' and 'minprob' settings, some kmers may be excluded\
  \ from the bloom filter.\ntmpdir=      This will specify a directory for temp files\
  \ (only needed for multipass runs).  If null, they will be written to the output\
  \ directory.\nusetempdir=t        Allows enabling/disabling of temporary directory;\
  \ if disabled, temp files will be written to the output directory.\nqout=auto  \
  \         ASCII offset for output quality.  May be 33 (Sanger), 64 (Illumina), or\
  \ auto (same as input).\nrename=f            Rename reads based on their kmer depth.\n\
  \nHashing parameters:\nk=31                Kmer length (values under 32 are most\
  \ efficient, but arbitrarily high values are supported)\nbits=32             Bits\
  \ per cell in bloom filter; must be 2, 4, 8, 16, or 32.  Maximum kmer depth recorded\
  \ is 2^cbits.  Automatically reduced to 16 in 2-pass.\n                    Large\
  \ values decrease accuracy for a fixed amount of memory, so use the lowest number\
  \ you can that will still capture highest-depth kmers.\nhashes=3            Number\
  \ of times each kmer is hashed and stored.  Higher is slower.\n                \
  \    Higher is MORE accurate if there is enough memory, and LESS accurate if there\
  \ is not enough memory.\nprefilter=f         True is slower, but generally more\
  \ accurate; filters out low-depth kmers from the main hashtable.  The prefilter\
  \ is more memory-efficient because it uses 2-bit cells.\nprehashes=2         Number\
  \ of hashes for prefilter.\nprefilterbits=2     (pbits) Bits per cell in prefilter.\n\
  prefiltersize=0.35  Fraction of memory to allocate to prefilter.\nbuildpasses=1\
  \       More passes can sometimes increase accuracy by iteratively removing low-depth\
  \ kmers\nminq=6              Ignore kmers containing bases with quality below this\n\
  minprob=0.5         Ignore kmers with overall probability of correctness below this\n\
  threads=auto        (t) Spawn exactly X hashing threads (default is number of logical\
  \ processors).  Total active threads may exceed X due to I/O threads.\nrdk=t   \
  \            (removeduplicatekmers) When true, a kmer's count will only be incremented\
  \ once per read pair, even if that kmer occurs more than once.\n\nNormalization\
  \ parameters:\nfixspikes=f         (fs) Do a slower, high-precision bloom filter\
  \ lookup of kmers that appear to have an abnormally high depth due to collisions.\n\
  target=100          (tgt) Target normalization depth.  NOTE:  All depth parameters\
  \ control kmer depth, not read depth.\n                    For kmer depth Dk, read\
  \ depth Dr, read length R, and kmer size K:  Dr=Dk*(R/(R-K+1))\nmaxdepth=-1    \
  \     (max) Reads will not be downsampled when below this depth, even if they are\
  \ above the target depth.            \nmindepth=5          (min) Kmers with depth\
  \ below this number will not be included when calculating the depth of a read.\n\
  minkmers=15         (mgkpr) Reads must have at least this many kmers over min depth\
  \ to be retained.  Aka 'mingoodkmersperread'.\npercentile=54.0     (dp) Read depth\
  \ is by default inferred from the 54th percentile of kmer depth, but this may be\
  \ changed to any number 1-100.\nuselowerdepth=t     (uld) For pairs, use the depth\
  \ of the lower read as the depth proxy.\ndeterministic=t     (dr) Generate random\
  \ numbers deterministically to ensure identical output between multiple runs.  May\
  \ decrease speed with a huge number of threads.\npasses=2            (p) 1 pass\
  \ is the basic mode.  2 passes (default) allows greater accuracy, error detection,\
  \ better contol of output depth.\n\nError detection parameters:\nhdp=90.0      \
  \      (highdepthpercentile) Position in sorted kmer depth array used as proxy of\
  \ a read's high kmer depth.\nldp=25.0            (lowdepthpercentile) Position in\
  \ sorted kmer depth array used as proxy of a read's low kmer depth.\ntossbadreads=f\
  \      (tbr) Throw away reads detected as containing errors.\nrequirebothbad=f \
  \   (rbb) Only toss bad pairs if both reads are bad.\nerrordetectratio=125   (edr)\
  \ Reads with a ratio of at least this much between their high and low depth kmers\
  \ will be classified as error reads.\nhighthresh=12       (ht) Threshold for high\
  \ kmer.  A high kmer at this or above are considered non-error.\nlowthresh=3   \
  \      (lt) Threshold for low kmer.  Kmers at this and below are always considered\
  \ errors.\n\nError correction parameters:\necc=f               Set to true to correct\
  \ errors.  NOTE: Tadpole is now preferred for ecc as it does a better job.\necclimit=3\
  \          Correct up to this many errors per read.  If more are detected, the read\
  \ will remain unchanged.\nerrorcorrectratio=140  (ecr) Adjacent kmers with a depth\
  \ ratio of at least this much between will be classified as an error.\nechighthresh=22\
  \     (echt) Threshold for high kmer.  A kmer at this or above may be considered\
  \ non-error.\neclowthresh=2       (eclt) Threshold for low kmer.  Kmers at this\
  \ and below are considered errors.\neccmaxqual=127      Do not correct bases with\
  \ quality above this value.\naec=f               (aggressiveErrorCorrection) Sets\
  \ more aggressive values of ecr=100, ecclimit=7, echt=16, eclt=3.\ncec=f       \
  \        (conservativeErrorCorrection) Sets more conservative values of ecr=180,\
  \ ecclimit=2, echt=30, eclt=1, sl=4, pl=4.\nmeo=f               (markErrorsOnly)\
  \ Marks errors by reducing quality value of suspected errors; does not correct anything.\n\
  mue=t               (markUncorrectableErrors) Marks errors only on uncorrectable\
  \ reads; requires 'ecc=t'.\noverlap=f           (ecco) Error correct by read overlap.\n\
  \nDepth binning parameters:\nlowbindepth=10      (lbd) Cutoff for low depth bin.\n\
  highbindepth=80     (hbd) Cutoff for high depth bin.\noutlow=<file>       Pairs\
  \ in which both reads have a median below lbd go into this file.\nouthigh=<file>\
  \      Pairs in which both reads have a median above hbd go into this file.\noutmid=<file>\
  \       All other pairs go into this file.\n\nHistogram parameters:\nhist=<file>\
  \         Specify a file to write the input kmer depth histogram.\nhistout=<file>\
  \      Specify a file to write the output kmer depth histogram.\nhistcol=3     \
  \      (histogramcolumns) Number of histogram columns, 2 or 3.\npzc=f          \
  \     (printzerocoverage) Print lines in the histogram with zero coverage.\nhistlen=1048576\
  \     Max kmer depth displayed in histogram.  Also affects statistics displayed,\
  \ but does not affect normalization.\n\nPeak calling parameters:\npeaks=<file> \
  \       Write the peaks to this file.  Default is stdout.\nminHeight=2         (h)\
  \ Ignore peaks shorter than this.\nminVolume=5         (v) Ignore peaks with less\
  \ area than this.\nminWidth=3          (w) Ignore peaks narrower than this.\nminPeak=2\
  \           (minp) Ignore peaks with an X-value below this.\nmaxPeak=BIG       \
  \  (maxp) Ignore peaks with an X-value above this.\nmaxPeakCount=8      (maxpc)\
  \ Print up to this many peaks (prioritizing height).\n\nJava Parameters:\n-Xmx \
  \               This will set Java's memory usage, overriding autodetection.\n \
  \                   -Xmx20g will specify 20 gigs of RAM, and -Xmx200m will specify\
  \ 200 megs.\n                    The max is typically 85% of physical memory.\n\
  -eoom               This flag will cause the process to exit if an\n           \
  \         out-of-memory exception occurs.  Requires Java 8u92+.\n-da           \
  \      Disable assertions.\n\nPlease contact Brian Bushnell at bbushnell@lbl.gov\
  \ if you encounter any problems.\n\n"
generated_using:
- --help
docker_image:
