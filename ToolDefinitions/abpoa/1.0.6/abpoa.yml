!Command
command:
- abpoa
positional:
- !Positional
  optional: false
  position: 0
  name: in.fa/fq
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -m
  - --aln-mode
  description: "alignment mode [0]\n0: global, 1: local, 2: extension"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -M
  - --match
  description: INT       match score [2]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  - --mismatch
  description: mismatch penalty [4]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -O
  - --gap-open
  description: (,INT) gap opening penalty (O1,O2) [4,24]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -E
  - --gap-ext
  description: "INT(,INT) gap extension penalty (E1,E2) [2,1]\nabPOA provides three\
    \ gap penalty modes, cost of a g-long gap:\n- convex (default): min{O1+g*E1, O2+g*E2}\n\
    - affine (set O2 as 0): O1+g*E1\n- linear (set O1 as 0): g*E1"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --amb-strand
  description: "ambiguous strand mode [False]\nfor each input sequence, try the reverse\
    \ complement if the current\nalignment score is too low, and pick the strand with\
    \ a higher score"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -b
  - --extra-b
  description: "INT       first adaptive banding parameter [10]\nset b as < 0 to disable\
    \ adaptive banded DP"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --extra-f
  description: "FLOAT     second adaptive banding parameter [0.01]\nthe number of\
    \ extra bases added on both sites of the band is\nb+f*L, where L is the length\
    \ of the aligned sequence"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  - --in-list
  description: "input file is a list of sequence file names [False]\neach line is\
    \ one sequence file containing a set of sequences\nwhich will be aligned by abPOA\
    \ to generate a consensus sequence"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: FILE      ouput to FILE [stdout]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --result
  description: "INT       output result mode [0]\n- 0: consensus (FASTA format)\n\
    - 1: MSA (PIR format)\n- 2: both 0 & 1\n- 3: graph (GFA format)\n- 4: graph with\
    \ consensus path (GFA format)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -A
  - --msa-header
  description: add read ID as header of each sequence in MSA output [False]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -g
  - --out-pog
  description: FILE      dump final alignment graph to FILE (.pdf/.png) [Null]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  - --cons-alg
  description: "algorithm to use for consensus calling [0]\n- 0: heaviest bundling\n\
    - 1: heaviest in column"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -d
  - --diploid
  description: input data is diploid [False]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --min-freq
  description: min frequency of each consensus for diploid input [0.30]
  args: !SimpleFlagArg
    name: FLOAT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: print this help usage information
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: show version number
  args: !EmptyFlagArg {}
help_text: "\nabpoa: \e[1m\e[4ma\e[0mdaptive \e[1m\e[4mb\e[0manded \e[1m\e[4mP\e[0martial\
  \ \e[1m\e[4mO\e[0mrder \e[1m\e[4mA\e[0mlignment \n\nVersion: 1.0.6\tContact: gaoy286@mail.sysu.edu.cn\n\
  \nUsage: abpoa [options] <in.fa/fq> > cons.fa/msa.out/abpoa.gfa\n\nOptions:\n  Alignment:\n\
  \    -m --aln-mode INT       alignment mode [0]\n                              0:\
  \ global, 1: local, 2: extension\n    -M --match    INT       match score [2]\n\
  \    -X --mismatch INT       mismatch penalty [4]\n    -O --gap-open INT(,INT) gap\
  \ opening penalty (O1,O2) [4,24]\n    -E --gap-ext  INT(,INT) gap extension penalty\
  \ (E1,E2) [2,1]\n                            abPOA provides three gap penalty modes,\
  \ cost of a g-long gap:\n                            - convex (default): min{O1+g*E1,\
  \ O2+g*E2}\n                            - affine (set O2 as 0): O1+g*E1\n      \
  \                      - linear (set O1 as 0): g*E1\n    -s --amb-strand       \
  \  ambiguous strand mode [False]\n                            for each input sequence,\
  \ try the reverse complement if the current\n                            alignment\
  \ score is too low, and pick the strand with a higher score\n  Adaptive banded DP:\n\
  \    -b --extra-b  INT       first adaptive banding parameter [10]\n           \
  \                 set b as < 0 to disable adaptive banded DP\n    -f --extra-f \
  \ FLOAT     second adaptive banding parameter [0.01]\n                         \
  \   the number of extra bases added on both sites of the band is\n             \
  \               b+f*L, where L is the length of the aligned sequence\n  Input/Output:\n\
  \    -l --in-list            input file is a list of sequence file names [False]\n\
  \                            each line is one sequence file containing a set of\
  \ sequences\n                            which will be aligned by abPOA to generate\
  \ a consensus sequence\n    -o --output   FILE      ouput to FILE [stdout]\n   \
  \ -r --result   INT       output result mode [0]\n                            -\
  \ 0: consensus (FASTA format)\n                            - 1: MSA (PIR format)\n\
  \                            - 2: both 0 & 1\n                            - 3: graph\
  \ (GFA format)\n                            - 4: graph with consensus path (GFA\
  \ format)\n    -A --msa-header         add read ID as header of each sequence in\
  \ MSA output [False]\n    -g --out-pog  FILE      dump final alignment graph to\
  \ FILE (.pdf/.png) [Null]\n\n    -h --help               print this help usage information\n\
  \    -v --version            show version number\n  Parameters under development:\n\
  \    -a --cons-alg INT       algorithm to use for consensus calling [0]\n      \
  \                      - 0: heaviest bundling\n                            - 1:\
  \ heaviest in column\n    -d --diploid            input data is diploid [False]\n\
  \                            -a/--cons-alg will be set as 1 when input is diploid\n\
  \                            and at most two consensus sequences will be generated\n\
  \    -q --min-freq FLOAT     min frequency of each consensus for diploid input [0.30]\n\
  \n"
generated_using:
- --help
docker_image: quay.io/biocontainers/abpoa:1.0.6--hed695b0_0
