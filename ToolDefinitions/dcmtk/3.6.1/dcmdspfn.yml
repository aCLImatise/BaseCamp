!Command
command:
- dcmdspfn
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --arguments
  description: print expanded command line arguments
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: quiet mode, print no warnings and errors
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: verbose mode, print processing details
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: debug mode, print debug information
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ll
  - --log-level
  description: "[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\n\
    use level l for the logger"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -lc
  - --log-config
  description: "[f]ilename: string\nuse config file f for the logger"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: print this help text and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: print version information and exit
  args: !EmptyFlagArg {}
help_text: "$dcmtk: dcmdspfn v3.6.1 2016-11-02 $\n\ndcmdspfn: Export standard display\
  \ curves to a text file\nusage: dcmdspfn [options]\n\ngeneral options:\n  -h   --help\
  \           print this help text and exit\n       --version        print version\
  \ information and exit\n       --arguments      print expanded command line arguments\n\
  \  -q   --quiet          quiet mode, print no warnings and errors\n  -v   --verbose\
  \        verbose mode, print processing details\n  -d   --debug          debug mode,\
  \ print debug information\n  -ll  --log-level      [l]evel: string constant\n  \
  \                      (fatal, error, warn, info, debug, trace)\n              \
  \          use level l for the logger\n  -lc  --log-config     [f]ilename: string\n\
  \                        use config file f for the logger\ninput options: (mutually\
  \ exclusive)\n  +Im  --monitor-file   [f]ilename: string\n                     \
  \   text file describing the monitor characteristics\n  +Ic  --camera-file    [f]ilename:\
  \ string\n                        text file describing the camera characteristics\n\
  \  +Ip  --printer-file   [f]ilename: string\n                        text file describing\
  \ the printer characteristics\n  +Is  --scanner-file   [f]ilename: string\n    \
  \                    text file describing the scanner characteristics\n  +Il  --lum-range\
  \      [m]in max: float\n                        minimum and maximum luminance (cd/m^2)\n\
  \  +Io  --od-range       [m]in max: float\n                        minimum and maximum\
  \ optical density (OD),\n                        automatically converted to luminance\n\
  creation options:\n  +Ca  --ambient-light  [a]mbient light: float\n            \
  \            ambient light value (cd/m^2, default: file f)\n  +Ci  --illumination\
  \   [i]llumination: float\n                        illumination value (cd/m^2, default:\
  \ file f)\n  +Dn  --min-density    [m]inimum optical density: float\n          \
  \              Dmin value (default: off, only with +Ip and +Io)\n  +Dx  --max-density\
  \    [m]aximum optical density: float\n                        Dmax value (default:\
  \ off, only with +Ip and +Io)\n  +Cd  --ddl-count      [n]umber of DDLs: integer\n\
  \                        number of Digital Driving Levels\n                    \
  \    (default: 256, only with --lum/od-range)\n  +Cf  --curve-fitting  [n]umber\
  \ : integer\n                        use polynomial curve fitting algorithm with\
  \ order n\n                        (0..99, default: file setting or cubic spline)\n\
  output options:\n  +Og  --gsdf           [f]ilename: string\n                  \
  \      write GSDF curve data to file f\n  +Oc  --cielab         [f]ilename: string\n\
  \                        write CIELAB curve data to file f\n\n"
generated_using:
- --help
docker_image:
