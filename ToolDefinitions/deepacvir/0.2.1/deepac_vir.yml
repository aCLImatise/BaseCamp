!Command
command: &id001
- deepac-vir
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - deepac-vir
  - test
  positional:
  - !Positional
    optional: false
    position: 0
    name: deepac
    description: ''
  - !Positional
    optional: false
    position: 1
    name: test
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -n
    - --n-cpus
    description: 'Number of CPU cores. Default: all.'
    args: !SimpleFlagArg
      name: N_CPUS
  - !Flag
    optional: true
    synonyms:
    - -g
    - --gpus
    description: 'GPU devices to use. Default: all'
    args: !RepeatFlagArg
      name: GPUS
  - !Flag
    optional: true
    synonyms:
    - -x
    - --explain
    description: Test explain workflows.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    - --gwpa
    description: Test gwpa workflows.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -a
    - --all
    description: Test all functions.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -q
    - --quick
    description: Don't test heavy models (e.g. when no GPU available).
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -k
    - --keep
    description: Don't delete previous test output.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -s
    - --scale
    description: "Generate s*1024 reads for testing (Default: s=1).\n"
    args: !SimpleFlagArg
      name: SCALE
  parent: &id011 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: deepac
        description: ''
      - !Positional
        optional: false
        position: 1
        name: test
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -n
        - --n-cpus
        description: 'Number of CPU cores. Default: all.'
        args: !SimpleFlagArg
          name: N_CPUS
      - !Flag
        optional: true
        synonyms:
        - -g
        - --gpus
        description: 'GPU devices to use. Default: all'
        args: !RepeatFlagArg
          name: GPUS
      - !Flag
        optional: true
        synonyms:
        - -x
        - --explain
        description: Test explain workflows.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -p
        - --gwpa
        description: Test gwpa workflows.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -a
        - --all
        description: Test all functions.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -q
        - --quick
        description: Don't test heavy models (e.g. when no GPU available).
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -k
        - --keep
        description: Don't delete previous test output.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -s
        - --scale
        description: "Generate s*1024 reads for testing (Default: s=1).\n"
        args: !SimpleFlagArg
          name: SCALE
      parent: &id010 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: deepac
            description: ''
          - !Positional
            optional: false
            position: 1
            name: test
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -n
            - --n-cpus
            description: 'Number of CPU cores. Default: all.'
            args: !SimpleFlagArg
              name: N_CPUS
          - !Flag
            optional: true
            synonyms:
            - -g
            - --gpus
            description: 'GPU devices to use. Default: all'
            args: !RepeatFlagArg
              name: GPUS
          - !Flag
            optional: true
            synonyms:
            - -x
            - --explain
            description: Test explain workflows.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -p
            - --gwpa
            description: Test gwpa workflows.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -a
            - --all
            description: Test all functions.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -q
            - --quick
            description: Don't test heavy models (e.g. when no GPU available).
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -k
            - --keep
            description: Don't delete previous test output.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -s
            - --scale
            description: "Generate s*1024 reads for testing (Default: s=1).\n"
            args: !SimpleFlagArg
              name: SCALE
          parent: &id009 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: deepac
                description: ''
              - !Positional
                optional: false
                position: 1
                name: test
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -n
                - --n-cpus
                description: 'Number of CPU cores. Default: all.'
                args: !SimpleFlagArg
                  name: N_CPUS
              - !Flag
                optional: true
                synonyms:
                - -g
                - --gpus
                description: 'GPU devices to use. Default: all'
                args: !RepeatFlagArg
                  name: GPUS
              - !Flag
                optional: true
                synonyms:
                - -x
                - --explain
                description: Test explain workflows.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -p
                - --gwpa
                description: Test gwpa workflows.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -a
                - --all
                description: Test all functions.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -q
                - --quick
                description: Don't test heavy models (e.g. when no GPU available).
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -k
                - --keep
                description: Don't delete previous test output.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -s
                - --scale
                description: "Generate s*1024 reads for testing (Default: s=1).\n"
                args: !SimpleFlagArg
                  name: SCALE
              parent: &id008 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: deepac
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: test
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --n-cpus
                    description: 'Number of CPU cores. Default: all.'
                    args: !SimpleFlagArg
                      name: N_CPUS
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    - --gpus
                    description: 'GPU devices to use. Default: all'
                    args: !RepeatFlagArg
                      name: GPUS
                  - !Flag
                    optional: true
                    synonyms:
                    - -x
                    - --explain
                    description: Test explain workflows.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    - --gwpa
                    description: Test gwpa workflows.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    - --all
                    description: Test all functions.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -q
                    - --quick
                    description: Don't test heavy models (e.g. when no GPU available).
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -k
                    - --keep
                    description: Don't delete previous test output.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --scale
                    description: "Generate s*1024 reads for testing (Default: s=1).\n"
                    args: !SimpleFlagArg
                      name: SCALE
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - --debug-no-eager
                      description: Disable eager mode.
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --debug-tf
                      description: "Set tensorflow debug info verbosity level. 0 =\
                        \ max, 3\n= min. Default: 2 (errors); 3 for tests (muted)"
                      args: !SimpleFlagArg
                        name: DEBUG_TF
                    - !Flag
                      optional: true
                      synonyms:
                      - --debug-device
                      description: Enable verbose device placement information.
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --force-cpu
                      description: Use a CPU even if GPUs are available.
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --tpu
                      description: "TPU name: 'colab' for Google Colab, or name of\
                        \ your\nTPU on GCE.\n"
                      args: !SimpleFlagArg
                        name: TPU
                    - !Flag
                      optional: true
                      synonyms:
                      - -v
                      description: ''
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: deepac
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: test
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --n-cpus
                        description: 'Number of CPU cores. Default: all.'
                        args: !SimpleFlagArg
                          name: N_CPUS
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        - --gpus
                        description: 'GPU devices to use. Default: all'
                        args: !RepeatFlagArg
                          name: GPUS
                      - !Flag
                        optional: true
                        synonyms:
                        - -x
                        - --explain
                        description: Test explain workflows.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        - --gwpa
                        description: Test gwpa workflows.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --all
                        description: Test all functions.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -q
                        - --quick
                        description: Don't test heavy models (e.g. when no GPU available).
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -k
                        - --keep
                        description: Don't delete previous test output.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --scale
                        description: "Generate s*1024 reads for testing (Default:\
                          \ s=1).\n"
                        args: !SimpleFlagArg
                          name: SCALE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                        \ test [-h] [-n N_CPUS] [-g GPUS [GPUS ...]] [-x] [-p] [-a]\
                        \ [-q]\n                   [-k] [-s SCALE]\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -n N_CPUS, --n-cpus N_CPUS\n                        Number\
                        \ of CPU cores. Default: all.\n  -g GPUS [GPUS ...], --gpus\
                        \ GPUS [GPUS ...]\n                        GPU devices to\
                        \ use. Default: all\n  -x, --explain         Test explain\
                        \ workflows.\n  -p, --gwpa            Test gwpa workflows.\n\
                        \  -a, --all             Test all functions.\n  -q, --quick\
                        \           Don't test heavy models (e.g. when no GPU available).\n\
                        \  -k, --keep            Don't delete previous test output.\n\
                        \  -s SCALE, --scale SCALE\n                        Generate\
                        \ s*1024 reads for testing (Default: s=1).\n"
                      generated_using: &id005
                      - --help
                      docker_image:
                    - !Command
                      command: &id006
                      - deepac-vir
                      - convert
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: config
                        description: Training config file.
                      - !Positional
                        optional: false
                        position: 1
                        name: model
                        description: Saved model.
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -w
                        - --weights
                        description: Use prepared weights instead of the model file.
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                        \ convert [-h] [-w] config model\n\npositional arguments:\n\
                        \  config         Training config file.\n  model         \
                        \ Saved model.\n\noptional arguments:\n  -h, --help     show\
                        \ this help message and exit\n  -w, --weights  Use prepared\
                        \ weights instead of the model file.\n"
                      generated_using: &id004
                      - -h
                      docker_image:
                    - !Command
                      command: &id007
                      - deepac-vir
                      - gwpa
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: details.
                        description: fragment            Fragment genomes for analysis.
                      - !Positional
                        optional: false
                        position: 1
                        name: genomemap
                        description: Generate a genome-wide phenotype potential map.
                      - !Positional
                        optional: false
                        position: 2
                        name: granking
                        description: Generate gene rankings.
                      - !Positional
                        optional: false
                        position: 3
                        name: ntcontribs
                        description: Generate a genome-wide nt contribution map.
                      - !Positional
                        optional: false
                        position: 4
                        name: factiv
                        description: Get filter activations.
                      - !Positional
                        optional: false
                        position: 5
                        name: fenrichment
                        description: Run filter enrichment analysis.
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                        \ gwpa [-h]\n                   {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
                        \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
                        \                        DeePaC gwpa subcommands. See command\
                        \ --help for\n                        details.\n    fragment\
                        \            Fragment genomes for analysis.\n    genomemap\
                        \           Generate a genome-wide phenotype potential map.\n\
                        \    granking            Generate gene rankings.\n    ntcontribs\
                        \          Generate a genome-wide nt contribution map.\n \
                        \   factiv              Get filter activations.\n    fenrichment\
                        \         Run filter enrichment analysis.\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag: !Flag
                      optional: true
                      synonyms:
                      - -v
                      - --version
                      description: Print version.
                      args: !EmptyFlagArg {}
                    help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                      \ [-h] [-v] [--debug-no-eager] [--debug-tf DEBUG_TF]\n     \
                      \         [--debug-device] [--force-cpu] [--tpu TPU]\n     \
                      \         {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
                      \              ...\n\nPredicting pathogenic potentials of novel\
                      \ DNA with reverse-complement neural\nnetworks.\n\npositional\
                      \ arguments:\n  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
                      \                        DeePaC subcommands. See command --help\
                      \ for details.\n    predict             Predict using a trained\
                      \ model.\n    filter              Filter prediction results.\n\
                      \    train               Train a new model.\n    preproc   \
                      \          Convert fasta files to numpy arrays for training.\n\
                      \    eval                Predict using a trained model.\n  \
                      \  convert             Convert a CuDNNLSTM to a CPU-compatible\
                      \ LSTM.\n    test                Run additional tests.\n   \
                      \ explain             Run filter visualization workflows.\n\
                      \    gwpa                Run GWPA workflows.\n    templates\
                      \           Get config templates (in this directory).\n\noptional\
                      \ arguments:\n  -h, --help            show this help message\
                      \ and exit\n  -v, --version         Print version.\n  --debug-no-eager\
                      \      Disable eager mode.\n  --debug-tf DEBUG_TF   Set tensorflow\
                      \ debug info verbosity level. 0 = max, 3\n                 \
                      \       = min. Default: 2 (errors); 3 for tests (muted)\n  --debug-device\
                      \        Enable verbose device placement information.\n  --force-cpu\
                      \           Use a CPU even if GPUs are available.\n  --tpu TPU\
                      \             TPU name: 'colab' for Google Colab, or name of\
                      \ your\n                        TPU on GCE.\n"
                    generated_using: *id005
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                    \ test [-h] [-n N_CPUS] [-g GPUS [GPUS ...]] [-x] [-p] [-a] [-q]\n\
                    \                   [-k] [-s SCALE]\n\noptional arguments:\n \
                    \ -h, --help            show this help message and exit\n  -n\
                    \ N_CPUS, --n-cpus N_CPUS\n                        Number of CPU\
                    \ cores. Default: all.\n  -g GPUS [GPUS ...], --gpus GPUS [GPUS\
                    \ ...]\n                        GPU devices to use. Default: all\n\
                    \  -x, --explain         Test explain workflows.\n  -p, --gwpa\
                    \            Test gwpa workflows.\n  -a, --all             Test\
                    \ all functions.\n  -q, --quick           Don't test heavy models\
                    \ (e.g. when no GPU available).\n  -k, --keep            Don't\
                    \ delete previous test output.\n  -s SCALE, --scale SCALE\n  \
                    \                      Generate s*1024 reads for testing (Default:\
                    \ s=1).\n"
                  generated_using: *id005
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: config
                    description: Training config file.
                  - !Positional
                    optional: false
                    position: 1
                    name: model
                    description: Saved model.
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -w
                    - --weights
                    description: Use prepared weights instead of the model file.
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                    \ convert [-h] [-w] config model\n\npositional arguments:\n  config\
                    \         Training config file.\n  model          Saved model.\n\
                    \noptional arguments:\n  -h, --help     show this help message\
                    \ and exit\n  -w, --weights  Use prepared weights instead of the\
                    \ model file.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: details.
                    description: fragment            Fragment genomes for analysis.
                  - !Positional
                    optional: false
                    position: 1
                    name: genomemap
                    description: Generate a genome-wide phenotype potential map.
                  - !Positional
                    optional: false
                    position: 2
                    name: granking
                    description: Generate gene rankings.
                  - !Positional
                    optional: false
                    position: 3
                    name: ntcontribs
                    description: Generate a genome-wide nt contribution map.
                  - !Positional
                    optional: false
                    position: 4
                    name: factiv
                    description: Get filter activations.
                  - !Positional
                    optional: false
                    position: 5
                    name: fenrichment
                    description: Run filter enrichment analysis.
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac\
                    \ gwpa [-h]\n                   {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
                    \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
                    \                        DeePaC gwpa subcommands. See command\
                    \ --help for\n                        details.\n    fragment \
                    \           Fragment genomes for analysis.\n    genomemap    \
                    \       Generate a genome-wide phenotype potential map.\n    granking\
                    \            Generate gene rankings.\n    ntcontribs         \
                    \ Generate a genome-wide nt contribution map.\n    factiv    \
                    \          Get filter activations.\n    fenrichment         Run\
                    \ filter enrichment analysis.\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac [-h]\
                  \ [-v] [--debug-no-eager] [--debug-tf DEBUG_TF]\n              [--debug-device]\
                  \ [--force-cpu] [--tpu TPU]\n              {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
                  \              ...\n\nPredicting pathogenic potentials of novel\
                  \ DNA with reverse-complement neural\nnetworks.\n\npositional arguments:\n\
                  \  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
                  \                        DeePaC subcommands. See command --help\
                  \ for details.\n    predict             Predict using a trained\
                  \ model.\n    filter              Filter prediction results.\n \
                  \   train               Train a new model.\n    preproc        \
                  \     Convert fasta files to numpy arrays for training.\n    eval\
                  \                Predict using a trained model.\n    convert   \
                  \          Convert a CuDNNLSTM to a CPU-compatible LSTM.\n    test\
                  \                Run additional tests.\n    explain            \
                  \ Run filter visualization workflows.\n    gwpa                Run\
                  \ GWPA workflows.\n    templates           Get config templates\
                  \ (in this directory).\n\noptional arguments:\n  -h, --help    \
                  \        show this help message and exit\n  -v, --version      \
                  \   Print version.\n  --debug-no-eager      Disable eager mode.\n\
                  \  --debug-tf DEBUG_TF   Set tensorflow debug info verbosity level.\
                  \ 0 = max, 3\n                        = min. Default: 2 (errors);\
                  \ 3 for tests (muted)\n  --debug-device        Enable verbose device\
                  \ placement information.\n  --force-cpu           Use a CPU even\
                  \ if GPUs are available.\n  --tpu TPU             TPU name: 'colab'\
                  \ for Google Colab, or name of your\n                        TPU\
                  \ on GCE.\n"
                generated_using: *id005
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac test\
                \ [-h] [-n N_CPUS] [-g GPUS [GPUS ...]] [-x] [-p] [-a] [-q]\n    \
                \               [-k] [-s SCALE]\n\noptional arguments:\n  -h, --help\
                \            show this help message and exit\n  -n N_CPUS, --n-cpus\
                \ N_CPUS\n                        Number of CPU cores. Default: all.\n\
                \  -g GPUS [GPUS ...], --gpus GPUS [GPUS ...]\n                  \
                \      GPU devices to use. Default: all\n  -x, --explain         Test\
                \ explain workflows.\n  -p, --gwpa            Test gwpa workflows.\n\
                \  -a, --all             Test all functions.\n  -q, --quick      \
                \     Don't test heavy models (e.g. when no GPU available).\n  -k,\
                \ --keep            Don't delete previous test output.\n  -s SCALE,\
                \ --scale SCALE\n                        Generate s*1024 reads for\
                \ testing (Default: s=1).\n"
              generated_using: *id005
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: config
                description: Training config file.
              - !Positional
                optional: false
                position: 1
                name: model
                description: Saved model.
              named:
              - !Flag
                optional: true
                synonyms:
                - -w
                - --weights
                description: Use prepared weights instead of the model file.
                args: !EmptyFlagArg {}
              parent: *id008
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac convert\
                \ [-h] [-w] config model\n\npositional arguments:\n  config      \
                \   Training config file.\n  model          Saved model.\n\noptional\
                \ arguments:\n  -h, --help     show this help message and exit\n \
                \ -w, --weights  Use prepared weights instead of the model file.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: details.
                description: fragment            Fragment genomes for analysis.
              - !Positional
                optional: false
                position: 1
                name: genomemap
                description: Generate a genome-wide phenotype potential map.
              - !Positional
                optional: false
                position: 2
                name: granking
                description: Generate gene rankings.
              - !Positional
                optional: false
                position: 3
                name: ntcontribs
                description: Generate a genome-wide nt contribution map.
              - !Positional
                optional: false
                position: 4
                name: factiv
                description: Get filter activations.
              - !Positional
                optional: false
                position: 5
                name: fenrichment
                description: Run filter enrichment analysis.
              named: []
              parent: *id008
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac gwpa\
                \ [-h]\n                   {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
                \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
                \                        DeePaC gwpa subcommands. See command --help\
                \ for\n                        details.\n    fragment            Fragment\
                \ genomes for analysis.\n    genomemap           Generate a genome-wide\
                \ phenotype potential map.\n    granking            Generate gene\
                \ rankings.\n    ntcontribs          Generate a genome-wide nt contribution\
                \ map.\n    factiv              Get filter activations.\n    fenrichment\
                \         Run filter enrichment analysis.\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac [-h]\
              \ [-v] [--debug-no-eager] [--debug-tf DEBUG_TF]\n              [--debug-device]\
              \ [--force-cpu] [--tpu TPU]\n              {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
              \              ...\n\nPredicting pathogenic potentials of novel DNA\
              \ with reverse-complement neural\nnetworks.\n\npositional arguments:\n\
              \  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
              \                        DeePaC subcommands. See command --help for\
              \ details.\n    predict             Predict using a trained model.\n\
              \    filter              Filter prediction results.\n    train     \
              \          Train a new model.\n    preproc             Convert fasta\
              \ files to numpy arrays for training.\n    eval                Predict\
              \ using a trained model.\n    convert             Convert a CuDNNLSTM\
              \ to a CPU-compatible LSTM.\n    test                Run additional\
              \ tests.\n    explain             Run filter visualization workflows.\n\
              \    gwpa                Run GWPA workflows.\n    templates        \
              \   Get config templates (in this directory).\n\noptional arguments:\n\
              \  -h, --help            show this help message and exit\n  -v, --version\
              \         Print version.\n  --debug-no-eager      Disable eager mode.\n\
              \  --debug-tf DEBUG_TF   Set tensorflow debug info verbosity level.\
              \ 0 = max, 3\n                        = min. Default: 2 (errors); 3\
              \ for tests (muted)\n  --debug-device        Enable verbose device placement\
              \ information.\n  --force-cpu           Use a CPU even if GPUs are available.\n\
              \  --tpu TPU             TPU name: 'colab' for Google Colab, or name\
              \ of your\n                        TPU on GCE.\n"
            generated_using: *id005
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac test [-h]\
            \ [-n N_CPUS] [-g GPUS [GPUS ...]] [-x] [-p] [-a] [-q]\n             \
            \      [-k] [-s SCALE]\n\noptional arguments:\n  -h, --help          \
            \  show this help message and exit\n  -n N_CPUS, --n-cpus N_CPUS\n   \
            \                     Number of CPU cores. Default: all.\n  -g GPUS [GPUS\
            \ ...], --gpus GPUS [GPUS ...]\n                        GPU devices to\
            \ use. Default: all\n  -x, --explain         Test explain workflows.\n\
            \  -p, --gwpa            Test gwpa workflows.\n  -a, --all           \
            \  Test all functions.\n  -q, --quick           Don't test heavy models\
            \ (e.g. when no GPU available).\n  -k, --keep            Don't delete\
            \ previous test output.\n  -s SCALE, --scale SCALE\n                 \
            \       Generate s*1024 reads for testing (Default: s=1).\n"
          generated_using: *id005
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: config
            description: Training config file.
          - !Positional
            optional: false
            position: 1
            name: model
            description: Saved model.
          named:
          - !Flag
            optional: true
            synonyms:
            - -w
            - --weights
            description: Use prepared weights instead of the model file.
            args: !EmptyFlagArg {}
          parent: *id009
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac convert\
            \ [-h] [-w] config model\n\npositional arguments:\n  config         Training\
            \ config file.\n  model          Saved model.\n\noptional arguments:\n\
            \  -h, --help     show this help message and exit\n  -w, --weights  Use\
            \ prepared weights instead of the model file.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: details.
            description: fragment            Fragment genomes for analysis.
          - !Positional
            optional: false
            position: 1
            name: genomemap
            description: Generate a genome-wide phenotype potential map.
          - !Positional
            optional: false
            position: 2
            name: granking
            description: Generate gene rankings.
          - !Positional
            optional: false
            position: 3
            name: ntcontribs
            description: Generate a genome-wide nt contribution map.
          - !Positional
            optional: false
            position: 4
            name: factiv
            description: Get filter activations.
          - !Positional
            optional: false
            position: 5
            name: fenrichment
            description: Run filter enrichment analysis.
          named: []
          parent: *id009
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac gwpa [-h]\n\
            \                   {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
            \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
            \                        DeePaC gwpa subcommands. See command --help for\n\
            \                        details.\n    fragment            Fragment genomes\
            \ for analysis.\n    genomemap           Generate a genome-wide phenotype\
            \ potential map.\n    granking            Generate gene rankings.\n  \
            \  ntcontribs          Generate a genome-wide nt contribution map.\n \
            \   factiv              Get filter activations.\n    fenrichment     \
            \    Run filter enrichment analysis.\n\noptional arguments:\n  -h, --help\
            \            show this help message and exit\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac [-h] [-v]\
          \ [--debug-no-eager] [--debug-tf DEBUG_TF]\n              [--debug-device]\
          \ [--force-cpu] [--tpu TPU]\n              {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
          \              ...\n\nPredicting pathogenic potentials of novel DNA with\
          \ reverse-complement neural\nnetworks.\n\npositional arguments:\n  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
          \                        DeePaC subcommands. See command --help for details.\n\
          \    predict             Predict using a trained model.\n    filter    \
          \          Filter prediction results.\n    train               Train a new\
          \ model.\n    preproc             Convert fasta files to numpy arrays for\
          \ training.\n    eval                Predict using a trained model.\n  \
          \  convert             Convert a CuDNNLSTM to a CPU-compatible LSTM.\n \
          \   test                Run additional tests.\n    explain             Run\
          \ filter visualization workflows.\n    gwpa                Run GWPA workflows.\n\
          \    templates           Get config templates (in this directory).\n\noptional\
          \ arguments:\n  -h, --help            show this help message and exit\n\
          \  -v, --version         Print version.\n  --debug-no-eager      Disable\
          \ eager mode.\n  --debug-tf DEBUG_TF   Set tensorflow debug info verbosity\
          \ level. 0 = max, 3\n                        = min. Default: 2 (errors);\
          \ 3 for tests (muted)\n  --debug-device        Enable verbose device placement\
          \ information.\n  --force-cpu           Use a CPU even if GPUs are available.\n\
          \  --tpu TPU             TPU name: 'colab' for Google Colab, or name of\
          \ your\n                        TPU on GCE.\n"
        generated_using: *id005
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac test [-h] [-n\
        \ N_CPUS] [-g GPUS [GPUS ...]] [-x] [-p] [-a] [-q]\n                   [-k]\
        \ [-s SCALE]\n\noptional arguments:\n  -h, --help            show this help\
        \ message and exit\n  -n N_CPUS, --n-cpus N_CPUS\n                       \
        \ Number of CPU cores. Default: all.\n  -g GPUS [GPUS ...], --gpus GPUS [GPUS\
        \ ...]\n                        GPU devices to use. Default: all\n  -x, --explain\
        \         Test explain workflows.\n  -p, --gwpa            Test gwpa workflows.\n\
        \  -a, --all             Test all functions.\n  -q, --quick           Don't\
        \ test heavy models (e.g. when no GPU available).\n  -k, --keep          \
        \  Don't delete previous test output.\n  -s SCALE, --scale SCALE\n       \
        \                 Generate s*1024 reads for testing (Default: s=1).\n"
      generated_using: *id005
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: config
        description: Training config file.
      - !Positional
        optional: false
        position: 1
        name: model
        description: Saved model.
      named:
      - !Flag
        optional: true
        synonyms:
        - -w
        - --weights
        description: Use prepared weights instead of the model file.
        args: !EmptyFlagArg {}
      parent: *id010
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac convert [-h]\
        \ [-w] config model\n\npositional arguments:\n  config         Training config\
        \ file.\n  model          Saved model.\n\noptional arguments:\n  -h, --help\
        \     show this help message and exit\n  -w, --weights  Use prepared weights\
        \ instead of the model file.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: details.
        description: fragment            Fragment genomes for analysis.
      - !Positional
        optional: false
        position: 1
        name: genomemap
        description: Generate a genome-wide phenotype potential map.
      - !Positional
        optional: false
        position: 2
        name: granking
        description: Generate gene rankings.
      - !Positional
        optional: false
        position: 3
        name: ntcontribs
        description: Generate a genome-wide nt contribution map.
      - !Positional
        optional: false
        position: 4
        name: factiv
        description: Get filter activations.
      - !Positional
        optional: false
        position: 5
        name: fenrichment
        description: Run filter enrichment analysis.
      named: []
      parent: *id010
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac gwpa [-h]\n\
        \                   {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
        \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
        \                        DeePaC gwpa subcommands. See command --help for\n\
        \                        details.\n    fragment            Fragment genomes\
        \ for analysis.\n    genomemap           Generate a genome-wide phenotype\
        \ potential map.\n    granking            Generate gene rankings.\n    ntcontribs\
        \          Generate a genome-wide nt contribution map.\n    factiv       \
        \       Get filter activations.\n    fenrichment         Run filter enrichment\
        \ analysis.\n\noptional arguments:\n  -h, --help            show this help\
        \ message and exit\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac [-h] [-v] [--debug-no-eager]\
      \ [--debug-tf DEBUG_TF]\n              [--debug-device] [--force-cpu] [--tpu\
      \ TPU]\n              {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
      \              ...\n\nPredicting pathogenic potentials of novel DNA with reverse-complement\
      \ neural\nnetworks.\n\npositional arguments:\n  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
      \                        DeePaC subcommands. See command --help for details.\n\
      \    predict             Predict using a trained model.\n    filter        \
      \      Filter prediction results.\n    train               Train a new model.\n\
      \    preproc             Convert fasta files to numpy arrays for training.\n\
      \    eval                Predict using a trained model.\n    convert       \
      \      Convert a CuDNNLSTM to a CPU-compatible LSTM.\n    test             \
      \   Run additional tests.\n    explain             Run filter visualization\
      \ workflows.\n    gwpa                Run GWPA workflows.\n    templates   \
      \        Get config templates (in this directory).\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -v, --version  \
      \       Print version.\n  --debug-no-eager      Disable eager mode.\n  --debug-tf\
      \ DEBUG_TF   Set tensorflow debug info verbosity level. 0 = max, 3\n       \
      \                 = min. Default: 2 (errors); 3 for tests (muted)\n  --debug-device\
      \        Enable verbose device placement information.\n  --force-cpu       \
      \    Use a CPU even if GPUs are available.\n  --tpu TPU             TPU name:\
      \ 'colab' for Google Colab, or name of your\n                        TPU on\
      \ GCE.\n"
    generated_using: *id005
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac test [-h] [-n N_CPUS]\
    \ [-g GPUS [GPUS ...]] [-x] [-p] [-a] [-q]\n                   [-k] [-s SCALE]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -n N_CPUS, --n-cpus N_CPUS\n                        Number of CPU cores. Default:\
    \ all.\n  -g GPUS [GPUS ...], --gpus GPUS [GPUS ...]\n                       \
    \ GPU devices to use. Default: all\n  -x, --explain         Test explain workflows.\n\
    \  -p, --gwpa            Test gwpa workflows.\n  -a, --all             Test all\
    \ functions.\n  -q, --quick           Don't test heavy models (e.g. when no GPU\
    \ available).\n  -k, --keep            Don't delete previous test output.\n  -s\
    \ SCALE, --scale SCALE\n                        Generate s*1024 reads for testing\
    \ (Default: s=1).\n"
  generated_using: *id005
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: config
    description: Training config file.
  - !Positional
    optional: false
    position: 1
    name: model
    description: Saved model.
  named:
  - !Flag
    optional: true
    synonyms:
    - -w
    - --weights
    description: Use prepared weights instead of the model file.
    args: !EmptyFlagArg {}
  parent: *id011
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac convert [-h] [-w]\
    \ config model\n\npositional arguments:\n  config         Training config file.\n\
    \  model          Saved model.\n\noptional arguments:\n  -h, --help     show this\
    \ help message and exit\n  -w, --weights  Use prepared weights instead of the\
    \ model file.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: details.
    description: fragment            Fragment genomes for analysis.
  - !Positional
    optional: false
    position: 1
    name: genomemap
    description: Generate a genome-wide phenotype potential map.
  - !Positional
    optional: false
    position: 2
    name: granking
    description: Generate gene rankings.
  - !Positional
    optional: false
    position: 3
    name: ntcontribs
    description: Generate a genome-wide nt contribution map.
  - !Positional
    optional: false
    position: 4
    name: factiv
    description: Get filter activations.
  - !Positional
    optional: false
    position: 5
    name: fenrichment
    description: Run filter enrichment analysis.
  named: []
  parent: *id011
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac gwpa [-h]\n   \
    \                {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
    \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
    \                        DeePaC gwpa subcommands. See command --help for\n   \
    \                     details.\n    fragment            Fragment genomes for analysis.\n\
    \    genomemap           Generate a genome-wide phenotype potential map.\n   \
    \ granking            Generate gene rankings.\n    ntcontribs          Generate\
    \ a genome-wide nt contribution map.\n    factiv              Get filter activations.\n\
    \    fenrichment         Run filter enrichment analysis.\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac [-h] [-v] [--debug-no-eager]\
  \ [--debug-tf DEBUG_TF]\n              [--debug-device] [--force-cpu] [--tpu TPU]\n\
  \              {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
  \              ...\n\nPredicting pathogenic potentials of novel DNA with reverse-complement\
  \ neural\nnetworks.\n\npositional arguments:\n  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
  \                        DeePaC subcommands. See command --help for details.\n \
  \   predict             Predict using a trained model.\n    filter             \
  \ Filter prediction results.\n    train               Train a new model.\n    preproc\
  \             Convert fasta files to numpy arrays for training.\n    eval      \
  \          Predict using a trained model.\n    convert             Convert a CuDNNLSTM\
  \ to a CPU-compatible LSTM.\n    test                Run additional tests.\n   \
  \ explain             Run filter visualization workflows.\n    gwpa            \
  \    Run GWPA workflows.\n    templates           Get config templates (in this\
  \ directory).\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -v, --version         Print version.\n  --debug-no-eager      Disable\
  \ eager mode.\n  --debug-tf DEBUG_TF   Set tensorflow debug info verbosity level.\
  \ 0 = max, 3\n                        = min. Default: 2 (errors); 3 for tests (muted)\n\
  \  --debug-device        Enable verbose device placement information.\n  --force-cpu\
  \           Use a CPU even if GPUs are available.\n  --tpu TPU             TPU name:\
  \ 'colab' for Google Colab, or name of your\n                        TPU on GCE.\n"
generated_using: *id005
docker_image:
