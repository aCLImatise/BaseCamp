!Command
command: &id001
- bedparse
- promoter
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - bedparse
  - promoter
  - bedfile
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - --unstranded
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --down
    args: !SimpleFlagArg
      name: DOWN
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --up
    args: !SimpleFlagArg
      name: UP
    optional: true
  parent: !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        description: ''
        synonyms:
        - --unstranded
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ''
        synonyms:
        - --down
        args: !SimpleFlagArg
          name: DOWN
        optional: true
      - !Flag
        description: ''
        synonyms:
        - --up
        args: !SimpleFlagArg
          name: UP
        optional: true
      parent: !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            description: ''
            synonyms:
            - --unstranded
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: ''
            synonyms:
            - --down
            args: !SimpleFlagArg
              name: DOWN
            optional: true
          - !Flag
            description: ''
            synonyms:
            - --up
            args: !SimpleFlagArg
              name: UP
            optional: true
          parent: &id011 !Command
            command: *id001
            positional: []
            named:
            - !Flag
              description: Get this many nt upstream of each feature.
              synonyms:
              - --up
              args: !SimpleFlagArg
                name: UP
              optional: true
            - !Flag
              description: Get this many nt downstream of each feature.
              synonyms:
              - --down
              args: !SimpleFlagArg
                name: DOWN
              optional: true
            - !Flag
              description: Do not consider strands.
              synonyms:
              - --unstranded
              args: !EmptyFlagArg {}
              optional: true
            parent: &id003 !Command
              command:
              - bedparse
              positional: []
              named: []
              parent:
              subcommands:
              - !Command
                command:
                - bedparse
                - introns
                positional:
                - !Positional
                  description: Path to the BED file.
                  position: 0
                  name: bedfile
                  optional: false
                named: []
                parent: *id003
                subcommands: []
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse introns [-h] [bedfile]\n\nReport BED12\
                  \ lines corresponding to the introns of each transcript. Unspliced\n\
                  transcripts are not reported.\n\npositional arguments:\n  bedfile\
                  \     Path to the BED file.\n\noptional arguments:\n  -h, --help\
                  \  show this help message and exit\n"
                generated_using: &id004
                - --help
              - !Command
                command:
                - bedparse
                - 3pUTR
                positional:
                - !Positional
                  description: Path to the BED file.
                  position: 0
                  name: bedfile
                  optional: false
                named: []
                parent: *id003
                subcommands: []
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse 3pUTR [-h] [bedfile]\n\nReport the 3'UTR\
                  \ of each coding transcript (i.e. transcripts with distinct\nvalues\
                  \ of thickStart and thickEnd). Transcripts without CDS are not reported.\n\
                  \npositional arguments:\n  bedfile     Path to the BED file.\n\n\
                  optional arguments:\n  -h, --help  show this help message and exit\n"
                generated_using: *id004
              - &id005 !Command
                command:
                - bedparse
                - cds
                positional: []
                named:
                - !Flag
                  description: Ignore transcripts that only consist of CDS.
                  synonyms:
                  - --ignoreCDSonly
                  args: !EmptyFlagArg {}
                  optional: true
                parent: *id003
                subcommands:
                - !Command
                  command:
                  - bedparse
                  - cds
                  - bedfile
                  positional: []
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --ignoreCDSonly
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id005
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "usage: bedparse cds [-h] [--ignoreCDSonly] [bedfile]\n\
                    bedparse cds: error: argument bedfile: can't open 'bedfile': [Errno\
                    \ 2] No such file or directory: 'bedfile'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse cds [-h] [--ignoreCDSonly] [bedfile]\n\
                  \nReport the CDS of each coding transcript (i.e. transcripts with\
                  \ distinct\nvalues of thickStart and thickEnd). Transcripts without\
                  \ CDS are not reported.\n\npositional arguments:\n  bedfile    \
                  \      Path to the BED file.\n\noptional arguments:\n  -h, --help\
                  \       show this help message and exit\n  --ignoreCDSonly  Ignore\
                  \ transcripts that only consist of CDS.\n"
                generated_using: *id004
              - &id006 !Command
                command:
                - bedparse
                - gtf2bed
                positional: []
                named:
                - !Flag
                  description: "Comma separated list of extra GTF fields to be added\n\
                    after col 12 (e.g. gene_id,gene_name)."
                  synonyms:
                  - --extraFields
                  args: !SimpleFlagArg
                    name: EXTRAFIELDS
                  optional: true
                - !Flag
                  description: GTF extra field on which to apply the filtering
                  synonyms:
                  - --filterKey
                  args: !SimpleFlagArg
                    name: FILTERKEY
                  optional: true
                - !Flag
                  description: "Comma separated list of filterKey field values to\n\
                    retain."
                  synonyms:
                  - --filterType
                  args: !SimpleFlagArg
                    name: FILTERTYPE
                  optional: true
                - !Flag
                  description: "Transcript feature name. Features with this string\
                    \ in\nfield 3 of the GTF file will be considered\ntranscripts.\
                    \ (default 'transcript')\n"
                  synonyms:
                  - --transcript_feature_name
                  args: !SimpleFlagArg
                    name: TRANSCRIPT_FEATURE_NAME
                  optional: true
                parent: *id003
                subcommands:
                - !Command
                  command:
                  - bedparse
                  - gtf2bed
                  - gtf
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: bedparse
                    optional: false
                  - !Positional
                    description: ''
                    position: 1
                    name: gtf2bed
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --extraFields
                    args: !SimpleFlagArg
                      name: EXTRAFIELDS
                    optional: true
                  parent: *id006
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "usage: bedparse gtf2bed [-h] [--extraFields EXTRAFIELDS]\n\
                    \                        [--filterKey FILTERKEY] [--filterType\
                    \ FILTERTYPE]\n                        [--transcript_feature_name\
                    \ TRANSCRIPT_FEATURE_NAME]\n                        [gtf]\nbedparse\
                    \ gtf2bed: error: argument gtf: can't open 'gtf': [Errno 2] No\
                    \ such file or directory: 'gtf'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse gtf2bed [-h] [--extraFields EXTRAFIELDS]\n\
                  \                        [--filterKey FILTERKEY] [--filterType FILTERTYPE]\n\
                  \                        [--transcript_feature_name TRANSCRIPT_FEATURE_NAME]\n\
                  \                        [gtf]\n\nConverts a GTF file to BED12 format.\
                  \ This tool supports the Ensembl GTF\nformat, which uses features\
                  \ of type 'transcript' (field 3) to define\ntranscripts. In case\
                  \ the GTF file defines transcripts with a different feature\ntype,\
                  \ it is possible to provide the feature name from the command line.\
                  \ If the\nGTF file also annotates 'CDS' 'start_codon' or 'stop_codon'\
                  \ these are used to\nannotate the thickStart and thickEnd in the\
                  \ BED file.\n\npositional arguments:\n  gtf                   Path\
                  \ to the GTF file.\n\noptional arguments:\n  -h, --help        \
                  \    show this help message and exit\n  --extraFields EXTRAFIELDS\n\
                  \                        Comma separated list of extra GTF fields\
                  \ to be added\n                        after col 12 (e.g. gene_id,gene_name).\n\
                  \  --filterKey FILTERKEY\n                        GTF extra field\
                  \ on which to apply the filtering\n  --filterType FILTERTYPE\n \
                  \                       Comma separated list of filterKey field\
                  \ values to\n                        retain.\n  --transcript_feature_name\
                  \ TRANSCRIPT_FEATURE_NAME\n                        Transcript feature\
                  \ name. Features with this string in\n                        field\
                  \ 3 of the GTF file will be considered\n                       \
                  \ transcripts. (default 'transcript')\n"
                generated_using: *id004
              - !Command
                command:
                - bedparse
                - formats
                positional:
                - !Positional
                  description: ''
                  position: 0
                  name: bedparse
                  optional: false
                named: []
                parent: *id003
                subcommands: []
                usage: []
                help_flag: !Flag
                  description: ''
                  synonyms:
                  - -h
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag: !Flag
                  description: ''
                  synonyms:
                  - --version
                  args: !EmptyFlagArg {}
                  optional: true
                help_text: "usage: bedparse [-h] [--version]\n                {3pUTR,5pUTR,cds,promoter,introns,filter,join,gtf2bed,bed12tobed6,convertChr,validateFormat}\n\
                  \                ...\nbedparse: error: argument sub-command: invalid\
                  \ choice: 'formats' (choose from '3pUTR', '5pUTR', 'cds', 'promoter',\
                  \ 'introns', 'filter', 'join', 'gtf2bed', 'bed12tobed6', 'convertChr',\
                  \ 'validateFormat')\n"
                generated_using: *id004
              - &id007 !Command
                command:
                - bedparse
                - bed12tobed6
                positional: []
                named:
                - !Flag
                  description: Appends the exon number to the transcript name.
                  synonyms:
                  - --appendExN
                  args: !EmptyFlagArg {}
                  optional: true
                - !Flag
                  description: "Which exon to return. First and last respectively\n\
                    report the first or last exon relative to the TSS\n(i.e. taking\
                    \ strand into account)."
                  synonyms:
                  - --whichExon
                  args: !ChoiceFlagArg
                    choices: !!set
                      ? first
                      ? all
                      ? last
                  optional: true
                - !Flag
                  description: Add records for introns as well. Only allowed if
                  synonyms:
                  - --keepIntrons
                  args: !EmptyFlagArg {}
                  optional: true
                parent: *id003
                subcommands:
                - !Command
                  command:
                  - bedparse
                  - bed12tobed6
                  - bedfile
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: bedparse
                    optional: false
                  - !Positional
                    description: ''
                    position: 1
                    name: bed12tobed6
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --whichExon
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? first
                        ? all
                        ? last
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --appendExN
                    args: !EmptyFlagArg {}
                    optional: true
                  parent: *id007
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "usage: bedparse bed12tobed6 [-h] [--appendExN] [--whichExon\
                    \ {all,first,last}]\n                            [--keepIntrons]\n\
                    \                            [bedfile]\nbedparse bed12tobed6:\
                    \ error: argument bedfile: can't open 'bedfile': [Errno 2] No\
                    \ such file or directory: 'bedfile'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse bed12tobed6 [-h] [--appendExN] [--whichExon\
                  \ {all,first,last}]\n                            [--keepIntrons]\n\
                  \                            [bedfile]\n\nConvert the BED12 format\
                  \ into BED6 by reporting a separate line for each block\nof the\
                  \ original record.\n\npositional arguments:\n  bedfile         \
                  \      Path to the GTF file.\n\noptional arguments:\n  -h, --help\
                  \            show this help message and exit\n  --appendExN    \
                  \       Appends the exon number to the transcript name.\n  --whichExon\
                  \ {all,first,last}\n                        Which exon to return.\
                  \ First and last respectively\n                        report the\
                  \ first or last exon relative to the TSS\n                     \
                  \   (i.e. taking strand into account).\n  --keepIntrons        \
                  \ Add records for introns as well. Only allowed if\n           \
                  \             --whichExon all\n"
                generated_using: *id004
              - !Command
                command:
                - bedparse
                - specifications
                positional:
                - !Positional
                  description: ''
                  position: 0
                  name: bedparse
                  optional: false
                named: []
                parent: *id003
                subcommands: []
                usage: []
                help_flag: !Flag
                  description: ''
                  synonyms:
                  - -h
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag: !Flag
                  description: ''
                  synonyms:
                  - --version
                  args: !EmptyFlagArg {}
                  optional: true
                help_text: "usage: bedparse [-h] [--version]\n                {3pUTR,5pUTR,cds,promoter,introns,filter,join,gtf2bed,bed12tobed6,convertChr,validateFormat}\n\
                  \                ...\nbedparse: error: argument sub-command: invalid\
                  \ choice: 'specifications' (choose from '3pUTR', '5pUTR', 'cds',\
                  \ 'promoter', 'introns', 'filter', 'join', 'gtf2bed', 'bed12tobed6',\
                  \ 'convertChr', 'validateFormat')\n"
                generated_using: *id004
              - &id008 !Command
                command:
                - bedparse
                - convertChr
                positional: []
                named:
                - !Flag
                  description: Assembly of the BED file (either hg38 or mm10).
                  synonyms:
                  - --assembly
                  args: !SimpleFlagArg
                    name: ASSEMBLY
                  optional: true
                - !Flag
                  description: Desidered chromosome name convention (ucsc or ens).
                  synonyms:
                  - --target
                  args: !SimpleFlagArg
                    name: TARGET
                  optional: true
                - !Flag
                  description: "When a chromosome name can't be matched between USCS\n\
                    and Ensembl set it to 'NA' (by default thrown as\nerror)."
                  synonyms:
                  - --allowMissing
                  - -a
                  args: !EmptyFlagArg {}
                  optional: true
                - !Flag
                  description: "When a chromosome name can't be matched between USCS\n\
                    and Ensembl do not report it in the output (by default\nthrows\
                    \ an error)."
                  synonyms:
                  - --suppressMissing
                  - -s
                  args: !EmptyFlagArg {}
                  optional: true
                - !Flag
                  description: "Allows conversion of all patches up to p11 for hg38\n\
                    and p4 for mm10. Without this option, if the BED file\ncontains\
                    \ contigs added by a patch the conversion\nterminates with an\
                    \ error (unless the -a or -s flags\nare present).\n"
                  synonyms:
                  - --patches
                  - -p
                  args: !EmptyFlagArg {}
                  optional: true
                parent: *id003
                subcommands:
                - !Command
                  command:
                  - bedparse
                  - convertChr
                  - bedfile
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: bedparse
                    optional: false
                  - !Positional
                    description: ''
                    position: 1
                    name: convertChr
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --target
                    args: !SimpleFlagArg
                      name: TARGET
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --assembly
                    args: !SimpleFlagArg
                      name: ASSEMBLY
                    optional: true
                  parent: *id008
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "usage: bedparse convertChr [-h] --assembly ASSEMBLY\
                    \ --target TARGET\n                           [--allowMissing]\
                    \ [--suppressMissing] [--patches]\n                          \
                    \ [bedfile]\nbedparse convertChr: error: argument bedfile: can't\
                    \ open 'bedfile': [Errno 2] No such file or directory: 'bedfile'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse convertChr [-h] --assembly ASSEMBLY --target\
                  \ TARGET\n                           [--allowMissing] [--suppressMissing]\
                  \ [--patches]\n                           [bedfile]\n\nConvert chromosome\
                  \ names between UCSC and Ensembl formats. The conversion\nsupports\
                  \ the hg38 assembly up to patch 11 and the mm10 assembly up to patch\
                  \ 4.\nBy default patches are not converted (because the UCSC genome\
                  \ browser does not\nsupport them), but can be enabled using the\
                  \ -p flag. When the BED file\ncontains a chromosome that is not\
                  \ recognised, by default the program stops and\nthrows an error.\
                  \ Alternatively, unrecognised chromosomes can be suppressed\n(-s)\
                  \ or artificially set to 'NA' (-a).\n\npositional arguments:\n \
                  \ bedfile               Path to the BED file.\n\noptional arguments:\n\
                  \  -h, --help            show this help message and exit\n  --assembly\
                  \ ASSEMBLY   Assembly of the BED file (either hg38 or mm10).\n \
                  \ --target TARGET       Desidered chromosome name convention (ucsc\
                  \ or ens).\n  --allowMissing, -a    When a chromosome name can't\
                  \ be matched between USCS\n                        and Ensembl set\
                  \ it to 'NA' (by default thrown as\n                        error).\n\
                  \  --suppressMissing, -s\n                        When a chromosome\
                  \ name can't be matched between USCS\n                        and\
                  \ Ensembl do not report it in the output (by default\n         \
                  \               throws an error).\n  --patches, -p         Allows\
                  \ conversion of all patches up to p11 for hg38\n               \
                  \         and p4 for mm10. Without this option, if the BED file\n\
                  \                        contains contigs added by a patch the conversion\n\
                  \                        terminates with an error (unless the -a\
                  \ or -s flags\n                        are present).\n"
                generated_using: *id004
              - &id009 !Command
                command:
                - bedparse
                - filter
                positional: []
                named:
                - !Flag
                  description: Path to the annotation file.
                  synonyms:
                  - --annotation
                  - -a
                  args: !SimpleFlagArg
                    name: ANNOTATION
                  optional: true
                - !Flag
                  description: Column of the annotation file (1-based, default=1).
                  synonyms:
                  - --column
                  - -c
                  args: !SimpleFlagArg
                    name: COLUMN
                  optional: true
                - !Flag
                  description: "Only report BED entries absent from the annotation\n\
                    file.\n"
                  synonyms:
                  - --inverse
                  - -v
                  args: !EmptyFlagArg {}
                  optional: true
                parent: *id003
                subcommands:
                - !Command
                  command:
                  - bedparse
                  - filter
                  - bedfile
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: bedparse
                    optional: false
                  - !Positional
                    description: ''
                    position: 1
                    name: filter
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --column
                    args: !SimpleFlagArg
                      name: COLUMN
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --annotation
                    args: !SimpleFlagArg
                      name: ANNOTATION
                    optional: true
                  parent: *id009
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "usage: bedparse filter [-h] --annotation ANNOTATION\
                    \ [--column COLUMN]\n                       [--inverse]\n    \
                    \                   [bedfile]\nbedparse filter: error: argument\
                    \ bedfile: can't open 'bedfile': [Errno 2] No such file or directory:\
                    \ 'bedfile'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse filter [-h] --annotation ANNOTATION [--column\
                  \ COLUMN]\n                       [--inverse]\n                \
                  \       [bedfile]\n\nFilters a BED file based on an annotation.\
                  \ BED entries with a name (i.e. col4)\nthat appears in the specified\
                  \ column of the annotation are printed to stdout.\nFor efficiency\
                  \ reasons this command doesn't perform BED validation.\n\npositional\
                  \ arguments:\n  bedfile               Path to the BED file.\n\n\
                  optional arguments:\n  -h, --help            show this help message\
                  \ and exit\n  --annotation ANNOTATION, -a ANNOTATION\n         \
                  \               Path to the annotation file.\n  --column COLUMN,\
                  \ -c COLUMN\n                        Column of the annotation file\
                  \ (1-based, default=1).\n  --inverse, -v         Only report BED\
                  \ entries absent from the annotation\n                        file.\n"
                generated_using: *id004
              - &id010 !Command
                command:
                - bedparse
                - join
                positional: []
                named:
                - !Flag
                  description: Path to the annotation file.
                  synonyms:
                  - --annotation
                  - -a
                  args: !SimpleFlagArg
                    name: ANNOTATION
                  optional: true
                - !Flag
                  description: Column of the annotation file (1-based, default=1).
                  synonyms:
                  - --column
                  - -c
                  args: !SimpleFlagArg
                    name: COLUMN
                  optional: true
                - !Flag
                  description: Field separator for the annotation file (default tab)
                  synonyms:
                  - --separator
                  - -s
                  args: !SimpleFlagArg
                    name: SEPARATOR
                  optional: true
                - !Flag
                  description: String to append to empty records (default '.').
                  synonyms:
                  - --empty
                  - -e
                  args: !SimpleFlagArg
                    name: EMPTY
                  optional: true
                - !Flag
                  description: Do not print unmatched lines.
                  synonyms:
                  - --noUnmatched
                  - -n
                  args: !EmptyFlagArg {}
                  optional: true
                parent: *id003
                subcommands:
                - !Command
                  command:
                  - bedparse
                  - join
                  - bedfile
                  positional:
                  - !Positional
                    description: ''
                    position: 0
                    name: bedparse
                    optional: false
                  - !Positional
                    description: ''
                    position: 1
                    name: join
                    optional: false
                  named:
                  - !Flag
                    description: ''
                    synonyms:
                    - --column
                    args: !SimpleFlagArg
                      name: COLUMN
                    optional: true
                  - !Flag
                    description: ''
                    synonyms:
                    - --annotation
                    args: !SimpleFlagArg
                      name: ANNOTATION
                    optional: true
                  parent: *id010
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    description: ''
                    synonyms:
                    - -h
                    args: !EmptyFlagArg {}
                    optional: true
                  usage_flag:
                  version_flag:
                  help_text: "usage: bedparse join [-h] --annotation ANNOTATION [--column\
                    \ COLUMN]\n                     [--separator SEPARATOR] [--empty\
                    \ EMPTY] [--noUnmatched]\n                     [bedfile]\nbedparse\
                    \ join: error: argument bedfile: can't open 'bedfile': [Errno\
                    \ 2] No such file or directory: 'bedfile'\n"
                  generated_using: *id004
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse join [-h] --annotation ANNOTATION [--column\
                  \ COLUMN]\n                     [--separator SEPARATOR] [--empty\
                  \ EMPTY] [--noUnmatched]\n                     [bedfile]\n\nAdds\
                  \ the content of an annotation file to a BED file as extra columns.\
                  \ The two\nfiles are joined by matching the BED Name field (column\
                  \ 4) with a user-\nspecified field of the annotation file.\n\npositional\
                  \ arguments:\n  bedfile               Path to the BED file.\n\n\
                  optional arguments:\n  -h, --help            show this help message\
                  \ and exit\n  --annotation ANNOTATION, -a ANNOTATION\n         \
                  \               Path to the annotation file.\n  --column COLUMN,\
                  \ -c COLUMN\n                        Column of the annotation file\
                  \ (1-based, default=1).\n  --separator SEPARATOR, -s SEPARATOR\n\
                  \                        Field separator for the annotation file\
                  \ (default tab)\n  --empty EMPTY, -e EMPTY\n                   \
                  \     String to append to empty records (default '.').\n  --noUnmatched,\
                  \ -n     Do not print unmatched lines.\n"
                generated_using: *id004
              - !Command
                command:
                - bedparse
                - 5pUTR
                positional:
                - !Positional
                  description: Path to the BED file.
                  position: 0
                  name: bedfile
                  optional: false
                named: []
                parent: *id003
                subcommands: []
                usage: []
                help_flag: !Flag
                  description: show this help message and exit
                  synonyms:
                  - -h
                  - --help
                  args: !EmptyFlagArg {}
                  optional: true
                usage_flag:
                version_flag:
                help_text: "usage: bedparse 5pUTR [-h] [bedfile]\n\nReport the 5'UTR\
                  \ of each coding transcript (i.e. transcripts with distinct\nvalues\
                  \ of thickStart and thickEnd). Transcripts without CDS are not reported.\n\
                  \npositional arguments:\n  bedfile     Path to the BED file.\n\n\
                  optional arguments:\n  -h, --help  show this help message and exit\n"
                generated_using: *id004
              - *id011
              usage: []
              help_flag: !Flag
                description: show this help message and exit
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: show program's version number and exit
                synonyms:
                - --version
                - -v
                args: !EmptyFlagArg {}
                optional: true
              help_text: "usage: bedparse [-h] [--version]\n                {3pUTR,5pUTR,cds,promoter,introns,filter,join,gtf2bed,bed12tobed6,convertChr,validateFormat}\n\
                \                ...\n\nPerform various simple operations on BED files.\n\
                \npositional arguments:\n  {3pUTR,5pUTR,cds,promoter,introns,filter,join,gtf2bed,bed12tobed6,convertChr,validateFormat}\n\
                \                        sub-command help\n    3pUTR             \
                \  Prints the 3' of coding genes.\n    5pUTR               Prints\
                \ the 5' of coding genes.\n    cds                 Prints the CDS\
                \ of coding genes.\n    promoter            Prints the promoters of\
                \ transcripts.\n    introns             Prints BED records corresponding\
                \ to the introns of\n                        each transcript in the\
                \ original file.\n    filter              Filters a BED file based\
                \ on an annotation.\n    join                Joins a BED file with\
                \ an annotation file using the BED\n                        name (col4)\
                \ as the joining key.\n    gtf2bed             Converts a GTF file\
                \ to BED12 format.\n    bed12tobed6         Converts a BED12 file\
                \ to BED6 format\n    convertChr          Convert chromosome names\
                \ between UCSC and Ensembl\n                        formats\n    validateFormat\
                \      Check whether the BED file adheres to the BED format\n    \
                \                    specifications\n\noptional arguments:\n  -h,\
                \ --help            show this help message and exit\n  --version,\
                \ -v         show program's version number and exit\n"
              generated_using: *id004
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                description: ''
                synonyms:
                - --unstranded
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: ''
                synonyms:
                - --down
                args: !SimpleFlagArg
                  name: DOWN
                optional: true
              - !Flag
                description: ''
                synonyms:
                - --up
                args: !SimpleFlagArg
                  name: UP
                optional: true
              parent: *id011
              subcommands: []
              usage: []
              help_flag: !Flag
                description: ''
                synonyms:
                - -h
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag:
              help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
                \ [bedfile]\nbedparse promoter: error: argument bedfile: can't open\
                \ 'bedfile': [Errno 2] No such file or directory: 'bedfile'\n"
              generated_using: *id004
            usage: []
            help_flag: !Flag
              description: show this help message and exit
              synonyms:
              - -h
              - --help
              args: !EmptyFlagArg {}
              optional: true
            usage_flag:
            version_flag:
            help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
              \ [bedfile]\n\nReport the promoter of each transcript, defined as a\
              \ fixed interval around its\nstart.\n\npositional arguments:\n  bedfile\
              \       Path to the BED file.\n\noptional arguments:\n  -h, --help \
              \   show this help message and exit\n  --up UP       Get this many nt\
              \ upstream of each feature.\n  --down DOWN   Get this many nt downstream\
              \ of each feature.\n  --unstranded  Do not consider strands.\n"
            generated_using: *id004
          subcommands: []
          usage: []
          help_flag: !Flag
            description: ''
            synonyms:
            - -h
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag:
          help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
            \ [bedfile]\nbedparse promoter: error: argument bedfile: can't open 'bedfile':\
            \ [Errno 2] No such file or directory: 'bedfile'\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
          \ [bedfile]\n\nReport the promoter of each transcript, defined as a fixed\
          \ interval around its\nstart.\n\npositional arguments:\n  bedfile      \
          \ Path to the BED file.\n\noptional arguments:\n  -h, --help    show this\
          \ help message and exit\n  --up UP       Get this many nt upstream of each\
          \ feature.\n  --down DOWN   Get this many nt downstream of each feature.\n\
          \  --unstranded  Do not consider strands.\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
        \ [bedfile]\nbedparse promoter: error: argument bedfile: can't open 'bedfile':\
        \ [Errno 2] No such file or directory: 'bedfile'\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
      \ [bedfile]\n\nReport the promoter of each transcript, defined as a fixed interval\
      \ around its\nstart.\n\npositional arguments:\n  bedfile       Path to the BED\
      \ file.\n\noptional arguments:\n  -h, --help    show this help message and exit\n\
      \  --up UP       Get this many nt upstream of each feature.\n  --down DOWN \
      \  Get this many nt downstream of each feature.\n  --unstranded  Do not consider\
      \ strands.\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded]\
    \ [bedfile]\nbedparse promoter: error: argument bedfile: can't open 'bedfile':\
    \ [Errno 2] No such file or directory: 'bedfile'\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: bedparse promoter [-h] [--up UP] [--down DOWN] [--unstranded] [bedfile]\n\
  \nReport the promoter of each transcript, defined as a fixed interval around its\n\
  start.\n\npositional arguments:\n  bedfile       Path to the BED file.\n\noptional\
  \ arguments:\n  -h, --help    show this help message and exit\n  --up UP       Get\
  \ this many nt upstream of each feature.\n  --down DOWN   Get this many nt downstream\
  \ of each feature.\n  --unstranded  Do not consider strands.\n"
generated_using: *id004
