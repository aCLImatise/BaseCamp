!Command
command: &id001
- nw_prune
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - nw_prune
  - label
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -f
    description: ": node labels are in a file whose name is the second argument,\n\
      instead of being passed  on the command line.\nThere should be one label per\
      \ line, and no leading or trailing\nwhitespace."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -v
    description: ": reverse: prune nodes whose labels are NOT passed on the command\n\
      line. Inner nodes are not pruned. This allows pruning of trees\nwith support\
      \ values, which syntactically are node labels, withouti\ninner nodes disappearing\
      \ because their 'label' was not passed on\nthe command line."
    args: !EmptyFlagArg {}
  parent: &id010 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -f
        description: ": node labels are in a file whose name is the second argument,\n\
          instead of being passed  on the command line.\nThere should be one label\
          \ per line, and no leading or trailing\nwhitespace."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -v
        description: ": reverse: prune nodes whose labels are NOT passed on the command\n\
          line. Inner nodes are not pruned. This allows pruning of trees\nwith support\
          \ values, which syntactically are node labels, withouti\ninner nodes disappearing\
          \ because their 'label' was not passed on\nthe command line."
        args: !EmptyFlagArg {}
      parent: &id009 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -f
            description: ": node labels are in a file whose name is the second argument,\n\
              instead of being passed  on the command line.\nThere should be one label\
              \ per line, and no leading or trailing\nwhitespace."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -v
            description: ": reverse: prune nodes whose labels are NOT passed on the\
              \ command\nline. Inner nodes are not pruned. This allows pruning of\
              \ trees\nwith support values, which syntactically are node labels, withouti\n\
              inner nodes disappearing because their 'label' was not passed on\nthe\
              \ command line."
            args: !EmptyFlagArg {}
          parent: &id008 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -f
                description: ": node labels are in a file whose name is the second\
                  \ argument,\ninstead of being passed  on the command line.\nThere\
                  \ should be one label per line, and no leading or trailing\nwhitespace."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -v
                description: ": reverse: prune nodes whose labels are NOT passed on\
                  \ the command\nline. Inner nodes are not pruned. This allows pruning\
                  \ of trees\nwith support values, which syntactically are node labels,\
                  \ withouti\ninner nodes disappearing because their 'label' was not\
                  \ passed on\nthe command line."
                args: !EmptyFlagArg {}
              parent: &id007 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: ": node labels are in a file whose name is the second\
                      \ argument,\ninstead of being passed  on the command line.\n\
                      There should be one label per line, and no leading or trailing\n\
                      whitespace."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    description: ": reverse: prune nodes whose labels are NOT passed\
                      \ on the command\nline. Inner nodes are not pruned. This allows\
                      \ pruning of trees\nwith support values, which syntactically\
                      \ are node labels, withouti\ninner nodes disappearing because\
                      \ their 'label' was not passed on\nthe command line."
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - -hv
                      description: ''
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: ": node labels are in a file whose name is the\
                          \ second argument,\ninstead of being passed  on the command\
                          \ line.\nThere should be one label per line, and no leading\
                          \ or trailing\nwhitespace."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        description: ": reverse: prune nodes whose labels are NOT\
                          \ passed on the command\nline. Inner nodes are not pruned.\
                          \ This allows pruning of trees\nwith support values, which\
                          \ syntactically are node labels, withouti\ninner nodes disappearing\
                          \ because their 'label' was not passed on\nthe command line."
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ': print this message and exit'
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Removes nodes by label\n\nSynopsis\n--------\n\n\
                        nw_prune [-f:hv] <newick trees filename|-> <label> [label+]\n\
                        \nInput\n-----\n\nArgument is the name of a file that contains\
                        \ Newick trees, or '-' (in which\ncase trees are read from\
                        \ standard input).\n\nOutput\n------\n\nRemoves all nodes\
                        \ whose labels are passed on the command line, and prints\n\
                        out the modified tree. If removing a node causes its parent\
                        \ to have only\none child (as is always the case in strictly\
                        \ binary trees), the parent is\nspliced out and the remaining\
                        \ child is attached to its grandparent,\npreserving length.\n\
                        \nOnly labeled nodes are considered for pruning.\n\nOptions\n\
                        -------\n\n    -f: node labels are in a file whose name is\
                        \ the second argument,\n        instead of being passed  on\
                        \ the command line.\n        There should be one label per\
                        \ line, and no leading or trailing\n        whitespace.\n\
                        \    -h: print this message and exit\n    -v: reverse: prune\
                        \ nodes whose labels are NOT passed on the command\n     \
                        \   line. Inner nodes are not pruned. This allows pruning\
                        \ of trees\n        with support values, which syntactically\
                        \ are node labels, withouti\n        inner nodes disappearing\
                        \ because their 'label' was not passed on\n        the command\
                        \ line.\n\nAssumptions and Limitations\n---------------------------\n\
                        \nLabels are assumed to be unique. \n\nExamples\n--------\n\
                        \n# Remove humans and gorilla\n$ nw_prune data/catarrhini\
                        \ Homo Gorilla\n\n# Remove humans, chimp, and gorilla\n$ nw_prune\
                        \ data/catarrhini Homo Gorilla Pan\n\n# the same, but using\
                        \ the clade's label\n$ nw_prune data/catarrhini Homininae\n\
                        \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini\
                        \ Gorilla Pan Homo Pongo Simias Colobus\n\n# same, using clade\
                        \ labels:\n$ nw_prune -v data/catarrhini Hominidae Colobinae\n"
                      generated_using: &id004
                      - -h
                      docker_image:
                    - !Command
                      command: &id005
                      - nw_prune
                      - filename|-
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: ": node labels are in a file whose name is the\
                          \ second argument,\ninstead of being passed  on the command\
                          \ line.\nThere should be one label per line, and no leading\
                          \ or trailing\nwhitespace."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        description: ": reverse: prune nodes whose labels are NOT\
                          \ passed on the command\nline. Inner nodes are not pruned.\
                          \ This allows pruning of trees\nwith support values, which\
                          \ syntactically are node labels, withouti\ninner nodes disappearing\
                          \ because their 'label' was not passed on\nthe command line."
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: ': print this message and exit'
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Removes nodes by label\n\nSynopsis\n--------\n\n\
                        nw_prune [-f:hv] <newick trees filename|-> <label> [label+]\n\
                        \nInput\n-----\n\nArgument is the name of a file that contains\
                        \ Newick trees, or '-' (in which\ncase trees are read from\
                        \ standard input).\n\nOutput\n------\n\nRemoves all nodes\
                        \ whose labels are passed on the command line, and prints\n\
                        out the modified tree. If removing a node causes its parent\
                        \ to have only\none child (as is always the case in strictly\
                        \ binary trees), the parent is\nspliced out and the remaining\
                        \ child is attached to its grandparent,\npreserving length.\n\
                        \nOnly labeled nodes are considered for pruning.\n\nOptions\n\
                        -------\n\n    -f: node labels are in a file whose name is\
                        \ the second argument,\n        instead of being passed  on\
                        \ the command line.\n        There should be one label per\
                        \ line, and no leading or trailing\n        whitespace.\n\
                        \    -h: print this message and exit\n    -v: reverse: prune\
                        \ nodes whose labels are NOT passed on the command\n     \
                        \   line. Inner nodes are not pruned. This allows pruning\
                        \ of trees\n        with support values, which syntactically\
                        \ are node labels, withouti\n        inner nodes disappearing\
                        \ because their 'label' was not passed on\n        the command\
                        \ line.\n\nAssumptions and Limitations\n---------------------------\n\
                        \nLabels are assumed to be unique. \n\nExamples\n--------\n\
                        \n# Remove humans and gorilla\n$ nw_prune data/catarrhini\
                        \ Homo Gorilla\n\n# Remove humans, chimp, and gorilla\n$ nw_prune\
                        \ data/catarrhini Homo Gorilla Pan\n\n# the same, but using\
                        \ the clade's label\n$ nw_prune data/catarrhini Homininae\n\
                        \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini\
                        \ Gorilla Pan Homo Pongo Simias Colobus\n\n# same, using clade\
                        \ labels:\n$ nw_prune -v data/catarrhini Hominidae Colobinae\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "Usage: nw_prune [-hv] <filename|-> <label> [label+]\n\
                      or     nw_prune [-hv] -f <filename|-> <label_filename>"
                    generated_using: &id006 []
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ': print this message and exit'
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune\
                    \ [-f:hv] <newick trees filename|-> <label> [label+]\n\nInput\n\
                    -----\n\nArgument is the name of a file that contains Newick trees,\
                    \ or '-' (in which\ncase trees are read from standard input).\n\
                    \nOutput\n------\n\nRemoves all nodes whose labels are passed\
                    \ on the command line, and prints\nout the modified tree. If removing\
                    \ a node causes its parent to have only\none child (as is always\
                    \ the case in strictly binary trees), the parent is\nspliced out\
                    \ and the remaining child is attached to its grandparent,\npreserving\
                    \ length.\n\nOnly labeled nodes are considered for pruning.\n\n\
                    Options\n-------\n\n    -f: node labels are in a file whose name\
                    \ is the second argument,\n        instead of being passed  on\
                    \ the command line.\n        There should be one label per line,\
                    \ and no leading or trailing\n        whitespace.\n    -h: print\
                    \ this message and exit\n    -v: reverse: prune nodes whose labels\
                    \ are NOT passed on the command\n        line. Inner nodes are\
                    \ not pruned. This allows pruning of trees\n        with support\
                    \ values, which syntactically are node labels, withouti\n    \
                    \    inner nodes disappearing because their 'label' was not passed\
                    \ on\n        the command line.\n\nAssumptions and Limitations\n\
                    ---------------------------\n\nLabels are assumed to be unique.\
                    \ \n\nExamples\n--------\n\n# Remove humans and gorilla\n$ nw_prune\
                    \ data/catarrhini Homo Gorilla\n\n# Remove humans, chimp, and\
                    \ gorilla\n$ nw_prune data/catarrhini Homo Gorilla Pan\n\n# the\
                    \ same, but using the clade's label\n$ nw_prune data/catarrhini\
                    \ Homininae\n\n# keep great apes and Colobines:\n$ nw_prune -v\
                    \ data/catarrhini Gorilla Pan Homo Pongo Simias Colobus\n\n# same,\
                    \ using clade labels:\n$ nw_prune -v data/catarrhini Hominidae\
                    \ Colobinae\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: ": node labels are in a file whose name is the second\
                      \ argument,\ninstead of being passed  on the command line.\n\
                      There should be one label per line, and no leading or trailing\n\
                      whitespace."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    description: ": reverse: prune nodes whose labels are NOT passed\
                      \ on the command\nline. Inner nodes are not pruned. This allows\
                      \ pruning of trees\nwith support values, which syntactically\
                      \ are node labels, withouti\ninner nodes disappearing because\
                      \ their 'label' was not passed on\nthe command line."
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: ': print this message and exit'
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune\
                    \ [-f:hv] <newick trees filename|-> <label> [label+]\n\nInput\n\
                    -----\n\nArgument is the name of a file that contains Newick trees,\
                    \ or '-' (in which\ncase trees are read from standard input).\n\
                    \nOutput\n------\n\nRemoves all nodes whose labels are passed\
                    \ on the command line, and prints\nout the modified tree. If removing\
                    \ a node causes its parent to have only\none child (as is always\
                    \ the case in strictly binary trees), the parent is\nspliced out\
                    \ and the remaining child is attached to its grandparent,\npreserving\
                    \ length.\n\nOnly labeled nodes are considered for pruning.\n\n\
                    Options\n-------\n\n    -f: node labels are in a file whose name\
                    \ is the second argument,\n        instead of being passed  on\
                    \ the command line.\n        There should be one label per line,\
                    \ and no leading or trailing\n        whitespace.\n    -h: print\
                    \ this message and exit\n    -v: reverse: prune nodes whose labels\
                    \ are NOT passed on the command\n        line. Inner nodes are\
                    \ not pruned. This allows pruning of trees\n        with support\
                    \ values, which syntactically are node labels, withouti\n    \
                    \    inner nodes disappearing because their 'label' was not passed\
                    \ on\n        the command line.\n\nAssumptions and Limitations\n\
                    ---------------------------\n\nLabels are assumed to be unique.\
                    \ \n\nExamples\n--------\n\n# Remove humans and gorilla\n$ nw_prune\
                    \ data/catarrhini Homo Gorilla\n\n# Remove humans, chimp, and\
                    \ gorilla\n$ nw_prune data/catarrhini Homo Gorilla Pan\n\n# the\
                    \ same, but using the clade's label\n$ nw_prune data/catarrhini\
                    \ Homininae\n\n# keep great apes and Colobines:\n$ nw_prune -v\
                    \ data/catarrhini Gorilla Pan Homo Pongo Simias Colobus\n\n# same,\
                    \ using clade labels:\n$ nw_prune -v data/catarrhini Hominidae\
                    \ Colobinae\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Usage: nw_prune [-hv] <filename|-> <label> [label+]\n\
                  or     nw_prune [-hv] -f <filename|-> <label_filename>"
                generated_using: *id006
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ': print this message and exit'
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune\
                \ [-f:hv] <newick trees filename|-> <label> [label+]\n\nInput\n-----\n\
                \nArgument is the name of a file that contains Newick trees, or '-'\
                \ (in which\ncase trees are read from standard input).\n\nOutput\n\
                ------\n\nRemoves all nodes whose labels are passed on the command\
                \ line, and prints\nout the modified tree. If removing a node causes\
                \ its parent to have only\none child (as is always the case in strictly\
                \ binary trees), the parent is\nspliced out and the remaining child\
                \ is attached to its grandparent,\npreserving length.\n\nOnly labeled\
                \ nodes are considered for pruning.\n\nOptions\n-------\n\n    -f:\
                \ node labels are in a file whose name is the second argument,\n \
                \       instead of being passed  on the command line.\n        There\
                \ should be one label per line, and no leading or trailing\n     \
                \   whitespace.\n    -h: print this message and exit\n    -v: reverse:\
                \ prune nodes whose labels are NOT passed on the command\n       \
                \ line. Inner nodes are not pruned. This allows pruning of trees\n\
                \        with support values, which syntactically are node labels,\
                \ withouti\n        inner nodes disappearing because their 'label'\
                \ was not passed on\n        the command line.\n\nAssumptions and\
                \ Limitations\n---------------------------\n\nLabels are assumed to\
                \ be unique. \n\nExamples\n--------\n\n# Remove humans and gorilla\n\
                $ nw_prune data/catarrhini Homo Gorilla\n\n# Remove humans, chimp,\
                \ and gorilla\n$ nw_prune data/catarrhini Homo Gorilla Pan\n\n# the\
                \ same, but using the clade's label\n$ nw_prune data/catarrhini Homininae\n\
                \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini\
                \ Gorilla Pan Homo Pongo Simias Colobus\n\n# same, using clade labels:\n\
                $ nw_prune -v data/catarrhini Hominidae Colobinae\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -f
                description: ": node labels are in a file whose name is the second\
                  \ argument,\ninstead of being passed  on the command line.\nThere\
                  \ should be one label per line, and no leading or trailing\nwhitespace."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -v
                description: ": reverse: prune nodes whose labels are NOT passed on\
                  \ the command\nline. Inner nodes are not pruned. This allows pruning\
                  \ of trees\nwith support values, which syntactically are node labels,\
                  \ withouti\ninner nodes disappearing because their 'label' was not\
                  \ passed on\nthe command line."
                args: !EmptyFlagArg {}
              parent: *id007
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: ': print this message and exit'
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune\
                \ [-f:hv] <newick trees filename|-> <label> [label+]\n\nInput\n-----\n\
                \nArgument is the name of a file that contains Newick trees, or '-'\
                \ (in which\ncase trees are read from standard input).\n\nOutput\n\
                ------\n\nRemoves all nodes whose labels are passed on the command\
                \ line, and prints\nout the modified tree. If removing a node causes\
                \ its parent to have only\none child (as is always the case in strictly\
                \ binary trees), the parent is\nspliced out and the remaining child\
                \ is attached to its grandparent,\npreserving length.\n\nOnly labeled\
                \ nodes are considered for pruning.\n\nOptions\n-------\n\n    -f:\
                \ node labels are in a file whose name is the second argument,\n \
                \       instead of being passed  on the command line.\n        There\
                \ should be one label per line, and no leading or trailing\n     \
                \   whitespace.\n    -h: print this message and exit\n    -v: reverse:\
                \ prune nodes whose labels are NOT passed on the command\n       \
                \ line. Inner nodes are not pruned. This allows pruning of trees\n\
                \        with support values, which syntactically are node labels,\
                \ withouti\n        inner nodes disappearing because their 'label'\
                \ was not passed on\n        the command line.\n\nAssumptions and\
                \ Limitations\n---------------------------\n\nLabels are assumed to\
                \ be unique. \n\nExamples\n--------\n\n# Remove humans and gorilla\n\
                $ nw_prune data/catarrhini Homo Gorilla\n\n# Remove humans, chimp,\
                \ and gorilla\n$ nw_prune data/catarrhini Homo Gorilla Pan\n\n# the\
                \ same, but using the clade's label\n$ nw_prune data/catarrhini Homininae\n\
                \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini\
                \ Gorilla Pan Homo Pongo Simias Colobus\n\n# same, using clade labels:\n\
                $ nw_prune -v data/catarrhini Hominidae Colobinae\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Usage: nw_prune [-hv] <filename|-> <label> [label+]\nor  \
              \   nw_prune [-hv] -f <filename|-> <label_filename>"
            generated_using: *id006
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ': print this message and exit'
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune [-f:hv]\
            \ <newick trees filename|-> <label> [label+]\n\nInput\n-----\n\nArgument\
            \ is the name of a file that contains Newick trees, or '-' (in which\n\
            case trees are read from standard input).\n\nOutput\n------\n\nRemoves\
            \ all nodes whose labels are passed on the command line, and prints\n\
            out the modified tree. If removing a node causes its parent to have only\n\
            one child (as is always the case in strictly binary trees), the parent\
            \ is\nspliced out and the remaining child is attached to its grandparent,\n\
            preserving length.\n\nOnly labeled nodes are considered for pruning.\n\
            \nOptions\n-------\n\n    -f: node labels are in a file whose name is\
            \ the second argument,\n        instead of being passed  on the command\
            \ line.\n        There should be one label per line, and no leading or\
            \ trailing\n        whitespace.\n    -h: print this message and exit\n\
            \    -v: reverse: prune nodes whose labels are NOT passed on the command\n\
            \        line. Inner nodes are not pruned. This allows pruning of trees\n\
            \        with support values, which syntactically are node labels, withouti\n\
            \        inner nodes disappearing because their 'label' was not passed\
            \ on\n        the command line.\n\nAssumptions and Limitations\n---------------------------\n\
            \nLabels are assumed to be unique. \n\nExamples\n--------\n\n# Remove\
            \ humans and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\n\n# Remove\
            \ humans, chimp, and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\
            \ Pan\n\n# the same, but using the clade's label\n$ nw_prune data/catarrhini\
            \ Homininae\n\n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini\
            \ Gorilla Pan Homo Pongo Simias Colobus\n\n# same, using clade labels:\n\
            $ nw_prune -v data/catarrhini Hominidae Colobinae\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -f
            description: ": node labels are in a file whose name is the second argument,\n\
              instead of being passed  on the command line.\nThere should be one label\
              \ per line, and no leading or trailing\nwhitespace."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -v
            description: ": reverse: prune nodes whose labels are NOT passed on the\
              \ command\nline. Inner nodes are not pruned. This allows pruning of\
              \ trees\nwith support values, which syntactically are node labels, withouti\n\
              inner nodes disappearing because their 'label' was not passed on\nthe\
              \ command line."
            args: !EmptyFlagArg {}
          parent: *id008
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: ': print this message and exit'
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune [-f:hv]\
            \ <newick trees filename|-> <label> [label+]\n\nInput\n-----\n\nArgument\
            \ is the name of a file that contains Newick trees, or '-' (in which\n\
            case trees are read from standard input).\n\nOutput\n------\n\nRemoves\
            \ all nodes whose labels are passed on the command line, and prints\n\
            out the modified tree. If removing a node causes its parent to have only\n\
            one child (as is always the case in strictly binary trees), the parent\
            \ is\nspliced out and the remaining child is attached to its grandparent,\n\
            preserving length.\n\nOnly labeled nodes are considered for pruning.\n\
            \nOptions\n-------\n\n    -f: node labels are in a file whose name is\
            \ the second argument,\n        instead of being passed  on the command\
            \ line.\n        There should be one label per line, and no leading or\
            \ trailing\n        whitespace.\n    -h: print this message and exit\n\
            \    -v: reverse: prune nodes whose labels are NOT passed on the command\n\
            \        line. Inner nodes are not pruned. This allows pruning of trees\n\
            \        with support values, which syntactically are node labels, withouti\n\
            \        inner nodes disappearing because their 'label' was not passed\
            \ on\n        the command line.\n\nAssumptions and Limitations\n---------------------------\n\
            \nLabels are assumed to be unique. \n\nExamples\n--------\n\n# Remove\
            \ humans and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\n\n# Remove\
            \ humans, chimp, and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\
            \ Pan\n\n# the same, but using the clade's label\n$ nw_prune data/catarrhini\
            \ Homininae\n\n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini\
            \ Gorilla Pan Homo Pongo Simias Colobus\n\n# same, using clade labels:\n\
            $ nw_prune -v data/catarrhini Hominidae Colobinae\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage: nw_prune [-hv] <filename|-> <label> [label+]\nor     nw_prune\
          \ [-hv] -f <filename|-> <label_filename>"
        generated_using: *id006
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ': print this message and exit'
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune [-f:hv]\
        \ <newick trees filename|-> <label> [label+]\n\nInput\n-----\n\nArgument is\
        \ the name of a file that contains Newick trees, or '-' (in which\ncase trees\
        \ are read from standard input).\n\nOutput\n------\n\nRemoves all nodes whose\
        \ labels are passed on the command line, and prints\nout the modified tree.\
        \ If removing a node causes its parent to have only\none child (as is always\
        \ the case in strictly binary trees), the parent is\nspliced out and the remaining\
        \ child is attached to its grandparent,\npreserving length.\n\nOnly labeled\
        \ nodes are considered for pruning.\n\nOptions\n-------\n\n    -f: node labels\
        \ are in a file whose name is the second argument,\n        instead of being\
        \ passed  on the command line.\n        There should be one label per line,\
        \ and no leading or trailing\n        whitespace.\n    -h: print this message\
        \ and exit\n    -v: reverse: prune nodes whose labels are NOT passed on the\
        \ command\n        line. Inner nodes are not pruned. This allows pruning of\
        \ trees\n        with support values, which syntactically are node labels,\
        \ withouti\n        inner nodes disappearing because their 'label' was not\
        \ passed on\n        the command line.\n\nAssumptions and Limitations\n---------------------------\n\
        \nLabels are assumed to be unique. \n\nExamples\n--------\n\n# Remove humans\
        \ and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\n\n# Remove humans,\
        \ chimp, and gorilla\n$ nw_prune data/catarrhini Homo Gorilla Pan\n\n# the\
        \ same, but using the clade's label\n$ nw_prune data/catarrhini Homininae\n\
        \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini Gorilla\
        \ Pan Homo Pongo Simias Colobus\n\n# same, using clade labels:\n$ nw_prune\
        \ -v data/catarrhini Hominidae Colobinae\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -f
        description: ": node labels are in a file whose name is the second argument,\n\
          instead of being passed  on the command line.\nThere should be one label\
          \ per line, and no leading or trailing\nwhitespace."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -v
        description: ": reverse: prune nodes whose labels are NOT passed on the command\n\
          line. Inner nodes are not pruned. This allows pruning of trees\nwith support\
          \ values, which syntactically are node labels, withouti\ninner nodes disappearing\
          \ because their 'label' was not passed on\nthe command line."
        args: !EmptyFlagArg {}
      parent: *id009
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: ': print this message and exit'
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune [-f:hv]\
        \ <newick trees filename|-> <label> [label+]\n\nInput\n-----\n\nArgument is\
        \ the name of a file that contains Newick trees, or '-' (in which\ncase trees\
        \ are read from standard input).\n\nOutput\n------\n\nRemoves all nodes whose\
        \ labels are passed on the command line, and prints\nout the modified tree.\
        \ If removing a node causes its parent to have only\none child (as is always\
        \ the case in strictly binary trees), the parent is\nspliced out and the remaining\
        \ child is attached to its grandparent,\npreserving length.\n\nOnly labeled\
        \ nodes are considered for pruning.\n\nOptions\n-------\n\n    -f: node labels\
        \ are in a file whose name is the second argument,\n        instead of being\
        \ passed  on the command line.\n        There should be one label per line,\
        \ and no leading or trailing\n        whitespace.\n    -h: print this message\
        \ and exit\n    -v: reverse: prune nodes whose labels are NOT passed on the\
        \ command\n        line. Inner nodes are not pruned. This allows pruning of\
        \ trees\n        with support values, which syntactically are node labels,\
        \ withouti\n        inner nodes disappearing because their 'label' was not\
        \ passed on\n        the command line.\n\nAssumptions and Limitations\n---------------------------\n\
        \nLabels are assumed to be unique. \n\nExamples\n--------\n\n# Remove humans\
        \ and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\n\n# Remove humans,\
        \ chimp, and gorilla\n$ nw_prune data/catarrhini Homo Gorilla Pan\n\n# the\
        \ same, but using the clade's label\n$ nw_prune data/catarrhini Homininae\n\
        \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini Gorilla\
        \ Pan Homo Pongo Simias Colobus\n\n# same, using clade labels:\n$ nw_prune\
        \ -v data/catarrhini Hominidae Colobinae\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: nw_prune [-hv] <filename|-> <label> [label+]\nor     nw_prune\
      \ [-hv] -f <filename|-> <label_filename>"
    generated_using: *id006
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ': print this message and exit'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune [-f:hv] <newick\
    \ trees filename|-> <label> [label+]\n\nInput\n-----\n\nArgument is the name of\
    \ a file that contains Newick trees, or '-' (in which\ncase trees are read from\
    \ standard input).\n\nOutput\n------\n\nRemoves all nodes whose labels are passed\
    \ on the command line, and prints\nout the modified tree. If removing a node causes\
    \ its parent to have only\none child (as is always the case in strictly binary\
    \ trees), the parent is\nspliced out and the remaining child is attached to its\
    \ grandparent,\npreserving length.\n\nOnly labeled nodes are considered for pruning.\n\
    \nOptions\n-------\n\n    -f: node labels are in a file whose name is the second\
    \ argument,\n        instead of being passed  on the command line.\n        There\
    \ should be one label per line, and no leading or trailing\n        whitespace.\n\
    \    -h: print this message and exit\n    -v: reverse: prune nodes whose labels\
    \ are NOT passed on the command\n        line. Inner nodes are not pruned. This\
    \ allows pruning of trees\n        with support values, which syntactically are\
    \ node labels, withouti\n        inner nodes disappearing because their 'label'\
    \ was not passed on\n        the command line.\n\nAssumptions and Limitations\n\
    ---------------------------\n\nLabels are assumed to be unique. \n\nExamples\n\
    --------\n\n# Remove humans and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\n\
    \n# Remove humans, chimp, and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\
    \ Pan\n\n# the same, but using the clade's label\n$ nw_prune data/catarrhini Homininae\n\
    \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini Gorilla Pan\
    \ Homo Pongo Simias Colobus\n\n# same, using clade labels:\n$ nw_prune -v data/catarrhini\
    \ Hominidae Colobinae\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -f
    description: ": node labels are in a file whose name is the second argument,\n\
      instead of being passed  on the command line.\nThere should be one label per\
      \ line, and no leading or trailing\nwhitespace."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -v
    description: ": reverse: prune nodes whose labels are NOT passed on the command\n\
      line. Inner nodes are not pruned. This allows pruning of trees\nwith support\
      \ values, which syntactically are node labels, withouti\ninner nodes disappearing\
      \ because their 'label' was not passed on\nthe command line."
    args: !EmptyFlagArg {}
  parent: *id010
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ': print this message and exit'
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Removes nodes by label\n\nSynopsis\n--------\n\nnw_prune [-f:hv] <newick\
    \ trees filename|-> <label> [label+]\n\nInput\n-----\n\nArgument is the name of\
    \ a file that contains Newick trees, or '-' (in which\ncase trees are read from\
    \ standard input).\n\nOutput\n------\n\nRemoves all nodes whose labels are passed\
    \ on the command line, and prints\nout the modified tree. If removing a node causes\
    \ its parent to have only\none child (as is always the case in strictly binary\
    \ trees), the parent is\nspliced out and the remaining child is attached to its\
    \ grandparent,\npreserving length.\n\nOnly labeled nodes are considered for pruning.\n\
    \nOptions\n-------\n\n    -f: node labels are in a file whose name is the second\
    \ argument,\n        instead of being passed  on the command line.\n        There\
    \ should be one label per line, and no leading or trailing\n        whitespace.\n\
    \    -h: print this message and exit\n    -v: reverse: prune nodes whose labels\
    \ are NOT passed on the command\n        line. Inner nodes are not pruned. This\
    \ allows pruning of trees\n        with support values, which syntactically are\
    \ node labels, withouti\n        inner nodes disappearing because their 'label'\
    \ was not passed on\n        the command line.\n\nAssumptions and Limitations\n\
    ---------------------------\n\nLabels are assumed to be unique. \n\nExamples\n\
    --------\n\n# Remove humans and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\n\
    \n# Remove humans, chimp, and gorilla\n$ nw_prune data/catarrhini Homo Gorilla\
    \ Pan\n\n# the same, but using the clade's label\n$ nw_prune data/catarrhini Homininae\n\
    \n# keep great apes and Colobines:\n$ nw_prune -v data/catarrhini Gorilla Pan\
    \ Homo Pongo Simias Colobus\n\n# same, using clade labels:\n$ nw_prune -v data/catarrhini\
    \ Hominidae Colobinae\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: nw_prune [-hv] <filename|-> <label> [label+]\nor     nw_prune [-hv]\
  \ -f <filename|-> <label_filename>"
generated_using: *id006
docker_image:
