!Command
command:
- simulate_genome.py
positional:
- !Positional
  optional: false
  position: 0
  name: output_fasta
  description: 'Output fasta (default: stdout)'
named:
- !Flag
  optional: true
  synonyms:
  - -n
  description: Number of chromosomes (23).
  args: !SimpleFlagArg
    name: nr_chrom
- !Flag
  optional: true
  synonyms:
  - -m
  description: Mean length of chromosomes (5000000).
  args: !SimpleFlagArg
    name: mean_length
- !Flag
  optional: true
  synonyms:
  - -a
  description: Gamma shape parameter (1).
  args: !SimpleFlagArg
    name: gamma_shape
- !Flag
  optional: true
  synonyms:
  - -l
  description: Lower truncation point (None).
  args: !SimpleFlagArg
    name: low_trunc
- !Flag
  optional: true
  synonyms:
  - -u
  description: Upper truncation point (None).
  args: !SimpleFlagArg
    name: high_trunc
- !Flag
  optional: true
  synonyms:
  - -b
  description: "Relative base frequencies in A,C,G,T order (1,1,1,1) or\n\"random\"\
    ."
  args: !SimpleFlagArg
    name: base_freqs
- !Flag
  optional: true
  synonyms:
  - -z
  description: Random seed (None).
  args: !SimpleFlagArg
    name: random_seed
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: simulate_genome.py [-h] [-n nr_chrom] [-m mean_length] [-a gamma_shape]\n\
  \                          [-l low_trunc] [-u high_trunc] [-b base_freqs]\n    \
  \                      [-z random_seed]\n                          [output_fasta]\n\
  \nSimulate genome sequence with the specified number of chromosomes, length\ndistribution\
  \ (truncated gamma) and base composition.\n\npositional arguments:\n  output_fasta\
  \    Output fasta (default: stdout)\n\noptional arguments:\n  -h, --help      show\
  \ this help message and exit\n  -n nr_chrom     Number of chromosomes (23).\n  -m\
  \ mean_length  Mean length of chromosomes (5000000).\n  -a gamma_shape  Gamma shape\
  \ parameter (1).\n  -l low_trunc    Lower truncation point (None).\n  -u high_trunc\
  \   Upper truncation point (None).\n  -b base_freqs   Relative base frequencies\
  \ in A,C,G,T order (1,1,1,1) or\n                  \"random\".\n  -z random_seed\
  \  Random seed (None).\n"
generated_using:
- --help
docker_image:
