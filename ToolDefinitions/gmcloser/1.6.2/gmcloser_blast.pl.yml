!Command
command: &id001
- gmcloser-blast.pl
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - gmcloser-blast.pl
  - '5'
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: &id095 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: &id003 !Command
        command: *id001
        positional: []
        named:
        - !Flag
          description: input target scaffold fasta file (e.g., scaf.fa) [mandatory]
          synonyms:
          - --target_scaf
          - -t
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: input query contig (or long-read) fasta file (e.g., contig.fa)
            (if long reads are used, -lr option must be specified) [mandatory]
          synonyms:
          - --query_seq
          - -q
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: prefix name of output files [mandatory]
          synonyms:
          - --prefix_out
          - -p
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: space-separated list of fastq or fasta files (or gzip compressed
            files) of paired-end reads (e.g., -r read_pe1.fq read_pe2.fq)
          synonyms:
          - --read_file
          - -r
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: read length of paired-end reads specified with the -r, -st,
            -sq, or -sd option (mean read length if read lengths are variable) [mandatory]
          synonyms:
          - --read_len
          - -l
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'average insert size of paired-end reads [>read_len <20001,
            default: 400]'
          synonyms:
          - --insert
          - -i
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'standard deviation of insert size of paired-end reads [default:
            40]'
          synonyms:
          - --sd_insert
          - -d
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'fastq or fasta [default: fastq]'
          synonyms:
          - --read_format
          - -f
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: space-separated list of sam alignment file(s) for target scaffolds,
            created in a single-end read alignment mode for paired-end reads (e.g.,
            -sa tPE1.sam tPE2.sam, for paired-end read files PE1.fq and PE2.fq)
          synonyms:
          - --sam_talign
          - -st
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: space-separated list of sam alignment file(s) for query contigs,
            created in a single-end read alignment mode for paired-end reads (e.g.,
            -sa qPE1.sam qPE2.sam, for paired-end read files PE1.fq and PE2.fq)
          synonyms:
          - --sam_qalign
          - -sq
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: path of directory (i.e., bowtie_align) containing sam alignment
            files generated from a previous job with GMcloser (this can be used in
            place of -st and -sq option)
          synonyms:
          - --sam_dir
          - -sd
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: Nucmer alignment file for query against target [optional]
          synonyms:
          - --align_file
          - -a
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'connect between gap-encompassing subcontig pairs with their
            original (not merged with query contigs) termini [default: false]'
          synonyms:
          - --connect_subcon
          - -c
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'extend scaffold temini with aligned query sequences [default:
            false] (When using long read query, this option is disabled in the current
            version)'
          synonyms:
          - --extend
          - -et
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'conduct alignment between target and query contigs with BLASTn
            [default: false] (Nucmer alignment by default)'
          synonyms:
          - --blast
          - -b
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: "minimum overlap length to be filtered for BLASTn alignments.\n\
            Contig-alignments that satisfy both the values specified with -mm and\
            \ -mi are selected, irrespective of any mapping rates of PE-reads. [>49,\
            \ default: 300]"
          synonyms:
          - --min_match_len
          - -mm
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'minimum overlap identity (%) to be filtered for BLASTn alignments.
            Alignments are selected by combination with -mm option. [95~100, default:
            99]'
          synonyms:
          - --min_identity
          - -mi
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'minimum overlap length for merging between neighbor subcontigs
            with YASS aligner [>14, default: 20]'
          synonyms:
          - --min_len_local
          - -ml
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'minimum length of subcontigs, to be used for gapclosing [default:
            150]'
          synonyms:
          - --min_subcon
          - -ms
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'minimum length of gap, when spliting the target scaffold sequences
            into subcontigs [>0, default: 1]'
          synonyms:
          - --min_gap_size
          - -g
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'maximum length of indel, observed in alignments between target
            subcontigs and query contigs. The alignments separated by the indel will
            be merged. [default: 70]'
          synonyms:
          - --max_indel
          - -is
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'maximum alignment coverage (%) of query singletones for target
            subcontigs (query with >= INT is excluded from query singletone output)
            [default: 60]'
          synonyms:
          - --max_qsc
          - -qsc
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'base call quality format of fastq read file; illumina (phred64)
            or sanger (phred33) [default: auto]'
          synonyms:
          - --base_qual
          - -bq
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'score to add to (subtract from) the standard threshold score
            for selection of correct contig-subcontig alignments (e.g., 1 or -1) [default:
            0]'
          synonyms:
          - --ad_score
          - -as
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'heterozygosity factor (specify this if your sequenced genome
            is heterozygous (>0.2% difference of the haploid size)) [default: false]'
          synonyms:
          - --hetero
          - -ht
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'number of threads (for machines with multiple processors),
            enabling all the alignment processes in parallel [default: 5]'
          synonyms:
          - --thread
          - -n
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'number of threads (for machines with multiple processors),
            enabling the subcontig-connection process in parallel [default: number
            specified with --thread]'
          synonyms:
          - --thread_connect
          - -nc
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'query sequence file is a fasta file of long reads (PacBio
            reads must be error-corrected) [default: false] (alignment was peformed
            with blast)'
          synonyms:
          - --long_read
          - -LR
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'fold coverage of long reads for target scaffolds [default:
            auto ; automatically calculated by dividing a total length of query by
            a total length of target]'
          synonyms:
          - --lr_cov
          - -lc
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: "minimum number of queries that are aligned to either 5'- or\
            \ 3'-terminus of a target subcontig [default: 1]"
          synonyms:
          - --min_qalign
          - -mq
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: 'number of iteration [default: 3]'
          synonyms:
          - --iterate
          - -it
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: BLASTn alignment file for query against query [optional]
          synonyms:
          - --alignq
          - -aq
          args: !SimpleFlagArg
            name: or
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --help
          args: !SimpleFlagArg
            name: or
          optional: true
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: &id004
          - --help
        - !Command
          command: &id005
          - gmcloser-blast.pl
          - connect
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id006
          - gmcloser-blast.pl
          - input
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id007
          - gmcloser-blast.pl
          - queries
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id008
          - gmcloser-blast.pl
          - factor
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id009
          - gmcloser-blast.pl
          - against
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id010
          - gmcloser-blast.pl
          - base
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id011
          - gmcloser-blast.pl
          - YASS
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id012
          - gmcloser-blast.pl
          - call
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id013
          - gmcloser-blast.pl
          - their
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id014
          - gmcloser-blast.pl
          - gap
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id015
          - gmcloser-blast.pl
          - name
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id016
          - gmcloser-blast.pl
          - fastq
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id017
          - gmcloser-blast.pl
          - between
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id018
          - gmcloser-blast.pl
          - path
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id019
          - gmcloser-blast.pl
          - extend
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id020
          - gmcloser-blast.pl
          - deviation
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id021
          - gmcloser-blast.pl
          - output
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id022
          - gmcloser-blast.pl
          - ver.
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id023
          - gmcloser-blast.pl
          - reads
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id024
          - gmcloser-blast.pl
          - filtered
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id025
          - gmcloser-blast.pl
          - iteration
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id026
          - gmcloser-blast.pl
          - files
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id027
          - gmcloser-blast.pl
          - identity
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id028
          - gmcloser-blast.pl
          - be
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id029
          - gmcloser-blast.pl
          - average
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id030
          - gmcloser-blast.pl
          - for
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id031
          - gmcloser-blast.pl
          - indel
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id032
          - gmcloser-blast.pl
          - original
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id033
          - gmcloser-blast.pl
          - read
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id034
          - gmcloser-blast.pl
          - gap-encompassing
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id035
          - gmcloser-blast.pl
          - size
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id036
          - gmcloser-blast.pl
          - length
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id037
          - gmcloser-blast.pl
          - fold
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id038
          - gmcloser-blast.pl
          - are
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id039
          - gmcloser-blast.pl
          - target
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id040
          - gmcloser-blast.pl
          - scaffold
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id041
          - gmcloser-blast.pl
          - or
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id042
          - gmcloser-blast.pl
          - merging
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id043
          - gmcloser-blast.pl
          - Nucmer
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id044
          - gmcloser-blast.pl
          - sam
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id045
          - gmcloser-blast.pl
          - help
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id046
          - gmcloser-blast.pl
          - and
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id047
          - gmcloser-blast.pl
          - list
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id048
          - gmcloser-blast.pl
          - directory
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id049
          - gmcloser-blast.pl
          - either
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id050
          - gmcloser-blast.pl
          - overlap
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id051
          - gmcloser-blast.pl
          - score
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id052
          - gmcloser-blast.pl
          - of
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id053
          - gmcloser-blast.pl
          - add
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id054
          - gmcloser-blast.pl
          - heterozygosity
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id055
          - gmcloser-blast.pl
          - subcontig
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id056
          - gmcloser-blast.pl
          - query
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id057
          - gmcloser-blast.pl
          - number
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id058
          - gmcloser-blast.pl
          - sequence
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id059
          - gmcloser-blast.pl
          - temini
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id060
          - gmcloser-blast.pl
          - minimum
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id061
          - gmcloser-blast.pl
          - contigs
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id062
          - gmcloser-blast.pl
          - aligner
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id063
          - gmcloser-blast.pl
          - format
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id064
          - gmcloser-blast.pl
          - conduct
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id065
          - gmcloser-blast.pl
          - BLASTn
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id066
          - gmcloser-blast.pl
          - paired-end
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id067
          - gmcloser-blast.pl
          - sequences
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id068
          - gmcloser-blast.pl
          - aligned
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id069
          - gmcloser-blast.pl
          - with
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id070
          - gmcloser-blast.pl
          - alignments.
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id071
          - gmcloser-blast.pl
          - neighbor
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id072
          - gmcloser-blast.pl
          - to
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id073
          - gmcloser-blast.pl
          - contig
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id074
          - gmcloser-blast.pl
          - long
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id075
          - gmcloser-blast.pl
          - scaffolds
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id076
          - gmcloser-blast.pl
          - alignment
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id077
          - gmcloser-blast.pl
          - that
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id078
          - gmcloser-blast.pl
          - subcontigs
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id079
          - gmcloser-blast.pl
          - prefix
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id080
          - gmcloser-blast.pl
          - file
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id081
          - gmcloser-blast.pl
          - coverage
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id082
          - gmcloser-blast.pl
          - quality
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id083
          - gmcloser-blast.pl
          - insert
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id084
          - gmcloser-blast.pl
          - the
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id085
          - gmcloser-blast.pl
          - threads
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id086
          - gmcloser-blast.pl
          - pairs
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id087
          - gmcloser-blast.pl
          - space-separated
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id088
          - gmcloser-blast.pl
          - specified
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id089
          - gmcloser-blast.pl
          - standard
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id090
          - gmcloser-blast.pl
          - a
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id091
          - gmcloser-blast.pl
          - fasta
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id092
          - gmcloser-blast.pl
          - is
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id093
          - gmcloser-blast.pl
          - GMcloser
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        - !Command
          command: &id094
          - gmcloser-blast.pl
          - maximum
          positional: []
          named:
          - !Flag
            description: 'is not specied:'
            synonyms:
            - --target_scaf
            args: !SimpleFlagArg
              name: option
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "--target_scaf option is not specied: \n"
          generated_using: *id004
        usage: []
        help_flag: !Flag
          description: output help message
          synonyms:
          - --help
          - -h
          args: !SimpleFlagArg
            name: or
          optional: true
        usage_flag:
        version_flag:
        help_text: "Usage:\n       GMcloser ver. 1.5\n   \n       Options:\n     \
          \  --target_scaf or -t <STR>       input target scaffold fasta file (e.g.,\
          \ scaf.fa) [mandatory]\n       --query_seq or -q <STR>         input query\
          \ contig (or long-read) fasta file (e.g., contig.fa) (if long reads are\
          \ used, -lr option must be specified) [mandatory]\n       --prefix_out or\
          \ -p <STR>        prefix name of output files [mandatory]\n   \n       --read_file\
          \ or -r <STR>         space-separated list of fastq or fasta files (or gzip\
          \ compressed files) of paired-end reads (e.g., -r read_pe1.fq read_pe2.fq)\n\
          \       --read_len or -l <INT>          read length of paired-end reads\
          \ specified with the -r, -st, -sq, or -sd option (mean read length if read\
          \ lengths are variable) [mandatory]\n       --insert or -i <INT>       \
          \     average insert size of paired-end reads [>read_len <20001, default:\
          \ 400]\n       --sd_insert or -d <INT>         standard deviation of insert\
          \ size of paired-end reads [default: 40]\n       --read_format or -f <STR>\
          \       fastq or fasta [default: fastq]\n       --sam_talign or -st <STR>\
          \       space-separated list of sam alignment file(s) for target scaffolds,\
          \ created in a single-end read alignment mode for paired-end reads (e.g.,\
          \ -sa tPE1.sam tPE2.sam, for paired-end read files PE1.fq and PE2.fq)\n\
          \       --sam_qalign or -sq <STR>       space-separated list of sam alignment\
          \ file(s) for query contigs, created in a single-end read alignment mode\
          \ for paired-end reads (e.g., -sa qPE1.sam qPE2.sam, for paired-end read\
          \ files PE1.fq and PE2.fq)\n       --sam_dir or -sd <STR>          path\
          \ of directory (i.e., bowtie_align) containing sam alignment files generated\
          \ from a previous job with GMcloser (this can be used in place of -st and\
          \ -sq option)\n       --align_file or -a <STR>        Nucmer alignment file\
          \ for query against target [optional]\n\n       --connect_subcon or -c \
          \         connect between gap-encompassing subcontig pairs with their original\
          \ (not merged with query contigs) termini [default: false]\n       --extend\
          \ or -et                 extend scaffold temini with aligned query sequences\
          \ [default: false] (When using long read query, this option is disabled\
          \ in the current version)\n       --blast or -b                   conduct\
          \ alignment between target and query contigs with BLASTn [default: false]\
          \ (Nucmer alignment by default)\n   \n       --min_match_len or -mm <INT>\
          \    minimum overlap length to be filtered for BLASTn alignments.\n    \
          \                                   Contig-alignments that satisfy both\
          \ the values specified with -mm and -mi are selected, irrespective of any\
          \ mapping rates of PE-reads. [>49, default: 300]\n       --min_identity\
          \ or -mi <INT>     minimum overlap identity (%) to be filtered for BLASTn\
          \ alignments. Alignments are selected by combination with -mm option. [95~100,\
          \ default: 99]\n       --min_len_local or -ml <INT>    minimum overlap length\
          \ for merging between neighbor subcontigs with YASS aligner [>14, default:\
          \ 20]\n       --min_subcon or -ms <INT>       minimum length of subcontigs,\
          \ to be used for gapclosing [default: 150]\n       --min_gap_size or -g\
          \ <INT>      minimum length of gap, when spliting the target scaffold sequences\
          \ into subcontigs [>0, default: 1]\n       --max_indel or -is <INT>    \
          \    maximum length of indel, observed in alignments between target subcontigs\
          \ and query contigs. The alignments separated by the indel will be merged.\
          \ [default: 70]\n       --max_qsc or -qsc <INT>         maximum alignment\
          \ coverage (%) of query singletones for target subcontigs (query with >=\
          \ INT is excluded from query singletone output) [default: 60]\n       --base_qual\
          \ or -bq <STR>        base call quality format of fastq read file; illumina\
          \ (phred64) or sanger (phred33) [default: auto]\n       --ad_score or -as\
          \ <FLOAT>       score to add to (subtract from) the standard threshold score\
          \ for selection of correct contig-subcontig alignments (e.g., 1 or -1) [default:\
          \ 0]\n       --hetero or -ht                 heterozygosity factor (specify\
          \ this if your sequenced genome is heterozygous (>0.2% difference of the\
          \ haploid size)) [default: false]\n       --thread or -n <INT>         \
          \   number of threads (for machines with multiple processors), enabling\
          \ all the alignment processes in parallel [default: 5]\n       --thread_connect\
          \ or -nc <INT>   number of threads (for machines with multiple processors),\
          \ enabling the subcontig-connection process in parallel [default: number\
          \ specified with --thread]\n       --help or -h                    output\
          \ help message\n   \n       [Options for long read query]\n       --long_read\
          \ or -LR              query sequence file is a fasta file of long reads\
          \ (PacBio reads must be error-corrected) [default: false] (alignment was\
          \ peformed with blast)\n       --lr_cov or -lc <INT>           fold coverage\
          \ of long reads for target scaffolds [default: auto ; automatically calculated\
          \ by dividing a total length of query by a total length of target]\n   \
          \    --min_qalign or -mq <INT>       minimum number of queries that are\
          \ aligned to either 5'- or 3'-terminus of a target subcontig [default: 1]\n\
          \       --iterate or -it <INT>          number of iteration [default: 3]\n\
          \       --alignq or -aq <STR>           BLASTn alignment file for query\
          \ against query [optional]\n\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id005
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id006
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id007
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id008
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id009
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id010
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id011
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id012
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id013
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id014
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id015
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id016
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id017
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id018
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id019
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id020
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id021
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id022
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id023
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id024
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id025
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id026
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id027
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id028
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id029
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id030
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id031
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id032
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id033
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id034
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id035
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id036
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id037
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id038
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id039
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id040
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id041
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id042
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id043
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id044
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id045
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id046
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id047
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id048
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id049
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id050
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id051
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id052
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id053
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id054
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id055
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id056
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id057
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id058
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id059
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id060
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id061
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id062
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id063
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id064
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id065
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id066
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id067
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id068
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id069
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id070
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id071
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id072
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id073
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id074
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id075
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id076
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id077
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id078
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id079
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id080
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id081
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id082
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id083
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id084
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id085
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id086
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id087
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id088
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id089
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id090
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id091
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id092
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id093
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    - !Command
      command: *id094
      positional: []
      named:
      - !Flag
        description: 'is not specied:'
        synonyms:
        - --target_scaf
        args: !SimpleFlagArg
          name: option
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "--target_scaf option is not specied: \n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage:\n       GMcloser ver. 1.5\n   \n       Options:\n       --target_scaf\
      \ or -t <STR>       input target scaffold fasta file (e.g., scaf.fa) [mandatory]\n\
      \       --query_seq or -q <STR>         input query contig (or long-read) fasta\
      \ file (e.g., contig.fa) (if long reads are used, -lr option must be specified)\
      \ [mandatory]\n       --prefix_out or -p <STR>        prefix name of output\
      \ files [mandatory]\n   \n       --read_file or -r <STR>         space-separated\
      \ list of fastq or fasta files (or gzip compressed files) of paired-end reads\
      \ (e.g., -r read_pe1.fq read_pe2.fq)\n       --read_len or -l <INT>        \
      \  read length of paired-end reads specified with the -r, -st, -sq, or -sd option\
      \ (mean read length if read lengths are variable) [mandatory]\n       --insert\
      \ or -i <INT>            average insert size of paired-end reads [>read_len\
      \ <20001, default: 400]\n       --sd_insert or -d <INT>         standard deviation\
      \ of insert size of paired-end reads [default: 40]\n       --read_format or\
      \ -f <STR>       fastq or fasta [default: fastq]\n       --sam_talign or -st\
      \ <STR>       space-separated list of sam alignment file(s) for target scaffolds,\
      \ created in a single-end read alignment mode for paired-end reads (e.g., -sa\
      \ tPE1.sam tPE2.sam, for paired-end read files PE1.fq and PE2.fq)\n       --sam_qalign\
      \ or -sq <STR>       space-separated list of sam alignment file(s) for query\
      \ contigs, created in a single-end read alignment mode for paired-end reads\
      \ (e.g., -sa qPE1.sam qPE2.sam, for paired-end read files PE1.fq and PE2.fq)\n\
      \       --sam_dir or -sd <STR>          path of directory (i.e., bowtie_align)\
      \ containing sam alignment files generated from a previous job with GMcloser\
      \ (this can be used in place of -st and -sq option)\n       --align_file or\
      \ -a <STR>        Nucmer alignment file for query against target [optional]\n\
      \n       --connect_subcon or -c          connect between gap-encompassing subcontig\
      \ pairs with their original (not merged with query contigs) termini [default:\
      \ false]\n       --extend or -et                 extend scaffold temini with\
      \ aligned query sequences [default: false] (When using long read query, this\
      \ option is disabled in the current version)\n       --blast or -b         \
      \          conduct alignment between target and query contigs with BLASTn [default:\
      \ false] (Nucmer alignment by default)\n   \n       --min_match_len or -mm <INT>\
      \    minimum overlap length to be filtered for BLASTn alignments.\n        \
      \                               Contig-alignments that satisfy both the values\
      \ specified with -mm and -mi are selected, irrespective of any mapping rates\
      \ of PE-reads. [>49, default: 300]\n       --min_identity or -mi <INT>     minimum\
      \ overlap identity (%) to be filtered for BLASTn alignments. Alignments are\
      \ selected by combination with -mm option. [95~100, default: 99]\n       --min_len_local\
      \ or -ml <INT>    minimum overlap length for merging between neighbor subcontigs\
      \ with YASS aligner [>14, default: 20]\n       --min_subcon or -ms <INT>   \
      \    minimum length of subcontigs, to be used for gapclosing [default: 150]\n\
      \       --min_gap_size or -g <INT>      minimum length of gap, when spliting\
      \ the target scaffold sequences into subcontigs [>0, default: 1]\n       --max_indel\
      \ or -is <INT>        maximum length of indel, observed in alignments between\
      \ target subcontigs and query contigs. The alignments separated by the indel\
      \ will be merged. [default: 70]\n       --max_qsc or -qsc <INT>         maximum\
      \ alignment coverage (%) of query singletones for target subcontigs (query with\
      \ >= INT is excluded from query singletone output) [default: 60]\n       --base_qual\
      \ or -bq <STR>        base call quality format of fastq read file; illumina\
      \ (phred64) or sanger (phred33) [default: auto]\n       --ad_score or -as <FLOAT>\
      \       score to add to (subtract from) the standard threshold score for selection\
      \ of correct contig-subcontig alignments (e.g., 1 or -1) [default: 0]\n    \
      \   --hetero or -ht                 heterozygosity factor (specify this if your\
      \ sequenced genome is heterozygous (>0.2% difference of the haploid size)) [default:\
      \ false]\n       --thread or -n <INT>            number of threads (for machines\
      \ with multiple processors), enabling all the alignment processes in parallel\
      \ [default: 5]\n       --thread_connect or -nc <INT>   number of threads (for\
      \ machines with multiple processors), enabling the subcontig-connection process\
      \ in parallel [default: number specified with --thread]\n       --help or -h\
      \                    output help message\n   \n       [Options for long read\
      \ query]\n       --long_read or -LR              query sequence file is a fasta\
      \ file of long reads (PacBio reads must be error-corrected) [default: false]\
      \ (alignment was peformed with blast)\n       --lr_cov or -lc <INT>        \
      \   fold coverage of long reads for target scaffolds [default: auto ; automatically\
      \ calculated by dividing a total length of query by a total length of target]\n\
      \       --min_qalign or -mq <INT>       minimum number of queries that are aligned\
      \ to either 5'- or 3'-terminus of a target subcontig [default: 1]\n       --iterate\
      \ or -it <INT>          number of iteration [default: 3]\n       --alignq or\
      \ -aq <STR>           BLASTn alignment file for query against query [optional]\n\
      \n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id006
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id007
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id009
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id010
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id011
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id012
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id013
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id014
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id015
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id016
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id017
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id018
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id019
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id020
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id021
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id022
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id023
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id024
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id025
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id026
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id027
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id028
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id029
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id030
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id031
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id032
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id033
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id034
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id035
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id036
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id037
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id038
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id039
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id040
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id041
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id042
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id043
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id044
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id045
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id046
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id047
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id048
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id049
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id050
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id051
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id052
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id053
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id054
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id055
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id056
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id057
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id058
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id059
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id060
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id061
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id062
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id063
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id064
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id065
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id066
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id067
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id068
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id069
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id070
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id071
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id072
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id073
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id074
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id075
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id076
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id077
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id078
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id079
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id080
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id081
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id082
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id083
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id084
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id085
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id086
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id087
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id088
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id089
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id090
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id091
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id092
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id093
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
- !Command
  command: *id094
  positional: []
  named:
  - !Flag
    description: 'is not specied:'
    synonyms:
    - --target_scaf
    args: !SimpleFlagArg
      name: option
    optional: true
  parent: *id095
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "--target_scaf option is not specied: \n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage:\n       GMcloser ver. 1.5\n   \n       Options:\n       --target_scaf\
  \ or -t <STR>       input target scaffold fasta file (e.g., scaf.fa) [mandatory]\n\
  \       --query_seq or -q <STR>         input query contig (or long-read) fasta\
  \ file (e.g., contig.fa) (if long reads are used, -lr option must be specified)\
  \ [mandatory]\n       --prefix_out or -p <STR>        prefix name of output files\
  \ [mandatory]\n   \n       --read_file or -r <STR>         space-separated list\
  \ of fastq or fasta files (or gzip compressed files) of paired-end reads (e.g.,\
  \ -r read_pe1.fq read_pe2.fq)\n       --read_len or -l <INT>          read length\
  \ of paired-end reads specified with the -r, -st, -sq, or -sd option (mean read\
  \ length if read lengths are variable) [mandatory]\n       --insert or -i <INT>\
  \            average insert size of paired-end reads [>read_len <20001, default:\
  \ 400]\n       --sd_insert or -d <INT>         standard deviation of insert size\
  \ of paired-end reads [default: 40]\n       --read_format or -f <STR>       fastq\
  \ or fasta [default: fastq]\n       --sam_talign or -st <STR>       space-separated\
  \ list of sam alignment file(s) for target scaffolds, created in a single-end read\
  \ alignment mode for paired-end reads (e.g., -sa tPE1.sam tPE2.sam, for paired-end\
  \ read files PE1.fq and PE2.fq)\n       --sam_qalign or -sq <STR>       space-separated\
  \ list of sam alignment file(s) for query contigs, created in a single-end read\
  \ alignment mode for paired-end reads (e.g., -sa qPE1.sam qPE2.sam, for paired-end\
  \ read files PE1.fq and PE2.fq)\n       --sam_dir or -sd <STR>          path of\
  \ directory (i.e., bowtie_align) containing sam alignment files generated from a\
  \ previous job with GMcloser (this can be used in place of -st and -sq option)\n\
  \       --align_file or -a <STR>        Nucmer alignment file for query against\
  \ target [optional]\n\n       --connect_subcon or -c          connect between gap-encompassing\
  \ subcontig pairs with their original (not merged with query contigs) termini [default:\
  \ false]\n       --extend or -et                 extend scaffold temini with aligned\
  \ query sequences [default: false] (When using long read query, this option is disabled\
  \ in the current version)\n       --blast or -b                   conduct alignment\
  \ between target and query contigs with BLASTn [default: false] (Nucmer alignment\
  \ by default)\n   \n       --min_match_len or -mm <INT>    minimum overlap length\
  \ to be filtered for BLASTn alignments.\n                                      \
  \ Contig-alignments that satisfy both the values specified with -mm and -mi are\
  \ selected, irrespective of any mapping rates of PE-reads. [>49, default: 300]\n\
  \       --min_identity or -mi <INT>     minimum overlap identity (%) to be filtered\
  \ for BLASTn alignments. Alignments are selected by combination with -mm option.\
  \ [95~100, default: 99]\n       --min_len_local or -ml <INT>    minimum overlap\
  \ length for merging between neighbor subcontigs with YASS aligner [>14, default:\
  \ 20]\n       --min_subcon or -ms <INT>       minimum length of subcontigs, to be\
  \ used for gapclosing [default: 150]\n       --min_gap_size or -g <INT>      minimum\
  \ length of gap, when spliting the target scaffold sequences into subcontigs [>0,\
  \ default: 1]\n       --max_indel or -is <INT>        maximum length of indel, observed\
  \ in alignments between target subcontigs and query contigs. The alignments separated\
  \ by the indel will be merged. [default: 70]\n       --max_qsc or -qsc <INT>   \
  \      maximum alignment coverage (%) of query singletones for target subcontigs\
  \ (query with >= INT is excluded from query singletone output) [default: 60]\n \
  \      --base_qual or -bq <STR>        base call quality format of fastq read file;\
  \ illumina (phred64) or sanger (phred33) [default: auto]\n       --ad_score or -as\
  \ <FLOAT>       score to add to (subtract from) the standard threshold score for\
  \ selection of correct contig-subcontig alignments (e.g., 1 or -1) [default: 0]\n\
  \       --hetero or -ht                 heterozygosity factor (specify this if your\
  \ sequenced genome is heterozygous (>0.2% difference of the haploid size)) [default:\
  \ false]\n       --thread or -n <INT>            number of threads (for machines\
  \ with multiple processors), enabling all the alignment processes in parallel [default:\
  \ 5]\n       --thread_connect or -nc <INT>   number of threads (for machines with\
  \ multiple processors), enabling the subcontig-connection process in parallel [default:\
  \ number specified with --thread]\n       --help or -h                    output\
  \ help message\n   \n       [Options for long read query]\n       --long_read or\
  \ -LR              query sequence file is a fasta file of long reads (PacBio reads\
  \ must be error-corrected) [default: false] (alignment was peformed with blast)\n\
  \       --lr_cov or -lc <INT>           fold coverage of long reads for target scaffolds\
  \ [default: auto ; automatically calculated by dividing a total length of query\
  \ by a total length of target]\n       --min_qalign or -mq <INT>       minimum number\
  \ of queries that are aligned to either 5'- or 3'-terminus of a target subcontig\
  \ [default: 1]\n       --iterate or -it <INT>          number of iteration [default:\
  \ 3]\n       --alignq or -aq <STR>           BLASTn alignment file for query against\
  \ query [optional]\n\n"
generated_using: *id004
