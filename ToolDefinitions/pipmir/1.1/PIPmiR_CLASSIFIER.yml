!Command
command:
- PIPmiR
- CLASSIFIER
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -P
  description: File of putative miRNA precursor sequences and their fold structure
    (see README)
  args: !SimpleFlagArg
    name: precursor_file
- !Flag
  optional: true
  synonyms:
  - -a
  description: .bam Sorted .bam file containing alignment of the read data
  args: !SimpleFlagArg
    name: alignment_file.bam
- !Flag
  optional: true
  synonyms:
  - -o
  description: basename of output files
  args: !SimpleFlagArg
    name: output_header
- !Flag
  optional: true
  synonyms:
  - -m
  description: 'Minimum read count for a mature to be considered expressed (Default:
    10)'
  args: !SimpleFlagArg
    name: read_count
- !Flag
  optional: true
  synonyms:
  - -X
  description: 'Maximum amount of memory PIPmiR can use (Default: 4G)'
  args: !SimpleFlagArg
    name: max_memory_allowed
- !Flag
  optional: true
  synonyms:
  - -T
  description: 'File containing classifier training data (Default: TrainingData.dat)'
  args: !SimpleFlagArg
    name: training_file
- !Flag
  optional: true
  synonyms:
  - -d
  description: Creates a log file of PIPmiR results at <output_header>_log.csv
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n Usage: PIPmiR CLASSIFIER -P <precursor_file> -a <alignment_file.bam>\
  \ -o <output_header>\n \n \t-P <precursor_file>\tFile of putative miRNA precursor\
  \ sequences and their fold structure (see README)\n \t-a <alignment_file.bam>\t\
  .bam Sorted .bam file containing alignment of the read data\n \t-o <output_header>\t\
  basename of output files\n\n \tOptional Parameters:\n \t-m <read_count>\t\tMinimum\
  \ read count for a mature to be considered expressed (Default: 10)\n \t-X <max_memory_allowed>\t\
  Maximum amount of memory PIPmiR can use (Default: 4G)\n \t-T <training_file>\tFile\
  \ containing classifier training data (Default: TrainingData.dat)\n \t-d\t\t\tCreates\
  \ a log file of PIPmiR results at <output_header>_log.csv\n\n"
generated_using:
- --help
docker_image:
