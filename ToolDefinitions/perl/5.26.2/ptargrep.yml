!Command
command: &id001
- ptargrep
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - ptargrep
  - archive
  positional:
  - !Positional
    description: ''
    position: 0
    name: ptargrep
    optional: false
  - !Positional
    description: ''
    position: 1
    name: tar file
    optional: false
  named:
  - !Flag
    description: ignore directory paths from archive
    synonyms:
    - --basename
    - -b
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do case-insensitive pattern matching
    synonyms:
    - --ignore-case
    - -i
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: list matching filenames rather than extracting matches
    synonyms:
    - --list-only
    - -l
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: write debugging message to STDERR
    synonyms:
    - --verbose
    - -v
    args: !EmptyFlagArg {}
    optional: true
  parent: &id003 !Command
    command: *id001
    positional: []
    named:
    - !Flag
      description: "(alias -b)\nWhen matching files are extracted, ignore the directory\
        \ path from\nthe archive and write to the current directory using the basename\
        \ of\nthe file from the archive. Beware: if two matching files in the\narchive\
        \ have the same basename, the second file extracted will\noverwrite the first."
      synonyms:
      - --basename
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(alias -i)\nMake pattern matching case-insensitive."
      synonyms:
      - --ignore-case
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(alias -l)\nPrint the pathname of each matching file from the\
        \ archive to STDOUT.\nWithout this option, the default behaviour is to extract\
        \ each\nmatching file."
      synonyms:
      - --list-only
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "(alias -v)\nLog debugging info to STDERR."
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: ''
        position: 0
        name: ptargrep
        optional: false
      - !Positional
        description: ''
        position: 1
        name: tar file
        optional: false
      named:
      - !Flag
        description: ignore directory paths from archive
        synonyms:
        - --basename
        - -b
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: do case-insensitive pattern matching
        synonyms:
        - --ignore-case
        - -i
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: list matching filenames rather than extracting matches
        synonyms:
        - --list-only
        - -l
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: write debugging message to STDERR
        synonyms:
        - --verbose
        - -v
        args: !EmptyFlagArg {}
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: '|-?         detailed help message'
        synonyms:
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "No tar files specified\nUsage:\n      ptargrep [options] <pattern>\
        \ <tar file> ...\n\n      Options:\n\n       --basename|-b     ignore directory\
        \ paths from archive\n       --ignore-case|-i  do case-insensitive pattern\
        \ matching\n       --list-only|-l    list matching filenames rather than extracting\
        \ matches\n       --verbose|-v      write debugging message to STDERR\n  \
        \     --help|-?         detailed help message\n\n"
      generated_using: &id004 []
    usage: []
    help_flag: !Flag
      description: "(alias -?)\nDisplay this documentation."
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "NAME\n    ptargrep - Apply pattern matching to the contents of files\
      \ in a tar\n    archive\n\nSYNOPSIS\n      ptargrep [options] <pattern> <tar\
      \ file> ...\n\n      Options:\n\n       --basename|-b     ignore directory paths\
      \ from archive\n       --ignore-case|-i  do case-insensitive pattern matching\n\
      \       --list-only|-l    list matching filenames rather than extracting matches\n\
      \       --verbose|-v      write debugging message to STDERR\n       --help|-?\
      \         detailed help message\n\nDESCRIPTION\n    This utility allows you\
      \ to apply pattern matching to the contents of\n    files contained in a tar\
      \ archive. You might use this to identify all\n    files in an archive which\
      \ contain lines matching the specified pattern\n    and either print out the\
      \ pathnames or extract the files.\n\n    The pattern will be used as a Perl\
      \ regular expression (as opposed to a\n    simple grep regex).\n\n    Multiple\
      \ tar archive filenames can be specified - they will each be\n    processed\
      \ in turn.\n\nOPTIONS\n    --basename (alias -b)\n        When matching files\
      \ are extracted, ignore the directory path from\n        the archive and write\
      \ to the current directory using the basename of\n        the file from the\
      \ archive. Beware: if two matching files in the\n        archive have the same\
      \ basename, the second file extracted will\n        overwrite the first.\n\n\
      \    --ignore-case (alias -i)\n        Make pattern matching case-insensitive.\n\
      \n    --list-only (alias -l)\n        Print the pathname of each matching file\
      \ from the archive to STDOUT.\n        Without this option, the default behaviour\
      \ is to extract each\n        matching file.\n\n    --verbose (alias -v)\n \
      \       Log debugging info to STDERR.\n\n    --help (alias -?)\n        Display\
      \ this documentation.\n\nCOPYRIGHT\n    Copyright 2010 Grant McLean <grantm@cpan.org>\n\
      \n    This program is free software; you can redistribute it and/or modify it\n\
      \    under the same terms as Perl itself.\n\n"
    generated_using: &id005
    - --help
  subcommands: []
  usage: []
  help_flag: !Flag
    description: '|-?         detailed help message'
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "No tar files specified\nUsage:\n      ptargrep [options] <pattern> <tar\
    \ file> ...\n\n      Options:\n\n       --basename|-b     ignore directory paths\
    \ from archive\n       --ignore-case|-i  do case-insensitive pattern matching\n\
    \       --list-only|-l    list matching filenames rather than extracting matches\n\
    \       --verbose|-v      write debugging message to STDERR\n       --help|-?\
    \         detailed help message\n\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    ptargrep - Apply pattern matching to the contents of files in\
  \ a tar\n    archive\n\nSYNOPSIS\n      ptargrep [options] <pattern> <tar file>\
  \ ...\n\n      Options:\n\n       --basename|-b     ignore directory paths from\
  \ archive\n       --ignore-case|-i  do case-insensitive pattern matching\n     \
  \  --list-only|-l    list matching filenames rather than extracting matches\n  \
  \     --verbose|-v      write debugging message to STDERR\n       --help|-?    \
  \     detailed help message\n\nDESCRIPTION\n    This utility allows you to apply\
  \ pattern matching to the contents of\n    files contained in a tar archive. You\
  \ might use this to identify all\n    files in an archive which contain lines matching\
  \ the specified pattern\n    and either print out the pathnames or extract the files.\n\
  \n    The pattern will be used as a Perl regular expression (as opposed to a\n \
  \   simple grep regex).\n\n    Multiple tar archive filenames can be specified -\
  \ they will each be\n    processed in turn.\n\nOPTIONS\n    --basename (alias -b)\n\
  \        When matching files are extracted, ignore the directory path from\n   \
  \     the archive and write to the current directory using the basename of\n   \
  \     the file from the archive. Beware: if two matching files in the\n        archive\
  \ have the same basename, the second file extracted will\n        overwrite the\
  \ first.\n\n    --ignore-case (alias -i)\n        Make pattern matching case-insensitive.\n\
  \n    --list-only (alias -l)\n        Print the pathname of each matching file from\
  \ the archive to STDOUT.\n        Without this option, the default behaviour is\
  \ to extract each\n        matching file.\n\n    --verbose (alias -v)\n        Log\
  \ debugging info to STDERR.\n\n    --help (alias -?)\n        Display this documentation.\n\
  \nCOPYRIGHT\n    Copyright 2010 Grant McLean <grantm@cpan.org>\n\n    This program\
  \ is free software; you can redistribute it and/or modify it\n    under the same\
  \ terms as Perl itself.\n\n"
generated_using: *id005
