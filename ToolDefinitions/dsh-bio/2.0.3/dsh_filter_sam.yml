!Command
command:
- dsh-filter-sam
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --about
  description: display about message [optional]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --range
  description: '[class java.lang.String]  filter by range, specify as chrom:start-end
    in 0-based coordindates [optional]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --mapq
  description: '[class java.lang.Integer]  filter by mapq [optional]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --script
  description: '[class java.lang.String]  filter by script, eval against r [optional]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --input-sam-file
  description: '[class java.io.File]  input SAM file, default stdin [optional]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output-sam-file
  description: '[class java.io.File]  output SAM file, default stdout [optional]'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: display help message [optional]
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage:\ndsh-filter-sam --mapq 30 -i input.sam.bgz -o output.sam.bgz\n\n\
  arguments:\n   -a, --about  display about message [optional]\n   -h, --help  display\
  \ help message [optional]\n   -r, --range [class java.lang.String]  filter by range,\
  \ specify as chrom:start-end in 0-based coordindates [optional]\n   -q, --mapq [class\
  \ java.lang.Integer]  filter by mapq [optional]\n   -e, --script [class java.lang.String]\
  \  filter by script, eval against r [optional]\n   -i, --input-sam-file [class java.io.File]\
  \  input SAM file, default stdin [optional]\n   -o, --output-sam-file [class java.io.File]\
  \  output SAM file, default stdout [optional]\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/dsh-bio:2.0.3--0
