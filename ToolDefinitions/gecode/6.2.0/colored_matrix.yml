!Command
command:
- colored-matrix
positional:
- !Positional
  optional: false
  position: 0
  name: disabled
  description: 'Options for Colored matrix:'
named:
- !Flag
  optional: true
  synonyms:
  - -model
  description: "(corner, rows, both, columns, matrix) default: corner\nmodel variants\n\
    corner: Use direct corners model with not-all-equal constraints.\nrows: Use model\
    \ on pairs of rows (same_or_0 and distinct_except_0 constraints).\nboth: Use both\
    \ rows and corners model\ncolumns: Use model on pairs of columns (same_or_0 and\
    \ distinct_except_0 constraints).\nmatrix: Use both rows and columns model"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -symmetry
  description: "(none, matrix, values, both) default: matrix\nsymmetry variants\n\
    none: Don't use symmetry breaking.\nmatrix: Order matrix rows and columns\nvalues:\
    \ Order values\nboth: Order both rows/columns and values"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ipl
  description: "(def,val,bnd,dom,basic,advanced)\ndefault: def\ninteger propagation\
    \ level (comma-separated list)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -decay
  description: "(double) default: 1\ndecay factor"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -seed
  description: "(unsigned int) default: 1\nrandom number generator seed"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -step
  description: "(double) default: 0\nstep distance for float optimization"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -search
  description: "(dfs, bab) default: dfs\nsearch engine variants\ndfs: Find a solution.\n\
    bab: Find an optimal solution."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -solutions
  description: "(unsigned int) default: 1\nnumber of solutions (0 = all)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -threads
  description: "(double) default: 1\nnumber of threads (0 = #processing units)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c-d
  description: "(unsigned int) default: 8\nrecomputation commit distance"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a-d
  description: "(unsigned int) default: 2\nrecomputation adaptation distance"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d-l
  description: "(unsigned int) default: 5\ndiscrepancy limit for LDS"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -node
  description: "(unsigned int) default: 0\nnode cutoff (0 = none, solution mode)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fail
  description: "(unsigned int) default: 0\nfailure cutoff (0 = none, solution mode)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -time
  description: "(unsigned int) default: 0\ntime (in ms) cutoff (0 = none, solution\
    \ mode)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -interrupt
  description: "(optional: false, 0, true, 1) default: true\nwhether to catch Ctrl-C\
    \ (true) or not (false)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -assets
  description: "(unsigned int) default: 0\n#portfolio assets (#engines)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -slice
  description: "(unsigned int) default: 250\nportfolio slice (in #failures)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -restart
  description: "(none, constant, linear, luby, geometric) default: none\nrestart sequence\
    \ type"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -restart-base
  description: "(double) default: 1.5\nbase for geometric restart sequence"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -restart-scale
  description: "(unsigned int) default: 250\nscale factor for restart sequence"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -nogoods
  description: "(optional: false, 0, true, 1) default: false\nwhether to use no-goods\
    \ from restarts"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -nogoods-limit
  description: "(unsigned int) default: 128\ndepth limit for no-good extraction"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -relax
  description: "(double) default: 0\nprobability for relaxing variable"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mode
  description: "(solution, time, stat, gist, cpprofiler) default: solution\nhow to\
    \ execute script"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -iterations
  description: "(unsigned int) default: 1\niterations per sample (time mode)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -samples
  description: "(unsigned int) default: 1\nhow many samples (time mode)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -print-last
  description: "(optional: false, 0, true, 1) default: false\nwhether to only print\
    \ the last solution (solution mode)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -file-sol
  description: "(string) default: stdout\nwhere to print solutions (supports stdout,\
    \ stdlog, stderr)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -file-stat
  description: "(string) default: stdout\nwhere to print statistics (supports stdout,\
    \ stdlog, stderr)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -trace
  description: "(init,prune,fix,fail,done,propagate,commit,post,none,all,variable,general)\
    \ default: none\ntrace flags (comma-separated list)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -height
  description: "(unsigned int) default: 8\nHeight of matrix"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -width
  description: "(unsigned int) default: 8\nWidth of matrix"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -size
  description: "(unsigned int) default: 0\nIf different from 0, used as both width\
    \ and height"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -colors
  description: "(unsigned int) default: 4\nMaximum number of colors"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -not-all-equal
  description: "(nq, naive, reified, nvalues, count, dfa) default: nq\nHow to implement\
    \ the not all equals constraint (used in corners model)\nnq: Use nq constraint.\n\
    naive: Use naive reified decomposition.\nreified: Use reified decomposition.\n\
    nvalues: Use nvalues.\ncount: Use count.\ndfa: Use dfa."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -same-or-0
  description: "(reified, tuple-set, dfa) default: dfa\nHow to implement the same\
    \ or 0 constraint (used in the decomposed no monochrome rectangle constraint)\n\
    reified: Use reified decomposition.\ntuple-set: Use tuple set representation.\n\
    dfa: Use dfa representation."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -distinct-except-0
  description: "(reified, dfa, count) default: dfa\nHow to implement the distinct\
    \ except 0 constraint (used in the decomposed no monochrome rectangle constraint)\n\
    reified: Use reified decomposition.\ndfa: Use dfa decomposition.\ncount: Use global\
    \ cardinality."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -no-monochrome-rectangle
  description: "(decompositions, dfa) default: dfa\nHow to implement no monochrome\
    \ rectangle (used in the rows model)\ndecompositions: Use decompositions into\
    \ same_or_0 and distinct_except_0.\ndfa: Use DFA as direct implementation.\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -help
  - --help
  description: ", -?\nprint this help message"
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Gecode configuration information:\n - Version: 6.2.0\n - Variable types:\
  \ BoolVar IntVar SetVar FloatVar \n - Trigonometric and transcendental float constraints:\
  \ disabled\n - Thread support: enabled (8 processing units)\n - Gist support: disabled\n\
  \ - CPProfiler support: disabled\n\nOptions for Colored matrix:\n\t-help, --help,\
  \ -?\n\t\tprint this help message\n\t-model (corner, rows, both, columns, matrix)\
  \ default: corner\n\t\tmodel variants\n\t\t  corner: Use direct corners model with\
  \ not-all-equal constraints.\n\t\t  rows: Use model on pairs of rows (same_or_0\
  \ and distinct_except_0 constraints).\n\t\t  both: Use both rows and corners model\n\
  \t\t  columns: Use model on pairs of columns (same_or_0 and distinct_except_0 constraints).\n\
  \t\t  matrix: Use both rows and columns model\n\t-symmetry (none, matrix, values,\
  \ both) default: matrix\n\t\tsymmetry variants\n\t\t  none: Don't use symmetry breaking.\n\
  \t\t  matrix: Order matrix rows and columns\n\t\t  values: Order values\n\t\t  both:\
  \ Order both rows/columns and values\n\t-ipl (def,val,bnd,dom,basic,advanced)\n\t\
  \tdefault: def\n\t\tinteger propagation level (comma-separated list)\n\t-decay (double)\
  \ default: 1\n\t\tdecay factor\n\t-seed (unsigned int) default: 1\n\t\trandom number\
  \ generator seed\n\t-step (double) default: 0\n\t\tstep distance for float optimization\n\
  \t-search (dfs, bab) default: dfs\n\t\tsearch engine variants\n\t\t  dfs: Find a\
  \ solution.\n\t\t  bab: Find an optimal solution.\n\t-solutions (unsigned int) default:\
  \ 1\n\t\tnumber of solutions (0 = all)\n\t-threads (double) default: 1\n\t\tnumber\
  \ of threads (0 = #processing units)\n\t-c-d (unsigned int) default: 8\n\t\trecomputation\
  \ commit distance\n\t-a-d (unsigned int) default: 2\n\t\trecomputation adaptation\
  \ distance\n\t-d-l (unsigned int) default: 5\n\t\tdiscrepancy limit for LDS\n\t\
  -node (unsigned int) default: 0\n\t\tnode cutoff (0 = none, solution mode)\n\t-fail\
  \ (unsigned int) default: 0\n\t\tfailure cutoff (0 = none, solution mode)\n\t-time\
  \ (unsigned int) default: 0\n\t\ttime (in ms) cutoff (0 = none, solution mode)\n\
  \t-interrupt (optional: false, 0, true, 1) default: true\n\t\twhether to catch Ctrl-C\
  \ (true) or not (false)\n\t-assets (unsigned int) default: 0\n\t\t#portfolio assets\
  \ (#engines)\n\t-slice (unsigned int) default: 250\n\t\tportfolio slice (in #failures)\n\
  \t-restart (none, constant, linear, luby, geometric) default: none\n\t\trestart\
  \ sequence type\n\t-restart-base (double) default: 1.5\n\t\tbase for geometric restart\
  \ sequence\n\t-restart-scale (unsigned int) default: 250\n\t\tscale factor for restart\
  \ sequence\n\t-nogoods (optional: false, 0, true, 1) default: false\n\t\twhether\
  \ to use no-goods from restarts\n\t-nogoods-limit (unsigned int) default: 128\n\t\
  \tdepth limit for no-good extraction\n\t-relax (double) default: 0\n\t\tprobability\
  \ for relaxing variable\n\t-mode (solution, time, stat, gist, cpprofiler) default:\
  \ solution\n\t\thow to execute script\n\t-iterations (unsigned int) default: 1\n\
  \t\titerations per sample (time mode)\n\t-samples (unsigned int) default: 1\n\t\t\
  how many samples (time mode)\n\t-print-last (optional: false, 0, true, 1) default:\
  \ false\n\t\twhether to only print the last solution (solution mode)\n\t-file-sol\
  \ (string) default: stdout\n\t\twhere to print solutions (supports stdout, stdlog,\
  \ stderr)\n\t-file-stat (string) default: stdout\n\t\twhere to print statistics\
  \ (supports stdout, stdlog, stderr)\n\t-trace (init,prune,fix,fail,done,propagate,commit,post,none,all,variable,general)\
  \ default: none\n\t\ttrace flags (comma-separated list)\n\t-height (unsigned int)\
  \ default: 8\n\t\tHeight of matrix\n\t-width (unsigned int) default: 8\n\t\tWidth\
  \ of matrix\n\t-size (unsigned int) default: 0\n\t\tIf different from 0, used as\
  \ both width and height\n\t-colors (unsigned int) default: 4\n\t\tMaximum number\
  \ of colors\n\t-not-all-equal (nq, naive, reified, nvalues, count, dfa) default:\
  \ nq\n\t\tHow to implement the not all equals constraint (used in corners model)\n\
  \t\t  nq: Use nq constraint.\n\t\t  naive: Use naive reified decomposition.\n\t\t\
  \  reified: Use reified decomposition.\n\t\t  nvalues: Use nvalues.\n\t\t  count:\
  \ Use count.\n\t\t  dfa: Use dfa.\n\t-same-or-0 (reified, tuple-set, dfa) default:\
  \ dfa\n\t\tHow to implement the same or 0 constraint (used in the decomposed no\
  \ monochrome rectangle constraint)\n\t\t  reified: Use reified decomposition.\n\t\
  \t  tuple-set: Use tuple set representation.\n\t\t  dfa: Use dfa representation.\n\
  \t-distinct-except-0 (reified, dfa, count) default: dfa\n\t\tHow to implement the\
  \ distinct except 0 constraint (used in the decomposed no monochrome rectangle constraint)\n\
  \t\t  reified: Use reified decomposition.\n\t\t  dfa: Use dfa decomposition.\n\t\
  \t  count: Use global cardinality.\n\t-no-monochrome-rectangle (decompositions,\
  \ dfa) default: dfa\n\t\tHow to implement no monochrome rectangle (used in the rows\
  \ model)\n\t\t  decompositions: Use decompositions into same_or_0 and distinct_except_0.\n\
  \t\t  dfa: Use DFA as direct implementation.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/gecode:6.2.0--hb70a6f5_0
