!Command
command:
- RNAshapes
positional:
- !Positional
  description: ": Computes the single energetically most stable secondary structure\n\
    for the given RNA sequence. Co-optimal results will be suppressed,\ni.e. should\
    \ different prediction have the same best energy value,\njust an arbitrary one\
    \ out of them will be reported.\nThis resembles the function of the program \"\
    RNAfold\" of the Vienna\ngroup (see [1] and [2]). If you only use \"mfe\" mode,\
    \ consider\nswitching to RNAfold, because their implementation is much faster,\n\
    due to sophisticated low level C optimisations."
  position: 0
  name: mfe
  optional: false
- !Positional
  description: ": Often, the biological relevant structure is hidden among\nsuboptimal\
    \ predictions. In \"subopt\" mode, you can also inspect all\nsuboptimal solutions\
    \ up to a given threshold (see parameters\n--absoluteDeviation and --relativeDeviation).\n\
    Duplicates might appear when using grammar \"microstate\", due to\nits semantic\
    \ ambiguity according Vienna-Dot-Bracket strings. See\n[5] for details."
  position: 1
  name: subopt
  optional: false
- !Positional
  description: ": Output of \"subopt\" mode is crowded by many very similar answers,\n\
    which make it hard to focus to the \"important\" changes. The\nabstract shape\
    \ concept [6] groups similar answers together and\nreports only the best answer\
    \ within such a group. Due to\nabstraction, suboptimal analyses can be done more\
    \ thorough, by\nignoring boring differences.\n(see parameter --shapeLevel)"
  position: 2
  name: shapes
  optional: false
- !Positional
  description: ": Structure probabilities are strictly correlated to their energy\n\
    values. Grouped together into shape classes, their probabilities\nadd up. Often\
    \ a shape class with many members of worse energy\nbecomes more probable than\
    \ the shape containing the mfe structure\nbut not much more members. See [7] for\
    \ details on shape\nprobabilities."
  position: 3
  name: probs
  optional: false
- !Positional
  description: ": Probabilistic sampling based on partition function. This mode\n\
    combines stochastic sampling with a-posteriori shape abstraction.\nA sample from\
    \ the structure space holds M structures together with\ntheir shapes, on which\
    \ classification is performed. The\nprobability of a shape can then be approximated\
    \ by its frequency\nin the sample."
  position: 4
  name: sample
  optional: false
- !Positional
  description: ": This mode is the RNAcast approache, see [8].\nFor a family of RNA\
    \ sequences, this method independently\nenumerates the near-optimal abstract shape\
    \ space, and predicts as\nthe consensus an abstract shape common to all sequences.\
    \ For each\nsequence, it delivers the thermodynamically best structure which\n\
    has this common shape.\nInput is a multiple fasta file, which should contain at\
    \ least two\nsequences.\nOutput is sorted by \"score\" of common shapes, i.e.\
    \ summed free\nenergy of all sequences. R is the rank (= list position) of the\n\
    shape in individual sequence analysis."
  position: 5
  name: cast
  optional: false
- !Positional
  description: ": Evaluates the free energy of an RNA molecule in fixed secondary\n\
    structure, similar to RNAeval from the Vienna group. Multiple\nanswers stem from\
    \ semantic ambiguity of the underlying grammar.\nIt might happen, that your given\
    \ structure is not a structure for\nthe sequence. Maybe your settings are too\
    \ restrictive, e.g. not\nallowing lonely base-pairs (--allowLP).\nIf you input\
    \ a (multiple) FASTA file, RNAshapes assumes that\nexactly first half of the contents\
    \ of each entry is RNA sequence,\nsecond half is the according structure. Whitespaces\
    \ are ignored."
  position: 6
  name: eval
  optional: false
- !Positional
  description: ": Applies the \"outside\"-algorithm to compute probabilities for all\n\
    base pairs (i,j), based on the partition function [10]. Output is\na PostScript\
    \ file, visualizing these probabilities as a \"dot\nplot\".\nThe \"dot plot\"\
    \ shows a matrix of squares with area proportional to\nthe base pair probabilities\
    \ in the upper right half. For each pair\n(i,j) with probability above --bppmThreshold\
    \ there is a line of\nthe form\ni j sqrt(p) ubox\nin the PostScript file, so that\
    \ they can be easily extracted."
  position: 0
  name: outside
  optional: false
- !Positional
  description: ": Finds the secondary structure with the maximal sum of base-pair\n\
    probabilities (MEA=maximal expected accuracy). The equivalent\nVienna Package\
    \ name is the 'centroid secondary structure', defined\nas 'The centroid structure\
    \ is the structure with the minimum total\nbase-pair distance to all structures\
    \ in the thermodynamic\nensemble.'."
  position: 1
  name: mea
  optional: false
- !Positional
  description: ": Structural probing is a wet-lab method to obtain hints about the\n\
    likelihood of a nucleotide in a structure to be unpaired, a so\ncalled 'reactivity'\
    \ [12]. We use the reactivities to enrich the\nthermodynamic model. To circumvent\
    \ the challenge of properly\nweighting free energies and reactivities, as in e.g.\
    \ RNAstructure\n[13], we compute a pareto front of both optimization criteria\n\
    [14]'. This returns a set of equally good candidates, which\nrepresent interesting\
    \ spots of the structural ensemble. Finally,\nthe user has to pick his/her favorite."
  position: 2
  name: probing
  optional: false
- !Positional
  description: <int> must be a positive integer number.
  position: 0
  name: probabilities.
  optional: false
- !Positional
  description: Default is centroid.
  position: 0
  name: intercept.
  optional: false
- !Positional
  description: '[2] Andreas R Gruber, Ronny Lorenz, Stephan H Bernhart, Richard Neuboeck,
    Ivo L'
  position: 0
  name: 10.1186/1748-7188-6-26.
  optional: false
- !Positional
  description: '"The Vienna RNA Websuite."'
  position: 1
  name: Hofacker.
  optional: false
named:
- !Flag
  description: ": Select the computation mode. Available modes are \"mfe\",\n\"subopt\"\
    , \"shapes\", \"probs\", \"sample\", \"cast\", \"eval\",\n\"abstract\", \"outside\"\
    , \"mea\", \"probing\". Omit the ticks on\ninput.\nDefault is \"shapes\"."
  synonyms:
  - --mode
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ": This sets the energy range as an absolute value\nof the minimum\
    \ free energy. For example, when\n--absoluteDeviation 10.0 is specified, and the\n\
    minimum free energy is -10.0 kcal/mol, the\nenergy range is set to 0.0 to -10.0\
    \ kcal/mol.\n<float> must be a positive floating point\nnumber.\nConnot be combined\
    \ with --relativeDeviation.\nOnly available in modes: \"subopt\", \"shapes\",\n\
    \"cast\"."
  synonyms:
  - --absoluteDeviation
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": This sets the energy range as percentage value\nof the minimum free\
    \ energy. For example, when\n--relativeDeviation 5.0 is specified, and the\nminimum\
    \ free energy is -10.0 kcal/mol, the\nenergy range is set to -9.5 to -10.0 kcal/mol.\n\
    <float> must be a positive floating point\nnumber.\nBy default, --relativeDeviation\
    \ is set to 10 %.\nCannot be combined with --absoluteDeviation.\nOnly available\
    \ in modes: \"subopt\", \"shapes\",\n\"cast\"."
  synonyms:
  - --relativeDeviation
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": Set shape abstraction level. Currently, we provide five\ndifferent\
    \ levels (see [6] for their definitions), where\n5 is the most abstract and 1\
    \ the most concrete one.\n<int> must be a number between 5 and 1.\nDefault is\
    \ 5 (the most abstract one).\nOnly available in modes: \"mfe\", \"subopt\", \"\
    shapes\",\n\"probs\", \"sample\", \"cast\", \"eval\", \"abstract\", \"mea\",\n\
    \"probing\"."
  synonyms:
  - --shapeLevel
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": This option sets a barrier for filtering out\nresults with very\
    \ low probabilities during\ncalculation. The default value here is 1e-06, which\n\
    gives a significant speedup compared to a disabled\nfilter. (See [7] for details.)\
    \ Note that this\nfilter can have a slight influence on the overall\nresults.\
    \ To disable this filter, use option\n--lowProbFilter 0.\n<float> must be a positive\
    \ floating point number\nsmaller than 1.\nOnly available in mode: \"probs\"."
  synonyms:
  - --lowProbFilter
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": This option sets a filter for omitting low\nprobability results\
    \ during output. It is just\nfor reporting convenience. Unlike probability\ncutoff\
    \ filter, this option does not have any\ninfluence on runtime or probabilities\
    \ beyond\nthis value. To disable this filter, use\noption --outputLowProbFilter\
    \ 0.\n<float> must be a positive floating point\nnumber smaller than 1.\nOnly\
    \ available in modes: \"probs\", \"sample\"."
  synonyms:
  - --outputLowProbFilter
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": Sets the number of samples that are drawn to estimate\nshape probabilities.\n\
    In our experience, 1000 iterations are sufficient to\nachieve reasonable results\
    \ for shapes with high\nprobability. Thus, default is 1000.\nOnly available in\
    \ mode: \"sample\"."
  synonyms:
  - --numSamples
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": You can inspect the samples drawn by stochastic\nbacktrace if you\
    \ turn --showSamples on by setting it to\n1.\nDefault is 0 = off.\nOnly available\
    \ in mode: \"sample\"."
  synonyms:
  - --showSamples
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": Activates window mode and computes substrings of size\n<int> for\
    \ the input. After computation for the first\n<int> bases is done, the window\
    \ is pushed <y> bases to\nthe right and the next computation is startet. <y> is\n\
    set by --windowIncrement.\n<int> must be a non-zero positive integer, smaller\
    \ than\nthe input length.\nOnly available in modes: \"mfe\", \"subopt\", \"shapes\"\
    ,\n\"probs\", \"sample\", \"mea\", \"probing\"."
  synonyms:
  - --windowSize
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": If --windowSize is given, this parameter sets the\noffset for the\
    \ next window to <int> bases.\n<int> must be a non-zero positive integer, smaller\n\
    than --windowSize.\nDefault is 1.\nOnly available in modes: \"mfe\", \"subopt\"\
    , \"shapes\",\n\"probs\", \"sample\", \"mea\", \"probing\"."
  synonyms:
  - --windowIncrement
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": If activated, in addition to free energy also the\nprobability of\
    \ structures will be computed. To speed\nup computation, this calculation is switched\
    \ off by\ndefault.\nOnly available in modes: \"mfe\", \"subopt\", \"shapes\",\n\
    \"probs\", \"sample\", \"cast\", \"mea\", \"probing\"."
  synonyms:
  - --structureProbs
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": How to treat \"dangling end\" energies for bases adjacent\nto helices\
    \ in free ends and multi-loops.\n\"nodangle\" (-d 0 in Vienna package) ignores\
    \ dangling\nenergies altogether.\n\"overdangle\" (-d 2 in Vienna package) always\
    \ dangles\nbases onto helices, even if they are part of neighboring\nhelices themselves.\
    \ Seems to be wrong, but could perform\nsurprisingly well.\n\"microstate\" (-d\
    \ 1 in Vienna package) correct\noptimisation of all dangling possibilities,\n\
    unfortunately this results in an semantically ambiguous\nsearch space regarding\
    \ Vienna-Dot-Bracket notations.\n\"macrostate\" (no correspondens in Vienna package)\
    \ same\nas microstate, while staying unambiguous. Unfortunately,\nmfe computation\
    \ violates Bellman's principle of\noptimality.\nDefault is \"macrostate\". See\
    \ [5] for further details."
  synonyms:
  - --grammar
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ": Rescale energy parameters to a temperature of temp C.\n<float> must\
    \ be a floating point number.\nDefault is 37 C.\nOnly available in modes: \"mfe\"\
    , \"subopt\", \"shapes\",\n\"probs\", \"sample\", \"cast\", \"eval\", \"outside\"\
    , \"mea\",\n\"probing\"."
  synonyms:
  - --temperature
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": Read energy parameters from paramfile, instead of using\nthe default\
    \ parameter set. See the RNAlib (Vienna RNA\npackage) documentation for details\
    \ on the file format.\nDefault are parameters released by the Turner group in\n\
    2004 (see [3] and [4]).\nOnly available in modes: \"mfe\", \"subopt\", \"shapes\"\
    ,\n\"probs\", \"sample\", \"cast\", \"eval\", \"outside\", \"mea\",\n\"probing\"\
    ."
  synonyms:
  - --param
  args: !SimpleFlagArg
    name: paramfile
  optional: true
- !Flag
  description: ": Lonely base pairs have no stabilizing effect, because they\ncannot\
    \ stack on another pair, but they heavily increase the\nsize of the folding space.\
    \ Thus, we normally forbid them.\nShould you want to allow them set <int> to 1.\n\
    <int> must be 0 (=don't allow lonely base pairs) or 1 (=\nallow them).\nDefault\
    \ is 0, i.e. no lonely base pairs."
  synonyms:
  - --allowLP
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": Set the threshold for base pair probabilities\nincluded in the postscript\
    \ output.\nDefault is 1e-05.\nOnly available in mode: \"outside\"."
  synonyms:
  - --bppmThreshold
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": Sets the filename for the probability dot plot, produced\nin \"\
    outside\" mode.\nDefault is \"dotPlot.ps\".\nOnly available in mode: \"outside\"\
    ."
  synonyms:
  - --dotplot
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ": Activate this option to also produce a png file of the \"dot\nplot\"\
    . This is deactivated by default and requires an\ninstallation of the program\
    \ \"GhostScript\".\nOnly available in mode: \"outside\"."
  synonyms:
  - --png
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": RNAshapes expects that according Bellman's GAP compiled\nbinaries\
    \ are located in the same directory as the Perl\nwrapper is. Should you moved\
    \ them into another\ndirectory, you must set --binPath to this new location!"
  synonyms:
  - --binPath
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ": RNAshapes expects a special naming schema for the\naccording Bellman's\
    \ GAP compiled binaries. The binary\nname is composed of three to four components:\n\
    1) the program prefix (on default \"RNAshapes_\"),\n2) the mode,\n3) the used\
    \ grammar,\n4) optionally, the word \"window\" if you activate\nwindow computation.\n\
    Thus, for non-window mode \"subopt\", with grammar\n\"overdangle\" and \"mis\"\
    \ representation, the name would\nbe \"RNAshapes_subopt_overdangle\".\nWith --binPrefix\
    \ you can change the prefix into some\narbitary one."
  synonyms:
  - --binPrefix
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ': Sets the number of digits used for printing shape'
  synonyms:
  - --probDecimals
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": Prints the actual command for Bellman's GAP binary."
  synonyms:
  - --verbose
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: ": Provide a file name to which a HTML formatted version of\nthe output\
    \ should be saved in.\nOnly available in modes: \"mfe\", \"subopt\", \"shapes\"\
    ,\n\"probs\", \"sample\", \"cast\", \"eval\", \"mea\", \"probing\"."
  synonyms:
  - --varna
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ": The program RNAstructure [13] adds a bonus to the free\nenergy of\
    \ a base-pair stack according to the formula: bonus\n= slope * log(reactivity\
    \ + 1) + intercept. If you set\n--normalization to 'RNAstructure', reactivities\
    \ are\nnormalized according to this spirit, but added for all\nbase-pairs and\
    \ substracted for all unpaired bases. Default\nis 1.8.\nOnly available in mode:\
    \ \"probing\"."
  synonyms:
  - --slope
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ": See parameter --slope: sets the value for 'intercept'.\nOnly effective\
    \ if --normalization is set to\n'RNAstructure'. Default is -0.6.\nOnly available\
    \ in mode: \"probing\"."
  synonyms:
  - --intercept
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: ': The reactivities read from a file (see'
  synonyms:
  - --normalization
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ) can be normalized in four
  synonyms:
  - --reactivityfilename
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": The modifier is the chemical reagent in a structure\nprobing experiment\
    \ that attacs the nucleotide which in\nthe end gives its reactivity. Different\
    \ modifier affect\ndifferent bases. Reactivities given by the file\n--reactivityfilename\
    \ will be set to zero if the\nmodifier cannot affect a base. Available modifier\
    \ are:\n'DMS' affects [A,C]\n'CMCT' affects [G,U]\n'SHAPE' affects [A,C,G,U]\n\
    'diffSHAPE' affects [A,C,G,U]\n'unknown' affects [A,C,G,U]\nDefault is unknown.\n\
    Only available in mode: \"probing\"."
  synonyms:
  - --modifier
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ''
  synonyms:
  - -options
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: ': show this brief help on version and usage'
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "# RNAshapes: RNA secondary structure predictions\n#            version\
  \ 3.3.0 (01.10.2015)\n#            Stefan Janssen (bibi-help@techfak.uni-bielefeld.de)\n\
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\
  \nUSAGE: \nperl RNAshapes [-mode] [-options] <fasta file name or RNA sequence>\n\
  \n RNAshapes comes with the following different modes of predictions:\n  mfe   \
  \   : Computes the single energetically most stable secondary structure\n      \
  \       for the given RNA sequence. Co-optimal results will be suppressed,\n   \
  \          i.e. should different prediction have the same best energy value,\n \
  \            just an arbitrary one out of them will be reported.\n             This\
  \ resembles the function of the program \"RNAfold\" of the Vienna\n            \
  \ group (see [1] and [2]). If you only use \"mfe\" mode, consider\n            \
  \ switching to RNAfold, because their implementation is much faster,\n         \
  \    due to sophisticated low level C optimisations.\n\n  subopt   : Often, the\
  \ biological relevant structure is hidden among\n             suboptimal predictions.\
  \ In \"subopt\" mode, you can also inspect all\n             suboptimal solutions\
  \ up to a given threshold (see parameters\n             --absoluteDeviation and\
  \ --relativeDeviation).\n             Duplicates might appear when using grammar\
  \ \"microstate\", due to\n             its semantic ambiguity according Vienna-Dot-Bracket\
  \ strings. See\n             [5] for details.\n\n  shapes   : Output of \"subopt\"\
  \ mode is crowded by many very similar answers,\n             which make it hard\
  \ to focus to the \"important\" changes. The\n             abstract shape concept\
  \ [6] groups similar answers together and\n             reports only the best answer\
  \ within such a group. Due to\n             abstraction, suboptimal analyses can\
  \ be done more thorough, by\n             ignoring boring differences.\n       \
  \      (see parameter --shapeLevel)\n\n  probs    : Structure probabilities are\
  \ strictly correlated to their energy\n             values. Grouped together into\
  \ shape classes, their probabilities\n             add up. Often a shape class with\
  \ many members of worse energy\n             becomes more probable than the shape\
  \ containing the mfe structure\n             but not much more members. See [7]\
  \ for details on shape\n             probabilities.\n\n  sample   : Probabilistic\
  \ sampling based on partition function. This mode\n             combines stochastic\
  \ sampling with a-posteriori shape abstraction.\n             A sample from the\
  \ structure space holds M structures together with\n             their shapes, on\
  \ which classification is performed. The\n             probability of a shape can\
  \ then be approximated by its frequency\n             in the sample.\n\n  cast \
  \    : This mode is the RNAcast approache, see [8].\n             For a family of\
  \ RNA sequences, this method independently\n             enumerates the near-optimal\
  \ abstract shape space, and predicts as\n             the consensus an abstract\
  \ shape common to all sequences. For each\n             sequence, it delivers the\
  \ thermodynamically best structure which\n             has this common shape.\n\
  \             Input is a multiple fasta file, which should contain at least two\n\
  \             sequences.\n             Output is sorted by \"score\" of common shapes,\
  \ i.e. summed free\n             energy of all sequences. R is the rank (= list\
  \ position) of the\n             shape in individual sequence analysis.\n\n  eval\
  \     : Evaluates the free energy of an RNA molecule in fixed secondary\n      \
  \       structure, similar to RNAeval from the Vienna group. Multiple\n        \
  \     answers stem from semantic ambiguity of the underlying grammar.\n        \
  \     It might happen, that your given structure is not a structure for\n      \
  \       the sequence. Maybe your settings are too restrictive, e.g. not\n      \
  \       allowing lonely base-pairs (--allowLP).\n             If you input a (multiple)\
  \ FASTA file, RNAshapes assumes that\n             exactly first half of the contents\
  \ of each entry is RNA sequence,\n             second half is the according structure.\
  \ Whitespaces are ignored.\n\n  abstract : Converts a Vienna-Dot-Bracket representation\
  \ of a secondary\n             structure into a shape string.\n\n  outside  : Applies\
  \ the \"outside\"-algorithm to compute probabilities for all\n             base\
  \ pairs (i,j), based on the partition function [10]. Output is\n             a PostScript\
  \ file, visualizing these probabilities as a \"dot\n             plot\".\n     \
  \        The \"dot plot\" shows a matrix of squares with area proportional to\n\
  \             the base pair probabilities in the upper right half. For each pair\n\
  \             (i,j) with probability above --bppmThreshold there is a line of\n\
  \             the form\n             i j sqrt(p) ubox\n             in the PostScript\
  \ file, so that they can be easily extracted.\n\n  mea      : Finds the secondary\
  \ structure with the maximal sum of base-pair\n             probabilities (MEA=maximal\
  \ expected accuracy). The equivalent\n             Vienna Package name is the 'centroid\
  \ secondary structure', defined\n             as 'The centroid structure is the\
  \ structure with the minimum total\n             base-pair distance to all structures\
  \ in the thermodynamic\n             ensemble.'.\n\n  probing  : Structural probing\
  \ is a wet-lab method to obtain hints about the\n             likelihood of a nucleotide\
  \ in a structure to be unpaired, a so\n             called 'reactivity' [12]. We\
  \ use the reactivities to enrich the\n             thermodynamic model. To circumvent\
  \ the challenge of properly\n             weighting free energies and reactivities,\
  \ as in e.g. RNAstructure\n             [13], we compute a pareto front of both\
  \ optimization criteria\n             [14]'. This returns a set of equally good\
  \ candidates, which\n             represent interesting spots of the structural\
  \ ensemble. Finally,\n             the user has to pick his/her favorite.\n\nGENERAL\
  \ OPTIONS:\n  --mode <string> : Select the computation mode. Available modes are\
  \ \"mfe\",\n                    \"subopt\", \"shapes\", \"probs\", \"sample\", \"\
  cast\", \"eval\",\n                    \"abstract\", \"outside\", \"mea\", \"probing\"\
  . Omit the ticks on\n                    input.\n                    Default is\
  \ \"shapes\".\n\n  --absoluteDeviation <float> : This sets the energy range as an\
  \ absolute value\n                                of the minimum free energy. For\
  \ example, when\n                                --absoluteDeviation 10.0 is specified,\
  \ and the\n                                minimum free energy is -10.0 kcal/mol,\
  \ the\n                                energy range is set to 0.0 to -10.0 kcal/mol.\n\
  \                                <float> must be a positive floating point\n   \
  \                             number.\n                                Connot be\
  \ combined with --relativeDeviation.\n                                Only available\
  \ in modes: \"subopt\", \"shapes\",\n                                \"cast\".\n\
  \n  --relativeDeviation <float> : This sets the energy range as percentage value\n\
  \                                of the minimum free energy. For example, when\n\
  \                                --relativeDeviation 5.0 is specified, and the\n\
  \                                minimum free energy is -10.0 kcal/mol, the\n  \
  \                              energy range is set to -9.5 to -10.0 kcal/mol.\n\
  \                                <float> must be a positive floating point\n   \
  \                             number.\n                                By default,\
  \ --relativeDeviation is set to 10 %.\n                                Cannot be\
  \ combined with --absoluteDeviation.\n                                Only available\
  \ in modes: \"subopt\", \"shapes\",\n                                \"cast\".\n\
  \n  --shapeLevel <int> : Set shape abstraction level. Currently, we provide five\n\
  \                       different levels (see [6] for their definitions), where\n\
  \                       5 is the most abstract and 1 the most concrete one.\n  \
  \                     <int> must be a number between 5 and 1.\n                \
  \       Default is 5 (the most abstract one).\n                       Only available\
  \ in modes: \"mfe\", \"subopt\", \"shapes\",\n                       \"probs\",\
  \ \"sample\", \"cast\", \"eval\", \"abstract\", \"mea\",\n                     \
  \  \"probing\".\n\n  --lowProbFilter <float> : This option sets a barrier for filtering\
  \ out\n                            results with very low probabilities during\n\
  \                            calculation. The default value here is 1e-06, which\n\
  \                            gives a significant speedup compared to a disabled\n\
  \                            filter. (See [7] for details.) Note that this\n   \
  \                         filter can have a slight influence on the overall\n  \
  \                          results. To disable this filter, use option\n       \
  \                     --lowProbFilter 0.\n                            <float> must\
  \ be a positive floating point number\n                            smaller than\
  \ 1.\n                            Only available in mode: \"probs\".\n\n  --outputLowProbFilter\
  \ <float> : This option sets a filter for omitting low\n                       \
  \           probability results during output. It is just\n                    \
  \              for reporting convenience. Unlike probability\n                 \
  \                 cutoff filter, this option does not have any\n               \
  \                   influence on runtime or probabilities beyond\n             \
  \                     this value. To disable this filter, use\n                \
  \                  option --outputLowProbFilter 0.\n                           \
  \       <float> must be a positive floating point\n                            \
  \      number smaller than 1.\n                                  Only available\
  \ in modes: \"probs\", \"sample\".\n\n  --numSamples <int> : Sets the number of\
  \ samples that are drawn to estimate\n                       shape probabilities.\n\
  \                       In our experience, 1000 iterations are sufficient to\n \
  \                      achieve reasonable results for shapes with high\n       \
  \                probability. Thus, default is 1000.\n                       Only\
  \ available in mode: \"sample\".\n\n  --showSamples <int> : You can inspect the\
  \ samples drawn by stochastic\n                        backtrace if you turn --showSamples\
  \ on by setting it to\n                        1.\n                        Default\
  \ is 0 = off.\n                        Only available in mode: \"sample\".\n\n \
  \ --windowSize <int> : Activates window mode and computes substrings of size\n \
  \                      <int> for the input. After computation for the first\n  \
  \                     <int> bases is done, the window is pushed <y> bases to\n \
  \                      the right and the next computation is startet. <y> is\n \
  \                      set by --windowIncrement.\n                       <int> must\
  \ be a non-zero positive integer, smaller than\n                       the input\
  \ length.\n                       Only available in modes: \"mfe\", \"subopt\",\
  \ \"shapes\",\n                       \"probs\", \"sample\", \"mea\", \"probing\"\
  .\n\n  --windowIncrement <int> : If --windowSize is given, this parameter sets the\n\
  \                            offset for the next window to <int> bases.\n      \
  \                      <int> must be a non-zero positive integer, smaller\n    \
  \                        than --windowSize.\n                            Default\
  \ is 1.\n                            Only available in modes: \"mfe\", \"subopt\"\
  , \"shapes\",\n                            \"probs\", \"sample\", \"mea\", \"probing\"\
  .\n\n  --structureProbs <int> : If activated, in addition to free energy also the\n\
  \                           probability of structures will be computed. To speed\n\
  \                           up computation, this calculation is switched off by\n\
  \                           default.\n                           Only available\
  \ in modes: \"mfe\", \"subopt\", \"shapes\",\n                           \"probs\"\
  , \"sample\", \"cast\", \"mea\", \"probing\".\n\nFOLDING OPTIONS:\n  --grammar <string>\
  \ : How to treat \"dangling end\" energies for bases adjacent\n                \
  \       to helices in free ends and multi-loops.\n                       \n    \
  \                   \"nodangle\" (-d 0 in Vienna package) ignores dangling\n   \
  \                    energies altogether.\n                       \n           \
  \            \"overdangle\" (-d 2 in Vienna package) always dangles\n          \
  \             bases onto helices, even if they are part of neighboring\n       \
  \                helices themselves. Seems to be wrong, but could perform\n    \
  \                   surprisingly well.\n                       \n              \
  \         \"microstate\" (-d 1 in Vienna package) correct\n                    \
  \   optimisation of all dangling possibilities,\n                       unfortunately\
  \ this results in an semantically ambiguous\n                       search space\
  \ regarding Vienna-Dot-Bracket notations.\n                       \n           \
  \            \"macrostate\" (no correspondens in Vienna package) same\n        \
  \               as microstate, while staying unambiguous. Unfortunately,\n     \
  \                  mfe computation violates Bellman's principle of\n           \
  \            optimality.\n                       Default is \"macrostate\". See\
  \ [5] for further details.\n\n  --temperature <float> : Rescale energy parameters\
  \ to a temperature of temp C.\n                          <float> must be a floating\
  \ point number.\n                          Default is 37 C.\n                  \
  \        Only available in modes: \"mfe\", \"subopt\", \"shapes\",\n           \
  \               \"probs\", \"sample\", \"cast\", \"eval\", \"outside\", \"mea\"\
  ,\n                          \"probing\".\n\n  --param <paramfile> : Read energy\
  \ parameters from paramfile, instead of using\n                        the default\
  \ parameter set. See the RNAlib (Vienna RNA\n                        package) documentation\
  \ for details on the file format.\n                        Default are parameters\
  \ released by the Turner group in\n                        2004 (see [3] and [4]).\n\
  \                        Only available in modes: \"mfe\", \"subopt\", \"shapes\"\
  ,\n                        \"probs\", \"sample\", \"cast\", \"eval\", \"outside\"\
  , \"mea\",\n                        \"probing\".\n\n  --allowLP <int> : Lonely base\
  \ pairs have no stabilizing effect, because they\n                    cannot stack\
  \ on another pair, but they heavily increase the\n                    size of the\
  \ folding space. Thus, we normally forbid them.\n                    Should you\
  \ want to allow them set <int> to 1.\n                    <int> must be 0 (=don't\
  \ allow lonely base pairs) or 1 (=\n                    allow them).\n         \
  \           Default is 0, i.e. no lonely base pairs.\n\nOUTSIDE OPTIONS:\n  --bppmThreshold\
  \ <float> : Set the threshold for base pair probabilities\n                    \
  \        included in the postscript output.\n                            Default\
  \ is 1e-05.\n                            Only available in mode: \"outside\".\n\n\
  \  --dotplot <string> : Sets the filename for the probability dot plot, produced\n\
  \                       in \"outside\" mode.\n                       Default is\
  \ \"dotPlot.ps\".\n                       Only available in mode: \"outside\".\n\
  \n  --png <int> : Activate this option to also produce a png file of the \"dot\n\
  \                plot\". This is deactivated by default and requires an\n      \
  \          installation of the program \"GhostScript\".\n                Only available\
  \ in mode: \"outside\".\n\nSYSTEM OPTIONS:\n  --binPath <string> : RNAshapes expects\
  \ that according Bellman's GAP compiled\n                       binaries are located\
  \ in the same directory as the Perl\n                       wrapper is. Should you\
  \ moved them into another\n                       directory, you must set --binPath\
  \ to this new location!\n\n  --binPrefix <string> : RNAshapes expects a special\
  \ naming schema for the\n                         according Bellman's GAP compiled\
  \ binaries. The binary\n                         name is composed of three to four\
  \ components:\n                         1) the program prefix (on default \"RNAshapes_\"\
  ),\n                         2) the mode,\n                         3) the used\
  \ grammar,\n                         4) optionally, the word \"window\" if you activate\n\
  \                         window computation.\n                         Thus, for\
  \ non-window mode \"subopt\", with grammar\n                         \"overdangle\"\
  \ and \"mis\" representation, the name would\n                         be \"RNAshapes_subopt_overdangle\"\
  .\n                         With --binPrefix you can change the prefix into some\n\
  \                         arbitary one.\n\n  --probDecimals <int> : Sets the number\
  \ of digits used for printing shape\n                         probabilities.\n \
  \                        <int> must be a positive integer number.\n            \
  \             Default is 7.\n                         Also sets the number of displayed\
  \ decimals for\n                         reactivity values if mode 'probing' is\
  \ used.\n                         Only available in modes: \"probs\", \"sample\"\
  , \"mea\",\n                         \"probing\".\n\n  --help : show this brief\
  \ help on version and usage\n\n  --verbose <int> : Prints the actual command for\
  \ Bellman's GAP binary.\n\n  --varna <string> : Provide a file name to which a HTML\
  \ formatted version of\n                     the output should be saved in.\n  \
  \                   Only available in modes: \"mfe\", \"subopt\", \"shapes\",\n\
  \                     \"probs\", \"sample\", \"cast\", \"eval\", \"mea\", \"probing\"\
  .\n\nSTRUCTURE PROBING OPTIONS:\n  --slope <float> : The program RNAstructure [13]\
  \ adds a bonus to the free\n                    energy of a base-pair stack according\
  \ to the formula: bonus\n                    = slope * log(reactivity + 1) + intercept.\
  \ If you set\n                    --normalization to 'RNAstructure', reactivities\
  \ are\n                    normalized according to this spirit, but added for all\n\
  \                    base-pairs and substracted for all unpaired bases. Default\n\
  \                    is 1.8.\n                    Only available in mode: \"probing\"\
  .\n\n  --intercept <float> : See parameter --slope: sets the value for 'intercept'.\n\
  \                        Only effective if --normalization is set to\n         \
  \               'RNAstructure'. Default is -0.6.\n                        Only available\
  \ in mode: \"probing\".\n\n  --normalization <string> : The reactivities read from\
  \ a file (see\n                             --reactivityfilename) can be normalized\
  \ in four\n                             ways. Non zero values are always set to\
  \ be 0.0:\n                             'centroid': a 2-means clustering of all\
  \ raw\n                             reactivities gives a centroid value for 'paired'\n\
  \                             and another for 'unpaired' values. The difference\n\
  \                             to the respective centroid, given by the\n       \
  \                      structure, is added to the score.\n                     \
  \        'asProbabilities': All reactivities are converted\n                   \
  \          into probabilities ranging from 0.0 to 1.0.\n                       \
  \      'logplain': reactivities are transformed via the\n                      \
  \       formula: log(reactivity + 1.0).\n                             'RNAstructure':\
  \ reactivities are normalized as in\n                             the program RNAstructure,\
  \ i.e. basically by the\n                             formula: slope * log(reactivity\
  \ + 1.0) +\n                             intercept.\n                          \
  \   Default is centroid.\n                             Only available in mode: \"\
  probing\".\n\n  --modifier <string> : The modifier is the chemical reagent in a\
  \ structure\n                        probing experiment that attacs the nucleotide\
  \ which in\n                        the end gives its reactivity. Different modifier\
  \ affect\n                        different bases. Reactivities given by the file\n\
  \                        --reactivityfilename will be set to zero if the\n     \
  \                   modifier cannot affect a base. Available modifier are:\n   \
  \                     'DMS' affects [A,C]\n                        'CMCT' affects\
  \ [G,U]\n                        'SHAPE' affects [A,C,G,U]\n                   \
  \     'diffSHAPE' affects [A,C,G,U]\n                        'unknown' affects [A,C,G,U]\n\
  \                        Default is unknown.\n                        Only available\
  \ in mode: \"probing\".\n\n  --reactivityfilename <string> : The path to a file\
  \ containing the raw\n                                  reactivity values. The file\
  \ must contain two\n                                  tabular separated columns.\
  \ First column is\n                                  the index of the nucleotide,\
  \ starting with 1.\n                                  The second column is a float\
  \ value giving the\n                                  reactivity for that nucleotide.\
  \ There must be\n                                  as many rows as nucleotides in\
  \ the input RNA\n                                  sequence!\n                 \
  \                 Only available in mode: \"probing\".\n\nREFERENCES:\n[1] Ronny\
  \ Lorenz, Stephan H Bernhart, Christian Hoener zu Siederdissen, Hakim\n    Tafer,\
  \ Christoph Flamm, Peter F Stadler, Ivo L Hofacker.\n    \"ViennaRNA Package 2.0.\"\
  \n    Algorithms Molecular Biology 2011. doi:10.1186/1748-7188-6-26.\n\n[2] Andreas\
  \ R Gruber, Ronny Lorenz, Stephan H Bernhart, Richard Neuboeck, Ivo L\n    Hofacker.\n\
  \    \"The Vienna RNA Websuite.\"\n    Nucleic Acids Research 2008. doi:10.1093/nar/gkn188.\n\
  \n[3] David H Mathews, Matthew D Disney, Jessica L Childs, Susan J Schroeder,\n\
  \    Michael Zuker, Douglas H Turner.\n    \"Incorporating chemical modification\
  \ constraints into a dynamic programming\n    algorithm for prediction of RNA secondary\
  \ structure.\"\n    Proceedings of the National Academy of Sciences of the United\
  \ States of\n    America 2004. doi:10.1073/pnas.0401799101\n\n[4] Douglas H Turner,\
  \ David H Mathews.\n    \"NNDB: The nearest neighbor parameter database for predicting\
  \ stability of\n    nucleic acid secondary structure.\"\n    Nucleic Acids Research\
  \ 2009. doi:10.1093/nar/gkp892\n\n[5] Stefan Janssen, Christian Schudoma, Gerhard\
  \ Steger, Robert Giegerich.\n    \"Lost in folding space? Comparing four variants\
  \ of the thermodynamic model\n    for RNA secondary structure prediction.\"\n  \
  \  BMC Bioinformatics 2011. doi:10.1186/1471-2105-12-429\n\n[6] Stefan Janssen,\
  \ Robert Giegerich.\n    \"Faster computation of exact RNA shape probabilities.\"\
  \n    Bioinformatics 2010. doi:10.1093/bioinformatics/btq014\n\n[7] Bjoern Voss,\
  \ Robert Giegerich, Marc Rehmsmeier.\n    \"Complete probabilistic analysis of RNA\
  \ shapes.\"\n    BMC Biology 2006. doi:10.1186/1741-7007-4-5\n\n[8] Jens Reeder,\
  \ Robert Giegerich.\n    \"Consensus shapes: an alternative to the Sankoff algorithm\
  \ for RNA\n    consensus structure prediction.\"\n    Bioinformatics 2005. doi:10.1093/bioinformatics/bti577\n\
  \n[9] Peter Steffen, Bjoern Voss, Marc Rehmsmeier, Jens Reeder, Robert Giegerich.\n\
  \    \"RNAshapes: an integrated RNA analysis package based on abstract shapes.\"\
  \n    Bioinformatics 2006. doi:10.1093/bioinformatics/btk010\n\n[10] John S McCaskill.\n\
  \     \"The Equilibrium Partition Function and Base Pair Binding Probabilities\n\
  \     for RNA Secondary Structure.\"\n     Biopolymers, 1990.\n\n[11] Robert Giegerich,\
  \ Bjoern Voss, Marc Rehmsmeier.\n     \"Abstract Shapes of RNA.\"\n     Nucleic\
  \ Acids Research 2004. doi:10.1093/nar/gkh779\n\n[12] Kevin M Weeks.\n     \"Advances\
  \ in RNA Secondary and Tertiary Structure Analysis by Chemical\n     Probing.\"\n\
  \     Current Opinion in Structural Biology 2010. doi:10.1016/j.sbi.2010.04.001\n\
  \n[13] Katherine E Deigan, Tian W Li, David H Mathews, Kevin M Weeks.\n     \"Accurate\
  \ SHAPE-directed RNA structure determination.\"\n     Proceedings of the National\
  \ Academy of Sciences 2009.\n     doi:10.1073/pnas.0806929106\n\n[14] Cedric Saule,\
  \ Robert Giegerich.\n     \"Pareto optimization in algebraic dynamic programming.\"\
  \n     Algorithms for Molecular Biology 2015. doi:10.1186/s13015-015-0051-7\n\n\
  CITATION:\n    If you use this program in your work you might want to cite:\n\n\
  [15] Stefan Janssen, Robert Giegerich.\n     \"The RNA shapes studio.\"\n     Bioinformatics\
  \ 2014. doi:10.1093/bioinformatics/btu649\n\n"
generated_using:
- --help
