!Command
command: &id001
- xsv
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - xsv
  - headers
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -j
    - --just-names
    description: "Only show the header names (hide column index).\nThis is automatically\
      \ enabled if more than one\ninput is given."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --intersect
    description: "Shows the intersection of all headers in all of\nthe inputs given."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: &id032 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -j
        - --just-names
        description: "Only show the header names (hide column index).\nThis is automatically\
          \ enabled if more than one\ninput is given."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --intersect
        description: "Shows the intersection of all headers in all of\nthe inputs\
          \ given."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: &id030 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -j
            - --just-names
            description: "Only show the header names (hide column index).\nThis is\
              \ automatically enabled if more than one\ninput is given."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --intersect
            description: "Shows the intersection of all headers in all of\nthe inputs\
              \ given."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: &id028 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -j
                - --just-names
                description: "Only show the header names (hide column index).\nThis\
                  \ is automatically enabled if more than one\ninput is given."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --intersect
                description: "Shows the intersection of all headers in all of\nthe\
                  \ inputs given."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: &id026 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    - --just-names
                    description: "Only show the header names (hide column index).\n\
                      This is automatically enabled if more than one\ninput is given."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --intersect
                    description: "Shows the intersection of all headers in all of\n\
                      the inputs given."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - --list
                      description: List all commands available.
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        - --just-names
                        description: "Only show the header names (hide column index).\n\
                          This is automatically enabled if more than one\ninput is\
                          \ given."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --intersect
                        description: "Shows the intersection of all headers in all\
                          \ of\nthe inputs given."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Prints the fields of the first row in the CSV data.\n\
                        \nThese names can be used in commands like 'select' to refer\
                        \ to columns in the\nCSV data.\n\nNote that multiple CSV files\
                        \ may be given to this command. This is useful with\nthe --intersect\
                        \ flag.\n\nUsage:\n    xsv headers [options] [<input>...]\n\
                        \nheaders options:\n    -j, --just-names       Only show the\
                        \ header names (hide column index).\n                    \
                        \       This is automatically enabled if more than one\n \
                        \                          input is given.\n    --intersect\
                        \            Shows the intersection of all headers in all\
                        \ of\n                           the inputs given.\n\nCommon\
                        \ options:\n    -h, --help             Display this message\n\
                        \    -d, --delimiter <arg>  The field delimiter for reading\
                        \ CSV data.\n                           Must be a single character.\
                        \ (default: ,)\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id006
                      - xsv
                      - input
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --quote
                        description: 'The quote character to use. [default: "]'
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - --escape
                        description: "The escape character to use. When not specified,\n\
                          quotes are escaped by doubling them."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. [default: ,]\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Read CSV data with special quoting rules.\n\nGenerally,\
                        \ all xsv commands support basic options like specifying the\
                        \ delimiter\nused in CSV data. This does not cover all possible\
                        \ types of CSV data. For\nexample, some CSV files don't use\
                        \ '\"' for quotes or use different escaping\nstyles.\n\nUsage:\n\
                        \    xsv input [options] [<input>]\n\ninput options:\n   \
                        \ --quote <arg>          The quote character to use. [default:\
                        \ \"]\n    --escape <arg>         The escape character to\
                        \ use. When not specified,\n                           quotes\
                        \ are escaped by doubling them.\n\nCommon options:\n    -h,\
                        \ --help             Display this message\n    -o, --output\
                        \ <file>    Write output to <file> instead of stdout.\n  \
                        \  -d, --delimiter <arg>  The field delimiter for reading\
                        \ CSV data.\n                           Must be a single character.\
                        \ [default: ,]\n"
                      generated_using: *id004
                      docker_image:
                    - &id005 !Command
                      command: &id007
                      - xsv
                      - join
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-case
                        description: When set, joins are done case insensitively.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --left
                        description: "Do a 'left outer' join. This returns all rows\
                          \ in\nfirst CSV data set, including rows with no\ncorresponding\
                          \ row in the second data set. When no\ncorresponding row\
                          \ exists, it is padded out with\nempty fields."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --right
                        description: "Do a 'right outer' join. This returns all rows\
                          \ in\nsecond CSV data set, including rows with no\ncorresponding\
                          \ row in the first data set. When no\ncorresponding row\
                          \ exists, it is padded out with\nempty fields. (This is\
                          \ the reverse of 'outer left'.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --full
                        description: "Do a 'full outer' join. This returns all rows\
                          \ in\nboth data sets with matching records joined. If\n\
                          there is no match, the missing side will be padded\nout\
                          \ with empty fields. (This is the combination of\n'outer\
                          \ left' and 'outer right'.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --cross
                        description: "USE WITH CAUTION.\nThis returns the cartesian\
                          \ product of the CSV\ndata sets given. The number of rows\
                          \ return is\nequal to N * M, where N and M correspond to\
                          \ the\nnumber of rows in the given data sets, respectively."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --nulls
                        description: "When set, joins will work on empty fields.\n\
                          Otherwise, empty fields are completely ignored.\n(In fact,\
                          \ any row that has an empty field in the\nkey specified\
                          \ is ignored.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be interpreted\n\
                          as headers. (i.e., They are not searched, analyzed,\nsliced,\
                          \ etc.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands:
                      - !Command
                        command: &id008
                        - xsv
                        - join
                        - columns1
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: input1
                          description: ''
                        - !Positional
                          optional: false
                          position: 0
                          name: xsv
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: columns2
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: join
                          description: ''
                        named: []
                        parent: *id005
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options]\
                          \ <columns1> <input1> <columns2> <input2>\n    xsv join\
                          \ --help\n"
                        generated_using: *id004
                        docker_image:
                      - !Command
                        command: &id009
                        - xsv
                        - join
                        - input1
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: xsv
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: join
                          description: ''
                        - !Positional
                          optional: false
                          position: 2
                          name: columns1
                          description: ''
                        - !Positional
                          optional: false
                          position: 3
                          name: input1
                          description: ''
                        - !Positional
                          optional: false
                          position: 4
                          name: columns2
                          description: ''
                        named: []
                        parent: *id005
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options]\
                          \ <columns1> <input1> <columns2> <input2>\n    xsv join\
                          \ --help\n"
                        generated_using: *id004
                        docker_image:
                      - !Command
                        command: &id010
                        - xsv
                        - join
                        - columns2
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: xsv
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: join
                          description: ''
                        - !Positional
                          optional: false
                          position: 2
                          name: columns1
                          description: ''
                        - !Positional
                          optional: false
                          position: 3
                          name: input1
                          description: ''
                        - !Positional
                          optional: false
                          position: 4
                          name: columns2
                          description: ''
                        named: []
                        parent: *id005
                        subcommands: []
                        usage: []
                        help_flag:
                        usage_flag:
                        version_flag:
                        help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options]\
                          \ <columns1> <input1> <columns2> <input2>\n    xsv join\
                          \ --help\n"
                        generated_using: *id004
                        docker_image:
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Joins two sets of CSV data on the specified columns.\n\
                        \nThe default join operation is an 'inner' join. This corresponds\
                        \ to the\nintersection of rows on the keys specified.\n\n\
                        Joins are always done by ignoring leading and trailing whitespace.\
                        \ By default,\njoins are done case sensitively, but this can\
                        \ be disabled with the --no-case\nflag.\n\nThe columns arguments\
                        \ specify the columns to join for each input. Columns can\n\
                        be referenced by name or index, starting at 1. Specify multiple\
                        \ columns by\nseparating them with a comma. Specify a range\
                        \ of columns with `-`. Both\ncolumns1 and columns2 must specify\
                        \ exactly the same number of columns.\n(See 'xsv select --help'\
                        \ for the full syntax.)\n\nUsage:\n    xsv join [options]\
                        \ <columns1> <input1> <columns2> <input2>\n    xsv join --help\n\
                        \njoin options:\n    --no-case              When set, joins\
                        \ are done case insensitively.\n    --left               \
                        \  Do a 'left outer' join. This returns all rows in\n    \
                        \                       first CSV data set, including rows\
                        \ with no\n                           corresponding row in\
                        \ the second data set. When no\n                         \
                        \  corresponding row exists, it is padded out with\n     \
                        \                      empty fields.\n    --right        \
                        \        Do a 'right outer' join. This returns all rows in\n\
                        \                           second CSV data set, including\
                        \ rows with no\n                           corresponding row\
                        \ in the first data set. When no\n                       \
                        \    corresponding row exists, it is padded out with\n   \
                        \                        empty fields. (This is the reverse\
                        \ of 'outer left'.)\n    --full                 Do a 'full\
                        \ outer' join. This returns all rows in\n                \
                        \           both data sets with matching records joined. If\n\
                        \                           there is no match, the missing\
                        \ side will be padded\n                           out with\
                        \ empty fields. (This is the combination of\n            \
                        \               'outer left' and 'outer right'.)\n    --cross\
                        \                USE WITH CAUTION.\n                     \
                        \      This returns the cartesian product of the CSV\n   \
                        \                        data sets given. The number of rows\
                        \ return is\n                           equal to N * M, where\
                        \ N and M correspond to the\n                           number\
                        \ of rows in the given data sets, respectively.\n    --nulls\
                        \                When set, joins will work on empty fields.\n\
                        \                           Otherwise, empty fields are completely\
                        \ ignored.\n                           (In fact, any row that\
                        \ has an empty field in the\n                           key\
                        \ specified is ignored.)\n\nCommon options:\n    -h, --help\
                        \             Display this message\n    -o, --output <file>\
                        \    Write output to <file> instead of stdout.\n    -n, --no-headers\
                        \       When set, the first row will not be interpreted\n\
                        \                           as headers. (i.e., They are not\
                        \ searched, analyzed,\n                           sliced,\
                        \ etc.)\n    -d, --delimiter <arg>  The field delimiter for\
                        \ reading CSV data.\n                           Must be a\
                        \ single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id011
                      - xsv
                      - select
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be interpreted\n\
                          as headers. (i.e., They are not searched, analyzed,\nsliced,\
                          \ etc.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Select columns from CSV data efficiently.\n\nThis\
                        \ command lets you manipulate the columns in CSV data. You\
                        \ can re-order\nthem, duplicate them or drop them. Columns\
                        \ can be referenced by index or by\nname if there is a header\
                        \ row (duplicate column names can be disambiguated with\n\
                        more indexing). Finally, column ranges can be specified.\n\
                        \n  Select the first and fourth columns:\n  $ xsv select 1,4\n\
                        \n  Select the first 4 columns (by index and by name):\n \
                        \ $ xsv select 1-4\n  $ xsv select Header1-Header4\n\n  Ignore\
                        \ the first 2 columns (by range and by omission):\n  $ xsv\
                        \ select 3-\n  $ xsv select '!1-2'\n\n  Select the third column\
                        \ named 'Foo':\n  $ xsv select 'Foo[2]'\n\n  Re-order and\
                        \ duplicate columns arbitrarily:\n  $ xsv select 3-1,Header3-Header1,Header1,Foo[2],Header1\n\
                        \nUsage:\n    xsv select [options] [--] <selection> [<input>]\n\
                        \    xsv select --help\n\nCommon options:\n    -h, --help\
                        \             Display this message\n    -o, --output <file>\
                        \    Write output to <file> instead of stdout.\n    -n, --no-headers\
                        \       When set, the first row will not be interpreted\n\
                        \                           as headers. (i.e., They are not\
                        \ searched, analyzed,\n                           sliced,\
                        \ etc.)\n    -d, --delimiter <arg>  The field delimiter for\
                        \ reading CSV data.\n                           Must be a\
                        \ single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id012
                      - xsv
                      - fixlengths
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        - --length
                        description: "Forcefully set the length of each record. If\
                          \ a\nrecord is not the size given, then it is truncated\n\
                          or expanded as appropriate."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Transforms CSV data so that all records have the\
                        \ same length. The length is\nthe length of the longest record\
                        \ in the data. Records with smaller lengths are\npadded with\
                        \ empty fields.\n\nThis requires two complete scans of the\
                        \ CSV data: one for determining the\nrecord size and one for\
                        \ the actual transform. Because of this, the input\ngiven\
                        \ must be a file and not stdin.\n\nAlternatively, if --length\
                        \ is set, then all records are forced to that length.\nThis\
                        \ requires a single pass and can be done with stdin.\n\nUsage:\n\
                        \    xsv fixlengths [options] [<input>]\n\nfixlengths options:\n\
                        \    -l, --length <arg>     Forcefully set the length of each\
                        \ record. If a\n                           record is not the\
                        \ size given, then it is truncated\n                     \
                        \      or expanded as appropriate.\n\nCommon options:\n  \
                        \  -h, --help             Display this message\n    -o, --output\
                        \ <file>    Write output to <file> instead of stdout.\n  \
                        \  -d, --delimiter <arg>  The field delimiter for reading\
                        \ CSV data.\n                           Must be a single character.\
                        \ (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id013
                      - xsv
                      - search
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: regex
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --ignore-case
                        description: "Case insensitive search. This is equivalent\
                          \ to\nprefixing the regex with '(?i)'."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --select
                        description: "Select the columns to search. See 'xsv select\
                          \ -h'\nfor the full syntax."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --invert-match
                        description: Select only rows that did not match
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be interpreted\n\
                          as headers. (i.e., They are not searched, analyzed,\nsliced,\
                          \ etc.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Filters CSV data by whether the given regex matches\
                        \ a row.\n\nThe regex is applied to each field in each row,\
                        \ and if any field matches,\nthen the row is written to the\
                        \ output. The columns to search can be limited\nwith the '--select'\
                        \ flag (but the full row is still written to the output if\n\
                        there is a match).\n\nUsage:\n    xsv search [options] <regex>\
                        \ [<input>]\n    xsv search --help\n\nsearch options:\n  \
                        \  -i, --ignore-case      Case insensitive search. This is\
                        \ equivalent to\n                           prefixing the\
                        \ regex with '(?i)'.\n    -s, --select <arg>     Select the\
                        \ columns to search. See 'xsv select -h'\n               \
                        \            for the full syntax.\n    -v, --invert-match\
                        \     Select only rows that did not match\n\nCommon options:\n\
                        \    -h, --help             Display this message\n    -o,\
                        \ --output <file>    Write output to <file> instead of stdout.\n\
                        \    -n, --no-headers       When set, the first row will not\
                        \ be interpreted\n                           as headers. (i.e.,\
                        \ They are not searched, analyzed,\n                     \
                        \      sliced, etc.)\n    -d, --delimiter <arg>  The field\
                        \ delimiter for reading CSV data.\n                      \
                        \     Must be a single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id014
                      - xsv
                      - index
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: "Write index to <file> instead of <input>.idx.\n\
                          Generally, this is not currently useful because\nthe only\
                          \ way to use an index is if it is specially\nnamed <input>.idx."
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Creates an index of the given CSV data, which can\
                        \ make other operations like\nslicing, splitting and gathering\
                        \ statistics much faster.\n\nNote that this does not accept\
                        \ CSV data on stdin. You must give a file\npath. The index\
                        \ is created at 'path/to/input.csv.idx'. The index will be\n\
                        automatically used by commands that can benefit from it. If\
                        \ the original CSV\ndata changes after the index is made,\
                        \ commands that try to use it will result\nin an error (you\
                        \ have to regenerate the index before it can be used again).\n\
                        \nUsage:\n    xsv index [options] <input>\n    xsv index --help\n\
                        \nindex options:\n    -o, --output <file>    Write index to\
                        \ <file> instead of <input>.idx.\n                       \
                        \    Generally, this is not currently useful because\n   \
                        \                        the only way to use an index is if\
                        \ it is specially\n                           named <input>.idx.\n\
                        \nCommon options:\n    -h, --help             Display this\
                        \ message\n    -d, --delimiter <arg>  The field delimiter\
                        \ for reading CSV data.\n                           Must be\
                        \ a single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id015
                      - xsv
                      - slice
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --start
                        description: The index of the record to slice from.
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -e
                        - --end
                        description: The index of the record to slice to.
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        - --len
                        description: "The length of the slice (can be used instead\n\
                          of --end)."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --index
                        description: Slice a single record (shortcut for -s N -l 1).
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be interpreted\n\
                          as headers. Otherwise, the first row will always\nappear\
                          \ in the output as the header row."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Returns the rows in the range specified (starting\
                        \ at 0, half-open interval).\nThe range does not include headers.\n\
                        \nIf the start of the range isn't specified, then the slice\
                        \ starts from the first\nrecord in the CSV data.\n\nIf the\
                        \ end of the range isn't specified, then the slice continues\
                        \ to the last\nrecord in the CSV data.\n\nThis operation can\
                        \ be made much faster by creating an index with 'xsv index'\n\
                        first. Namely, a slice on an index requires parsing just the\
                        \ rows that are\nsliced. Without an index, all rows up to\
                        \ the first row in the slice must be\nparsed.\n\nUsage:\n\
                        \    xsv slice [options] [<input>]\n\nslice options:\n   \
                        \ -s, --start <arg>      The index of the record to slice\
                        \ from.\n    -e, --end <arg>        The index of the record\
                        \ to slice to.\n    -l, --len <arg>        The length of the\
                        \ slice (can be used instead\n                           of\
                        \ --end).\n    -i, --index <arg>      Slice a single record\
                        \ (shortcut for -s N -l 1).\n\nCommon options:\n    -h, --help\
                        \             Display this message\n    -o, --output <file>\
                        \    Write output to <file> instead of stdout.\n    -n, --no-headers\
                        \       When set, the first row will not be interpreted\n\
                        \                           as headers. Otherwise, the first\
                        \ row will always\n                           appear in the\
                        \ output as the header row.\n    -d, --delimiter <arg>  The\
                        \ field delimiter for reading CSV data.\n                \
                        \           Must be a single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id016
                      - xsv
                      - cat
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: columns
                        description: ''
                      - !Positional
                        optional: false
                        position: 0
                        name: rows
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        - --pad
                        description: "When concatenating columns, this flag will cause\n\
                          all records to appear. It will pad each row if\nother CSV\
                          \ data isn't long enough."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will NOT be interpreted\n\
                          as column names. Note that this has no effect when\nconcatenating\
                          \ columns."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Concatenates CSV data by column or by row.\n\nWhen\
                        \ concatenating by column, the columns will be written in\
                        \ the same order as\nthe inputs given. The number of rows\
                        \ in the result is always equivalent to to\nthe minimum number\
                        \ of rows across all given CSV data. (This behavior can be\n\
                        reversed with the '--pad' flag.)\n\nWhen concatenating by\
                        \ row, all CSV data must have the same number of columns.\n\
                        If you need to rearrange the columns or fix the lengths of\
                        \ records, use the\n'select' or 'fixlengths' commands. Also,\
                        \ only the headers of the *first* CSV\ndata given are used.\
                        \ Headers in subsequent inputs are ignored. (This behavior\n\
                        can be disabled with --no-headers.)\n\nUsage:\n    xsv cat\
                        \ rows    [options] [<input>...]\n    xsv cat columns [options]\
                        \ [<input>...]\n    xsv cat --help\n\ncat options:\n    -p,\
                        \ --pad              When concatenating columns, this flag\
                        \ will cause\n                           all records to appear.\
                        \ It will pad each row if\n                           other\
                        \ CSV data isn't long enough.\n\nCommon options:\n    -h,\
                        \ --help             Display this message\n    -o, --output\
                        \ <file>    Write output to <file> instead of stdout.\n  \
                        \  -n, --no-headers       When set, the first row will NOT\
                        \ be interpreted\n                           as column names.\
                        \ Note that this has no effect when\n                    \
                        \       concatenating columns.\n    -d, --delimiter <arg>\
                        \  The field delimiter for reading CSV data.\n           \
                        \                Must be a single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id017
                      - xsv
                      - count
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be included\
                          \ in\nthe count."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Prints a count of the number of records in the CSV\
                        \ data.\n\nNote that the count will not include the header\
                        \ row (unless --no-headers is\ngiven).\n\nUsage:\n    xsv\
                        \ count [options] [<input>]\n\nCommon options:\n    -h, --help\
                        \             Display this message\n    -n, --no-headers \
                        \      When set, the first row will not be included in\n \
                        \                          the count.\n    -d, --delimiter\
                        \ <arg>  The field delimiter for reading CSV data.\n     \
                        \                      Must be a single character. (default:\
                        \ ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id018
                      - xsv
                      - flatten
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        - --condense
                        description: "Limits the length of each field to the value\n\
                          specified. If the field is UTF-8 encoded, then\n<arg> refers\
                          \ to the number of code points.\nOtherwise, it refers to\
                          \ the number of bytes."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --separator
                        description: "A string of characters to write after each record.\n\
                          When non-empty, a new line is automatically\nappended to\
                          \ the separator.\n[default: #]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be interpreted\n\
                          as headers. When set, the name of each field\nwill be its\
                          \ index."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Prints flattened records such that fields are labeled\
                        \ separated by a new line.\nThis mode is particularly useful\
                        \ for viewing one record at a time. Each\nrecord is separated\
                        \ by a special '#' character (on a line by itself), which\n\
                        can be changed with the --separator flag.\n\nThere is also\
                        \ a condensed view (-c or --condense) that will shorten the\n\
                        contents of each field to provide a summary view.\n\nUsage:\n\
                        \    xsv flatten [options] [<input>]\n\nflatten options:\n\
                        \    -c, --condense <arg>  Limits the length of each field\
                        \ to the value\n                           specified. If the\
                        \ field is UTF-8 encoded, then\n                         \
                        \  <arg> refers to the number of code points.\n          \
                        \                 Otherwise, it refers to the number of bytes.\n\
                        \    -s, --separator <arg>  A string of characters to write\
                        \ after each record.\n                           When non-empty,\
                        \ a new line is automatically\n                          \
                        \ appended to the separator.\n                           [default:\
                        \ #]\n\nCommon options:\n    -h, --help             Display\
                        \ this message\n    -n, --no-headers       When set, the first\
                        \ row will not be interpreted\n                          \
                        \ as headers. When set, the name of each field\n         \
                        \                  will be its index.\n    -d, --delimiter\
                        \ <arg>  The field delimiter for reading CSV data.\n     \
                        \                      Must be a single character. (default:\
                        \ ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id019
                      - xsv
                      - split
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: outdir
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --size
                        description: "The number of records to write into each chunk.\n\
                          [default: 500]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        - --jobs
                        description: "The number of spliting jobs to run in parallel.\n\
                          This only works when the given CSV data has\nan index already\
                          \ created. Note that a file handle\nis opened for each job.\n\
                          When set to '0', the number of jobs is set to the\nnumber\
                          \ of CPUs detected.\n[default: 0]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will NOT be interpreted\n\
                          as column names. Otherwise, the first row will\nappear in\
                          \ all chunks as the header row."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Splits the given CSV data into chunks.\n\nThe files\
                        \ are written to the directory given with the name '{start}.csv',\n\
                        where {start} is the index of the first record of the chunk\
                        \ (starting at 0).\n\nUsage:\n    xsv split [options] <outdir>\
                        \ [<input>]\n    xsv split --help\n\nsplit options:\n    -s,\
                        \ --size <arg>       The number of records to write into each\
                        \ chunk.\n                           [default: 500]\n    -j,\
                        \ --jobs <arg>       The number of spliting jobs to run in\
                        \ parallel.\n                           This only works when\
                        \ the given CSV data has\n                           an index\
                        \ already created. Note that a file handle\n             \
                        \              is opened for each job.\n                 \
                        \          When set to '0', the number of jobs is set to the\n\
                        \                           number of CPUs detected.\n   \
                        \                        [default: 0]\n\nCommon options:\n\
                        \    -h, --help             Display this message\n    -o,\
                        \ --output <file>    Write output to <file> instead of stdout.\n\
                        \    -n, --no-headers       When set, the first row will NOT\
                        \ be interpreted\n                           as column names.\
                        \ Otherwise, the first row will\n                        \
                        \   appear in all chunks as the header row.\n    -d, --delimiter\
                        \ <arg>  The field delimiter for reading CSV data.\n     \
                        \                      Must be a single character. (default:\
                        \ ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id020
                      - xsv
                      - table
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -w
                        - --width
                        description: "The minimum width of each column.\n[default:\
                          \ 2]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        - --pad
                        description: "The minimum number of spaces between each column.\n\
                          [default: 2]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        - --condense
                        description: "Limits the length of each field to the value\n\
                          specified. If the field is UTF-8 encoded, then\n<arg> refers\
                          \ to the number of code points.\nOtherwise, it refers to\
                          \ the number of bytes."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Outputs CSV data as a table with columns in alignment.\n\
                        \nThis will not work well if the CSV data contains large fields.\n\
                        \nNote that formatting a table requires buffering all CSV\
                        \ data into memory.\nTherefore, you should use the 'sample'\
                        \ or 'slice' command to trim down large\nCSV data before formatting\
                        \ it with this command.\n\nUsage:\n    xsv table [options]\
                        \ [<input>]\n\ntable options:\n    -w, --width <arg>     \
                        \ The minimum width of each column.\n                    \
                        \       [default: 2]\n    -p, --pad <arg>        The minimum\
                        \ number of spaces between each column.\n                \
                        \           [default: 2]\n    -c, --condense <arg>  Limits\
                        \ the length of each field to the value\n                \
                        \           specified. If the field is UTF-8 encoded, then\n\
                        \                           <arg> refers to the number of\
                        \ code points.\n                           Otherwise, it refers\
                        \ to the number of bytes.\n\nCommon options:\n    -h, --help\
                        \             Display this message\n    -o, --output <file>\
                        \    Write output to <file> instead of stdout.\n    -d, --delimiter\
                        \ <arg>  The field delimiter for reading CSV data.\n     \
                        \                      Must be a single character. (default:\
                        \ ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id021
                      - xsv
                      - stats
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --select
                        description: "Select a subset of columns to compute stats\
                          \ for.\nSee 'xsv select --help' for the format details.\n\
                          This is provided here because piping 'xsv select'\ninto\
                          \ 'xsv stats' will disable the use of indexing."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - --everything
                        description: Show all statistics available.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --mode
                        description: "Show the mode.\nThis requires storing all CSV\
                          \ data in memory."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --cardinality
                        description: "Show the cardinality.\nThis requires storing\
                          \ all CSV data in memory."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --median
                        description: "Show the median.\nThis requires storing all\
                          \ CSV data in memory."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --nulls
                        description: "Include NULLs in the population size for computing\n\
                          mean and standard deviation."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        - --jobs
                        description: "The number of jobs to run in parallel.\nThis\
                          \ works better when the given CSV data has\nan index already\
                          \ created. Note that a file handle\nis opened for each job.\n\
                          When set to '0', the number of jobs is set to the\nnumber\
                          \ of CPUs detected.\n[default: 0]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will NOT be interpreted\n\
                          as column names. i.e., They will be included\nin statistics."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Computes basic statistics on CSV data.\n\nBasic\
                        \ statistics includes mean, median, mode, standard deviation,\
                        \ sum, max and\nmin values. Note that some statistics are\
                        \ expensive to compute, so they must\nbe enabled explicitly.\
                        \ By default, the following statistics are reported for\n\
                        *every* column in the CSV data: mean, max, min and standard\
                        \ deviation. The\ndefault set of statistics corresponds to\
                        \ statistics that can be computed\nefficiently on a stream\
                        \ of data (i.e., constant memory).\n\nComputing statistics\
                        \ on a large file can be made much faster if you create\n\
                        an index for it first with 'xsv index'.\n\nUsage:\n    xsv\
                        \ stats [options] [<input>]\n\nstats options:\n    -s, --select\
                        \ <arg>     Select a subset of columns to compute stats for.\n\
                        \                           See 'xsv select --help' for the\
                        \ format details.\n                           This is provided\
                        \ here because piping 'xsv select'\n                     \
                        \      into 'xsv stats' will disable the use of indexing.\n\
                        \    --everything           Show all statistics available.\n\
                        \    --mode                 Show the mode.\n             \
                        \              This requires storing all CSV data in memory.\n\
                        \    --cardinality          Show the cardinality.\n      \
                        \                     This requires storing all CSV data in\
                        \ memory.\n    --median               Show the median.\n \
                        \                          This requires storing all CSV data\
                        \ in memory.\n    --nulls                Include NULLs in\
                        \ the population size for computing\n                    \
                        \       mean and standard deviation.\n    -j, --jobs <arg>\
                        \       The number of jobs to run in parallel.\n         \
                        \                  This works better when the given CSV data\
                        \ has\n                           an index already created.\
                        \ Note that a file handle\n                           is opened\
                        \ for each job.\n                           When set to '0',\
                        \ the number of jobs is set to the\n                     \
                        \      number of CPUs detected.\n                        \
                        \   [default: 0]\n\nCommon options:\n    -h, --help      \
                        \       Display this message\n    -o, --output <file>    Write\
                        \ output to <file> instead of stdout.\n    -n, --no-headers\
                        \       When set, the first row will NOT be interpreted\n\
                        \                           as column names. i.e., They will\
                        \ be included\n                           in statistics.\n\
                        \    -d, --delimiter <arg>  The field delimiter for reading\
                        \ CSV data.\n                           Must be a single character.\
                        \ (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id022
                      - xsv
                      - sample
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: sample-size
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will be consider as\
                          \ part of\nthe population to sample from. (When not set,\
                          \ the\nfirst row is the header row and will always appear\n\
                          in the output.)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Randomly samples CSV data uniformly using memory\
                        \ proportional to the size of\nthe sample.\n\nWhen an index\
                        \ is present, this command will use random indexing if the\
                        \ sample\nsize is less than 10% of the total number of records.\
                        \ This allows for efficient\nsampling such that the entire\
                        \ CSV file is not parsed.\n\nThis command is intended to provide\
                        \ a means to sample from a CSV data set that\nis too big to\
                        \ fit into memory (for example, for use with commands like\
                        \ 'xsv\nfrequency' or 'xsv stats'). It will however visit\
                        \ every CSV record exactly\nonce, which is necessary to provide\
                        \ a uniform random sample. If you wish to\nlimit the number\
                        \ of records visited, use the 'xsv slice' command to pipe\
                        \ into\n'xsv sample'.\n\nUsage:\n    xsv sample [options]\
                        \ <sample-size> [<input>]\n    xsv sample --help\n\nCommon\
                        \ options:\n    -h, --help             Display this message\n\
                        \    -o, --output <file>    Write output to <file> instead\
                        \ of stdout.\n    -n, --no-headers       When set, the first\
                        \ row will be consider as part of\n                      \
                        \     the population to sample from. (When not set, the\n\
                        \                           first row is the header row and\
                        \ will always appear\n                           in the output.)\n\
                        \    -d, --delimiter <arg>  The field delimiter for reading\
                        \ CSV data.\n                           Must be a single character.\
                        \ (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id023
                      - xsv
                      - fmt
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        - --out-delimiter
                        description: "The field delimiter for writing CSV data.\n\
                          [default: ,]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - --crlf
                        description: Use '\r\n' line endings in the output.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --ascii
                        description: Use ASCII field and record separators.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --quote
                        description: 'The quote character to use. [default: "]'
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - --quote-always
                        description: Put quotes around every value.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --escape
                        description: "The escape character to use. When not specified,\n\
                          quotes are escaped by doubling them."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. [default: ,]\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Formats CSV data with a custom delimiter or CRLF\
                        \ line endings.\n\nGenerally, all commands in xsv output CSV\
                        \ data in a default format, which is\nthe same as the default\
                        \ format for reading CSV data. This makes it easy to\npipe\
                        \ multiple xsv commands together. However, you may want the\
                        \ final result to\nhave a specific delimiter or record separator,\
                        \ and this is where 'xsv fmt' is\nuseful.\n\nUsage:\n    xsv\
                        \ fmt [options] [<input>]\n\nfmt options:\n    -t, --out-delimiter\
                        \ <arg>  The field delimiter for writing CSV data.\n     \
                        \                          [default: ,]\n    --crlf      \
                        \               Use '\\r\\n' line endings in the output.\n\
                        \    --ascii                    Use ASCII field and record\
                        \ separators.\n    --quote <arg>              The quote character\
                        \ to use. [default: \"]\n    --quote-always             Put\
                        \ quotes around every value.\n    --escape <arg>         \
                        \    The escape character to use. When not specified,\n  \
                        \                             quotes are escaped by doubling\
                        \ them.\n\nCommon options:\n    -h, --help             Display\
                        \ this message\n    -o, --output <file>    Write output to\
                        \ <file> instead of stdout.\n    -d, --delimiter <arg>  The\
                        \ field delimiter for reading CSV data.\n                \
                        \           Must be a single character. [default: ,]\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id024
                      - xsv
                      - frequency
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --select
                        description: "Select a subset of columns to compute frequencies\n\
                          for. See 'xsv select --help' for the format\ndetails. This\
                          \ is provided here because piping 'xsv\nselect' into 'xsv\
                          \ frequency' will disable the use\nof indexing."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        - --limit
                        description: "Limit the frequency table to the N most common\n\
                          items. Set to '0' to disable a limit.\n[default: 10]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --asc
                        description: "Sort the frequency tables in ascending order\
                          \ by\ncount. The default is descending order."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-nulls
                        description: Don't include NULLs in the frequency table.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        - --jobs
                        description: "The number of jobs to run in parallel.\nThis\
                          \ works better when the given CSV data has\nan index already\
                          \ created. Note that a file handle\nis opened for each job.\n\
                          When set to '0', the number of jobs is set to the\nnumber\
                          \ of CPUs detected.\n[default: 0]"
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will NOT be included\n\
                          in the frequency table. Additionally, the 'field'\ncolumn\
                          \ will be 1-based indices instead of header\nnames."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Compute a frequency table on CSV data.\n\nThe frequency\
                        \ table is formatted as CSV data:\n\n    field,value,count\n\
                        \nBy default, there is a row for the N most frequent values\
                        \ for each field in the\ndata. The order and number of values\
                        \ can be tweaked with --asc and --limit,\nrespectively.\n\n\
                        Since this computes an exact frequency table, memory proportional\
                        \ to the\ncardinality of each column is required.\n\nUsage:\n\
                        \    xsv frequency [options] [<input>]\n\nfrequency options:\n\
                        \    -s, --select <arg>     Select a subset of columns to\
                        \ compute frequencies\n                           for. See\
                        \ 'xsv select --help' for the format\n                   \
                        \        details. This is provided here because piping 'xsv\n\
                        \                           select' into 'xsv frequency' will\
                        \ disable the use\n                           of indexing.\n\
                        \    -l, --limit <arg>      Limit the frequency table to the\
                        \ N most common\n                           items. Set to\
                        \ '0' to disable a limit.\n                           [default:\
                        \ 10]\n    -a, --asc              Sort the frequency tables\
                        \ in ascending order by\n                           count.\
                        \ The default is descending order.\n    --no-nulls       \
                        \      Don't include NULLs in the frequency table.\n    -j,\
                        \ --jobs <arg>       The number of jobs to run in parallel.\n\
                        \                           This works better when the given\
                        \ CSV data has\n                           an index already\
                        \ created. Note that a file handle\n                     \
                        \      is opened for each job.\n                         \
                        \  When set to '0', the number of jobs is set to the\n   \
                        \                        number of CPUs detected.\n      \
                        \                     [default: 0]\n\nCommon options:\n  \
                        \  -h, --help             Display this message\n    -o, --output\
                        \ <file>    Write output to <file> instead of stdout.\n  \
                        \  -n, --no-headers       When set, the first row will NOT\
                        \ be included\n                           in the frequency\
                        \ table. Additionally, the 'field'\n                     \
                        \      column will be 1-based indices instead of header\n\
                        \                           names.\n    -d, --delimiter <arg>\
                        \  The field delimiter for reading CSV data.\n           \
                        \                Must be a single character. (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id025
                      - xsv
                      - sort
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        - --select
                        description: "Select a subset of columns to sort.\nSee 'xsv\
                          \ select --help' for the format details."
                        args: !SimpleFlagArg
                          name: arg
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Write output to <file> instead of stdout.
                        args: !SimpleFlagArg
                          name: file
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --no-headers
                        description: "When set, the first row will not be interpreted\n\
                          as headers. Namely, it will be sorted with the rest\nof\
                          \ the rows. Otherwise, the first row will always\nappear\
                          \ as the header row in the output."
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --delimiter
                        description: "The field delimiter for reading CSV data.\n\
                          Must be a single character. (default: ,)\n"
                        args: !SimpleFlagArg
                          name: arg
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: Display this message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "Sorts CSV data lexicographically.\n\nNote that this\
                        \ requires reading all of the CSV data into memory.\n\nUsage:\n\
                        \    xsv sort [options] [<input>]\n\nsort options:\n    -s,\
                        \ --select <arg>     Select a subset of columns to sort.\n\
                        \                           See 'xsv select --help' for the\
                        \ format details.\n\nCommon options:\n    -h, --help     \
                        \        Display this message\n    -o, --output <file>   \
                        \ Write output to <file> instead of stdout.\n    -n, --no-headers\
                        \       When set, the first row will not be interpreted\n\
                        \                           as headers. Namely, it will be\
                        \ sorted with the rest\n                           of the\
                        \ rows. Otherwise, the first row will always\n           \
                        \                appear as the header row in the output.\n\
                        \    -d, --delimiter <arg>  The field delimiter for reading\
                        \ CSV data.\n                           Must be a single character.\
                        \ (default: ,)\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: Display this message
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag: !Flag
                      optional: true
                      synonyms:
                      - --version
                      description: Print version info and exit
                      args: !EmptyFlagArg {}
                    help_text: "Usage:\n    xsv <command> [<args>...]\n    xsv [options]\n\
                      \nOptions:\n    --list        List all commands available.\n\
                      \    -h, --help    Display this message\n    --version     Print\
                      \ version info and exit\n\nCommands:\n    cat         Concatenate\
                      \ by row or column\n    count       Count records\n    fixlengths\
                      \  Makes all records have same length\n    flatten     Show\
                      \ one field per line\n    fmt         Format CSV output (change\
                      \ field delimiter)\n    frequency   Show frequency tables\n\
                      \    headers     Show header names\n    help        Show this\
                      \ usage message.\n    index       Create CSV index for faster\
                      \ access\n    input       Read CSV data with special quoting\
                      \ rules\n    join        Join CSV files\n    sample      Randomly\
                      \ sample CSV data\n    search      Search CSV data with regexes\n\
                      \    select      Select columns from CSV\n    slice       Slice\
                      \ records from CSV\n    sort        Sort CSV data\n    split\
                      \       Split CSV data into many files\n    stats       Compute\
                      \ basic statistics\n    table       Align CSV data into columns\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Prints the fields of the first row in the CSV data.\n\
                    \nThese names can be used in commands like 'select' to refer to\
                    \ columns in the\nCSV data.\n\nNote that multiple CSV files may\
                    \ be given to this command. This is useful with\nthe --intersect\
                    \ flag.\n\nUsage:\n    xsv headers [options] [<input>...]\n\n\
                    headers options:\n    -j, --just-names       Only show the header\
                    \ names (hide column index).\n                           This\
                    \ is automatically enabled if more than one\n                \
                    \           input is given.\n    --intersect            Shows\
                    \ the intersection of all headers in all of\n                \
                    \           the inputs given.\n\nCommon options:\n    -h, --help\
                    \             Display this message\n    -d, --delimiter <arg>\
                    \  The field delimiter for reading CSV data.\n               \
                    \            Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --quote
                    description: 'The quote character to use. [default: "]'
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - --escape
                    description: "The escape character to use. When not specified,\n\
                      quotes are escaped by doubling them."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. [default: ,]\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Read CSV data with special quoting rules.\n\nGenerally,\
                    \ all xsv commands support basic options like specifying the delimiter\n\
                    used in CSV data. This does not cover all possible types of CSV\
                    \ data. For\nexample, some CSV files don't use '\"' for quotes\
                    \ or use different escaping\nstyles.\n\nUsage:\n    xsv input\
                    \ [options] [<input>]\n\ninput options:\n    --quote <arg>   \
                    \       The quote character to use. [default: \"]\n    --escape\
                    \ <arg>         The escape character to use. When not specified,\n\
                    \                           quotes are escaped by doubling them.\n\
                    \nCommon options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -d, --delimiter <arg>  The field delimiter for\
                    \ reading CSV data.\n                           Must be a single\
                    \ character. [default: ,]\n"
                  generated_using: *id004
                  docker_image:
                - &id027 !Command
                  command: *id007
                  positional: []
                  named: []
                  parent: *id003
                  subcommands:
                  - !Command
                    command: *id008
                    positional:
                    - !Positional
                      optional: false
                      position: 0
                      name: input1
                      description: ''
                    - !Positional
                      optional: false
                      position: 0
                      name: xsv
                      description: ''
                    - !Positional
                      optional: false
                      position: 1
                      name: columns2
                      description: ''
                    - !Positional
                      optional: false
                      position: 1
                      name: join
                      description: ''
                    named: []
                    parent: *id005
                    subcommands: []
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options]\
                      \ <columns1> <input1> <columns2> <input2>\n    xsv join --help\n"
                    generated_using: *id004
                    docker_image:
                  - !Command
                    command: *id009
                    positional:
                    - !Positional
                      optional: false
                      position: 0
                      name: xsv
                      description: ''
                    - !Positional
                      optional: false
                      position: 1
                      name: join
                      description: ''
                    - !Positional
                      optional: false
                      position: 2
                      name: columns1
                      description: ''
                    - !Positional
                      optional: false
                      position: 3
                      name: input1
                      description: ''
                    - !Positional
                      optional: false
                      position: 4
                      name: columns2
                      description: ''
                    named: []
                    parent: *id005
                    subcommands: []
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options]\
                      \ <columns1> <input1> <columns2> <input2>\n    xsv join --help\n"
                    generated_using: *id004
                    docker_image:
                  - !Command
                    command: *id010
                    positional:
                    - !Positional
                      optional: false
                      position: 0
                      name: xsv
                      description: ''
                    - !Positional
                      optional: false
                      position: 1
                      name: join
                      description: ''
                    - !Positional
                      optional: false
                      position: 2
                      name: columns1
                      description: ''
                    - !Positional
                      optional: false
                      position: 3
                      name: input1
                      description: ''
                    - !Positional
                      optional: false
                      position: 4
                      name: columns2
                      description: ''
                    named: []
                    parent: *id005
                    subcommands: []
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options]\
                      \ <columns1> <input1> <columns2> <input2>\n    xsv join --help\n"
                    generated_using: *id004
                    docker_image:
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "Joins two sets of CSV data on the specified columns.\n\
                    \nThe default join operation is an 'inner' join. This corresponds\
                    \ to the\nintersection of rows on the keys specified.\n\nJoins\
                    \ are always done by ignoring leading and trailing whitespace.\
                    \ By default,\njoins are done case sensitively, but this can be\
                    \ disabled with the --no-case\nflag.\n\nThe columns arguments\
                    \ specify the columns to join for each input. Columns can\nbe\
                    \ referenced by name or index, starting at 1. Specify multiple\
                    \ columns by\nseparating them with a comma. Specify a range of\
                    \ columns with `-`. Both\ncolumns1 and columns2 must specify exactly\
                    \ the same number of columns.\n(See 'xsv select --help' for the\
                    \ full syntax.)\n\nUsage:\n    xsv join [options] <columns1> <input1>\
                    \ <columns2> <input2>\n    xsv join --help\n\njoin options:\n\
                    \    --no-case              When set, joins are done case insensitively.\n\
                    \    --left                 Do a 'left outer' join. This returns\
                    \ all rows in\n                           first CSV data set,\
                    \ including rows with no\n                           corresponding\
                    \ row in the second data set. When no\n                      \
                    \     corresponding row exists, it is padded out with\n      \
                    \                     empty fields.\n    --right             \
                    \   Do a 'right outer' join. This returns all rows in\n      \
                    \                     second CSV data set, including rows with\
                    \ no\n                           corresponding row in the first\
                    \ data set. When no\n                           corresponding\
                    \ row exists, it is padded out with\n                        \
                    \   empty fields. (This is the reverse of 'outer left'.)\n   \
                    \ --full                 Do a 'full outer' join. This returns\
                    \ all rows in\n                           both data sets with\
                    \ matching records joined. If\n                           there\
                    \ is no match, the missing side will be padded\n             \
                    \              out with empty fields. (This is the combination\
                    \ of\n                           'outer left' and 'outer right'.)\n\
                    \    --cross                USE WITH CAUTION.\n              \
                    \             This returns the cartesian product of the CSV\n\
                    \                           data sets given. The number of rows\
                    \ return is\n                           equal to N * M, where\
                    \ N and M correspond to the\n                           number\
                    \ of rows in the given data sets, respectively.\n    --nulls \
                    \               When set, joins will work on empty fields.\n \
                    \                          Otherwise, empty fields are completely\
                    \ ignored.\n                           (In fact, any row that\
                    \ has an empty field in the\n                           key specified\
                    \ is ignored.)\n\nCommon options:\n    -h, --help            \
                    \ Display this message\n    -o, --output <file>    Write output\
                    \ to <file> instead of stdout.\n    -n, --no-headers       When\
                    \ set, the first row will not be interpreted\n               \
                    \            as headers. (i.e., They are not searched, analyzed,\n\
                    \                           sliced, etc.)\n    -d, --delimiter\
                    \ <arg>  The field delimiter for reading CSV data.\n         \
                    \                  Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id011
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will not be interpreted\n\
                      as headers. (i.e., They are not searched, analyzed,\nsliced,\
                      \ etc.)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Select columns from CSV data efficiently.\n\nThis command\
                    \ lets you manipulate the columns in CSV data. You can re-order\n\
                    them, duplicate them or drop them. Columns can be referenced by\
                    \ index or by\nname if there is a header row (duplicate column\
                    \ names can be disambiguated with\nmore indexing). Finally, column\
                    \ ranges can be specified.\n\n  Select the first and fourth columns:\n\
                    \  $ xsv select 1,4\n\n  Select the first 4 columns (by index\
                    \ and by name):\n  $ xsv select 1-4\n  $ xsv select Header1-Header4\n\
                    \n  Ignore the first 2 columns (by range and by omission):\n \
                    \ $ xsv select 3-\n  $ xsv select '!1-2'\n\n  Select the third\
                    \ column named 'Foo':\n  $ xsv select 'Foo[2]'\n\n  Re-order and\
                    \ duplicate columns arbitrarily:\n  $ xsv select 3-1,Header3-Header1,Header1,Foo[2],Header1\n\
                    \nUsage:\n    xsv select [options] [--] <selection> [<input>]\n\
                    \    xsv select --help\n\nCommon options:\n    -h, --help    \
                    \         Display this message\n    -o, --output <file>    Write\
                    \ output to <file> instead of stdout.\n    -n, --no-headers  \
                    \     When set, the first row will not be interpreted\n      \
                    \                     as headers. (i.e., They are not searched,\
                    \ analyzed,\n                           sliced, etc.)\n    -d,\
                    \ --delimiter <arg>  The field delimiter for reading CSV data.\n\
                    \                           Must be a single character. (default:\
                    \ ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id012
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    - --length
                    description: "Forcefully set the length of each record. If a\n\
                      record is not the size given, then it is truncated\nor expanded\
                      \ as appropriate."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Transforms CSV data so that all records have the same\
                    \ length. The length is\nthe length of the longest record in the\
                    \ data. Records with smaller lengths are\npadded with empty fields.\n\
                    \nThis requires two complete scans of the CSV data: one for determining\
                    \ the\nrecord size and one for the actual transform. Because of\
                    \ this, the input\ngiven must be a file and not stdin.\n\nAlternatively,\
                    \ if --length is set, then all records are forced to that length.\n\
                    This requires a single pass and can be done with stdin.\n\nUsage:\n\
                    \    xsv fixlengths [options] [<input>]\n\nfixlengths options:\n\
                    \    -l, --length <arg>     Forcefully set the length of each\
                    \ record. If a\n                           record is not the size\
                    \ given, then it is truncated\n                           or expanded\
                    \ as appropriate.\n\nCommon options:\n    -h, --help         \
                    \    Display this message\n    -o, --output <file>    Write output\
                    \ to <file> instead of stdout.\n    -d, --delimiter <arg>  The\
                    \ field delimiter for reading CSV data.\n                    \
                    \       Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id013
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: regex
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --ignore-case
                    description: "Case insensitive search. This is equivalent to\n\
                      prefixing the regex with '(?i)'."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --select
                    description: "Select the columns to search. See 'xsv select -h'\n\
                      for the full syntax."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    - --invert-match
                    description: Select only rows that did not match
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will not be interpreted\n\
                      as headers. (i.e., They are not searched, analyzed,\nsliced,\
                      \ etc.)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Filters CSV data by whether the given regex matches\
                    \ a row.\n\nThe regex is applied to each field in each row, and\
                    \ if any field matches,\nthen the row is written to the output.\
                    \ The columns to search can be limited\nwith the '--select' flag\
                    \ (but the full row is still written to the output if\nthere is\
                    \ a match).\n\nUsage:\n    xsv search [options] <regex> [<input>]\n\
                    \    xsv search --help\n\nsearch options:\n    -i, --ignore-case\
                    \      Case insensitive search. This is equivalent to\n      \
                    \                     prefixing the regex with '(?i)'.\n    -s,\
                    \ --select <arg>     Select the columns to search. See 'xsv select\
                    \ -h'\n                           for the full syntax.\n    -v,\
                    \ --invert-match     Select only rows that did not match\n\nCommon\
                    \ options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -n, --no-headers       When set, the first row\
                    \ will not be interpreted\n                           as headers.\
                    \ (i.e., They are not searched, analyzed,\n                  \
                    \         sliced, etc.)\n    -d, --delimiter <arg>  The field\
                    \ delimiter for reading CSV data.\n                          \
                    \ Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id014
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: "Write index to <file> instead of <input>.idx.\n\
                      Generally, this is not currently useful because\nthe only way\
                      \ to use an index is if it is specially\nnamed <input>.idx."
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Creates an index of the given CSV data, which can make\
                    \ other operations like\nslicing, splitting and gathering statistics\
                    \ much faster.\n\nNote that this does not accept CSV data on stdin.\
                    \ You must give a file\npath. The index is created at 'path/to/input.csv.idx'.\
                    \ The index will be\nautomatically used by commands that can benefit\
                    \ from it. If the original CSV\ndata changes after the index is\
                    \ made, commands that try to use it will result\nin an error (you\
                    \ have to regenerate the index before it can be used again).\n\
                    \nUsage:\n    xsv index [options] <input>\n    xsv index --help\n\
                    \nindex options:\n    -o, --output <file>    Write index to <file>\
                    \ instead of <input>.idx.\n                           Generally,\
                    \ this is not currently useful because\n                     \
                    \      the only way to use an index is if it is specially\n  \
                    \                         named <input>.idx.\n\nCommon options:\n\
                    \    -h, --help             Display this message\n    -d, --delimiter\
                    \ <arg>  The field delimiter for reading CSV data.\n         \
                    \                  Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id015
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --start
                    description: The index of the record to slice from.
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -e
                    - --end
                    description: The index of the record to slice to.
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    - --len
                    description: "The length of the slice (can be used instead\nof\
                      \ --end)."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --index
                    description: Slice a single record (shortcut for -s N -l 1).
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will not be interpreted\n\
                      as headers. Otherwise, the first row will always\nappear in\
                      \ the output as the header row."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Returns the rows in the range specified (starting at\
                    \ 0, half-open interval).\nThe range does not include headers.\n\
                    \nIf the start of the range isn't specified, then the slice starts\
                    \ from the first\nrecord in the CSV data.\n\nIf the end of the\
                    \ range isn't specified, then the slice continues to the last\n\
                    record in the CSV data.\n\nThis operation can be made much faster\
                    \ by creating an index with 'xsv index'\nfirst. Namely, a slice\
                    \ on an index requires parsing just the rows that are\nsliced.\
                    \ Without an index, all rows up to the first row in the slice\
                    \ must be\nparsed.\n\nUsage:\n    xsv slice [options] [<input>]\n\
                    \nslice options:\n    -s, --start <arg>      The index of the\
                    \ record to slice from.\n    -e, --end <arg>        The index\
                    \ of the record to slice to.\n    -l, --len <arg>        The length\
                    \ of the slice (can be used instead\n                        \
                    \   of --end).\n    -i, --index <arg>      Slice a single record\
                    \ (shortcut for -s N -l 1).\n\nCommon options:\n    -h, --help\
                    \             Display this message\n    -o, --output <file>  \
                    \  Write output to <file> instead of stdout.\n    -n, --no-headers\
                    \       When set, the first row will not be interpreted\n    \
                    \                       as headers. Otherwise, the first row will\
                    \ always\n                           appear in the output as the\
                    \ header row.\n    -d, --delimiter <arg>  The field delimiter\
                    \ for reading CSV data.\n                           Must be a\
                    \ single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id016
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: columns
                    description: ''
                  - !Positional
                    optional: false
                    position: 0
                    name: rows
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    - --pad
                    description: "When concatenating columns, this flag will cause\n\
                      all records to appear. It will pad each row if\nother CSV data\
                      \ isn't long enough."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will NOT be interpreted\n\
                      as column names. Note that this has no effect when\nconcatenating\
                      \ columns."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Concatenates CSV data by column or by row.\n\nWhen concatenating\
                    \ by column, the columns will be written in the same order as\n\
                    the inputs given. The number of rows in the result is always equivalent\
                    \ to to\nthe minimum number of rows across all given CSV data.\
                    \ (This behavior can be\nreversed with the '--pad' flag.)\n\n\
                    When concatenating by row, all CSV data must have the same number\
                    \ of columns.\nIf you need to rearrange the columns or fix the\
                    \ lengths of records, use the\n'select' or 'fixlengths' commands.\
                    \ Also, only the headers of the *first* CSV\ndata given are used.\
                    \ Headers in subsequent inputs are ignored. (This behavior\ncan\
                    \ be disabled with --no-headers.)\n\nUsage:\n    xsv cat rows\
                    \    [options] [<input>...]\n    xsv cat columns [options] [<input>...]\n\
                    \    xsv cat --help\n\ncat options:\n    -p, --pad           \
                    \   When concatenating columns, this flag will cause\n       \
                    \                    all records to appear. It will pad each row\
                    \ if\n                           other CSV data isn't long enough.\n\
                    \nCommon options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -n, --no-headers       When set, the first row\
                    \ will NOT be interpreted\n                           as column\
                    \ names. Note that this has no effect when\n                 \
                    \          concatenating columns.\n    -d, --delimiter <arg> \
                    \ The field delimiter for reading CSV data.\n                \
                    \           Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id017
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will not be included in\n\
                      the count."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Prints a count of the number of records in the CSV data.\n\
                    \nNote that the count will not include the header row (unless\
                    \ --no-headers is\ngiven).\n\nUsage:\n    xsv count [options]\
                    \ [<input>]\n\nCommon options:\n    -h, --help             Display\
                    \ this message\n    -n, --no-headers       When set, the first\
                    \ row will not be included in\n                           the\
                    \ count.\n    -d, --delimiter <arg>  The field delimiter for reading\
                    \ CSV data.\n                           Must be a single character.\
                    \ (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id018
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    - --condense
                    description: "Limits the length of each field to the value\nspecified.\
                      \ If the field is UTF-8 encoded, then\n<arg> refers to the number\
                      \ of code points.\nOtherwise, it refers to the number of bytes."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --separator
                    description: "A string of characters to write after each record.\n\
                      When non-empty, a new line is automatically\nappended to the\
                      \ separator.\n[default: #]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will not be interpreted\n\
                      as headers. When set, the name of each field\nwill be its index."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Prints flattened records such that fields are labeled\
                    \ separated by a new line.\nThis mode is particularly useful for\
                    \ viewing one record at a time. Each\nrecord is separated by a\
                    \ special '#' character (on a line by itself), which\ncan be changed\
                    \ with the --separator flag.\n\nThere is also a condensed view\
                    \ (-c or --condense) that will shorten the\ncontents of each field\
                    \ to provide a summary view.\n\nUsage:\n    xsv flatten [options]\
                    \ [<input>]\n\nflatten options:\n    -c, --condense <arg>  Limits\
                    \ the length of each field to the value\n                    \
                    \       specified. If the field is UTF-8 encoded, then\n     \
                    \                      <arg> refers to the number of code points.\n\
                    \                           Otherwise, it refers to the number\
                    \ of bytes.\n    -s, --separator <arg>  A string of characters\
                    \ to write after each record.\n                           When\
                    \ non-empty, a new line is automatically\n                   \
                    \        appended to the separator.\n                        \
                    \   [default: #]\n\nCommon options:\n    -h, --help          \
                    \   Display this message\n    -n, --no-headers       When set,\
                    \ the first row will not be interpreted\n                    \
                    \       as headers. When set, the name of each field\n       \
                    \                    will be its index.\n    -d, --delimiter <arg>\
                    \  The field delimiter for reading CSV data.\n               \
                    \            Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id019
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: outdir
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --size
                    description: "The number of records to write into each chunk.\n\
                      [default: 500]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    - --jobs
                    description: "The number of spliting jobs to run in parallel.\n\
                      This only works when the given CSV data has\nan index already\
                      \ created. Note that a file handle\nis opened for each job.\n\
                      When set to '0', the number of jobs is set to the\nnumber of\
                      \ CPUs detected.\n[default: 0]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will NOT be interpreted\n\
                      as column names. Otherwise, the first row will\nappear in all\
                      \ chunks as the header row."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Splits the given CSV data into chunks.\n\nThe files\
                    \ are written to the directory given with the name '{start}.csv',\n\
                    where {start} is the index of the first record of the chunk (starting\
                    \ at 0).\n\nUsage:\n    xsv split [options] <outdir> [<input>]\n\
                    \    xsv split --help\n\nsplit options:\n    -s, --size <arg>\
                    \       The number of records to write into each chunk.\n    \
                    \                       [default: 500]\n    -j, --jobs <arg> \
                    \      The number of spliting jobs to run in parallel.\n     \
                    \                      This only works when the given CSV data\
                    \ has\n                           an index already created. Note\
                    \ that a file handle\n                           is opened for\
                    \ each job.\n                           When set to '0', the number\
                    \ of jobs is set to the\n                           number of\
                    \ CPUs detected.\n                           [default: 0]\n\n\
                    Common options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -n, --no-headers       When set, the first row\
                    \ will NOT be interpreted\n                           as column\
                    \ names. Otherwise, the first row will\n                     \
                    \      appear in all chunks as the header row.\n    -d, --delimiter\
                    \ <arg>  The field delimiter for reading CSV data.\n         \
                    \                  Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id020
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -w
                    - --width
                    description: "The minimum width of each column.\n[default: 2]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    - --pad
                    description: "The minimum number of spaces between each column.\n\
                      [default: 2]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    - --condense
                    description: "Limits the length of each field to the value\nspecified.\
                      \ If the field is UTF-8 encoded, then\n<arg> refers to the number\
                      \ of code points.\nOtherwise, it refers to the number of bytes."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Outputs CSV data as a table with columns in alignment.\n\
                    \nThis will not work well if the CSV data contains large fields.\n\
                    \nNote that formatting a table requires buffering all CSV data\
                    \ into memory.\nTherefore, you should use the 'sample' or 'slice'\
                    \ command to trim down large\nCSV data before formatting it with\
                    \ this command.\n\nUsage:\n    xsv table [options] [<input>]\n\
                    \ntable options:\n    -w, --width <arg>      The minimum width\
                    \ of each column.\n                           [default: 2]\n \
                    \   -p, --pad <arg>        The minimum number of spaces between\
                    \ each column.\n                           [default: 2]\n    -c,\
                    \ --condense <arg>  Limits the length of each field to the value\n\
                    \                           specified. If the field is UTF-8 encoded,\
                    \ then\n                           <arg> refers to the number\
                    \ of code points.\n                           Otherwise, it refers\
                    \ to the number of bytes.\n\nCommon options:\n    -h, --help \
                    \            Display this message\n    -o, --output <file>   \
                    \ Write output to <file> instead of stdout.\n    -d, --delimiter\
                    \ <arg>  The field delimiter for reading CSV data.\n         \
                    \                  Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id021
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --select
                    description: "Select a subset of columns to compute stats for.\n\
                      See 'xsv select --help' for the format details.\nThis is provided\
                      \ here because piping 'xsv select'\ninto 'xsv stats' will disable\
                      \ the use of indexing."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - --everything
                    description: Show all statistics available.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --mode
                    description: "Show the mode.\nThis requires storing all CSV data\
                      \ in memory."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --cardinality
                    description: "Show the cardinality.\nThis requires storing all\
                      \ CSV data in memory."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --median
                    description: "Show the median.\nThis requires storing all CSV\
                      \ data in memory."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --nulls
                    description: "Include NULLs in the population size for computing\n\
                      mean and standard deviation."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    - --jobs
                    description: "The number of jobs to run in parallel.\nThis works\
                      \ better when the given CSV data has\nan index already created.\
                      \ Note that a file handle\nis opened for each job.\nWhen set\
                      \ to '0', the number of jobs is set to the\nnumber of CPUs detected.\n\
                      [default: 0]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will NOT be interpreted\n\
                      as column names. i.e., They will be included\nin statistics."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Computes basic statistics on CSV data.\n\nBasic statistics\
                    \ includes mean, median, mode, standard deviation, sum, max and\n\
                    min values. Note that some statistics are expensive to compute,\
                    \ so they must\nbe enabled explicitly. By default, the following\
                    \ statistics are reported for\n*every* column in the CSV data:\
                    \ mean, max, min and standard deviation. The\ndefault set of statistics\
                    \ corresponds to statistics that can be computed\nefficiently\
                    \ on a stream of data (i.e., constant memory).\n\nComputing statistics\
                    \ on a large file can be made much faster if you create\nan index\
                    \ for it first with 'xsv index'.\n\nUsage:\n    xsv stats [options]\
                    \ [<input>]\n\nstats options:\n    -s, --select <arg>     Select\
                    \ a subset of columns to compute stats for.\n                \
                    \           See 'xsv select --help' for the format details.\n\
                    \                           This is provided here because piping\
                    \ 'xsv select'\n                           into 'xsv stats' will\
                    \ disable the use of indexing.\n    --everything           Show\
                    \ all statistics available.\n    --mode                 Show the\
                    \ mode.\n                           This requires storing all\
                    \ CSV data in memory.\n    --cardinality          Show the cardinality.\n\
                    \                           This requires storing all CSV data\
                    \ in memory.\n    --median               Show the median.\n  \
                    \                         This requires storing all CSV data in\
                    \ memory.\n    --nulls                Include NULLs in the population\
                    \ size for computing\n                           mean and standard\
                    \ deviation.\n    -j, --jobs <arg>       The number of jobs to\
                    \ run in parallel.\n                           This works better\
                    \ when the given CSV data has\n                           an index\
                    \ already created. Note that a file handle\n                 \
                    \          is opened for each job.\n                         \
                    \  When set to '0', the number of jobs is set to the\n       \
                    \                    number of CPUs detected.\n              \
                    \             [default: 0]\n\nCommon options:\n    -h, --help\
                    \             Display this message\n    -o, --output <file>  \
                    \  Write output to <file> instead of stdout.\n    -n, --no-headers\
                    \       When set, the first row will NOT be interpreted\n    \
                    \                       as column names. i.e., They will be included\n\
                    \                           in statistics.\n    -d, --delimiter\
                    \ <arg>  The field delimiter for reading CSV data.\n         \
                    \                  Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id022
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: sample-size
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will be consider as part\
                      \ of\nthe population to sample from. (When not set, the\nfirst\
                      \ row is the header row and will always appear\nin the output.)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Randomly samples CSV data uniformly using memory proportional\
                    \ to the size of\nthe sample.\n\nWhen an index is present, this\
                    \ command will use random indexing if the sample\nsize is less\
                    \ than 10% of the total number of records. This allows for efficient\n\
                    sampling such that the entire CSV file is not parsed.\n\nThis\
                    \ command is intended to provide a means to sample from a CSV\
                    \ data set that\nis too big to fit into memory (for example, for\
                    \ use with commands like 'xsv\nfrequency' or 'xsv stats'). It\
                    \ will however visit every CSV record exactly\nonce, which is\
                    \ necessary to provide a uniform random sample. If you wish to\n\
                    limit the number of records visited, use the 'xsv slice' command\
                    \ to pipe into\n'xsv sample'.\n\nUsage:\n    xsv sample [options]\
                    \ <sample-size> [<input>]\n    xsv sample --help\n\nCommon options:\n\
                    \    -h, --help             Display this message\n    -o, --output\
                    \ <file>    Write output to <file> instead of stdout.\n    -n,\
                    \ --no-headers       When set, the first row will be consider\
                    \ as part of\n                           the population to sample\
                    \ from. (When not set, the\n                           first row\
                    \ is the header row and will always appear\n                 \
                    \          in the output.)\n    -d, --delimiter <arg>  The field\
                    \ delimiter for reading CSV data.\n                          \
                    \ Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id023
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    - --out-delimiter
                    description: "The field delimiter for writing CSV data.\n[default:\
                      \ ,]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - --crlf
                    description: Use '\r\n' line endings in the output.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --ascii
                    description: Use ASCII field and record separators.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --quote
                    description: 'The quote character to use. [default: "]'
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - --quote-always
                    description: Put quotes around every value.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --escape
                    description: "The escape character to use. When not specified,\n\
                      quotes are escaped by doubling them."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. [default: ,]\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Formats CSV data with a custom delimiter or CRLF line\
                    \ endings.\n\nGenerally, all commands in xsv output CSV data in\
                    \ a default format, which is\nthe same as the default format for\
                    \ reading CSV data. This makes it easy to\npipe multiple xsv commands\
                    \ together. However, you may want the final result to\nhave a\
                    \ specific delimiter or record separator, and this is where 'xsv\
                    \ fmt' is\nuseful.\n\nUsage:\n    xsv fmt [options] [<input>]\n\
                    \nfmt options:\n    -t, --out-delimiter <arg>  The field delimiter\
                    \ for writing CSV data.\n                               [default:\
                    \ ,]\n    --crlf                     Use '\\r\\n' line endings\
                    \ in the output.\n    --ascii                    Use ASCII field\
                    \ and record separators.\n    --quote <arg>              The quote\
                    \ character to use. [default: \"]\n    --quote-always        \
                    \     Put quotes around every value.\n    --escape <arg>     \
                    \        The escape character to use. When not specified,\n  \
                    \                             quotes are escaped by doubling them.\n\
                    \nCommon options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -d, --delimiter <arg>  The field delimiter for\
                    \ reading CSV data.\n                           Must be a single\
                    \ character. [default: ,]\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id024
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --select
                    description: "Select a subset of columns to compute frequencies\n\
                      for. See 'xsv select --help' for the format\ndetails. This is\
                      \ provided here because piping 'xsv\nselect' into 'xsv frequency'\
                      \ will disable the use\nof indexing."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    - --limit
                    description: "Limit the frequency table to the N most common\n\
                      items. Set to '0' to disable a limit.\n[default: 10]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    - --asc
                    description: "Sort the frequency tables in ascending order by\n\
                      count. The default is descending order."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-nulls
                    description: Don't include NULLs in the frequency table.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    - --jobs
                    description: "The number of jobs to run in parallel.\nThis works\
                      \ better when the given CSV data has\nan index already created.\
                      \ Note that a file handle\nis opened for each job.\nWhen set\
                      \ to '0', the number of jobs is set to the\nnumber of CPUs detected.\n\
                      [default: 0]"
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will NOT be included\nin\
                      \ the frequency table. Additionally, the 'field'\ncolumn will\
                      \ be 1-based indices instead of header\nnames."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Compute a frequency table on CSV data.\n\nThe frequency\
                    \ table is formatted as CSV data:\n\n    field,value,count\n\n\
                    By default, there is a row for the N most frequent values for\
                    \ each field in the\ndata. The order and number of values can\
                    \ be tweaked with --asc and --limit,\nrespectively.\n\nSince this\
                    \ computes an exact frequency table, memory proportional to the\n\
                    cardinality of each column is required.\n\nUsage:\n    xsv frequency\
                    \ [options] [<input>]\n\nfrequency options:\n    -s, --select\
                    \ <arg>     Select a subset of columns to compute frequencies\n\
                    \                           for. See 'xsv select --help' for the\
                    \ format\n                           details. This is provided\
                    \ here because piping 'xsv\n                           select'\
                    \ into 'xsv frequency' will disable the use\n                \
                    \           of indexing.\n    -l, --limit <arg>      Limit the\
                    \ frequency table to the N most common\n                     \
                    \      items. Set to '0' to disable a limit.\n               \
                    \            [default: 10]\n    -a, --asc              Sort the\
                    \ frequency tables in ascending order by\n                   \
                    \        count. The default is descending order.\n    --no-nulls\
                    \             Don't include NULLs in the frequency table.\n  \
                    \  -j, --jobs <arg>       The number of jobs to run in parallel.\n\
                    \                           This works better when the given CSV\
                    \ data has\n                           an index already created.\
                    \ Note that a file handle\n                           is opened\
                    \ for each job.\n                           When set to '0', the\
                    \ number of jobs is set to the\n                           number\
                    \ of CPUs detected.\n                           [default: 0]\n\
                    \nCommon options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -n, --no-headers       When set, the first row\
                    \ will NOT be included\n                           in the frequency\
                    \ table. Additionally, the 'field'\n                         \
                    \  column will be 1-based indices instead of header\n        \
                    \                   names.\n    -d, --delimiter <arg>  The field\
                    \ delimiter for reading CSV data.\n                          \
                    \ Must be a single character. (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id025
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    - --select
                    description: "Select a subset of columns to sort.\nSee 'xsv select\
                      \ --help' for the format details."
                    args: !SimpleFlagArg
                      name: arg
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Write output to <file> instead of stdout.
                    args: !SimpleFlagArg
                      name: file
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --no-headers
                    description: "When set, the first row will not be interpreted\n\
                      as headers. Namely, it will be sorted with the rest\nof the\
                      \ rows. Otherwise, the first row will always\nappear as the\
                      \ header row in the output."
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --delimiter
                    description: "The field delimiter for reading CSV data.\nMust\
                      \ be a single character. (default: ,)\n"
                    args: !SimpleFlagArg
                      name: arg
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: Display this message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "Sorts CSV data lexicographically.\n\nNote that this\
                    \ requires reading all of the CSV data into memory.\n\nUsage:\n\
                    \    xsv sort [options] [<input>]\n\nsort options:\n    -s, --select\
                    \ <arg>     Select a subset of columns to sort.\n            \
                    \               See 'xsv select --help' for the format details.\n\
                    \nCommon options:\n    -h, --help             Display this message\n\
                    \    -o, --output <file>    Write output to <file> instead of\
                    \ stdout.\n    -n, --no-headers       When set, the first row\
                    \ will not be interpreted\n                           as headers.\
                    \ Namely, it will be sorted with the rest\n                  \
                    \         of the rows. Otherwise, the first row will always\n\
                    \                           appear as the header row in the output.\n\
                    \    -d, --delimiter <arg>  The field delimiter for reading CSV\
                    \ data.\n                           Must be a single character.\
                    \ (default: ,)\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Usage:\n    xsv <command> [<args>...]\n    xsv [options]\n\
                  \nOptions:\n    --list        List all commands available.\n   \
                  \ -h, --help    Display this message\n    --version     Print version\
                  \ info and exit\n\nCommands:\n    cat         Concatenate by row\
                  \ or column\n    count       Count records\n    fixlengths  Makes\
                  \ all records have same length\n    flatten     Show one field per\
                  \ line\n    fmt         Format CSV output (change field delimiter)\n\
                  \    frequency   Show frequency tables\n    headers     Show header\
                  \ names\n    help        Show this usage message.\n    index   \
                  \    Create CSV index for faster access\n    input       Read CSV\
                  \ data with special quoting rules\n    join        Join CSV files\n\
                  \    sample      Randomly sample CSV data\n    search      Search\
                  \ CSV data with regexes\n    select      Select columns from CSV\n\
                  \    slice       Slice records from CSV\n    sort        Sort CSV\
                  \ data\n    split       Split CSV data into many files\n    stats\
                  \       Compute basic statistics\n    table       Align CSV data\
                  \ into columns\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Prints the fields of the first row in the CSV data.\n\n\
                These names can be used in commands like 'select' to refer to columns\
                \ in the\nCSV data.\n\nNote that multiple CSV files may be given to\
                \ this command. This is useful with\nthe --intersect flag.\n\nUsage:\n\
                \    xsv headers [options] [<input>...]\n\nheaders options:\n    -j,\
                \ --just-names       Only show the header names (hide column index).\n\
                \                           This is automatically enabled if more\
                \ than one\n                           input is given.\n    --intersect\
                \            Shows the intersection of all headers in all of\n   \
                \                        the inputs given.\n\nCommon options:\n  \
                \  -h, --help             Display this message\n    -d, --delimiter\
                \ <arg>  The field delimiter for reading CSV data.\n             \
                \              Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --quote
                description: 'The quote character to use. [default: "]'
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - --escape
                description: "The escape character to use. When not specified,\nquotes\
                  \ are escaped by doubling them."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. [default: ,]\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Read CSV data with special quoting rules.\n\nGenerally,\
                \ all xsv commands support basic options like specifying the delimiter\n\
                used in CSV data. This does not cover all possible types of CSV data.\
                \ For\nexample, some CSV files don't use '\"' for quotes or use different\
                \ escaping\nstyles.\n\nUsage:\n    xsv input [options] [<input>]\n\
                \ninput options:\n    --quote <arg>          The quote character to\
                \ use. [default: \"]\n    --escape <arg>         The escape character\
                \ to use. When not specified,\n                           quotes are\
                \ escaped by doubling them.\n\nCommon options:\n    -h, --help   \
                \          Display this message\n    -o, --output <file>    Write\
                \ output to <file> instead of stdout.\n    -d, --delimiter <arg> \
                \ The field delimiter for reading CSV data.\n                    \
                \       Must be a single character. [default: ,]\n"
              generated_using: *id004
              docker_image:
            - &id029 !Command
              command: *id007
              positional: []
              named: []
              parent: *id026
              subcommands:
              - !Command
                command: *id008
                positional:
                - !Positional
                  optional: false
                  position: 0
                  name: input1
                  description: ''
                - !Positional
                  optional: false
                  position: 0
                  name: xsv
                  description: ''
                - !Positional
                  optional: false
                  position: 1
                  name: columns2
                  description: ''
                - !Positional
                  optional: false
                  position: 1
                  name: join
                  description: ''
                named: []
                parent: *id027
                subcommands: []
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
                  \ <input1> <columns2> <input2>\n    xsv join --help\n"
                generated_using: *id004
                docker_image:
              - !Command
                command: *id009
                positional:
                - !Positional
                  optional: false
                  position: 0
                  name: xsv
                  description: ''
                - !Positional
                  optional: false
                  position: 1
                  name: join
                  description: ''
                - !Positional
                  optional: false
                  position: 2
                  name: columns1
                  description: ''
                - !Positional
                  optional: false
                  position: 3
                  name: input1
                  description: ''
                - !Positional
                  optional: false
                  position: 4
                  name: columns2
                  description: ''
                named: []
                parent: *id027
                subcommands: []
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
                  \ <input1> <columns2> <input2>\n    xsv join --help\n"
                generated_using: *id004
                docker_image:
              - !Command
                command: *id010
                positional:
                - !Positional
                  optional: false
                  position: 0
                  name: xsv
                  description: ''
                - !Positional
                  optional: false
                  position: 1
                  name: join
                  description: ''
                - !Positional
                  optional: false
                  position: 2
                  name: columns1
                  description: ''
                - !Positional
                  optional: false
                  position: 3
                  name: input1
                  description: ''
                - !Positional
                  optional: false
                  position: 4
                  name: columns2
                  description: ''
                named: []
                parent: *id027
                subcommands: []
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
                  \ <input1> <columns2> <input2>\n    xsv join --help\n"
                generated_using: *id004
                docker_image:
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "Joins two sets of CSV data on the specified columns.\n\n\
                The default join operation is an 'inner' join. This corresponds to\
                \ the\nintersection of rows on the keys specified.\n\nJoins are always\
                \ done by ignoring leading and trailing whitespace. By default,\n\
                joins are done case sensitively, but this can be disabled with the\
                \ --no-case\nflag.\n\nThe columns arguments specify the columns to\
                \ join for each input. Columns can\nbe referenced by name or index,\
                \ starting at 1. Specify multiple columns by\nseparating them with\
                \ a comma. Specify a range of columns with `-`. Both\ncolumns1 and\
                \ columns2 must specify exactly the same number of columns.\n(See\
                \ 'xsv select --help' for the full syntax.)\n\nUsage:\n    xsv join\
                \ [options] <columns1> <input1> <columns2> <input2>\n    xsv join\
                \ --help\n\njoin options:\n    --no-case              When set, joins\
                \ are done case insensitively.\n    --left                 Do a 'left\
                \ outer' join. This returns all rows in\n                        \
                \   first CSV data set, including rows with no\n                 \
                \          corresponding row in the second data set. When no\n   \
                \                        corresponding row exists, it is padded out\
                \ with\n                           empty fields.\n    --right    \
                \            Do a 'right outer' join. This returns all rows in\n \
                \                          second CSV data set, including rows with\
                \ no\n                           corresponding row in the first data\
                \ set. When no\n                           corresponding row exists,\
                \ it is padded out with\n                           empty fields.\
                \ (This is the reverse of 'outer left'.)\n    --full             \
                \    Do a 'full outer' join. This returns all rows in\n          \
                \                 both data sets with matching records joined. If\n\
                \                           there is no match, the missing side will\
                \ be padded\n                           out with empty fields. (This\
                \ is the combination of\n                           'outer left' and\
                \ 'outer right'.)\n    --cross                USE WITH CAUTION.\n\
                \                           This returns the cartesian product of\
                \ the CSV\n                           data sets given. The number\
                \ of rows return is\n                           equal to N * M, where\
                \ N and M correspond to the\n                           number of\
                \ rows in the given data sets, respectively.\n    --nulls        \
                \        When set, joins will work on empty fields.\n            \
                \               Otherwise, empty fields are completely ignored.\n\
                \                           (In fact, any row that has an empty field\
                \ in the\n                           key specified is ignored.)\n\n\
                Common options:\n    -h, --help             Display this message\n\
                \    -o, --output <file>    Write output to <file> instead of stdout.\n\
                \    -n, --no-headers       When set, the first row will not be interpreted\n\
                \                           as headers. (i.e., They are not searched,\
                \ analyzed,\n                           sliced, etc.)\n    -d, --delimiter\
                \ <arg>  The field delimiter for reading CSV data.\n             \
                \              Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id011
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will not be interpreted\nas\
                  \ headers. (i.e., They are not searched, analyzed,\nsliced, etc.)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Select columns from CSV data efficiently.\n\nThis command\
                \ lets you manipulate the columns in CSV data. You can re-order\n\
                them, duplicate them or drop them. Columns can be referenced by index\
                \ or by\nname if there is a header row (duplicate column names can\
                \ be disambiguated with\nmore indexing). Finally, column ranges can\
                \ be specified.\n\n  Select the first and fourth columns:\n  $ xsv\
                \ select 1,4\n\n  Select the first 4 columns (by index and by name):\n\
                \  $ xsv select 1-4\n  $ xsv select Header1-Header4\n\n  Ignore the\
                \ first 2 columns (by range and by omission):\n  $ xsv select 3-\n\
                \  $ xsv select '!1-2'\n\n  Select the third column named 'Foo':\n\
                \  $ xsv select 'Foo[2]'\n\n  Re-order and duplicate columns arbitrarily:\n\
                \  $ xsv select 3-1,Header3-Header1,Header1,Foo[2],Header1\n\nUsage:\n\
                \    xsv select [options] [--] <selection> [<input>]\n    xsv select\
                \ --help\n\nCommon options:\n    -h, --help             Display this\
                \ message\n    -o, --output <file>    Write output to <file> instead\
                \ of stdout.\n    -n, --no-headers       When set, the first row will\
                \ not be interpreted\n                           as headers. (i.e.,\
                \ They are not searched, analyzed,\n                           sliced,\
                \ etc.)\n    -d, --delimiter <arg>  The field delimiter for reading\
                \ CSV data.\n                           Must be a single character.\
                \ (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id012
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -l
                - --length
                description: "Forcefully set the length of each record. If a\nrecord\
                  \ is not the size given, then it is truncated\nor expanded as appropriate."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Transforms CSV data so that all records have the same length.\
                \ The length is\nthe length of the longest record in the data. Records\
                \ with smaller lengths are\npadded with empty fields.\n\nThis requires\
                \ two complete scans of the CSV data: one for determining the\nrecord\
                \ size and one for the actual transform. Because of this, the input\n\
                given must be a file and not stdin.\n\nAlternatively, if --length\
                \ is set, then all records are forced to that length.\nThis requires\
                \ a single pass and can be done with stdin.\n\nUsage:\n    xsv fixlengths\
                \ [options] [<input>]\n\nfixlengths options:\n    -l, --length <arg>\
                \     Forcefully set the length of each record. If a\n           \
                \                record is not the size given, then it is truncated\n\
                \                           or expanded as appropriate.\n\nCommon\
                \ options:\n    -h, --help             Display this message\n    -o,\
                \ --output <file>    Write output to <file> instead of stdout.\n \
                \   -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
                \                           Must be a single character. (default:\
                \ ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id013
              positional:
              - !Positional
                optional: false
                position: 0
                name: regex
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --ignore-case
                description: "Case insensitive search. This is equivalent to\nprefixing\
                  \ the regex with '(?i)'."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -s
                - --select
                description: "Select the columns to search. See 'xsv select -h'\n\
                  for the full syntax."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -v
                - --invert-match
                description: Select only rows that did not match
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will not be interpreted\nas\
                  \ headers. (i.e., They are not searched, analyzed,\nsliced, etc.)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Filters CSV data by whether the given regex matches a row.\n\
                \nThe regex is applied to each field in each row, and if any field\
                \ matches,\nthen the row is written to the output. The columns to\
                \ search can be limited\nwith the '--select' flag (but the full row\
                \ is still written to the output if\nthere is a match).\n\nUsage:\n\
                \    xsv search [options] <regex> [<input>]\n    xsv search --help\n\
                \nsearch options:\n    -i, --ignore-case      Case insensitive search.\
                \ This is equivalent to\n                           prefixing the\
                \ regex with '(?i)'.\n    -s, --select <arg>     Select the columns\
                \ to search. See 'xsv select -h'\n                           for the\
                \ full syntax.\n    -v, --invert-match     Select only rows that did\
                \ not match\n\nCommon options:\n    -h, --help             Display\
                \ this message\n    -o, --output <file>    Write output to <file>\
                \ instead of stdout.\n    -n, --no-headers       When set, the first\
                \ row will not be interpreted\n                           as headers.\
                \ (i.e., They are not searched, analyzed,\n                      \
                \     sliced, etc.)\n    -d, --delimiter <arg>  The field delimiter\
                \ for reading CSV data.\n                           Must be a single\
                \ character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id014
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: "Write index to <file> instead of <input>.idx.\nGenerally,\
                  \ this is not currently useful because\nthe only way to use an index\
                  \ is if it is specially\nnamed <input>.idx."
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Creates an index of the given CSV data, which can make other\
                \ operations like\nslicing, splitting and gathering statistics much\
                \ faster.\n\nNote that this does not accept CSV data on stdin. You\
                \ must give a file\npath. The index is created at 'path/to/input.csv.idx'.\
                \ The index will be\nautomatically used by commands that can benefit\
                \ from it. If the original CSV\ndata changes after the index is made,\
                \ commands that try to use it will result\nin an error (you have to\
                \ regenerate the index before it can be used again).\n\nUsage:\n \
                \   xsv index [options] <input>\n    xsv index --help\n\nindex options:\n\
                \    -o, --output <file>    Write index to <file> instead of <input>.idx.\n\
                \                           Generally, this is not currently useful\
                \ because\n                           the only way to use an index\
                \ is if it is specially\n                           named <input>.idx.\n\
                \nCommon options:\n    -h, --help             Display this message\n\
                \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
                \                           Must be a single character. (default:\
                \ ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id015
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -s
                - --start
                description: The index of the record to slice from.
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -e
                - --end
                description: The index of the record to slice to.
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -l
                - --len
                description: "The length of the slice (can be used instead\nof --end)."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -i
                - --index
                description: Slice a single record (shortcut for -s N -l 1).
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will not be interpreted\nas\
                  \ headers. Otherwise, the first row will always\nappear in the output\
                  \ as the header row."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Returns the rows in the range specified (starting at 0,\
                \ half-open interval).\nThe range does not include headers.\n\nIf\
                \ the start of the range isn't specified, then the slice starts from\
                \ the first\nrecord in the CSV data.\n\nIf the end of the range isn't\
                \ specified, then the slice continues to the last\nrecord in the CSV\
                \ data.\n\nThis operation can be made much faster by creating an index\
                \ with 'xsv index'\nfirst. Namely, a slice on an index requires parsing\
                \ just the rows that are\nsliced. Without an index, all rows up to\
                \ the first row in the slice must be\nparsed.\n\nUsage:\n    xsv slice\
                \ [options] [<input>]\n\nslice options:\n    -s, --start <arg>   \
                \   The index of the record to slice from.\n    -e, --end <arg>  \
                \      The index of the record to slice to.\n    -l, --len <arg> \
                \       The length of the slice (can be used instead\n           \
                \                of --end).\n    -i, --index <arg>      Slice a single\
                \ record (shortcut for -s N -l 1).\n\nCommon options:\n    -h, --help\
                \             Display this message\n    -o, --output <file>    Write\
                \ output to <file> instead of stdout.\n    -n, --no-headers      \
                \ When set, the first row will not be interpreted\n              \
                \             as headers. Otherwise, the first row will always\n \
                \                          appear in the output as the header row.\n\
                \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
                \                           Must be a single character. (default:\
                \ ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id016
              positional:
              - !Positional
                optional: false
                position: 0
                name: columns
                description: ''
              - !Positional
                optional: false
                position: 0
                name: rows
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -p
                - --pad
                description: "When concatenating columns, this flag will cause\nall\
                  \ records to appear. It will pad each row if\nother CSV data isn't\
                  \ long enough."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will NOT be interpreted\nas\
                  \ column names. Note that this has no effect when\nconcatenating\
                  \ columns."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Concatenates CSV data by column or by row.\n\nWhen concatenating\
                \ by column, the columns will be written in the same order as\nthe\
                \ inputs given. The number of rows in the result is always equivalent\
                \ to to\nthe minimum number of rows across all given CSV data. (This\
                \ behavior can be\nreversed with the '--pad' flag.)\n\nWhen concatenating\
                \ by row, all CSV data must have the same number of columns.\nIf you\
                \ need to rearrange the columns or fix the lengths of records, use\
                \ the\n'select' or 'fixlengths' commands. Also, only the headers of\
                \ the *first* CSV\ndata given are used. Headers in subsequent inputs\
                \ are ignored. (This behavior\ncan be disabled with --no-headers.)\n\
                \nUsage:\n    xsv cat rows    [options] [<input>...]\n    xsv cat\
                \ columns [options] [<input>...]\n    xsv cat --help\n\ncat options:\n\
                \    -p, --pad              When concatenating columns, this flag\
                \ will cause\n                           all records to appear. It\
                \ will pad each row if\n                           other CSV data\
                \ isn't long enough.\n\nCommon options:\n    -h, --help          \
                \   Display this message\n    -o, --output <file>    Write output\
                \ to <file> instead of stdout.\n    -n, --no-headers       When set,\
                \ the first row will NOT be interpreted\n                        \
                \   as column names. Note that this has no effect when\n         \
                \                  concatenating columns.\n    -d, --delimiter <arg>\
                \  The field delimiter for reading CSV data.\n                   \
                \        Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id017
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will not be included in\nthe\
                  \ count."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Prints a count of the number of records in the CSV data.\n\
                \nNote that the count will not include the header row (unless --no-headers\
                \ is\ngiven).\n\nUsage:\n    xsv count [options] [<input>]\n\nCommon\
                \ options:\n    -h, --help             Display this message\n    -n,\
                \ --no-headers       When set, the first row will not be included\
                \ in\n                           the count.\n    -d, --delimiter <arg>\
                \  The field delimiter for reading CSV data.\n                   \
                \        Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id018
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                - --condense
                description: "Limits the length of each field to the value\nspecified.\
                  \ If the field is UTF-8 encoded, then\n<arg> refers to the number\
                  \ of code points.\nOtherwise, it refers to the number of bytes."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -s
                - --separator
                description: "A string of characters to write after each record.\n\
                  When non-empty, a new line is automatically\nappended to the separator.\n\
                  [default: #]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will not be interpreted\nas\
                  \ headers. When set, the name of each field\nwill be its index."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Prints flattened records such that fields are labeled separated\
                \ by a new line.\nThis mode is particularly useful for viewing one\
                \ record at a time. Each\nrecord is separated by a special '#' character\
                \ (on a line by itself), which\ncan be changed with the --separator\
                \ flag.\n\nThere is also a condensed view (-c or --condense) that\
                \ will shorten the\ncontents of each field to provide a summary view.\n\
                \nUsage:\n    xsv flatten [options] [<input>]\n\nflatten options:\n\
                \    -c, --condense <arg>  Limits the length of each field to the\
                \ value\n                           specified. If the field is UTF-8\
                \ encoded, then\n                           <arg> refers to the number\
                \ of code points.\n                           Otherwise, it refers\
                \ to the number of bytes.\n    -s, --separator <arg>  A string of\
                \ characters to write after each record.\n                       \
                \    When non-empty, a new line is automatically\n               \
                \            appended to the separator.\n                        \
                \   [default: #]\n\nCommon options:\n    -h, --help             Display\
                \ this message\n    -n, --no-headers       When set, the first row\
                \ will not be interpreted\n                           as headers.\
                \ When set, the name of each field\n                           will\
                \ be its index.\n    -d, --delimiter <arg>  The field delimiter for\
                \ reading CSV data.\n                           Must be a single character.\
                \ (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id019
              positional:
              - !Positional
                optional: false
                position: 0
                name: outdir
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -s
                - --size
                description: "The number of records to write into each chunk.\n[default:\
                  \ 500]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -j
                - --jobs
                description: "The number of spliting jobs to run in parallel.\nThis\
                  \ only works when the given CSV data has\nan index already created.\
                  \ Note that a file handle\nis opened for each job.\nWhen set to\
                  \ '0', the number of jobs is set to the\nnumber of CPUs detected.\n\
                  [default: 0]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will NOT be interpreted\nas\
                  \ column names. Otherwise, the first row will\nappear in all chunks\
                  \ as the header row."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Splits the given CSV data into chunks.\n\nThe files are\
                \ written to the directory given with the name '{start}.csv',\nwhere\
                \ {start} is the index of the first record of the chunk (starting\
                \ at 0).\n\nUsage:\n    xsv split [options] <outdir> [<input>]\n \
                \   xsv split --help\n\nsplit options:\n    -s, --size <arg>     \
                \  The number of records to write into each chunk.\n             \
                \              [default: 500]\n    -j, --jobs <arg>       The number\
                \ of spliting jobs to run in parallel.\n                         \
                \  This only works when the given CSV data has\n                 \
                \          an index already created. Note that a file handle\n   \
                \                        is opened for each job.\n               \
                \            When set to '0', the number of jobs is set to the\n \
                \                          number of CPUs detected.\n            \
                \               [default: 0]\n\nCommon options:\n    -h, --help  \
                \           Display this message\n    -o, --output <file>    Write\
                \ output to <file> instead of stdout.\n    -n, --no-headers      \
                \ When set, the first row will NOT be interpreted\n              \
                \             as column names. Otherwise, the first row will\n   \
                \                        appear in all chunks as the header row.\n\
                \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
                \                           Must be a single character. (default:\
                \ ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id020
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -w
                - --width
                description: "The minimum width of each column.\n[default: 2]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -p
                - --pad
                description: "The minimum number of spaces between each column.\n\
                  [default: 2]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -c
                - --condense
                description: "Limits the length of each field to the value\nspecified.\
                  \ If the field is UTF-8 encoded, then\n<arg> refers to the number\
                  \ of code points.\nOtherwise, it refers to the number of bytes."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Outputs CSV data as a table with columns in alignment.\n\
                \nThis will not work well if the CSV data contains large fields.\n\
                \nNote that formatting a table requires buffering all CSV data into\
                \ memory.\nTherefore, you should use the 'sample' or 'slice' command\
                \ to trim down large\nCSV data before formatting it with this command.\n\
                \nUsage:\n    xsv table [options] [<input>]\n\ntable options:\n  \
                \  -w, --width <arg>      The minimum width of each column.\n    \
                \                       [default: 2]\n    -p, --pad <arg>        The\
                \ minimum number of spaces between each column.\n                \
                \           [default: 2]\n    -c, --condense <arg>  Limits the length\
                \ of each field to the value\n                           specified.\
                \ If the field is UTF-8 encoded, then\n                          \
                \ <arg> refers to the number of code points.\n                   \
                \        Otherwise, it refers to the number of bytes.\n\nCommon options:\n\
                \    -h, --help             Display this message\n    -o, --output\
                \ <file>    Write output to <file> instead of stdout.\n    -d, --delimiter\
                \ <arg>  The field delimiter for reading CSV data.\n             \
                \              Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id021
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -s
                - --select
                description: "Select a subset of columns to compute stats for.\nSee\
                  \ 'xsv select --help' for the format details.\nThis is provided\
                  \ here because piping 'xsv select'\ninto 'xsv stats' will disable\
                  \ the use of indexing."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - --everything
                description: Show all statistics available.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --mode
                description: "Show the mode.\nThis requires storing all CSV data in\
                  \ memory."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --cardinality
                description: "Show the cardinality.\nThis requires storing all CSV\
                  \ data in memory."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --median
                description: "Show the median.\nThis requires storing all CSV data\
                  \ in memory."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --nulls
                description: "Include NULLs in the population size for computing\n\
                  mean and standard deviation."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -j
                - --jobs
                description: "The number of jobs to run in parallel.\nThis works better\
                  \ when the given CSV data has\nan index already created. Note that\
                  \ a file handle\nis opened for each job.\nWhen set to '0', the number\
                  \ of jobs is set to the\nnumber of CPUs detected.\n[default: 0]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will NOT be interpreted\nas\
                  \ column names. i.e., They will be included\nin statistics."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Computes basic statistics on CSV data.\n\nBasic statistics\
                \ includes mean, median, mode, standard deviation, sum, max and\n\
                min values. Note that some statistics are expensive to compute, so\
                \ they must\nbe enabled explicitly. By default, the following statistics\
                \ are reported for\n*every* column in the CSV data: mean, max, min\
                \ and standard deviation. The\ndefault set of statistics corresponds\
                \ to statistics that can be computed\nefficiently on a stream of data\
                \ (i.e., constant memory).\n\nComputing statistics on a large file\
                \ can be made much faster if you create\nan index for it first with\
                \ 'xsv index'.\n\nUsage:\n    xsv stats [options] [<input>]\n\nstats\
                \ options:\n    -s, --select <arg>     Select a subset of columns\
                \ to compute stats for.\n                           See 'xsv select\
                \ --help' for the format details.\n                           This\
                \ is provided here because piping 'xsv select'\n                 \
                \          into 'xsv stats' will disable the use of indexing.\n  \
                \  --everything           Show all statistics available.\n    --mode\
                \                 Show the mode.\n                           This\
                \ requires storing all CSV data in memory.\n    --cardinality    \
                \      Show the cardinality.\n                           This requires\
                \ storing all CSV data in memory.\n    --median               Show\
                \ the median.\n                           This requires storing all\
                \ CSV data in memory.\n    --nulls                Include NULLs in\
                \ the population size for computing\n                           mean\
                \ and standard deviation.\n    -j, --jobs <arg>       The number of\
                \ jobs to run in parallel.\n                           This works\
                \ better when the given CSV data has\n                           an\
                \ index already created. Note that a file handle\n               \
                \            is opened for each job.\n                           When\
                \ set to '0', the number of jobs is set to the\n                 \
                \          number of CPUs detected.\n                           [default:\
                \ 0]\n\nCommon options:\n    -h, --help             Display this message\n\
                \    -o, --output <file>    Write output to <file> instead of stdout.\n\
                \    -n, --no-headers       When set, the first row will NOT be interpreted\n\
                \                           as column names. i.e., They will be included\n\
                \                           in statistics.\n    -d, --delimiter <arg>\
                \  The field delimiter for reading CSV data.\n                   \
                \        Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id022
              positional:
              - !Positional
                optional: false
                position: 0
                name: sample-size
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will be consider as part of\n\
                  the population to sample from. (When not set, the\nfirst row is\
                  \ the header row and will always appear\nin the output.)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Randomly samples CSV data uniformly using memory proportional\
                \ to the size of\nthe sample.\n\nWhen an index is present, this command\
                \ will use random indexing if the sample\nsize is less than 10% of\
                \ the total number of records. This allows for efficient\nsampling\
                \ such that the entire CSV file is not parsed.\n\nThis command is\
                \ intended to provide a means to sample from a CSV data set that\n\
                is too big to fit into memory (for example, for use with commands\
                \ like 'xsv\nfrequency' or 'xsv stats'). It will however visit every\
                \ CSV record exactly\nonce, which is necessary to provide a uniform\
                \ random sample. If you wish to\nlimit the number of records visited,\
                \ use the 'xsv slice' command to pipe into\n'xsv sample'.\n\nUsage:\n\
                \    xsv sample [options] <sample-size> [<input>]\n    xsv sample\
                \ --help\n\nCommon options:\n    -h, --help             Display this\
                \ message\n    -o, --output <file>    Write output to <file> instead\
                \ of stdout.\n    -n, --no-headers       When set, the first row will\
                \ be consider as part of\n                           the population\
                \ to sample from. (When not set, the\n                           first\
                \ row is the header row and will always appear\n                 \
                \          in the output.)\n    -d, --delimiter <arg>  The field delimiter\
                \ for reading CSV data.\n                           Must be a single\
                \ character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id023
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -t
                - --out-delimiter
                description: "The field delimiter for writing CSV data.\n[default:\
                  \ ,]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - --crlf
                description: Use '\r\n' line endings in the output.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --ascii
                description: Use ASCII field and record separators.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --quote
                description: 'The quote character to use. [default: "]'
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - --quote-always
                description: Put quotes around every value.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --escape
                description: "The escape character to use. When not specified,\nquotes\
                  \ are escaped by doubling them."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. [default: ,]\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Formats CSV data with a custom delimiter or CRLF line endings.\n\
                \nGenerally, all commands in xsv output CSV data in a default format,\
                \ which is\nthe same as the default format for reading CSV data. This\
                \ makes it easy to\npipe multiple xsv commands together. However,\
                \ you may want the final result to\nhave a specific delimiter or record\
                \ separator, and this is where 'xsv fmt' is\nuseful.\n\nUsage:\n \
                \   xsv fmt [options] [<input>]\n\nfmt options:\n    -t, --out-delimiter\
                \ <arg>  The field delimiter for writing CSV data.\n             \
                \                  [default: ,]\n    --crlf                     Use\
                \ '\\r\\n' line endings in the output.\n    --ascii              \
                \      Use ASCII field and record separators.\n    --quote <arg> \
                \             The quote character to use. [default: \"]\n    --quote-always\
                \             Put quotes around every value.\n    --escape <arg> \
                \            The escape character to use. When not specified,\n  \
                \                             quotes are escaped by doubling them.\n\
                \nCommon options:\n    -h, --help             Display this message\n\
                \    -o, --output <file>    Write output to <file> instead of stdout.\n\
                \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
                \                           Must be a single character. [default:\
                \ ,]\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id024
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -s
                - --select
                description: "Select a subset of columns to compute frequencies\n\
                  for. See 'xsv select --help' for the format\ndetails. This is provided\
                  \ here because piping 'xsv\nselect' into 'xsv frequency' will disable\
                  \ the use\nof indexing."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -l
                - --limit
                description: "Limit the frequency table to the N most common\nitems.\
                  \ Set to '0' to disable a limit.\n[default: 10]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -a
                - --asc
                description: "Sort the frequency tables in ascending order by\ncount.\
                  \ The default is descending order."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-nulls
                description: Don't include NULLs in the frequency table.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -j
                - --jobs
                description: "The number of jobs to run in parallel.\nThis works better\
                  \ when the given CSV data has\nan index already created. Note that\
                  \ a file handle\nis opened for each job.\nWhen set to '0', the number\
                  \ of jobs is set to the\nnumber of CPUs detected.\n[default: 0]"
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will NOT be included\nin the\
                  \ frequency table. Additionally, the 'field'\ncolumn will be 1-based\
                  \ indices instead of header\nnames."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Compute a frequency table on CSV data.\n\nThe frequency\
                \ table is formatted as CSV data:\n\n    field,value,count\n\nBy default,\
                \ there is a row for the N most frequent values for each field in\
                \ the\ndata. The order and number of values can be tweaked with --asc\
                \ and --limit,\nrespectively.\n\nSince this computes an exact frequency\
                \ table, memory proportional to the\ncardinality of each column is\
                \ required.\n\nUsage:\n    xsv frequency [options] [<input>]\n\nfrequency\
                \ options:\n    -s, --select <arg>     Select a subset of columns\
                \ to compute frequencies\n                           for. See 'xsv\
                \ select --help' for the format\n                           details.\
                \ This is provided here because piping 'xsv\n                    \
                \       select' into 'xsv frequency' will disable the use\n      \
                \                     of indexing.\n    -l, --limit <arg>      Limit\
                \ the frequency table to the N most common\n                     \
                \      items. Set to '0' to disable a limit.\n                   \
                \        [default: 10]\n    -a, --asc              Sort the frequency\
                \ tables in ascending order by\n                           count.\
                \ The default is descending order.\n    --no-nulls             Don't\
                \ include NULLs in the frequency table.\n    -j, --jobs <arg>    \
                \   The number of jobs to run in parallel.\n                     \
                \      This works better when the given CSV data has\n           \
                \                an index already created. Note that a file handle\n\
                \                           is opened for each job.\n            \
                \               When set to '0', the number of jobs is set to the\n\
                \                           number of CPUs detected.\n           \
                \                [default: 0]\n\nCommon options:\n    -h, --help \
                \            Display this message\n    -o, --output <file>    Write\
                \ output to <file> instead of stdout.\n    -n, --no-headers      \
                \ When set, the first row will NOT be included\n                 \
                \          in the frequency table. Additionally, the 'field'\n   \
                \                        column will be 1-based indices instead of\
                \ header\n                           names.\n    -d, --delimiter <arg>\
                \  The field delimiter for reading CSV data.\n                   \
                \        Must be a single character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id025
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -s
                - --select
                description: "Select a subset of columns to sort.\nSee 'xsv select\
                  \ --help' for the format details."
                args: !SimpleFlagArg
                  name: arg
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Write output to <file> instead of stdout.
                args: !SimpleFlagArg
                  name: file
              - !Flag
                optional: true
                synonyms:
                - -n
                - --no-headers
                description: "When set, the first row will not be interpreted\nas\
                  \ headers. Namely, it will be sorted with the rest\nof the rows.\
                  \ Otherwise, the first row will always\nappear as the header row\
                  \ in the output."
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --delimiter
                description: "The field delimiter for reading CSV data.\nMust be a\
                  \ single character. (default: ,)\n"
                args: !SimpleFlagArg
                  name: arg
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: Display this message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "Sorts CSV data lexicographically.\n\nNote that this requires\
                \ reading all of the CSV data into memory.\n\nUsage:\n    xsv sort\
                \ [options] [<input>]\n\nsort options:\n    -s, --select <arg>   \
                \  Select a subset of columns to sort.\n                         \
                \  See 'xsv select --help' for the format details.\n\nCommon options:\n\
                \    -h, --help             Display this message\n    -o, --output\
                \ <file>    Write output to <file> instead of stdout.\n    -n, --no-headers\
                \       When set, the first row will not be interpreted\n        \
                \                   as headers. Namely, it will be sorted with the\
                \ rest\n                           of the rows. Otherwise, the first\
                \ row will always\n                           appear as the header\
                \ row in the output.\n    -d, --delimiter <arg>  The field delimiter\
                \ for reading CSV data.\n                           Must be a single\
                \ character. (default: ,)\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Usage:\n    xsv <command> [<args>...]\n    xsv [options]\n\
              \nOptions:\n    --list        List all commands available.\n    -h,\
              \ --help    Display this message\n    --version     Print version info\
              \ and exit\n\nCommands:\n    cat         Concatenate by row or column\n\
              \    count       Count records\n    fixlengths  Makes all records have\
              \ same length\n    flatten     Show one field per line\n    fmt    \
              \     Format CSV output (change field delimiter)\n    frequency   Show\
              \ frequency tables\n    headers     Show header names\n    help    \
              \    Show this usage message.\n    index       Create CSV index for\
              \ faster access\n    input       Read CSV data with special quoting\
              \ rules\n    join        Join CSV files\n    sample      Randomly sample\
              \ CSV data\n    search      Search CSV data with regexes\n    select\
              \      Select columns from CSV\n    slice       Slice records from CSV\n\
              \    sort        Sort CSV data\n    split       Split CSV data into\
              \ many files\n    stats       Compute basic statistics\n    table  \
              \     Align CSV data into columns\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Prints the fields of the first row in the CSV data.\n\nThese\
            \ names can be used in commands like 'select' to refer to columns in the\n\
            CSV data.\n\nNote that multiple CSV files may be given to this command.\
            \ This is useful with\nthe --intersect flag.\n\nUsage:\n    xsv headers\
            \ [options] [<input>...]\n\nheaders options:\n    -j, --just-names   \
            \    Only show the header names (hide column index).\n               \
            \            This is automatically enabled if more than one\n        \
            \                   input is given.\n    --intersect            Shows\
            \ the intersection of all headers in all of\n                        \
            \   the inputs given.\n\nCommon options:\n    -h, --help             Display\
            \ this message\n    -d, --delimiter <arg>  The field delimiter for reading\
            \ CSV data.\n                           Must be a single character. (default:\
            \ ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --quote
            description: 'The quote character to use. [default: "]'
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - --escape
            description: "The escape character to use. When not specified,\nquotes\
              \ are escaped by doubling them."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. [default: ,]\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Read CSV data with special quoting rules.\n\nGenerally, all\
            \ xsv commands support basic options like specifying the delimiter\nused\
            \ in CSV data. This does not cover all possible types of CSV data. For\n\
            example, some CSV files don't use '\"' for quotes or use different escaping\n\
            styles.\n\nUsage:\n    xsv input [options] [<input>]\n\ninput options:\n\
            \    --quote <arg>          The quote character to use. [default: \"]\n\
            \    --escape <arg>         The escape character to use. When not specified,\n\
            \                           quotes are escaped by doubling them.\n\nCommon\
            \ options:\n    -h, --help             Display this message\n    -o, --output\
            \ <file>    Write output to <file> instead of stdout.\n    -d, --delimiter\
            \ <arg>  The field delimiter for reading CSV data.\n                 \
            \          Must be a single character. [default: ,]\n"
          generated_using: *id004
          docker_image:
        - &id031 !Command
          command: *id007
          positional: []
          named: []
          parent: *id028
          subcommands:
          - !Command
            command: *id008
            positional:
            - !Positional
              optional: false
              position: 0
              name: input1
              description: ''
            - !Positional
              optional: false
              position: 0
              name: xsv
              description: ''
            - !Positional
              optional: false
              position: 1
              name: columns2
              description: ''
            - !Positional
              optional: false
              position: 1
              name: join
              description: ''
            named: []
            parent: *id029
            subcommands: []
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
              \ <input1> <columns2> <input2>\n    xsv join --help\n"
            generated_using: *id004
            docker_image:
          - !Command
            command: *id009
            positional:
            - !Positional
              optional: false
              position: 0
              name: xsv
              description: ''
            - !Positional
              optional: false
              position: 1
              name: join
              description: ''
            - !Positional
              optional: false
              position: 2
              name: columns1
              description: ''
            - !Positional
              optional: false
              position: 3
              name: input1
              description: ''
            - !Positional
              optional: false
              position: 4
              name: columns2
              description: ''
            named: []
            parent: *id029
            subcommands: []
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
              \ <input1> <columns2> <input2>\n    xsv join --help\n"
            generated_using: *id004
            docker_image:
          - !Command
            command: *id010
            positional:
            - !Positional
              optional: false
              position: 0
              name: xsv
              description: ''
            - !Positional
              optional: false
              position: 1
              name: join
              description: ''
            - !Positional
              optional: false
              position: 2
              name: columns1
              description: ''
            - !Positional
              optional: false
              position: 3
              name: input1
              description: ''
            - !Positional
              optional: false
              position: 4
              name: columns2
              description: ''
            named: []
            parent: *id029
            subcommands: []
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
              \ <input1> <columns2> <input2>\n    xsv join --help\n"
            generated_using: *id004
            docker_image:
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Joins two sets of CSV data on the specified columns.\n\nThe\
            \ default join operation is an 'inner' join. This corresponds to the\n\
            intersection of rows on the keys specified.\n\nJoins are always done by\
            \ ignoring leading and trailing whitespace. By default,\njoins are done\
            \ case sensitively, but this can be disabled with the --no-case\nflag.\n\
            \nThe columns arguments specify the columns to join for each input. Columns\
            \ can\nbe referenced by name or index, starting at 1. Specify multiple\
            \ columns by\nseparating them with a comma. Specify a range of columns\
            \ with `-`. Both\ncolumns1 and columns2 must specify exactly the same\
            \ number of columns.\n(See 'xsv select --help' for the full syntax.)\n\
            \nUsage:\n    xsv join [options] <columns1> <input1> <columns2> <input2>\n\
            \    xsv join --help\n\njoin options:\n    --no-case              When\
            \ set, joins are done case insensitively.\n    --left                \
            \ Do a 'left outer' join. This returns all rows in\n                 \
            \          first CSV data set, including rows with no\n              \
            \             corresponding row in the second data set. When no\n    \
            \                       corresponding row exists, it is padded out with\n\
            \                           empty fields.\n    --right               \
            \ Do a 'right outer' join. This returns all rows in\n                \
            \           second CSV data set, including rows with no\n            \
            \               corresponding row in the first data set. When no\n   \
            \                        corresponding row exists, it is padded out with\n\
            \                           empty fields. (This is the reverse of 'outer\
            \ left'.)\n    --full                 Do a 'full outer' join. This returns\
            \ all rows in\n                           both data sets with matching\
            \ records joined. If\n                           there is no match, the\
            \ missing side will be padded\n                           out with empty\
            \ fields. (This is the combination of\n                           'outer\
            \ left' and 'outer right'.)\n    --cross                USE WITH CAUTION.\n\
            \                           This returns the cartesian product of the\
            \ CSV\n                           data sets given. The number of rows\
            \ return is\n                           equal to N * M, where N and M\
            \ correspond to the\n                           number of rows in the\
            \ given data sets, respectively.\n    --nulls                When set,\
            \ joins will work on empty fields.\n                           Otherwise,\
            \ empty fields are completely ignored.\n                           (In\
            \ fact, any row that has an empty field in the\n                     \
            \      key specified is ignored.)\n\nCommon options:\n    -h, --help \
            \            Display this message\n    -o, --output <file>    Write output\
            \ to <file> instead of stdout.\n    -n, --no-headers       When set, the\
            \ first row will not be interpreted\n                           as headers.\
            \ (i.e., They are not searched, analyzed,\n                          \
            \ sliced, etc.)\n    -d, --delimiter <arg>  The field delimiter for reading\
            \ CSV data.\n                           Must be a single character. (default:\
            \ ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id011
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will not be interpreted\nas headers.\
              \ (i.e., They are not searched, analyzed,\nsliced, etc.)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Select columns from CSV data efficiently.\n\nThis command lets\
            \ you manipulate the columns in CSV data. You can re-order\nthem, duplicate\
            \ them or drop them. Columns can be referenced by index or by\nname if\
            \ there is a header row (duplicate column names can be disambiguated with\n\
            more indexing). Finally, column ranges can be specified.\n\n  Select the\
            \ first and fourth columns:\n  $ xsv select 1,4\n\n  Select the first\
            \ 4 columns (by index and by name):\n  $ xsv select 1-4\n  $ xsv select\
            \ Header1-Header4\n\n  Ignore the first 2 columns (by range and by omission):\n\
            \  $ xsv select 3-\n  $ xsv select '!1-2'\n\n  Select the third column\
            \ named 'Foo':\n  $ xsv select 'Foo[2]'\n\n  Re-order and duplicate columns\
            \ arbitrarily:\n  $ xsv select 3-1,Header3-Header1,Header1,Foo[2],Header1\n\
            \nUsage:\n    xsv select [options] [--] <selection> [<input>]\n    xsv\
            \ select --help\n\nCommon options:\n    -h, --help             Display\
            \ this message\n    -o, --output <file>    Write output to <file> instead\
            \ of stdout.\n    -n, --no-headers       When set, the first row will\
            \ not be interpreted\n                           as headers. (i.e., They\
            \ are not searched, analyzed,\n                           sliced, etc.)\n\
            \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
            \                           Must be a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id012
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -l
            - --length
            description: "Forcefully set the length of each record. If a\nrecord is\
              \ not the size given, then it is truncated\nor expanded as appropriate."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Transforms CSV data so that all records have the same length.\
            \ The length is\nthe length of the longest record in the data. Records\
            \ with smaller lengths are\npadded with empty fields.\n\nThis requires\
            \ two complete scans of the CSV data: one for determining the\nrecord\
            \ size and one for the actual transform. Because of this, the input\n\
            given must be a file and not stdin.\n\nAlternatively, if --length is set,\
            \ then all records are forced to that length.\nThis requires a single\
            \ pass and can be done with stdin.\n\nUsage:\n    xsv fixlengths [options]\
            \ [<input>]\n\nfixlengths options:\n    -l, --length <arg>     Forcefully\
            \ set the length of each record. If a\n                           record\
            \ is not the size given, then it is truncated\n                      \
            \     or expanded as appropriate.\n\nCommon options:\n    -h, --help \
            \            Display this message\n    -o, --output <file>    Write output\
            \ to <file> instead of stdout.\n    -d, --delimiter <arg>  The field delimiter\
            \ for reading CSV data.\n                           Must be a single character.\
            \ (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id013
          positional:
          - !Positional
            optional: false
            position: 0
            name: regex
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --ignore-case
            description: "Case insensitive search. This is equivalent to\nprefixing\
              \ the regex with '(?i)'."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -s
            - --select
            description: "Select the columns to search. See 'xsv select -h'\nfor the\
              \ full syntax."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -v
            - --invert-match
            description: Select only rows that did not match
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will not be interpreted\nas headers.\
              \ (i.e., They are not searched, analyzed,\nsliced, etc.)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Filters CSV data by whether the given regex matches a row.\n\
            \nThe regex is applied to each field in each row, and if any field matches,\n\
            then the row is written to the output. The columns to search can be limited\n\
            with the '--select' flag (but the full row is still written to the output\
            \ if\nthere is a match).\n\nUsage:\n    xsv search [options] <regex> [<input>]\n\
            \    xsv search --help\n\nsearch options:\n    -i, --ignore-case     \
            \ Case insensitive search. This is equivalent to\n                   \
            \        prefixing the regex with '(?i)'.\n    -s, --select <arg>    \
            \ Select the columns to search. See 'xsv select -h'\n                \
            \           for the full syntax.\n    -v, --invert-match     Select only\
            \ rows that did not match\n\nCommon options:\n    -h, --help         \
            \    Display this message\n    -o, --output <file>    Write output to\
            \ <file> instead of stdout.\n    -n, --no-headers       When set, the\
            \ first row will not be interpreted\n                           as headers.\
            \ (i.e., They are not searched, analyzed,\n                          \
            \ sliced, etc.)\n    -d, --delimiter <arg>  The field delimiter for reading\
            \ CSV data.\n                           Must be a single character. (default:\
            \ ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id014
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: "Write index to <file> instead of <input>.idx.\nGenerally,\
              \ this is not currently useful because\nthe only way to use an index\
              \ is if it is specially\nnamed <input>.idx."
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Creates an index of the given CSV data, which can make other\
            \ operations like\nslicing, splitting and gathering statistics much faster.\n\
            \nNote that this does not accept CSV data on stdin. You must give a file\n\
            path. The index is created at 'path/to/input.csv.idx'. The index will\
            \ be\nautomatically used by commands that can benefit from it. If the\
            \ original CSV\ndata changes after the index is made, commands that try\
            \ to use it will result\nin an error (you have to regenerate the index\
            \ before it can be used again).\n\nUsage:\n    xsv index [options] <input>\n\
            \    xsv index --help\n\nindex options:\n    -o, --output <file>    Write\
            \ index to <file> instead of <input>.idx.\n                          \
            \ Generally, this is not currently useful because\n                  \
            \         the only way to use an index is if it is specially\n       \
            \                    named <input>.idx.\n\nCommon options:\n    -h, --help\
            \             Display this message\n    -d, --delimiter <arg>  The field\
            \ delimiter for reading CSV data.\n                           Must be\
            \ a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id015
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -s
            - --start
            description: The index of the record to slice from.
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -e
            - --end
            description: The index of the record to slice to.
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -l
            - --len
            description: "The length of the slice (can be used instead\nof --end)."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -i
            - --index
            description: Slice a single record (shortcut for -s N -l 1).
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will not be interpreted\nas headers.\
              \ Otherwise, the first row will always\nappear in the output as the\
              \ header row."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Returns the rows in the range specified (starting at 0, half-open\
            \ interval).\nThe range does not include headers.\n\nIf the start of the\
            \ range isn't specified, then the slice starts from the first\nrecord\
            \ in the CSV data.\n\nIf the end of the range isn't specified, then the\
            \ slice continues to the last\nrecord in the CSV data.\n\nThis operation\
            \ can be made much faster by creating an index with 'xsv index'\nfirst.\
            \ Namely, a slice on an index requires parsing just the rows that are\n\
            sliced. Without an index, all rows up to the first row in the slice must\
            \ be\nparsed.\n\nUsage:\n    xsv slice [options] [<input>]\n\nslice options:\n\
            \    -s, --start <arg>      The index of the record to slice from.\n \
            \   -e, --end <arg>        The index of the record to slice to.\n    -l,\
            \ --len <arg>        The length of the slice (can be used instead\n  \
            \                         of --end).\n    -i, --index <arg>      Slice\
            \ a single record (shortcut for -s N -l 1).\n\nCommon options:\n    -h,\
            \ --help             Display this message\n    -o, --output <file>   \
            \ Write output to <file> instead of stdout.\n    -n, --no-headers    \
            \   When set, the first row will not be interpreted\n                \
            \           as headers. Otherwise, the first row will always\n       \
            \                    appear in the output as the header row.\n    -d,\
            \ --delimiter <arg>  The field delimiter for reading CSV data.\n     \
            \                      Must be a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id016
          positional:
          - !Positional
            optional: false
            position: 0
            name: columns
            description: ''
          - !Positional
            optional: false
            position: 0
            name: rows
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -p
            - --pad
            description: "When concatenating columns, this flag will cause\nall records\
              \ to appear. It will pad each row if\nother CSV data isn't long enough."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will NOT be interpreted\nas column\
              \ names. Note that this has no effect when\nconcatenating columns."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Concatenates CSV data by column or by row.\n\nWhen concatenating\
            \ by column, the columns will be written in the same order as\nthe inputs\
            \ given. The number of rows in the result is always equivalent to to\n\
            the minimum number of rows across all given CSV data. (This behavior can\
            \ be\nreversed with the '--pad' flag.)\n\nWhen concatenating by row, all\
            \ CSV data must have the same number of columns.\nIf you need to rearrange\
            \ the columns or fix the lengths of records, use the\n'select' or 'fixlengths'\
            \ commands. Also, only the headers of the *first* CSV\ndata given are\
            \ used. Headers in subsequent inputs are ignored. (This behavior\ncan\
            \ be disabled with --no-headers.)\n\nUsage:\n    xsv cat rows    [options]\
            \ [<input>...]\n    xsv cat columns [options] [<input>...]\n    xsv cat\
            \ --help\n\ncat options:\n    -p, --pad              When concatenating\
            \ columns, this flag will cause\n                           all records\
            \ to appear. It will pad each row if\n                           other\
            \ CSV data isn't long enough.\n\nCommon options:\n    -h, --help     \
            \        Display this message\n    -o, --output <file>    Write output\
            \ to <file> instead of stdout.\n    -n, --no-headers       When set, the\
            \ first row will NOT be interpreted\n                           as column\
            \ names. Note that this has no effect when\n                         \
            \  concatenating columns.\n    -d, --delimiter <arg>  The field delimiter\
            \ for reading CSV data.\n                           Must be a single character.\
            \ (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id017
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will not be included in\nthe count."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Prints a count of the number of records in the CSV data.\n\n\
            Note that the count will not include the header row (unless --no-headers\
            \ is\ngiven).\n\nUsage:\n    xsv count [options] [<input>]\n\nCommon options:\n\
            \    -h, --help             Display this message\n    -n, --no-headers\
            \       When set, the first row will not be included in\n            \
            \               the count.\n    -d, --delimiter <arg>  The field delimiter\
            \ for reading CSV data.\n                           Must be a single character.\
            \ (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id018
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            - --condense
            description: "Limits the length of each field to the value\nspecified.\
              \ If the field is UTF-8 encoded, then\n<arg> refers to the number of\
              \ code points.\nOtherwise, it refers to the number of bytes."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -s
            - --separator
            description: "A string of characters to write after each record.\nWhen\
              \ non-empty, a new line is automatically\nappended to the separator.\n\
              [default: #]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will not be interpreted\nas headers.\
              \ When set, the name of each field\nwill be its index."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Prints flattened records such that fields are labeled separated\
            \ by a new line.\nThis mode is particularly useful for viewing one record\
            \ at a time. Each\nrecord is separated by a special '#' character (on\
            \ a line by itself), which\ncan be changed with the --separator flag.\n\
            \nThere is also a condensed view (-c or --condense) that will shorten\
            \ the\ncontents of each field to provide a summary view.\n\nUsage:\n \
            \   xsv flatten [options] [<input>]\n\nflatten options:\n    -c, --condense\
            \ <arg>  Limits the length of each field to the value\n              \
            \             specified. If the field is UTF-8 encoded, then\n       \
            \                    <arg> refers to the number of code points.\n    \
            \                       Otherwise, it refers to the number of bytes.\n\
            \    -s, --separator <arg>  A string of characters to write after each\
            \ record.\n                           When non-empty, a new line is automatically\n\
            \                           appended to the separator.\n             \
            \              [default: #]\n\nCommon options:\n    -h, --help       \
            \      Display this message\n    -n, --no-headers       When set, the\
            \ first row will not be interpreted\n                           as headers.\
            \ When set, the name of each field\n                           will be\
            \ its index.\n    -d, --delimiter <arg>  The field delimiter for reading\
            \ CSV data.\n                           Must be a single character. (default:\
            \ ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id019
          positional:
          - !Positional
            optional: false
            position: 0
            name: outdir
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -s
            - --size
            description: "The number of records to write into each chunk.\n[default:\
              \ 500]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -j
            - --jobs
            description: "The number of spliting jobs to run in parallel.\nThis only\
              \ works when the given CSV data has\nan index already created. Note\
              \ that a file handle\nis opened for each job.\nWhen set to '0', the\
              \ number of jobs is set to the\nnumber of CPUs detected.\n[default:\
              \ 0]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will NOT be interpreted\nas column\
              \ names. Otherwise, the first row will\nappear in all chunks as the\
              \ header row."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Splits the given CSV data into chunks.\n\nThe files are written\
            \ to the directory given with the name '{start}.csv',\nwhere {start} is\
            \ the index of the first record of the chunk (starting at 0).\n\nUsage:\n\
            \    xsv split [options] <outdir> [<input>]\n    xsv split --help\n\n\
            split options:\n    -s, --size <arg>       The number of records to write\
            \ into each chunk.\n                           [default: 500]\n    -j,\
            \ --jobs <arg>       The number of spliting jobs to run in parallel.\n\
            \                           This only works when the given CSV data has\n\
            \                           an index already created. Note that a file\
            \ handle\n                           is opened for each job.\n       \
            \                    When set to '0', the number of jobs is set to the\n\
            \                           number of CPUs detected.\n               \
            \            [default: 0]\n\nCommon options:\n    -h, --help         \
            \    Display this message\n    -o, --output <file>    Write output to\
            \ <file> instead of stdout.\n    -n, --no-headers       When set, the\
            \ first row will NOT be interpreted\n                           as column\
            \ names. Otherwise, the first row will\n                           appear\
            \ in all chunks as the header row.\n    -d, --delimiter <arg>  The field\
            \ delimiter for reading CSV data.\n                           Must be\
            \ a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id020
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -w
            - --width
            description: "The minimum width of each column.\n[default: 2]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -p
            - --pad
            description: "The minimum number of spaces between each column.\n[default:\
              \ 2]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -c
            - --condense
            description: "Limits the length of each field to the value\nspecified.\
              \ If the field is UTF-8 encoded, then\n<arg> refers to the number of\
              \ code points.\nOtherwise, it refers to the number of bytes."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Outputs CSV data as a table with columns in alignment.\n\nThis\
            \ will not work well if the CSV data contains large fields.\n\nNote that\
            \ formatting a table requires buffering all CSV data into memory.\nTherefore,\
            \ you should use the 'sample' or 'slice' command to trim down large\n\
            CSV data before formatting it with this command.\n\nUsage:\n    xsv table\
            \ [options] [<input>]\n\ntable options:\n    -w, --width <arg>      The\
            \ minimum width of each column.\n                           [default:\
            \ 2]\n    -p, --pad <arg>        The minimum number of spaces between\
            \ each column.\n                           [default: 2]\n    -c, --condense\
            \ <arg>  Limits the length of each field to the value\n              \
            \             specified. If the field is UTF-8 encoded, then\n       \
            \                    <arg> refers to the number of code points.\n    \
            \                       Otherwise, it refers to the number of bytes.\n\
            \nCommon options:\n    -h, --help             Display this message\n \
            \   -o, --output <file>    Write output to <file> instead of stdout.\n\
            \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
            \                           Must be a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id021
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -s
            - --select
            description: "Select a subset of columns to compute stats for.\nSee 'xsv\
              \ select --help' for the format details.\nThis is provided here because\
              \ piping 'xsv select'\ninto 'xsv stats' will disable the use of indexing."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - --everything
            description: Show all statistics available.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --mode
            description: "Show the mode.\nThis requires storing all CSV data in memory."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --cardinality
            description: "Show the cardinality.\nThis requires storing all CSV data\
              \ in memory."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --median
            description: "Show the median.\nThis requires storing all CSV data in\
              \ memory."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --nulls
            description: "Include NULLs in the population size for computing\nmean\
              \ and standard deviation."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -j
            - --jobs
            description: "The number of jobs to run in parallel.\nThis works better\
              \ when the given CSV data has\nan index already created. Note that a\
              \ file handle\nis opened for each job.\nWhen set to '0', the number\
              \ of jobs is set to the\nnumber of CPUs detected.\n[default: 0]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will NOT be interpreted\nas column\
              \ names. i.e., They will be included\nin statistics."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Computes basic statistics on CSV data.\n\nBasic statistics includes\
            \ mean, median, mode, standard deviation, sum, max and\nmin values. Note\
            \ that some statistics are expensive to compute, so they must\nbe enabled\
            \ explicitly. By default, the following statistics are reported for\n\
            *every* column in the CSV data: mean, max, min and standard deviation.\
            \ The\ndefault set of statistics corresponds to statistics that can be\
            \ computed\nefficiently on a stream of data (i.e., constant memory).\n\
            \nComputing statistics on a large file can be made much faster if you\
            \ create\nan index for it first with 'xsv index'.\n\nUsage:\n    xsv stats\
            \ [options] [<input>]\n\nstats options:\n    -s, --select <arg>     Select\
            \ a subset of columns to compute stats for.\n                        \
            \   See 'xsv select --help' for the format details.\n                \
            \           This is provided here because piping 'xsv select'\n      \
            \                     into 'xsv stats' will disable the use of indexing.\n\
            \    --everything           Show all statistics available.\n    --mode\
            \                 Show the mode.\n                           This requires\
            \ storing all CSV data in memory.\n    --cardinality          Show the\
            \ cardinality.\n                           This requires storing all CSV\
            \ data in memory.\n    --median               Show the median.\n     \
            \                      This requires storing all CSV data in memory.\n\
            \    --nulls                Include NULLs in the population size for computing\n\
            \                           mean and standard deviation.\n    -j, --jobs\
            \ <arg>       The number of jobs to run in parallel.\n               \
            \            This works better when the given CSV data has\n         \
            \                  an index already created. Note that a file handle\n\
            \                           is opened for each job.\n                \
            \           When set to '0', the number of jobs is set to the\n      \
            \                     number of CPUs detected.\n                     \
            \      [default: 0]\n\nCommon options:\n    -h, --help             Display\
            \ this message\n    -o, --output <file>    Write output to <file> instead\
            \ of stdout.\n    -n, --no-headers       When set, the first row will\
            \ NOT be interpreted\n                           as column names. i.e.,\
            \ They will be included\n                           in statistics.\n \
            \   -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
            \                           Must be a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id022
          positional:
          - !Positional
            optional: false
            position: 0
            name: sample-size
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will be consider as part of\nthe\
              \ population to sample from. (When not set, the\nfirst row is the header\
              \ row and will always appear\nin the output.)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Randomly samples CSV data uniformly using memory proportional\
            \ to the size of\nthe sample.\n\nWhen an index is present, this command\
            \ will use random indexing if the sample\nsize is less than 10% of the\
            \ total number of records. This allows for efficient\nsampling such that\
            \ the entire CSV file is not parsed.\n\nThis command is intended to provide\
            \ a means to sample from a CSV data set that\nis too big to fit into memory\
            \ (for example, for use with commands like 'xsv\nfrequency' or 'xsv stats').\
            \ It will however visit every CSV record exactly\nonce, which is necessary\
            \ to provide a uniform random sample. If you wish to\nlimit the number\
            \ of records visited, use the 'xsv slice' command to pipe into\n'xsv sample'.\n\
            \nUsage:\n    xsv sample [options] <sample-size> [<input>]\n    xsv sample\
            \ --help\n\nCommon options:\n    -h, --help             Display this message\n\
            \    -o, --output <file>    Write output to <file> instead of stdout.\n\
            \    -n, --no-headers       When set, the first row will be consider as\
            \ part of\n                           the population to sample from. (When\
            \ not set, the\n                           first row is the header row\
            \ and will always appear\n                           in the output.)\n\
            \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
            \                           Must be a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id023
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -t
            - --out-delimiter
            description: "The field delimiter for writing CSV data.\n[default: ,]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - --crlf
            description: Use '\r\n' line endings in the output.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --ascii
            description: Use ASCII field and record separators.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --quote
            description: 'The quote character to use. [default: "]'
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - --quote-always
            description: Put quotes around every value.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --escape
            description: "The escape character to use. When not specified,\nquotes\
              \ are escaped by doubling them."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. [default: ,]\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Formats CSV data with a custom delimiter or CRLF line endings.\n\
            \nGenerally, all commands in xsv output CSV data in a default format,\
            \ which is\nthe same as the default format for reading CSV data. This\
            \ makes it easy to\npipe multiple xsv commands together. However, you\
            \ may want the final result to\nhave a specific delimiter or record separator,\
            \ and this is where 'xsv fmt' is\nuseful.\n\nUsage:\n    xsv fmt [options]\
            \ [<input>]\n\nfmt options:\n    -t, --out-delimiter <arg>  The field\
            \ delimiter for writing CSV data.\n                               [default:\
            \ ,]\n    --crlf                     Use '\\r\\n' line endings in the\
            \ output.\n    --ascii                    Use ASCII field and record separators.\n\
            \    --quote <arg>              The quote character to use. [default:\
            \ \"]\n    --quote-always             Put quotes around every value.\n\
            \    --escape <arg>             The escape character to use. When not\
            \ specified,\n                               quotes are escaped by doubling\
            \ them.\n\nCommon options:\n    -h, --help             Display this message\n\
            \    -o, --output <file>    Write output to <file> instead of stdout.\n\
            \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
            \                           Must be a single character. [default: ,]\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id024
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -s
            - --select
            description: "Select a subset of columns to compute frequencies\nfor.\
              \ See 'xsv select --help' for the format\ndetails. This is provided\
              \ here because piping 'xsv\nselect' into 'xsv frequency' will disable\
              \ the use\nof indexing."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -l
            - --limit
            description: "Limit the frequency table to the N most common\nitems. Set\
              \ to '0' to disable a limit.\n[default: 10]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -a
            - --asc
            description: "Sort the frequency tables in ascending order by\ncount.\
              \ The default is descending order."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-nulls
            description: Don't include NULLs in the frequency table.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -j
            - --jobs
            description: "The number of jobs to run in parallel.\nThis works better\
              \ when the given CSV data has\nan index already created. Note that a\
              \ file handle\nis opened for each job.\nWhen set to '0', the number\
              \ of jobs is set to the\nnumber of CPUs detected.\n[default: 0]"
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will NOT be included\nin the frequency\
              \ table. Additionally, the 'field'\ncolumn will be 1-based indices instead\
              \ of header\nnames."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Compute a frequency table on CSV data.\n\nThe frequency table\
            \ is formatted as CSV data:\n\n    field,value,count\n\nBy default, there\
            \ is a row for the N most frequent values for each field in the\ndata.\
            \ The order and number of values can be tweaked with --asc and --limit,\n\
            respectively.\n\nSince this computes an exact frequency table, memory\
            \ proportional to the\ncardinality of each column is required.\n\nUsage:\n\
            \    xsv frequency [options] [<input>]\n\nfrequency options:\n    -s,\
            \ --select <arg>     Select a subset of columns to compute frequencies\n\
            \                           for. See 'xsv select --help' for the format\n\
            \                           details. This is provided here because piping\
            \ 'xsv\n                           select' into 'xsv frequency' will disable\
            \ the use\n                           of indexing.\n    -l, --limit <arg>\
            \      Limit the frequency table to the N most common\n              \
            \             items. Set to '0' to disable a limit.\n                \
            \           [default: 10]\n    -a, --asc              Sort the frequency\
            \ tables in ascending order by\n                           count. The\
            \ default is descending order.\n    --no-nulls             Don't include\
            \ NULLs in the frequency table.\n    -j, --jobs <arg>       The number\
            \ of jobs to run in parallel.\n                           This works better\
            \ when the given CSV data has\n                           an index already\
            \ created. Note that a file handle\n                           is opened\
            \ for each job.\n                           When set to '0', the number\
            \ of jobs is set to the\n                           number of CPUs detected.\n\
            \                           [default: 0]\n\nCommon options:\n    -h, --help\
            \             Display this message\n    -o, --output <file>    Write output\
            \ to <file> instead of stdout.\n    -n, --no-headers       When set, the\
            \ first row will NOT be included\n                           in the frequency\
            \ table. Additionally, the 'field'\n                           column\
            \ will be 1-based indices instead of header\n                        \
            \   names.\n    -d, --delimiter <arg>  The field delimiter for reading\
            \ CSV data.\n                           Must be a single character. (default:\
            \ ,)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id025
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -s
            - --select
            description: "Select a subset of columns to sort.\nSee 'xsv select --help'\
              \ for the format details."
            args: !SimpleFlagArg
              name: arg
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Write output to <file> instead of stdout.
            args: !SimpleFlagArg
              name: file
          - !Flag
            optional: true
            synonyms:
            - -n
            - --no-headers
            description: "When set, the first row will not be interpreted\nas headers.\
              \ Namely, it will be sorted with the rest\nof the rows. Otherwise, the\
              \ first row will always\nappear as the header row in the output."
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --delimiter
            description: "The field delimiter for reading CSV data.\nMust be a single\
              \ character. (default: ,)\n"
            args: !SimpleFlagArg
              name: arg
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: Display this message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "Sorts CSV data lexicographically.\n\nNote that this requires\
            \ reading all of the CSV data into memory.\n\nUsage:\n    xsv sort [options]\
            \ [<input>]\n\nsort options:\n    -s, --select <arg>     Select a subset\
            \ of columns to sort.\n                           See 'xsv select --help'\
            \ for the format details.\n\nCommon options:\n    -h, --help         \
            \    Display this message\n    -o, --output <file>    Write output to\
            \ <file> instead of stdout.\n    -n, --no-headers       When set, the\
            \ first row will not be interpreted\n                           as headers.\
            \ Namely, it will be sorted with the rest\n                          \
            \ of the rows. Otherwise, the first row will always\n                \
            \           appear as the header row in the output.\n    -d, --delimiter\
            \ <arg>  The field delimiter for reading CSV data.\n                 \
            \          Must be a single character. (default: ,)\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage:\n    xsv <command> [<args>...]\n    xsv [options]\n\nOptions:\n\
          \    --list        List all commands available.\n    -h, --help    Display\
          \ this message\n    --version     Print version info and exit\n\nCommands:\n\
          \    cat         Concatenate by row or column\n    count       Count records\n\
          \    fixlengths  Makes all records have same length\n    flatten     Show\
          \ one field per line\n    fmt         Format CSV output (change field delimiter)\n\
          \    frequency   Show frequency tables\n    headers     Show header names\n\
          \    help        Show this usage message.\n    index       Create CSV index\
          \ for faster access\n    input       Read CSV data with special quoting\
          \ rules\n    join        Join CSV files\n    sample      Randomly sample\
          \ CSV data\n    search      Search CSV data with regexes\n    select   \
          \   Select columns from CSV\n    slice       Slice records from CSV\n  \
          \  sort        Sort CSV data\n    split       Split CSV data into many files\n\
          \    stats       Compute basic statistics\n    table       Align CSV data\
          \ into columns\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Prints the fields of the first row in the CSV data.\n\nThese names\
        \ can be used in commands like 'select' to refer to columns in the\nCSV data.\n\
        \nNote that multiple CSV files may be given to this command. This is useful\
        \ with\nthe --intersect flag.\n\nUsage:\n    xsv headers [options] [<input>...]\n\
        \nheaders options:\n    -j, --just-names       Only show the header names\
        \ (hide column index).\n                           This is automatically enabled\
        \ if more than one\n                           input is given.\n    --intersect\
        \            Shows the intersection of all headers in all of\n           \
        \                the inputs given.\n\nCommon options:\n    -h, --help    \
        \         Display this message\n    -d, --delimiter <arg>  The field delimiter\
        \ for reading CSV data.\n                           Must be a single character.\
        \ (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --quote
        description: 'The quote character to use. [default: "]'
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - --escape
        description: "The escape character to use. When not specified,\nquotes are\
          \ escaped by doubling them."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. [default: ,]\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Read CSV data with special quoting rules.\n\nGenerally, all xsv\
        \ commands support basic options like specifying the delimiter\nused in CSV\
        \ data. This does not cover all possible types of CSV data. For\nexample,\
        \ some CSV files don't use '\"' for quotes or use different escaping\nstyles.\n\
        \nUsage:\n    xsv input [options] [<input>]\n\ninput options:\n    --quote\
        \ <arg>          The quote character to use. [default: \"]\n    --escape <arg>\
        \         The escape character to use. When not specified,\n             \
        \              quotes are escaped by doubling them.\n\nCommon options:\n \
        \   -h, --help             Display this message\n    -o, --output <file> \
        \   Write output to <file> instead of stdout.\n    -d, --delimiter <arg> \
        \ The field delimiter for reading CSV data.\n                           Must\
        \ be a single character. [default: ,]\n"
      generated_using: *id004
      docker_image:
    - &id033 !Command
      command: *id007
      positional: []
      named: []
      parent: *id030
      subcommands:
      - !Command
        command: *id008
        positional:
        - !Positional
          optional: false
          position: 0
          name: input1
          description: ''
        - !Positional
          optional: false
          position: 0
          name: xsv
          description: ''
        - !Positional
          optional: false
          position: 1
          name: columns2
          description: ''
        - !Positional
          optional: false
          position: 1
          name: join
          description: ''
        named: []
        parent: *id031
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
          \ <input1> <columns2> <input2>\n    xsv join --help\n"
        generated_using: *id004
        docker_image:
      - !Command
        command: *id009
        positional:
        - !Positional
          optional: false
          position: 0
          name: xsv
          description: ''
        - !Positional
          optional: false
          position: 1
          name: join
          description: ''
        - !Positional
          optional: false
          position: 2
          name: columns1
          description: ''
        - !Positional
          optional: false
          position: 3
          name: input1
          description: ''
        - !Positional
          optional: false
          position: 4
          name: columns2
          description: ''
        named: []
        parent: *id031
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
          \ <input1> <columns2> <input2>\n    xsv join --help\n"
        generated_using: *id004
        docker_image:
      - !Command
        command: *id010
        positional:
        - !Positional
          optional: false
          position: 0
          name: xsv
          description: ''
        - !Positional
          optional: false
          position: 1
          name: join
          description: ''
        - !Positional
          optional: false
          position: 2
          name: columns1
          description: ''
        - !Positional
          optional: false
          position: 3
          name: input1
          description: ''
        - !Positional
          optional: false
          position: 4
          name: columns2
          description: ''
        named: []
        parent: *id031
        subcommands: []
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1>\
          \ <input1> <columns2> <input2>\n    xsv join --help\n"
        generated_using: *id004
        docker_image:
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Joins two sets of CSV data on the specified columns.\n\nThe default\
        \ join operation is an 'inner' join. This corresponds to the\nintersection\
        \ of rows on the keys specified.\n\nJoins are always done by ignoring leading\
        \ and trailing whitespace. By default,\njoins are done case sensitively, but\
        \ this can be disabled with the --no-case\nflag.\n\nThe columns arguments\
        \ specify the columns to join for each input. Columns can\nbe referenced by\
        \ name or index, starting at 1. Specify multiple columns by\nseparating them\
        \ with a comma. Specify a range of columns with `-`. Both\ncolumns1 and columns2\
        \ must specify exactly the same number of columns.\n(See 'xsv select --help'\
        \ for the full syntax.)\n\nUsage:\n    xsv join [options] <columns1> <input1>\
        \ <columns2> <input2>\n    xsv join --help\n\njoin options:\n    --no-case\
        \              When set, joins are done case insensitively.\n    --left  \
        \               Do a 'left outer' join. This returns all rows in\n       \
        \                    first CSV data set, including rows with no\n        \
        \                   corresponding row in the second data set. When no\n  \
        \                         corresponding row exists, it is padded out with\n\
        \                           empty fields.\n    --right                Do a\
        \ 'right outer' join. This returns all rows in\n                         \
        \  second CSV data set, including rows with no\n                         \
        \  corresponding row in the first data set. When no\n                    \
        \       corresponding row exists, it is padded out with\n                \
        \           empty fields. (This is the reverse of 'outer left'.)\n    --full\
        \                 Do a 'full outer' join. This returns all rows in\n     \
        \                      both data sets with matching records joined. If\n \
        \                          there is no match, the missing side will be padded\n\
        \                           out with empty fields. (This is the combination\
        \ of\n                           'outer left' and 'outer right'.)\n    --cross\
        \                USE WITH CAUTION.\n                           This returns\
        \ the cartesian product of the CSV\n                           data sets given.\
        \ The number of rows return is\n                           equal to N * M,\
        \ where N and M correspond to the\n                           number of rows\
        \ in the given data sets, respectively.\n    --nulls                When set,\
        \ joins will work on empty fields.\n                           Otherwise,\
        \ empty fields are completely ignored.\n                           (In fact,\
        \ any row that has an empty field in the\n                           key specified\
        \ is ignored.)\n\nCommon options:\n    -h, --help             Display this\
        \ message\n    -o, --output <file>    Write output to <file> instead of stdout.\n\
        \    -n, --no-headers       When set, the first row will not be interpreted\n\
        \                           as headers. (i.e., They are not searched, analyzed,\n\
        \                           sliced, etc.)\n    -d, --delimiter <arg>  The\
        \ field delimiter for reading CSV data.\n                           Must be\
        \ a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id011
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will not be interpreted\nas headers.\
          \ (i.e., They are not searched, analyzed,\nsliced, etc.)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Select columns from CSV data efficiently.\n\nThis command lets you\
        \ manipulate the columns in CSV data. You can re-order\nthem, duplicate them\
        \ or drop them. Columns can be referenced by index or by\nname if there is\
        \ a header row (duplicate column names can be disambiguated with\nmore indexing).\
        \ Finally, column ranges can be specified.\n\n  Select the first and fourth\
        \ columns:\n  $ xsv select 1,4\n\n  Select the first 4 columns (by index and\
        \ by name):\n  $ xsv select 1-4\n  $ xsv select Header1-Header4\n\n  Ignore\
        \ the first 2 columns (by range and by omission):\n  $ xsv select 3-\n  $\
        \ xsv select '!1-2'\n\n  Select the third column named 'Foo':\n  $ xsv select\
        \ 'Foo[2]'\n\n  Re-order and duplicate columns arbitrarily:\n  $ xsv select\
        \ 3-1,Header3-Header1,Header1,Foo[2],Header1\n\nUsage:\n    xsv select [options]\
        \ [--] <selection> [<input>]\n    xsv select --help\n\nCommon options:\n \
        \   -h, --help             Display this message\n    -o, --output <file> \
        \   Write output to <file> instead of stdout.\n    -n, --no-headers      \
        \ When set, the first row will not be interpreted\n                      \
        \     as headers. (i.e., They are not searched, analyzed,\n              \
        \             sliced, etc.)\n    -d, --delimiter <arg>  The field delimiter\
        \ for reading CSV data.\n                           Must be a single character.\
        \ (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id012
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -l
        - --length
        description: "Forcefully set the length of each record. If a\nrecord is not\
          \ the size given, then it is truncated\nor expanded as appropriate."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Transforms CSV data so that all records have the same length. The\
        \ length is\nthe length of the longest record in the data. Records with smaller\
        \ lengths are\npadded with empty fields.\n\nThis requires two complete scans\
        \ of the CSV data: one for determining the\nrecord size and one for the actual\
        \ transform. Because of this, the input\ngiven must be a file and not stdin.\n\
        \nAlternatively, if --length is set, then all records are forced to that length.\n\
        This requires a single pass and can be done with stdin.\n\nUsage:\n    xsv\
        \ fixlengths [options] [<input>]\n\nfixlengths options:\n    -l, --length\
        \ <arg>     Forcefully set the length of each record. If a\n             \
        \              record is not the size given, then it is truncated\n      \
        \                     or expanded as appropriate.\n\nCommon options:\n   \
        \ -h, --help             Display this message\n    -o, --output <file>   \
        \ Write output to <file> instead of stdout.\n    -d, --delimiter <arg>  The\
        \ field delimiter for reading CSV data.\n                           Must be\
        \ a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id013
      positional:
      - !Positional
        optional: false
        position: 0
        name: regex
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --ignore-case
        description: "Case insensitive search. This is equivalent to\nprefixing the\
          \ regex with '(?i)'."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -s
        - --select
        description: "Select the columns to search. See 'xsv select -h'\nfor the full\
          \ syntax."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -v
        - --invert-match
        description: Select only rows that did not match
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will not be interpreted\nas headers.\
          \ (i.e., They are not searched, analyzed,\nsliced, etc.)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Filters CSV data by whether the given regex matches a row.\n\nThe\
        \ regex is applied to each field in each row, and if any field matches,\n\
        then the row is written to the output. The columns to search can be limited\n\
        with the '--select' flag (but the full row is still written to the output\
        \ if\nthere is a match).\n\nUsage:\n    xsv search [options] <regex> [<input>]\n\
        \    xsv search --help\n\nsearch options:\n    -i, --ignore-case      Case\
        \ insensitive search. This is equivalent to\n                           prefixing\
        \ the regex with '(?i)'.\n    -s, --select <arg>     Select the columns to\
        \ search. See 'xsv select -h'\n                           for the full syntax.\n\
        \    -v, --invert-match     Select only rows that did not match\n\nCommon\
        \ options:\n    -h, --help             Display this message\n    -o, --output\
        \ <file>    Write output to <file> instead of stdout.\n    -n, --no-headers\
        \       When set, the first row will not be interpreted\n                \
        \           as headers. (i.e., They are not searched, analyzed,\n        \
        \                   sliced, etc.)\n    -d, --delimiter <arg>  The field delimiter\
        \ for reading CSV data.\n                           Must be a single character.\
        \ (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id014
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: "Write index to <file> instead of <input>.idx.\nGenerally, this\
          \ is not currently useful because\nthe only way to use an index is if it\
          \ is specially\nnamed <input>.idx."
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Creates an index of the given CSV data, which can make other operations\
        \ like\nslicing, splitting and gathering statistics much faster.\n\nNote that\
        \ this does not accept CSV data on stdin. You must give a file\npath. The\
        \ index is created at 'path/to/input.csv.idx'. The index will be\nautomatically\
        \ used by commands that can benefit from it. If the original CSV\ndata changes\
        \ after the index is made, commands that try to use it will result\nin an\
        \ error (you have to regenerate the index before it can be used again).\n\n\
        Usage:\n    xsv index [options] <input>\n    xsv index --help\n\nindex options:\n\
        \    -o, --output <file>    Write index to <file> instead of <input>.idx.\n\
        \                           Generally, this is not currently useful because\n\
        \                           the only way to use an index is if it is specially\n\
        \                           named <input>.idx.\n\nCommon options:\n    -h,\
        \ --help             Display this message\n    -d, --delimiter <arg>  The\
        \ field delimiter for reading CSV data.\n                           Must be\
        \ a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id015
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -s
        - --start
        description: The index of the record to slice from.
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -e
        - --end
        description: The index of the record to slice to.
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -l
        - --len
        description: "The length of the slice (can be used instead\nof --end)."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -i
        - --index
        description: Slice a single record (shortcut for -s N -l 1).
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will not be interpreted\nas headers.\
          \ Otherwise, the first row will always\nappear in the output as the header\
          \ row."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Returns the rows in the range specified (starting at 0, half-open\
        \ interval).\nThe range does not include headers.\n\nIf the start of the range\
        \ isn't specified, then the slice starts from the first\nrecord in the CSV\
        \ data.\n\nIf the end of the range isn't specified, then the slice continues\
        \ to the last\nrecord in the CSV data.\n\nThis operation can be made much\
        \ faster by creating an index with 'xsv index'\nfirst. Namely, a slice on\
        \ an index requires parsing just the rows that are\nsliced. Without an index,\
        \ all rows up to the first row in the slice must be\nparsed.\n\nUsage:\n \
        \   xsv slice [options] [<input>]\n\nslice options:\n    -s, --start <arg>\
        \      The index of the record to slice from.\n    -e, --end <arg>       \
        \ The index of the record to slice to.\n    -l, --len <arg>        The length\
        \ of the slice (can be used instead\n                           of --end).\n\
        \    -i, --index <arg>      Slice a single record (shortcut for -s N -l 1).\n\
        \nCommon options:\n    -h, --help             Display this message\n    -o,\
        \ --output <file>    Write output to <file> instead of stdout.\n    -n, --no-headers\
        \       When set, the first row will not be interpreted\n                \
        \           as headers. Otherwise, the first row will always\n           \
        \                appear in the output as the header row.\n    -d, --delimiter\
        \ <arg>  The field delimiter for reading CSV data.\n                     \
        \      Must be a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id016
      positional:
      - !Positional
        optional: false
        position: 0
        name: columns
        description: ''
      - !Positional
        optional: false
        position: 0
        name: rows
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -p
        - --pad
        description: "When concatenating columns, this flag will cause\nall records\
          \ to appear. It will pad each row if\nother CSV data isn't long enough."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will NOT be interpreted\nas column names.\
          \ Note that this has no effect when\nconcatenating columns."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Concatenates CSV data by column or by row.\n\nWhen concatenating\
        \ by column, the columns will be written in the same order as\nthe inputs\
        \ given. The number of rows in the result is always equivalent to to\nthe\
        \ minimum number of rows across all given CSV data. (This behavior can be\n\
        reversed with the '--pad' flag.)\n\nWhen concatenating by row, all CSV data\
        \ must have the same number of columns.\nIf you need to rearrange the columns\
        \ or fix the lengths of records, use the\n'select' or 'fixlengths' commands.\
        \ Also, only the headers of the *first* CSV\ndata given are used. Headers\
        \ in subsequent inputs are ignored. (This behavior\ncan be disabled with --no-headers.)\n\
        \nUsage:\n    xsv cat rows    [options] [<input>...]\n    xsv cat columns\
        \ [options] [<input>...]\n    xsv cat --help\n\ncat options:\n    -p, --pad\
        \              When concatenating columns, this flag will cause\n        \
        \                   all records to appear. It will pad each row if\n     \
        \                      other CSV data isn't long enough.\n\nCommon options:\n\
        \    -h, --help             Display this message\n    -o, --output <file>\
        \    Write output to <file> instead of stdout.\n    -n, --no-headers     \
        \  When set, the first row will NOT be interpreted\n                     \
        \      as column names. Note that this has no effect when\n              \
        \             concatenating columns.\n    -d, --delimiter <arg>  The field\
        \ delimiter for reading CSV data.\n                           Must be a single\
        \ character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id017
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will not be included in\nthe count."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Prints a count of the number of records in the CSV data.\n\nNote\
        \ that the count will not include the header row (unless --no-headers is\n\
        given).\n\nUsage:\n    xsv count [options] [<input>]\n\nCommon options:\n\
        \    -h, --help             Display this message\n    -n, --no-headers   \
        \    When set, the first row will not be included in\n                   \
        \        the count.\n    -d, --delimiter <arg>  The field delimiter for reading\
        \ CSV data.\n                           Must be a single character. (default:\
        \ ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id018
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        - --condense
        description: "Limits the length of each field to the value\nspecified. If\
          \ the field is UTF-8 encoded, then\n<arg> refers to the number of code points.\n\
          Otherwise, it refers to the number of bytes."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -s
        - --separator
        description: "A string of characters to write after each record.\nWhen non-empty,\
          \ a new line is automatically\nappended to the separator.\n[default: #]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will not be interpreted\nas headers.\
          \ When set, the name of each field\nwill be its index."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Prints flattened records such that fields are labeled separated\
        \ by a new line.\nThis mode is particularly useful for viewing one record\
        \ at a time. Each\nrecord is separated by a special '#' character (on a line\
        \ by itself), which\ncan be changed with the --separator flag.\n\nThere is\
        \ also a condensed view (-c or --condense) that will shorten the\ncontents\
        \ of each field to provide a summary view.\n\nUsage:\n    xsv flatten [options]\
        \ [<input>]\n\nflatten options:\n    -c, --condense <arg>  Limits the length\
        \ of each field to the value\n                           specified. If the\
        \ field is UTF-8 encoded, then\n                           <arg> refers to\
        \ the number of code points.\n                           Otherwise, it refers\
        \ to the number of bytes.\n    -s, --separator <arg>  A string of characters\
        \ to write after each record.\n                           When non-empty,\
        \ a new line is automatically\n                           appended to the\
        \ separator.\n                           [default: #]\n\nCommon options:\n\
        \    -h, --help             Display this message\n    -n, --no-headers   \
        \    When set, the first row will not be interpreted\n                   \
        \        as headers. When set, the name of each field\n                  \
        \         will be its index.\n    -d, --delimiter <arg>  The field delimiter\
        \ for reading CSV data.\n                           Must be a single character.\
        \ (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id019
      positional:
      - !Positional
        optional: false
        position: 0
        name: outdir
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -s
        - --size
        description: "The number of records to write into each chunk.\n[default: 500]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -j
        - --jobs
        description: "The number of spliting jobs to run in parallel.\nThis only works\
          \ when the given CSV data has\nan index already created. Note that a file\
          \ handle\nis opened for each job.\nWhen set to '0', the number of jobs is\
          \ set to the\nnumber of CPUs detected.\n[default: 0]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will NOT be interpreted\nas column names.\
          \ Otherwise, the first row will\nappear in all chunks as the header row."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Splits the given CSV data into chunks.\n\nThe files are written\
        \ to the directory given with the name '{start}.csv',\nwhere {start} is the\
        \ index of the first record of the chunk (starting at 0).\n\nUsage:\n    xsv\
        \ split [options] <outdir> [<input>]\n    xsv split --help\n\nsplit options:\n\
        \    -s, --size <arg>       The number of records to write into each chunk.\n\
        \                           [default: 500]\n    -j, --jobs <arg>       The\
        \ number of spliting jobs to run in parallel.\n                          \
        \ This only works when the given CSV data has\n                          \
        \ an index already created. Note that a file handle\n                    \
        \       is opened for each job.\n                           When set to '0',\
        \ the number of jobs is set to the\n                           number of CPUs\
        \ detected.\n                           [default: 0]\n\nCommon options:\n\
        \    -h, --help             Display this message\n    -o, --output <file>\
        \    Write output to <file> instead of stdout.\n    -n, --no-headers     \
        \  When set, the first row will NOT be interpreted\n                     \
        \      as column names. Otherwise, the first row will\n                  \
        \         appear in all chunks as the header row.\n    -d, --delimiter <arg>\
        \  The field delimiter for reading CSV data.\n                           Must\
        \ be a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id020
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -w
        - --width
        description: "The minimum width of each column.\n[default: 2]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -p
        - --pad
        description: "The minimum number of spaces between each column.\n[default:\
          \ 2]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -c
        - --condense
        description: "Limits the length of each field to the value\nspecified. If\
          \ the field is UTF-8 encoded, then\n<arg> refers to the number of code points.\n\
          Otherwise, it refers to the number of bytes."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Outputs CSV data as a table with columns in alignment.\n\nThis will\
        \ not work well if the CSV data contains large fields.\n\nNote that formatting\
        \ a table requires buffering all CSV data into memory.\nTherefore, you should\
        \ use the 'sample' or 'slice' command to trim down large\nCSV data before\
        \ formatting it with this command.\n\nUsage:\n    xsv table [options] [<input>]\n\
        \ntable options:\n    -w, --width <arg>      The minimum width of each column.\n\
        \                           [default: 2]\n    -p, --pad <arg>        The minimum\
        \ number of spaces between each column.\n                           [default:\
        \ 2]\n    -c, --condense <arg>  Limits the length of each field to the value\n\
        \                           specified. If the field is UTF-8 encoded, then\n\
        \                           <arg> refers to the number of code points.\n \
        \                          Otherwise, it refers to the number of bytes.\n\n\
        Common options:\n    -h, --help             Display this message\n    -o,\
        \ --output <file>    Write output to <file> instead of stdout.\n    -d, --delimiter\
        \ <arg>  The field delimiter for reading CSV data.\n                     \
        \      Must be a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id021
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -s
        - --select
        description: "Select a subset of columns to compute stats for.\nSee 'xsv select\
          \ --help' for the format details.\nThis is provided here because piping\
          \ 'xsv select'\ninto 'xsv stats' will disable the use of indexing."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - --everything
        description: Show all statistics available.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --mode
        description: "Show the mode.\nThis requires storing all CSV data in memory."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --cardinality
        description: "Show the cardinality.\nThis requires storing all CSV data in\
          \ memory."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --median
        description: "Show the median.\nThis requires storing all CSV data in memory."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --nulls
        description: "Include NULLs in the population size for computing\nmean and\
          \ standard deviation."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -j
        - --jobs
        description: "The number of jobs to run in parallel.\nThis works better when\
          \ the given CSV data has\nan index already created. Note that a file handle\n\
          is opened for each job.\nWhen set to '0', the number of jobs is set to the\n\
          number of CPUs detected.\n[default: 0]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will NOT be interpreted\nas column names.\
          \ i.e., They will be included\nin statistics."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Computes basic statistics on CSV data.\n\nBasic statistics includes\
        \ mean, median, mode, standard deviation, sum, max and\nmin values. Note that\
        \ some statistics are expensive to compute, so they must\nbe enabled explicitly.\
        \ By default, the following statistics are reported for\n*every* column in\
        \ the CSV data: mean, max, min and standard deviation. The\ndefault set of\
        \ statistics corresponds to statistics that can be computed\nefficiently on\
        \ a stream of data (i.e., constant memory).\n\nComputing statistics on a large\
        \ file can be made much faster if you create\nan index for it first with 'xsv\
        \ index'.\n\nUsage:\n    xsv stats [options] [<input>]\n\nstats options:\n\
        \    -s, --select <arg>     Select a subset of columns to compute stats for.\n\
        \                           See 'xsv select --help' for the format details.\n\
        \                           This is provided here because piping 'xsv select'\n\
        \                           into 'xsv stats' will disable the use of indexing.\n\
        \    --everything           Show all statistics available.\n    --mode   \
        \              Show the mode.\n                           This requires storing\
        \ all CSV data in memory.\n    --cardinality          Show the cardinality.\n\
        \                           This requires storing all CSV data in memory.\n\
        \    --median               Show the median.\n                           This\
        \ requires storing all CSV data in memory.\n    --nulls                Include\
        \ NULLs in the population size for computing\n                           mean\
        \ and standard deviation.\n    -j, --jobs <arg>       The number of jobs to\
        \ run in parallel.\n                           This works better when the\
        \ given CSV data has\n                           an index already created.\
        \ Note that a file handle\n                           is opened for each job.\n\
        \                           When set to '0', the number of jobs is set to\
        \ the\n                           number of CPUs detected.\n             \
        \              [default: 0]\n\nCommon options:\n    -h, --help           \
        \  Display this message\n    -o, --output <file>    Write output to <file>\
        \ instead of stdout.\n    -n, --no-headers       When set, the first row will\
        \ NOT be interpreted\n                           as column names. i.e., They\
        \ will be included\n                           in statistics.\n    -d, --delimiter\
        \ <arg>  The field delimiter for reading CSV data.\n                     \
        \      Must be a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id022
      positional:
      - !Positional
        optional: false
        position: 0
        name: sample-size
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will be consider as part of\nthe population\
          \ to sample from. (When not set, the\nfirst row is the header row and will\
          \ always appear\nin the output.)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Randomly samples CSV data uniformly using memory proportional to\
        \ the size of\nthe sample.\n\nWhen an index is present, this command will\
        \ use random indexing if the sample\nsize is less than 10% of the total number\
        \ of records. This allows for efficient\nsampling such that the entire CSV\
        \ file is not parsed.\n\nThis command is intended to provide a means to sample\
        \ from a CSV data set that\nis too big to fit into memory (for example, for\
        \ use with commands like 'xsv\nfrequency' or 'xsv stats'). It will however\
        \ visit every CSV record exactly\nonce, which is necessary to provide a uniform\
        \ random sample. If you wish to\nlimit the number of records visited, use\
        \ the 'xsv slice' command to pipe into\n'xsv sample'.\n\nUsage:\n    xsv sample\
        \ [options] <sample-size> [<input>]\n    xsv sample --help\n\nCommon options:\n\
        \    -h, --help             Display this message\n    -o, --output <file>\
        \    Write output to <file> instead of stdout.\n    -n, --no-headers     \
        \  When set, the first row will be consider as part of\n                 \
        \          the population to sample from. (When not set, the\n           \
        \                first row is the header row and will always appear\n    \
        \                       in the output.)\n    -d, --delimiter <arg>  The field\
        \ delimiter for reading CSV data.\n                           Must be a single\
        \ character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id023
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -t
        - --out-delimiter
        description: "The field delimiter for writing CSV data.\n[default: ,]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - --crlf
        description: Use '\r\n' line endings in the output.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --ascii
        description: Use ASCII field and record separators.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --quote
        description: 'The quote character to use. [default: "]'
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - --quote-always
        description: Put quotes around every value.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --escape
        description: "The escape character to use. When not specified,\nquotes are\
          \ escaped by doubling them."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. [default: ,]\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Formats CSV data with a custom delimiter or CRLF line endings.\n\
        \nGenerally, all commands in xsv output CSV data in a default format, which\
        \ is\nthe same as the default format for reading CSV data. This makes it easy\
        \ to\npipe multiple xsv commands together. However, you may want the final\
        \ result to\nhave a specific delimiter or record separator, and this is where\
        \ 'xsv fmt' is\nuseful.\n\nUsage:\n    xsv fmt [options] [<input>]\n\nfmt\
        \ options:\n    -t, --out-delimiter <arg>  The field delimiter for writing\
        \ CSV data.\n                               [default: ,]\n    --crlf     \
        \                Use '\\r\\n' line endings in the output.\n    --ascii   \
        \                 Use ASCII field and record separators.\n    --quote <arg>\
        \              The quote character to use. [default: \"]\n    --quote-always\
        \             Put quotes around every value.\n    --escape <arg>         \
        \    The escape character to use. When not specified,\n                  \
        \             quotes are escaped by doubling them.\n\nCommon options:\n  \
        \  -h, --help             Display this message\n    -o, --output <file>  \
        \  Write output to <file> instead of stdout.\n    -d, --delimiter <arg>  The\
        \ field delimiter for reading CSV data.\n                           Must be\
        \ a single character. [default: ,]\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id024
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -s
        - --select
        description: "Select a subset of columns to compute frequencies\nfor. See\
          \ 'xsv select --help' for the format\ndetails. This is provided here because\
          \ piping 'xsv\nselect' into 'xsv frequency' will disable the use\nof indexing."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -l
        - --limit
        description: "Limit the frequency table to the N most common\nitems. Set to\
          \ '0' to disable a limit.\n[default: 10]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -a
        - --asc
        description: "Sort the frequency tables in ascending order by\ncount. The\
          \ default is descending order."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-nulls
        description: Don't include NULLs in the frequency table.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -j
        - --jobs
        description: "The number of jobs to run in parallel.\nThis works better when\
          \ the given CSV data has\nan index already created. Note that a file handle\n\
          is opened for each job.\nWhen set to '0', the number of jobs is set to the\n\
          number of CPUs detected.\n[default: 0]"
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will NOT be included\nin the frequency\
          \ table. Additionally, the 'field'\ncolumn will be 1-based indices instead\
          \ of header\nnames."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Compute a frequency table on CSV data.\n\nThe frequency table is\
        \ formatted as CSV data:\n\n    field,value,count\n\nBy default, there is\
        \ a row for the N most frequent values for each field in the\ndata. The order\
        \ and number of values can be tweaked with --asc and --limit,\nrespectively.\n\
        \nSince this computes an exact frequency table, memory proportional to the\n\
        cardinality of each column is required.\n\nUsage:\n    xsv frequency [options]\
        \ [<input>]\n\nfrequency options:\n    -s, --select <arg>     Select a subset\
        \ of columns to compute frequencies\n                           for. See 'xsv\
        \ select --help' for the format\n                           details. This\
        \ is provided here because piping 'xsv\n                           select'\
        \ into 'xsv frequency' will disable the use\n                           of\
        \ indexing.\n    -l, --limit <arg>      Limit the frequency table to the N\
        \ most common\n                           items. Set to '0' to disable a limit.\n\
        \                           [default: 10]\n    -a, --asc              Sort\
        \ the frequency tables in ascending order by\n                           count.\
        \ The default is descending order.\n    --no-nulls             Don't include\
        \ NULLs in the frequency table.\n    -j, --jobs <arg>       The number of\
        \ jobs to run in parallel.\n                           This works better when\
        \ the given CSV data has\n                           an index already created.\
        \ Note that a file handle\n                           is opened for each job.\n\
        \                           When set to '0', the number of jobs is set to\
        \ the\n                           number of CPUs detected.\n             \
        \              [default: 0]\n\nCommon options:\n    -h, --help           \
        \  Display this message\n    -o, --output <file>    Write output to <file>\
        \ instead of stdout.\n    -n, --no-headers       When set, the first row will\
        \ NOT be included\n                           in the frequency table. Additionally,\
        \ the 'field'\n                           column will be 1-based indices instead\
        \ of header\n                           names.\n    -d, --delimiter <arg>\
        \  The field delimiter for reading CSV data.\n                           Must\
        \ be a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id025
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -s
        - --select
        description: "Select a subset of columns to sort.\nSee 'xsv select --help'\
          \ for the format details."
        args: !SimpleFlagArg
          name: arg
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Write output to <file> instead of stdout.
        args: !SimpleFlagArg
          name: file
      - !Flag
        optional: true
        synonyms:
        - -n
        - --no-headers
        description: "When set, the first row will not be interpreted\nas headers.\
          \ Namely, it will be sorted with the rest\nof the rows. Otherwise, the first\
          \ row will always\nappear as the header row in the output."
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --delimiter
        description: "The field delimiter for reading CSV data.\nMust be a single\
          \ character. (default: ,)\n"
        args: !SimpleFlagArg
          name: arg
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: Display this message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "Sorts CSV data lexicographically.\n\nNote that this requires reading\
        \ all of the CSV data into memory.\n\nUsage:\n    xsv sort [options] [<input>]\n\
        \nsort options:\n    -s, --select <arg>     Select a subset of columns to\
        \ sort.\n                           See 'xsv select --help' for the format\
        \ details.\n\nCommon options:\n    -h, --help             Display this message\n\
        \    -o, --output <file>    Write output to <file> instead of stdout.\n  \
        \  -n, --no-headers       When set, the first row will not be interpreted\n\
        \                           as headers. Namely, it will be sorted with the\
        \ rest\n                           of the rows. Otherwise, the first row will\
        \ always\n                           appear as the header row in the output.\n\
        \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n  \
        \                         Must be a single character. (default: ,)\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage:\n    xsv <command> [<args>...]\n    xsv [options]\n\nOptions:\n\
      \    --list        List all commands available.\n    -h, --help    Display this\
      \ message\n    --version     Print version info and exit\n\nCommands:\n    cat\
      \         Concatenate by row or column\n    count       Count records\n    fixlengths\
      \  Makes all records have same length\n    flatten     Show one field per line\n\
      \    fmt         Format CSV output (change field delimiter)\n    frequency \
      \  Show frequency tables\n    headers     Show header names\n    help      \
      \  Show this usage message.\n    index       Create CSV index for faster access\n\
      \    input       Read CSV data with special quoting rules\n    join        Join\
      \ CSV files\n    sample      Randomly sample CSV data\n    search      Search\
      \ CSV data with regexes\n    select      Select columns from CSV\n    slice\
      \       Slice records from CSV\n    sort        Sort CSV data\n    split   \
      \    Split CSV data into many files\n    stats       Compute basic statistics\n\
      \    table       Align CSV data into columns\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Prints the fields of the first row in the CSV data.\n\nThese names can\
    \ be used in commands like 'select' to refer to columns in the\nCSV data.\n\n\
    Note that multiple CSV files may be given to this command. This is useful with\n\
    the --intersect flag.\n\nUsage:\n    xsv headers [options] [<input>...]\n\nheaders\
    \ options:\n    -j, --just-names       Only show the header names (hide column\
    \ index).\n                           This is automatically enabled if more than\
    \ one\n                           input is given.\n    --intersect           \
    \ Shows the intersection of all headers in all of\n                          \
    \ the inputs given.\n\nCommon options:\n    -h, --help             Display this\
    \ message\n    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n\
    \                           Must be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --quote
    description: 'The quote character to use. [default: "]'
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - --escape
    description: "The escape character to use. When not specified,\nquotes are escaped\
      \ by doubling them."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ [default: ,]\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Read CSV data with special quoting rules.\n\nGenerally, all xsv commands\
    \ support basic options like specifying the delimiter\nused in CSV data. This\
    \ does not cover all possible types of CSV data. For\nexample, some CSV files\
    \ don't use '\"' for quotes or use different escaping\nstyles.\n\nUsage:\n   \
    \ xsv input [options] [<input>]\n\ninput options:\n    --quote <arg>         \
    \ The quote character to use. [default: \"]\n    --escape <arg>         The escape\
    \ character to use. When not specified,\n                           quotes are\
    \ escaped by doubling them.\n\nCommon options:\n    -h, --help             Display\
    \ this message\n    -o, --output <file>    Write output to <file> instead of stdout.\n\
    \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n      \
    \                     Must be a single character. [default: ,]\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional: []
  named: []
  parent: *id032
  subcommands:
  - !Command
    command: *id008
    positional:
    - !Positional
      optional: false
      position: 0
      name: input1
      description: ''
    - !Positional
      optional: false
      position: 0
      name: xsv
      description: ''
    - !Positional
      optional: false
      position: 1
      name: columns2
      description: ''
    - !Positional
      optional: false
      position: 1
      name: join
      description: ''
    named: []
    parent: *id033
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1> <input1>\
      \ <columns2> <input2>\n    xsv join --help\n"
    generated_using: *id004
    docker_image:
  - !Command
    command: *id009
    positional:
    - !Positional
      optional: false
      position: 0
      name: xsv
      description: ''
    - !Positional
      optional: false
      position: 1
      name: join
      description: ''
    - !Positional
      optional: false
      position: 2
      name: columns1
      description: ''
    - !Positional
      optional: false
      position: 3
      name: input1
      description: ''
    - !Positional
      optional: false
      position: 4
      name: columns2
      description: ''
    named: []
    parent: *id033
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1> <input1>\
      \ <columns2> <input2>\n    xsv join --help\n"
    generated_using: *id004
    docker_image:
  - !Command
    command: *id010
    positional:
    - !Positional
      optional: false
      position: 0
      name: xsv
      description: ''
    - !Positional
      optional: false
      position: 1
      name: join
      description: ''
    - !Positional
      optional: false
      position: 2
      name: columns1
      description: ''
    - !Positional
      optional: false
      position: 3
      name: input1
      description: ''
    - !Positional
      optional: false
      position: 4
      name: columns2
      description: ''
    named: []
    parent: *id033
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Invalid arguments.\n\nUsage:\n    xsv join [options] <columns1> <input1>\
      \ <columns2> <input2>\n    xsv join --help\n"
    generated_using: *id004
    docker_image:
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Joins two sets of CSV data on the specified columns.\n\nThe default\
    \ join operation is an 'inner' join. This corresponds to the\nintersection of\
    \ rows on the keys specified.\n\nJoins are always done by ignoring leading and\
    \ trailing whitespace. By default,\njoins are done case sensitively, but this\
    \ can be disabled with the --no-case\nflag.\n\nThe columns arguments specify the\
    \ columns to join for each input. Columns can\nbe referenced by name or index,\
    \ starting at 1. Specify multiple columns by\nseparating them with a comma. Specify\
    \ a range of columns with `-`. Both\ncolumns1 and columns2 must specify exactly\
    \ the same number of columns.\n(See 'xsv select --help' for the full syntax.)\n\
    \nUsage:\n    xsv join [options] <columns1> <input1> <columns2> <input2>\n   \
    \ xsv join --help\n\njoin options:\n    --no-case              When set, joins\
    \ are done case insensitively.\n    --left                 Do a 'left outer' join.\
    \ This returns all rows in\n                           first CSV data set, including\
    \ rows with no\n                           corresponding row in the second data\
    \ set. When no\n                           corresponding row exists, it is padded\
    \ out with\n                           empty fields.\n    --right            \
    \    Do a 'right outer' join. This returns all rows in\n                     \
    \      second CSV data set, including rows with no\n                         \
    \  corresponding row in the first data set. When no\n                        \
    \   corresponding row exists, it is padded out with\n                        \
    \   empty fields. (This is the reverse of 'outer left'.)\n    --full         \
    \        Do a 'full outer' join. This returns all rows in\n                  \
    \         both data sets with matching records joined. If\n                  \
    \         there is no match, the missing side will be padded\n               \
    \            out with empty fields. (This is the combination of\n            \
    \               'outer left' and 'outer right'.)\n    --cross                USE\
    \ WITH CAUTION.\n                           This returns the cartesian product\
    \ of the CSV\n                           data sets given. The number of rows return\
    \ is\n                           equal to N * M, where N and M correspond to the\n\
    \                           number of rows in the given data sets, respectively.\n\
    \    --nulls                When set, joins will work on empty fields.\n     \
    \                      Otherwise, empty fields are completely ignored.\n     \
    \                      (In fact, any row that has an empty field in the\n    \
    \                       key specified is ignored.)\n\nCommon options:\n    -h,\
    \ --help             Display this message\n    -o, --output <file>    Write output\
    \ to <file> instead of stdout.\n    -n, --no-headers       When set, the first\
    \ row will not be interpreted\n                           as headers. (i.e., They\
    \ are not searched, analyzed,\n                           sliced, etc.)\n    -d,\
    \ --delimiter <arg>  The field delimiter for reading CSV data.\n             \
    \              Must be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id011
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will not be interpreted\nas headers. (i.e.,\
      \ They are not searched, analyzed,\nsliced, etc.)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Select columns from CSV data efficiently.\n\nThis command lets you manipulate\
    \ the columns in CSV data. You can re-order\nthem, duplicate them or drop them.\
    \ Columns can be referenced by index or by\nname if there is a header row (duplicate\
    \ column names can be disambiguated with\nmore indexing). Finally, column ranges\
    \ can be specified.\n\n  Select the first and fourth columns:\n  $ xsv select\
    \ 1,4\n\n  Select the first 4 columns (by index and by name):\n  $ xsv select\
    \ 1-4\n  $ xsv select Header1-Header4\n\n  Ignore the first 2 columns (by range\
    \ and by omission):\n  $ xsv select 3-\n  $ xsv select '!1-2'\n\n  Select the\
    \ third column named 'Foo':\n  $ xsv select 'Foo[2]'\n\n  Re-order and duplicate\
    \ columns arbitrarily:\n  $ xsv select 3-1,Header3-Header1,Header1,Foo[2],Header1\n\
    \nUsage:\n    xsv select [options] [--] <selection> [<input>]\n    xsv select\
    \ --help\n\nCommon options:\n    -h, --help             Display this message\n\
    \    -o, --output <file>    Write output to <file> instead of stdout.\n    -n,\
    \ --no-headers       When set, the first row will not be interpreted\n       \
    \                    as headers. (i.e., They are not searched, analyzed,\n   \
    \                        sliced, etc.)\n    -d, --delimiter <arg>  The field delimiter\
    \ for reading CSV data.\n                           Must be a single character.\
    \ (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id012
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -l
    - --length
    description: "Forcefully set the length of each record. If a\nrecord is not the\
      \ size given, then it is truncated\nor expanded as appropriate."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Transforms CSV data so that all records have the same length. The length\
    \ is\nthe length of the longest record in the data. Records with smaller lengths\
    \ are\npadded with empty fields.\n\nThis requires two complete scans of the CSV\
    \ data: one for determining the\nrecord size and one for the actual transform.\
    \ Because of this, the input\ngiven must be a file and not stdin.\n\nAlternatively,\
    \ if --length is set, then all records are forced to that length.\nThis requires\
    \ a single pass and can be done with stdin.\n\nUsage:\n    xsv fixlengths [options]\
    \ [<input>]\n\nfixlengths options:\n    -l, --length <arg>     Forcefully set\
    \ the length of each record. If a\n                           record is not the\
    \ size given, then it is truncated\n                           or expanded as\
    \ appropriate.\n\nCommon options:\n    -h, --help             Display this message\n\
    \    -o, --output <file>    Write output to <file> instead of stdout.\n    -d,\
    \ --delimiter <arg>  The field delimiter for reading CSV data.\n             \
    \              Must be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id013
  positional:
  - !Positional
    optional: false
    position: 0
    name: regex
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --ignore-case
    description: "Case insensitive search. This is equivalent to\nprefixing the regex\
      \ with '(?i)'."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -s
    - --select
    description: "Select the columns to search. See 'xsv select -h'\nfor the full\
      \ syntax."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -v
    - --invert-match
    description: Select only rows that did not match
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will not be interpreted\nas headers. (i.e.,\
      \ They are not searched, analyzed,\nsliced, etc.)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Filters CSV data by whether the given regex matches a row.\n\nThe regex\
    \ is applied to each field in each row, and if any field matches,\nthen the row\
    \ is written to the output. The columns to search can be limited\nwith the '--select'\
    \ flag (but the full row is still written to the output if\nthere is a match).\n\
    \nUsage:\n    xsv search [options] <regex> [<input>]\n    xsv search --help\n\n\
    search options:\n    -i, --ignore-case      Case insensitive search. This is equivalent\
    \ to\n                           prefixing the regex with '(?i)'.\n    -s, --select\
    \ <arg>     Select the columns to search. See 'xsv select -h'\n              \
    \             for the full syntax.\n    -v, --invert-match     Select only rows\
    \ that did not match\n\nCommon options:\n    -h, --help             Display this\
    \ message\n    -o, --output <file>    Write output to <file> instead of stdout.\n\
    \    -n, --no-headers       When set, the first row will not be interpreted\n\
    \                           as headers. (i.e., They are not searched, analyzed,\n\
    \                           sliced, etc.)\n    -d, --delimiter <arg>  The field\
    \ delimiter for reading CSV data.\n                           Must be a single\
    \ character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id014
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: "Write index to <file> instead of <input>.idx.\nGenerally, this is\
      \ not currently useful because\nthe only way to use an index is if it is specially\n\
      named <input>.idx."
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Creates an index of the given CSV data, which can make other operations\
    \ like\nslicing, splitting and gathering statistics much faster.\n\nNote that\
    \ this does not accept CSV data on stdin. You must give a file\npath. The index\
    \ is created at 'path/to/input.csv.idx'. The index will be\nautomatically used\
    \ by commands that can benefit from it. If the original CSV\ndata changes after\
    \ the index is made, commands that try to use it will result\nin an error (you\
    \ have to regenerate the index before it can be used again).\n\nUsage:\n    xsv\
    \ index [options] <input>\n    xsv index --help\n\nindex options:\n    -o, --output\
    \ <file>    Write index to <file> instead of <input>.idx.\n                  \
    \         Generally, this is not currently useful because\n                  \
    \         the only way to use an index is if it is specially\n               \
    \            named <input>.idx.\n\nCommon options:\n    -h, --help           \
    \  Display this message\n    -d, --delimiter <arg>  The field delimiter for reading\
    \ CSV data.\n                           Must be a single character. (default:\
    \ ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id015
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    - --start
    description: The index of the record to slice from.
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -e
    - --end
    description: The index of the record to slice to.
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -l
    - --len
    description: "The length of the slice (can be used instead\nof --end)."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -i
    - --index
    description: Slice a single record (shortcut for -s N -l 1).
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will not be interpreted\nas headers. Otherwise,\
      \ the first row will always\nappear in the output as the header row."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Returns the rows in the range specified (starting at 0, half-open interval).\n\
    The range does not include headers.\n\nIf the start of the range isn't specified,\
    \ then the slice starts from the first\nrecord in the CSV data.\n\nIf the end\
    \ of the range isn't specified, then the slice continues to the last\nrecord in\
    \ the CSV data.\n\nThis operation can be made much faster by creating an index\
    \ with 'xsv index'\nfirst. Namely, a slice on an index requires parsing just the\
    \ rows that are\nsliced. Without an index, all rows up to the first row in the\
    \ slice must be\nparsed.\n\nUsage:\n    xsv slice [options] [<input>]\n\nslice\
    \ options:\n    -s, --start <arg>      The index of the record to slice from.\n\
    \    -e, --end <arg>        The index of the record to slice to.\n    -l, --len\
    \ <arg>        The length of the slice (can be used instead\n                \
    \           of --end).\n    -i, --index <arg>      Slice a single record (shortcut\
    \ for -s N -l 1).\n\nCommon options:\n    -h, --help             Display this\
    \ message\n    -o, --output <file>    Write output to <file> instead of stdout.\n\
    \    -n, --no-headers       When set, the first row will not be interpreted\n\
    \                           as headers. Otherwise, the first row will always\n\
    \                           appear in the output as the header row.\n    -d, --delimiter\
    \ <arg>  The field delimiter for reading CSV data.\n                         \
    \  Must be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id016
  positional:
  - !Positional
    optional: false
    position: 0
    name: columns
    description: ''
  - !Positional
    optional: false
    position: 0
    name: rows
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -p
    - --pad
    description: "When concatenating columns, this flag will cause\nall records to\
      \ appear. It will pad each row if\nother CSV data isn't long enough."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will NOT be interpreted\nas column names.\
      \ Note that this has no effect when\nconcatenating columns."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Concatenates CSV data by column or by row.\n\nWhen concatenating by\
    \ column, the columns will be written in the same order as\nthe inputs given.\
    \ The number of rows in the result is always equivalent to to\nthe minimum number\
    \ of rows across all given CSV data. (This behavior can be\nreversed with the\
    \ '--pad' flag.)\n\nWhen concatenating by row, all CSV data must have the same\
    \ number of columns.\nIf you need to rearrange the columns or fix the lengths\
    \ of records, use the\n'select' or 'fixlengths' commands. Also, only the headers\
    \ of the *first* CSV\ndata given are used. Headers in subsequent inputs are ignored.\
    \ (This behavior\ncan be disabled with --no-headers.)\n\nUsage:\n    xsv cat rows\
    \    [options] [<input>...]\n    xsv cat columns [options] [<input>...]\n    xsv\
    \ cat --help\n\ncat options:\n    -p, --pad              When concatenating columns,\
    \ this flag will cause\n                           all records to appear. It will\
    \ pad each row if\n                           other CSV data isn't long enough.\n\
    \nCommon options:\n    -h, --help             Display this message\n    -o, --output\
    \ <file>    Write output to <file> instead of stdout.\n    -n, --no-headers  \
    \     When set, the first row will NOT be interpreted\n                      \
    \     as column names. Note that this has no effect when\n                   \
    \        concatenating columns.\n    -d, --delimiter <arg>  The field delimiter\
    \ for reading CSV data.\n                           Must be a single character.\
    \ (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id017
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will not be included in\nthe count."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Prints a count of the number of records in the CSV data.\n\nNote that\
    \ the count will not include the header row (unless --no-headers is\ngiven).\n\
    \nUsage:\n    xsv count [options] [<input>]\n\nCommon options:\n    -h, --help\
    \             Display this message\n    -n, --no-headers       When set, the first\
    \ row will not be included in\n                           the count.\n    -d,\
    \ --delimiter <arg>  The field delimiter for reading CSV data.\n             \
    \              Must be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id018
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    - --condense
    description: "Limits the length of each field to the value\nspecified. If the\
      \ field is UTF-8 encoded, then\n<arg> refers to the number of code points.\n\
      Otherwise, it refers to the number of bytes."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -s
    - --separator
    description: "A string of characters to write after each record.\nWhen non-empty,\
      \ a new line is automatically\nappended to the separator.\n[default: #]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will not be interpreted\nas headers. When\
      \ set, the name of each field\nwill be its index."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Prints flattened records such that fields are labeled separated by a\
    \ new line.\nThis mode is particularly useful for viewing one record at a time.\
    \ Each\nrecord is separated by a special '#' character (on a line by itself),\
    \ which\ncan be changed with the --separator flag.\n\nThere is also a condensed\
    \ view (-c or --condense) that will shorten the\ncontents of each field to provide\
    \ a summary view.\n\nUsage:\n    xsv flatten [options] [<input>]\n\nflatten options:\n\
    \    -c, --condense <arg>  Limits the length of each field to the value\n    \
    \                       specified. If the field is UTF-8 encoded, then\n     \
    \                      <arg> refers to the number of code points.\n          \
    \                 Otherwise, it refers to the number of bytes.\n    -s, --separator\
    \ <arg>  A string of characters to write after each record.\n                \
    \           When non-empty, a new line is automatically\n                    \
    \       appended to the separator.\n                           [default: #]\n\n\
    Common options:\n    -h, --help             Display this message\n    -n, --no-headers\
    \       When set, the first row will not be interpreted\n                    \
    \       as headers. When set, the name of each field\n                       \
    \    will be its index.\n    -d, --delimiter <arg>  The field delimiter for reading\
    \ CSV data.\n                           Must be a single character. (default:\
    \ ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id019
  positional:
  - !Positional
    optional: false
    position: 0
    name: outdir
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    - --size
    description: "The number of records to write into each chunk.\n[default: 500]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -j
    - --jobs
    description: "The number of spliting jobs to run in parallel.\nThis only works\
      \ when the given CSV data has\nan index already created. Note that a file handle\n\
      is opened for each job.\nWhen set to '0', the number of jobs is set to the\n\
      number of CPUs detected.\n[default: 0]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will NOT be interpreted\nas column names.\
      \ Otherwise, the first row will\nappear in all chunks as the header row."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Splits the given CSV data into chunks.\n\nThe files are written to the\
    \ directory given with the name '{start}.csv',\nwhere {start} is the index of\
    \ the first record of the chunk (starting at 0).\n\nUsage:\n    xsv split [options]\
    \ <outdir> [<input>]\n    xsv split --help\n\nsplit options:\n    -s, --size <arg>\
    \       The number of records to write into each chunk.\n                    \
    \       [default: 500]\n    -j, --jobs <arg>       The number of spliting jobs\
    \ to run in parallel.\n                           This only works when the given\
    \ CSV data has\n                           an index already created. Note that\
    \ a file handle\n                           is opened for each job.\n        \
    \                   When set to '0', the number of jobs is set to the\n      \
    \                     number of CPUs detected.\n                           [default:\
    \ 0]\n\nCommon options:\n    -h, --help             Display this message\n   \
    \ -o, --output <file>    Write output to <file> instead of stdout.\n    -n, --no-headers\
    \       When set, the first row will NOT be interpreted\n                    \
    \       as column names. Otherwise, the first row will\n                     \
    \      appear in all chunks as the header row.\n    -d, --delimiter <arg>  The\
    \ field delimiter for reading CSV data.\n                           Must be a\
    \ single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id020
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -w
    - --width
    description: "The minimum width of each column.\n[default: 2]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -p
    - --pad
    description: "The minimum number of spaces between each column.\n[default: 2]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -c
    - --condense
    description: "Limits the length of each field to the value\nspecified. If the\
      \ field is UTF-8 encoded, then\n<arg> refers to the number of code points.\n\
      Otherwise, it refers to the number of bytes."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Outputs CSV data as a table with columns in alignment.\n\nThis will\
    \ not work well if the CSV data contains large fields.\n\nNote that formatting\
    \ a table requires buffering all CSV data into memory.\nTherefore, you should\
    \ use the 'sample' or 'slice' command to trim down large\nCSV data before formatting\
    \ it with this command.\n\nUsage:\n    xsv table [options] [<input>]\n\ntable\
    \ options:\n    -w, --width <arg>      The minimum width of each column.\n   \
    \                        [default: 2]\n    -p, --pad <arg>        The minimum\
    \ number of spaces between each column.\n                           [default:\
    \ 2]\n    -c, --condense <arg>  Limits the length of each field to the value\n\
    \                           specified. If the field is UTF-8 encoded, then\n \
    \                          <arg> refers to the number of code points.\n      \
    \                     Otherwise, it refers to the number of bytes.\n\nCommon options:\n\
    \    -h, --help             Display this message\n    -o, --output <file>    Write\
    \ output to <file> instead of stdout.\n    -d, --delimiter <arg>  The field delimiter\
    \ for reading CSV data.\n                           Must be a single character.\
    \ (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id021
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    - --select
    description: "Select a subset of columns to compute stats for.\nSee 'xsv select\
      \ --help' for the format details.\nThis is provided here because piping 'xsv\
      \ select'\ninto 'xsv stats' will disable the use of indexing."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - --everything
    description: Show all statistics available.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --mode
    description: "Show the mode.\nThis requires storing all CSV data in memory."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --cardinality
    description: "Show the cardinality.\nThis requires storing all CSV data in memory."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --median
    description: "Show the median.\nThis requires storing all CSV data in memory."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --nulls
    description: "Include NULLs in the population size for computing\nmean and standard\
      \ deviation."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -j
    - --jobs
    description: "The number of jobs to run in parallel.\nThis works better when the\
      \ given CSV data has\nan index already created. Note that a file handle\nis\
      \ opened for each job.\nWhen set to '0', the number of jobs is set to the\n\
      number of CPUs detected.\n[default: 0]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will NOT be interpreted\nas column names.\
      \ i.e., They will be included\nin statistics."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Computes basic statistics on CSV data.\n\nBasic statistics includes\
    \ mean, median, mode, standard deviation, sum, max and\nmin values. Note that\
    \ some statistics are expensive to compute, so they must\nbe enabled explicitly.\
    \ By default, the following statistics are reported for\n*every* column in the\
    \ CSV data: mean, max, min and standard deviation. The\ndefault set of statistics\
    \ corresponds to statistics that can be computed\nefficiently on a stream of data\
    \ (i.e., constant memory).\n\nComputing statistics on a large file can be made\
    \ much faster if you create\nan index for it first with 'xsv index'.\n\nUsage:\n\
    \    xsv stats [options] [<input>]\n\nstats options:\n    -s, --select <arg> \
    \    Select a subset of columns to compute stats for.\n                      \
    \     See 'xsv select --help' for the format details.\n                      \
    \     This is provided here because piping 'xsv select'\n                    \
    \       into 'xsv stats' will disable the use of indexing.\n    --everything \
    \          Show all statistics available.\n    --mode                 Show the\
    \ mode.\n                           This requires storing all CSV data in memory.\n\
    \    --cardinality          Show the cardinality.\n                          \
    \ This requires storing all CSV data in memory.\n    --median               Show\
    \ the median.\n                           This requires storing all CSV data in\
    \ memory.\n    --nulls                Include NULLs in the population size for\
    \ computing\n                           mean and standard deviation.\n    -j,\
    \ --jobs <arg>       The number of jobs to run in parallel.\n                \
    \           This works better when the given CSV data has\n                  \
    \         an index already created. Note that a file handle\n                \
    \           is opened for each job.\n                           When set to '0',\
    \ the number of jobs is set to the\n                           number of CPUs\
    \ detected.\n                           [default: 0]\n\nCommon options:\n    -h,\
    \ --help             Display this message\n    -o, --output <file>    Write output\
    \ to <file> instead of stdout.\n    -n, --no-headers       When set, the first\
    \ row will NOT be interpreted\n                           as column names. i.e.,\
    \ They will be included\n                           in statistics.\n    -d, --delimiter\
    \ <arg>  The field delimiter for reading CSV data.\n                         \
    \  Must be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id022
  positional:
  - !Positional
    optional: false
    position: 0
    name: sample-size
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will be consider as part of\nthe population\
      \ to sample from. (When not set, the\nfirst row is the header row and will always\
      \ appear\nin the output.)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Randomly samples CSV data uniformly using memory proportional to the\
    \ size of\nthe sample.\n\nWhen an index is present, this command will use random\
    \ indexing if the sample\nsize is less than 10% of the total number of records.\
    \ This allows for efficient\nsampling such that the entire CSV file is not parsed.\n\
    \nThis command is intended to provide a means to sample from a CSV data set that\n\
    is too big to fit into memory (for example, for use with commands like 'xsv\n\
    frequency' or 'xsv stats'). It will however visit every CSV record exactly\nonce,\
    \ which is necessary to provide a uniform random sample. If you wish to\nlimit\
    \ the number of records visited, use the 'xsv slice' command to pipe into\n'xsv\
    \ sample'.\n\nUsage:\n    xsv sample [options] <sample-size> [<input>]\n    xsv\
    \ sample --help\n\nCommon options:\n    -h, --help             Display this message\n\
    \    -o, --output <file>    Write output to <file> instead of stdout.\n    -n,\
    \ --no-headers       When set, the first row will be consider as part of\n   \
    \                        the population to sample from. (When not set, the\n \
    \                          first row is the header row and will always appear\n\
    \                           in the output.)\n    -d, --delimiter <arg>  The field\
    \ delimiter for reading CSV data.\n                           Must be a single\
    \ character. (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id023
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -t
    - --out-delimiter
    description: "The field delimiter for writing CSV data.\n[default: ,]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - --crlf
    description: Use '\r\n' line endings in the output.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --ascii
    description: Use ASCII field and record separators.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --quote
    description: 'The quote character to use. [default: "]'
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - --quote-always
    description: Put quotes around every value.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --escape
    description: "The escape character to use. When not specified,\nquotes are escaped\
      \ by doubling them."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ [default: ,]\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Formats CSV data with a custom delimiter or CRLF line endings.\n\nGenerally,\
    \ all commands in xsv output CSV data in a default format, which is\nthe same\
    \ as the default format for reading CSV data. This makes it easy to\npipe multiple\
    \ xsv commands together. However, you may want the final result to\nhave a specific\
    \ delimiter or record separator, and this is where 'xsv fmt' is\nuseful.\n\nUsage:\n\
    \    xsv fmt [options] [<input>]\n\nfmt options:\n    -t, --out-delimiter <arg>\
    \  The field delimiter for writing CSV data.\n                               [default:\
    \ ,]\n    --crlf                     Use '\\r\\n' line endings in the output.\n\
    \    --ascii                    Use ASCII field and record separators.\n    --quote\
    \ <arg>              The quote character to use. [default: \"]\n    --quote-always\
    \             Put quotes around every value.\n    --escape <arg>             The\
    \ escape character to use. When not specified,\n                             \
    \  quotes are escaped by doubling them.\n\nCommon options:\n    -h, --help   \
    \          Display this message\n    -o, --output <file>    Write output to <file>\
    \ instead of stdout.\n    -d, --delimiter <arg>  The field delimiter for reading\
    \ CSV data.\n                           Must be a single character. [default:\
    \ ,]\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id024
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    - --select
    description: "Select a subset of columns to compute frequencies\nfor. See 'xsv\
      \ select --help' for the format\ndetails. This is provided here because piping\
      \ 'xsv\nselect' into 'xsv frequency' will disable the use\nof indexing."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -l
    - --limit
    description: "Limit the frequency table to the N most common\nitems. Set to '0'\
      \ to disable a limit.\n[default: 10]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -a
    - --asc
    description: "Sort the frequency tables in ascending order by\ncount. The default\
      \ is descending order."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-nulls
    description: Don't include NULLs in the frequency table.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -j
    - --jobs
    description: "The number of jobs to run in parallel.\nThis works better when the\
      \ given CSV data has\nan index already created. Note that a file handle\nis\
      \ opened for each job.\nWhen set to '0', the number of jobs is set to the\n\
      number of CPUs detected.\n[default: 0]"
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will NOT be included\nin the frequency table.\
      \ Additionally, the 'field'\ncolumn will be 1-based indices instead of header\n\
      names."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Compute a frequency table on CSV data.\n\nThe frequency table is formatted\
    \ as CSV data:\n\n    field,value,count\n\nBy default, there is a row for the\
    \ N most frequent values for each field in the\ndata. The order and number of\
    \ values can be tweaked with --asc and --limit,\nrespectively.\n\nSince this computes\
    \ an exact frequency table, memory proportional to the\ncardinality of each column\
    \ is required.\n\nUsage:\n    xsv frequency [options] [<input>]\n\nfrequency options:\n\
    \    -s, --select <arg>     Select a subset of columns to compute frequencies\n\
    \                           for. See 'xsv select --help' for the format\n    \
    \                       details. This is provided here because piping 'xsv\n \
    \                          select' into 'xsv frequency' will disable the use\n\
    \                           of indexing.\n    -l, --limit <arg>      Limit the\
    \ frequency table to the N most common\n                           items. Set\
    \ to '0' to disable a limit.\n                           [default: 10]\n    -a,\
    \ --asc              Sort the frequency tables in ascending order by\n       \
    \                    count. The default is descending order.\n    --no-nulls \
    \            Don't include NULLs in the frequency table.\n    -j, --jobs <arg>\
    \       The number of jobs to run in parallel.\n                           This\
    \ works better when the given CSV data has\n                           an index\
    \ already created. Note that a file handle\n                           is opened\
    \ for each job.\n                           When set to '0', the number of jobs\
    \ is set to the\n                           number of CPUs detected.\n       \
    \                    [default: 0]\n\nCommon options:\n    -h, --help         \
    \    Display this message\n    -o, --output <file>    Write output to <file> instead\
    \ of stdout.\n    -n, --no-headers       When set, the first row will NOT be included\n\
    \                           in the frequency table. Additionally, the 'field'\n\
    \                           column will be 1-based indices instead of header\n\
    \                           names.\n    -d, --delimiter <arg>  The field delimiter\
    \ for reading CSV data.\n                           Must be a single character.\
    \ (default: ,)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id025
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -s
    - --select
    description: "Select a subset of columns to sort.\nSee 'xsv select --help' for\
      \ the format details."
    args: !SimpleFlagArg
      name: arg
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Write output to <file> instead of stdout.
    args: !SimpleFlagArg
      name: file
  - !Flag
    optional: true
    synonyms:
    - -n
    - --no-headers
    description: "When set, the first row will not be interpreted\nas headers. Namely,\
      \ it will be sorted with the rest\nof the rows. Otherwise, the first row will\
      \ always\nappear as the header row in the output."
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --delimiter
    description: "The field delimiter for reading CSV data.\nMust be a single character.\
      \ (default: ,)\n"
    args: !SimpleFlagArg
      name: arg
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: Display this message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "Sorts CSV data lexicographically.\n\nNote that this requires reading\
    \ all of the CSV data into memory.\n\nUsage:\n    xsv sort [options] [<input>]\n\
    \nsort options:\n    -s, --select <arg>     Select a subset of columns to sort.\n\
    \                           See 'xsv select --help' for the format details.\n\n\
    Common options:\n    -h, --help             Display this message\n    -o, --output\
    \ <file>    Write output to <file> instead of stdout.\n    -n, --no-headers  \
    \     When set, the first row will not be interpreted\n                      \
    \     as headers. Namely, it will be sorted with the rest\n                  \
    \         of the rows. Otherwise, the first row will always\n                \
    \           appear as the header row in the output.\n    -d, --delimiter <arg>\
    \  The field delimiter for reading CSV data.\n                           Must\
    \ be a single character. (default: ,)\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage:\n    xsv <command> [<args>...]\n    xsv [options]\n\nOptions:\n\
  \    --list        List all commands available.\n    -h, --help    Display this\
  \ message\n    --version     Print version info and exit\n\nCommands:\n    cat \
  \        Concatenate by row or column\n    count       Count records\n    fixlengths\
  \  Makes all records have same length\n    flatten     Show one field per line\n\
  \    fmt         Format CSV output (change field delimiter)\n    frequency   Show\
  \ frequency tables\n    headers     Show header names\n    help        Show this\
  \ usage message.\n    index       Create CSV index for faster access\n    input\
  \       Read CSV data with special quoting rules\n    join        Join CSV files\n\
  \    sample      Randomly sample CSV data\n    search      Search CSV data with\
  \ regexes\n    select      Select columns from CSV\n    slice       Slice records\
  \ from CSV\n    sort        Sort CSV data\n    split       Split CSV data into many\
  \ files\n    stats       Compute basic statistics\n    table       Align CSV data\
  \ into columns\n"
generated_using: *id004
docker_image:
