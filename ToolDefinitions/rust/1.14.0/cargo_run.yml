!Command
command:
- cargo
- run
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --bin
  description: Name of the bin target to run
  args: !SimpleFlagArg
    name: NAME
- !Flag
  optional: true
  synonyms:
  - --example
  description: Name of the example target to run
  args: !SimpleFlagArg
    name: NAME
- !Flag
  optional: true
  synonyms:
  - -j
  - --jobs
  description: 'Number of parallel jobs, defaults to # of CPUs'
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --release
  description: Build artifacts in release mode, with optimizations
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --features
  description: Space-separated list of features to also build
  args: !SimpleFlagArg
    name: FEATURES
- !Flag
  optional: true
  synonyms:
  - --all-features
  description: Build all available features
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-default-features
  description: Do not build the `default` feature
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --target
  description: Build for the target triple
  args: !SimpleFlagArg
    name: TRIPLE
- !Flag
  optional: true
  synonyms:
  - --manifest-path
  description: Path to the manifest to execute
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: '...       Use verbose output'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: No output printed to stdout
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --color
  description: 'Coloring: auto, always, never'
  args: !SimpleFlagArg
    name: WHEN
- !Flag
  optional: true
  synonyms:
  - --message-format
  description: 'Error format: human, json [default: human]'
  args: !SimpleFlagArg
    name: FMT
- !Flag
  optional: true
  synonyms:
  - --frozen
  description: Require Cargo.lock and cache are up to date
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --locked
  description: Require Cargo.lock is up to date
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Print this message
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Run the main binary of the local package (src/main.rs)\n\nUsage:\n   \
  \ cargo run [options] [--] [<args>...]\n\nOptions:\n    -h, --help             \
  \ Print this message\n    --bin NAME              Name of the bin target to run\n\
  \    --example NAME          Name of the example target to run\n    -j N, --jobs\
  \ N          Number of parallel jobs, defaults to # of CPUs\n    --release     \
  \          Build artifacts in release mode, with optimizations\n    --features FEATURES\
  \     Space-separated list of features to also build\n    --all-features       \
  \   Build all available features\n    --no-default-features   Do not build the `default`\
  \ feature\n    --target TRIPLE         Build for the target triple\n    --manifest-path\
  \ PATH    Path to the manifest to execute\n    -v, --verbose ...       Use verbose\
  \ output\n    -q, --quiet             No output printed to stdout\n    --color WHEN\
  \            Coloring: auto, always, never\n    --message-format FMT    Error format:\
  \ human, json [default: human]\n    --frozen                Require Cargo.lock and\
  \ cache are up to date\n    --locked                Require Cargo.lock is up to\
  \ date\n\nIf neither `--bin` nor `--example` are given, then if the project only\
  \ has one\nbin target it will be run. Otherwise `--bin` specifies the bin target\
  \ to run,\nand `--example` specifies the example target to run. At most one of `--bin`\
  \ or\n`--example` can be provided.\n\nAll of the trailing arguments are passed to\
  \ the binary to run. If you're passing\narguments to both Cargo and the binary,\
  \ the ones after `--` go to the binary,\nthe ones before go to Cargo.\n"
generated_using:
- --help
docker_image:
