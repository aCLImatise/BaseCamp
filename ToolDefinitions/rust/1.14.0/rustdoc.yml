!Command
command:
- rustdoc
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: use verbose output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --input-format
  description: "[rust]\nthe input type of the specified file"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  - --output-format
  description: "[html]\nthe output type to write"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: where to place the output
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - --crate-name
  description: specify the name of this crate
  args: !SimpleFlagArg
    name: NAME
- !Flag
  optional: true
  synonyms:
  - -L
  - --library-path
  description: directory to add to crate search path
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - --cfg
  description: pass a --cfg to rustc
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --extern
  description: =PATH  pass an --extern to rustc
  args: !SimpleFlagArg
    name: NAME
- !Flag
  optional: true
  synonyms:
  - --plugin-path
  description: directory to load plugins from
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - --passes
  description: "list of passes to also run, you might want to pass it\nmultiple times;\
    \ a value of `list` will print available\npasses"
  args: !SimpleFlagArg
    name: PASSES
- !Flag
  optional: true
  synonyms:
  - --plugins
  description: space separated list of plugins to also load
  args: !SimpleFlagArg
    name: PLUGINS
- !Flag
  optional: true
  synonyms:
  - --no-defaults
  description: don't run the default passes
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --test
  description: run code examples as tests
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --test-args
  description: arguments to pass to the test runner
  args: !SimpleFlagArg
    name: ARGS
- !Flag
  optional: true
  synonyms:
  - --target
  description: target triple to document
  args: !SimpleFlagArg
    name: TRIPLE
- !Flag
  optional: true
  synonyms:
  - --markdown-css
  description: "CSS files to include via <link> in a rendered Markdown\nfile"
  args: !SimpleFlagArg
    name: FILES
- !Flag
  optional: true
  synonyms:
  - --html-in-header
  description: "files to include inline in the <head> section of a\nrendered Markdown\
    \ file or generated documentation"
  args: !SimpleFlagArg
    name: FILES
- !Flag
  optional: true
  synonyms:
  - --html-before-content
  description: "files to include inline between <body> and the content\nof a rendered\
    \ Markdown file or generated documentation"
  args: !SimpleFlagArg
    name: FILES
- !Flag
  optional: true
  synonyms:
  - --html-after-content
  description: "files to include inline between the content and\n</body> of a rendered\
    \ Markdown file or generated\ndocumentation"
  args: !SimpleFlagArg
    name: FILES
- !Flag
  optional: true
  synonyms:
  - --markdown-playground-url
  description: URL to send code snippets to
  args: !SimpleFlagArg
    name: URL
- !Flag
  optional: true
  synonyms:
  - --markdown-no-toc
  description: don't include table of contents
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --extend-css
  description: "to redefine some css rules with a given file to\ngenerate doc with\
    \ your own theme"
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - -Z
  description: internal and debugging options (only on nightly build)
  args: !SimpleFlagArg
    name: FLAG
- !Flag
  optional: true
  synonyms:
  - --sysroot
  description: Override the system root
  args: !SimpleFlagArg
    name: PATH
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -V
  - --version
  description: print rustdoc's version
  args: !EmptyFlagArg {}
help_text: "rustdoc [options] <input>\n\nOptions:\n    -h --help           show this\
  \ help message\n    -V --version        print rustdoc's version\n    -v --verbose\
  \        use verbose output\n    -r --input-format [rust]\n                    \
  \    the input type of the specified file\n    -w --output-format [html]\n     \
  \                   the output type to write\n    -o --output PATH    where to place\
  \ the output\n    --crate-name NAME   specify the name of this crate\n    -L --library-path\
  \ DIR\n                        directory to add to crate search path\n    --cfg\
  \               pass a --cfg to rustc\n    --extern NAME=PATH  pass an --extern\
  \ to rustc\n    --plugin-path DIR   directory to load plugins from\n    --passes\
  \ PASSES     list of passes to also run, you might want to pass it\n           \
  \             multiple times; a value of `list` will print available\n         \
  \               passes\n    --plugins PLUGINS   space separated list of plugins\
  \ to also load\n    --no-defaults       don't run the default passes\n    --test\
  \              run code examples as tests\n    --test-args ARGS    arguments to\
  \ pass to the test runner\n    --target TRIPLE     target triple to document\n \
  \   --markdown-css FILES\n                        CSS files to include via <link>\
  \ in a rendered Markdown\n                        file\n    --html-in-header FILES\n\
  \                        files to include inline in the <head> section of a\n  \
  \                      rendered Markdown file or generated documentation\n    --html-before-content\
  \ FILES\n                        files to include inline between <body> and the\
  \ content\n                        of a rendered Markdown file or generated documentation\n\
  \    --html-after-content FILES\n                        files to include inline\
  \ between the content and\n                        </body> of a rendered Markdown\
  \ file or generated\n                        documentation\n    --markdown-playground-url\
  \ URL\n                        URL to send code snippets to\n    --markdown-no-toc\
  \   don't include table of contents\n    -e --extend-css PATH\n                \
  \        to redefine some css rules with a given file to\n                     \
  \   generate doc with your own theme\n    -Z FLAG             internal and debugging\
  \ options (only on nightly build)\n    --sysroot PATH      Override the system root\n\
  \n"
generated_using:
- --help
docker_image:
