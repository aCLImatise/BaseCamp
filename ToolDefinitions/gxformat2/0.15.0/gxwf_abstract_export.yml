&id001 !Command
command:
- gxwf-abstract-export
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - gxwf-abstract-export
  - OUTPUT
  positional:
  - !Positional
    optional: false
    position: 0
    name: gxwf-abstract-export
    description: ''
  - !Positional
    optional: false
    position: 1
    name: INPUT
    description: ''
  - !Positional
    optional: true
    position: 2
    name: OUTPUT
    description: ''
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: ''
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: gxwf-abstract-export [-h] INPUT [OUTPUT]\ngxwf-abstract-export:\
    \ error: unrecognized arguments: --usage\n"
  generated_using:
  - --usage
  docker_image: quay.io/biocontainers/gxformat2:0.15.0--pyh864c0ab_0
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: gxwf-abstract-export [-h] INPUT [OUTPUT]\n\nThis script converts\
  \ the an executable Galaxy workflow (in either format -\nFormat 2 or native .ga)\
  \ into an abstract CWL representation. In order to\nrepresent Galaxy tool executions\
  \ in the Common Workflow Language workflow\nlanguage, they are serialized as v1.2+\
  \ abstract 'Operation' classes. Because\nabstract 'Operation' classes are used,\
  \ the resulting CWL workflow is not\nexecutable - either in Galaxy or by CWL implementations.\
  \ The resulting CWL\nfile should be thought of more as a common metadata specification\
  \ describing\nthe workflow structure.\n\npositional arguments:\n  INPUT       input\
  \ workflow path (.ga/gxwf.yml)\n  OUTPUT      output workflow path (.cwl)\n\noptional\
  \ arguments:\n  -h, --help  show this help message and exit\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/gxformat2:0.15.0--pyh864c0ab_0
