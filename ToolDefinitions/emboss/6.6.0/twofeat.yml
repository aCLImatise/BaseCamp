!Command
command:
- twofeat
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -atype
  description: "string     [*] By default every feature in the feature\ntable is allowed.\
    \ You can set this to be any\nfeature type you wish to allow.\nSee http://www.ebi.ac.uk/embl/WebFeat/\
    \ for a\nlist of the EMBL feature types and see\nAppendix A of the Swissprot user\
    \ manual in\nhttp://www.expasy.org/sprot/userman.html for\na list of the Swissprot\
    \ feature types.\nThe type may be wildcarded by using '*'.\nIf you wish to allow\
    \ more than one type,\nseparate their names with the character '|',\neg:\n*UTR\
    \ | intron (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -btype
  description: "string     [*] By default every feature in the feature\ntable is allowed.\
    \ You can set this to be any\nfeature type you wish to allow.\nSee http://www.ebi.ac.uk/embl/WebFeat/\
    \ for a\nlist of the EMBL feature types and see\nAppendix A of the Swissprot user\
    \ manual in\nhttp://www.expasy.org/sprot/userman.html for\na list of the Swissprot\
    \ feature types.\nThe type may be wildcarded by using '*'.\nIf you wish to allow\
    \ more than one type,\nseparate their names with the character '|',\neg:\n*UTR\
    \ | intron (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -minrange
  description: "integer    [0] If this is greater or equal to\n'maxrange', then no\
    \ min or max range is\nspecified (Any integer value)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -maxrange
  description: "integer    [0] If this is less than or equal to\n'minrange', then\
    \ no min or max range is\nspecified (Any integer value)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -asource
  description: "string     [*] By default any feature source in the\nfeature table\
    \ is allowed. You can set this\nto match any feature source you wish to\nallow.\n\
    The source name is usually either the name\nof the program that detected the feature\
    \ or\nit is the feature table (eg: EMBL) that the\nfeature came from.\nThe source\
    \ may be wildcarded by using '*'.\nIf you wish to allow more than one source,\n\
    separate their names with the character '|',\neg:\ngene* | embl (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -asense
  description: "menu       [0] By default any feature sense is allowed.\nYou can set\
    \ this to match the required\nsense. (Values: 0 (Any sense); + (Forward\nsense);\
    \ - (Reverse sense))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -aminscore
  description: "float      [0.0] If this is greater than or equal to\nthe maximum\
    \ score, then any score is\nallowed. (Any numeric value)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -amaxscore
  description: "float      [0.0] If this is less than or equal to the\nmaximum score,\
    \ then any score is permitted.\n(Any numeric value)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -atag
  description: "string     [*] Tags are the types of extra values that\na feature\
    \ may have. For example in the EMBL\nfeature table, a 'CDS' type of feature may\n\
    have the tags '/codon', '/codon_start',\n'/db_xref', '/EC_number', '/evidence',\n\
    '/exception', '/function', '/gene',\n'/label', '/map', '/note', '/number',\n'/partial',\
    \ '/product', '/protein_id',\n'/pseudo', '/standard_name', '/translation',\n'/transl_except',\
    \ '/transl_table', or\n'/usedin'. Some of these tags also have\nvalues, for example\
    \ '/gene' can have the\nvalue of the gene name.\nBy default any feature tag in\
    \ the feature\ntable is allowed. You can set this to match\nany feature tag you\
    \ wish to allow.\nThe tag may be wildcarded by using '*'.\nIf you wish to allow\
    \ more than one tag,\nseparate their names with the character '|',\neg:\ngene\
    \ | label (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -avalue
  description: "string     [*] Tag values are the values associated\nwith a feature\
    \ tag. Tags are the types of\nextra values that a feature may have. For\nexample\
    \ in the EMBL feature table, a 'CDS'\ntype of feature may have the tags '/codon',\n\
    '/codon_start', '/db_xref', '/EC_number',\n'/evidence', '/exception', '/function',\n\
    '/gene', '/label', '/map', '/note',\n'/number', '/partial', '/product',\n'/protein_id',\
    \ '/pseudo', '/standard_name',\n'/translation', '/transl_except',\n'/transl_table',\
    \ or '/usedin'. Only some of\nthese tags can have values, for example\n'/gene'\
    \ can have the value of the gene name.\nBy default any feature tag value in the\n\
    feature table is allowed. You can set this\nto match any feature tag value you\
    \ wish to\nallow.\nThe tag value may be wildcarded by using\n'*'.\nIf you wish\
    \ to allow more than one tag\nvalue, separate their names with the\ncharacter\
    \ '|', eg:\npax* | 10 (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bsource
  description: "string     [*] By default any feature source in the\nfeature table\
    \ is allowed. You can set this\nto match any feature source you wish to\nallow.\n\
    The source name is usually either the name\nof the program that detected the feature\
    \ or\nit is the feature table (eg: EMBL) that the\nfeature came from.\nThe source\
    \ may be wildcarded by using '*'.\nIf you wish to allow more than one source,\n\
    separate their names with the character '|',\neg:\ngene* | embl (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bsense
  description: "menu       [0] By default any feature sense is allowed.\nYou can set\
    \ this to match the required\nsense. (Values: 0 (Any sense); + (Forward\nsense);\
    \ - (Reverse sense))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bminscore
  description: "float      [0.0] If this is greater than or equal to\nthe maximum\
    \ score, then any score is\nallowed. (Any numeric value)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bmaxscore
  description: "float      [0.0] If this is less than or equal to the\nmaximum score,\
    \ then any score is permitted.\n(Any numeric value)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -btag
  description: "string     [*] Tags are the types of extra values that\na feature\
    \ may have. For example in the EMBL\nfeature table, a 'CDS' type of feature may\n\
    have the tags '/codon', '/codon_start',\n'/db_xref', '/EC_number', '/evidence',\n\
    '/exception', '/function', '/gene',\n'/label', '/map', '/note', '/number',\n'/partial',\
    \ '/product', '/protein_id',\n'/pseudo', '/standard_name', '/translation',\n'/transl_except',\
    \ '/transl_table', or\n'/usedin'. Some of these tags also have\nvalues, for example\
    \ '/gene' can have the\nvalue of the gene name.\nBy default any feature tag in\
    \ the feature\ntable is allowed. You can set this to match\nany feature tag you\
    \ wish to allow.\nThe tag may be wildcarded by using '*'.\nIf you wish to allow\
    \ more than one tag,\nseparate their names with the character '|',\neg:\ngene\
    \ | label (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bvalue
  description: "string     [*] Tag values are the values associated\nwith a feature\
    \ tag. Tags are the types of\nextra values that a feature may have. For\nexample\
    \ in the EMBL feature table, a 'CDS'\ntype of feature may have the tags '/codon',\n\
    '/codon_start', '/db_xref', '/EC_number',\n'/evidence', '/exception', '/function',\n\
    '/gene', '/label', '/map', '/note',\n'/number', '/partial', '/product',\n'/protein_id',\
    \ '/pseudo', '/standard_name',\n'/translation', '/transl_except',\n'/transl_table',\
    \ or '/usedin'. Only some of\nthese tags can have values, for example\n'/gene'\
    \ can have the value of the gene name.\nBy default any feature tag value in the\n\
    feature table is allowed. You can set this\nto match any feature tag value you\
    \ wish to\nallow.\nThe tag value may be wildcarded by using\n'*'.\nIf you wish\
    \ to allow more than one tag\nvalue, separate their names with the\ncharacter\
    \ '|', eg:\npax* | 10 (Any string)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -overlap
  description: "menu       [A] This allows you to specify the allowed\noverlaps of\
    \ the features A and B.\nYou can allow any or no overlaps, specify\nthat they\
    \ must or must not overlap, that one\nmust or must not be wholly enclosed within\n\
    another feature. (Values: A (Any); O\n(Overlap required); NO (No overlaps are\n\
    allowed); NW (Overlap required but not\nwithin); AW (A must be all within B);\
    \ BW (B\nmust be all within A))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -rangetype
  description: "menu       [N] This allows you to specify the positions\nfrom which\
    \ the allowed minimum or maximum\ndistance between the features is measured\n\
    (Values: N (From nearest ends); L (From left\nends); R (From right ends); F (From\n\
    furthest ends))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -sense
  description: "menu       [A] This allows you to specify the required\nsense that\
    \ the two features must be on. This\nis ignored (always 'Any') when looking at\n\
    protein sequence features. (Values: A (Any\nsense); S (Same sense); O (Opposite\
    \ sense))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -order
  description: "menu       [A] This allows you to specify the required\norder of the\
    \ two features. The order is\nmeasured from the start positions of the\nfeatures.\
    \ This criterion is always applied\ndespite the specified overlap type required.\n\
    (Values: A (Any); AB (Feature A then\nfeature B); BA (Feature B then feature A))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -twoout
  description: "toggle     [N] If you set this to be true, then the two\nfeatures\
    \ themselves will be written out. If\nit is left as false, then a single feature\n\
    will be written out covering the two\nfeatures you found."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -help
  description: "boolean    Report command line options and exit. More\ninformation\
    \ on associated and general\nqualifiers can be found with -help -verbose\n"
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Find neighbouring pairs of features in sequence(s)\nVersion: EMBOSS:6.6.0.0\n\
  \n   Standard (Mandatory) qualifiers:\n  [-sequence]          seqall     Sequence(s)\
  \ filename and optional format, or\n                                  reference\
  \ (input USA)\n   -atype              string     [*] By default every feature in\
  \ the feature\n                                  table is allowed. You can set this\
  \ to be any\n                                  feature type you wish to allow.\n\
  \                                  See http://www.ebi.ac.uk/embl/WebFeat/ for a\n\
  \                                  list of the EMBL feature types and see\n    \
  \                              Appendix A of the Swissprot user manual in\n    \
  \                              http://www.expasy.org/sprot/userman.html for\n  \
  \                                a list of the Swissprot feature types.\n      \
  \                            The type may be wildcarded by using '*'.\n        \
  \                          If you wish to allow more than one type,\n          \
  \                        separate their names with the character '|',\n        \
  \                          eg:\n                                  *UTR | intron\
  \ (Any string)\n   -btype              string     [*] By default every feature in\
  \ the feature\n                                  table is allowed. You can set this\
  \ to be any\n                                  feature type you wish to allow.\n\
  \                                  See http://www.ebi.ac.uk/embl/WebFeat/ for a\n\
  \                                  list of the EMBL feature types and see\n    \
  \                              Appendix A of the Swissprot user manual in\n    \
  \                              http://www.expasy.org/sprot/userman.html for\n  \
  \                                a list of the Swissprot feature types.\n      \
  \                            The type may be wildcarded by using '*'.\n        \
  \                          If you wish to allow more than one type,\n          \
  \                        separate their names with the character '|',\n        \
  \                          eg:\n                                  *UTR | intron\
  \ (Any string)\n   -minrange           integer    [0] If this is greater or equal\
  \ to\n                                  'maxrange', then no min or max range is\n\
  \                                  specified (Any integer value)\n   -maxrange \
  \          integer    [0] If this is less than or equal to\n                   \
  \               'minrange', then no min or max range is\n                      \
  \            specified (Any integer value)\n  [-outfile]           report     [*.twofeat]\
  \ Output report file name (default\n                                  -rformat table)\n\
  \n   Additional (Optional) qualifiers (* if not always prompted):\n   -asource \
  \           string     [*] By default any feature source in the\n              \
  \                    feature table is allowed. You can set this\n              \
  \                    to match any feature source you wish to\n                 \
  \                 allow.\n                                  The source name is usually\
  \ either the name\n                                  of the program that detected\
  \ the feature or\n                                  it is the feature table (eg:\
  \ EMBL) that the\n                                  feature came from.\n       \
  \                           The source may be wildcarded by using '*'.\n       \
  \                           If you wish to allow more than one source,\n       \
  \                           separate their names with the character '|',\n     \
  \                             eg:\n                                  gene* | embl\
  \ (Any string)\n   -asense             menu       [0] By default any feature sense\
  \ is allowed.\n                                  You can set this to match the required\n\
  \                                  sense. (Values: 0 (Any sense); + (Forward\n \
  \                                 sense); - (Reverse sense))\n   -aminscore    \
  \      float      [0.0] If this is greater than or equal to\n                  \
  \                the maximum score, then any score is\n                        \
  \          allowed. (Any numeric value)\n   -amaxscore          float      [0.0]\
  \ If this is less than or equal to the\n                                  maximum\
  \ score, then any score is permitted.\n                                  (Any numeric\
  \ value)\n   -atag               string     [*] Tags are the types of extra values\
  \ that\n                                  a feature may have. For example in the\
  \ EMBL\n                                  feature table, a 'CDS' type of feature\
  \ may\n                                  have the tags '/codon', '/codon_start',\n\
  \                                  '/db_xref', '/EC_number', '/evidence',\n    \
  \                              '/exception', '/function', '/gene',\n           \
  \                       '/label', '/map', '/note', '/number',\n                \
  \                  '/partial', '/product', '/protein_id',\n                    \
  \              '/pseudo', '/standard_name', '/translation',\n                  \
  \                '/transl_except', '/transl_table', or\n                       \
  \           '/usedin'. Some of these tags also have\n                          \
  \        values, for example '/gene' can have the\n                            \
  \      value of the gene name.\n                                  By default any\
  \ feature tag in the feature\n                                  table is allowed.\
  \ You can set this to match\n                                  any feature tag you\
  \ wish to allow.\n                                  The tag may be wildcarded by\
  \ using '*'.\n                                  If you wish to allow more than one\
  \ tag,\n                                  separate their names with the character\
  \ '|',\n                                  eg:\n                                \
  \  gene | label (Any string)\n   -avalue             string     [*] Tag values are\
  \ the values associated\n                                  with a feature tag. Tags\
  \ are the types of\n                                  extra values that a feature\
  \ may have. For\n                                  example in the EMBL feature table,\
  \ a 'CDS'\n                                  type of feature may have the tags '/codon',\n\
  \                                  '/codon_start', '/db_xref', '/EC_number',\n \
  \                                 '/evidence', '/exception', '/function',\n    \
  \                              '/gene', '/label', '/map', '/note',\n           \
  \                       '/number', '/partial', '/product',\n                   \
  \               '/protein_id', '/pseudo', '/standard_name',\n                  \
  \                '/translation', '/transl_except',\n                           \
  \       '/transl_table', or '/usedin'. Only some of\n                          \
  \        these tags can have values, for example\n                             \
  \     '/gene' can have the value of the gene name.\n                           \
  \       By default any feature tag value in the\n                              \
  \    feature table is allowed. You can set this\n                              \
  \    to match any feature tag value you wish to\n                              \
  \    allow.\n                                  The tag value may be wildcarded by\
  \ using\n                                  '*'.\n                              \
  \    If you wish to allow more than one tag\n                                  value,\
  \ separate their names with the\n                                  character '|',\
  \ eg:\n                                  pax* | 10 (Any string)\n   -bsource   \
  \         string     [*] By default any feature source in the\n                \
  \                  feature table is allowed. You can set this\n                \
  \                  to match any feature source you wish to\n                   \
  \               allow.\n                                  The source name is usually\
  \ either the name\n                                  of the program that detected\
  \ the feature or\n                                  it is the feature table (eg:\
  \ EMBL) that the\n                                  feature came from.\n       \
  \                           The source may be wildcarded by using '*'.\n       \
  \                           If you wish to allow more than one source,\n       \
  \                           separate their names with the character '|',\n     \
  \                             eg:\n                                  gene* | embl\
  \ (Any string)\n   -bsense             menu       [0] By default any feature sense\
  \ is allowed.\n                                  You can set this to match the required\n\
  \                                  sense. (Values: 0 (Any sense); + (Forward\n \
  \                                 sense); - (Reverse sense))\n   -bminscore    \
  \      float      [0.0] If this is greater than or equal to\n                  \
  \                the maximum score, then any score is\n                        \
  \          allowed. (Any numeric value)\n   -bmaxscore          float      [0.0]\
  \ If this is less than or equal to the\n                                  maximum\
  \ score, then any score is permitted.\n                                  (Any numeric\
  \ value)\n   -btag               string     [*] Tags are the types of extra values\
  \ that\n                                  a feature may have. For example in the\
  \ EMBL\n                                  feature table, a 'CDS' type of feature\
  \ may\n                                  have the tags '/codon', '/codon_start',\n\
  \                                  '/db_xref', '/EC_number', '/evidence',\n    \
  \                              '/exception', '/function', '/gene',\n           \
  \                       '/label', '/map', '/note', '/number',\n                \
  \                  '/partial', '/product', '/protein_id',\n                    \
  \              '/pseudo', '/standard_name', '/translation',\n                  \
  \                '/transl_except', '/transl_table', or\n                       \
  \           '/usedin'. Some of these tags also have\n                          \
  \        values, for example '/gene' can have the\n                            \
  \      value of the gene name.\n                                  By default any\
  \ feature tag in the feature\n                                  table is allowed.\
  \ You can set this to match\n                                  any feature tag you\
  \ wish to allow.\n                                  The tag may be wildcarded by\
  \ using '*'.\n                                  If you wish to allow more than one\
  \ tag,\n                                  separate their names with the character\
  \ '|',\n                                  eg:\n                                \
  \  gene | label (Any string)\n   -bvalue             string     [*] Tag values are\
  \ the values associated\n                                  with a feature tag. Tags\
  \ are the types of\n                                  extra values that a feature\
  \ may have. For\n                                  example in the EMBL feature table,\
  \ a 'CDS'\n                                  type of feature may have the tags '/codon',\n\
  \                                  '/codon_start', '/db_xref', '/EC_number',\n \
  \                                 '/evidence', '/exception', '/function',\n    \
  \                              '/gene', '/label', '/map', '/note',\n           \
  \                       '/number', '/partial', '/product',\n                   \
  \               '/protein_id', '/pseudo', '/standard_name',\n                  \
  \                '/translation', '/transl_except',\n                           \
  \       '/transl_table', or '/usedin'. Only some of\n                          \
  \        these tags can have values, for example\n                             \
  \     '/gene' can have the value of the gene name.\n                           \
  \       By default any feature tag value in the\n                              \
  \    feature table is allowed. You can set this\n                              \
  \    to match any feature tag value you wish to\n                              \
  \    allow.\n                                  The tag value may be wildcarded by\
  \ using\n                                  '*'.\n                              \
  \    If you wish to allow more than one tag\n                                  value,\
  \ separate their names with the\n                                  character '|',\
  \ eg:\n                                  pax* | 10 (Any string)\n   -overlap   \
  \         menu       [A] This allows you to specify the allowed\n              \
  \                    overlaps of the features A and B.\n                       \
  \           You can allow any or no overlaps, specify\n                        \
  \          that they must or must not overlap, that one\n                      \
  \            must or must not be wholly enclosed within\n                      \
  \            another feature. (Values: A (Any); O\n                            \
  \      (Overlap required); NO (No overlaps are\n                               \
  \   allowed); NW (Overlap required but not\n                                  within);\
  \ AW (A must be all within B); BW (B\n                                  must be\
  \ all within A))\n   -rangetype          menu       [N] This allows you to specify\
  \ the positions\n                                  from which the allowed minimum\
  \ or maximum\n                                  distance between the features is\
  \ measured\n                                  (Values: N (From nearest ends); L\
  \ (From left\n                                  ends); R (From right ends); F (From\n\
  \                                  furthest ends))\n   -sense              menu\
  \       [A] This allows you to specify the required\n                          \
  \        sense that the two features must be on. This\n                        \
  \          is ignored (always 'Any') when looking at\n                         \
  \         protein sequence features. (Values: A (Any\n                         \
  \         sense); S (Same sense); O (Opposite sense))\n   -order              menu\
  \       [A] This allows you to specify the required\n                          \
  \        order of the two features. The order is\n                             \
  \     measured from the start positions of the\n                               \
  \   features. This criterion is always applied\n                               \
  \   despite the specified overlap type required.\n                             \
  \     (Values: A (Any); AB (Feature A then\n                                  feature\
  \ B); BA (Feature B then feature A))\n   -twoout             toggle     [N] If you\
  \ set this to be true, then the two\n                                  features\
  \ themselves will be written out. If\n                                  it is left\
  \ as false, then a single feature\n                                  will be written\
  \ out covering the two\n                                  features you found.\n\
  *  -typeout            string     [misc_feature] If you have specified that\n  \
  \                                the pairs of features that are found should\n \
  \                                 be reported as one feature in the ouput,\n   \
  \                               then you can specify the 'type' name of the\n  \
  \                                new feature here. By default every feature\n  \
  \                                in the feature table is allowed. See\n        \
  \                          http://www.ebi.ac.uk/embl/WebFeat/ for a\n          \
  \                        list of the EMBL feature types and see\n              \
  \                    Appendix A of the Swissprot user manual in\n              \
  \                    http://www.expasy.org/sprot/userman.html for\n            \
  \                      a list of the Swissprot feature types. If\n             \
  \                     you specify an invalid feature type name,\n              \
  \                    then the default name 'misc_feature' is\n                 \
  \                 used. (Any string)\n\n   Advanced (Unprompted) qualifiers: (none)\n\
  \   General qualifiers:\n   -help               boolean    Report command line options\
  \ and exit. More\n                                  information on associated and\
  \ general\n                                  qualifiers can be found with -help\
  \ -verbose\n\n"
generated_using:
- --help
docker_image:
