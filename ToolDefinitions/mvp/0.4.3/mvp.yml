!Command
command:
- mvp
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -o
  - --outfile
  description: 'results table (default: stdout)'
  args: !SimpleFlagArg
    name: OUTFILE
- !Flag
  optional: true
  synonyms:
  - -r
  - --reference
  description: reference sequence in fasta format
  args: !SimpleFlagArg
    name: REFERENCE
- !Flag
  optional: true
  synonyms:
  - -f
  - --motif-file
  description: file containing a list of motifs to check
  args: !SimpleFlagArg
    name: MOTIF_FILE
- !Flag
  optional: true
  synonyms:
  - -m
  - --motif-list
  description: a comma-delimited string of motifs to check
  args: !SimpleFlagArg
    name: MOTIF_LIST
- !Flag
  optional: true
  synonyms:
  - -t
  - --sequence-type
  description: "DNA or amino acid (default: dna)\n"
  args: !ChoiceFlagArg
    choices: !!set
      dna:
      aa:
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: mvp [-h] [-o OUTFILE] -r REFERENCE (-f MOTIF_FILE | -m MOTIF_LIST)\n\
  \           [-t {dna,aa}]\n           infile\n\nMotif-Variant Probe: detect motif\
  \ gain and loss due to mutations\n\npositional arguments:\n  infile            \
  \    vcf or vcf.gz file containing mutations (default:\n                       \
  \ stdin)\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -o OUTFILE, --outfile OUTFILE\n                        results table\
  \ (default: stdout)\n  -r REFERENCE, --reference REFERENCE\n                   \
  \     reference sequence in fasta format\n  -f MOTIF_FILE, --motif-file MOTIF_FILE\n\
  \                        file containing a list of motifs to check\n  -m MOTIF_LIST,\
  \ --motif-list MOTIF_LIST\n                        a comma-delimited string of motifs\
  \ to check\n  -t {dna,aa}, --sequence-type {dna,aa}\n                        DNA\
  \ or amino acid (default: dna)\n"
generated_using:
- --help
docker_image:
