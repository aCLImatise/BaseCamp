!Command
command: &id001
- crisprtools
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - crisprtools
  - sanitise
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: 'Output file name, creates a sanitised copy of the input file  [default:
      sanitise input file inplace]'
    args: !SimpleFlagArg
      name: FILE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Sanitise all features. Equivelent to -sdfc
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -s
    description: Sanitise the spacers
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    description: Sanitise the direct repeats
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: Sanitise the flanking sequences
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Sanitise the contigs
    args: !EmptyFlagArg {}
  parent: &id013 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: 'Output file name, creates a sanitised copy of the input file  [default:
          sanitise input file inplace]'
        args: !SimpleFlagArg
          name: FILE
      - !Flag
        optional: true
        synonyms:
        - -a
        description: Sanitise all features. Equivelent to -sdfc
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -s
        description: Sanitise the spacers
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        description: Sanitise the direct repeats
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -f
        description: Sanitise the flanking sequences
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Sanitise the contigs
        args: !EmptyFlagArg {}
      parent: &id012 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: 'Output file name, creates a sanitised copy of the input
              file  [default: sanitise input file inplace]'
            args: !SimpleFlagArg
              name: FILE
          - !Flag
            optional: true
            synonyms:
            - -a
            description: Sanitise all features. Equivelent to -sdfc
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -s
            description: Sanitise the spacers
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            description: Sanitise the direct repeats
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -f
            description: Sanitise the flanking sequences
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Sanitise the contigs
            args: !EmptyFlagArg {}
          parent: &id011 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: 'Output file name, creates a sanitised copy of the input
                  file  [default: sanitise input file inplace]'
                args: !SimpleFlagArg
                  name: FILE
              - !Flag
                optional: true
                synonyms:
                - -a
                description: Sanitise all features. Equivelent to -sdfc
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -s
                description: Sanitise the spacers
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                description: Sanitise the direct repeats
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -f
                description: Sanitise the flanking sequences
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Sanitise the contigs
                args: !EmptyFlagArg {}
              parent: &id010 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: 'Output file name, creates a sanitised copy of the
                      input file  [default: sanitise input file inplace]'
                    args: !SimpleFlagArg
                      name: FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    description: Sanitise all features. Equivelent to -sdfc
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: Sanitise the spacers
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    description: Sanitise the direct repeats
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: Sanitise the flanking sequences
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Sanitise the contigs
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: 'Output file name, creates a sanitised copy of
                          the input file  [default: sanitise input file inplace]'
                        args: !SimpleFlagArg
                          name: FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        description: Sanitise all features. Equivelent to -sdfc
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: Sanitise the spacers
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        description: Sanitise the direct repeats
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: Sanitise the flanking sequences
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Sanitise the contigs
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: Print this handy help message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n\
                        -h                  Print this handy help message\n-o FILE\
                        \             Output file name, creates a sanitised copy of\
                        \ the input file  [default: sanitise input file inplace]\n\
                        -a                  Sanitise all features. Equivelent to -sdfc\n\
                        -s                  Sanitise the spacers \n-d            \
                        \      Sanitise the direct repeats \n-f                  Sanitise\
                        \ the flanking sequences \n-c                  Sanitise the\
                        \ contigs \n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - crisprtools
                      - extract
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: 'output file directory  [default: .]'
                        args: !SimpleFlagArg
                          name: DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - -O
                        description: 'Give a custom prefix to each of the outputed
                          files [default: ]'
                        args: !SimpleFlagArg
                          name: STRING
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        description: "A comma separated list of group IDs that you\
                          \ would like to extract data from.\nNote that only the group\
                          \ number is needed, do not use prefixes like 'Group' or\
                          \ 'G', which\nare sometimes used in file names or in a .crispr\
                          \ file"
                        args: !OptionalFlagArg
                          names:
                          - INT
                          - INT
                          separator: ','
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: "[FILE] --spacer[=FILE]         Extract the spacers\
                          \ of the listed group.  By default\nprints to stdout however\
                          \ an output file can also be given as an optional arguement"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        description: "[FILE] --direct-repeat[=FILE]  Extract the direct\
                          \ repeats of the listed group. By default\nprints to stdout\
                          \ however an output file can also be given as an optional\
                          \ arguement"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: "[FILE] --flanker[=FILE]        Extract the flanking\
                          \ sequences of the listed group. By default\nprints to stdout\
                          \ however an output file can also be given as an optional\
                          \ arguement"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -C
                        description: Supress coverage information when printing spacers
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -H
                        - --header-prefix
                        description: 'Print a prefix to each of the headers [default:
                          ]'
                        args: !SimpleFlagArg
                          name: STRING
                      - !Flag
                        optional: true
                        synonyms:
                        - -x
                        - --split-group
                        description: "Split the results into different files for each\
                          \ group.  File names\nspecified with -s -d -f will not be\
                          \ used in this mode but instead\noutput files will take\
                          \ the form of PREFIX_GROUP_[type].fa\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: print this handy help message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n\
                        -h\t\t\t\t\t             print this handy help message\n-o\
                        \ DIR                           output file directory  [default:\
                        \ .]\n-O STRING                        Give a custom prefix\
                        \ to each of the outputed files [default: ]\n-g INT[,INT]\
                        \                     A comma separated list of group IDs\
                        \ that you would like to extract data from.\n\t\t\t\t\t  \
                        \           Note that only the group number is needed, do\
                        \ not use prefixes like 'Group' or 'G', which\n\t\t\t\t\t\
                        \             are sometimes used in file names or in a .crispr\
                        \ file\n-s[FILE] --spacer[=FILE]         Extract the spacers\
                        \ of the listed group.  By default\n                     \
                        \            prints to stdout however an output file can also\
                        \ be given as an optional arguement\n-d[FILE] --direct-repeat[=FILE]\t\
                        \ Extract the direct repeats of the listed group. By default\n\
                        \                                 prints to stdout however\
                        \ an output file can also be given as an optional arguement\n\
                        -f[FILE] --flanker[=FILE]        Extract the flanking sequences\
                        \ of the listed group. By default\n                      \
                        \           prints to stdout however an output file can also\
                        \ be given as an optional arguement\n-C                  \
                        \             Supress coverage information when printing spacers\n\
                        -H STRING --header-prefix STRING Print a prefix to each of\
                        \ the headers [default: ]\n-x --split-group              \
                        \   Split the results into different files for each group.\
                        \  File names\n                                 specified\
                        \ with -s -d -f will not be used in this mode but instead\n\
                        \                                 output files will take the\
                        \ form of PREFIX_GROUP_[type].fa\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - crisprtools
                      - filter
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: 'Output file name, creates a filtered copy of
                          the input file  [default: modify input file inplace]'
                        args: !SimpleFlagArg
                          name: FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: Filter based on the number of spacers the spacers
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        description: Filter based on the direct repeats
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        description: Filter based on the flanking sequences
                        args: !SimpleFlagArg
                          name: INT
                      - !Flag
                        optional: true
                        synonyms:
                        - -C
                        description: Filter based on spacer coverage
                        args: !SimpleFlagArg
                          name: INT
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: Print this handy help message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h\
                        \                  Print this handy help message\n-o FILE\
                        \             Output file name, creates a filtered copy of\
                        \ the input file  [default: modify input file inplace]\n-s\
                        \ INT              Filter based on the number of spacers the\
                        \ spacers \n-d INT              Filter based on the direct\
                        \ repeats \n-f INT              Filter based on the flanking\
                        \ sequences \n-C INT              Filter based on spacer coverage\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - crisprtools
                      - stat
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        description: print out aggregate summary, can be combined
                          with -t -p
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -H
                        description: print out column headers in tabular output
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        description: a comma separated list of group IDs that you
                          would like to see stats for.
                        args: !OptionalFlagArg
                          names:
                          - INT
                          - n
                          separator: ','
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        description: pretty print
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: "separator string for tabular output [default:\
                          \ '     ']"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: tabular output
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --coverage
                        description: Create a detailed report on the spacer coverage
                          for each group
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: print this handy help message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n\
                        -a                  print out aggregate summary, can be combined\
                        \ with -t -p\n-h\t\t\t\t\tprint this handy help message\n\
                        -H                  print out column headers in tabular output\n\
                        -g INT[,n]          a comma separated list of group IDs that\
                        \ you would like to see stats for.\n-p                  pretty\
                        \ print\n-s                  separator string for tabular\
                        \ output [default: '\t']\n-t                  tabular output\n\
                        --coverage          Create a detailed report on the spacer\
                        \ coverage for each group\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - crisprtools
                      - rm
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -g
                        description: a comma separated list of group IDs that you
                          would like to remove
                        args: !OptionalFlagArg
                          names:
                          - INT
                          - n
                          separator: ','
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: output file name. Default behaviour changes file
                          inplace
                        args: !SimpleFlagArg
                          name: FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -r
                        description: Remove associated files
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: print this handy help message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n\
                        -h\t\t\t\t\tprint this handy help message\n-g INT[,n]    \
                        \      a comma separated list of group IDs that you would\
                        \ like to remove\n-o FILE             output file name. Default\
                        \ behaviour changes file inplace\n-r                  Remove\
                        \ associated files\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id009
                      - crisprtools
                      - merge
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: 'output file  [default: crisprtools_merged.crispr]'
                        args: !SimpleFlagArg
                          name: FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -s
                        description: sanitise the names so that the resulting output
                          file contains completely unique group IDs
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        description: print this handy help message
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\n\
                        Options:\n-h\t\t\t\t\tprint this handy help message\n-o FILE\
                        \             output file  [default: crisprtools_merged.crispr]\n\
                        -s\t\t\t\t\tsanitise the names so that the resulting output\
                        \ file contains completely unique group IDs\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "crass (1.0.1)\ncrass is a set of smal utilities for\
                      \ manipulating .crispr files\nThe .crispr file specification\
                      \ is a standard xml based format for describing CRISPRs\nType\
                      \ crass <subcommand> -h for help on each utility\nUsage:\tcrass\
                      \ <subcommand> [options]\n\nsubcommand:  merge       combine\
                      \ multiple files\n             help        display this message\
                      \ and exit\n             extract     extract sequences in fasta\n\
                      \             filter      make new files based on parameters\n\
                      \             sanitise    change the IDs of elements\n     \
                      \        stat        show statistics on some or all CRISPRs\n\
                      \             rm          remove a group from a .crispr file\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: Print this handy help message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n-h\
                    \                  Print this handy help message\n-o FILE    \
                    \         Output file name, creates a sanitised copy of the input\
                    \ file  [default: sanitise input file inplace]\n-a           \
                    \       Sanitise all features. Equivelent to -sdfc\n-s       \
                    \           Sanitise the spacers \n-d                  Sanitise\
                    \ the direct repeats \n-f                  Sanitise the flanking\
                    \ sequences \n-c                  Sanitise the contigs \n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: 'output file directory  [default: .]'
                    args: !SimpleFlagArg
                      name: DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - -O
                    description: 'Give a custom prefix to each of the outputed files
                      [default: ]'
                    args: !SimpleFlagArg
                      name: STRING
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    description: "A comma separated list of group IDs that you would\
                      \ like to extract data from.\nNote that only the group number\
                      \ is needed, do not use prefixes like 'Group' or 'G', which\n\
                      are sometimes used in file names or in a .crispr file"
                    args: !OptionalFlagArg
                      names:
                      - INT
                      - INT
                      separator: ','
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: "[FILE] --spacer[=FILE]         Extract the spacers\
                      \ of the listed group.  By default\nprints to stdout however\
                      \ an output file can also be given as an optional arguement"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    description: "[FILE] --direct-repeat[=FILE]  Extract the direct\
                      \ repeats of the listed group. By default\nprints to stdout\
                      \ however an output file can also be given as an optional arguement"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: "[FILE] --flanker[=FILE]        Extract the flanking\
                      \ sequences of the listed group. By default\nprints to stdout\
                      \ however an output file can also be given as an optional arguement"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -C
                    description: Supress coverage information when printing spacers
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -H
                    - --header-prefix
                    description: 'Print a prefix to each of the headers [default:
                      ]'
                    args: !SimpleFlagArg
                      name: STRING
                  - !Flag
                    optional: true
                    synonyms:
                    - -x
                    - --split-group
                    description: "Split the results into different files for each\
                      \ group.  File names\nspecified with -s -d -f will not be used\
                      \ in this mode but instead\noutput files will take the form\
                      \ of PREFIX_GROUP_[type].fa\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: print this handy help message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n\
                    -h\t\t\t\t\t             print this handy help message\n-o DIR\
                    \                           output file directory  [default: .]\n\
                    -O STRING                        Give a custom prefix to each\
                    \ of the outputed files [default: ]\n-g INT[,INT]            \
                    \         A comma separated list of group IDs that you would like\
                    \ to extract data from.\n\t\t\t\t\t             Note that only\
                    \ the group number is needed, do not use prefixes like 'Group'\
                    \ or 'G', which\n\t\t\t\t\t             are sometimes used in\
                    \ file names or in a .crispr file\n-s[FILE] --spacer[=FILE]  \
                    \       Extract the spacers of the listed group.  By default\n\
                    \                                 prints to stdout however an\
                    \ output file can also be given as an optional arguement\n-d[FILE]\
                    \ --direct-repeat[=FILE]\t Extract the direct repeats of the listed\
                    \ group. By default\n                                 prints to\
                    \ stdout however an output file can also be given as an optional\
                    \ arguement\n-f[FILE] --flanker[=FILE]        Extract the flanking\
                    \ sequences of the listed group. By default\n                \
                    \                 prints to stdout however an output file can\
                    \ also be given as an optional arguement\n-C                 \
                    \              Supress coverage information when printing spacers\n\
                    -H STRING --header-prefix STRING Print a prefix to each of the\
                    \ headers [default: ]\n-x --split-group                 Split\
                    \ the results into different files for each group.  File names\n\
                    \                                 specified with -s -d -f will\
                    \ not be used in this mode but instead\n                     \
                    \            output files will take the form of PREFIX_GROUP_[type].fa\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: 'Output file name, creates a filtered copy of the
                      input file  [default: modify input file inplace]'
                    args: !SimpleFlagArg
                      name: FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: Filter based on the number of spacers the spacers
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    description: Filter based on the direct repeats
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    description: Filter based on the flanking sequences
                    args: !SimpleFlagArg
                      name: INT
                  - !Flag
                    optional: true
                    synonyms:
                    - -C
                    description: Filter based on spacer coverage
                    args: !SimpleFlagArg
                      name: INT
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: Print this handy help message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h    \
                    \              Print this handy help message\n-o FILE        \
                    \     Output file name, creates a filtered copy of the input file\
                    \  [default: modify input file inplace]\n-s INT              Filter\
                    \ based on the number of spacers the spacers \n-d INT        \
                    \      Filter based on the direct repeats \n-f INT           \
                    \   Filter based on the flanking sequences \n-C INT          \
                    \    Filter based on spacer coverage\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    description: print out aggregate summary, can be combined with
                      -t -p
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -H
                    description: print out column headers in tabular output
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    description: a comma separated list of group IDs that you would
                      like to see stats for.
                    args: !OptionalFlagArg
                      names:
                      - INT
                      - n
                      separator: ','
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    description: pretty print
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: "separator string for tabular output [default: '\
                      \     ']"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: tabular output
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --coverage
                    description: Create a detailed report on the spacer coverage for
                      each group
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: print this handy help message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n\
                    -a                  print out aggregate summary, can be combined\
                    \ with -t -p\n-h\t\t\t\t\tprint this handy help message\n-H  \
                    \                print out column headers in tabular output\n\
                    -g INT[,n]          a comma separated list of group IDs that you\
                    \ would like to see stats for.\n-p                  pretty print\n\
                    -s                  separator string for tabular output [default:\
                    \ '\t']\n-t                  tabular output\n--coverage      \
                    \    Create a detailed report on the spacer coverage for each\
                    \ group\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -g
                    description: a comma separated list of group IDs that you would
                      like to remove
                    args: !OptionalFlagArg
                      names:
                      - INT
                      - n
                      separator: ','
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: output file name. Default behaviour changes file
                      inplace
                    args: !SimpleFlagArg
                      name: FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -r
                    description: Remove associated files
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: print this handy help message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n\
                    -h\t\t\t\t\tprint this handy help message\n-g INT[,n]        \
                    \  a comma separated list of group IDs that you would like to\
                    \ remove\n-o FILE             output file name. Default behaviour\
                    \ changes file inplace\n-r                  Remove associated\
                    \ files\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id009
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: 'output file  [default: crisprtools_merged.crispr]'
                    args: !SimpleFlagArg
                      name: FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -s
                    description: sanitise the names so that the resulting output file
                      contains completely unique group IDs
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    description: print this handy help message
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\n\
                    Options:\n-h\t\t\t\t\tprint this handy help message\n-o FILE \
                    \            output file  [default: crisprtools_merged.crispr]\n\
                    -s\t\t\t\t\tsanitise the names so that the resulting output file\
                    \ contains completely unique group IDs\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "crass (1.0.1)\ncrass is a set of smal utilities for manipulating\
                  \ .crispr files\nThe .crispr file specification is a standard xml\
                  \ based format for describing CRISPRs\nType crass <subcommand> -h\
                  \ for help on each utility\nUsage:\tcrass <subcommand> [options]\n\
                  \nsubcommand:  merge       combine multiple files\n            \
                  \ help        display this message and exit\n             extract\
                  \     extract sequences in fasta\n             filter      make\
                  \ new files based on parameters\n             sanitise    change\
                  \ the IDs of elements\n             stat        show statistics\
                  \ on some or all CRISPRs\n             rm          remove a group\
                  \ from a .crispr file\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: Print this handy help message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n-h    \
                \              Print this handy help message\n-o FILE            \
                \ Output file name, creates a sanitised copy of the input file  [default:\
                \ sanitise input file inplace]\n-a                  Sanitise all features.\
                \ Equivelent to -sdfc\n-s                  Sanitise the spacers \n\
                -d                  Sanitise the direct repeats \n-f             \
                \     Sanitise the flanking sequences \n-c                  Sanitise\
                \ the contigs \n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: 'output file directory  [default: .]'
                args: !SimpleFlagArg
                  name: DIR
              - !Flag
                optional: true
                synonyms:
                - -O
                description: 'Give a custom prefix to each of the outputed files [default:
                  ]'
                args: !SimpleFlagArg
                  name: STRING
              - !Flag
                optional: true
                synonyms:
                - -g
                description: "A comma separated list of group IDs that you would like\
                  \ to extract data from.\nNote that only the group number is needed,\
                  \ do not use prefixes like 'Group' or 'G', which\nare sometimes\
                  \ used in file names or in a .crispr file"
                args: !OptionalFlagArg
                  names:
                  - INT
                  - INT
                  separator: ','
              - !Flag
                optional: true
                synonyms:
                - -s
                description: "[FILE] --spacer[=FILE]         Extract the spacers of\
                  \ the listed group.  By default\nprints to stdout however an output\
                  \ file can also be given as an optional arguement"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                description: "[FILE] --direct-repeat[=FILE]  Extract the direct repeats\
                  \ of the listed group. By default\nprints to stdout however an output\
                  \ file can also be given as an optional arguement"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -f
                description: "[FILE] --flanker[=FILE]        Extract the flanking\
                  \ sequences of the listed group. By default\nprints to stdout however\
                  \ an output file can also be given as an optional arguement"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -C
                description: Supress coverage information when printing spacers
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -H
                - --header-prefix
                description: 'Print a prefix to each of the headers [default: ]'
                args: !SimpleFlagArg
                  name: STRING
              - !Flag
                optional: true
                synonyms:
                - -x
                - --split-group
                description: "Split the results into different files for each group.\
                  \  File names\nspecified with -s -d -f will not be used in this\
                  \ mode but instead\noutput files will take the form of PREFIX_GROUP_[type].fa\n"
                args: !EmptyFlagArg {}
              parent: *id010
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: print this handy help message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n-h\t\t\
                \t\t\t             print this handy help message\n-o DIR         \
                \                  output file directory  [default: .]\n-O STRING\
                \                        Give a custom prefix to each of the outputed\
                \ files [default: ]\n-g INT[,INT]                     A comma separated\
                \ list of group IDs that you would like to extract data from.\n\t\t\
                \t\t\t             Note that only the group number is needed, do not\
                \ use prefixes like 'Group' or 'G', which\n\t\t\t\t\t            \
                \ are sometimes used in file names or in a .crispr file\n-s[FILE]\
                \ --spacer[=FILE]         Extract the spacers of the listed group.\
                \  By default\n                                 prints to stdout however\
                \ an output file can also be given as an optional arguement\n-d[FILE]\
                \ --direct-repeat[=FILE]\t Extract the direct repeats of the listed\
                \ group. By default\n                                 prints to stdout\
                \ however an output file can also be given as an optional arguement\n\
                -f[FILE] --flanker[=FILE]        Extract the flanking sequences of\
                \ the listed group. By default\n                                 prints\
                \ to stdout however an output file can also be given as an optional\
                \ arguement\n-C                               Supress coverage information\
                \ when printing spacers\n-H STRING --header-prefix STRING Print a\
                \ prefix to each of the headers [default: ]\n-x --split-group    \
                \             Split the results into different files for each group.\
                \  File names\n                                 specified with -s\
                \ -d -f will not be used in this mode but instead\n              \
                \                   output files will take the form of PREFIX_GROUP_[type].fa\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: 'Output file name, creates a filtered copy of the input
                  file  [default: modify input file inplace]'
                args: !SimpleFlagArg
                  name: FILE
              - !Flag
                optional: true
                synonyms:
                - -s
                description: Filter based on the number of spacers the spacers
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -d
                description: Filter based on the direct repeats
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -f
                description: Filter based on the flanking sequences
                args: !SimpleFlagArg
                  name: INT
              - !Flag
                optional: true
                synonyms:
                - -C
                description: Filter based on spacer coverage
                args: !SimpleFlagArg
                  name: INT
              parent: *id010
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: Print this handy help message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h        \
                \          Print this handy help message\n-o FILE             Output\
                \ file name, creates a filtered copy of the input file  [default:\
                \ modify input file inplace]\n-s INT              Filter based on\
                \ the number of spacers the spacers \n-d INT              Filter based\
                \ on the direct repeats \n-f INT              Filter based on the\
                \ flanking sequences \n-C INT              Filter based on spacer\
                \ coverage\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -a
                description: print out aggregate summary, can be combined with -t
                  -p
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -H
                description: print out column headers in tabular output
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -g
                description: a comma separated list of group IDs that you would like
                  to see stats for.
                args: !OptionalFlagArg
                  names:
                  - INT
                  - n
                  separator: ','
              - !Flag
                optional: true
                synonyms:
                - -p
                description: pretty print
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -s
                description: "separator string for tabular output [default: '    \
                  \ ']"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -t
                description: tabular output
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --coverage
                description: Create a detailed report on the spacer coverage for each
                  group
                args: !EmptyFlagArg {}
              parent: *id010
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: print this handy help message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n\
                -a                  print out aggregate summary, can be combined with\
                \ -t -p\n-h\t\t\t\t\tprint this handy help message\n-H           \
                \       print out column headers in tabular output\n-g INT[,n]   \
                \       a comma separated list of group IDs that you would like to\
                \ see stats for.\n-p                  pretty print\n-s           \
                \       separator string for tabular output [default: '\t']\n-t  \
                \                tabular output\n--coverage          Create a detailed\
                \ report on the spacer coverage for each group\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -g
                description: a comma separated list of group IDs that you would like
                  to remove
                args: !OptionalFlagArg
                  names:
                  - INT
                  - n
                  separator: ','
              - !Flag
                optional: true
                synonyms:
                - -o
                description: output file name. Default behaviour changes file inplace
                args: !SimpleFlagArg
                  name: FILE
              - !Flag
                optional: true
                synonyms:
                - -r
                description: Remove associated files
                args: !EmptyFlagArg {}
              parent: *id010
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: print this handy help message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n-h\t\t\
                \t\t\tprint this handy help message\n-g INT[,n]          a comma separated\
                \ list of group IDs that you would like to remove\n-o FILE       \
                \      output file name. Default behaviour changes file inplace\n\
                -r                  Remove associated files\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id009
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: 'output file  [default: crisprtools_merged.crispr]'
                args: !SimpleFlagArg
                  name: FILE
              - !Flag
                optional: true
                synonyms:
                - -s
                description: sanitise the names so that the resulting output file
                  contains completely unique group IDs
                args: !EmptyFlagArg {}
              parent: *id010
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                description: print this handy help message
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\nOptions:\n\
                -h\t\t\t\t\tprint this handy help message\n-o FILE             output\
                \ file  [default: crisprtools_merged.crispr]\n-s\t\t\t\t\tsanitise\
                \ the names so that the resulting output file contains completely\
                \ unique group IDs\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "crass (1.0.1)\ncrass is a set of smal utilities for manipulating\
              \ .crispr files\nThe .crispr file specification is a standard xml based\
              \ format for describing CRISPRs\nType crass <subcommand> -h for help\
              \ on each utility\nUsage:\tcrass <subcommand> [options]\n\nsubcommand:\
              \  merge       combine multiple files\n             help        display\
              \ this message and exit\n             extract     extract sequences\
              \ in fasta\n             filter      make new files based on parameters\n\
              \             sanitise    change the IDs of elements\n             stat\
              \        show statistics on some or all CRISPRs\n             rm   \
              \       remove a group from a .crispr file\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: Print this handy help message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n-h        \
            \          Print this handy help message\n-o FILE             Output file\
            \ name, creates a sanitised copy of the input file  [default: sanitise\
            \ input file inplace]\n-a                  Sanitise all features. Equivelent\
            \ to -sdfc\n-s                  Sanitise the spacers \n-d            \
            \      Sanitise the direct repeats \n-f                  Sanitise the\
            \ flanking sequences \n-c                  Sanitise the contigs \n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: 'output file directory  [default: .]'
            args: !SimpleFlagArg
              name: DIR
          - !Flag
            optional: true
            synonyms:
            - -O
            description: 'Give a custom prefix to each of the outputed files [default:
              ]'
            args: !SimpleFlagArg
              name: STRING
          - !Flag
            optional: true
            synonyms:
            - -g
            description: "A comma separated list of group IDs that you would like\
              \ to extract data from.\nNote that only the group number is needed,\
              \ do not use prefixes like 'Group' or 'G', which\nare sometimes used\
              \ in file names or in a .crispr file"
            args: !OptionalFlagArg
              names:
              - INT
              - INT
              separator: ','
          - !Flag
            optional: true
            synonyms:
            - -s
            description: "[FILE] --spacer[=FILE]         Extract the spacers of the\
              \ listed group.  By default\nprints to stdout however an output file\
              \ can also be given as an optional arguement"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            description: "[FILE] --direct-repeat[=FILE]  Extract the direct repeats\
              \ of the listed group. By default\nprints to stdout however an output\
              \ file can also be given as an optional arguement"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -f
            description: "[FILE] --flanker[=FILE]        Extract the flanking sequences\
              \ of the listed group. By default\nprints to stdout however an output\
              \ file can also be given as an optional arguement"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -C
            description: Supress coverage information when printing spacers
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -H
            - --header-prefix
            description: 'Print a prefix to each of the headers [default: ]'
            args: !SimpleFlagArg
              name: STRING
          - !Flag
            optional: true
            synonyms:
            - -x
            - --split-group
            description: "Split the results into different files for each group. \
              \ File names\nspecified with -s -d -f will not be used in this mode\
              \ but instead\noutput files will take the form of PREFIX_GROUP_[type].fa\n"
            args: !EmptyFlagArg {}
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: print this handy help message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n-h\t\t\t\t\
            \t             print this handy help message\n-o DIR                 \
            \          output file directory  [default: .]\n-O STRING            \
            \            Give a custom prefix to each of the outputed files [default:\
            \ ]\n-g INT[,INT]                     A comma separated list of group\
            \ IDs that you would like to extract data from.\n\t\t\t\t\t          \
            \   Note that only the group number is needed, do not use prefixes like\
            \ 'Group' or 'G', which\n\t\t\t\t\t             are sometimes used in\
            \ file names or in a .crispr file\n-s[FILE] --spacer[=FILE]         Extract\
            \ the spacers of the listed group.  By default\n                     \
            \            prints to stdout however an output file can also be given\
            \ as an optional arguement\n-d[FILE] --direct-repeat[=FILE]\t Extract\
            \ the direct repeats of the listed group. By default\n               \
            \                  prints to stdout however an output file can also be\
            \ given as an optional arguement\n-f[FILE] --flanker[=FILE]        Extract\
            \ the flanking sequences of the listed group. By default\n           \
            \                      prints to stdout however an output file can also\
            \ be given as an optional arguement\n-C                              \
            \ Supress coverage information when printing spacers\n-H STRING --header-prefix\
            \ STRING Print a prefix to each of the headers [default: ]\n-x --split-group\
            \                 Split the results into different files for each group.\
            \  File names\n                                 specified with -s -d -f\
            \ will not be used in this mode but instead\n                        \
            \         output files will take the form of PREFIX_GROUP_[type].fa\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: 'Output file name, creates a filtered copy of the input file  [default:
              modify input file inplace]'
            args: !SimpleFlagArg
              name: FILE
          - !Flag
            optional: true
            synonyms:
            - -s
            description: Filter based on the number of spacers the spacers
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -d
            description: Filter based on the direct repeats
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -f
            description: Filter based on the flanking sequences
            args: !SimpleFlagArg
              name: INT
          - !Flag
            optional: true
            synonyms:
            - -C
            description: Filter based on spacer coverage
            args: !SimpleFlagArg
              name: INT
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: Print this handy help message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h            \
            \      Print this handy help message\n-o FILE             Output file\
            \ name, creates a filtered copy of the input file  [default: modify input\
            \ file inplace]\n-s INT              Filter based on the number of spacers\
            \ the spacers \n-d INT              Filter based on the direct repeats\
            \ \n-f INT              Filter based on the flanking sequences \n-C INT\
            \              Filter based on spacer coverage\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -a
            description: print out aggregate summary, can be combined with -t -p
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -H
            description: print out column headers in tabular output
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -g
            description: a comma separated list of group IDs that you would like to
              see stats for.
            args: !OptionalFlagArg
              names:
              - INT
              - n
              separator: ','
          - !Flag
            optional: true
            synonyms:
            - -p
            description: pretty print
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -s
            description: "separator string for tabular output [default: '     ']"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -t
            description: tabular output
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --coverage
            description: Create a detailed report on the spacer coverage for each
              group
            args: !EmptyFlagArg {}
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: print this handy help message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n-a  \
            \                print out aggregate summary, can be combined with -t\
            \ -p\n-h\t\t\t\t\tprint this handy help message\n-H                  print\
            \ out column headers in tabular output\n-g INT[,n]          a comma separated\
            \ list of group IDs that you would like to see stats for.\n-p        \
            \          pretty print\n-s                  separator string for tabular\
            \ output [default: '\t']\n-t                  tabular output\n--coverage\
            \          Create a detailed report on the spacer coverage for each group\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -g
            description: a comma separated list of group IDs that you would like to
              remove
            args: !OptionalFlagArg
              names:
              - INT
              - n
              separator: ','
          - !Flag
            optional: true
            synonyms:
            - -o
            description: output file name. Default behaviour changes file inplace
            args: !SimpleFlagArg
              name: FILE
          - !Flag
            optional: true
            synonyms:
            - -r
            description: Remove associated files
            args: !EmptyFlagArg {}
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: print this handy help message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n-h\t\t\t\t\
            \tprint this handy help message\n-g INT[,n]          a comma separated\
            \ list of group IDs that you would like to remove\n-o FILE           \
            \  output file name. Default behaviour changes file inplace\n-r      \
            \            Remove associated files\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id009
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: 'output file  [default: crisprtools_merged.crispr]'
            args: !SimpleFlagArg
              name: FILE
          - !Flag
            optional: true
            synonyms:
            - -s
            description: sanitise the names so that the resulting output file contains
              completely unique group IDs
            args: !EmptyFlagArg {}
          parent: *id011
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            description: print this handy help message
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\nOptions:\n\
            -h\t\t\t\t\tprint this handy help message\n-o FILE             output\
            \ file  [default: crisprtools_merged.crispr]\n-s\t\t\t\t\tsanitise the\
            \ names so that the resulting output file contains completely unique group\
            \ IDs\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "crass (1.0.1)\ncrass is a set of smal utilities for manipulating\
          \ .crispr files\nThe .crispr file specification is a standard xml based\
          \ format for describing CRISPRs\nType crass <subcommand> -h for help on\
          \ each utility\nUsage:\tcrass <subcommand> [options]\n\nsubcommand:  merge\
          \       combine multiple files\n             help        display this message\
          \ and exit\n             extract     extract sequences in fasta\n      \
          \       filter      make new files based on parameters\n             sanitise\
          \    change the IDs of elements\n             stat        show statistics\
          \ on some or all CRISPRs\n             rm          remove a group from a\
          \ .crispr file\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: Print this handy help message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n-h            \
        \      Print this handy help message\n-o FILE             Output file name,\
        \ creates a sanitised copy of the input file  [default: sanitise input file\
        \ inplace]\n-a                  Sanitise all features. Equivelent to -sdfc\n\
        -s                  Sanitise the spacers \n-d                  Sanitise the\
        \ direct repeats \n-f                  Sanitise the flanking sequences \n\
        -c                  Sanitise the contigs \n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: 'output file directory  [default: .]'
        args: !SimpleFlagArg
          name: DIR
      - !Flag
        optional: true
        synonyms:
        - -O
        description: 'Give a custom prefix to each of the outputed files [default:
          ]'
        args: !SimpleFlagArg
          name: STRING
      - !Flag
        optional: true
        synonyms:
        - -g
        description: "A comma separated list of group IDs that you would like to extract\
          \ data from.\nNote that only the group number is needed, do not use prefixes\
          \ like 'Group' or 'G', which\nare sometimes used in file names or in a .crispr\
          \ file"
        args: !OptionalFlagArg
          names:
          - INT
          - INT
          separator: ','
      - !Flag
        optional: true
        synonyms:
        - -s
        description: "[FILE] --spacer[=FILE]         Extract the spacers of the listed\
          \ group.  By default\nprints to stdout however an output file can also be\
          \ given as an optional arguement"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        description: "[FILE] --direct-repeat[=FILE]  Extract the direct repeats of\
          \ the listed group. By default\nprints to stdout however an output file\
          \ can also be given as an optional arguement"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -f
        description: "[FILE] --flanker[=FILE]        Extract the flanking sequences\
          \ of the listed group. By default\nprints to stdout however an output file\
          \ can also be given as an optional arguement"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -C
        description: Supress coverage information when printing spacers
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -H
        - --header-prefix
        description: 'Print a prefix to each of the headers [default: ]'
        args: !SimpleFlagArg
          name: STRING
      - !Flag
        optional: true
        synonyms:
        - -x
        - --split-group
        description: "Split the results into different files for each group.  File\
          \ names\nspecified with -s -d -f will not be used in this mode but instead\n\
          output files will take the form of PREFIX_GROUP_[type].fa\n"
        args: !EmptyFlagArg {}
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: print this handy help message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n-h\t\t\t\t\t\
        \             print this handy help message\n-o DIR                      \
        \     output file directory  [default: .]\n-O STRING                     \
        \   Give a custom prefix to each of the outputed files [default: ]\n-g INT[,INT]\
        \                     A comma separated list of group IDs that you would like\
        \ to extract data from.\n\t\t\t\t\t             Note that only the group number\
        \ is needed, do not use prefixes like 'Group' or 'G', which\n\t\t\t\t\t  \
        \           are sometimes used in file names or in a .crispr file\n-s[FILE]\
        \ --spacer[=FILE]         Extract the spacers of the listed group.  By default\n\
        \                                 prints to stdout however an output file\
        \ can also be given as an optional arguement\n-d[FILE] --direct-repeat[=FILE]\t\
        \ Extract the direct repeats of the listed group. By default\n           \
        \                      prints to stdout however an output file can also be\
        \ given as an optional arguement\n-f[FILE] --flanker[=FILE]        Extract\
        \ the flanking sequences of the listed group. By default\n               \
        \                  prints to stdout however an output file can also be given\
        \ as an optional arguement\n-C                               Supress coverage\
        \ information when printing spacers\n-H STRING --header-prefix STRING Print\
        \ a prefix to each of the headers [default: ]\n-x --split-group          \
        \       Split the results into different files for each group.  File names\n\
        \                                 specified with -s -d -f will not be used\
        \ in this mode but instead\n                                 output files\
        \ will take the form of PREFIX_GROUP_[type].fa\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: 'Output file name, creates a filtered copy of the input file  [default:
          modify input file inplace]'
        args: !SimpleFlagArg
          name: FILE
      - !Flag
        optional: true
        synonyms:
        - -s
        description: Filter based on the number of spacers the spacers
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -d
        description: Filter based on the direct repeats
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -f
        description: Filter based on the flanking sequences
        args: !SimpleFlagArg
          name: INT
      - !Flag
        optional: true
        synonyms:
        - -C
        description: Filter based on spacer coverage
        args: !SimpleFlagArg
          name: INT
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: Print this handy help message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h                \
        \  Print this handy help message\n-o FILE             Output file name, creates\
        \ a filtered copy of the input file  [default: modify input file inplace]\n\
        -s INT              Filter based on the number of spacers the spacers \n-d\
        \ INT              Filter based on the direct repeats \n-f INT           \
        \   Filter based on the flanking sequences \n-C INT              Filter based\
        \ on spacer coverage\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -a
        description: print out aggregate summary, can be combined with -t -p
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -H
        description: print out column headers in tabular output
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -g
        description: a comma separated list of group IDs that you would like to see
          stats for.
        args: !OptionalFlagArg
          names:
          - INT
          - n
          separator: ','
      - !Flag
        optional: true
        synonyms:
        - -p
        description: pretty print
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -s
        description: "separator string for tabular output [default: '     ']"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -t
        description: tabular output
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --coverage
        description: Create a detailed report on the spacer coverage for each group
        args: !EmptyFlagArg {}
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: print this handy help message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n-a      \
        \            print out aggregate summary, can be combined with -t -p\n-h\t\
        \t\t\t\tprint this handy help message\n-H                  print out column\
        \ headers in tabular output\n-g INT[,n]          a comma separated list of\
        \ group IDs that you would like to see stats for.\n-p                  pretty\
        \ print\n-s                  separator string for tabular output [default:\
        \ '\t']\n-t                  tabular output\n--coverage          Create a\
        \ detailed report on the spacer coverage for each group\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -g
        description: a comma separated list of group IDs that you would like to remove
        args: !OptionalFlagArg
          names:
          - INT
          - n
          separator: ','
      - !Flag
        optional: true
        synonyms:
        - -o
        description: output file name. Default behaviour changes file inplace
        args: !SimpleFlagArg
          name: FILE
      - !Flag
        optional: true
        synonyms:
        - -r
        description: Remove associated files
        args: !EmptyFlagArg {}
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: print this handy help message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n-h\t\t\t\t\t\
        print this handy help message\n-g INT[,n]          a comma separated list\
        \ of group IDs that you would like to remove\n-o FILE             output file\
        \ name. Default behaviour changes file inplace\n-r                  Remove\
        \ associated files\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id009
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: 'output file  [default: crisprtools_merged.crispr]'
        args: !SimpleFlagArg
          name: FILE
      - !Flag
        optional: true
        synonyms:
        - -s
        description: sanitise the names so that the resulting output file contains
          completely unique group IDs
        args: !EmptyFlagArg {}
      parent: *id012
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        description: print this handy help message
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\nOptions:\n-h\t\
        \t\t\t\tprint this handy help message\n-o FILE             output file  [default:\
        \ crisprtools_merged.crispr]\n-s\t\t\t\t\tsanitise the names so that the resulting\
        \ output file contains completely unique group IDs\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "crass (1.0.1)\ncrass is a set of smal utilities for manipulating .crispr\
      \ files\nThe .crispr file specification is a standard xml based format for describing\
      \ CRISPRs\nType crass <subcommand> -h for help on each utility\nUsage:\tcrass\
      \ <subcommand> [options]\n\nsubcommand:  merge       combine multiple files\n\
      \             help        display this message and exit\n             extract\
      \     extract sequences in fasta\n             filter      make new files based\
      \ on parameters\n             sanitise    change the IDs of elements\n     \
      \        stat        show statistics on some or all CRISPRs\n             rm\
      \          remove a group from a .crispr file\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: Print this handy help message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n-h                \
    \  Print this handy help message\n-o FILE             Output file name, creates\
    \ a sanitised copy of the input file  [default: sanitise input file inplace]\n\
    -a                  Sanitise all features. Equivelent to -sdfc\n-s           \
    \       Sanitise the spacers \n-d                  Sanitise the direct repeats\
    \ \n-f                  Sanitise the flanking sequences \n-c                 \
    \ Sanitise the contigs \n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: 'output file directory  [default: .]'
    args: !SimpleFlagArg
      name: DIR
  - !Flag
    optional: true
    synonyms:
    - -O
    description: 'Give a custom prefix to each of the outputed files [default: ]'
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - -g
    description: "A comma separated list of group IDs that you would like to extract\
      \ data from.\nNote that only the group number is needed, do not use prefixes\
      \ like 'Group' or 'G', which\nare sometimes used in file names or in a .crispr\
      \ file"
    args: !OptionalFlagArg
      names:
      - INT
      - INT
      separator: ','
  - !Flag
    optional: true
    synonyms:
    - -s
    description: "[FILE] --spacer[=FILE]         Extract the spacers of the listed\
      \ group.  By default\nprints to stdout however an output file can also be given\
      \ as an optional arguement"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    description: "[FILE] --direct-repeat[=FILE]  Extract the direct repeats of the\
      \ listed group. By default\nprints to stdout however an output file can also\
      \ be given as an optional arguement"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -f
    description: "[FILE] --flanker[=FILE]        Extract the flanking sequences of\
      \ the listed group. By default\nprints to stdout however an output file can\
      \ also be given as an optional arguement"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -C
    description: Supress coverage information when printing spacers
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -H
    - --header-prefix
    description: 'Print a prefix to each of the headers [default: ]'
    args: !SimpleFlagArg
      name: STRING
  - !Flag
    optional: true
    synonyms:
    - -x
    - --split-group
    description: "Split the results into different files for each group.  File names\n\
      specified with -s -d -f will not be used in this mode but instead\noutput files\
      \ will take the form of PREFIX_GROUP_[type].fa\n"
    args: !EmptyFlagArg {}
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: print this handy help message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n-h\t\t\t\t\t    \
    \         print this handy help message\n-o DIR                           output\
    \ file directory  [default: .]\n-O STRING                        Give a custom\
    \ prefix to each of the outputed files [default: ]\n-g INT[,INT]             \
    \        A comma separated list of group IDs that you would like to extract data\
    \ from.\n\t\t\t\t\t             Note that only the group number is needed, do\
    \ not use prefixes like 'Group' or 'G', which\n\t\t\t\t\t             are sometimes\
    \ used in file names or in a .crispr file\n-s[FILE] --spacer[=FILE]         Extract\
    \ the spacers of the listed group.  By default\n                             \
    \    prints to stdout however an output file can also be given as an optional\
    \ arguement\n-d[FILE] --direct-repeat[=FILE]\t Extract the direct repeats of the\
    \ listed group. By default\n                                 prints to stdout\
    \ however an output file can also be given as an optional arguement\n-f[FILE]\
    \ --flanker[=FILE]        Extract the flanking sequences of the listed group.\
    \ By default\n                                 prints to stdout however an output\
    \ file can also be given as an optional arguement\n-C                        \
    \       Supress coverage information when printing spacers\n-H STRING --header-prefix\
    \ STRING Print a prefix to each of the headers [default: ]\n-x --split-group \
    \                Split the results into different files for each group.  File\
    \ names\n                                 specified with -s -d -f will not be\
    \ used in this mode but instead\n                                 output files\
    \ will take the form of PREFIX_GROUP_[type].fa\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: 'Output file name, creates a filtered copy of the input file  [default:
      modify input file inplace]'
    args: !SimpleFlagArg
      name: FILE
  - !Flag
    optional: true
    synonyms:
    - -s
    description: Filter based on the number of spacers the spacers
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -d
    description: Filter based on the direct repeats
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -f
    description: Filter based on the flanking sequences
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -C
    description: Filter based on spacer coverage
    args: !SimpleFlagArg
      name: INT
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: Print this handy help message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h                  Print\
    \ this handy help message\n-o FILE             Output file name, creates a filtered\
    \ copy of the input file  [default: modify input file inplace]\n-s INT       \
    \       Filter based on the number of spacers the spacers \n-d INT           \
    \   Filter based on the direct repeats \n-f INT              Filter based on the\
    \ flanking sequences \n-C INT              Filter based on spacer coverage\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -a
    description: print out aggregate summary, can be combined with -t -p
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -H
    description: print out column headers in tabular output
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -g
    description: a comma separated list of group IDs that you would like to see stats
      for.
    args: !OptionalFlagArg
      names:
      - INT
      - n
      separator: ','
  - !Flag
    optional: true
    synonyms:
    - -p
    description: pretty print
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -s
    description: "separator string for tabular output [default: '     ']"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: tabular output
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --coverage
    description: Create a detailed report on the spacer coverage for each group
    args: !EmptyFlagArg {}
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: print this handy help message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n-a          \
    \        print out aggregate summary, can be combined with -t -p\n-h\t\t\t\t\t\
    print this handy help message\n-H                  print out column headers in\
    \ tabular output\n-g INT[,n]          a comma separated list of group IDs that\
    \ you would like to see stats for.\n-p                  pretty print\n-s     \
    \             separator string for tabular output [default: '\t']\n-t        \
    \          tabular output\n--coverage          Create a detailed report on the\
    \ spacer coverage for each group\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -g
    description: a comma separated list of group IDs that you would like to remove
    args: !OptionalFlagArg
      names:
      - INT
      - n
      separator: ','
  - !Flag
    optional: true
    synonyms:
    - -o
    description: output file name. Default behaviour changes file inplace
    args: !SimpleFlagArg
      name: FILE
  - !Flag
    optional: true
    synonyms:
    - -r
    description: Remove associated files
    args: !EmptyFlagArg {}
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: print this handy help message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n-h\t\t\t\t\tprint\
    \ this handy help message\n-g INT[,n]          a comma separated list of group\
    \ IDs that you would like to remove\n-o FILE             output file name. Default\
    \ behaviour changes file inplace\n-r                  Remove associated files\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: 'output file  [default: crisprtools_merged.crispr]'
    args: !SimpleFlagArg
      name: FILE
  - !Flag
    optional: true
    synonyms:
    - -s
    description: sanitise the names so that the resulting output file contains completely
      unique group IDs
    args: !EmptyFlagArg {}
  parent: *id013
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    description: print this handy help message
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\nOptions:\n-h\t\t\
    \t\t\tprint this handy help message\n-o FILE             output file  [default:\
    \ crisprtools_merged.crispr]\n-s\t\t\t\t\tsanitise the names so that the resulting\
    \ output file contains completely unique group IDs\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "crass (1.0.1)\ncrass is a set of smal utilities for manipulating .crispr\
  \ files\nThe .crispr file specification is a standard xml based format for describing\
  \ CRISPRs\nType crass <subcommand> -h for help on each utility\nUsage:\tcrass <subcommand>\
  \ [options]\n\nsubcommand:  merge       combine multiple files\n             help\
  \        display this message and exit\n             extract     extract sequences\
  \ in fasta\n             filter      make new files based on parameters\n      \
  \       sanitise    change the IDs of elements\n             stat        show statistics\
  \ on some or all CRISPRs\n             rm          remove a group from a .crispr\
  \ file\n"
generated_using: *id004
docker_image:
