!Command
command: &id001
- taxon_filter.py
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - taxon_filter.py
  - file
  positional:
  - !Positional
    optional: false
    position: 0
    name: taxon_filter.py
    description: ''
  - !Positional
    optional: false
    position: 1
    name: subcommand
    description: ''
  named: []
  parent: &id016 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: taxon_filter.py
        description: ''
      - !Positional
        optional: false
        position: 1
        name: subcommand
        description: ''
      named: []
      parent: &id015 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: taxon_filter.py
            description: ''
          - !Positional
            optional: false
            position: 1
            name: subcommand
            description: ''
          named: []
          parent: &id014 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: taxon_filter.py
                description: ''
              - !Positional
                optional: false
                position: 1
                name: subcommand
                description: ''
              named: []
              parent: &id013 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: taxon_filter.py
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: subcommand
                    description: ''
                  named: []
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: taxon_filter.py
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: subcommand
                        description: ''
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py:\
                        \ error: argument \e[F: invalid choice: 'file' (choose from\
                        \ 'deplete_human', 'trim_trimmomatic', 'filter_lastal_bam',\
                        \ 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
                        \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam',\
                        \ 'lastal_build_db', 'blastn_build_db', 'bmtagger_build_db')\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - taxon_filter.py
                      - filter_lastal_bam
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inBam
                        description: Input reads
                      - !Positional
                        optional: false
                        position: 1
                        name: db
                        description: Database of taxa we keep
                      - !Positional
                        optional: false
                        position: 2
                        name: outBam
                        description: Output reads, filtered to refDb
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        description: "maximum gapless alignments per query position\n\
                          (default: 1)"
                        args: !SimpleFlagArg
                          name: MAX_GAPLESS_ALIGNMENTS_PER_POSITION
                      - !Flag
                        optional: true
                        synonyms:
                        - -l
                        description: 'minimum length for initial matches (default:
                          5)'
                        args: !SimpleFlagArg
                          name: MIN_LENGTH_FOR_INITIAL_MATCHES
                      - !Flag
                        optional: true
                        synonyms:
                        - -L
                        description: 'maximum length for initial matches (default:
                          50)'
                        args: !SimpleFlagArg
                          name: MAX_LENGTH_FOR_INITIAL_MATCHES
                      - !Flag
                        optional: true
                        synonyms:
                        - -m
                        description: "maximum initial matches per query position (default:\n\
                          100)"
                        args: !SimpleFlagArg
                          name: MAX_INITIAL_MATCHES_PER_POSITION
                      - !Flag
                        optional: true
                        synonyms:
                        - --JVMmemory
                        description: 'JVM virtual memory size (default: 4g)'
                        args: !SimpleFlagArg
                          name: JVMMEMORY
                      - !Flag
                        optional: true
                        synonyms:
                        - --loglevel
                        description: 'Verboseness of output. [default: DEBUG]'
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? ERROR
                            ? EXCEPTION
                            ? INFO
                            ? DEBUG
                            ? WARNING
                            ? CRITICAL
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dir
                        description: 'Base directory for temp files. [default: /tmp]'
                        args: !SimpleFlagArg
                          name: TMP_DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dirKeep
                        description: "Keep the tmp_dir if an exception occurs while\
                          \ running.\nDefault is to delete all temp files at the end,\
                          \ even\nif there's a failure.\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        - -V
                        description: show program's version number and exit
                        args: !EmptyFlagArg {}
                      help_text: "usage: taxon_filter.py subcommand filter_lastal_bam\
                        \ [-h]\n                                                 \
                        \   [-n MAX_GAPLESS_ALIGNMENTS_PER_POSITION]\n           \
                        \                                         [-l MIN_LENGTH_FOR_INITIAL_MATCHES]\n\
                        \                                                    [-L MAX_LENGTH_FOR_INITIAL_MATCHES]\n\
                        \                                                    [-m MAX_INITIAL_MATCHES_PER_POSITION]\n\
                        \                                                    [--JVMmemory\
                        \ JVMMEMORY]\n                                           \
                        \         [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                        \                                                    [--version]\n\
                        \                                                    [--tmp_dir\
                        \ TMP_DIR]\n                                             \
                        \       [--tmp_dirKeep]\n                                \
                        \                    inBam db outBam\n\nRestrict input reads\
                        \ to those that align to the given reference database using\n\
                        LASTAL.\n\npositional arguments:\n  inBam                \
                        \ Input reads\n  db                    Database of taxa we\
                        \ keep\n  outBam                Output reads, filtered to\
                        \ refDb\n\noptional arguments:\n  -h, --help            show\
                        \ this help message and exit\n  -n MAX_GAPLESS_ALIGNMENTS_PER_POSITION\n\
                        \                        maximum gapless alignments per query\
                        \ position\n                        (default: 1)\n  -l MIN_LENGTH_FOR_INITIAL_MATCHES\n\
                        \                        minimum length for initial matches\
                        \ (default: 5)\n  -L MAX_LENGTH_FOR_INITIAL_MATCHES\n    \
                        \                    maximum length for initial matches (default:\
                        \ 50)\n  -m MAX_INITIAL_MATCHES_PER_POSITION\n           \
                        \             maximum initial matches per query position (default:\n\
                        \                        100)\n  --JVMmemory JVMMEMORY\n \
                        \                       JVM virtual memory size (default:\
                        \ 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                        \                        Verboseness of output. [default:\
                        \ DEBUG]\n  --version, -V         show program's version number\
                        \ and exit\n  --tmp_dir TMP_DIR     Base directory for temp\
                        \ files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
                        \ tmp_dir if an exception occurs while running.\n        \
                        \                Default is to delete all temp files at the\
                        \ end, even\n                        if there's a failure.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - taxon_filter.py
                      - interest.
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: taxon_filter.py
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: subcommand
                        description: ''
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py:\
                        \ error: argument \e[F: invalid choice: 'interest.' (choose\
                        \ from 'deplete_human', 'trim_trimmomatic', 'filter_lastal_bam',\
                        \ 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
                        \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam',\
                        \ 'lastal_build_db', 'blastn_build_db', 'bmtagger_build_db')\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - taxon_filter.py
                      - deplete_blastn
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inFastq
                        description: Input fastq file.
                      - !Positional
                        optional: false
                        position: 1
                        name: outFastq
                        description: Output fastq file with matching reads removed.
                      - !Positional
                        optional: false
                        position: 2
                        name: refDbs
                        description: One or more reference databases for blast.
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --threads
                        description: The number of threads to use in running blastn.
                        args: !SimpleFlagArg
                          name: THREADS
                      - !Flag
                        optional: true
                        synonyms:
                        - --loglevel
                        description: 'Verboseness of output. [default: DEBUG]'
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? ERROR
                            ? EXCEPTION
                            ? INFO
                            ? DEBUG
                            ? WARNING
                            ? CRITICAL
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dir
                        description: 'Base directory for temp files. [default: /tmp]'
                        args: !SimpleFlagArg
                          name: TMP_DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dirKeep
                        description: "Keep the tmp_dir if an exception occurs while\
                          \ running.\nDefault is to delete all temp files at the end,\
                          \ even\nif there's a failure.\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        - -V
                        description: show program's version number and exit
                        args: !EmptyFlagArg {}
                      help_text: "usage: taxon_filter.py subcommand deplete_blastn\
                        \ [-h] [--threads THREADS]\n                             \
                        \                    [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                        \                                                 [--version]\n\
                        \                                                 [--tmp_dir\
                        \ TMP_DIR]\n                                             \
                        \    [--tmp_dirKeep]\n                                   \
                        \              inFastq outFastq refDbs\n                 \
                        \                                [refDbs ...]\n\nUse blastn\
                        \ to remove reads that match at least one of the databases.\n\
                        \npositional arguments:\n  inFastq               Input fastq\
                        \ file.\n  outFastq              Output fastq file with matching\
                        \ reads removed.\n  refDbs                One or more reference\
                        \ databases for blast.\n\noptional arguments:\n  -h, --help\
                        \            show this help message and exit\n  --threads\
                        \ THREADS     The number of threads to use in running blastn.\n\
                        \  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                        \                        Verboseness of output. [default:\
                        \ DEBUG]\n  --version, -V         show program's version number\
                        \ and exit\n  --tmp_dir TMP_DIR     Base directory for temp\
                        \ files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
                        \ tmp_dir if an exception occurs while running.\n        \
                        \                Default is to delete all temp files at the\
                        \ end, even\n                        if there's a failure.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - taxon_filter.py
                      - deplete_blastn_bam
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: outBam
                        description: Use blastn to remove reads that match at least
                          one of the specified databases.
                      - !Positional
                        optional: false
                        position: 0
                        name: inBam
                        description: Input BAM file.
                      - !Positional
                        optional: false
                        position: 1
                        name: refDbs
                        description: One or more reference databases for blast.
                      - !Positional
                        optional: false
                        position: 2
                        name: outBam
                        description: Output BAM file with matching reads removed.
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --threads
                        description: The number of threads to use in running blastn.
                        args: !SimpleFlagArg
                          name: THREADS
                      - !Flag
                        optional: true
                        synonyms:
                        - --chunkSize
                        description: 'FASTA chunk size (default: 1000000)'
                        args: !SimpleFlagArg
                          name: CHUNKSIZE
                      - !Flag
                        optional: true
                        synonyms:
                        - --JVMmemory
                        description: 'JVM virtual memory size (default: 4g)'
                        args: !SimpleFlagArg
                          name: JVMMEMORY
                      - !Flag
                        optional: true
                        synonyms:
                        - --loglevel
                        description: 'Verboseness of output. [default: DEBUG]'
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? ERROR
                            ? EXCEPTION
                            ? INFO
                            ? DEBUG
                            ? WARNING
                            ? CRITICAL
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dir
                        description: 'Base directory for temp files. [default: /tmp]'
                        args: !SimpleFlagArg
                          name: TMP_DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dirKeep
                        description: "Keep the tmp_dir if an exception occurs while\
                          \ running.\nDefault is to delete all temp files at the end,\
                          \ even\nif there's a failure.\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        - -V
                        description: show program's version number and exit
                        args: !EmptyFlagArg {}
                      help_text: "usage: taxon_filter.py subcommand deplete_blastn_bam\
                        \ [-h] [--threads THREADS]\n                             \
                        \                        [--chunkSize CHUNKSIZE]\n       \
                        \                                              [--JVMmemory\
                        \ JVMMEMORY]\n                                           \
                        \          [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                        \                                                     [--version]\n\
                        \                                                     [--tmp_dir\
                        \ TMP_DIR]\n                                             \
                        \        [--tmp_dirKeep]\n                               \
                        \                      inBam refDbs [refDbs ...]\n       \
                        \                                              outBam\n\n\
                        Use blastn to remove reads that match at least one of the\
                        \ specified databases.\n\npositional arguments:\n  inBam \
                        \                Input BAM file.\n  refDbs               \
                        \ One or more reference databases for blast.\n  outBam   \
                        \             Output BAM file with matching reads removed.\n\
                        \noptional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  --threads THREADS     The number of\
                        \ threads to use in running blastn.\n  --chunkSize CHUNKSIZE\n\
                        \                        FASTA chunk size (default: 1000000)\n\
                        \  --JVMmemory JVMMEMORY\n                        JVM virtual\
                        \ memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                        \                        Verboseness of output. [default:\
                        \ DEBUG]\n  --version, -V         show program's version number\
                        \ and exit\n  --tmp_dir TMP_DIR     Base directory for temp\
                        \ files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
                        \ tmp_dir if an exception occurs while running.\n        \
                        \                Default is to delete all temp files at the\
                        \ end, even\n                        if there's a failure.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id009
                      - taxon_filter.py
                      - deplete_human
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inBam
                        description: Input BAM file.
                      - !Positional
                        optional: false
                        position: 1
                        name: revertBam
                        description: 'Output BAM: read markup reverted with Picard.'
                      - !Positional
                        optional: false
                        position: 2
                        name: bmtaggerBam
                        description: 'Output BAM: depleted of human reads with BMTagger.'
                      - !Positional
                        optional: false
                        position: 3
                        name: rmdupBam
                        description: 'Output BAM: bmtaggerBam run through M-Vicuna
                          duplicate'
                      - !Positional
                        optional: false
                        position: 4
                        name: removal.
                        description: 'blastnBam             Output BAM: rmdupBam run
                          through another depletion of'
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --bmtaggerDbs
                        - --blastDbs
                        description: ''
                        args: !RepeatFlagArg
                          name: BMTAGGERDBS
                      - !Flag
                        optional: true
                        synonyms:
                        - --taxfiltBam
                        description: "Output BAM: blastnBam run through taxonomic\
                          \ selection\nvia LASTAL."
                        args: !SimpleFlagArg
                          name: TAXFILTBAM
                      - !Flag
                        optional: true
                        synonyms:
                        - --lastDb
                        description: One reference database for last (required if
                        args: !SimpleFlagArg
                          name: LASTDB
                      - !Flag
                        optional: true
                        synonyms:
                        - --threads
                        description: The number of threads to use in running blastn.
                        args: !SimpleFlagArg
                          name: THREADS
                      - !Flag
                        optional: true
                        synonyms:
                        - --JVMmemory
                        description: "JVM virtual memory size for Picard FilterSamReads\n\
                          (default: 4g)"
                        args: !SimpleFlagArg
                          name: JVMMEMORY
                      - !Flag
                        optional: true
                        synonyms:
                        - --loglevel
                        description: 'Verboseness of output. [default: DEBUG]'
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? ERROR
                            ? EXCEPTION
                            ? INFO
                            ? DEBUG
                            ? WARNING
                            ? CRITICAL
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dir
                        description: 'Base directory for temp files. [default: /tmp]'
                        args: !SimpleFlagArg
                          name: TMP_DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dirKeep
                        description: "Keep the tmp_dir if an exception occurs while\
                          \ running.\nDefault is to delete all temp files at the end,\
                          \ even\nif there's a failure.\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        - -V
                        description: show program's version number and exit
                        args: !EmptyFlagArg {}
                      help_text: "usage: taxon_filter.py subcommand deplete_human\
                        \ [-h] [--taxfiltBam TAXFILTBAM]\n                       \
                        \                         --bmtaggerDbs BMTAGGERDBS\n    \
                        \                                            [BMTAGGERDBS\
                        \ ...] --blastDbs\n                                      \
                        \          BLASTDBS [BLASTDBS ...]\n                     \
                        \                           [--lastDb LASTDB]\n          \
                        \                                      [--threads THREADS]\n\
                        \                                                [--JVMmemory\
                        \ JVMMEMORY]\n                                           \
                        \     [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                        \                                                [--version]\n\
                        \                                                [--tmp_dir\
                        \ TMP_DIR]\n                                             \
                        \   [--tmp_dirKeep]\n                                    \
                        \            inBam [revertBam] bmtaggerBam\n             \
                        \                                   rmdupBam blastnBam\n\n\
                        Run the entire depletion pipeline: bmtagger, mvicuna, blastn.\
                        \ Optionally, use\nlastal to select a specific taxon of interest.\n\
                        \npositional arguments:\n  inBam                 Input BAM\
                        \ file.\n  revertBam             Output BAM: read markup reverted\
                        \ with Picard.\n  bmtaggerBam           Output BAM: depleted\
                        \ of human reads with BMTagger.\n  rmdupBam              Output\
                        \ BAM: bmtaggerBam run through M-Vicuna duplicate\n      \
                        \                  removal.\n  blastnBam             Output\
                        \ BAM: rmdupBam run through another depletion of\n       \
                        \                 human reads with BLASTN.\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  --taxfiltBam TAXFILTBAM\n                        Output\
                        \ BAM: blastnBam run through taxonomic selection\n       \
                        \                 via LASTAL.\n  --bmtaggerDbs BMTAGGERDBS\
                        \ [BMTAGGERDBS ...]\n                        Reference databases\
                        \ (one or more) to deplete from\n                        input.\
                        \ For each db, requires prior creation of\n              \
                        \          db.bitmask by bmtool, and db.srprism.idx,\n   \
                        \                     db.srprism.map, etc. by srprism mkindex.\n\
                        \  --blastDbs BLASTDBS [BLASTDBS ...]\n                  \
                        \      One or more reference databases for blast to deplete\n\
                        \                        from input.\n  --lastDb LASTDB  \
                        \     One reference database for last (required if\n     \
                        \                   --taxfiltBam is specified).\n  --threads\
                        \ THREADS     The number of threads to use in running blastn.\n\
                        \  --JVMmemory JVMMEMORY\n                        JVM virtual\
                        \ memory size for Picard FilterSamReads\n                \
                        \        (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                        \                        Verboseness of output. [default:\
                        \ DEBUG]\n  --version, -V         show program's version number\
                        \ and exit\n  --tmp_dir TMP_DIR     Base directory for temp\
                        \ files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
                        \ tmp_dir if an exception occurs while running.\n        \
                        \                Default is to delete all temp files at the\
                        \ end, even\n                        if there's a failure.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id010
                      - taxon_filter.py
                      - file.
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: taxon_filter.py
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: subcommand
                        description: ''
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py:\
                        \ error: argument \e[F: invalid choice: 'file.' (choose from\
                        \ 'deplete_human', 'trim_trimmomatic', 'filter_lastal_bam',\
                        \ 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
                        \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam',\
                        \ 'lastal_build_db', 'blastn_build_db', 'bmtagger_build_db')\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id011
                      - taxon_filter.py
                      - partition_bmtagger
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inFastq1
                        description: Input fastq file; 1st end of paired-end reads.
                      - !Positional
                        optional: false
                        position: 1
                        name: inFastq2
                        description: "Input fastq file; 2nd end of paired-end reads.\
                          \ Must\nhave same names as inFastq1"
                      - !Positional
                        optional: false
                        position: 2
                        name: refDbs
                        description: "Reference databases (one or more) to deplete\
                          \ from\ninput. For each db, requires prior creation of\n\
                          db.bitmask by bmtool, and db.srprism.idx,\ndb.srprism.map,\
                          \ etc. by srprism mkindex."
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --outMatch
                        description: "OUTMATCH\nFilenames for fastq output of matching\
                          \ reads."
                        args: !SimpleFlagArg
                          name: OUTMATCH
                      - !Flag
                        optional: true
                        synonyms:
                        - --outNoMatch
                        description: "OUTNOMATCH\nFilenames for fastq output of unmatched\
                          \ reads."
                        args: !SimpleFlagArg
                          name: OUTNOMATCH
                      - !Flag
                        optional: true
                        synonyms:
                        - --loglevel
                        description: 'Verboseness of output. [default: DEBUG]'
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? ERROR
                            ? EXCEPTION
                            ? INFO
                            ? DEBUG
                            ? WARNING
                            ? CRITICAL
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dir
                        description: 'Base directory for temp files. [default: /tmp]'
                        args: !SimpleFlagArg
                          name: TMP_DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dirKeep
                        description: "Keep the tmp_dir if an exception occurs while\
                          \ running.\nDefault is to delete all temp files at the end,\
                          \ even\nif there's a failure.\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        - -V
                        description: show program's version number and exit
                        args: !EmptyFlagArg {}
                      help_text: "usage: taxon_filter.py subcommand partition_bmtagger\
                        \ [-h]\n                                                 \
                        \    [--outMatch OUTMATCH OUTMATCH]\n                    \
                        \                                 [--outNoMatch OUTNOMATCH\
                        \ OUTNOMATCH]\n                                          \
                        \           [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                        \                                                     [--version]\n\
                        \                                                     [--tmp_dir\
                        \ TMP_DIR]\n                                             \
                        \        [--tmp_dirKeep]\n                               \
                        \                      inFastq1 inFastq2 refDbs\n        \
                        \                                             [refDbs ...]\n\
                        \nUse bmtagger to partition input reads into ones that match\
                        \ at least one of\nseveral databases and ones that don't match\
                        \ any of the databases.\n\npositional arguments:\n  inFastq1\
                        \              Input fastq file; 1st end of paired-end reads.\n\
                        \  inFastq2              Input fastq file; 2nd end of paired-end\
                        \ reads. Must\n                        have same names as\
                        \ inFastq1\n  refDbs                Reference databases (one\
                        \ or more) to deplete from\n                        input.\
                        \ For each db, requires prior creation of\n              \
                        \          db.bitmask by bmtool, and db.srprism.idx,\n   \
                        \                     db.srprism.map, etc. by srprism mkindex.\n\
                        \noptional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  --outMatch OUTMATCH OUTMATCH\n     \
                        \                   Filenames for fastq output of matching\
                        \ reads.\n  --outNoMatch OUTNOMATCH OUTNOMATCH\n         \
                        \               Filenames for fastq output of unmatched reads.\n\
                        \  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                        \                        Verboseness of output. [default:\
                        \ DEBUG]\n  --version, -V         show program's version number\
                        \ and exit\n  --tmp_dir TMP_DIR     Base directory for temp\
                        \ files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
                        \ tmp_dir if an exception occurs while running.\n        \
                        \                Default is to delete all temp files at the\
                        \ end, even\n                        if there's a failure.\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id012
                      - taxon_filter.py
                      - blastn_build_db
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: inputFasta
                        description: Location of the input FASTA file
                      - !Positional
                        optional: false
                        position: 1
                        name: outputDirectory
                        description: Location for the output files
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --outputFilePrefix
                        description: "Prefix for the output file name (default: inputFasta\n\
                          name, sans \".fasta\" extension)"
                        args: !SimpleFlagArg
                          name: OUTPUTFILEPREFIX
                      - !Flag
                        optional: true
                        synonyms:
                        - --loglevel
                        description: 'Verboseness of output. [default: DEBUG]'
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? ERROR
                            ? EXCEPTION
                            ? INFO
                            ? DEBUG
                            ? WARNING
                            ? CRITICAL
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dir
                        description: 'Base directory for temp files. [default: /tmp]'
                        args: !SimpleFlagArg
                          name: TMP_DIR
                      - !Flag
                        optional: true
                        synonyms:
                        - --tmp_dirKeep
                        description: "Keep the tmp_dir if an exception occurs while\
                          \ running.\nDefault is to delete all temp files at the end,\
                          \ even\nif there's a failure.\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - --version
                        - -V
                        description: show program's version number and exit
                        args: !EmptyFlagArg {}
                      help_text: "usage: taxon_filter.py subcommand blastn_build_db\
                        \ [-h]\n                                                 \
                        \ [--outputFilePrefix OUTPUTFILEPREFIX]\n                \
                        \                                  [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                        \                                                  [--version]\n\
                        \                                                  [--tmp_dir\
                        \ TMP_DIR]\n                                             \
                        \     [--tmp_dirKeep]\n                                  \
                        \                inputFasta outputDirectory\n\nCreate a database\
                        \ for use with blastn from an input reference FASTA file\n\
                        \npositional arguments:\n  inputFasta            Location\
                        \ of the input FASTA file\n  outputDirectory       Location\
                        \ for the output files\n\noptional arguments:\n  -h, --help\
                        \            show this help message and exit\n  --outputFilePrefix\
                        \ OUTPUTFILEPREFIX\n                        Prefix for the\
                        \ output file name (default: inputFasta\n                \
                        \        name, sans \".fasta\" extension)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                        \                        Verboseness of output. [default:\
                        \ DEBUG]\n  --version, -V         show program's version number\
                        \ and exit\n  --tmp_dir TMP_DIR     Base directory for temp\
                        \ files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
                        \ tmp_dir if an exception occurs while running.\n        \
                        \                Default is to delete all temp files at the\
                        \ end, even\n                        if there's a failure.\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag:
                    usage_flag:
                    version_flag:
                    help_text: "\nEnter a subcommand to view additional information:\n\
                      \n     taxon_filter.py \e[1mdeplete_human\e[0m [...]\n     \
                      \     Run the entire depletion pipeline: bmtagger, mvicuna,\n\
                      \          blastn. Optionally, use lastal to select a specific\
                      \ taxon of\n          interest.\n\n     taxon_filter.py \e[1mtrim_trimmomatic\e\
                      [0m [...]\n          Trim read sequences with Trimmomatic.\n\
                      \n     taxon_filter.py \e[1mfilter_lastal_bam\e[0m [...]\n \
                      \         Restrict input reads to those that align to the\n\
                      \          givenreference database using LASTAL.\n\n     taxon_filter.py\
                      \ \e[1mfilter_lastal\e[0m [...]\n          Restrict input reads\
                      \ to those that align to the\n          givenreference database\
                      \ using LASTAL. Also, remove\n          duplicates with prinseq.\n\
                      \n     taxon_filter.py \e[1mpartition_bmtagger\e[0m [...]\n\
                      \          Use bmtagger to partition input reads into ones thatmatch\
                      \ at\n          least one of several databases and ones that\
                      \ don't matchany\n          of the databases.\n\n     taxon_filter.py\
                      \ \e[1mdeplete_bam_bmtagger\e[0m [...]\n          Use bmtagger\
                      \ to deplete input reads against several\n          databases.\n\
                      \n     taxon_filter.py \e[1mdeplete_blastn\e[0m [...]\n    \
                      \      Use blastn to remove reads that match at least one of\
                      \ the\n          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_paired\e\
                      [0m [...]\n          Use blastn to remove reads that match at\
                      \ least one of the\n          databases.\n\n     taxon_filter.py\
                      \ \e[1mdeplete_blastn_bam\e[0m [...]\n          Use blastn to\
                      \ remove reads that match at least one of the\n          specified\
                      \ databases.\n\n     taxon_filter.py \e[1mlastal_build_db\e\
                      [0m [...]\n          build a database for use with last based\
                      \ on an input fasta\n          file\n\n     taxon_filter.py\
                      \ \e[1mblastn_build_db\e[0m [...]\n          Create a database\
                      \ for use with blastn from an input\n          reference FASTA\
                      \ file\n\n     taxon_filter.py \e[1mbmtagger_build_db\e[0m [...]\n\
                      \          Create a database for use with Bmtagger from an input\
                      \ FASTA\n          file.\n\nusage: taxon_filter.py subcommand\n\
                      \nThis script contains a number of utilities for filtering NGS\
                      \ reads based on\nmembership or non-membership in a species\
                      \ / genus / taxonomic grouping.\n\nsubcommands:\n  \e[F\n  \
                      \  deplete_human\n    trim_trimmomatic\n    filter_lastal_bam\n\
                      \    filter_lastal\n    partition_bmtagger\n    deplete_bam_bmtagger\n\
                      \    deplete_blastn\n    deplete_blastn_paired\n    deplete_blastn_bam\n\
                      \    lastal_build_db\n    blastn_build_db\n    bmtagger_build_db\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py:\
                    \ error: argument \e[F: invalid choice: 'file' (choose from 'deplete_human',\
                    \ 'trim_trimmomatic', 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger',\
                    \ 'deplete_bam_bmtagger', 'deplete_blastn', 'deplete_blastn_paired',\
                    \ 'deplete_blastn_bam', 'lastal_build_db', 'blastn_build_db',\
                    \ 'bmtagger_build_db')\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inBam
                    description: Input reads
                  - !Positional
                    optional: false
                    position: 1
                    name: db
                    description: Database of taxa we keep
                  - !Positional
                    optional: false
                    position: 2
                    name: outBam
                    description: Output reads, filtered to refDb
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    description: "maximum gapless alignments per query position\n\
                      (default: 1)"
                    args: !SimpleFlagArg
                      name: MAX_GAPLESS_ALIGNMENTS_PER_POSITION
                  - !Flag
                    optional: true
                    synonyms:
                    - -l
                    description: 'minimum length for initial matches (default: 5)'
                    args: !SimpleFlagArg
                      name: MIN_LENGTH_FOR_INITIAL_MATCHES
                  - !Flag
                    optional: true
                    synonyms:
                    - -L
                    description: 'maximum length for initial matches (default: 50)'
                    args: !SimpleFlagArg
                      name: MAX_LENGTH_FOR_INITIAL_MATCHES
                  - !Flag
                    optional: true
                    synonyms:
                    - -m
                    description: "maximum initial matches per query position (default:\n\
                      100)"
                    args: !SimpleFlagArg
                      name: MAX_INITIAL_MATCHES_PER_POSITION
                  - !Flag
                    optional: true
                    synonyms:
                    - --JVMmemory
                    description: 'JVM virtual memory size (default: 4g)'
                    args: !SimpleFlagArg
                      name: JVMMEMORY
                  - !Flag
                    optional: true
                    synonyms:
                    - --loglevel
                    description: 'Verboseness of output. [default: DEBUG]'
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? DEBUG
                        ? ERROR
                        ? EXCEPTION
                        ? CRITICAL
                        ? INFO
                        ? WARNING
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dir
                    description: 'Base directory for temp files. [default: /tmp]'
                    args: !SimpleFlagArg
                      name: TMP_DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dirKeep
                    description: "Keep the tmp_dir if an exception occurs while running.\n\
                      Default is to delete all temp files at the end, even\nif there's\
                      \ a failure.\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - --version
                    - -V
                    description: show program's version number and exit
                    args: !EmptyFlagArg {}
                  help_text: "usage: taxon_filter.py subcommand filter_lastal_bam\
                    \ [-h]\n                                                    [-n\
                    \ MAX_GAPLESS_ALIGNMENTS_PER_POSITION]\n                     \
                    \                               [-l MIN_LENGTH_FOR_INITIAL_MATCHES]\n\
                    \                                                    [-L MAX_LENGTH_FOR_INITIAL_MATCHES]\n\
                    \                                                    [-m MAX_INITIAL_MATCHES_PER_POSITION]\n\
                    \                                                    [--JVMmemory\
                    \ JVMMEMORY]\n                                               \
                    \     [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                    \                                                    [--version]\n\
                    \                                                    [--tmp_dir\
                    \ TMP_DIR]\n                                                 \
                    \   [--tmp_dirKeep]\n                                        \
                    \            inBam db outBam\n\nRestrict input reads to those\
                    \ that align to the given reference database using\nLASTAL.\n\n\
                    positional arguments:\n  inBam                 Input reads\n \
                    \ db                    Database of taxa we keep\n  outBam   \
                    \             Output reads, filtered to refDb\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -n\
                    \ MAX_GAPLESS_ALIGNMENTS_PER_POSITION\n                      \
                    \  maximum gapless alignments per query position\n           \
                    \             (default: 1)\n  -l MIN_LENGTH_FOR_INITIAL_MATCHES\n\
                    \                        minimum length for initial matches (default:\
                    \ 5)\n  -L MAX_LENGTH_FOR_INITIAL_MATCHES\n                  \
                    \      maximum length for initial matches (default: 50)\n  -m\
                    \ MAX_INITIAL_MATCHES_PER_POSITION\n                        maximum\
                    \ initial matches per query position (default:\n             \
                    \           100)\n  --JVMmemory JVMMEMORY\n                  \
                    \      JVM virtual memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                    \                        Verboseness of output. [default: DEBUG]\n\
                    \  --version, -V         show program's version number and exit\n\
                    \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                    \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                    \ occurs while running.\n                        Default is to\
                    \ delete all temp files at the end, even\n                   \
                    \     if there's a failure.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: taxon_filter.py
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: subcommand
                    description: ''
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py:\
                    \ error: argument \e[F: invalid choice: 'interest.' (choose from\
                    \ 'deplete_human', 'trim_trimmomatic', 'filter_lastal_bam', 'filter_lastal',\
                    \ 'partition_bmtagger', 'deplete_bam_bmtagger', 'deplete_blastn',\
                    \ 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
                    \ 'blastn_build_db', 'bmtagger_build_db')\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inFastq
                    description: Input fastq file.
                  - !Positional
                    optional: false
                    position: 1
                    name: outFastq
                    description: Output fastq file with matching reads removed.
                  - !Positional
                    optional: false
                    position: 2
                    name: refDbs
                    description: One or more reference databases for blast.
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --threads
                    description: The number of threads to use in running blastn.
                    args: !SimpleFlagArg
                      name: THREADS
                  - !Flag
                    optional: true
                    synonyms:
                    - --loglevel
                    description: 'Verboseness of output. [default: DEBUG]'
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? DEBUG
                        ? ERROR
                        ? EXCEPTION
                        ? CRITICAL
                        ? INFO
                        ? WARNING
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dir
                    description: 'Base directory for temp files. [default: /tmp]'
                    args: !SimpleFlagArg
                      name: TMP_DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dirKeep
                    description: "Keep the tmp_dir if an exception occurs while running.\n\
                      Default is to delete all temp files at the end, even\nif there's\
                      \ a failure.\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - --version
                    - -V
                    description: show program's version number and exit
                    args: !EmptyFlagArg {}
                  help_text: "usage: taxon_filter.py subcommand deplete_blastn [-h]\
                    \ [--threads THREADS]\n                                      \
                    \           [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                    \                                                 [--version]\n\
                    \                                                 [--tmp_dir TMP_DIR]\n\
                    \                                                 [--tmp_dirKeep]\n\
                    \                                                 inFastq outFastq\
                    \ refDbs\n                                                 [refDbs\
                    \ ...]\n\nUse blastn to remove reads that match at least one of\
                    \ the databases.\n\npositional arguments:\n  inFastq         \
                    \      Input fastq file.\n  outFastq              Output fastq\
                    \ file with matching reads removed.\n  refDbs                One\
                    \ or more reference databases for blast.\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  --threads\
                    \ THREADS     The number of threads to use in running blastn.\n\
                    \  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                    \                        Verboseness of output. [default: DEBUG]\n\
                    \  --version, -V         show program's version number and exit\n\
                    \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                    \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                    \ occurs while running.\n                        Default is to\
                    \ delete all temp files at the end, even\n                   \
                    \     if there's a failure.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: outBam
                    description: Use blastn to remove reads that match at least one
                      of the specified databases.
                  - !Positional
                    optional: false
                    position: 0
                    name: inBam
                    description: Input BAM file.
                  - !Positional
                    optional: false
                    position: 1
                    name: refDbs
                    description: One or more reference databases for blast.
                  - !Positional
                    optional: false
                    position: 2
                    name: outBam
                    description: Output BAM file with matching reads removed.
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --threads
                    description: The number of threads to use in running blastn.
                    args: !SimpleFlagArg
                      name: THREADS
                  - !Flag
                    optional: true
                    synonyms:
                    - --chunkSize
                    description: 'FASTA chunk size (default: 1000000)'
                    args: !SimpleFlagArg
                      name: CHUNKSIZE
                  - !Flag
                    optional: true
                    synonyms:
                    - --JVMmemory
                    description: 'JVM virtual memory size (default: 4g)'
                    args: !SimpleFlagArg
                      name: JVMMEMORY
                  - !Flag
                    optional: true
                    synonyms:
                    - --loglevel
                    description: 'Verboseness of output. [default: DEBUG]'
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? DEBUG
                        ? ERROR
                        ? EXCEPTION
                        ? CRITICAL
                        ? INFO
                        ? WARNING
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dir
                    description: 'Base directory for temp files. [default: /tmp]'
                    args: !SimpleFlagArg
                      name: TMP_DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dirKeep
                    description: "Keep the tmp_dir if an exception occurs while running.\n\
                      Default is to delete all temp files at the end, even\nif there's\
                      \ a failure.\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - --version
                    - -V
                    description: show program's version number and exit
                    args: !EmptyFlagArg {}
                  help_text: "usage: taxon_filter.py subcommand deplete_blastn_bam\
                    \ [-h] [--threads THREADS]\n                                 \
                    \                    [--chunkSize CHUNKSIZE]\n               \
                    \                                      [--JVMmemory JVMMEMORY]\n\
                    \                                                     [--loglevel\
                    \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n           \
                    \                                          [--version]\n     \
                    \                                                [--tmp_dir TMP_DIR]\n\
                    \                                                     [--tmp_dirKeep]\n\
                    \                                                     inBam refDbs\
                    \ [refDbs ...]\n                                             \
                    \        outBam\n\nUse blastn to remove reads that match at least\
                    \ one of the specified databases.\n\npositional arguments:\n \
                    \ inBam                 Input BAM file.\n  refDbs            \
                    \    One or more reference databases for blast.\n  outBam    \
                    \            Output BAM file with matching reads removed.\n\n\
                    optional arguments:\n  -h, --help            show this help message\
                    \ and exit\n  --threads THREADS     The number of threads to use\
                    \ in running blastn.\n  --chunkSize CHUNKSIZE\n              \
                    \          FASTA chunk size (default: 1000000)\n  --JVMmemory\
                    \ JVMMEMORY\n                        JVM virtual memory size (default:\
                    \ 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                    \                        Verboseness of output. [default: DEBUG]\n\
                    \  --version, -V         show program's version number and exit\n\
                    \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                    \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                    \ occurs while running.\n                        Default is to\
                    \ delete all temp files at the end, even\n                   \
                    \     if there's a failure.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id009
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inBam
                    description: Input BAM file.
                  - !Positional
                    optional: false
                    position: 1
                    name: revertBam
                    description: 'Output BAM: read markup reverted with Picard.'
                  - !Positional
                    optional: false
                    position: 2
                    name: bmtaggerBam
                    description: 'Output BAM: depleted of human reads with BMTagger.'
                  - !Positional
                    optional: false
                    position: 3
                    name: rmdupBam
                    description: 'Output BAM: bmtaggerBam run through M-Vicuna duplicate'
                  - !Positional
                    optional: false
                    position: 4
                    name: removal.
                    description: 'blastnBam             Output BAM: rmdupBam run through
                      another depletion of'
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --bmtaggerDbs
                    - --blastDbs
                    description: "BLASTDBS [BLASTDBS ...]\n[--lastDb LASTDB]\n[--threads\
                      \ THREADS]\n[--JVMmemory JVMMEMORY]\n[--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                      [--version]\n[--tmp_dir TMP_DIR]\n[--tmp_dirKeep]\ninBam [revertBam]\
                      \ bmtaggerBam\nrmdupBam blastnBam"
                    args: !RepeatFlagArg
                      name: BMTAGGERDBS
                  - !Flag
                    optional: true
                    synonyms:
                    - --taxfiltBam
                    description: "Output BAM: blastnBam run through taxonomic selection\n\
                      via LASTAL."
                    args: !SimpleFlagArg
                      name: TAXFILTBAM
                  - !Flag
                    optional: true
                    synonyms:
                    - --lastDb
                    description: One reference database for last (required if
                    args: !SimpleFlagArg
                      name: LASTDB
                  - !Flag
                    optional: true
                    synonyms:
                    - --threads
                    description: The number of threads to use in running blastn.
                    args: !SimpleFlagArg
                      name: THREADS
                  - !Flag
                    optional: true
                    synonyms:
                    - --JVMmemory
                    description: "JVM virtual memory size for Picard FilterSamReads\n\
                      (default: 4g)"
                    args: !SimpleFlagArg
                      name: JVMMEMORY
                  - !Flag
                    optional: true
                    synonyms:
                    - --loglevel
                    description: 'Verboseness of output. [default: DEBUG]'
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? DEBUG
                        ? ERROR
                        ? EXCEPTION
                        ? CRITICAL
                        ? INFO
                        ? WARNING
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dir
                    description: 'Base directory for temp files. [default: /tmp]'
                    args: !SimpleFlagArg
                      name: TMP_DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dirKeep
                    description: "Keep the tmp_dir if an exception occurs while running.\n\
                      Default is to delete all temp files at the end, even\nif there's\
                      \ a failure.\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - --version
                    - -V
                    description: show program's version number and exit
                    args: !EmptyFlagArg {}
                  help_text: "usage: taxon_filter.py subcommand deplete_human [-h]\
                    \ [--taxfiltBam TAXFILTBAM]\n                                \
                    \                --bmtaggerDbs BMTAGGERDBS\n                 \
                    \                               [BMTAGGERDBS ...] --blastDbs\n\
                    \                                                BLASTDBS [BLASTDBS\
                    \ ...]\n                                                [--lastDb\
                    \ LASTDB]\n                                                [--threads\
                    \ THREADS]\n                                                [--JVMmemory\
                    \ JVMMEMORY]\n                                               \
                    \ [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                    \                                                [--version]\n\
                    \                                                [--tmp_dir TMP_DIR]\n\
                    \                                                [--tmp_dirKeep]\n\
                    \                                                inBam [revertBam]\
                    \ bmtaggerBam\n                                              \
                    \  rmdupBam blastnBam\n\nRun the entire depletion pipeline: bmtagger,\
                    \ mvicuna, blastn. Optionally, use\nlastal to select a specific\
                    \ taxon of interest.\n\npositional arguments:\n  inBam       \
                    \          Input BAM file.\n  revertBam             Output BAM:\
                    \ read markup reverted with Picard.\n  bmtaggerBam           Output\
                    \ BAM: depleted of human reads with BMTagger.\n  rmdupBam    \
                    \          Output BAM: bmtaggerBam run through M-Vicuna duplicate\n\
                    \                        removal.\n  blastnBam             Output\
                    \ BAM: rmdupBam run through another depletion of\n           \
                    \             human reads with BLASTN.\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  --taxfiltBam\
                    \ TAXFILTBAM\n                        Output BAM: blastnBam run\
                    \ through taxonomic selection\n                        via LASTAL.\n\
                    \  --bmtaggerDbs BMTAGGERDBS [BMTAGGERDBS ...]\n             \
                    \           Reference databases (one or more) to deplete from\n\
                    \                        input. For each db, requires prior creation\
                    \ of\n                        db.bitmask by bmtool, and db.srprism.idx,\n\
                    \                        db.srprism.map, etc. by srprism mkindex.\n\
                    \  --blastDbs BLASTDBS [BLASTDBS ...]\n                      \
                    \  One or more reference databases for blast to deplete\n    \
                    \                    from input.\n  --lastDb LASTDB       One\
                    \ reference database for last (required if\n                 \
                    \       --taxfiltBam is specified).\n  --threads THREADS     The\
                    \ number of threads to use in running blastn.\n  --JVMmemory JVMMEMORY\n\
                    \                        JVM virtual memory size for Picard FilterSamReads\n\
                    \                        (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                    \                        Verboseness of output. [default: DEBUG]\n\
                    \  --version, -V         show program's version number and exit\n\
                    \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                    \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                    \ occurs while running.\n                        Default is to\
                    \ delete all temp files at the end, even\n                   \
                    \     if there's a failure.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id010
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: taxon_filter.py
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: subcommand
                    description: ''
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py:\
                    \ error: argument \e[F: invalid choice: 'file.' (choose from 'deplete_human',\
                    \ 'trim_trimmomatic', 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger',\
                    \ 'deplete_bam_bmtagger', 'deplete_blastn', 'deplete_blastn_paired',\
                    \ 'deplete_blastn_bam', 'lastal_build_db', 'blastn_build_db',\
                    \ 'bmtagger_build_db')\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id011
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inFastq1
                    description: Input fastq file; 1st end of paired-end reads.
                  - !Positional
                    optional: false
                    position: 1
                    name: inFastq2
                    description: "Input fastq file; 2nd end of paired-end reads. Must\n\
                      have same names as inFastq1"
                  - !Positional
                    optional: false
                    position: 2
                    name: refDbs
                    description: "Reference databases (one or more) to deplete from\n\
                      input. For each db, requires prior creation of\ndb.bitmask by\
                      \ bmtool, and db.srprism.idx,\ndb.srprism.map, etc. by srprism\
                      \ mkindex."
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --outMatch
                    description: "OUTMATCH\nFilenames for fastq output of matching\
                      \ reads."
                    args: !SimpleFlagArg
                      name: OUTMATCH
                  - !Flag
                    optional: true
                    synonyms:
                    - --outNoMatch
                    description: "OUTNOMATCH\nFilenames for fastq output of unmatched\
                      \ reads."
                    args: !SimpleFlagArg
                      name: OUTNOMATCH
                  - !Flag
                    optional: true
                    synonyms:
                    - --loglevel
                    description: 'Verboseness of output. [default: DEBUG]'
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? DEBUG
                        ? ERROR
                        ? EXCEPTION
                        ? CRITICAL
                        ? INFO
                        ? WARNING
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dir
                    description: 'Base directory for temp files. [default: /tmp]'
                    args: !SimpleFlagArg
                      name: TMP_DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dirKeep
                    description: "Keep the tmp_dir if an exception occurs while running.\n\
                      Default is to delete all temp files at the end, even\nif there's\
                      \ a failure.\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - --version
                    - -V
                    description: show program's version number and exit
                    args: !EmptyFlagArg {}
                  help_text: "usage: taxon_filter.py subcommand partition_bmtagger\
                    \ [-h]\n                                                     [--outMatch\
                    \ OUTMATCH OUTMATCH]\n                                       \
                    \              [--outNoMatch OUTNOMATCH OUTNOMATCH]\n        \
                    \                                             [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                    \                                                     [--version]\n\
                    \                                                     [--tmp_dir\
                    \ TMP_DIR]\n                                                 \
                    \    [--tmp_dirKeep]\n                                       \
                    \              inFastq1 inFastq2 refDbs\n                    \
                    \                                 [refDbs ...]\n\nUse bmtagger\
                    \ to partition input reads into ones that match at least one of\n\
                    several databases and ones that don't match any of the databases.\n\
                    \npositional arguments:\n  inFastq1              Input fastq file;\
                    \ 1st end of paired-end reads.\n  inFastq2              Input\
                    \ fastq file; 2nd end of paired-end reads. Must\n            \
                    \            have same names as inFastq1\n  refDbs           \
                    \     Reference databases (one or more) to deplete from\n    \
                    \                    input. For each db, requires prior creation\
                    \ of\n                        db.bitmask by bmtool, and db.srprism.idx,\n\
                    \                        db.srprism.map, etc. by srprism mkindex.\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  --outMatch OUTMATCH OUTMATCH\n         \
                    \               Filenames for fastq output of matching reads.\n\
                    \  --outNoMatch OUTNOMATCH OUTNOMATCH\n                      \
                    \  Filenames for fastq output of unmatched reads.\n  --loglevel\
                    \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n            \
                    \            Verboseness of output. [default: DEBUG]\n  --version,\
                    \ -V         show program's version number and exit\n  --tmp_dir\
                    \ TMP_DIR     Base directory for temp files. [default: /tmp]\n\
                    \  --tmp_dirKeep         Keep the tmp_dir if an exception occurs\
                    \ while running.\n                        Default is to delete\
                    \ all temp files at the end, even\n                        if\
                    \ there's a failure.\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id012
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: inputFasta
                    description: Location of the input FASTA file
                  - !Positional
                    optional: false
                    position: 1
                    name: outputDirectory
                    description: Location for the output files
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --outputFilePrefix
                    description: "Prefix for the output file name (default: inputFasta\n\
                      name, sans \".fasta\" extension)"
                    args: !SimpleFlagArg
                      name: OUTPUTFILEPREFIX
                  - !Flag
                    optional: true
                    synonyms:
                    - --loglevel
                    description: 'Verboseness of output. [default: DEBUG]'
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? DEBUG
                        ? ERROR
                        ? EXCEPTION
                        ? CRITICAL
                        ? INFO
                        ? WARNING
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dir
                    description: 'Base directory for temp files. [default: /tmp]'
                    args: !SimpleFlagArg
                      name: TMP_DIR
                  - !Flag
                    optional: true
                    synonyms:
                    - --tmp_dirKeep
                    description: "Keep the tmp_dir if an exception occurs while running.\n\
                      Default is to delete all temp files at the end, even\nif there's\
                      \ a failure.\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - --version
                    - -V
                    description: show program's version number and exit
                    args: !EmptyFlagArg {}
                  help_text: "usage: taxon_filter.py subcommand blastn_build_db [-h]\n\
                    \                                                  [--outputFilePrefix\
                    \ OUTPUTFILEPREFIX]\n                                        \
                    \          [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                    \                                                  [--version]\n\
                    \                                                  [--tmp_dir\
                    \ TMP_DIR]\n                                                 \
                    \ [--tmp_dirKeep]\n                                          \
                    \        inputFasta outputDirectory\n\nCreate a database for use\
                    \ with blastn from an input reference FASTA file\n\npositional\
                    \ arguments:\n  inputFasta            Location of the input FASTA\
                    \ file\n  outputDirectory       Location for the output files\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  --outputFilePrefix OUTPUTFILEPREFIX\n  \
                    \                      Prefix for the output file name (default:\
                    \ inputFasta\n                        name, sans \".fasta\" extension)\n\
                    \  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                    \                        Verboseness of output. [default: DEBUG]\n\
                    \  --version, -V         show program's version number and exit\n\
                    \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                    \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                    \ occurs while running.\n                        Default is to\
                    \ delete all temp files at the end, even\n                   \
                    \     if there's a failure.\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "\nEnter a subcommand to view additional information:\n\
                  \n     taxon_filter.py \e[1mdeplete_human\e[0m [...]\n         \
                  \ Run the entire depletion pipeline: bmtagger, mvicuna,\n      \
                  \    blastn. Optionally, use lastal to select a specific taxon of\n\
                  \          interest.\n\n     taxon_filter.py \e[1mtrim_trimmomatic\e\
                  [0m [...]\n          Trim read sequences with Trimmomatic.\n\n \
                  \    taxon_filter.py \e[1mfilter_lastal_bam\e[0m [...]\n       \
                  \   Restrict input reads to those that align to the\n          givenreference\
                  \ database using LASTAL.\n\n     taxon_filter.py \e[1mfilter_lastal\e\
                  [0m [...]\n          Restrict input reads to those that align to\
                  \ the\n          givenreference database using LASTAL. Also, remove\n\
                  \          duplicates with prinseq.\n\n     taxon_filter.py \e[1mpartition_bmtagger\e\
                  [0m [...]\n          Use bmtagger to partition input reads into\
                  \ ones thatmatch at\n          least one of several databases and\
                  \ ones that don't matchany\n          of the databases.\n\n    \
                  \ taxon_filter.py \e[1mdeplete_bam_bmtagger\e[0m [...]\n       \
                  \   Use bmtagger to deplete input reads against several\n      \
                  \    databases.\n\n     taxon_filter.py \e[1mdeplete_blastn\e[0m\
                  \ [...]\n          Use blastn to remove reads that match at least\
                  \ one of the\n          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_paired\e\
                  [0m [...]\n          Use blastn to remove reads that match at least\
                  \ one of the\n          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_bam\e\
                  [0m [...]\n          Use blastn to remove reads that match at least\
                  \ one of the\n          specified databases.\n\n     taxon_filter.py\
                  \ \e[1mlastal_build_db\e[0m [...]\n          build a database for\
                  \ use with last based on an input fasta\n          file\n\n    \
                  \ taxon_filter.py \e[1mblastn_build_db\e[0m [...]\n          Create\
                  \ a database for use with blastn from an input\n          reference\
                  \ FASTA file\n\n     taxon_filter.py \e[1mbmtagger_build_db\e[0m\
                  \ [...]\n          Create a database for use with Bmtagger from\
                  \ an input FASTA\n          file.\n\nusage: taxon_filter.py subcommand\n\
                  \nThis script contains a number of utilities for filtering NGS reads\
                  \ based on\nmembership or non-membership in a species / genus /\
                  \ taxonomic grouping.\n\nsubcommands:\n  \e[F\n    deplete_human\n\
                  \    trim_trimmomatic\n    filter_lastal_bam\n    filter_lastal\n\
                  \    partition_bmtagger\n    deplete_bam_bmtagger\n    deplete_blastn\n\
                  \    deplete_blastn_paired\n    deplete_blastn_bam\n    lastal_build_db\n\
                  \    blastn_build_db\n    bmtagger_build_db\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error:\
                \ argument \e[F: invalid choice: 'file' (choose from 'deplete_human',\
                \ 'trim_trimmomatic', 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger',\
                \ 'deplete_bam_bmtagger', 'deplete_blastn', 'deplete_blastn_paired',\
                \ 'deplete_blastn_bam', 'lastal_build_db', 'blastn_build_db', 'bmtagger_build_db')\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: inBam
                description: Input reads
              - !Positional
                optional: false
                position: 1
                name: db
                description: Database of taxa we keep
              - !Positional
                optional: false
                position: 2
                name: outBam
                description: Output reads, filtered to refDb
              named:
              - !Flag
                optional: true
                synonyms:
                - -n
                description: "maximum gapless alignments per query position\n(default:\
                  \ 1)"
                args: !SimpleFlagArg
                  name: MAX_GAPLESS_ALIGNMENTS_PER_POSITION
              - !Flag
                optional: true
                synonyms:
                - -l
                description: 'minimum length for initial matches (default: 5)'
                args: !SimpleFlagArg
                  name: MIN_LENGTH_FOR_INITIAL_MATCHES
              - !Flag
                optional: true
                synonyms:
                - -L
                description: 'maximum length for initial matches (default: 50)'
                args: !SimpleFlagArg
                  name: MAX_LENGTH_FOR_INITIAL_MATCHES
              - !Flag
                optional: true
                synonyms:
                - -m
                description: "maximum initial matches per query position (default:\n\
                  100)"
                args: !SimpleFlagArg
                  name: MAX_INITIAL_MATCHES_PER_POSITION
              - !Flag
                optional: true
                synonyms:
                - --JVMmemory
                description: 'JVM virtual memory size (default: 4g)'
                args: !SimpleFlagArg
                  name: JVMMEMORY
              - !Flag
                optional: true
                synonyms:
                - --loglevel
                description: 'Verboseness of output. [default: DEBUG]'
                args: !ChoiceFlagArg
                  choices: !!set
                    ? EXCEPTION
                    ? WARNING
                    ? ERROR
                    ? INFO
                    ? CRITICAL
                    ? DEBUG
              - !Flag
                optional: true
                synonyms:
                - --tmp_dir
                description: 'Base directory for temp files. [default: /tmp]'
                args: !SimpleFlagArg
                  name: TMP_DIR
              - !Flag
                optional: true
                synonyms:
                - --tmp_dirKeep
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - --version
                - -V
                description: show program's version number and exit
                args: !EmptyFlagArg {}
              help_text: "usage: taxon_filter.py subcommand filter_lastal_bam [-h]\n\
                \                                                    [-n MAX_GAPLESS_ALIGNMENTS_PER_POSITION]\n\
                \                                                    [-l MIN_LENGTH_FOR_INITIAL_MATCHES]\n\
                \                                                    [-L MAX_LENGTH_FOR_INITIAL_MATCHES]\n\
                \                                                    [-m MAX_INITIAL_MATCHES_PER_POSITION]\n\
                \                                                    [--JVMmemory\
                \ JVMMEMORY]\n                                                   \
                \ [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n   \
                \                                                 [--version]\n  \
                \                                                  [--tmp_dir TMP_DIR]\n\
                \                                                    [--tmp_dirKeep]\n\
                \                                                    inBam db outBam\n\
                \nRestrict input reads to those that align to the given reference\
                \ database using\nLASTAL.\n\npositional arguments:\n  inBam      \
                \           Input reads\n  db                    Database of taxa\
                \ we keep\n  outBam                Output reads, filtered to refDb\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  -n MAX_GAPLESS_ALIGNMENTS_PER_POSITION\n           \
                \             maximum gapless alignments per query position\n    \
                \                    (default: 1)\n  -l MIN_LENGTH_FOR_INITIAL_MATCHES\n\
                \                        minimum length for initial matches (default:\
                \ 5)\n  -L MAX_LENGTH_FOR_INITIAL_MATCHES\n                      \
                \  maximum length for initial matches (default: 50)\n  -m MAX_INITIAL_MATCHES_PER_POSITION\n\
                \                        maximum initial matches per query position\
                \ (default:\n                        100)\n  --JVMmemory JVMMEMORY\n\
                \                        JVM virtual memory size (default: 4g)\n \
                \ --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n     \
                \                   Verboseness of output. [default: DEBUG]\n  --version,\
                \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
                \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
                \         Keep the tmp_dir if an exception occurs while running.\n\
                \                        Default is to delete all temp files at the\
                \ end, even\n                        if there's a failure.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: taxon_filter.py
                description: ''
              - !Positional
                optional: false
                position: 1
                name: subcommand
                description: ''
              named: []
              parent: *id013
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error:\
                \ argument \e[F: invalid choice: 'interest.' (choose from 'deplete_human',\
                \ 'trim_trimmomatic', 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger',\
                \ 'deplete_bam_bmtagger', 'deplete_blastn', 'deplete_blastn_paired',\
                \ 'deplete_blastn_bam', 'lastal_build_db', 'blastn_build_db', 'bmtagger_build_db')\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: inFastq
                description: Input fastq file.
              - !Positional
                optional: false
                position: 1
                name: outFastq
                description: Output fastq file with matching reads removed.
              - !Positional
                optional: false
                position: 2
                name: refDbs
                description: One or more reference databases for blast.
              named:
              - !Flag
                optional: true
                synonyms:
                - --threads
                description: The number of threads to use in running blastn.
                args: !SimpleFlagArg
                  name: THREADS
              - !Flag
                optional: true
                synonyms:
                - --loglevel
                description: 'Verboseness of output. [default: DEBUG]'
                args: !ChoiceFlagArg
                  choices: !!set
                    ? EXCEPTION
                    ? WARNING
                    ? ERROR
                    ? INFO
                    ? CRITICAL
                    ? DEBUG
              - !Flag
                optional: true
                synonyms:
                - --tmp_dir
                description: 'Base directory for temp files. [default: /tmp]'
                args: !SimpleFlagArg
                  name: TMP_DIR
              - !Flag
                optional: true
                synonyms:
                - --tmp_dirKeep
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - --version
                - -V
                description: show program's version number and exit
                args: !EmptyFlagArg {}
              help_text: "usage: taxon_filter.py subcommand deplete_blastn [-h] [--threads\
                \ THREADS]\n                                                 [--loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n               \
                \                                  [--version]\n                 \
                \                                [--tmp_dir TMP_DIR]\n           \
                \                                      [--tmp_dirKeep]\n         \
                \                                        inFastq outFastq refDbs\n\
                \                                                 [refDbs ...]\n\n\
                Use blastn to remove reads that match at least one of the databases.\n\
                \npositional arguments:\n  inFastq               Input fastq file.\n\
                \  outFastq              Output fastq file with matching reads removed.\n\
                \  refDbs                One or more reference databases for blast.\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --threads THREADS     The number of threads to use in\
                \ running blastn.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                \                        Verboseness of output. [default: DEBUG]\n\
                \  --version, -V         show program's version number and exit\n\
                \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                \ occurs while running.\n                        Default is to delete\
                \ all temp files at the end, even\n                        if there's\
                \ a failure.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional:
              - !Positional
                optional: false
                position: 0
                name: outBam
                description: Use blastn to remove reads that match at least one of
                  the specified databases.
              - !Positional
                optional: false
                position: 0
                name: inBam
                description: Input BAM file.
              - !Positional
                optional: false
                position: 1
                name: refDbs
                description: One or more reference databases for blast.
              - !Positional
                optional: false
                position: 2
                name: outBam
                description: Output BAM file with matching reads removed.
              named:
              - !Flag
                optional: true
                synonyms:
                - --threads
                description: The number of threads to use in running blastn.
                args: !SimpleFlagArg
                  name: THREADS
              - !Flag
                optional: true
                synonyms:
                - --chunkSize
                description: 'FASTA chunk size (default: 1000000)'
                args: !SimpleFlagArg
                  name: CHUNKSIZE
              - !Flag
                optional: true
                synonyms:
                - --JVMmemory
                description: 'JVM virtual memory size (default: 4g)'
                args: !SimpleFlagArg
                  name: JVMMEMORY
              - !Flag
                optional: true
                synonyms:
                - --loglevel
                description: 'Verboseness of output. [default: DEBUG]'
                args: !ChoiceFlagArg
                  choices: !!set
                    ? EXCEPTION
                    ? WARNING
                    ? ERROR
                    ? INFO
                    ? CRITICAL
                    ? DEBUG
              - !Flag
                optional: true
                synonyms:
                - --tmp_dir
                description: 'Base directory for temp files. [default: /tmp]'
                args: !SimpleFlagArg
                  name: TMP_DIR
              - !Flag
                optional: true
                synonyms:
                - --tmp_dirKeep
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - --version
                - -V
                description: show program's version number and exit
                args: !EmptyFlagArg {}
              help_text: "usage: taxon_filter.py subcommand deplete_blastn_bam [-h]\
                \ [--threads THREADS]\n                                          \
                \           [--chunkSize CHUNKSIZE]\n                            \
                \                         [--JVMmemory JVMMEMORY]\n              \
                \                                       [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                                     [--version]\n\
                \                                                     [--tmp_dir TMP_DIR]\n\
                \                                                     [--tmp_dirKeep]\n\
                \                                                     inBam refDbs\
                \ [refDbs ...]\n                                                 \
                \    outBam\n\nUse blastn to remove reads that match at least one\
                \ of the specified databases.\n\npositional arguments:\n  inBam  \
                \               Input BAM file.\n  refDbs                One or more\
                \ reference databases for blast.\n  outBam                Output BAM\
                \ file with matching reads removed.\n\noptional arguments:\n  -h,\
                \ --help            show this help message and exit\n  --threads THREADS\
                \     The number of threads to use in running blastn.\n  --chunkSize\
                \ CHUNKSIZE\n                        FASTA chunk size (default: 1000000)\n\
                \  --JVMmemory JVMMEMORY\n                        JVM virtual memory\
                \ size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                \                        Verboseness of output. [default: DEBUG]\n\
                \  --version, -V         show program's version number and exit\n\
                \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                \ occurs while running.\n                        Default is to delete\
                \ all temp files at the end, even\n                        if there's\
                \ a failure.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id009
              positional:
              - !Positional
                optional: false
                position: 0
                name: inBam
                description: Input BAM file.
              - !Positional
                optional: false
                position: 1
                name: revertBam
                description: 'Output BAM: read markup reverted with Picard.'
              - !Positional
                optional: false
                position: 2
                name: bmtaggerBam
                description: 'Output BAM: depleted of human reads with BMTagger.'
              - !Positional
                optional: false
                position: 3
                name: rmdupBam
                description: 'Output BAM: bmtaggerBam run through M-Vicuna duplicate'
              - !Positional
                optional: false
                position: 4
                name: removal.
                description: 'blastnBam             Output BAM: rmdupBam run through
                  another depletion of'
              named:
              - !Flag
                optional: true
                synonyms:
                - --bmtaggerDbs
                - --blastDbs
                description: "BLASTDBS [BLASTDBS ...]\n[--lastDb LASTDB]\n[--threads\
                  \ THREADS]\n[--JVMmemory JVMMEMORY]\n[--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                  [--version]\n[--tmp_dir TMP_DIR]\n[--tmp_dirKeep]\ninBam [revertBam]\
                  \ bmtaggerBam\nrmdupBam blastnBam"
                args: !RepeatFlagArg
                  name: BMTAGGERDBS
              - !Flag
                optional: true
                synonyms:
                - --taxfiltBam
                description: "Output BAM: blastnBam run through taxonomic selection\n\
                  via LASTAL."
                args: !SimpleFlagArg
                  name: TAXFILTBAM
              - !Flag
                optional: true
                synonyms:
                - --lastDb
                description: One reference database for last (required if
                args: !SimpleFlagArg
                  name: LASTDB
              - !Flag
                optional: true
                synonyms:
                - --threads
                description: The number of threads to use in running blastn.
                args: !SimpleFlagArg
                  name: THREADS
              - !Flag
                optional: true
                synonyms:
                - --JVMmemory
                description: "JVM virtual memory size for Picard FilterSamReads\n\
                  (default: 4g)"
                args: !SimpleFlagArg
                  name: JVMMEMORY
              - !Flag
                optional: true
                synonyms:
                - --loglevel
                description: 'Verboseness of output. [default: DEBUG]'
                args: !ChoiceFlagArg
                  choices: !!set
                    ? EXCEPTION
                    ? WARNING
                    ? ERROR
                    ? INFO
                    ? CRITICAL
                    ? DEBUG
              - !Flag
                optional: true
                synonyms:
                - --tmp_dir
                description: 'Base directory for temp files. [default: /tmp]'
                args: !SimpleFlagArg
                  name: TMP_DIR
              - !Flag
                optional: true
                synonyms:
                - --tmp_dirKeep
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - --version
                - -V
                description: show program's version number and exit
                args: !EmptyFlagArg {}
              help_text: "usage: taxon_filter.py subcommand deplete_human [-h] [--taxfiltBam\
                \ TAXFILTBAM]\n                                                --bmtaggerDbs\
                \ BMTAGGERDBS\n                                                [BMTAGGERDBS\
                \ ...] --blastDbs\n                                              \
                \  BLASTDBS [BLASTDBS ...]\n                                     \
                \           [--lastDb LASTDB]\n                                  \
                \              [--threads THREADS]\n                             \
                \                   [--JVMmemory JVMMEMORY]\n                    \
                \                            [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                                [--version]\n   \
                \                                             [--tmp_dir TMP_DIR]\n\
                \                                                [--tmp_dirKeep]\n\
                \                                                inBam [revertBam]\
                \ bmtaggerBam\n                                                rmdupBam\
                \ blastnBam\n\nRun the entire depletion pipeline: bmtagger, mvicuna,\
                \ blastn. Optionally, use\nlastal to select a specific taxon of interest.\n\
                \npositional arguments:\n  inBam                 Input BAM file.\n\
                \  revertBam             Output BAM: read markup reverted with Picard.\n\
                \  bmtaggerBam           Output BAM: depleted of human reads with\
                \ BMTagger.\n  rmdupBam              Output BAM: bmtaggerBam run through\
                \ M-Vicuna duplicate\n                        removal.\n  blastnBam\
                \             Output BAM: rmdupBam run through another depletion of\n\
                \                        human reads with BLASTN.\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  --taxfiltBam\
                \ TAXFILTBAM\n                        Output BAM: blastnBam run through\
                \ taxonomic selection\n                        via LASTAL.\n  --bmtaggerDbs\
                \ BMTAGGERDBS [BMTAGGERDBS ...]\n                        Reference\
                \ databases (one or more) to deplete from\n                      \
                \  input. For each db, requires prior creation of\n              \
                \          db.bitmask by bmtool, and db.srprism.idx,\n           \
                \             db.srprism.map, etc. by srprism mkindex.\n  --blastDbs\
                \ BLASTDBS [BLASTDBS ...]\n                        One or more reference\
                \ databases for blast to deplete\n                        from input.\n\
                \  --lastDb LASTDB       One reference database for last (required\
                \ if\n                        --taxfiltBam is specified).\n  --threads\
                \ THREADS     The number of threads to use in running blastn.\n  --JVMmemory\
                \ JVMMEMORY\n                        JVM virtual memory size for Picard\
                \ FilterSamReads\n                        (default: 4g)\n  --loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                \
                \        Verboseness of output. [default: DEBUG]\n  --version, -V\
                \         show program's version number and exit\n  --tmp_dir TMP_DIR\
                \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
                \         Keep the tmp_dir if an exception occurs while running.\n\
                \                        Default is to delete all temp files at the\
                \ end, even\n                        if there's a failure.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id010
              positional:
              - !Positional
                optional: false
                position: 0
                name: taxon_filter.py
                description: ''
              - !Positional
                optional: false
                position: 1
                name: subcommand
                description: ''
              named: []
              parent: *id013
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error:\
                \ argument \e[F: invalid choice: 'file.' (choose from 'deplete_human',\
                \ 'trim_trimmomatic', 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger',\
                \ 'deplete_bam_bmtagger', 'deplete_blastn', 'deplete_blastn_paired',\
                \ 'deplete_blastn_bam', 'lastal_build_db', 'blastn_build_db', 'bmtagger_build_db')\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id011
              positional:
              - !Positional
                optional: false
                position: 0
                name: inFastq1
                description: Input fastq file; 1st end of paired-end reads.
              - !Positional
                optional: false
                position: 1
                name: inFastq2
                description: "Input fastq file; 2nd end of paired-end reads. Must\n\
                  have same names as inFastq1"
              - !Positional
                optional: false
                position: 2
                name: refDbs
                description: "Reference databases (one or more) to deplete from\n\
                  input. For each db, requires prior creation of\ndb.bitmask by bmtool,\
                  \ and db.srprism.idx,\ndb.srprism.map, etc. by srprism mkindex."
              named:
              - !Flag
                optional: true
                synonyms:
                - --outMatch
                description: "OUTMATCH\nFilenames for fastq output of matching reads."
                args: !SimpleFlagArg
                  name: OUTMATCH
              - !Flag
                optional: true
                synonyms:
                - --outNoMatch
                description: "OUTNOMATCH\nFilenames for fastq output of unmatched\
                  \ reads."
                args: !SimpleFlagArg
                  name: OUTNOMATCH
              - !Flag
                optional: true
                synonyms:
                - --loglevel
                description: 'Verboseness of output. [default: DEBUG]'
                args: !ChoiceFlagArg
                  choices: !!set
                    ? EXCEPTION
                    ? WARNING
                    ? ERROR
                    ? INFO
                    ? CRITICAL
                    ? DEBUG
              - !Flag
                optional: true
                synonyms:
                - --tmp_dir
                description: 'Base directory for temp files. [default: /tmp]'
                args: !SimpleFlagArg
                  name: TMP_DIR
              - !Flag
                optional: true
                synonyms:
                - --tmp_dirKeep
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - --version
                - -V
                description: show program's version number and exit
                args: !EmptyFlagArg {}
              help_text: "usage: taxon_filter.py subcommand partition_bmtagger [-h]\n\
                \                                                     [--outMatch\
                \ OUTMATCH OUTMATCH]\n                                           \
                \          [--outNoMatch OUTNOMATCH OUTNOMATCH]\n                \
                \                                     [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                                     [--version]\n\
                \                                                     [--tmp_dir TMP_DIR]\n\
                \                                                     [--tmp_dirKeep]\n\
                \                                                     inFastq1 inFastq2\
                \ refDbs\n                                                     [refDbs\
                \ ...]\n\nUse bmtagger to partition input reads into ones that match\
                \ at least one of\nseveral databases and ones that don't match any\
                \ of the databases.\n\npositional arguments:\n  inFastq1         \
                \     Input fastq file; 1st end of paired-end reads.\n  inFastq2 \
                \             Input fastq file; 2nd end of paired-end reads. Must\n\
                \                        have same names as inFastq1\n  refDbs   \
                \             Reference databases (one or more) to deplete from\n\
                \                        input. For each db, requires prior creation\
                \ of\n                        db.bitmask by bmtool, and db.srprism.idx,\n\
                \                        db.srprism.map, etc. by srprism mkindex.\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  --outMatch OUTMATCH OUTMATCH\n                     \
                \   Filenames for fastq output of matching reads.\n  --outNoMatch\
                \ OUTNOMATCH OUTNOMATCH\n                        Filenames for fastq\
                \ output of unmatched reads.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                \                        Verboseness of output. [default: DEBUG]\n\
                \  --version, -V         show program's version number and exit\n\
                \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                \ occurs while running.\n                        Default is to delete\
                \ all temp files at the end, even\n                        if there's\
                \ a failure.\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id012
              positional:
              - !Positional
                optional: false
                position: 0
                name: inputFasta
                description: Location of the input FASTA file
              - !Positional
                optional: false
                position: 1
                name: outputDirectory
                description: Location for the output files
              named:
              - !Flag
                optional: true
                synonyms:
                - --outputFilePrefix
                description: "Prefix for the output file name (default: inputFasta\n\
                  name, sans \".fasta\" extension)"
                args: !SimpleFlagArg
                  name: OUTPUTFILEPREFIX
              - !Flag
                optional: true
                synonyms:
                - --loglevel
                description: 'Verboseness of output. [default: DEBUG]'
                args: !ChoiceFlagArg
                  choices: !!set
                    ? EXCEPTION
                    ? WARNING
                    ? ERROR
                    ? INFO
                    ? CRITICAL
                    ? DEBUG
              - !Flag
                optional: true
                synonyms:
                - --tmp_dir
                description: 'Base directory for temp files. [default: /tmp]'
                args: !SimpleFlagArg
                  name: TMP_DIR
              - !Flag
                optional: true
                synonyms:
                - --tmp_dirKeep
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                args: !EmptyFlagArg {}
              parent: *id013
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - --version
                - -V
                description: show program's version number and exit
                args: !EmptyFlagArg {}
              help_text: "usage: taxon_filter.py subcommand blastn_build_db [-h]\n\
                \                                                  [--outputFilePrefix\
                \ OUTPUTFILEPREFIX]\n                                            \
                \      [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                                  [--version]\n \
                \                                                 [--tmp_dir TMP_DIR]\n\
                \                                                  [--tmp_dirKeep]\n\
                \                                                  inputFasta outputDirectory\n\
                \nCreate a database for use with blastn from an input reference FASTA\
                \ file\n\npositional arguments:\n  inputFasta            Location\
                \ of the input FASTA file\n  outputDirectory       Location for the\
                \ output files\n\noptional arguments:\n  -h, --help            show\
                \ this help message and exit\n  --outputFilePrefix OUTPUTFILEPREFIX\n\
                \                        Prefix for the output file name (default:\
                \ inputFasta\n                        name, sans \".fasta\" extension)\n\
                \  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n    \
                \                    Verboseness of output. [default: DEBUG]\n  --version,\
                \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
                \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
                \         Keep the tmp_dir if an exception occurs while running.\n\
                \                        Default is to delete all temp files at the\
                \ end, even\n                        if there's a failure.\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "\nEnter a subcommand to view additional information:\n\n \
              \    taxon_filter.py \e[1mdeplete_human\e[0m [...]\n          Run the\
              \ entire depletion pipeline: bmtagger, mvicuna,\n          blastn. Optionally,\
              \ use lastal to select a specific taxon of\n          interest.\n\n\
              \     taxon_filter.py \e[1mtrim_trimmomatic\e[0m [...]\n          Trim\
              \ read sequences with Trimmomatic.\n\n     taxon_filter.py \e[1mfilter_lastal_bam\e\
              [0m [...]\n          Restrict input reads to those that align to the\n\
              \          givenreference database using LASTAL.\n\n     taxon_filter.py\
              \ \e[1mfilter_lastal\e[0m [...]\n          Restrict input reads to those\
              \ that align to the\n          givenreference database using LASTAL.\
              \ Also, remove\n          duplicates with prinseq.\n\n     taxon_filter.py\
              \ \e[1mpartition_bmtagger\e[0m [...]\n          Use bmtagger to partition\
              \ input reads into ones thatmatch at\n          least one of several\
              \ databases and ones that don't matchany\n          of the databases.\n\
              \n     taxon_filter.py \e[1mdeplete_bam_bmtagger\e[0m [...]\n      \
              \    Use bmtagger to deplete input reads against several\n         \
              \ databases.\n\n     taxon_filter.py \e[1mdeplete_blastn\e[0m [...]\n\
              \          Use blastn to remove reads that match at least one of the\n\
              \          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_paired\e\
              [0m [...]\n          Use blastn to remove reads that match at least\
              \ one of the\n          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_bam\e\
              [0m [...]\n          Use blastn to remove reads that match at least\
              \ one of the\n          specified databases.\n\n     taxon_filter.py\
              \ \e[1mlastal_build_db\e[0m [...]\n          build a database for use\
              \ with last based on an input fasta\n          file\n\n     taxon_filter.py\
              \ \e[1mblastn_build_db\e[0m [...]\n          Create a database for use\
              \ with blastn from an input\n          reference FASTA file\n\n    \
              \ taxon_filter.py \e[1mbmtagger_build_db\e[0m [...]\n          Create\
              \ a database for use with Bmtagger from an input FASTA\n          file.\n\
              \nusage: taxon_filter.py subcommand\n\nThis script contains a number\
              \ of utilities for filtering NGS reads based on\nmembership or non-membership\
              \ in a species / genus / taxonomic grouping.\n\nsubcommands:\n  \e[F\n\
              \    deplete_human\n    trim_trimmomatic\n    filter_lastal_bam\n  \
              \  filter_lastal\n    partition_bmtagger\n    deplete_bam_bmtagger\n\
              \    deplete_blastn\n    deplete_blastn_paired\n    deplete_blastn_bam\n\
              \    lastal_build_db\n    blastn_build_db\n    bmtagger_build_db\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
            \ \e[F: invalid choice: 'file' (choose from 'deplete_human', 'trim_trimmomatic',\
            \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
            \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
            \ 'blastn_build_db', 'bmtagger_build_db')\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: inBam
            description: Input reads
          - !Positional
            optional: false
            position: 1
            name: db
            description: Database of taxa we keep
          - !Positional
            optional: false
            position: 2
            name: outBam
            description: Output reads, filtered to refDb
          named:
          - !Flag
            optional: true
            synonyms:
            - -n
            description: "maximum gapless alignments per query position\n(default:\
              \ 1)"
            args: !SimpleFlagArg
              name: MAX_GAPLESS_ALIGNMENTS_PER_POSITION
          - !Flag
            optional: true
            synonyms:
            - -l
            description: 'minimum length for initial matches (default: 5)'
            args: !SimpleFlagArg
              name: MIN_LENGTH_FOR_INITIAL_MATCHES
          - !Flag
            optional: true
            synonyms:
            - -L
            description: 'maximum length for initial matches (default: 50)'
            args: !SimpleFlagArg
              name: MAX_LENGTH_FOR_INITIAL_MATCHES
          - !Flag
            optional: true
            synonyms:
            - -m
            description: "maximum initial matches per query position (default:\n100)"
            args: !SimpleFlagArg
              name: MAX_INITIAL_MATCHES_PER_POSITION
          - !Flag
            optional: true
            synonyms:
            - --JVMmemory
            description: 'JVM virtual memory size (default: 4g)'
            args: !SimpleFlagArg
              name: JVMMEMORY
          - !Flag
            optional: true
            synonyms:
            - --loglevel
            description: 'Verboseness of output. [default: DEBUG]'
            args: !ChoiceFlagArg
              choices: !!set
                ? WARNING
                ? CRITICAL
                ? ERROR
                ? DEBUG
                ? INFO
                ? EXCEPTION
          - !Flag
            optional: true
            synonyms:
            - --tmp_dir
            description: 'Base directory for temp files. [default: /tmp]'
            args: !SimpleFlagArg
              name: TMP_DIR
          - !Flag
            optional: true
            synonyms:
            - --tmp_dirKeep
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - --version
            - -V
            description: show program's version number and exit
            args: !EmptyFlagArg {}
          help_text: "usage: taxon_filter.py subcommand filter_lastal_bam [-h]\n \
            \                                                   [-n MAX_GAPLESS_ALIGNMENTS_PER_POSITION]\n\
            \                                                    [-l MIN_LENGTH_FOR_INITIAL_MATCHES]\n\
            \                                                    [-L MAX_LENGTH_FOR_INITIAL_MATCHES]\n\
            \                                                    [-m MAX_INITIAL_MATCHES_PER_POSITION]\n\
            \                                                    [--JVMmemory JVMMEMORY]\n\
            \                                                    [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
            \                                                    [--version]\n   \
            \                                                 [--tmp_dir TMP_DIR]\n\
            \                                                    [--tmp_dirKeep]\n\
            \                                                    inBam db outBam\n\
            \nRestrict input reads to those that align to the given reference database\
            \ using\nLASTAL.\n\npositional arguments:\n  inBam                 Input\
            \ reads\n  db                    Database of taxa we keep\n  outBam  \
            \              Output reads, filtered to refDb\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  -n MAX_GAPLESS_ALIGNMENTS_PER_POSITION\n\
            \                        maximum gapless alignments per query position\n\
            \                        (default: 1)\n  -l MIN_LENGTH_FOR_INITIAL_MATCHES\n\
            \                        minimum length for initial matches (default:\
            \ 5)\n  -L MAX_LENGTH_FOR_INITIAL_MATCHES\n                        maximum\
            \ length for initial matches (default: 50)\n  -m MAX_INITIAL_MATCHES_PER_POSITION\n\
            \                        maximum initial matches per query position (default:\n\
            \                        100)\n  --JVMmemory JVMMEMORY\n             \
            \           JVM virtual memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: taxon_filter.py
            description: ''
          - !Positional
            optional: false
            position: 1
            name: subcommand
            description: ''
          named: []
          parent: *id014
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
            \ \e[F: invalid choice: 'interest.' (choose from 'deplete_human', 'trim_trimmomatic',\
            \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
            \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
            \ 'blastn_build_db', 'bmtagger_build_db')\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: inFastq
            description: Input fastq file.
          - !Positional
            optional: false
            position: 1
            name: outFastq
            description: Output fastq file with matching reads removed.
          - !Positional
            optional: false
            position: 2
            name: refDbs
            description: One or more reference databases for blast.
          named:
          - !Flag
            optional: true
            synonyms:
            - --threads
            description: The number of threads to use in running blastn.
            args: !SimpleFlagArg
              name: THREADS
          - !Flag
            optional: true
            synonyms:
            - --loglevel
            description: 'Verboseness of output. [default: DEBUG]'
            args: !ChoiceFlagArg
              choices: !!set
                ? WARNING
                ? CRITICAL
                ? ERROR
                ? DEBUG
                ? INFO
                ? EXCEPTION
          - !Flag
            optional: true
            synonyms:
            - --tmp_dir
            description: 'Base directory for temp files. [default: /tmp]'
            args: !SimpleFlagArg
              name: TMP_DIR
          - !Flag
            optional: true
            synonyms:
            - --tmp_dirKeep
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - --version
            - -V
            description: show program's version number and exit
            args: !EmptyFlagArg {}
          help_text: "usage: taxon_filter.py subcommand deplete_blastn [-h] [--threads\
            \ THREADS]\n                                                 [--loglevel\
            \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                   \
            \                              [--version]\n                         \
            \                        [--tmp_dir TMP_DIR]\n                       \
            \                          [--tmp_dirKeep]\n                         \
            \                        inFastq outFastq refDbs\n                   \
            \                              [refDbs ...]\n\nUse blastn to remove reads\
            \ that match at least one of the databases.\n\npositional arguments:\n\
            \  inFastq               Input fastq file.\n  outFastq              Output\
            \ fastq file with matching reads removed.\n  refDbs                One\
            \ or more reference databases for blast.\n\noptional arguments:\n  -h,\
            \ --help            show this help message and exit\n  --threads THREADS\
            \     The number of threads to use in running blastn.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional:
          - !Positional
            optional: false
            position: 0
            name: outBam
            description: Use blastn to remove reads that match at least one of the
              specified databases.
          - !Positional
            optional: false
            position: 0
            name: inBam
            description: Input BAM file.
          - !Positional
            optional: false
            position: 1
            name: refDbs
            description: One or more reference databases for blast.
          - !Positional
            optional: false
            position: 2
            name: outBam
            description: Output BAM file with matching reads removed.
          named:
          - !Flag
            optional: true
            synonyms:
            - --threads
            description: The number of threads to use in running blastn.
            args: !SimpleFlagArg
              name: THREADS
          - !Flag
            optional: true
            synonyms:
            - --chunkSize
            description: 'FASTA chunk size (default: 1000000)'
            args: !SimpleFlagArg
              name: CHUNKSIZE
          - !Flag
            optional: true
            synonyms:
            - --JVMmemory
            description: 'JVM virtual memory size (default: 4g)'
            args: !SimpleFlagArg
              name: JVMMEMORY
          - !Flag
            optional: true
            synonyms:
            - --loglevel
            description: 'Verboseness of output. [default: DEBUG]'
            args: !ChoiceFlagArg
              choices: !!set
                ? WARNING
                ? CRITICAL
                ? ERROR
                ? DEBUG
                ? INFO
                ? EXCEPTION
          - !Flag
            optional: true
            synonyms:
            - --tmp_dir
            description: 'Base directory for temp files. [default: /tmp]'
            args: !SimpleFlagArg
              name: TMP_DIR
          - !Flag
            optional: true
            synonyms:
            - --tmp_dirKeep
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - --version
            - -V
            description: show program's version number and exit
            args: !EmptyFlagArg {}
          help_text: "usage: taxon_filter.py subcommand deplete_blastn_bam [-h] [--threads\
            \ THREADS]\n                                                     [--chunkSize\
            \ CHUNKSIZE]\n                                                     [--JVMmemory\
            \ JVMMEMORY]\n                                                     [--loglevel\
            \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                   \
            \                                  [--version]\n                     \
            \                                [--tmp_dir TMP_DIR]\n               \
            \                                      [--tmp_dirKeep]\n             \
            \                                        inBam refDbs [refDbs ...]\n \
            \                                                    outBam\n\nUse blastn\
            \ to remove reads that match at least one of the specified databases.\n\
            \npositional arguments:\n  inBam                 Input BAM file.\n  refDbs\
            \                One or more reference databases for blast.\n  outBam\
            \                Output BAM file with matching reads removed.\n\noptional\
            \ arguments:\n  -h, --help            show this help message and exit\n\
            \  --threads THREADS     The number of threads to use in running blastn.\n\
            \  --chunkSize CHUNKSIZE\n                        FASTA chunk size (default:\
            \ 1000000)\n  --JVMmemory JVMMEMORY\n                        JVM virtual\
            \ memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id009
          positional:
          - !Positional
            optional: false
            position: 0
            name: inBam
            description: Input BAM file.
          - !Positional
            optional: false
            position: 1
            name: revertBam
            description: 'Output BAM: read markup reverted with Picard.'
          - !Positional
            optional: false
            position: 2
            name: bmtaggerBam
            description: 'Output BAM: depleted of human reads with BMTagger.'
          - !Positional
            optional: false
            position: 3
            name: rmdupBam
            description: 'Output BAM: bmtaggerBam run through M-Vicuna duplicate'
          - !Positional
            optional: false
            position: 4
            name: removal.
            description: 'blastnBam             Output BAM: rmdupBam run through another
              depletion of'
          named:
          - !Flag
            optional: true
            synonyms:
            - --bmtaggerDbs
            - --blastDbs
            description: "BLASTDBS [BLASTDBS ...]\n[--lastDb LASTDB]\n[--threads THREADS]\n\
              [--JVMmemory JVMMEMORY]\n[--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
              [--version]\n[--tmp_dir TMP_DIR]\n[--tmp_dirKeep]\ninBam [revertBam]\
              \ bmtaggerBam\nrmdupBam blastnBam"
            args: !RepeatFlagArg
              name: BMTAGGERDBS
          - !Flag
            optional: true
            synonyms:
            - --taxfiltBam
            description: "Output BAM: blastnBam run through taxonomic selection\n\
              via LASTAL."
            args: !SimpleFlagArg
              name: TAXFILTBAM
          - !Flag
            optional: true
            synonyms:
            - --lastDb
            description: One reference database for last (required if
            args: !SimpleFlagArg
              name: LASTDB
          - !Flag
            optional: true
            synonyms:
            - --threads
            description: The number of threads to use in running blastn.
            args: !SimpleFlagArg
              name: THREADS
          - !Flag
            optional: true
            synonyms:
            - --JVMmemory
            description: "JVM virtual memory size for Picard FilterSamReads\n(default:\
              \ 4g)"
            args: !SimpleFlagArg
              name: JVMMEMORY
          - !Flag
            optional: true
            synonyms:
            - --loglevel
            description: 'Verboseness of output. [default: DEBUG]'
            args: !ChoiceFlagArg
              choices: !!set
                ? WARNING
                ? CRITICAL
                ? ERROR
                ? DEBUG
                ? INFO
                ? EXCEPTION
          - !Flag
            optional: true
            synonyms:
            - --tmp_dir
            description: 'Base directory for temp files. [default: /tmp]'
            args: !SimpleFlagArg
              name: TMP_DIR
          - !Flag
            optional: true
            synonyms:
            - --tmp_dirKeep
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - --version
            - -V
            description: show program's version number and exit
            args: !EmptyFlagArg {}
          help_text: "usage: taxon_filter.py subcommand deplete_human [-h] [--taxfiltBam\
            \ TAXFILTBAM]\n                                                --bmtaggerDbs\
            \ BMTAGGERDBS\n                                                [BMTAGGERDBS\
            \ ...] --blastDbs\n                                                BLASTDBS\
            \ [BLASTDBS ...]\n                                                [--lastDb\
            \ LASTDB]\n                                                [--threads\
            \ THREADS]\n                                                [--JVMmemory\
            \ JVMMEMORY]\n                                                [--loglevel\
            \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                   \
            \                             [--version]\n                          \
            \                      [--tmp_dir TMP_DIR]\n                         \
            \                       [--tmp_dirKeep]\n                            \
            \                    inBam [revertBam] bmtaggerBam\n                 \
            \                               rmdupBam blastnBam\n\nRun the entire depletion\
            \ pipeline: bmtagger, mvicuna, blastn. Optionally, use\nlastal to select\
            \ a specific taxon of interest.\n\npositional arguments:\n  inBam    \
            \             Input BAM file.\n  revertBam             Output BAM: read\
            \ markup reverted with Picard.\n  bmtaggerBam           Output BAM: depleted\
            \ of human reads with BMTagger.\n  rmdupBam              Output BAM: bmtaggerBam\
            \ run through M-Vicuna duplicate\n                        removal.\n \
            \ blastnBam             Output BAM: rmdupBam run through another depletion\
            \ of\n                        human reads with BLASTN.\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --taxfiltBam\
            \ TAXFILTBAM\n                        Output BAM: blastnBam run through\
            \ taxonomic selection\n                        via LASTAL.\n  --bmtaggerDbs\
            \ BMTAGGERDBS [BMTAGGERDBS ...]\n                        Reference databases\
            \ (one or more) to deplete from\n                        input. For each\
            \ db, requires prior creation of\n                        db.bitmask by\
            \ bmtool, and db.srprism.idx,\n                        db.srprism.map,\
            \ etc. by srprism mkindex.\n  --blastDbs BLASTDBS [BLASTDBS ...]\n   \
            \                     One or more reference databases for blast to deplete\n\
            \                        from input.\n  --lastDb LASTDB       One reference\
            \ database for last (required if\n                        --taxfiltBam\
            \ is specified).\n  --threads THREADS     The number of threads to use\
            \ in running blastn.\n  --JVMmemory JVMMEMORY\n                      \
            \  JVM virtual memory size for Picard FilterSamReads\n               \
            \         (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id010
          positional:
          - !Positional
            optional: false
            position: 0
            name: taxon_filter.py
            description: ''
          - !Positional
            optional: false
            position: 1
            name: subcommand
            description: ''
          named: []
          parent: *id014
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
            \ \e[F: invalid choice: 'file.' (choose from 'deplete_human', 'trim_trimmomatic',\
            \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
            \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
            \ 'blastn_build_db', 'bmtagger_build_db')\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id011
          positional:
          - !Positional
            optional: false
            position: 0
            name: inFastq1
            description: Input fastq file; 1st end of paired-end reads.
          - !Positional
            optional: false
            position: 1
            name: inFastq2
            description: "Input fastq file; 2nd end of paired-end reads. Must\nhave\
              \ same names as inFastq1"
          - !Positional
            optional: false
            position: 2
            name: refDbs
            description: "Reference databases (one or more) to deplete from\ninput.\
              \ For each db, requires prior creation of\ndb.bitmask by bmtool, and\
              \ db.srprism.idx,\ndb.srprism.map, etc. by srprism mkindex."
          named:
          - !Flag
            optional: true
            synonyms:
            - --outMatch
            description: "OUTMATCH\nFilenames for fastq output of matching reads."
            args: !SimpleFlagArg
              name: OUTMATCH
          - !Flag
            optional: true
            synonyms:
            - --outNoMatch
            description: "OUTNOMATCH\nFilenames for fastq output of unmatched reads."
            args: !SimpleFlagArg
              name: OUTNOMATCH
          - !Flag
            optional: true
            synonyms:
            - --loglevel
            description: 'Verboseness of output. [default: DEBUG]'
            args: !ChoiceFlagArg
              choices: !!set
                ? WARNING
                ? CRITICAL
                ? ERROR
                ? DEBUG
                ? INFO
                ? EXCEPTION
          - !Flag
            optional: true
            synonyms:
            - --tmp_dir
            description: 'Base directory for temp files. [default: /tmp]'
            args: !SimpleFlagArg
              name: TMP_DIR
          - !Flag
            optional: true
            synonyms:
            - --tmp_dirKeep
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - --version
            - -V
            description: show program's version number and exit
            args: !EmptyFlagArg {}
          help_text: "usage: taxon_filter.py subcommand partition_bmtagger [-h]\n\
            \                                                     [--outMatch OUTMATCH\
            \ OUTMATCH]\n                                                     [--outNoMatch\
            \ OUTNOMATCH OUTNOMATCH]\n                                           \
            \          [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
            \                                                     [--version]\n  \
            \                                                   [--tmp_dir TMP_DIR]\n\
            \                                                     [--tmp_dirKeep]\n\
            \                                                     inFastq1 inFastq2\
            \ refDbs\n                                                     [refDbs\
            \ ...]\n\nUse bmtagger to partition input reads into ones that match at\
            \ least one of\nseveral databases and ones that don't match any of the\
            \ databases.\n\npositional arguments:\n  inFastq1              Input fastq\
            \ file; 1st end of paired-end reads.\n  inFastq2              Input fastq\
            \ file; 2nd end of paired-end reads. Must\n                        have\
            \ same names as inFastq1\n  refDbs                Reference databases\
            \ (one or more) to deplete from\n                        input. For each\
            \ db, requires prior creation of\n                        db.bitmask by\
            \ bmtool, and db.srprism.idx,\n                        db.srprism.map,\
            \ etc. by srprism mkindex.\n\noptional arguments:\n  -h, --help      \
            \      show this help message and exit\n  --outMatch OUTMATCH OUTMATCH\n\
            \                        Filenames for fastq output of matching reads.\n\
            \  --outNoMatch OUTNOMATCH OUTNOMATCH\n                        Filenames\
            \ for fastq output of unmatched reads.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id012
          positional:
          - !Positional
            optional: false
            position: 0
            name: inputFasta
            description: Location of the input FASTA file
          - !Positional
            optional: false
            position: 1
            name: outputDirectory
            description: Location for the output files
          named:
          - !Flag
            optional: true
            synonyms:
            - --outputFilePrefix
            description: "Prefix for the output file name (default: inputFasta\nname,\
              \ sans \".fasta\" extension)"
            args: !SimpleFlagArg
              name: OUTPUTFILEPREFIX
          - !Flag
            optional: true
            synonyms:
            - --loglevel
            description: 'Verboseness of output. [default: DEBUG]'
            args: !ChoiceFlagArg
              choices: !!set
                ? WARNING
                ? CRITICAL
                ? ERROR
                ? DEBUG
                ? INFO
                ? EXCEPTION
          - !Flag
            optional: true
            synonyms:
            - --tmp_dir
            description: 'Base directory for temp files. [default: /tmp]'
            args: !SimpleFlagArg
              name: TMP_DIR
          - !Flag
            optional: true
            synonyms:
            - --tmp_dirKeep
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            args: !EmptyFlagArg {}
          parent: *id014
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - --version
            - -V
            description: show program's version number and exit
            args: !EmptyFlagArg {}
          help_text: "usage: taxon_filter.py subcommand blastn_build_db [-h]\n   \
            \                                               [--outputFilePrefix OUTPUTFILEPREFIX]\n\
            \                                                  [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
            \                                                  [--version]\n     \
            \                                             [--tmp_dir TMP_DIR]\n  \
            \                                                [--tmp_dirKeep]\n   \
            \                                               inputFasta outputDirectory\n\
            \nCreate a database for use with blastn from an input reference FASTA\
            \ file\n\npositional arguments:\n  inputFasta            Location of the\
            \ input FASTA file\n  outputDirectory       Location for the output files\n\
            \noptional arguments:\n  -h, --help            show this help message\
            \ and exit\n  --outputFilePrefix OUTPUTFILEPREFIX\n                  \
            \      Prefix for the output file name (default: inputFasta\n        \
            \                name, sans \".fasta\" extension)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "\nEnter a subcommand to view additional information:\n\n     taxon_filter.py\
          \ \e[1mdeplete_human\e[0m [...]\n          Run the entire depletion pipeline:\
          \ bmtagger, mvicuna,\n          blastn. Optionally, use lastal to select\
          \ a specific taxon of\n          interest.\n\n     taxon_filter.py \e[1mtrim_trimmomatic\e\
          [0m [...]\n          Trim read sequences with Trimmomatic.\n\n     taxon_filter.py\
          \ \e[1mfilter_lastal_bam\e[0m [...]\n          Restrict input reads to those\
          \ that align to the\n          givenreference database using LASTAL.\n\n\
          \     taxon_filter.py \e[1mfilter_lastal\e[0m [...]\n          Restrict\
          \ input reads to those that align to the\n          givenreference database\
          \ using LASTAL. Also, remove\n          duplicates with prinseq.\n\n   \
          \  taxon_filter.py \e[1mpartition_bmtagger\e[0m [...]\n          Use bmtagger\
          \ to partition input reads into ones thatmatch at\n          least one of\
          \ several databases and ones that don't matchany\n          of the databases.\n\
          \n     taxon_filter.py \e[1mdeplete_bam_bmtagger\e[0m [...]\n          Use\
          \ bmtagger to deplete input reads against several\n          databases.\n\
          \n     taxon_filter.py \e[1mdeplete_blastn\e[0m [...]\n          Use blastn\
          \ to remove reads that match at least one of the\n          databases.\n\
          \n     taxon_filter.py \e[1mdeplete_blastn_paired\e[0m [...]\n         \
          \ Use blastn to remove reads that match at least one of the\n          databases.\n\
          \n     taxon_filter.py \e[1mdeplete_blastn_bam\e[0m [...]\n          Use\
          \ blastn to remove reads that match at least one of the\n          specified\
          \ databases.\n\n     taxon_filter.py \e[1mlastal_build_db\e[0m [...]\n \
          \         build a database for use with last based on an input fasta\n \
          \         file\n\n     taxon_filter.py \e[1mblastn_build_db\e[0m [...]\n\
          \          Create a database for use with blastn from an input\n       \
          \   reference FASTA file\n\n     taxon_filter.py \e[1mbmtagger_build_db\e\
          [0m [...]\n          Create a database for use with Bmtagger from an input\
          \ FASTA\n          file.\n\nusage: taxon_filter.py subcommand\n\nThis script\
          \ contains a number of utilities for filtering NGS reads based on\nmembership\
          \ or non-membership in a species / genus / taxonomic grouping.\n\nsubcommands:\n\
          \  \e[F\n    deplete_human\n    trim_trimmomatic\n    filter_lastal_bam\n\
          \    filter_lastal\n    partition_bmtagger\n    deplete_bam_bmtagger\n \
          \   deplete_blastn\n    deplete_blastn_paired\n    deplete_blastn_bam\n\
          \    lastal_build_db\n    blastn_build_db\n    bmtagger_build_db\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
        \ \e[F: invalid choice: 'file' (choose from 'deplete_human', 'trim_trimmomatic',\
        \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
        \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
        \ 'blastn_build_db', 'bmtagger_build_db')\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: inBam
        description: Input reads
      - !Positional
        optional: false
        position: 1
        name: db
        description: Database of taxa we keep
      - !Positional
        optional: false
        position: 2
        name: outBam
        description: Output reads, filtered to refDb
      named:
      - !Flag
        optional: true
        synonyms:
        - -n
        description: "maximum gapless alignments per query position\n(default: 1)"
        args: !SimpleFlagArg
          name: MAX_GAPLESS_ALIGNMENTS_PER_POSITION
      - !Flag
        optional: true
        synonyms:
        - -l
        description: 'minimum length for initial matches (default: 5)'
        args: !SimpleFlagArg
          name: MIN_LENGTH_FOR_INITIAL_MATCHES
      - !Flag
        optional: true
        synonyms:
        - -L
        description: 'maximum length for initial matches (default: 50)'
        args: !SimpleFlagArg
          name: MAX_LENGTH_FOR_INITIAL_MATCHES
      - !Flag
        optional: true
        synonyms:
        - -m
        description: "maximum initial matches per query position (default:\n100)"
        args: !SimpleFlagArg
          name: MAX_INITIAL_MATCHES_PER_POSITION
      - !Flag
        optional: true
        synonyms:
        - --JVMmemory
        description: 'JVM virtual memory size (default: 4g)'
        args: !SimpleFlagArg
          name: JVMMEMORY
      - !Flag
        optional: true
        synonyms:
        - --loglevel
        description: 'Verboseness of output. [default: DEBUG]'
        args: !ChoiceFlagArg
          choices: !!set
            ? CRITICAL
            ? ERROR
            ? INFO
            ? WARNING
            ? DEBUG
            ? EXCEPTION
      - !Flag
        optional: true
        synonyms:
        - --tmp_dir
        description: 'Base directory for temp files. [default: /tmp]'
        args: !SimpleFlagArg
          name: TMP_DIR
      - !Flag
        optional: true
        synonyms:
        - --tmp_dirKeep
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - --version
        - -V
        description: show program's version number and exit
        args: !EmptyFlagArg {}
      help_text: "usage: taxon_filter.py subcommand filter_lastal_bam [-h]\n     \
        \                                               [-n MAX_GAPLESS_ALIGNMENTS_PER_POSITION]\n\
        \                                                    [-l MIN_LENGTH_FOR_INITIAL_MATCHES]\n\
        \                                                    [-L MAX_LENGTH_FOR_INITIAL_MATCHES]\n\
        \                                                    [-m MAX_INITIAL_MATCHES_PER_POSITION]\n\
        \                                                    [--JVMmemory JVMMEMORY]\n\
        \                                                    [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                                    [--version]\n       \
        \                                             [--tmp_dir TMP_DIR]\n      \
        \                                              [--tmp_dirKeep]\n         \
        \                                           inBam db outBam\n\nRestrict input\
        \ reads to those that align to the given reference database using\nLASTAL.\n\
        \npositional arguments:\n  inBam                 Input reads\n  db       \
        \             Database of taxa we keep\n  outBam                Output reads,\
        \ filtered to refDb\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -n MAX_GAPLESS_ALIGNMENTS_PER_POSITION\n      \
        \                  maximum gapless alignments per query position\n       \
        \                 (default: 1)\n  -l MIN_LENGTH_FOR_INITIAL_MATCHES\n    \
        \                    minimum length for initial matches (default: 5)\n  -L\
        \ MAX_LENGTH_FOR_INITIAL_MATCHES\n                        maximum length for\
        \ initial matches (default: 50)\n  -m MAX_INITIAL_MATCHES_PER_POSITION\n \
        \                       maximum initial matches per query position (default:\n\
        \                        100)\n  --JVMmemory JVMMEMORY\n                 \
        \       JVM virtual memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: taxon_filter.py
        description: ''
      - !Positional
        optional: false
        position: 1
        name: subcommand
        description: ''
      named: []
      parent: *id015
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
        \ \e[F: invalid choice: 'interest.' (choose from 'deplete_human', 'trim_trimmomatic',\
        \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
        \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
        \ 'blastn_build_db', 'bmtagger_build_db')\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: inFastq
        description: Input fastq file.
      - !Positional
        optional: false
        position: 1
        name: outFastq
        description: Output fastq file with matching reads removed.
      - !Positional
        optional: false
        position: 2
        name: refDbs
        description: One or more reference databases for blast.
      named:
      - !Flag
        optional: true
        synonyms:
        - --threads
        description: The number of threads to use in running blastn.
        args: !SimpleFlagArg
          name: THREADS
      - !Flag
        optional: true
        synonyms:
        - --loglevel
        description: 'Verboseness of output. [default: DEBUG]'
        args: !ChoiceFlagArg
          choices: !!set
            ? CRITICAL
            ? ERROR
            ? INFO
            ? WARNING
            ? DEBUG
            ? EXCEPTION
      - !Flag
        optional: true
        synonyms:
        - --tmp_dir
        description: 'Base directory for temp files. [default: /tmp]'
        args: !SimpleFlagArg
          name: TMP_DIR
      - !Flag
        optional: true
        synonyms:
        - --tmp_dirKeep
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - --version
        - -V
        description: show program's version number and exit
        args: !EmptyFlagArg {}
      help_text: "usage: taxon_filter.py subcommand deplete_blastn [-h] [--threads\
        \ THREADS]\n                                                 [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                                 [--version]\n          \
        \                                       [--tmp_dir TMP_DIR]\n            \
        \                                     [--tmp_dirKeep]\n                  \
        \                               inFastq outFastq refDbs\n                \
        \                                 [refDbs ...]\n\nUse blastn to remove reads\
        \ that match at least one of the databases.\n\npositional arguments:\n  inFastq\
        \               Input fastq file.\n  outFastq              Output fastq file\
        \ with matching reads removed.\n  refDbs                One or more reference\
        \ databases for blast.\n\noptional arguments:\n  -h, --help            show\
        \ this help message and exit\n  --threads THREADS     The number of threads\
        \ to use in running blastn.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional:
      - !Positional
        optional: false
        position: 0
        name: outBam
        description: Use blastn to remove reads that match at least one of the specified
          databases.
      - !Positional
        optional: false
        position: 0
        name: inBam
        description: Input BAM file.
      - !Positional
        optional: false
        position: 1
        name: refDbs
        description: One or more reference databases for blast.
      - !Positional
        optional: false
        position: 2
        name: outBam
        description: Output BAM file with matching reads removed.
      named:
      - !Flag
        optional: true
        synonyms:
        - --threads
        description: The number of threads to use in running blastn.
        args: !SimpleFlagArg
          name: THREADS
      - !Flag
        optional: true
        synonyms:
        - --chunkSize
        description: 'FASTA chunk size (default: 1000000)'
        args: !SimpleFlagArg
          name: CHUNKSIZE
      - !Flag
        optional: true
        synonyms:
        - --JVMmemory
        description: 'JVM virtual memory size (default: 4g)'
        args: !SimpleFlagArg
          name: JVMMEMORY
      - !Flag
        optional: true
        synonyms:
        - --loglevel
        description: 'Verboseness of output. [default: DEBUG]'
        args: !ChoiceFlagArg
          choices: !!set
            ? CRITICAL
            ? ERROR
            ? INFO
            ? WARNING
            ? DEBUG
            ? EXCEPTION
      - !Flag
        optional: true
        synonyms:
        - --tmp_dir
        description: 'Base directory for temp files. [default: /tmp]'
        args: !SimpleFlagArg
          name: TMP_DIR
      - !Flag
        optional: true
        synonyms:
        - --tmp_dirKeep
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - --version
        - -V
        description: show program's version number and exit
        args: !EmptyFlagArg {}
      help_text: "usage: taxon_filter.py subcommand deplete_blastn_bam [-h] [--threads\
        \ THREADS]\n                                                     [--chunkSize\
        \ CHUNKSIZE]\n                                                     [--JVMmemory\
        \ JVMMEMORY]\n                                                     [--loglevel\
        \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                       \
        \                              [--version]\n                             \
        \                        [--tmp_dir TMP_DIR]\n                           \
        \                          [--tmp_dirKeep]\n                             \
        \                        inBam refDbs [refDbs ...]\n                     \
        \                                outBam\n\nUse blastn to remove reads that\
        \ match at least one of the specified databases.\n\npositional arguments:\n\
        \  inBam                 Input BAM file.\n  refDbs                One or more\
        \ reference databases for blast.\n  outBam                Output BAM file\
        \ with matching reads removed.\n\noptional arguments:\n  -h, --help      \
        \      show this help message and exit\n  --threads THREADS     The number\
        \ of threads to use in running blastn.\n  --chunkSize CHUNKSIZE\n        \
        \                FASTA chunk size (default: 1000000)\n  --JVMmemory JVMMEMORY\n\
        \                        JVM virtual memory size (default: 4g)\n  --loglevel\
        \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                        Verboseness\
        \ of output. [default: DEBUG]\n  --version, -V         show program's version\
        \ number and exit\n  --tmp_dir TMP_DIR     Base directory for temp files.\
        \ [default: /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
        \ occurs while running.\n                        Default is to delete all\
        \ temp files at the end, even\n                        if there's a failure.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id009
      positional:
      - !Positional
        optional: false
        position: 0
        name: inBam
        description: Input BAM file.
      - !Positional
        optional: false
        position: 1
        name: revertBam
        description: 'Output BAM: read markup reverted with Picard.'
      - !Positional
        optional: false
        position: 2
        name: bmtaggerBam
        description: 'Output BAM: depleted of human reads with BMTagger.'
      - !Positional
        optional: false
        position: 3
        name: rmdupBam
        description: 'Output BAM: bmtaggerBam run through M-Vicuna duplicate'
      - !Positional
        optional: false
        position: 4
        name: removal.
        description: 'blastnBam             Output BAM: rmdupBam run through another
          depletion of'
      named:
      - !Flag
        optional: true
        synonyms:
        - --bmtaggerDbs
        - --blastDbs
        description: "BLASTDBS [BLASTDBS ...]\n[--lastDb LASTDB]\n[--threads THREADS]\n\
          [--JVMmemory JVMMEMORY]\n[--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
          [--version]\n[--tmp_dir TMP_DIR]\n[--tmp_dirKeep]\ninBam [revertBam] bmtaggerBam\n\
          rmdupBam blastnBam"
        args: !RepeatFlagArg
          name: BMTAGGERDBS
      - !Flag
        optional: true
        synonyms:
        - --taxfiltBam
        description: "Output BAM: blastnBam run through taxonomic selection\nvia LASTAL."
        args: !SimpleFlagArg
          name: TAXFILTBAM
      - !Flag
        optional: true
        synonyms:
        - --lastDb
        description: One reference database for last (required if
        args: !SimpleFlagArg
          name: LASTDB
      - !Flag
        optional: true
        synonyms:
        - --threads
        description: The number of threads to use in running blastn.
        args: !SimpleFlagArg
          name: THREADS
      - !Flag
        optional: true
        synonyms:
        - --JVMmemory
        description: "JVM virtual memory size for Picard FilterSamReads\n(default:\
          \ 4g)"
        args: !SimpleFlagArg
          name: JVMMEMORY
      - !Flag
        optional: true
        synonyms:
        - --loglevel
        description: 'Verboseness of output. [default: DEBUG]'
        args: !ChoiceFlagArg
          choices: !!set
            ? CRITICAL
            ? ERROR
            ? INFO
            ? WARNING
            ? DEBUG
            ? EXCEPTION
      - !Flag
        optional: true
        synonyms:
        - --tmp_dir
        description: 'Base directory for temp files. [default: /tmp]'
        args: !SimpleFlagArg
          name: TMP_DIR
      - !Flag
        optional: true
        synonyms:
        - --tmp_dirKeep
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - --version
        - -V
        description: show program's version number and exit
        args: !EmptyFlagArg {}
      help_text: "usage: taxon_filter.py subcommand deplete_human [-h] [--taxfiltBam\
        \ TAXFILTBAM]\n                                                --bmtaggerDbs\
        \ BMTAGGERDBS\n                                                [BMTAGGERDBS\
        \ ...] --blastDbs\n                                                BLASTDBS\
        \ [BLASTDBS ...]\n                                                [--lastDb\
        \ LASTDB]\n                                                [--threads THREADS]\n\
        \                                                [--JVMmemory JVMMEMORY]\n\
        \                                                [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                                [--version]\n           \
        \                                     [--tmp_dir TMP_DIR]\n              \
        \                                  [--tmp_dirKeep]\n                     \
        \                           inBam [revertBam] bmtaggerBam\n              \
        \                                  rmdupBam blastnBam\n\nRun the entire depletion\
        \ pipeline: bmtagger, mvicuna, blastn. Optionally, use\nlastal to select a\
        \ specific taxon of interest.\n\npositional arguments:\n  inBam          \
        \       Input BAM file.\n  revertBam             Output BAM: read markup reverted\
        \ with Picard.\n  bmtaggerBam           Output BAM: depleted of human reads\
        \ with BMTagger.\n  rmdupBam              Output BAM: bmtaggerBam run through\
        \ M-Vicuna duplicate\n                        removal.\n  blastnBam      \
        \       Output BAM: rmdupBam run through another depletion of\n          \
        \              human reads with BLASTN.\n\noptional arguments:\n  -h, --help\
        \            show this help message and exit\n  --taxfiltBam TAXFILTBAM\n\
        \                        Output BAM: blastnBam run through taxonomic selection\n\
        \                        via LASTAL.\n  --bmtaggerDbs BMTAGGERDBS [BMTAGGERDBS\
        \ ...]\n                        Reference databases (one or more) to deplete\
        \ from\n                        input. For each db, requires prior creation\
        \ of\n                        db.bitmask by bmtool, and db.srprism.idx,\n\
        \                        db.srprism.map, etc. by srprism mkindex.\n  --blastDbs\
        \ BLASTDBS [BLASTDBS ...]\n                        One or more reference databases\
        \ for blast to deplete\n                        from input.\n  --lastDb LASTDB\
        \       One reference database for last (required if\n                   \
        \     --taxfiltBam is specified).\n  --threads THREADS     The number of threads\
        \ to use in running blastn.\n  --JVMmemory JVMMEMORY\n                   \
        \     JVM virtual memory size for Picard FilterSamReads\n                \
        \        (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id010
      positional:
      - !Positional
        optional: false
        position: 0
        name: taxon_filter.py
        description: ''
      - !Positional
        optional: false
        position: 1
        name: subcommand
        description: ''
      named: []
      parent: *id015
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
        \ \e[F: invalid choice: 'file.' (choose from 'deplete_human', 'trim_trimmomatic',\
        \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
        \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
        \ 'blastn_build_db', 'bmtagger_build_db')\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id011
      positional:
      - !Positional
        optional: false
        position: 0
        name: inFastq1
        description: Input fastq file; 1st end of paired-end reads.
      - !Positional
        optional: false
        position: 1
        name: inFastq2
        description: "Input fastq file; 2nd end of paired-end reads. Must\nhave same\
          \ names as inFastq1"
      - !Positional
        optional: false
        position: 2
        name: refDbs
        description: "Reference databases (one or more) to deplete from\ninput. For\
          \ each db, requires prior creation of\ndb.bitmask by bmtool, and db.srprism.idx,\n\
          db.srprism.map, etc. by srprism mkindex."
      named:
      - !Flag
        optional: true
        synonyms:
        - --outMatch
        description: "OUTMATCH\nFilenames for fastq output of matching reads."
        args: !SimpleFlagArg
          name: OUTMATCH
      - !Flag
        optional: true
        synonyms:
        - --outNoMatch
        description: "OUTNOMATCH\nFilenames for fastq output of unmatched reads."
        args: !SimpleFlagArg
          name: OUTNOMATCH
      - !Flag
        optional: true
        synonyms:
        - --loglevel
        description: 'Verboseness of output. [default: DEBUG]'
        args: !ChoiceFlagArg
          choices: !!set
            ? CRITICAL
            ? ERROR
            ? INFO
            ? WARNING
            ? DEBUG
            ? EXCEPTION
      - !Flag
        optional: true
        synonyms:
        - --tmp_dir
        description: 'Base directory for temp files. [default: /tmp]'
        args: !SimpleFlagArg
          name: TMP_DIR
      - !Flag
        optional: true
        synonyms:
        - --tmp_dirKeep
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - --version
        - -V
        description: show program's version number and exit
        args: !EmptyFlagArg {}
      help_text: "usage: taxon_filter.py subcommand partition_bmtagger [-h]\n    \
        \                                                 [--outMatch OUTMATCH OUTMATCH]\n\
        \                                                     [--outNoMatch OUTNOMATCH\
        \ OUTNOMATCH]\n                                                     [--loglevel\
        \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                       \
        \                              [--version]\n                             \
        \                        [--tmp_dir TMP_DIR]\n                           \
        \                          [--tmp_dirKeep]\n                             \
        \                        inFastq1 inFastq2 refDbs\n                      \
        \                               [refDbs ...]\n\nUse bmtagger to partition\
        \ input reads into ones that match at least one of\nseveral databases and\
        \ ones that don't match any of the databases.\n\npositional arguments:\n \
        \ inFastq1              Input fastq file; 1st end of paired-end reads.\n \
        \ inFastq2              Input fastq file; 2nd end of paired-end reads. Must\n\
        \                        have same names as inFastq1\n  refDbs           \
        \     Reference databases (one or more) to deplete from\n                \
        \        input. For each db, requires prior creation of\n                \
        \        db.bitmask by bmtool, and db.srprism.idx,\n                     \
        \   db.srprism.map, etc. by srprism mkindex.\n\noptional arguments:\n  -h,\
        \ --help            show this help message and exit\n  --outMatch OUTMATCH\
        \ OUTMATCH\n                        Filenames for fastq output of matching\
        \ reads.\n  --outNoMatch OUTNOMATCH OUTNOMATCH\n                        Filenames\
        \ for fastq output of unmatched reads.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id012
      positional:
      - !Positional
        optional: false
        position: 0
        name: inputFasta
        description: Location of the input FASTA file
      - !Positional
        optional: false
        position: 1
        name: outputDirectory
        description: Location for the output files
      named:
      - !Flag
        optional: true
        synonyms:
        - --outputFilePrefix
        description: "Prefix for the output file name (default: inputFasta\nname,\
          \ sans \".fasta\" extension)"
        args: !SimpleFlagArg
          name: OUTPUTFILEPREFIX
      - !Flag
        optional: true
        synonyms:
        - --loglevel
        description: 'Verboseness of output. [default: DEBUG]'
        args: !ChoiceFlagArg
          choices: !!set
            ? CRITICAL
            ? ERROR
            ? INFO
            ? WARNING
            ? DEBUG
            ? EXCEPTION
      - !Flag
        optional: true
        synonyms:
        - --tmp_dir
        description: 'Base directory for temp files. [default: /tmp]'
        args: !SimpleFlagArg
          name: TMP_DIR
      - !Flag
        optional: true
        synonyms:
        - --tmp_dirKeep
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        args: !EmptyFlagArg {}
      parent: *id015
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - --version
        - -V
        description: show program's version number and exit
        args: !EmptyFlagArg {}
      help_text: "usage: taxon_filter.py subcommand blastn_build_db [-h]\n       \
        \                                           [--outputFilePrefix OUTPUTFILEPREFIX]\n\
        \                                                  [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                                  [--version]\n         \
        \                                         [--tmp_dir TMP_DIR]\n          \
        \                                        [--tmp_dirKeep]\n               \
        \                                   inputFasta outputDirectory\n\nCreate a\
        \ database for use with blastn from an input reference FASTA file\n\npositional\
        \ arguments:\n  inputFasta            Location of the input FASTA file\n \
        \ outputDirectory       Location for the output files\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --outputFilePrefix\
        \ OUTPUTFILEPREFIX\n                        Prefix for the output file name\
        \ (default: inputFasta\n                        name, sans \".fasta\" extension)\n\
        \  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n            \
        \            Verboseness of output. [default: DEBUG]\n  --version, -V    \
        \     show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
        \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep\
        \ the tmp_dir if an exception occurs while running.\n                    \
        \    Default is to delete all temp files at the end, even\n              \
        \          if there's a failure.\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nEnter a subcommand to view additional information:\n\n     taxon_filter.py\
      \ \e[1mdeplete_human\e[0m [...]\n          Run the entire depletion pipeline:\
      \ bmtagger, mvicuna,\n          blastn. Optionally, use lastal to select a specific\
      \ taxon of\n          interest.\n\n     taxon_filter.py \e[1mtrim_trimmomatic\e\
      [0m [...]\n          Trim read sequences with Trimmomatic.\n\n     taxon_filter.py\
      \ \e[1mfilter_lastal_bam\e[0m [...]\n          Restrict input reads to those\
      \ that align to the\n          givenreference database using LASTAL.\n\n   \
      \  taxon_filter.py \e[1mfilter_lastal\e[0m [...]\n          Restrict input reads\
      \ to those that align to the\n          givenreference database using LASTAL.\
      \ Also, remove\n          duplicates with prinseq.\n\n     taxon_filter.py \e\
      [1mpartition_bmtagger\e[0m [...]\n          Use bmtagger to partition input\
      \ reads into ones thatmatch at\n          least one of several databases and\
      \ ones that don't matchany\n          of the databases.\n\n     taxon_filter.py\
      \ \e[1mdeplete_bam_bmtagger\e[0m [...]\n          Use bmtagger to deplete input\
      \ reads against several\n          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn\e\
      [0m [...]\n          Use blastn to remove reads that match at least one of the\n\
      \          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_paired\e[0m\
      \ [...]\n          Use blastn to remove reads that match at least one of the\n\
      \          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_bam\e[0m [...]\n\
      \          Use blastn to remove reads that match at least one of the\n     \
      \     specified databases.\n\n     taxon_filter.py \e[1mlastal_build_db\e[0m\
      \ [...]\n          build a database for use with last based on an input fasta\n\
      \          file\n\n     taxon_filter.py \e[1mblastn_build_db\e[0m [...]\n  \
      \        Create a database for use with blastn from an input\n          reference\
      \ FASTA file\n\n     taxon_filter.py \e[1mbmtagger_build_db\e[0m [...]\n   \
      \       Create a database for use with Bmtagger from an input FASTA\n      \
      \    file.\n\nusage: taxon_filter.py subcommand\n\nThis script contains a number\
      \ of utilities for filtering NGS reads based on\nmembership or non-membership\
      \ in a species / genus / taxonomic grouping.\n\nsubcommands:\n  \e[F\n    deplete_human\n\
      \    trim_trimmomatic\n    filter_lastal_bam\n    filter_lastal\n    partition_bmtagger\n\
      \    deplete_bam_bmtagger\n    deplete_blastn\n    deplete_blastn_paired\n \
      \   deplete_blastn_bam\n    lastal_build_db\n    blastn_build_db\n    bmtagger_build_db\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
    \ \e[F: invalid choice: 'file' (choose from 'deplete_human', 'trim_trimmomatic',\
    \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
    \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
    \ 'blastn_build_db', 'bmtagger_build_db')\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: inBam
    description: Input reads
  - !Positional
    optional: false
    position: 1
    name: db
    description: Database of taxa we keep
  - !Positional
    optional: false
    position: 2
    name: outBam
    description: Output reads, filtered to refDb
  named:
  - !Flag
    optional: true
    synonyms:
    - -n
    description: "maximum gapless alignments per query position\n(default: 1)"
    args: !SimpleFlagArg
      name: MAX_GAPLESS_ALIGNMENTS_PER_POSITION
  - !Flag
    optional: true
    synonyms:
    - -l
    description: 'minimum length for initial matches (default: 5)'
    args: !SimpleFlagArg
      name: MIN_LENGTH_FOR_INITIAL_MATCHES
  - !Flag
    optional: true
    synonyms:
    - -L
    description: 'maximum length for initial matches (default: 50)'
    args: !SimpleFlagArg
      name: MAX_LENGTH_FOR_INITIAL_MATCHES
  - !Flag
    optional: true
    synonyms:
    - -m
    description: "maximum initial matches per query position (default:\n100)"
    args: !SimpleFlagArg
      name: MAX_INITIAL_MATCHES_PER_POSITION
  - !Flag
    optional: true
    synonyms:
    - --JVMmemory
    description: 'JVM virtual memory size (default: 4g)'
    args: !SimpleFlagArg
      name: JVMMEMORY
  - !Flag
    optional: true
    synonyms:
    - --loglevel
    description: 'Verboseness of output. [default: DEBUG]'
    args: !ChoiceFlagArg
      choices: !!set
        INFO:
        DEBUG:
        CRITICAL:
        WARNING:
        ERROR:
        EXCEPTION:
  - !Flag
    optional: true
    synonyms:
    - --tmp_dir
    description: 'Base directory for temp files. [default: /tmp]'
    args: !SimpleFlagArg
      name: TMP_DIR
  - !Flag
    optional: true
    synonyms:
    - --tmp_dirKeep
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    - -V
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: taxon_filter.py subcommand filter_lastal_bam [-h]\n         \
    \                                           [-n MAX_GAPLESS_ALIGNMENTS_PER_POSITION]\n\
    \                                                    [-l MIN_LENGTH_FOR_INITIAL_MATCHES]\n\
    \                                                    [-L MAX_LENGTH_FOR_INITIAL_MATCHES]\n\
    \                                                    [-m MAX_INITIAL_MATCHES_PER_POSITION]\n\
    \                                                    [--JVMmemory JVMMEMORY]\n\
    \                                                    [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                                    [--version]\n           \
    \                                         [--tmp_dir TMP_DIR]\n              \
    \                                      [--tmp_dirKeep]\n                     \
    \                               inBam db outBam\n\nRestrict input reads to those\
    \ that align to the given reference database using\nLASTAL.\n\npositional arguments:\n\
    \  inBam                 Input reads\n  db                    Database of taxa\
    \ we keep\n  outBam                Output reads, filtered to refDb\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -n MAX_GAPLESS_ALIGNMENTS_PER_POSITION\n\
    \                        maximum gapless alignments per query position\n     \
    \                   (default: 1)\n  -l MIN_LENGTH_FOR_INITIAL_MATCHES\n      \
    \                  minimum length for initial matches (default: 5)\n  -L MAX_LENGTH_FOR_INITIAL_MATCHES\n\
    \                        maximum length for initial matches (default: 50)\n  -m\
    \ MAX_INITIAL_MATCHES_PER_POSITION\n                        maximum initial matches\
    \ per query position (default:\n                        100)\n  --JVMmemory JVMMEMORY\n\
    \                        JVM virtual memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: taxon_filter.py
    description: ''
  - !Positional
    optional: false
    position: 1
    name: subcommand
    description: ''
  named: []
  parent: *id016
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
    \ \e[F: invalid choice: 'interest.' (choose from 'deplete_human', 'trim_trimmomatic',\
    \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
    \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
    \ 'blastn_build_db', 'bmtagger_build_db')\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: inFastq
    description: Input fastq file.
  - !Positional
    optional: false
    position: 1
    name: outFastq
    description: Output fastq file with matching reads removed.
  - !Positional
    optional: false
    position: 2
    name: refDbs
    description: One or more reference databases for blast.
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: The number of threads to use in running blastn.
    args: !SimpleFlagArg
      name: THREADS
  - !Flag
    optional: true
    synonyms:
    - --loglevel
    description: 'Verboseness of output. [default: DEBUG]'
    args: !ChoiceFlagArg
      choices: !!set
        INFO:
        DEBUG:
        CRITICAL:
        WARNING:
        ERROR:
        EXCEPTION:
  - !Flag
    optional: true
    synonyms:
    - --tmp_dir
    description: 'Base directory for temp files. [default: /tmp]'
    args: !SimpleFlagArg
      name: TMP_DIR
  - !Flag
    optional: true
    synonyms:
    - --tmp_dirKeep
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    - -V
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: taxon_filter.py subcommand deplete_blastn [-h] [--threads THREADS]\n\
    \                                                 [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                                 [--version]\n              \
    \                                   [--tmp_dir TMP_DIR]\n                    \
    \                             [--tmp_dirKeep]\n                              \
    \                   inFastq outFastq refDbs\n                                \
    \                 [refDbs ...]\n\nUse blastn to remove reads that match at least\
    \ one of the databases.\n\npositional arguments:\n  inFastq               Input\
    \ fastq file.\n  outFastq              Output fastq file with matching reads removed.\n\
    \  refDbs                One or more reference databases for blast.\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --threads\
    \ THREADS     The number of threads to use in running blastn.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional:
  - !Positional
    optional: false
    position: 0
    name: outBam
    description: Use blastn to remove reads that match at least one of the specified
      databases.
  - !Positional
    optional: false
    position: 0
    name: inBam
    description: Input BAM file.
  - !Positional
    optional: false
    position: 1
    name: refDbs
    description: One or more reference databases for blast.
  - !Positional
    optional: false
    position: 2
    name: outBam
    description: Output BAM file with matching reads removed.
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: The number of threads to use in running blastn.
    args: !SimpleFlagArg
      name: THREADS
  - !Flag
    optional: true
    synonyms:
    - --chunkSize
    description: 'FASTA chunk size (default: 1000000)'
    args: !SimpleFlagArg
      name: CHUNKSIZE
  - !Flag
    optional: true
    synonyms:
    - --JVMmemory
    description: 'JVM virtual memory size (default: 4g)'
    args: !SimpleFlagArg
      name: JVMMEMORY
  - !Flag
    optional: true
    synonyms:
    - --loglevel
    description: 'Verboseness of output. [default: DEBUG]'
    args: !ChoiceFlagArg
      choices: !!set
        INFO:
        DEBUG:
        CRITICAL:
        WARNING:
        ERROR:
        EXCEPTION:
  - !Flag
    optional: true
    synonyms:
    - --tmp_dir
    description: 'Base directory for temp files. [default: /tmp]'
    args: !SimpleFlagArg
      name: TMP_DIR
  - !Flag
    optional: true
    synonyms:
    - --tmp_dirKeep
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    - -V
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: taxon_filter.py subcommand deplete_blastn_bam [-h] [--threads\
    \ THREADS]\n                                                     [--chunkSize\
    \ CHUNKSIZE]\n                                                     [--JVMmemory\
    \ JVMMEMORY]\n                                                     [--loglevel\
    \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                           \
    \                          [--version]\n                                     \
    \                [--tmp_dir TMP_DIR]\n                                       \
    \              [--tmp_dirKeep]\n                                             \
    \        inBam refDbs [refDbs ...]\n                                         \
    \            outBam\n\nUse blastn to remove reads that match at least one of the\
    \ specified databases.\n\npositional arguments:\n  inBam                 Input\
    \ BAM file.\n  refDbs                One or more reference databases for blast.\n\
    \  outBam                Output BAM file with matching reads removed.\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --threads\
    \ THREADS     The number of threads to use in running blastn.\n  --chunkSize CHUNKSIZE\n\
    \                        FASTA chunk size (default: 1000000)\n  --JVMmemory JVMMEMORY\n\
    \                        JVM virtual memory size (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional:
  - !Positional
    optional: false
    position: 0
    name: inBam
    description: Input BAM file.
  - !Positional
    optional: false
    position: 1
    name: revertBam
    description: 'Output BAM: read markup reverted with Picard.'
  - !Positional
    optional: false
    position: 2
    name: bmtaggerBam
    description: 'Output BAM: depleted of human reads with BMTagger.'
  - !Positional
    optional: false
    position: 3
    name: rmdupBam
    description: 'Output BAM: bmtaggerBam run through M-Vicuna duplicate'
  - !Positional
    optional: false
    position: 4
    name: removal.
    description: 'blastnBam             Output BAM: rmdupBam run through another depletion
      of'
  named:
  - !Flag
    optional: true
    synonyms:
    - --taxfiltBam
    description: "Output BAM: blastnBam run through taxonomic selection\nvia LASTAL."
    args: !SimpleFlagArg
      name: TAXFILTBAM
  - !Flag
    optional: true
    synonyms:
    - --bmtaggerDbs
    description: "Reference databases (one or more) to deplete from\ninput. For each\
      \ db, requires prior creation of\ndb.bitmask by bmtool, and db.srprism.idx,\n\
      db.srprism.map, etc. by srprism mkindex."
    args: !RepeatFlagArg
      name: BMTAGGERDBS
  - !Flag
    optional: true
    synonyms:
    - --blastDbs
    description: "One or more reference databases for blast to deplete\nfrom input."
    args: !RepeatFlagArg
      name: BLASTDBS
  - !Flag
    optional: true
    synonyms:
    - --lastDb
    description: One reference database for last (required if
    args: !SimpleFlagArg
      name: LASTDB
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: The number of threads to use in running blastn.
    args: !SimpleFlagArg
      name: THREADS
  - !Flag
    optional: true
    synonyms:
    - --JVMmemory
    description: "JVM virtual memory size for Picard FilterSamReads\n(default: 4g)"
    args: !SimpleFlagArg
      name: JVMMEMORY
  - !Flag
    optional: true
    synonyms:
    - --loglevel
    description: 'Verboseness of output. [default: DEBUG]'
    args: !ChoiceFlagArg
      choices: !!set
        INFO:
        DEBUG:
        CRITICAL:
        WARNING:
        ERROR:
        EXCEPTION:
  - !Flag
    optional: true
    synonyms:
    - --tmp_dir
    description: 'Base directory for temp files. [default: /tmp]'
    args: !SimpleFlagArg
      name: TMP_DIR
  - !Flag
    optional: true
    synonyms:
    - --tmp_dirKeep
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    - -V
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: taxon_filter.py subcommand deplete_human [-h] [--taxfiltBam TAXFILTBAM]\n\
    \                                                --bmtaggerDbs BMTAGGERDBS\n \
    \                                               [BMTAGGERDBS ...] --blastDbs\n\
    \                                                BLASTDBS [BLASTDBS ...]\n   \
    \                                             [--lastDb LASTDB]\n            \
    \                                    [--threads THREADS]\n                   \
    \                             [--JVMmemory JVMMEMORY]\n                      \
    \                          [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                                [--version]\n               \
    \                                 [--tmp_dir TMP_DIR]\n                      \
    \                          [--tmp_dirKeep]\n                                 \
    \               inBam [revertBam] bmtaggerBam\n                              \
    \                  rmdupBam blastnBam\n\nRun the entire depletion pipeline: bmtagger,\
    \ mvicuna, blastn. Optionally, use\nlastal to select a specific taxon of interest.\n\
    \npositional arguments:\n  inBam                 Input BAM file.\n  revertBam\
    \             Output BAM: read markup reverted with Picard.\n  bmtaggerBam   \
    \        Output BAM: depleted of human reads with BMTagger.\n  rmdupBam      \
    \        Output BAM: bmtaggerBam run through M-Vicuna duplicate\n            \
    \            removal.\n  blastnBam             Output BAM: rmdupBam run through\
    \ another depletion of\n                        human reads with BLASTN.\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --taxfiltBam\
    \ TAXFILTBAM\n                        Output BAM: blastnBam run through taxonomic\
    \ selection\n                        via LASTAL.\n  --bmtaggerDbs BMTAGGERDBS\
    \ [BMTAGGERDBS ...]\n                        Reference databases (one or more)\
    \ to deplete from\n                        input. For each db, requires prior\
    \ creation of\n                        db.bitmask by bmtool, and db.srprism.idx,\n\
    \                        db.srprism.map, etc. by srprism mkindex.\n  --blastDbs\
    \ BLASTDBS [BLASTDBS ...]\n                        One or more reference databases\
    \ for blast to deplete\n                        from input.\n  --lastDb LASTDB\
    \       One reference database for last (required if\n                       \
    \ --taxfiltBam is specified).\n  --threads THREADS     The number of threads to\
    \ use in running blastn.\n  --JVMmemory JVMMEMORY\n                        JVM\
    \ virtual memory size for Picard FilterSamReads\n                        (default:\
    \ 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n          \
    \              Verboseness of output. [default: DEBUG]\n  --version, -V      \
    \   show program's version number and exit\n  --tmp_dir TMP_DIR     Base directory\
    \ for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if\
    \ an exception occurs while running.\n                        Default is to delete\
    \ all temp files at the end, even\n                        if there's a failure.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id010
  positional:
  - !Positional
    optional: false
    position: 0
    name: taxon_filter.py
    description: ''
  - !Positional
    optional: false
    position: 1
    name: subcommand
    description: ''
  named: []
  parent: *id016
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: taxon_filter.py subcommand\ntaxon_filter.py: error: argument\
    \ \e[F: invalid choice: 'file.' (choose from 'deplete_human', 'trim_trimmomatic',\
    \ 'filter_lastal_bam', 'filter_lastal', 'partition_bmtagger', 'deplete_bam_bmtagger',\
    \ 'deplete_blastn', 'deplete_blastn_paired', 'deplete_blastn_bam', 'lastal_build_db',\
    \ 'blastn_build_db', 'bmtagger_build_db')\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id011
  positional:
  - !Positional
    optional: false
    position: 0
    name: inFastq1
    description: Input fastq file; 1st end of paired-end reads.
  - !Positional
    optional: false
    position: 1
    name: inFastq2
    description: "Input fastq file; 2nd end of paired-end reads. Must\nhave same names\
      \ as inFastq1"
  - !Positional
    optional: false
    position: 2
    name: refDbs
    description: "Reference databases (one or more) to deplete from\ninput. For each\
      \ db, requires prior creation of\ndb.bitmask by bmtool, and db.srprism.idx,\n\
      db.srprism.map, etc. by srprism mkindex."
  named:
  - !Flag
    optional: true
    synonyms:
    - --outMatch
    description: "OUTMATCH\nFilenames for fastq output of matching reads."
    args: !SimpleFlagArg
      name: OUTMATCH
  - !Flag
    optional: true
    synonyms:
    - --outNoMatch
    description: "OUTNOMATCH\nFilenames for fastq output of unmatched reads."
    args: !SimpleFlagArg
      name: OUTNOMATCH
  - !Flag
    optional: true
    synonyms:
    - --loglevel
    description: 'Verboseness of output. [default: DEBUG]'
    args: !ChoiceFlagArg
      choices: !!set
        INFO:
        DEBUG:
        CRITICAL:
        WARNING:
        ERROR:
        EXCEPTION:
  - !Flag
    optional: true
    synonyms:
    - --tmp_dir
    description: 'Base directory for temp files. [default: /tmp]'
    args: !SimpleFlagArg
      name: TMP_DIR
  - !Flag
    optional: true
    synonyms:
    - --tmp_dirKeep
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    - -V
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: taxon_filter.py subcommand partition_bmtagger [-h]\n        \
    \                                             [--outMatch OUTMATCH OUTMATCH]\n\
    \                                                     [--outNoMatch OUTNOMATCH\
    \ OUTNOMATCH]\n                                                     [--loglevel\
    \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                           \
    \                          [--version]\n                                     \
    \                [--tmp_dir TMP_DIR]\n                                       \
    \              [--tmp_dirKeep]\n                                             \
    \        inFastq1 inFastq2 refDbs\n                                          \
    \           [refDbs ...]\n\nUse bmtagger to partition input reads into ones that\
    \ match at least one of\nseveral databases and ones that don't match any of the\
    \ databases.\n\npositional arguments:\n  inFastq1              Input fastq file;\
    \ 1st end of paired-end reads.\n  inFastq2              Input fastq file; 2nd\
    \ end of paired-end reads. Must\n                        have same names as inFastq1\n\
    \  refDbs                Reference databases (one or more) to deplete from\n \
    \                       input. For each db, requires prior creation of\n     \
    \                   db.bitmask by bmtool, and db.srprism.idx,\n              \
    \          db.srprism.map, etc. by srprism mkindex.\n\noptional arguments:\n \
    \ -h, --help            show this help message and exit\n  --outMatch OUTMATCH\
    \ OUTMATCH\n                        Filenames for fastq output of matching reads.\n\
    \  --outNoMatch OUTNOMATCH OUTNOMATCH\n                        Filenames for fastq\
    \ output of unmatched reads.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id012
  positional:
  - !Positional
    optional: false
    position: 0
    name: inputFasta
    description: Location of the input FASTA file
  - !Positional
    optional: false
    position: 1
    name: outputDirectory
    description: Location for the output files
  named:
  - !Flag
    optional: true
    synonyms:
    - --outputFilePrefix
    description: "Prefix for the output file name (default: inputFasta\nname, sans\
      \ \".fasta\" extension)"
    args: !SimpleFlagArg
      name: OUTPUTFILEPREFIX
  - !Flag
    optional: true
    synonyms:
    - --loglevel
    description: 'Verboseness of output. [default: DEBUG]'
    args: !ChoiceFlagArg
      choices: !!set
        INFO:
        DEBUG:
        CRITICAL:
        WARNING:
        ERROR:
        EXCEPTION:
  - !Flag
    optional: true
    synonyms:
    - --tmp_dir
    description: 'Base directory for temp files. [default: /tmp]'
    args: !SimpleFlagArg
      name: TMP_DIR
  - !Flag
    optional: true
    synonyms:
    - --tmp_dirKeep
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    args: !EmptyFlagArg {}
  parent: *id016
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - --version
    - -V
    description: show program's version number and exit
    args: !EmptyFlagArg {}
  help_text: "usage: taxon_filter.py subcommand blastn_build_db [-h]\n           \
    \                                       [--outputFilePrefix OUTPUTFILEPREFIX]\n\
    \                                                  [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                                  [--version]\n             \
    \                                     [--tmp_dir TMP_DIR]\n                  \
    \                                [--tmp_dirKeep]\n                           \
    \                       inputFasta outputDirectory\n\nCreate a database for use\
    \ with blastn from an input reference FASTA file\n\npositional arguments:\n  inputFasta\
    \            Location of the input FASTA file\n  outputDirectory       Location\
    \ for the output files\n\noptional arguments:\n  -h, --help            show this\
    \ help message and exit\n  --outputFilePrefix OUTPUTFILEPREFIX\n             \
    \           Prefix for the output file name (default: inputFasta\n           \
    \             name, sans \".fasta\" extension)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nEnter a subcommand to view additional information:\n\n     taxon_filter.py\
  \ \e[1mdeplete_human\e[0m [...]\n          Run the entire depletion pipeline: bmtagger,\
  \ mvicuna,\n          blastn. Optionally, use lastal to select a specific taxon\
  \ of\n          interest.\n\n     taxon_filter.py \e[1mtrim_trimmomatic\e[0m [...]\n\
  \          Trim read sequences with Trimmomatic.\n\n     taxon_filter.py \e[1mfilter_lastal_bam\e\
  [0m [...]\n          Restrict input reads to those that align to the\n         \
  \ givenreference database using LASTAL.\n\n     taxon_filter.py \e[1mfilter_lastal\e\
  [0m [...]\n          Restrict input reads to those that align to the\n         \
  \ givenreference database using LASTAL. Also, remove\n          duplicates with\
  \ prinseq.\n\n     taxon_filter.py \e[1mpartition_bmtagger\e[0m [...]\n        \
  \  Use bmtagger to partition input reads into ones thatmatch at\n          least\
  \ one of several databases and ones that don't matchany\n          of the databases.\n\
  \n     taxon_filter.py \e[1mdeplete_bam_bmtagger\e[0m [...]\n          Use bmtagger\
  \ to deplete input reads against several\n          databases.\n\n     taxon_filter.py\
  \ \e[1mdeplete_blastn\e[0m [...]\n          Use blastn to remove reads that match\
  \ at least one of the\n          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_paired\e\
  [0m [...]\n          Use blastn to remove reads that match at least one of the\n\
  \          databases.\n\n     taxon_filter.py \e[1mdeplete_blastn_bam\e[0m [...]\n\
  \          Use blastn to remove reads that match at least one of the\n         \
  \ specified databases.\n\n     taxon_filter.py \e[1mlastal_build_db\e[0m [...]\n\
  \          build a database for use with last based on an input fasta\n        \
  \  file\n\n     taxon_filter.py \e[1mblastn_build_db\e[0m [...]\n          Create\
  \ a database for use with blastn from an input\n          reference FASTA file\n\
  \n     taxon_filter.py \e[1mbmtagger_build_db\e[0m [...]\n          Create a database\
  \ for use with Bmtagger from an input FASTA\n          file.\n\nusage: taxon_filter.py\
  \ subcommand\n\nThis script contains a number of utilities for filtering NGS reads\
  \ based on\nmembership or non-membership in a species / genus / taxonomic grouping.\n\
  \nsubcommands:\n  \e[F\n    deplete_human\n    trim_trimmomatic\n    filter_lastal_bam\n\
  \    filter_lastal\n    partition_bmtagger\n    deplete_bam_bmtagger\n    deplete_blastn\n\
  \    deplete_blastn_paired\n    deplete_blastn_bam\n    lastal_build_db\n    blastn_build_db\n\
  \    bmtagger_build_db\n"
generated_using: *id004
docker_image:
