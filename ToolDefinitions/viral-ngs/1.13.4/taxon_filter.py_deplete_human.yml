!Command
command:
- taxon_filter.py
- deplete_human
positional:
- !Positional
  description: Input BAM file.
  position: 0
  name: inBam
  optional: false
- !Positional
  description: 'Output BAM: read markup reverted with Picard.'
  position: 1
  name: revertBam
  optional: false
- !Positional
  description: 'Output BAM: depleted of human reads with BMTagger.'
  position: 2
  name: bmtaggerBam
  optional: false
- !Positional
  description: 'Output BAM: bmtaggerBam run through M-Vicuna duplicate'
  position: 3
  name: rmdupBam
  optional: false
- !Positional
  description: 'blastnBam             Output BAM: rmdupBam run through another depletion
    of'
  position: 4
  name: removal.
  optional: false
named:
- !Flag
  description: "BLASTDBS [BLASTDBS ...]\n[--lastDb LASTDB]\n[--threads THREADS]\n\
    [--JVMmemory JVMMEMORY]\n[--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    [--version]\n[--tmp_dir TMP_DIR]\n[--tmp_dirKeep]\ninBam [revertBam] bmtaggerBam\n\
    rmdupBam blastnBam"
  synonyms:
  - --bmtaggerDbs
  - --blastDbs
  args: !RepeatFlagArg
    name: BMTAGGERDBS
  optional: true
- !Flag
  description: "Output BAM: blastnBam run through taxonomic selection\nvia LASTAL."
  synonyms:
  - --taxfiltBam
  args: !SimpleFlagArg
    name: TAXFILTBAM
  optional: true
- !Flag
  description: One reference database for last (required if
  synonyms:
  - --lastDb
  args: !SimpleFlagArg
    name: LASTDB
  optional: true
- !Flag
  description: The number of threads to use in running blastn.
  synonyms:
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: "JVM virtual memory size for Picard FilterSamReads\n(default: 4g)"
  synonyms:
  - --JVMmemory
  args: !SimpleFlagArg
    name: JVMMEMORY
  optional: true
- !Flag
  description: 'Verboseness of output. [default: DEBUG]'
  synonyms:
  - --loglevel
  args: !ChoiceFlagArg
    choices: !!set
      DEBUG:
      ERROR:
      EXCEPTION:
      CRITICAL:
      INFO:
      WARNING:
  optional: true
- !Flag
  description: 'Base directory for temp files. [default: /tmp]'
  synonyms:
  - --tmp_dir
  args: !SimpleFlagArg
    name: TMP_DIR
  optional: true
- !Flag
  description: "Keep the tmp_dir if an exception occurs while running.\nDefault is\
    \ to delete all temp files at the end, even\nif there's a failure.\n"
  synonyms:
  - --tmp_dirKeep
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  - -V
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: taxon_filter.py subcommand deplete_human [-h] [--taxfiltBam TAXFILTBAM]\n\
  \                                                --bmtaggerDbs BMTAGGERDBS\n   \
  \                                             [BMTAGGERDBS ...] --blastDbs\n   \
  \                                             BLASTDBS [BLASTDBS ...]\n        \
  \                                        [--lastDb LASTDB]\n                   \
  \                             [--threads THREADS]\n                            \
  \                    [--JVMmemory JVMMEMORY]\n                                 \
  \               [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n   \
  \                                             [--version]\n                    \
  \                            [--tmp_dir TMP_DIR]\n                             \
  \                   [--tmp_dirKeep]\n                                          \
  \      inBam [revertBam] bmtaggerBam\n                                         \
  \       rmdupBam blastnBam\n\nRun the entire depletion pipeline: bmtagger, mvicuna,\
  \ blastn. Optionally, use\nlastal to select a specific taxon of interest.\n\npositional\
  \ arguments:\n  inBam                 Input BAM file.\n  revertBam             Output\
  \ BAM: read markup reverted with Picard.\n  bmtaggerBam           Output BAM: depleted\
  \ of human reads with BMTagger.\n  rmdupBam              Output BAM: bmtaggerBam\
  \ run through M-Vicuna duplicate\n                        removal.\n  blastnBam\
  \             Output BAM: rmdupBam run through another depletion of\n          \
  \              human reads with BLASTN.\n\noptional arguments:\n  -h, --help   \
  \         show this help message and exit\n  --taxfiltBam TAXFILTBAM\n         \
  \               Output BAM: blastnBam run through taxonomic selection\n        \
  \                via LASTAL.\n  --bmtaggerDbs BMTAGGERDBS [BMTAGGERDBS ...]\n  \
  \                      Reference databases (one or more) to deplete from\n     \
  \                   input. For each db, requires prior creation of\n           \
  \             db.bitmask by bmtool, and db.srprism.idx,\n                      \
  \  db.srprism.map, etc. by srprism mkindex.\n  --blastDbs BLASTDBS [BLASTDBS ...]\n\
  \                        One or more reference databases for blast to deplete\n\
  \                        from input.\n  --lastDb LASTDB       One reference database\
  \ for last (required if\n                        --taxfiltBam is specified).\n \
  \ --threads THREADS     The number of threads to use in running blastn.\n  --JVMmemory\
  \ JVMMEMORY\n                        JVM virtual memory size for Picard FilterSamReads\n\
  \                        (default: 4g)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
  \                        Verboseness of output. [default: DEBUG]\n  --version, -V\
  \         show program's version number and exit\n  --tmp_dir TMP_DIR     Base directory\
  \ for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an\
  \ exception occurs while running.\n                        Default is to delete\
  \ all temp files at the end, even\n                        if there's a failure.\n"
generated_using:
- --help
