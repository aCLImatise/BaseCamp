!Command
command: &id001
- assembly.py
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - assembly.py
  - trim_rmdup_subsamp
  positional:
  - !Positional
    description: Input reads, unaligned BAM format.
    position: 0
    name: inBam
    optional: false
  - !Positional
    description: Trimmomatic clip DB.
    position: 1
    name: clipDb
    optional: false
  - !Positional
    description: "Output reads, unaligned BAM format (currently, read\ngroups and\
      \ other header information are destroyed in\nthis process)."
    position: 2
    name: outBam
    optional: false
  named:
  - !Flag
    description: "Subsample reads to no more than this many individual\nreads. Note\
      \ that paired reads are given priority, and\nunpaired reads are included to\
      \ reach the count if\nthere are too few paired reads to reach n_reads.\n(default\
      \ 100000)"
    synonyms:
    - --n_reads
    args: !SimpleFlagArg
      name: N_READS
    optional: true
  - !Flag
    description: 'Verboseness of output. [default: DEBUG]'
    synonyms:
    - --loglevel
    args: !ChoiceFlagArg
      choices: !!set
        WARNING:
        CRITICAL:
        ERROR:
        DEBUG:
        INFO:
        EXCEPTION:
    optional: true
  - !Flag
    description: 'Base directory for temp files. [default: /tmp]'
    synonyms:
    - --tmp_dir
    args: !SimpleFlagArg
      name: TMP_DIR
    optional: true
  - !Flag
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    synonyms:
    - --tmp_dirKeep
    args: !EmptyFlagArg {}
    optional: true
  parent: &id011 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        description: Input reads, unaligned BAM format.
        position: 0
        name: inBam
        optional: false
      - !Positional
        description: Trimmomatic clip DB.
        position: 1
        name: clipDb
        optional: false
      - !Positional
        description: "Output reads, unaligned BAM format (currently, read\ngroups\
          \ and other header information are destroyed in\nthis process)."
        position: 2
        name: outBam
        optional: false
      named:
      - !Flag
        description: "Subsample reads to no more than this many individual\nreads.\
          \ Note that paired reads are given priority, and\nunpaired reads are included\
          \ to reach the count if\nthere are too few paired reads to reach n_reads.\n\
          (default 100000)"
        synonyms:
        - --n_reads
        args: !SimpleFlagArg
          name: N_READS
        optional: true
      - !Flag
        description: 'Verboseness of output. [default: DEBUG]'
        synonyms:
        - --loglevel
        args: !ChoiceFlagArg
          choices: !!set
            ? EXCEPTION
            ? WARNING
            ? ERROR
            ? INFO
            ? CRITICAL
            ? DEBUG
        optional: true
      - !Flag
        description: 'Base directory for temp files. [default: /tmp]'
        synonyms:
        - --tmp_dir
        args: !SimpleFlagArg
          name: TMP_DIR
        optional: true
      - !Flag
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        synonyms:
        - --tmp_dirKeep
        args: !EmptyFlagArg {}
        optional: true
      parent: &id010 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            description: Input reads, unaligned BAM format.
            position: 0
            name: inBam
            optional: false
          - !Positional
            description: Trimmomatic clip DB.
            position: 1
            name: clipDb
            optional: false
          - !Positional
            description: "Output reads, unaligned BAM format (currently, read\ngroups\
              \ and other header information are destroyed in\nthis process)."
            position: 2
            name: outBam
            optional: false
          named:
          - !Flag
            description: "Subsample reads to no more than this many individual\nreads.\
              \ Note that paired reads are given priority, and\nunpaired reads are\
              \ included to reach the count if\nthere are too few paired reads to\
              \ reach n_reads.\n(default 100000)"
            synonyms:
            - --n_reads
            args: !SimpleFlagArg
              name: N_READS
            optional: true
          - !Flag
            description: 'Verboseness of output. [default: DEBUG]'
            synonyms:
            - --loglevel
            args: !ChoiceFlagArg
              choices: !!set
                ? DEBUG
                ? ERROR
                ? EXCEPTION
                ? CRITICAL
                ? INFO
                ? WARNING
            optional: true
          - !Flag
            description: 'Base directory for temp files. [default: /tmp]'
            synonyms:
            - --tmp_dir
            args: !SimpleFlagArg
              name: TMP_DIR
            optional: true
          - !Flag
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            synonyms:
            - --tmp_dirKeep
            args: !EmptyFlagArg {}
            optional: true
          parent: &id003 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                description: Input reads, unaligned BAM format.
                position: 0
                name: inBam
                optional: false
              - !Positional
                description: Trimmomatic clip DB.
                position: 1
                name: clipDb
                optional: false
              - !Positional
                description: "Output reads, unaligned BAM format (currently, read\n\
                  groups and other header information are destroyed in\nthis process)."
                position: 2
                name: outBam
                optional: false
              named:
              - !Flag
                description: "Subsample reads to no more than this many individual\n\
                  reads. Note that paired reads are given priority, and\nunpaired\
                  \ reads are included to reach the count if\nthere are too few paired\
                  \ reads to reach n_reads.\n(default 100000)"
                synonyms:
                - --n_reads
                args: !SimpleFlagArg
                  name: N_READS
                optional: true
              - !Flag
                description: 'Verboseness of output. [default: DEBUG]'
                synonyms:
                - --loglevel
                args: !ChoiceFlagArg
                  choices: !!set
                    ? ERROR
                    ? EXCEPTION
                    ? INFO
                    ? DEBUG
                    ? WARNING
                    ? CRITICAL
                optional: true
              - !Flag
                description: 'Base directory for temp files. [default: /tmp]'
                synonyms:
                - --tmp_dir
                args: !SimpleFlagArg
                  name: TMP_DIR
                optional: true
              - !Flag
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                synonyms:
                - --tmp_dirKeep
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: show this help message and exit
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: show program's version number and exit
                synonyms:
                - --version
                - -V
                args: !EmptyFlagArg {}
                optional: true
              help_text: "usage: assembly.py subcommand trim_rmdup_subsamp [-h] [--n_reads\
                \ N_READS]\n                                                 [--loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n               \
                \                                  [--version]\n                 \
                \                                [--tmp_dir TMP_DIR]\n           \
                \                                      [--tmp_dirKeep]\n         \
                \                                        inBam clipDb outBam\n\nTake\
                \ reads through Trimmomatic, Prinseq, and subsampling. This should\
                \ probably\nmove over to read_utils or taxon_filter.\n\npositional\
                \ arguments:\n  inBam                 Input reads, unaligned BAM format.\n\
                \  clipDb                Trimmomatic clip DB.\n  outBam          \
                \      Output reads, unaligned BAM format (currently, read\n     \
                \                   groups and other header information are destroyed\
                \ in\n                        this process).\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  --n_reads\
                \ N_READS     Subsample reads to no more than this many individual\n\
                \                        reads. Note that paired reads are given priority,\
                \ and\n                        unpaired reads are included to reach\
                \ the count if\n                        there are too few paired reads\
                \ to reach n_reads.\n                        (default 100000)\n  --loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                \
                \        Verboseness of output. [default: DEBUG]\n  --version, -V\
                \         show program's version number and exit\n  --tmp_dir TMP_DIR\
                \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
                \         Keep the tmp_dir if an exception occurs while running.\n\
                \                        Default is to delete all temp files at the\
                \ end, even\n                        if there's a failure.\n"
              generated_using: &id004
              - --help
            - !Command
              command: &id005
              - assembly.py
              - taxon_filter.
              positional:
              - !Positional
                description: ''
                position: 0
                name: assembly.py
                optional: false
              - !Positional
                description: ''
                position: 1
                name: subcommand
                optional: false
              named: []
              parent: *id003
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: assembly.py subcommand\nassembly.py: error: argument\
                \ \e[F: invalid choice: 'taxon_filter.' (choose from 'trim_rmdup_subsamp',\
                \ 'assemble_trinity', 'order_and_orient', 'impute_from_reference',\
                \ 'refine_assembly', 'filter_short_seqs', 'modify_contig', 'vcf_to_fasta',\
                \ 'trim_fasta', 'deambig_fasta', 'dpdiff')\n"
              generated_using: *id004
            - !Command
              command: &id006
              - assembly.py
              - refine_assembly
              positional:
              - !Positional
                description: "Input assembly, FASTA format, pre-indexed for Picard,\n\
                  Samtools, and Novoalign."
                position: 0
                name: inFasta
                optional: false
              - !Positional
                description: Input reads, unaligned BAM format.
                position: 1
                name: inBam
                optional: false
              - !Positional
                description: "Output refined assembly, FASTA format, indexed for\n\
                  Picard, Samtools, and Novoalign."
                position: 2
                name: outFasta
                optional: false
              - !Positional
                description: --min_coverage MIN_COVERAGE
                position: 0
                name: space.
                optional: false
              - !Positional
                description: --major_cutoff MAJOR_CUTOFF
                position: 0
                name: unambiguous.
                optional: false
              named:
              - !Flag
                description: "BAM with reads that are already aligned to inFasta.\n\
                  This bypasses the alignment process by novoalign and\ninstead uses\
                  \ the given BAM to make an assembly. When\nset, outBam is ignored."
                synonyms:
                - --already_realigned_bam
                args: !SimpleFlagArg
                  name: ALREADY_REALIGNED_BAM
                optional: true
              - !Flag
                description: "Reads aligned to inFasta. Unaligned and duplicate\n\
                  reads have been removed. GATK indel realigned."
                synonyms:
                - --outBam
                args: !SimpleFlagArg
                  name: OUTBAM
                optional: true
              - !Flag
                description: GATK genotype calls for genome in inFasta coordinate
                synonyms:
                - --outVcf
                args: !SimpleFlagArg
                  name: OUTVCF
                optional: true
              - !Flag
                description: Alignment parameters for Novoalign.
                synonyms:
                - --novo_params
                args: !SimpleFlagArg
                  name: NOVO_PARAMS
                optional: true
              - !Flag
                description: "[CHR_NAMES [CHR_NAMES ...]]\nRename all output chromosomes\
                  \ (default: retain\noriginal chromosome names)"
                synonyms:
                - --chr_names
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "Retain all reads in BAM file? Default is to remove\n\
                  unaligned and duplicate reads."
                synonyms:
                - --keep_all_reads
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: 'JVM virtual memory size (default: 2g)'
                synonyms:
                - --JVMmemory
                args: !SimpleFlagArg
                  name: JVMMEMORY
                optional: true
              - !Flag
                description: "A path containing the GATK jar file. This overrides\n\
                  the GATK_ENV environment variable or the GATK conda\npackage. (default:\
                  \ None)"
                synonyms:
                - --GATK_PATH
                args: !SimpleFlagArg
                  name: GATK_PATH
                optional: true
              - !Flag
                description: "A path to the novoalign.lic file. This overrides the\n\
                  NOVOALIGN_LICENSE_PATH environment variable. (default:\nNone)"
                synonyms:
                - --NOVOALIGN_LICENSE_PATH
                args: !SimpleFlagArg
                  name: NOVOALIGN_LICENSE_PATH
                optional: true
              - !Flag
                description: 'Number of threads (default: 1)'
                synonyms:
                - --threads
                args: !SimpleFlagArg
                  name: THREADS
                optional: true
              - !Flag
                description: 'Verboseness of output. [default: DEBUG]'
                synonyms:
                - --loglevel
                args: !ChoiceFlagArg
                  choices: !!set
                    ? ERROR
                    ? EXCEPTION
                    ? INFO
                    ? DEBUG
                    ? WARNING
                    ? CRITICAL
                optional: true
              - !Flag
                description: 'Base directory for temp files. [default: /tmp]'
                synonyms:
                - --tmp_dir
                args: !SimpleFlagArg
                  name: TMP_DIR
                optional: true
              - !Flag
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                synonyms:
                - --tmp_dirKeep
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: show this help message and exit
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: show program's version number and exit
                synonyms:
                - --version
                - -V
                args: !EmptyFlagArg {}
                optional: true
              help_text: "usage: assembly.py subcommand refine_assembly [-h]\n   \
                \                                           [--already_realigned_bam\
                \ ALREADY_REALIGNED_BAM]\n                                       \
                \       [--outBam OUTBAM]\n                                      \
                \        [--outVcf OUTVCF]\n                                     \
                \         [--min_coverage MIN_COVERAGE]\n                        \
                \                      [--major_cutoff MAJOR_CUTOFF]\n           \
                \                                   [--novo_params NOVO_PARAMS]\n\
                \                                              [--chr_names [CHR_NAMES\
                \ [CHR_NAMES ...]]]\n                                            \
                \  [--keep_all_reads]\n                                          \
                \    [--JVMmemory JVMMEMORY]\n                                   \
                \           [--GATK_PATH GATK_PATH]\n                            \
                \                  [--NOVOALIGN_LICENSE_PATH NOVOALIGN_LICENSE_PATH]\n\
                \                                              [--threads THREADS]\n\
                \                                              [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                              [--version] [--tmp_dir\
                \ TMP_DIR]\n                                              [--tmp_dirKeep]\n\
                \                                              inFasta inBam outFasta\n\
                \nThis a refinement step where we take a crude assembly, align all\
                \ reads back to\nit, and modify the assembly to the majority allele\
                \ at each position based on\nread pileups. This step considers both\
                \ SNPs as well as indels called by GATK\nand will correct the consensus\
                \ based on GATK calls. Reads are aligned with\nNovoalign, then PCR\
                \ duplicates are removed with Picard (in order to debias the\nallele\
                \ counts in the pileups), and realigned with GATK's IndelRealigner\
                \ (in\norder to call indels). Output FASTA file is indexed for Picard,\
                \ Samtools, and\nNovoalign.\n\npositional arguments:\n  inFasta  \
                \             Input assembly, FASTA format, pre-indexed for Picard,\n\
                \                        Samtools, and Novoalign.\n  inBam       \
                \          Input reads, unaligned BAM format.\n  outFasta        \
                \      Output refined assembly, FASTA format, indexed for\n      \
                \                  Picard, Samtools, and Novoalign.\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  --already_realigned_bam\
                \ ALREADY_REALIGNED_BAM\n                        BAM with reads that\
                \ are already aligned to inFasta.\n                        This bypasses\
                \ the alignment process by novoalign and\n                       \
                \ instead uses the given BAM to make an assembly. When\n         \
                \               set, outBam is ignored.\n  --outBam OUTBAM       Reads\
                \ aligned to inFasta. Unaligned and duplicate\n                  \
                \      reads have been removed. GATK indel realigned.\n  --outVcf\
                \ OUTVCF       GATK genotype calls for genome in inFasta coordinate\n\
                \                        space.\n  --min_coverage MIN_COVERAGE\n \
                \                       Minimum read coverage required to call a position\n\
                \                        unambiguous.\n  --major_cutoff MAJOR_CUTOFF\n\
                \                        If the major allele is present at a frequency\
                \ higher\n                        than this cutoff, we will call an\
                \ unambiguous base at\n                        that position. If it\
                \ is equal to or below this cutoff,\n                        we will\
                \ call an ambiguous base representing all\n                      \
                \  possible alleles at that position. [default: 0.5]\n  --novo_params\
                \ NOVO_PARAMS\n                        Alignment parameters for Novoalign.\n\
                \  --chr_names [CHR_NAMES [CHR_NAMES ...]]\n                     \
                \   Rename all output chromosomes (default: retain\n             \
                \           original chromosome names)\n  --keep_all_reads      Retain\
                \ all reads in BAM file? Default is to remove\n                  \
                \      unaligned and duplicate reads.\n  --JVMmemory JVMMEMORY\n \
                \                       JVM virtual memory size (default: 2g)\n  --GATK_PATH\
                \ GATK_PATH\n                        A path containing the GATK jar\
                \ file. This overrides\n                        the GATK_ENV environment\
                \ variable or the GATK conda\n                        package. (default:\
                \ None)\n  --NOVOALIGN_LICENSE_PATH NOVOALIGN_LICENSE_PATH\n     \
                \                   A path to the novoalign.lic file. This overrides\
                \ the\n                        NOVOALIGN_LICENSE_PATH environment\
                \ variable. (default:\n                        None)\n  --threads\
                \ THREADS     Number of threads (default: 1)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
                \                        Verboseness of output. [default: DEBUG]\n\
                \  --version, -V         show program's version number and exit\n\
                \  --tmp_dir TMP_DIR     Base directory for temp files. [default:\
                \ /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if an exception\
                \ occurs while running.\n                        Default is to delete\
                \ all temp files at the end, even\n                        if there's\
                \ a failure.\n"
              generated_using: *id004
            - !Command
              command: &id007
              - assembly.py
              - modify_contig
              positional:
              - !Positional
                description: 'positional arguments:'
                position: 0
                name: rsealfon.
                optional: false
              - !Positional
                description: "input alignment of reference and contig (should\ncontain\
                  \ exactly 2 sequences)"
                position: 1
                name: input
                optional: false
              - !Positional
                description: Destination file for modified contigs
                position: 2
                name: output
                optional: false
              - !Positional
                description: reference sequence name (exact match required)
                position: 3
                name: ref
                optional: false
              named:
              - !Flag
                description: 'fasta header output name (default: existing header)'
                synonyms:
                - -n
                - --name
                args: !SimpleFlagArg
                  name: NAME
                optional: true
              - !Flag
                description: "should the reference sequence be called if there is\
                  \ an\nN in the contig and a more specific base in the\nreference\
                  \ (default: False)"
                synonyms:
                - -cn
                - --call-reference-ns
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "should ends of contig.fasta be trimmed to length of\n\
                  reference (default: False)"
                synonyms:
                - -t
                - --trim-ends
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "should the 5'-end of contig.fasta be replaced by\nreference\
                  \ (default: False)"
                synonyms:
                - -r5
                - --replace-5ends
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "should the 3'-end of contig.fasta be replaced by\nreference\
                  \ (default: False)"
                synonyms:
                - -r3
                - --replace-3ends
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "length of ends to be replaced (if replace-ends is yes)\n\
                  (default: 10)"
                synonyms:
                - -l
                - --replace-length
                args: !SimpleFlagArg
                  name: REPLACE_LENGTH
                optional: true
              - !Flag
                description: 'Format for input alignment (default: fasta)'
                synonyms:
                - -f
                - --format
                args: !SimpleFlagArg
                  name: FORMAT
                optional: true
              - !Flag
                description: "Replace gaps at the beginning and end of the sequence\n\
                  with reference sequence (default: False)"
                synonyms:
                - -r
                - --replace-end-gaps
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "Remove leading and trailing N's in the contig\n(default:\
                  \ False)"
                synonyms:
                - -rn
                - --remove-end-ns
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: "should the reference sequence be called if the contig\n\
                  seq is ambiguous and the reference sequence is more\ninformative\
                  \ & consistant with the ambiguous base (ie\nY->C) (default: False)"
                synonyms:
                - -ca
                - --call-reference-ambiguous
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: 'Base directory for temp files. [default: /tmp]'
                synonyms:
                - --tmp_dir
                args: !SimpleFlagArg
                  name: TMP_DIR
                optional: true
              - !Flag
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure."
                synonyms:
                - --tmp_dirKeep
                args: !EmptyFlagArg {}
                optional: true
              - !Flag
                description: 'Verboseness of output. [default: DEBUG]'
                synonyms:
                - --loglevel
                args: !ChoiceFlagArg
                  choices: !!set
                    ? ERROR
                    ? EXCEPTION
                    ? INFO
                    ? DEBUG
                    ? WARNING
                    ? CRITICAL
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: show this help message and exit
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: show program's version number and exit
                synonyms:
                - --version
                - -V
                args: !EmptyFlagArg {}
                optional: true
              help_text: "usage: assembly.py subcommand modify_contig [-h] [-n NAME]\
                \ [-cn] [-t] [-r5]\n                                            [-r3]\
                \ [-l REPLACE_LENGTH]\n                                          \
                \  [-f FORMAT] [-r] [-rn] [-ca]\n                                \
                \            [--tmp_dir TMP_DIR]\n                               \
                \             [--tmp_dirKeep]\n                                  \
                \          [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                            [--version]\n       \
                \                                     input output ref\n\nModifies\
                \ an input contig. Depending on the options selected, can replace\
                \ N\ncalls with reference calls, replace ambiguous calls with reference\
                \ calls, trim\nto the length of the reference, replace contig ends\
                \ with reference calls, and\ntrim leading and trailing Ns. Author:\
                \ rsealfon.\n\npositional arguments:\n  input                 input\
                \ alignment of reference and contig (should\n                    \
                \    contain exactly 2 sequences)\n  output                Destination\
                \ file for modified contigs\n  ref                   reference sequence\
                \ name (exact match required)\n\noptional arguments:\n  -h, --help\
                \            show this help message and exit\n  -n NAME, --name NAME\
                \  fasta header output name (default: existing header)\n  -cn, --call-reference-ns\n\
                \                        should the reference sequence be called if\
                \ there is an\n                        N in the contig and a more\
                \ specific base in the\n                        reference (default:\
                \ False)\n  -t, --trim-ends       should ends of contig.fasta be trimmed\
                \ to length of\n                        reference (default: False)\n\
                \  -r5, --replace-5ends  should the 5'-end of contig.fasta be replaced\
                \ by\n                        reference (default: False)\n  -r3, --replace-3ends\
                \  should the 3'-end of contig.fasta be replaced by\n            \
                \            reference (default: False)\n  -l REPLACE_LENGTH, --replace-length\
                \ REPLACE_LENGTH\n                        length of ends to be replaced\
                \ (if replace-ends is yes)\n                        (default: 10)\n\
                \  -f FORMAT, --format FORMAT\n                        Format for\
                \ input alignment (default: fasta)\n  -r, --replace-end-gaps\n   \
                \                     Replace gaps at the beginning and end of the\
                \ sequence\n                        with reference sequence (default:\
                \ False)\n  -rn, --remove-end-ns  Remove leading and trailing N's\
                \ in the contig\n                        (default: False)\n  -ca,\
                \ --call-reference-ambiguous\n                        should the reference\
                \ sequence be called if the contig\n                        seq is\
                \ ambiguous and the reference sequence is more\n                 \
                \       informative & consistant with the ambiguous base (ie\n   \
                \                     Y->C) (default: False)\n  --tmp_dir TMP_DIR\
                \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
                \         Keep the tmp_dir if an exception occurs while running.\n\
                \                        Default is to delete all temp files at the\
                \ end, even\n                        if there's a failure.\n  --loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                \
                \        Verboseness of output. [default: DEBUG]\n  --version, -V\
                \         show program's version number and exit\n"
              generated_using: *id004
            - !Command
              command: &id008
              - assembly.py
              - trim_fasta
              positional:
              - !Positional
                description: Input fasta file
                position: 0
                name: inFasta
                optional: false
              - !Positional
                description: Output (trimmed) fasta file
                position: 1
                name: outFasta
                optional: false
              named:
              - !Flag
                description: 'Verboseness of output. [default: DEBUG]'
                synonyms:
                - --loglevel
                args: !ChoiceFlagArg
                  choices: !!set
                    ? ERROR
                    ? EXCEPTION
                    ? INFO
                    ? DEBUG
                    ? WARNING
                    ? CRITICAL
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: show this help message and exit
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: show program's version number and exit
                synonyms:
                - --version
                - -V
                args: !EmptyFlagArg {}
                optional: true
              help_text: "usage: assembly.py subcommand trim_fasta [-h]\n        \
                \                                 [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                         [--version]\n          \
                \                               inFasta outFasta\n\nTake input sequences\
                \ (fasta) and trim any continuous sections of N's from the\nends of\
                \ them. Write trimmed sequences to an output fasta file.\n\npositional\
                \ arguments:\n  inFasta               Input fasta file\n  outFasta\
                \              Output (trimmed) fasta file\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  --loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                \
                \        Verboseness of output. [default: DEBUG]\n  --version, -V\
                \         show program's version number and exit\n"
              generated_using: *id004
            - !Command
              command: &id009
              - assembly.py
              - order_and_orient
              positional:
              - !Positional
                description: Input de novo assembly/contigs, FASTA format.
                position: 0
                name: inFasta
                optional: false
              - !Positional
                description: "Reference genome for ordering, orienting, and merging\n\
                  contigs, FASTA format."
                position: 1
                name: inReference
                optional: false
              - !Positional
                description: "Output assembly, FASTA format, with the same number\
                  \ of\nchromosomes as inReference, and in the same order."
                position: 2
                name: outFasta
                optional: false
              named:
              - !Flag
                description: "Output sequences (FASTA format) from alternative\ncontigs\
                  \ that mapped, but were not chosen for the final\noutput."
                synonyms:
                - --outAlternateContigs
                args: !SimpleFlagArg
                  name: OUTALTERNATECONTIGS
                optional: true
              - !Flag
                description: "Amount to extend alignment clusters by (if --extend).\n\
                  nucmer default 200, promer default 60."
                synonyms:
                - --breaklen
                - -b
                args: !SimpleFlagArg
                  name: BREAKLEN
                optional: true
              - !Flag
                description: "Maximum gap between two adjacent matches in a cluster.\n\
                  Our default is 200. nucmer default 90, promer default\n30. Manual\
                  \ suggests going to 1000."
                synonyms:
                - --maxgap
                - -g
                args: !SimpleFlagArg
                  name: MAXGAP
                optional: true
              - !Flag
                description: "Minimum length of an maximal exact match. Our default\n\
                  is 10. nucmer default 20, promer default 6."
                synonyms:
                - --minmatch
                - -l
                args: !SimpleFlagArg
                  name: MINMATCH
                optional: true
              - !Flag
                description: "Minimum cluster length. nucmer default 65, promer\n\
                  default 20."
                synonyms:
                - --mincluster
                - -c
                args: !SimpleFlagArg
                  name: MINCLUSTER
                optional: true
              - !Flag
                description: "show-tiling: minimum percent identity for contig\nalignment\
                  \ (0.0 - 1.0, default: 0.6)"
                synonyms:
                - --min_pct_id
                - -i
                args: !SimpleFlagArg
                  name: MIN_PCT_ID
                optional: true
              - !Flag
                description: "show-tiling: reject contigs smaller than this\n(default:\
                  \ 200)"
                synonyms:
                - --min_contig_len
                args: !SimpleFlagArg
                  name: MIN_CONTIG_LEN
                optional: true
              - !Flag
                description: "show-tiling: minimum percent of contig length in\nalignment\
                  \ (0.0 - 1.0, default: 0.3)"
                synonyms:
                - --min_pct_contig_aligned
                - -v
                args: !SimpleFlagArg
                  name: MIN_PCT_CONTIG_ALIGNED
                optional: true
              - !Flag
                description: 'Verboseness of output. [default: DEBUG]'
                synonyms:
                - --loglevel
                args: !ChoiceFlagArg
                  choices: !!set
                    ? ERROR
                    ? EXCEPTION
                    ? INFO
                    ? DEBUG
                    ? WARNING
                    ? CRITICAL
                optional: true
              - !Flag
                description: 'Base directory for temp files. [default: /tmp]'
                synonyms:
                - --tmp_dir
                args: !SimpleFlagArg
                  name: TMP_DIR
                optional: true
              - !Flag
                description: "Keep the tmp_dir if an exception occurs while running.\n\
                  Default is to delete all temp files at the end, even\nif there's\
                  \ a failure.\n"
                synonyms:
                - --tmp_dirKeep
                args: !EmptyFlagArg {}
                optional: true
              parent: *id003
              subcommands: []
              usage: []
              help_flag: !Flag
                description: show this help message and exit
                synonyms:
                - -h
                - --help
                args: !EmptyFlagArg {}
                optional: true
              usage_flag:
              version_flag: !Flag
                description: show program's version number and exit
                synonyms:
                - --version
                - -V
                args: !EmptyFlagArg {}
                optional: true
              help_text: "usage: assembly.py subcommand order_and_orient [-h]\n  \
                \                                             [--outAlternateContigs\
                \ OUTALTERNATECONTIGS]\n                                         \
                \      [--breaklen BREAKLEN]\n                                   \
                \            [--maxgap MAXGAP]\n                                 \
                \              [--minmatch MINMATCH]\n                           \
                \                    [--mincluster MINCLUSTER]\n                 \
                \                              [--min_pct_id MIN_PCT_ID]\n       \
                \                                        [--min_contig_len MIN_CONTIG_LEN]\n\
                \                                               [--min_pct_contig_aligned\
                \ MIN_PCT_CONTIG_ALIGNED]\n                                      \
                \         [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
                \                                               [--version] [--tmp_dir\
                \ TMP_DIR]\n                                               [--tmp_dirKeep]\n\
                \                                               inFasta inReference\
                \ outFasta\n\nThis step cleans up the de novo assembly with a known\
                \ reference genome. Uses\nMUMmer (nucmer or promer) to create a reference-based\
                \ consensus sequence of\naligned contigs (with runs of N's in between\
                \ the de novo contigs).\n\npositional arguments:\n  inFasta      \
                \         Input de novo assembly/contigs, FASTA format.\n  inReference\
                \           Reference genome for ordering, orienting, and merging\n\
                \                        contigs, FASTA format.\n  outFasta      \
                \        Output assembly, FASTA format, with the same number of\n\
                \                        chromosomes as inReference, and in the same\
                \ order.\n\noptional arguments:\n  -h, --help            show this\
                \ help message and exit\n  --outAlternateContigs OUTALTERNATECONTIGS\n\
                \                        Output sequences (FASTA format) from alternative\n\
                \                        contigs that mapped, but were not chosen\
                \ for the final\n                        output.\n  --breaklen BREAKLEN,\
                \ -b BREAKLEN\n                        Amount to extend alignment\
                \ clusters by (if --extend).\n                        nucmer default\
                \ 200, promer default 60.\n  --maxgap MAXGAP, -g MAXGAP\n        \
                \                Maximum gap between two adjacent matches in a cluster.\n\
                \                        Our default is 200. nucmer default 90, promer\
                \ default\n                        30. Manual suggests going to 1000.\n\
                \  --minmatch MINMATCH, -l MINMATCH\n                        Minimum\
                \ length of an maximal exact match. Our default\n                \
                \        is 10. nucmer default 20, promer default 6.\n  --mincluster\
                \ MINCLUSTER, -c MINCLUSTER\n                        Minimum cluster\
                \ length. nucmer default 65, promer\n                        default\
                \ 20.\n  --min_pct_id MIN_PCT_ID, -i MIN_PCT_ID\n                \
                \        show-tiling: minimum percent identity for contig\n      \
                \                  alignment (0.0 - 1.0, default: 0.6)\n  --min_contig_len\
                \ MIN_CONTIG_LEN\n                        show-tiling: reject contigs\
                \ smaller than this\n                        (default: 200)\n  --min_pct_contig_aligned\
                \ MIN_PCT_CONTIG_ALIGNED, -v MIN_PCT_CONTIG_ALIGNED\n            \
                \            show-tiling: minimum percent of contig length in\n  \
                \                      alignment (0.0 - 1.0, default: 0.3)\n  --loglevel\
                \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                \
                \        Verboseness of output. [default: DEBUG]\n  --version, -V\
                \         show program's version number and exit\n  --tmp_dir TMP_DIR\
                \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
                \         Keep the tmp_dir if an exception occurs while running.\n\
                \                        Default is to delete all temp files at the\
                \ end, even\n                        if there's a failure.\n"
              generated_using: *id004
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "\nEnter a subcommand to view additional information:\n\n \
              \    assembly.py \e[1mtrim_rmdup_subsamp\e[0m [...]\n          Take\
              \ reads through Trimmomatic, Prinseq, and subsampling.\n          This\
              \ should probably move over to read_utils or\n          taxon_filter.\n\
              \n     assembly.py \e[1massemble_trinity\e[0m [...]\n          This\
              \ step runs the Trinity assembler. First trim reads with\n         \
              \ trimmomatic, rmdup with prinseq,and random subsample to no\n     \
              \     more than 100k reads.\n\n     assembly.py \e[1morder_and_orient\e\
              [0m [...]\n          This step cleans up the de novo assembly with a\
              \ known\n          reference genome. Uses MUMmer (nucmer or promer)\
              \ to create a\n          reference-based consensussequence of aligned\
              \ contigs (with\n          runs of N's in between the de novocontigs).\n\
              \n     assembly.py \e[1mimpute_from_reference\e[0m [...]\n         \
              \ This takes a de novo assembly, aligns against a reference\n      \
              \    genome, andimputes all missing positions (plus some of the\n  \
              \        chromosome ends)with the reference genome. This provides an\n\
              \          assembly with the properstructure (but potentially wrong\n\
              \          sequences in areas) from whichwe can perform further read-\n\
              \          based refinement. Two steps:filter_short_seqs: We then toss\n\
              \          out all assemblies that come out to< 15kb or < 95%\n    \
              \      unambiguous and fail otherwise. modify_contig: Finally, we\n\
              \          trim off anything at the end that exceedsthe length of the\n\
              \          known reference assembly. We also replace allNs and\n   \
              \       everything within 55bp of the chromosome ends with\n       \
              \   thereference sequence. This is clearly incorrect consensus\n   \
              \       sequence,but it allows downstream steps to map reads in\n  \
              \        parts of the genomethat would otherwise be Ns, and we will\n\
              \          correct all of the inferredpositions with two steps of read-\n\
              \          based refinement (below), andrevert positions back to Ns\n\
              \          where read support is lacking. FASTA indexing: output\n \
              \         assembly is indexed for Picard, Samtools, Novoalign.\n\n \
              \    assembly.py \e[1mrefine_assembly\e[0m [...]\n          This a refinement\
              \ step where we take a crude assembly,\n          alignall reads back\
              \ to it, and modify the assembly to the\n          majorityallele at\
              \ each position based on read pileups. This\n          step considers\
              \ both SNPs as well as indels called by GATKand\n          will correct\
              \ the consensus based on GATK calls. Reads are\n          aligned with\
              \ Novoalign, then PCR duplicates are removedwith\n          Picard (in\
              \ order to debias the allele counts in the\n          pileups),and realigned\
              \ with GATK's IndelRealigner (in order\n          to call indels). Output\
              \ FASTA file is indexed for Picard,\n          Samtools, and Novoalign.\n\
              \n     assembly.py \e[1mfilter_short_seqs\e[0m [...]\n          Check\
              \ sequences in inFile, retaining only those that are at\n          least\
              \ minLength\n\n     assembly.py \e[1mmodify_contig\e[0m [...]\n    \
              \      Modifies an input contig. Depending on the optionsselected,\n\
              \          can replace N calls with reference calls, replace\n     \
              \     ambiguouscalls with reference calls, trim to the length of\n \
              \         the reference, replacecontig ends with reference calls, and\n\
              \          trim leading and trailing Ns. Author: rsealfon.\n\n     assembly.py\
              \ \e[1mvcf_to_fasta\e[0m [...]\n          Take input genotypes (VCF)\
              \ and construct a consensus\n          sequence(fasta) by using majority-read-count\
              \ alleles in the\n          VCF. Genotypes in the VCF will be ignored--we\
              \ will use the\n          allelewith majority read support (or an ambiguity\
              \ base if\n          there is no clear majority). Uncalled positions\
              \ will be\n          emitted as N's. Author: dpark.\n\n     assembly.py\
              \ \e[1mtrim_fasta\e[0m [...]\n          Take input sequences (fasta)\
              \ and trim any continuous\n          sections ofN's from the ends of\
              \ them. Write trimmed\n          sequences to an output fasta file.\n\
              \n     assembly.py \e[1mdeambig_fasta\e[0m [...]\n          Take input\
              \ sequences (fasta) and replace any ambiguity bases\n          with\
              \ arandom unambiguous base from among the possibilities\n          described\
              \ by the ambiguitycode. Write output to fasta file.\n\n     assembly.py\
              \ \e[1mdpdiff\e[0m [...]\n          Take input VCF files (all with only\
              \ one sample each) and\n          reporton the discrepancies between\
              \ the two DP fields (one in\n          INFO and one in thesample's genotype\
              \ column).\n\nusage: assembly.py subcommand\n\nThis script contains\
              \ a number of utilities for viral sequence assembly from\nNGS reads.\
              \ Primarily used for Lassa and Ebola virus analysis in the Sabeti Lab\n\
              / Broad Institute Viral Genomics.\n\nsubcommands:\n  \e[F\n    trim_rmdup_subsamp\n\
              \    assemble_trinity\n    order_and_orient\n    impute_from_reference\n\
              \    refine_assembly\n    filter_short_seqs\n    modify_contig\n   \
              \ vcf_to_fasta\n    trim_fasta\n    deambig_fasta\n    dpdiff\n"
            generated_using: *id004
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            - -V
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: assembly.py subcommand trim_rmdup_subsamp [-h] [--n_reads\
            \ N_READS]\n                                                 [--loglevel\
            \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n                   \
            \                              [--version]\n                         \
            \                        [--tmp_dir TMP_DIR]\n                       \
            \                          [--tmp_dirKeep]\n                         \
            \                        inBam clipDb outBam\n\nTake reads through Trimmomatic,\
            \ Prinseq, and subsampling. This should probably\nmove over to read_utils\
            \ or taxon_filter.\n\npositional arguments:\n  inBam                 Input\
            \ reads, unaligned BAM format.\n  clipDb                Trimmomatic clip\
            \ DB.\n  outBam                Output reads, unaligned BAM format (currently,\
            \ read\n                        groups and other header information are\
            \ destroyed in\n                        this process).\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --n_reads\
            \ N_READS     Subsample reads to no more than this many individual\n \
            \                       reads. Note that paired reads are given priority,\
            \ and\n                        unpaired reads are included to reach the\
            \ count if\n                        there are too few paired reads to\
            \ reach n_reads.\n                        (default 100000)\n  --loglevel\
            \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                    \
            \    Verboseness of output. [default: DEBUG]\n  --version, -V        \
            \ show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
            \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep\
            \ the tmp_dir if an exception occurs while running.\n                \
            \        Default is to delete all temp files at the end, even\n      \
            \                  if there's a failure.\n"
          generated_using: *id004
        - !Command
          command: *id005
          positional:
          - !Positional
            description: ''
            position: 0
            name: assembly.py
            optional: false
          - !Positional
            description: ''
            position: 1
            name: subcommand
            optional: false
          named: []
          parent: *id003
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: assembly.py subcommand\nassembly.py: error: argument\
            \ \e[F: invalid choice: 'taxon_filter.' (choose from 'trim_rmdup_subsamp',\
            \ 'assemble_trinity', 'order_and_orient', 'impute_from_reference', 'refine_assembly',\
            \ 'filter_short_seqs', 'modify_contig', 'vcf_to_fasta', 'trim_fasta',\
            \ 'deambig_fasta', 'dpdiff')\n"
          generated_using: *id004
        - !Command
          command: *id006
          positional:
          - !Positional
            description: "Input assembly, FASTA format, pre-indexed for Picard,\n\
              Samtools, and Novoalign."
            position: 0
            name: inFasta
            optional: false
          - !Positional
            description: Input reads, unaligned BAM format.
            position: 1
            name: inBam
            optional: false
          - !Positional
            description: "Output refined assembly, FASTA format, indexed for\nPicard,\
              \ Samtools, and Novoalign."
            position: 2
            name: outFasta
            optional: false
          - !Positional
            description: --min_coverage MIN_COVERAGE
            position: 0
            name: space.
            optional: false
          - !Positional
            description: --major_cutoff MAJOR_CUTOFF
            position: 0
            name: unambiguous.
            optional: false
          named:
          - !Flag
            description: "BAM with reads that are already aligned to inFasta.\nThis\
              \ bypasses the alignment process by novoalign and\ninstead uses the\
              \ given BAM to make an assembly. When\nset, outBam is ignored."
            synonyms:
            - --already_realigned_bam
            args: !SimpleFlagArg
              name: ALREADY_REALIGNED_BAM
            optional: true
          - !Flag
            description: "Reads aligned to inFasta. Unaligned and duplicate\nreads\
              \ have been removed. GATK indel realigned."
            synonyms:
            - --outBam
            args: !SimpleFlagArg
              name: OUTBAM
            optional: true
          - !Flag
            description: GATK genotype calls for genome in inFasta coordinate
            synonyms:
            - --outVcf
            args: !SimpleFlagArg
              name: OUTVCF
            optional: true
          - !Flag
            description: Alignment parameters for Novoalign.
            synonyms:
            - --novo_params
            args: !SimpleFlagArg
              name: NOVO_PARAMS
            optional: true
          - !Flag
            description: "[CHR_NAMES [CHR_NAMES ...]]\nRename all output chromosomes\
              \ (default: retain\noriginal chromosome names)"
            synonyms:
            - --chr_names
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "Retain all reads in BAM file? Default is to remove\nunaligned\
              \ and duplicate reads."
            synonyms:
            - --keep_all_reads
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: 'JVM virtual memory size (default: 2g)'
            synonyms:
            - --JVMmemory
            args: !SimpleFlagArg
              name: JVMMEMORY
            optional: true
          - !Flag
            description: "A path containing the GATK jar file. This overrides\nthe\
              \ GATK_ENV environment variable or the GATK conda\npackage. (default:\
              \ None)"
            synonyms:
            - --GATK_PATH
            args: !SimpleFlagArg
              name: GATK_PATH
            optional: true
          - !Flag
            description: "A path to the novoalign.lic file. This overrides the\nNOVOALIGN_LICENSE_PATH\
              \ environment variable. (default:\nNone)"
            synonyms:
            - --NOVOALIGN_LICENSE_PATH
            args: !SimpleFlagArg
              name: NOVOALIGN_LICENSE_PATH
            optional: true
          - !Flag
            description: 'Number of threads (default: 1)'
            synonyms:
            - --threads
            args: !SimpleFlagArg
              name: THREADS
            optional: true
          - !Flag
            description: 'Verboseness of output. [default: DEBUG]'
            synonyms:
            - --loglevel
            args: !ChoiceFlagArg
              choices: !!set
                ? DEBUG
                ? ERROR
                ? EXCEPTION
                ? CRITICAL
                ? INFO
                ? WARNING
            optional: true
          - !Flag
            description: 'Base directory for temp files. [default: /tmp]'
            synonyms:
            - --tmp_dir
            args: !SimpleFlagArg
              name: TMP_DIR
            optional: true
          - !Flag
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            synonyms:
            - --tmp_dirKeep
            args: !EmptyFlagArg {}
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            - -V
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: assembly.py subcommand refine_assembly [-h]\n       \
            \                                       [--already_realigned_bam ALREADY_REALIGNED_BAM]\n\
            \                                              [--outBam OUTBAM]\n   \
            \                                           [--outVcf OUTVCF]\n      \
            \                                        [--min_coverage MIN_COVERAGE]\n\
            \                                              [--major_cutoff MAJOR_CUTOFF]\n\
            \                                              [--novo_params NOVO_PARAMS]\n\
            \                                              [--chr_names [CHR_NAMES\
            \ [CHR_NAMES ...]]]\n                                              [--keep_all_reads]\n\
            \                                              [--JVMmemory JVMMEMORY]\n\
            \                                              [--GATK_PATH GATK_PATH]\n\
            \                                              [--NOVOALIGN_LICENSE_PATH\
            \ NOVOALIGN_LICENSE_PATH]\n                                          \
            \    [--threads THREADS]\n                                           \
            \   [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n     \
            \                                         [--version] [--tmp_dir TMP_DIR]\n\
            \                                              [--tmp_dirKeep]\n     \
            \                                         inFasta inBam outFasta\n\nThis\
            \ a refinement step where we take a crude assembly, align all reads back\
            \ to\nit, and modify the assembly to the majority allele at each position\
            \ based on\nread pileups. This step considers both SNPs as well as indels\
            \ called by GATK\nand will correct the consensus based on GATK calls.\
            \ Reads are aligned with\nNovoalign, then PCR duplicates are removed with\
            \ Picard (in order to debias the\nallele counts in the pileups), and realigned\
            \ with GATK's IndelRealigner (in\norder to call indels). Output FASTA\
            \ file is indexed for Picard, Samtools, and\nNovoalign.\n\npositional\
            \ arguments:\n  inFasta               Input assembly, FASTA format, pre-indexed\
            \ for Picard,\n                        Samtools, and Novoalign.\n  inBam\
            \                 Input reads, unaligned BAM format.\n  outFasta     \
            \         Output refined assembly, FASTA format, indexed for\n       \
            \                 Picard, Samtools, and Novoalign.\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --already_realigned_bam\
            \ ALREADY_REALIGNED_BAM\n                        BAM with reads that are\
            \ already aligned to inFasta.\n                        This bypasses the\
            \ alignment process by novoalign and\n                        instead\
            \ uses the given BAM to make an assembly. When\n                     \
            \   set, outBam is ignored.\n  --outBam OUTBAM       Reads aligned to\
            \ inFasta. Unaligned and duplicate\n                        reads have\
            \ been removed. GATK indel realigned.\n  --outVcf OUTVCF       GATK genotype\
            \ calls for genome in inFasta coordinate\n                        space.\n\
            \  --min_coverage MIN_COVERAGE\n                        Minimum read coverage\
            \ required to call a position\n                        unambiguous.\n\
            \  --major_cutoff MAJOR_CUTOFF\n                        If the major allele\
            \ is present at a frequency higher\n                        than this\
            \ cutoff, we will call an unambiguous base at\n                      \
            \  that position. If it is equal to or below this cutoff,\n          \
            \              we will call an ambiguous base representing all\n     \
            \                   possible alleles at that position. [default: 0.5]\n\
            \  --novo_params NOVO_PARAMS\n                        Alignment parameters\
            \ for Novoalign.\n  --chr_names [CHR_NAMES [CHR_NAMES ...]]\n        \
            \                Rename all output chromosomes (default: retain\n    \
            \                    original chromosome names)\n  --keep_all_reads  \
            \    Retain all reads in BAM file? Default is to remove\n            \
            \            unaligned and duplicate reads.\n  --JVMmemory JVMMEMORY\n\
            \                        JVM virtual memory size (default: 2g)\n  --GATK_PATH\
            \ GATK_PATH\n                        A path containing the GATK jar file.\
            \ This overrides\n                        the GATK_ENV environment variable\
            \ or the GATK conda\n                        package. (default: None)\n\
            \  --NOVOALIGN_LICENSE_PATH NOVOALIGN_LICENSE_PATH\n                 \
            \       A path to the novoalign.lic file. This overrides the\n       \
            \                 NOVOALIGN_LICENSE_PATH environment variable. (default:\n\
            \                        None)\n  --threads THREADS     Number of threads\
            \ (default: 1)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
        - !Command
          command: *id007
          positional:
          - !Positional
            description: 'positional arguments:'
            position: 0
            name: rsealfon.
            optional: false
          - !Positional
            description: "input alignment of reference and contig (should\ncontain\
              \ exactly 2 sequences)"
            position: 1
            name: input
            optional: false
          - !Positional
            description: Destination file for modified contigs
            position: 2
            name: output
            optional: false
          - !Positional
            description: reference sequence name (exact match required)
            position: 3
            name: ref
            optional: false
          named:
          - !Flag
            description: 'fasta header output name (default: existing header)'
            synonyms:
            - -n
            - --name
            args: !SimpleFlagArg
              name: NAME
            optional: true
          - !Flag
            description: "should the reference sequence be called if there is an\n\
              N in the contig and a more specific base in the\nreference (default:\
              \ False)"
            synonyms:
            - -cn
            - --call-reference-ns
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "should ends of contig.fasta be trimmed to length of\nreference\
              \ (default: False)"
            synonyms:
            - -t
            - --trim-ends
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "should the 5'-end of contig.fasta be replaced by\nreference\
              \ (default: False)"
            synonyms:
            - -r5
            - --replace-5ends
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "should the 3'-end of contig.fasta be replaced by\nreference\
              \ (default: False)"
            synonyms:
            - -r3
            - --replace-3ends
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "length of ends to be replaced (if replace-ends is yes)\n\
              (default: 10)"
            synonyms:
            - -l
            - --replace-length
            args: !SimpleFlagArg
              name: REPLACE_LENGTH
            optional: true
          - !Flag
            description: 'Format for input alignment (default: fasta)'
            synonyms:
            - -f
            - --format
            args: !SimpleFlagArg
              name: FORMAT
            optional: true
          - !Flag
            description: "Replace gaps at the beginning and end of the sequence\n\
              with reference sequence (default: False)"
            synonyms:
            - -r
            - --replace-end-gaps
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "Remove leading and trailing N's in the contig\n(default:\
              \ False)"
            synonyms:
            - -rn
            - --remove-end-ns
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: "should the reference sequence be called if the contig\n\
              seq is ambiguous and the reference sequence is more\ninformative & consistant\
              \ with the ambiguous base (ie\nY->C) (default: False)"
            synonyms:
            - -ca
            - --call-reference-ambiguous
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: 'Base directory for temp files. [default: /tmp]'
            synonyms:
            - --tmp_dir
            args: !SimpleFlagArg
              name: TMP_DIR
            optional: true
          - !Flag
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure."
            synonyms:
            - --tmp_dirKeep
            args: !EmptyFlagArg {}
            optional: true
          - !Flag
            description: 'Verboseness of output. [default: DEBUG]'
            synonyms:
            - --loglevel
            args: !ChoiceFlagArg
              choices: !!set
                ? DEBUG
                ? ERROR
                ? EXCEPTION
                ? CRITICAL
                ? INFO
                ? WARNING
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            - -V
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: assembly.py subcommand modify_contig [-h] [-n NAME] [-cn]\
            \ [-t] [-r5]\n                                            [-r3] [-l REPLACE_LENGTH]\n\
            \                                            [-f FORMAT] [-r] [-rn] [-ca]\n\
            \                                            [--tmp_dir TMP_DIR]\n   \
            \                                         [--tmp_dirKeep]\n          \
            \                                  [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
            \                                            [--version]\n           \
            \                                 input output ref\n\nModifies an input\
            \ contig. Depending on the options selected, can replace N\ncalls with\
            \ reference calls, replace ambiguous calls with reference calls, trim\n\
            to the length of the reference, replace contig ends with reference calls,\
            \ and\ntrim leading and trailing Ns. Author: rsealfon.\n\npositional arguments:\n\
            \  input                 input alignment of reference and contig (should\n\
            \                        contain exactly 2 sequences)\n  output      \
            \          Destination file for modified contigs\n  ref              \
            \     reference sequence name (exact match required)\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  -n NAME, --name\
            \ NAME  fasta header output name (default: existing header)\n  -cn, --call-reference-ns\n\
            \                        should the reference sequence be called if there\
            \ is an\n                        N in the contig and a more specific base\
            \ in the\n                        reference (default: False)\n  -t, --trim-ends\
            \       should ends of contig.fasta be trimmed to length of\n        \
            \                reference (default: False)\n  -r5, --replace-5ends  should\
            \ the 5'-end of contig.fasta be replaced by\n                        reference\
            \ (default: False)\n  -r3, --replace-3ends  should the 3'-end of contig.fasta\
            \ be replaced by\n                        reference (default: False)\n\
            \  -l REPLACE_LENGTH, --replace-length REPLACE_LENGTH\n              \
            \          length of ends to be replaced (if replace-ends is yes)\n  \
            \                      (default: 10)\n  -f FORMAT, --format FORMAT\n \
            \                       Format for input alignment (default: fasta)\n\
            \  -r, --replace-end-gaps\n                        Replace gaps at the\
            \ beginning and end of the sequence\n                        with reference\
            \ sequence (default: False)\n  -rn, --remove-end-ns  Remove leading and\
            \ trailing N's in the contig\n                        (default: False)\n\
            \  -ca, --call-reference-ambiguous\n                        should the\
            \ reference sequence be called if the contig\n                       \
            \ seq is ambiguous and the reference sequence is more\n              \
            \          informative & consistant with the ambiguous base (ie\n    \
            \                    Y->C) (default: False)\n  --tmp_dir TMP_DIR     Base\
            \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep\
            \ the tmp_dir if an exception occurs while running.\n                \
            \        Default is to delete all temp files at the end, even\n      \
            \                  if there's a failure.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n"
          generated_using: *id004
        - !Command
          command: *id008
          positional:
          - !Positional
            description: Input fasta file
            position: 0
            name: inFasta
            optional: false
          - !Positional
            description: Output (trimmed) fasta file
            position: 1
            name: outFasta
            optional: false
          named:
          - !Flag
            description: 'Verboseness of output. [default: DEBUG]'
            synonyms:
            - --loglevel
            args: !ChoiceFlagArg
              choices: !!set
                ? DEBUG
                ? ERROR
                ? EXCEPTION
                ? CRITICAL
                ? INFO
                ? WARNING
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            - -V
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: assembly.py subcommand trim_fasta [-h]\n            \
            \                             [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
            \                                         [--version]\n              \
            \                           inFasta outFasta\n\nTake input sequences (fasta)\
            \ and trim any continuous sections of N's from the\nends of them. Write\
            \ trimmed sequences to an output fasta file.\n\npositional arguments:\n\
            \  inFasta               Input fasta file\n  outFasta              Output\
            \ (trimmed) fasta file\n\noptional arguments:\n  -h, --help          \
            \  show this help message and exit\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n"
          generated_using: *id004
        - !Command
          command: *id009
          positional:
          - !Positional
            description: Input de novo assembly/contigs, FASTA format.
            position: 0
            name: inFasta
            optional: false
          - !Positional
            description: "Reference genome for ordering, orienting, and merging\n\
              contigs, FASTA format."
            position: 1
            name: inReference
            optional: false
          - !Positional
            description: "Output assembly, FASTA format, with the same number of\n\
              chromosomes as inReference, and in the same order."
            position: 2
            name: outFasta
            optional: false
          named:
          - !Flag
            description: "Output sequences (FASTA format) from alternative\ncontigs\
              \ that mapped, but were not chosen for the final\noutput."
            synonyms:
            - --outAlternateContigs
            args: !SimpleFlagArg
              name: OUTALTERNATECONTIGS
            optional: true
          - !Flag
            description: "Amount to extend alignment clusters by (if --extend).\n\
              nucmer default 200, promer default 60."
            synonyms:
            - --breaklen
            - -b
            args: !SimpleFlagArg
              name: BREAKLEN
            optional: true
          - !Flag
            description: "Maximum gap between two adjacent matches in a cluster.\n\
              Our default is 200. nucmer default 90, promer default\n30. Manual suggests\
              \ going to 1000."
            synonyms:
            - --maxgap
            - -g
            args: !SimpleFlagArg
              name: MAXGAP
            optional: true
          - !Flag
            description: "Minimum length of an maximal exact match. Our default\n\
              is 10. nucmer default 20, promer default 6."
            synonyms:
            - --minmatch
            - -l
            args: !SimpleFlagArg
              name: MINMATCH
            optional: true
          - !Flag
            description: "Minimum cluster length. nucmer default 65, promer\ndefault\
              \ 20."
            synonyms:
            - --mincluster
            - -c
            args: !SimpleFlagArg
              name: MINCLUSTER
            optional: true
          - !Flag
            description: "show-tiling: minimum percent identity for contig\nalignment\
              \ (0.0 - 1.0, default: 0.6)"
            synonyms:
            - --min_pct_id
            - -i
            args: !SimpleFlagArg
              name: MIN_PCT_ID
            optional: true
          - !Flag
            description: "show-tiling: reject contigs smaller than this\n(default:\
              \ 200)"
            synonyms:
            - --min_contig_len
            args: !SimpleFlagArg
              name: MIN_CONTIG_LEN
            optional: true
          - !Flag
            description: "show-tiling: minimum percent of contig length in\nalignment\
              \ (0.0 - 1.0, default: 0.3)"
            synonyms:
            - --min_pct_contig_aligned
            - -v
            args: !SimpleFlagArg
              name: MIN_PCT_CONTIG_ALIGNED
            optional: true
          - !Flag
            description: 'Verboseness of output. [default: DEBUG]'
            synonyms:
            - --loglevel
            args: !ChoiceFlagArg
              choices: !!set
                ? DEBUG
                ? ERROR
                ? EXCEPTION
                ? CRITICAL
                ? INFO
                ? WARNING
            optional: true
          - !Flag
            description: 'Base directory for temp files. [default: /tmp]'
            synonyms:
            - --tmp_dir
            args: !SimpleFlagArg
              name: TMP_DIR
            optional: true
          - !Flag
            description: "Keep the tmp_dir if an exception occurs while running.\n\
              Default is to delete all temp files at the end, even\nif there's a failure.\n"
            synonyms:
            - --tmp_dirKeep
            args: !EmptyFlagArg {}
            optional: true
          parent: *id003
          subcommands: []
          usage: []
          help_flag: !Flag
            description: show this help message and exit
            synonyms:
            - -h
            - --help
            args: !EmptyFlagArg {}
            optional: true
          usage_flag:
          version_flag: !Flag
            description: show program's version number and exit
            synonyms:
            - --version
            - -V
            args: !EmptyFlagArg {}
            optional: true
          help_text: "usage: assembly.py subcommand order_and_orient [-h]\n      \
            \                                         [--outAlternateContigs OUTALTERNATECONTIGS]\n\
            \                                               [--breaklen BREAKLEN]\n\
            \                                               [--maxgap MAXGAP]\n  \
            \                                             [--minmatch MINMATCH]\n\
            \                                               [--mincluster MINCLUSTER]\n\
            \                                               [--min_pct_id MIN_PCT_ID]\n\
            \                                               [--min_contig_len MIN_CONTIG_LEN]\n\
            \                                               [--min_pct_contig_aligned\
            \ MIN_PCT_CONTIG_ALIGNED]\n                                          \
            \     [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n   \
            \                                            [--version] [--tmp_dir TMP_DIR]\n\
            \                                               [--tmp_dirKeep]\n    \
            \                                           inFasta inReference outFasta\n\
            \nThis step cleans up the de novo assembly with a known reference genome.\
            \ Uses\nMUMmer (nucmer or promer) to create a reference-based consensus\
            \ sequence of\naligned contigs (with runs of N's in between the de novo\
            \ contigs).\n\npositional arguments:\n  inFasta               Input de\
            \ novo assembly/contigs, FASTA format.\n  inReference           Reference\
            \ genome for ordering, orienting, and merging\n                      \
            \  contigs, FASTA format.\n  outFasta              Output assembly, FASTA\
            \ format, with the same number of\n                        chromosomes\
            \ as inReference, and in the same order.\n\noptional arguments:\n  -h,\
            \ --help            show this help message and exit\n  --outAlternateContigs\
            \ OUTALTERNATECONTIGS\n                        Output sequences (FASTA\
            \ format) from alternative\n                        contigs that mapped,\
            \ but were not chosen for the final\n                        output.\n\
            \  --breaklen BREAKLEN, -b BREAKLEN\n                        Amount to\
            \ extend alignment clusters by (if --extend).\n                      \
            \  nucmer default 200, promer default 60.\n  --maxgap MAXGAP, -g MAXGAP\n\
            \                        Maximum gap between two adjacent matches in a\
            \ cluster.\n                        Our default is 200. nucmer default\
            \ 90, promer default\n                        30. Manual suggests going\
            \ to 1000.\n  --minmatch MINMATCH, -l MINMATCH\n                     \
            \   Minimum length of an maximal exact match. Our default\n          \
            \              is 10. nucmer default 20, promer default 6.\n  --mincluster\
            \ MINCLUSTER, -c MINCLUSTER\n                        Minimum cluster length.\
            \ nucmer default 65, promer\n                        default 20.\n  --min_pct_id\
            \ MIN_PCT_ID, -i MIN_PCT_ID\n                        show-tiling: minimum\
            \ percent identity for contig\n                        alignment (0.0\
            \ - 1.0, default: 0.6)\n  --min_contig_len MIN_CONTIG_LEN\n          \
            \              show-tiling: reject contigs smaller than this\n       \
            \                 (default: 200)\n  --min_pct_contig_aligned MIN_PCT_CONTIG_ALIGNED,\
            \ -v MIN_PCT_CONTIG_ALIGNED\n                        show-tiling: minimum\
            \ percent of contig length in\n                        alignment (0.0\
            \ - 1.0, default: 0.3)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
            \                        Verboseness of output. [default: DEBUG]\n  --version,\
            \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR\
            \     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
            \         Keep the tmp_dir if an exception occurs while running.\n   \
            \                     Default is to delete all temp files at the end,\
            \ even\n                        if there's a failure.\n"
          generated_using: *id004
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "\nEnter a subcommand to view additional information:\n\n     assembly.py\
          \ \e[1mtrim_rmdup_subsamp\e[0m [...]\n          Take reads through Trimmomatic,\
          \ Prinseq, and subsampling.\n          This should probably move over to\
          \ read_utils or\n          taxon_filter.\n\n     assembly.py \e[1massemble_trinity\e\
          [0m [...]\n          This step runs the Trinity assembler. First trim reads\
          \ with\n          trimmomatic, rmdup with prinseq,and random subsample to\
          \ no\n          more than 100k reads.\n\n     assembly.py \e[1morder_and_orient\e\
          [0m [...]\n          This step cleans up the de novo assembly with a known\n\
          \          reference genome. Uses MUMmer (nucmer or promer) to create a\n\
          \          reference-based consensussequence of aligned contigs (with\n\
          \          runs of N's in between the de novocontigs).\n\n     assembly.py\
          \ \e[1mimpute_from_reference\e[0m [...]\n          This takes a de novo\
          \ assembly, aligns against a reference\n          genome, andimputes all\
          \ missing positions (plus some of the\n          chromosome ends)with the\
          \ reference genome. This provides an\n          assembly with the properstructure\
          \ (but potentially wrong\n          sequences in areas) from whichwe can\
          \ perform further read-\n          based refinement. Two steps:filter_short_seqs:\
          \ We then toss\n          out all assemblies that come out to< 15kb or <\
          \ 95%\n          unambiguous and fail otherwise. modify_contig: Finally,\
          \ we\n          trim off anything at the end that exceedsthe length of the\n\
          \          known reference assembly. We also replace allNs and\n       \
          \   everything within 55bp of the chromosome ends with\n          thereference\
          \ sequence. This is clearly incorrect consensus\n          sequence,but\
          \ it allows downstream steps to map reads in\n          parts of the genomethat\
          \ would otherwise be Ns, and we will\n          correct all of the inferredpositions\
          \ with two steps of read-\n          based refinement (below), andrevert\
          \ positions back to Ns\n          where read support is lacking. FASTA indexing:\
          \ output\n          assembly is indexed for Picard, Samtools, Novoalign.\n\
          \n     assembly.py \e[1mrefine_assembly\e[0m [...]\n          This a refinement\
          \ step where we take a crude assembly,\n          alignall reads back to\
          \ it, and modify the assembly to the\n          majorityallele at each position\
          \ based on read pileups. This\n          step considers both SNPs as well\
          \ as indels called by GATKand\n          will correct the consensus based\
          \ on GATK calls. Reads are\n          aligned with Novoalign, then PCR duplicates\
          \ are removedwith\n          Picard (in order to debias the allele counts\
          \ in the\n          pileups),and realigned with GATK's IndelRealigner (in\
          \ order\n          to call indels). Output FASTA file is indexed for Picard,\n\
          \          Samtools, and Novoalign.\n\n     assembly.py \e[1mfilter_short_seqs\e\
          [0m [...]\n          Check sequences in inFile, retaining only those that\
          \ are at\n          least minLength\n\n     assembly.py \e[1mmodify_contig\e\
          [0m [...]\n          Modifies an input contig. Depending on the optionsselected,\n\
          \          can replace N calls with reference calls, replace\n         \
          \ ambiguouscalls with reference calls, trim to the length of\n         \
          \ the reference, replacecontig ends with reference calls, and\n        \
          \  trim leading and trailing Ns. Author: rsealfon.\n\n     assembly.py \e\
          [1mvcf_to_fasta\e[0m [...]\n          Take input genotypes (VCF) and construct\
          \ a consensus\n          sequence(fasta) by using majority-read-count alleles\
          \ in the\n          VCF. Genotypes in the VCF will be ignored--we will use\
          \ the\n          allelewith majority read support (or an ambiguity base\
          \ if\n          there is no clear majority). Uncalled positions will be\n\
          \          emitted as N's. Author: dpark.\n\n     assembly.py \e[1mtrim_fasta\e\
          [0m [...]\n          Take input sequences (fasta) and trim any continuous\n\
          \          sections ofN's from the ends of them. Write trimmed\n       \
          \   sequences to an output fasta file.\n\n     assembly.py \e[1mdeambig_fasta\e\
          [0m [...]\n          Take input sequences (fasta) and replace any ambiguity\
          \ bases\n          with arandom unambiguous base from among the possibilities\n\
          \          described by the ambiguitycode. Write output to fasta file.\n\
          \n     assembly.py \e[1mdpdiff\e[0m [...]\n          Take input VCF files\
          \ (all with only one sample each) and\n          reporton the discrepancies\
          \ between the two DP fields (one in\n          INFO and one in thesample's\
          \ genotype column).\n\nusage: assembly.py subcommand\n\nThis script contains\
          \ a number of utilities for viral sequence assembly from\nNGS reads. Primarily\
          \ used for Lassa and Ebola virus analysis in the Sabeti Lab\n/ Broad Institute\
          \ Viral Genomics.\n\nsubcommands:\n  \e[F\n    trim_rmdup_subsamp\n    assemble_trinity\n\
          \    order_and_orient\n    impute_from_reference\n    refine_assembly\n\
          \    filter_short_seqs\n    modify_contig\n    vcf_to_fasta\n    trim_fasta\n\
          \    deambig_fasta\n    dpdiff\n"
        generated_using: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        - -V
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: assembly.py subcommand trim_rmdup_subsamp [-h] [--n_reads\
        \ N_READS]\n                                                 [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                                 [--version]\n          \
        \                                       [--tmp_dir TMP_DIR]\n            \
        \                                     [--tmp_dirKeep]\n                  \
        \                               inBam clipDb outBam\n\nTake reads through\
        \ Trimmomatic, Prinseq, and subsampling. This should probably\nmove over to\
        \ read_utils or taxon_filter.\n\npositional arguments:\n  inBam          \
        \       Input reads, unaligned BAM format.\n  clipDb                Trimmomatic\
        \ clip DB.\n  outBam                Output reads, unaligned BAM format (currently,\
        \ read\n                        groups and other header information are destroyed\
        \ in\n                        this process).\n\noptional arguments:\n  -h,\
        \ --help            show this help message and exit\n  --n_reads N_READS \
        \    Subsample reads to no more than this many individual\n              \
        \          reads. Note that paired reads are given priority, and\n       \
        \                 unpaired reads are included to reach the count if\n    \
        \                    there are too few paired reads to reach n_reads.\n  \
        \                      (default 100000)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
    - !Command
      command: *id005
      positional:
      - !Positional
        description: ''
        position: 0
        name: assembly.py
        optional: false
      - !Positional
        description: ''
        position: 1
        name: subcommand
        optional: false
      named: []
      parent: *id010
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: assembly.py subcommand\nassembly.py: error: argument \e[F:\
        \ invalid choice: 'taxon_filter.' (choose from 'trim_rmdup_subsamp', 'assemble_trinity',\
        \ 'order_and_orient', 'impute_from_reference', 'refine_assembly', 'filter_short_seqs',\
        \ 'modify_contig', 'vcf_to_fasta', 'trim_fasta', 'deambig_fasta', 'dpdiff')\n"
      generated_using: *id004
    - !Command
      command: *id006
      positional:
      - !Positional
        description: "Input assembly, FASTA format, pre-indexed for Picard,\nSamtools,\
          \ and Novoalign."
        position: 0
        name: inFasta
        optional: false
      - !Positional
        description: Input reads, unaligned BAM format.
        position: 1
        name: inBam
        optional: false
      - !Positional
        description: "Output refined assembly, FASTA format, indexed for\nPicard,\
          \ Samtools, and Novoalign."
        position: 2
        name: outFasta
        optional: false
      - !Positional
        description: --min_coverage MIN_COVERAGE
        position: 0
        name: space.
        optional: false
      - !Positional
        description: --major_cutoff MAJOR_CUTOFF
        position: 0
        name: unambiguous.
        optional: false
      named:
      - !Flag
        description: "BAM with reads that are already aligned to inFasta.\nThis bypasses\
          \ the alignment process by novoalign and\ninstead uses the given BAM to\
          \ make an assembly. When\nset, outBam is ignored."
        synonyms:
        - --already_realigned_bam
        args: !SimpleFlagArg
          name: ALREADY_REALIGNED_BAM
        optional: true
      - !Flag
        description: "Reads aligned to inFasta. Unaligned and duplicate\nreads have\
          \ been removed. GATK indel realigned."
        synonyms:
        - --outBam
        args: !SimpleFlagArg
          name: OUTBAM
        optional: true
      - !Flag
        description: GATK genotype calls for genome in inFasta coordinate
        synonyms:
        - --outVcf
        args: !SimpleFlagArg
          name: OUTVCF
        optional: true
      - !Flag
        description: Alignment parameters for Novoalign.
        synonyms:
        - --novo_params
        args: !SimpleFlagArg
          name: NOVO_PARAMS
        optional: true
      - !Flag
        description: "[CHR_NAMES [CHR_NAMES ...]]\nRename all output chromosomes (default:\
          \ retain\noriginal chromosome names)"
        synonyms:
        - --chr_names
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Retain all reads in BAM file? Default is to remove\nunaligned\
          \ and duplicate reads."
        synonyms:
        - --keep_all_reads
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: 'JVM virtual memory size (default: 2g)'
        synonyms:
        - --JVMmemory
        args: !SimpleFlagArg
          name: JVMMEMORY
        optional: true
      - !Flag
        description: "A path containing the GATK jar file. This overrides\nthe GATK_ENV\
          \ environment variable or the GATK conda\npackage. (default: None)"
        synonyms:
        - --GATK_PATH
        args: !SimpleFlagArg
          name: GATK_PATH
        optional: true
      - !Flag
        description: "A path to the novoalign.lic file. This overrides the\nNOVOALIGN_LICENSE_PATH\
          \ environment variable. (default:\nNone)"
        synonyms:
        - --NOVOALIGN_LICENSE_PATH
        args: !SimpleFlagArg
          name: NOVOALIGN_LICENSE_PATH
        optional: true
      - !Flag
        description: 'Number of threads (default: 1)'
        synonyms:
        - --threads
        args: !SimpleFlagArg
          name: THREADS
        optional: true
      - !Flag
        description: 'Verboseness of output. [default: DEBUG]'
        synonyms:
        - --loglevel
        args: !ChoiceFlagArg
          choices: !!set
            ? EXCEPTION
            ? WARNING
            ? ERROR
            ? INFO
            ? CRITICAL
            ? DEBUG
        optional: true
      - !Flag
        description: 'Base directory for temp files. [default: /tmp]'
        synonyms:
        - --tmp_dir
        args: !SimpleFlagArg
          name: TMP_DIR
        optional: true
      - !Flag
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        synonyms:
        - --tmp_dirKeep
        args: !EmptyFlagArg {}
        optional: true
      parent: *id010
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        - -V
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: assembly.py subcommand refine_assembly [-h]\n           \
        \                                   [--already_realigned_bam ALREADY_REALIGNED_BAM]\n\
        \                                              [--outBam OUTBAM]\n       \
        \                                       [--outVcf OUTVCF]\n              \
        \                                [--min_coverage MIN_COVERAGE]\n         \
        \                                     [--major_cutoff MAJOR_CUTOFF]\n    \
        \                                          [--novo_params NOVO_PARAMS]\n \
        \                                             [--chr_names [CHR_NAMES [CHR_NAMES\
        \ ...]]]\n                                              [--keep_all_reads]\n\
        \                                              [--JVMmemory JVMMEMORY]\n \
        \                                             [--GATK_PATH GATK_PATH]\n  \
        \                                            [--NOVOALIGN_LICENSE_PATH NOVOALIGN_LICENSE_PATH]\n\
        \                                              [--threads THREADS]\n     \
        \                                         [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                              [--version] [--tmp_dir TMP_DIR]\n\
        \                                              [--tmp_dirKeep]\n         \
        \                                     inFasta inBam outFasta\n\nThis a refinement\
        \ step where we take a crude assembly, align all reads back to\nit, and modify\
        \ the assembly to the majority allele at each position based on\nread pileups.\
        \ This step considers both SNPs as well as indels called by GATK\nand will\
        \ correct the consensus based on GATK calls. Reads are aligned with\nNovoalign,\
        \ then PCR duplicates are removed with Picard (in order to debias the\nallele\
        \ counts in the pileups), and realigned with GATK's IndelRealigner (in\norder\
        \ to call indels). Output FASTA file is indexed for Picard, Samtools, and\n\
        Novoalign.\n\npositional arguments:\n  inFasta               Input assembly,\
        \ FASTA format, pre-indexed for Picard,\n                        Samtools,\
        \ and Novoalign.\n  inBam                 Input reads, unaligned BAM format.\n\
        \  outFasta              Output refined assembly, FASTA format, indexed for\n\
        \                        Picard, Samtools, and Novoalign.\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  --already_realigned_bam\
        \ ALREADY_REALIGNED_BAM\n                        BAM with reads that are already\
        \ aligned to inFasta.\n                        This bypasses the alignment\
        \ process by novoalign and\n                        instead uses the given\
        \ BAM to make an assembly. When\n                        set, outBam is ignored.\n\
        \  --outBam OUTBAM       Reads aligned to inFasta. Unaligned and duplicate\n\
        \                        reads have been removed. GATK indel realigned.\n\
        \  --outVcf OUTVCF       GATK genotype calls for genome in inFasta coordinate\n\
        \                        space.\n  --min_coverage MIN_COVERAGE\n         \
        \               Minimum read coverage required to call a position\n      \
        \                  unambiguous.\n  --major_cutoff MAJOR_CUTOFF\n         \
        \               If the major allele is present at a frequency higher\n   \
        \                     than this cutoff, we will call an unambiguous base at\n\
        \                        that position. If it is equal to or below this cutoff,\n\
        \                        we will call an ambiguous base representing all\n\
        \                        possible alleles at that position. [default: 0.5]\n\
        \  --novo_params NOVO_PARAMS\n                        Alignment parameters\
        \ for Novoalign.\n  --chr_names [CHR_NAMES [CHR_NAMES ...]]\n            \
        \            Rename all output chromosomes (default: retain\n            \
        \            original chromosome names)\n  --keep_all_reads      Retain all\
        \ reads in BAM file? Default is to remove\n                        unaligned\
        \ and duplicate reads.\n  --JVMmemory JVMMEMORY\n                        JVM\
        \ virtual memory size (default: 2g)\n  --GATK_PATH GATK_PATH\n           \
        \             A path containing the GATK jar file. This overrides\n      \
        \                  the GATK_ENV environment variable or the GATK conda\n \
        \                       package. (default: None)\n  --NOVOALIGN_LICENSE_PATH\
        \ NOVOALIGN_LICENSE_PATH\n                        A path to the novoalign.lic\
        \ file. This overrides the\n                        NOVOALIGN_LICENSE_PATH\
        \ environment variable. (default:\n                        None)\n  --threads\
        \ THREADS     Number of threads (default: 1)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
    - !Command
      command: *id007
      positional:
      - !Positional
        description: 'positional arguments:'
        position: 0
        name: rsealfon.
        optional: false
      - !Positional
        description: "input alignment of reference and contig (should\ncontain exactly\
          \ 2 sequences)"
        position: 1
        name: input
        optional: false
      - !Positional
        description: Destination file for modified contigs
        position: 2
        name: output
        optional: false
      - !Positional
        description: reference sequence name (exact match required)
        position: 3
        name: ref
        optional: false
      named:
      - !Flag
        description: 'fasta header output name (default: existing header)'
        synonyms:
        - -n
        - --name
        args: !SimpleFlagArg
          name: NAME
        optional: true
      - !Flag
        description: "should the reference sequence be called if there is an\nN in\
          \ the contig and a more specific base in the\nreference (default: False)"
        synonyms:
        - -cn
        - --call-reference-ns
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "should ends of contig.fasta be trimmed to length of\nreference\
          \ (default: False)"
        synonyms:
        - -t
        - --trim-ends
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "should the 5'-end of contig.fasta be replaced by\nreference\
          \ (default: False)"
        synonyms:
        - -r5
        - --replace-5ends
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "should the 3'-end of contig.fasta be replaced by\nreference\
          \ (default: False)"
        synonyms:
        - -r3
        - --replace-3ends
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "length of ends to be replaced (if replace-ends is yes)\n(default:\
          \ 10)"
        synonyms:
        - -l
        - --replace-length
        args: !SimpleFlagArg
          name: REPLACE_LENGTH
        optional: true
      - !Flag
        description: 'Format for input alignment (default: fasta)'
        synonyms:
        - -f
        - --format
        args: !SimpleFlagArg
          name: FORMAT
        optional: true
      - !Flag
        description: "Replace gaps at the beginning and end of the sequence\nwith\
          \ reference sequence (default: False)"
        synonyms:
        - -r
        - --replace-end-gaps
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Remove leading and trailing N's in the contig\n(default: False)"
        synonyms:
        - -rn
        - --remove-end-ns
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "should the reference sequence be called if the contig\nseq is\
          \ ambiguous and the reference sequence is more\ninformative & consistant\
          \ with the ambiguous base (ie\nY->C) (default: False)"
        synonyms:
        - -ca
        - --call-reference-ambiguous
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: 'Base directory for temp files. [default: /tmp]'
        synonyms:
        - --tmp_dir
        args: !SimpleFlagArg
          name: TMP_DIR
        optional: true
      - !Flag
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure."
        synonyms:
        - --tmp_dirKeep
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: 'Verboseness of output. [default: DEBUG]'
        synonyms:
        - --loglevel
        args: !ChoiceFlagArg
          choices: !!set
            ? EXCEPTION
            ? WARNING
            ? ERROR
            ? INFO
            ? CRITICAL
            ? DEBUG
        optional: true
      parent: *id010
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        - -V
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: assembly.py subcommand modify_contig [-h] [-n NAME] [-cn]\
        \ [-t] [-r5]\n                                            [-r3] [-l REPLACE_LENGTH]\n\
        \                                            [-f FORMAT] [-r] [-rn] [-ca]\n\
        \                                            [--tmp_dir TMP_DIR]\n       \
        \                                     [--tmp_dirKeep]\n                  \
        \                          [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                            [--version]\n               \
        \                             input output ref\n\nModifies an input contig.\
        \ Depending on the options selected, can replace N\ncalls with reference calls,\
        \ replace ambiguous calls with reference calls, trim\nto the length of the\
        \ reference, replace contig ends with reference calls, and\ntrim leading and\
        \ trailing Ns. Author: rsealfon.\n\npositional arguments:\n  input       \
        \          input alignment of reference and contig (should\n             \
        \           contain exactly 2 sequences)\n  output                Destination\
        \ file for modified contigs\n  ref                   reference sequence name\
        \ (exact match required)\n\noptional arguments:\n  -h, --help            show\
        \ this help message and exit\n  -n NAME, --name NAME  fasta header output\
        \ name (default: existing header)\n  -cn, --call-reference-ns\n          \
        \              should the reference sequence be called if there is an\n  \
        \                      N in the contig and a more specific base in the\n \
        \                       reference (default: False)\n  -t, --trim-ends    \
        \   should ends of contig.fasta be trimmed to length of\n                \
        \        reference (default: False)\n  -r5, --replace-5ends  should the 5'-end\
        \ of contig.fasta be replaced by\n                        reference (default:\
        \ False)\n  -r3, --replace-3ends  should the 3'-end of contig.fasta be replaced\
        \ by\n                        reference (default: False)\n  -l REPLACE_LENGTH,\
        \ --replace-length REPLACE_LENGTH\n                        length of ends\
        \ to be replaced (if replace-ends is yes)\n                        (default:\
        \ 10)\n  -f FORMAT, --format FORMAT\n                        Format for input\
        \ alignment (default: fasta)\n  -r, --replace-end-gaps\n                 \
        \       Replace gaps at the beginning and end of the sequence\n          \
        \              with reference sequence (default: False)\n  -rn, --remove-end-ns\
        \  Remove leading and trailing N's in the contig\n                       \
        \ (default: False)\n  -ca, --call-reference-ambiguous\n                  \
        \      should the reference sequence be called if the contig\n           \
        \             seq is ambiguous and the reference sequence is more\n      \
        \                  informative & consistant with the ambiguous base (ie\n\
        \                        Y->C) (default: False)\n  --tmp_dir TMP_DIR     Base\
        \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep\
        \ the tmp_dir if an exception occurs while running.\n                    \
        \    Default is to delete all temp files at the end, even\n              \
        \          if there's a failure.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n"
      generated_using: *id004
    - !Command
      command: *id008
      positional:
      - !Positional
        description: Input fasta file
        position: 0
        name: inFasta
        optional: false
      - !Positional
        description: Output (trimmed) fasta file
        position: 1
        name: outFasta
        optional: false
      named:
      - !Flag
        description: 'Verboseness of output. [default: DEBUG]'
        synonyms:
        - --loglevel
        args: !ChoiceFlagArg
          choices: !!set
            ? EXCEPTION
            ? WARNING
            ? ERROR
            ? INFO
            ? CRITICAL
            ? DEBUG
        optional: true
      parent: *id010
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        - -V
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: assembly.py subcommand trim_fasta [-h]\n                \
        \                         [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
        \                                         [--version]\n                  \
        \                       inFasta outFasta\n\nTake input sequences (fasta) and\
        \ trim any continuous sections of N's from the\nends of them. Write trimmed\
        \ sequences to an output fasta file.\n\npositional arguments:\n  inFasta \
        \              Input fasta file\n  outFasta              Output (trimmed)\
        \ fasta file\n\noptional arguments:\n  -h, --help            show this help\
        \ message and exit\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n"
      generated_using: *id004
    - !Command
      command: *id009
      positional:
      - !Positional
        description: Input de novo assembly/contigs, FASTA format.
        position: 0
        name: inFasta
        optional: false
      - !Positional
        description: "Reference genome for ordering, orienting, and merging\ncontigs,\
          \ FASTA format."
        position: 1
        name: inReference
        optional: false
      - !Positional
        description: "Output assembly, FASTA format, with the same number of\nchromosomes\
          \ as inReference, and in the same order."
        position: 2
        name: outFasta
        optional: false
      named:
      - !Flag
        description: "Output sequences (FASTA format) from alternative\ncontigs that\
          \ mapped, but were not chosen for the final\noutput."
        synonyms:
        - --outAlternateContigs
        args: !SimpleFlagArg
          name: OUTALTERNATECONTIGS
        optional: true
      - !Flag
        description: "Amount to extend alignment clusters by (if --extend).\nnucmer\
          \ default 200, promer default 60."
        synonyms:
        - --breaklen
        - -b
        args: !SimpleFlagArg
          name: BREAKLEN
        optional: true
      - !Flag
        description: "Maximum gap between two adjacent matches in a cluster.\nOur\
          \ default is 200. nucmer default 90, promer default\n30. Manual suggests\
          \ going to 1000."
        synonyms:
        - --maxgap
        - -g
        args: !SimpleFlagArg
          name: MAXGAP
        optional: true
      - !Flag
        description: "Minimum length of an maximal exact match. Our default\nis 10.\
          \ nucmer default 20, promer default 6."
        synonyms:
        - --minmatch
        - -l
        args: !SimpleFlagArg
          name: MINMATCH
        optional: true
      - !Flag
        description: "Minimum cluster length. nucmer default 65, promer\ndefault 20."
        synonyms:
        - --mincluster
        - -c
        args: !SimpleFlagArg
          name: MINCLUSTER
        optional: true
      - !Flag
        description: "show-tiling: minimum percent identity for contig\nalignment\
          \ (0.0 - 1.0, default: 0.6)"
        synonyms:
        - --min_pct_id
        - -i
        args: !SimpleFlagArg
          name: MIN_PCT_ID
        optional: true
      - !Flag
        description: "show-tiling: reject contigs smaller than this\n(default: 200)"
        synonyms:
        - --min_contig_len
        args: !SimpleFlagArg
          name: MIN_CONTIG_LEN
        optional: true
      - !Flag
        description: "show-tiling: minimum percent of contig length in\nalignment\
          \ (0.0 - 1.0, default: 0.3)"
        synonyms:
        - --min_pct_contig_aligned
        - -v
        args: !SimpleFlagArg
          name: MIN_PCT_CONTIG_ALIGNED
        optional: true
      - !Flag
        description: 'Verboseness of output. [default: DEBUG]'
        synonyms:
        - --loglevel
        args: !ChoiceFlagArg
          choices: !!set
            ? EXCEPTION
            ? WARNING
            ? ERROR
            ? INFO
            ? CRITICAL
            ? DEBUG
        optional: true
      - !Flag
        description: 'Base directory for temp files. [default: /tmp]'
        synonyms:
        - --tmp_dir
        args: !SimpleFlagArg
          name: TMP_DIR
        optional: true
      - !Flag
        description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
          \ is to delete all temp files at the end, even\nif there's a failure.\n"
        synonyms:
        - --tmp_dirKeep
        args: !EmptyFlagArg {}
        optional: true
      parent: *id010
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        - -V
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: assembly.py subcommand order_and_orient [-h]\n          \
        \                                     [--outAlternateContigs OUTALTERNATECONTIGS]\n\
        \                                               [--breaklen BREAKLEN]\n  \
        \                                             [--maxgap MAXGAP]\n        \
        \                                       [--minmatch MINMATCH]\n          \
        \                                     [--mincluster MINCLUSTER]\n        \
        \                                       [--min_pct_id MIN_PCT_ID]\n      \
        \                                         [--min_contig_len MIN_CONTIG_LEN]\n\
        \                                               [--min_pct_contig_aligned\
        \ MIN_PCT_CONTIG_ALIGNED]\n                                              \
        \ [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n           \
        \                                    [--version] [--tmp_dir TMP_DIR]\n   \
        \                                            [--tmp_dirKeep]\n           \
        \                                    inFasta inReference outFasta\n\nThis\
        \ step cleans up the de novo assembly with a known reference genome. Uses\n\
        MUMmer (nucmer or promer) to create a reference-based consensus sequence of\n\
        aligned contigs (with runs of N's in between the de novo contigs).\n\npositional\
        \ arguments:\n  inFasta               Input de novo assembly/contigs, FASTA\
        \ format.\n  inReference           Reference genome for ordering, orienting,\
        \ and merging\n                        contigs, FASTA format.\n  outFasta\
        \              Output assembly, FASTA format, with the same number of\n  \
        \                      chromosomes as inReference, and in the same order.\n\
        \noptional arguments:\n  -h, --help            show this help message and\
        \ exit\n  --outAlternateContigs OUTALTERNATECONTIGS\n                    \
        \    Output sequences (FASTA format) from alternative\n                  \
        \      contigs that mapped, but were not chosen for the final\n          \
        \              output.\n  --breaklen BREAKLEN, -b BREAKLEN\n             \
        \           Amount to extend alignment clusters by (if --extend).\n      \
        \                  nucmer default 200, promer default 60.\n  --maxgap MAXGAP,\
        \ -g MAXGAP\n                        Maximum gap between two adjacent matches\
        \ in a cluster.\n                        Our default is 200. nucmer default\
        \ 90, promer default\n                        30. Manual suggests going to\
        \ 1000.\n  --minmatch MINMATCH, -l MINMATCH\n                        Minimum\
        \ length of an maximal exact match. Our default\n                        is\
        \ 10. nucmer default 20, promer default 6.\n  --mincluster MINCLUSTER, -c\
        \ MINCLUSTER\n                        Minimum cluster length. nucmer default\
        \ 65, promer\n                        default 20.\n  --min_pct_id MIN_PCT_ID,\
        \ -i MIN_PCT_ID\n                        show-tiling: minimum percent identity\
        \ for contig\n                        alignment (0.0 - 1.0, default: 0.6)\n\
        \  --min_contig_len MIN_CONTIG_LEN\n                        show-tiling: reject\
        \ contigs smaller than this\n                        (default: 200)\n  --min_pct_contig_aligned\
        \ MIN_PCT_CONTIG_ALIGNED, -v MIN_PCT_CONTIG_ALIGNED\n                    \
        \    show-tiling: minimum percent of contig length in\n                  \
        \      alignment (0.0 - 1.0, default: 0.3)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
        \                        Verboseness of output. [default: DEBUG]\n  --version,\
        \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR \
        \    Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep     \
        \    Keep the tmp_dir if an exception occurs while running.\n            \
        \            Default is to delete all temp files at the end, even\n      \
        \                  if there's a failure.\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "\nEnter a subcommand to view additional information:\n\n     assembly.py\
      \ \e[1mtrim_rmdup_subsamp\e[0m [...]\n          Take reads through Trimmomatic,\
      \ Prinseq, and subsampling.\n          This should probably move over to read_utils\
      \ or\n          taxon_filter.\n\n     assembly.py \e[1massemble_trinity\e[0m\
      \ [...]\n          This step runs the Trinity assembler. First trim reads with\n\
      \          trimmomatic, rmdup with prinseq,and random subsample to no\n    \
      \      more than 100k reads.\n\n     assembly.py \e[1morder_and_orient\e[0m\
      \ [...]\n          This step cleans up the de novo assembly with a known\n \
      \         reference genome. Uses MUMmer (nucmer or promer) to create a\n   \
      \       reference-based consensussequence of aligned contigs (with\n       \
      \   runs of N's in between the de novocontigs).\n\n     assembly.py \e[1mimpute_from_reference\e\
      [0m [...]\n          This takes a de novo assembly, aligns against a reference\n\
      \          genome, andimputes all missing positions (plus some of the\n    \
      \      chromosome ends)with the reference genome. This provides an\n       \
      \   assembly with the properstructure (but potentially wrong\n          sequences\
      \ in areas) from whichwe can perform further read-\n          based refinement.\
      \ Two steps:filter_short_seqs: We then toss\n          out all assemblies that\
      \ come out to< 15kb or < 95%\n          unambiguous and fail otherwise. modify_contig:\
      \ Finally, we\n          trim off anything at the end that exceedsthe length\
      \ of the\n          known reference assembly. We also replace allNs and\n  \
      \        everything within 55bp of the chromosome ends with\n          thereference\
      \ sequence. This is clearly incorrect consensus\n          sequence,but it allows\
      \ downstream steps to map reads in\n          parts of the genomethat would\
      \ otherwise be Ns, and we will\n          correct all of the inferredpositions\
      \ with two steps of read-\n          based refinement (below), andrevert positions\
      \ back to Ns\n          where read support is lacking. FASTA indexing: output\n\
      \          assembly is indexed for Picard, Samtools, Novoalign.\n\n     assembly.py\
      \ \e[1mrefine_assembly\e[0m [...]\n          This a refinement step where we\
      \ take a crude assembly,\n          alignall reads back to it, and modify the\
      \ assembly to the\n          majorityallele at each position based on read pileups.\
      \ This\n          step considers both SNPs as well as indels called by GATKand\n\
      \          will correct the consensus based on GATK calls. Reads are\n     \
      \     aligned with Novoalign, then PCR duplicates are removedwith\n        \
      \  Picard (in order to debias the allele counts in the\n          pileups),and\
      \ realigned with GATK's IndelRealigner (in order\n          to call indels).\
      \ Output FASTA file is indexed for Picard,\n          Samtools, and Novoalign.\n\
      \n     assembly.py \e[1mfilter_short_seqs\e[0m [...]\n          Check sequences\
      \ in inFile, retaining only those that are at\n          least minLength\n\n\
      \     assembly.py \e[1mmodify_contig\e[0m [...]\n          Modifies an input\
      \ contig. Depending on the optionsselected,\n          can replace N calls with\
      \ reference calls, replace\n          ambiguouscalls with reference calls, trim\
      \ to the length of\n          the reference, replacecontig ends with reference\
      \ calls, and\n          trim leading and trailing Ns. Author: rsealfon.\n\n\
      \     assembly.py \e[1mvcf_to_fasta\e[0m [...]\n          Take input genotypes\
      \ (VCF) and construct a consensus\n          sequence(fasta) by using majority-read-count\
      \ alleles in the\n          VCF. Genotypes in the VCF will be ignored--we will\
      \ use the\n          allelewith majority read support (or an ambiguity base\
      \ if\n          there is no clear majority). Uncalled positions will be\n  \
      \        emitted as N's. Author: dpark.\n\n     assembly.py \e[1mtrim_fasta\e\
      [0m [...]\n          Take input sequences (fasta) and trim any continuous\n\
      \          sections ofN's from the ends of them. Write trimmed\n          sequences\
      \ to an output fasta file.\n\n     assembly.py \e[1mdeambig_fasta\e[0m [...]\n\
      \          Take input sequences (fasta) and replace any ambiguity bases\n  \
      \        with arandom unambiguous base from among the possibilities\n      \
      \    described by the ambiguitycode. Write output to fasta file.\n\n     assembly.py\
      \ \e[1mdpdiff\e[0m [...]\n          Take input VCF files (all with only one\
      \ sample each) and\n          reporton the discrepancies between the two DP\
      \ fields (one in\n          INFO and one in thesample's genotype column).\n\n\
      usage: assembly.py subcommand\n\nThis script contains a number of utilities\
      \ for viral sequence assembly from\nNGS reads. Primarily used for Lassa and\
      \ Ebola virus analysis in the Sabeti Lab\n/ Broad Institute Viral Genomics.\n\
      \nsubcommands:\n  \e[F\n    trim_rmdup_subsamp\n    assemble_trinity\n    order_and_orient\n\
      \    impute_from_reference\n    refine_assembly\n    filter_short_seqs\n   \
      \ modify_contig\n    vcf_to_fasta\n    trim_fasta\n    deambig_fasta\n    dpdiff\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    - -V
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: assembly.py subcommand trim_rmdup_subsamp [-h] [--n_reads N_READS]\n\
    \                                                 [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                                 [--version]\n              \
    \                                   [--tmp_dir TMP_DIR]\n                    \
    \                             [--tmp_dirKeep]\n                              \
    \                   inBam clipDb outBam\n\nTake reads through Trimmomatic, Prinseq,\
    \ and subsampling. This should probably\nmove over to read_utils or taxon_filter.\n\
    \npositional arguments:\n  inBam                 Input reads, unaligned BAM format.\n\
    \  clipDb                Trimmomatic clip DB.\n  outBam                Output\
    \ reads, unaligned BAM format (currently, read\n                        groups\
    \ and other header information are destroyed in\n                        this\
    \ process).\n\noptional arguments:\n  -h, --help            show this help message\
    \ and exit\n  --n_reads N_READS     Subsample reads to no more than this many\
    \ individual\n                        reads. Note that paired reads are given\
    \ priority, and\n                        unpaired reads are included to reach\
    \ the count if\n                        there are too few paired reads to reach\
    \ n_reads.\n                        (default 100000)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
- !Command
  command: *id005
  positional:
  - !Positional
    description: ''
    position: 0
    name: assembly.py
    optional: false
  - !Positional
    description: ''
    position: 1
    name: subcommand
    optional: false
  named: []
  parent: *id011
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: assembly.py subcommand\nassembly.py: error: argument \e[F: invalid\
    \ choice: 'taxon_filter.' (choose from 'trim_rmdup_subsamp', 'assemble_trinity',\
    \ 'order_and_orient', 'impute_from_reference', 'refine_assembly', 'filter_short_seqs',\
    \ 'modify_contig', 'vcf_to_fasta', 'trim_fasta', 'deambig_fasta', 'dpdiff')\n"
  generated_using: *id004
- !Command
  command: *id006
  positional:
  - !Positional
    description: "Input assembly, FASTA format, pre-indexed for Picard,\nSamtools,\
      \ and Novoalign."
    position: 0
    name: inFasta
    optional: false
  - !Positional
    description: Input reads, unaligned BAM format.
    position: 1
    name: inBam
    optional: false
  - !Positional
    description: "Output refined assembly, FASTA format, indexed for\nPicard, Samtools,\
      \ and Novoalign."
    position: 2
    name: outFasta
    optional: false
  - !Positional
    description: --min_coverage MIN_COVERAGE
    position: 0
    name: space.
    optional: false
  - !Positional
    description: --major_cutoff MAJOR_CUTOFF
    position: 0
    name: unambiguous.
    optional: false
  named:
  - !Flag
    description: "BAM with reads that are already aligned to inFasta.\nThis bypasses\
      \ the alignment process by novoalign and\ninstead uses the given BAM to make\
      \ an assembly. When\nset, outBam is ignored."
    synonyms:
    - --already_realigned_bam
    args: !SimpleFlagArg
      name: ALREADY_REALIGNED_BAM
    optional: true
  - !Flag
    description: "Reads aligned to inFasta. Unaligned and duplicate\nreads have been\
      \ removed. GATK indel realigned."
    synonyms:
    - --outBam
    args: !SimpleFlagArg
      name: OUTBAM
    optional: true
  - !Flag
    description: GATK genotype calls for genome in inFasta coordinate
    synonyms:
    - --outVcf
    args: !SimpleFlagArg
      name: OUTVCF
    optional: true
  - !Flag
    description: Alignment parameters for Novoalign.
    synonyms:
    - --novo_params
    args: !SimpleFlagArg
      name: NOVO_PARAMS
    optional: true
  - !Flag
    description: "[CHR_NAMES [CHR_NAMES ...]]\nRename all output chromosomes (default:\
      \ retain\noriginal chromosome names)"
    synonyms:
    - --chr_names
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Retain all reads in BAM file? Default is to remove\nunaligned and\
      \ duplicate reads."
    synonyms:
    - --keep_all_reads
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'JVM virtual memory size (default: 2g)'
    synonyms:
    - --JVMmemory
    args: !SimpleFlagArg
      name: JVMMEMORY
    optional: true
  - !Flag
    description: "A path containing the GATK jar file. This overrides\nthe GATK_ENV\
      \ environment variable or the GATK conda\npackage. (default: None)"
    synonyms:
    - --GATK_PATH
    args: !SimpleFlagArg
      name: GATK_PATH
    optional: true
  - !Flag
    description: "A path to the novoalign.lic file. This overrides the\nNOVOALIGN_LICENSE_PATH\
      \ environment variable. (default:\nNone)"
    synonyms:
    - --NOVOALIGN_LICENSE_PATH
    args: !SimpleFlagArg
      name: NOVOALIGN_LICENSE_PATH
    optional: true
  - !Flag
    description: 'Number of threads (default: 1)'
    synonyms:
    - --threads
    args: !SimpleFlagArg
      name: THREADS
    optional: true
  - !Flag
    description: 'Verboseness of output. [default: DEBUG]'
    synonyms:
    - --loglevel
    args: !ChoiceFlagArg
      choices: !!set
        WARNING:
        CRITICAL:
        ERROR:
        DEBUG:
        INFO:
        EXCEPTION:
    optional: true
  - !Flag
    description: 'Base directory for temp files. [default: /tmp]'
    synonyms:
    - --tmp_dir
    args: !SimpleFlagArg
      name: TMP_DIR
    optional: true
  - !Flag
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    synonyms:
    - --tmp_dirKeep
    args: !EmptyFlagArg {}
    optional: true
  parent: *id011
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    - -V
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: assembly.py subcommand refine_assembly [-h]\n               \
    \                               [--already_realigned_bam ALREADY_REALIGNED_BAM]\n\
    \                                              [--outBam OUTBAM]\n           \
    \                                   [--outVcf OUTVCF]\n                      \
    \                        [--min_coverage MIN_COVERAGE]\n                     \
    \                         [--major_cutoff MAJOR_CUTOFF]\n                    \
    \                          [--novo_params NOVO_PARAMS]\n                     \
    \                         [--chr_names [CHR_NAMES [CHR_NAMES ...]]]\n        \
    \                                      [--keep_all_reads]\n                  \
    \                            [--JVMmemory JVMMEMORY]\n                       \
    \                       [--GATK_PATH GATK_PATH]\n                            \
    \                  [--NOVOALIGN_LICENSE_PATH NOVOALIGN_LICENSE_PATH]\n       \
    \                                       [--threads THREADS]\n                \
    \                              [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                              [--version] [--tmp_dir TMP_DIR]\n\
    \                                              [--tmp_dirKeep]\n             \
    \                                 inFasta inBam outFasta\n\nThis a refinement\
    \ step where we take a crude assembly, align all reads back to\nit, and modify\
    \ the assembly to the majority allele at each position based on\nread pileups.\
    \ This step considers both SNPs as well as indels called by GATK\nand will correct\
    \ the consensus based on GATK calls. Reads are aligned with\nNovoalign, then PCR\
    \ duplicates are removed with Picard (in order to debias the\nallele counts in\
    \ the pileups), and realigned with GATK's IndelRealigner (in\norder to call indels).\
    \ Output FASTA file is indexed for Picard, Samtools, and\nNovoalign.\n\npositional\
    \ arguments:\n  inFasta               Input assembly, FASTA format, pre-indexed\
    \ for Picard,\n                        Samtools, and Novoalign.\n  inBam     \
    \            Input reads, unaligned BAM format.\n  outFasta              Output\
    \ refined assembly, FASTA format, indexed for\n                        Picard,\
    \ Samtools, and Novoalign.\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  --already_realigned_bam ALREADY_REALIGNED_BAM\n\
    \                        BAM with reads that are already aligned to inFasta.\n\
    \                        This bypasses the alignment process by novoalign and\n\
    \                        instead uses the given BAM to make an assembly. When\n\
    \                        set, outBam is ignored.\n  --outBam OUTBAM       Reads\
    \ aligned to inFasta. Unaligned and duplicate\n                        reads have\
    \ been removed. GATK indel realigned.\n  --outVcf OUTVCF       GATK genotype calls\
    \ for genome in inFasta coordinate\n                        space.\n  --min_coverage\
    \ MIN_COVERAGE\n                        Minimum read coverage required to call\
    \ a position\n                        unambiguous.\n  --major_cutoff MAJOR_CUTOFF\n\
    \                        If the major allele is present at a frequency higher\n\
    \                        than this cutoff, we will call an unambiguous base at\n\
    \                        that position. If it is equal to or below this cutoff,\n\
    \                        we will call an ambiguous base representing all\n   \
    \                     possible alleles at that position. [default: 0.5]\n  --novo_params\
    \ NOVO_PARAMS\n                        Alignment parameters for Novoalign.\n \
    \ --chr_names [CHR_NAMES [CHR_NAMES ...]]\n                        Rename all\
    \ output chromosomes (default: retain\n                        original chromosome\
    \ names)\n  --keep_all_reads      Retain all reads in BAM file? Default is to\
    \ remove\n                        unaligned and duplicate reads.\n  --JVMmemory\
    \ JVMMEMORY\n                        JVM virtual memory size (default: 2g)\n \
    \ --GATK_PATH GATK_PATH\n                        A path containing the GATK jar\
    \ file. This overrides\n                        the GATK_ENV environment variable\
    \ or the GATK conda\n                        package. (default: None)\n  --NOVOALIGN_LICENSE_PATH\
    \ NOVOALIGN_LICENSE_PATH\n                        A path to the novoalign.lic\
    \ file. This overrides the\n                        NOVOALIGN_LICENSE_PATH environment\
    \ variable. (default:\n                        None)\n  --threads THREADS    \
    \ Number of threads (default: 1)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n  --tmp_dir TMP_DIR     Base\
    \ directory for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the\
    \ tmp_dir if an exception occurs while running.\n                        Default\
    \ is to delete all temp files at the end, even\n                        if there's\
    \ a failure.\n"
  generated_using: *id004
- !Command
  command: *id007
  positional:
  - !Positional
    description: 'positional arguments:'
    position: 0
    name: rsealfon.
    optional: false
  - !Positional
    description: "input alignment of reference and contig (should\ncontain exactly\
      \ 2 sequences)"
    position: 1
    name: input
    optional: false
  - !Positional
    description: Destination file for modified contigs
    position: 2
    name: output
    optional: false
  - !Positional
    description: reference sequence name (exact match required)
    position: 3
    name: ref
    optional: false
  named:
  - !Flag
    description: 'fasta header output name (default: existing header)'
    synonyms:
    - -n
    - --name
    args: !SimpleFlagArg
      name: NAME
    optional: true
  - !Flag
    description: "should the reference sequence be called if there is an\nN in the\
      \ contig and a more specific base in the\nreference (default: False)"
    synonyms:
    - -cn
    - --call-reference-ns
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "should ends of contig.fasta be trimmed to length of\nreference (default:\
      \ False)"
    synonyms:
    - -t
    - --trim-ends
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "should the 5'-end of contig.fasta be replaced by\nreference (default:\
      \ False)"
    synonyms:
    - -r5
    - --replace-5ends
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "should the 3'-end of contig.fasta be replaced by\nreference (default:\
      \ False)"
    synonyms:
    - -r3
    - --replace-3ends
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "length of ends to be replaced (if replace-ends is yes)\n(default:\
      \ 10)"
    synonyms:
    - -l
    - --replace-length
    args: !SimpleFlagArg
      name: REPLACE_LENGTH
    optional: true
  - !Flag
    description: 'Format for input alignment (default: fasta)'
    synonyms:
    - -f
    - --format
    args: !SimpleFlagArg
      name: FORMAT
    optional: true
  - !Flag
    description: "Replace gaps at the beginning and end of the sequence\nwith reference\
      \ sequence (default: False)"
    synonyms:
    - -r
    - --replace-end-gaps
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Remove leading and trailing N's in the contig\n(default: False)"
    synonyms:
    - -rn
    - --remove-end-ns
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "should the reference sequence be called if the contig\nseq is ambiguous\
      \ and the reference sequence is more\ninformative & consistant with the ambiguous\
      \ base (ie\nY->C) (default: False)"
    synonyms:
    - -ca
    - --call-reference-ambiguous
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Base directory for temp files. [default: /tmp]'
    synonyms:
    - --tmp_dir
    args: !SimpleFlagArg
      name: TMP_DIR
    optional: true
  - !Flag
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure."
    synonyms:
    - --tmp_dirKeep
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Verboseness of output. [default: DEBUG]'
    synonyms:
    - --loglevel
    args: !ChoiceFlagArg
      choices: !!set
        WARNING:
        CRITICAL:
        ERROR:
        DEBUG:
        INFO:
        EXCEPTION:
    optional: true
  parent: *id011
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    - -V
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: assembly.py subcommand modify_contig [-h] [-n NAME] [-cn] [-t]\
    \ [-r5]\n                                            [-r3] [-l REPLACE_LENGTH]\n\
    \                                            [-f FORMAT] [-r] [-rn] [-ca]\n  \
    \                                          [--tmp_dir TMP_DIR]\n             \
    \                               [--tmp_dirKeep]\n                            \
    \                [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                            [--version]\n                   \
    \                         input output ref\n\nModifies an input contig. Depending\
    \ on the options selected, can replace N\ncalls with reference calls, replace\
    \ ambiguous calls with reference calls, trim\nto the length of the reference,\
    \ replace contig ends with reference calls, and\ntrim leading and trailing Ns.\
    \ Author: rsealfon.\n\npositional arguments:\n  input                 input alignment\
    \ of reference and contig (should\n                        contain exactly 2 sequences)\n\
    \  output                Destination file for modified contigs\n  ref        \
    \           reference sequence name (exact match required)\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  -n NAME, --name NAME\
    \  fasta header output name (default: existing header)\n  -cn, --call-reference-ns\n\
    \                        should the reference sequence be called if there is an\n\
    \                        N in the contig and a more specific base in the\n   \
    \                     reference (default: False)\n  -t, --trim-ends       should\
    \ ends of contig.fasta be trimmed to length of\n                        reference\
    \ (default: False)\n  -r5, --replace-5ends  should the 5'-end of contig.fasta\
    \ be replaced by\n                        reference (default: False)\n  -r3, --replace-3ends\
    \  should the 3'-end of contig.fasta be replaced by\n                        reference\
    \ (default: False)\n  -l REPLACE_LENGTH, --replace-length REPLACE_LENGTH\n   \
    \                     length of ends to be replaced (if replace-ends is yes)\n\
    \                        (default: 10)\n  -f FORMAT, --format FORMAT\n       \
    \                 Format for input alignment (default: fasta)\n  -r, --replace-end-gaps\n\
    \                        Replace gaps at the beginning and end of the sequence\n\
    \                        with reference sequence (default: False)\n  -rn, --remove-end-ns\
    \  Remove leading and trailing N's in the contig\n                        (default:\
    \ False)\n  -ca, --call-reference-ambiguous\n                        should the\
    \ reference sequence be called if the contig\n                        seq is ambiguous\
    \ and the reference sequence is more\n                        informative & consistant\
    \ with the ambiguous base (ie\n                        Y->C) (default: False)\n\
    \  --tmp_dir TMP_DIR     Base directory for temp files. [default: /tmp]\n  --tmp_dirKeep\
    \         Keep the tmp_dir if an exception occurs while running.\n           \
    \             Default is to delete all temp files at the end, even\n         \
    \               if there's a failure.\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
    \                        Verboseness of output. [default: DEBUG]\n  --version,\
    \ -V         show program's version number and exit\n"
  generated_using: *id004
- !Command
  command: *id008
  positional:
  - !Positional
    description: Input fasta file
    position: 0
    name: inFasta
    optional: false
  - !Positional
    description: Output (trimmed) fasta file
    position: 1
    name: outFasta
    optional: false
  named:
  - !Flag
    description: 'Verboseness of output. [default: DEBUG]'
    synonyms:
    - --loglevel
    args: !ChoiceFlagArg
      choices: !!set
        WARNING:
        CRITICAL:
        ERROR:
        DEBUG:
        INFO:
        EXCEPTION:
    optional: true
  parent: *id011
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    - -V
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: assembly.py subcommand trim_fasta [-h]\n                    \
    \                     [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                         [--version]\n                      \
    \                   inFasta outFasta\n\nTake input sequences (fasta) and trim\
    \ any continuous sections of N's from the\nends of them. Write trimmed sequences\
    \ to an output fasta file.\n\npositional arguments:\n  inFasta               Input\
    \ fasta file\n  outFasta              Output (trimmed) fasta file\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --loglevel\
    \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                        Verboseness\
    \ of output. [default: DEBUG]\n  --version, -V         show program's version\
    \ number and exit\n"
  generated_using: *id004
- !Command
  command: *id009
  positional:
  - !Positional
    description: Input de novo assembly/contigs, FASTA format.
    position: 0
    name: inFasta
    optional: false
  - !Positional
    description: "Reference genome for ordering, orienting, and merging\ncontigs,\
      \ FASTA format."
    position: 1
    name: inReference
    optional: false
  - !Positional
    description: "Output assembly, FASTA format, with the same number of\nchromosomes\
      \ as inReference, and in the same order."
    position: 2
    name: outFasta
    optional: false
  named:
  - !Flag
    description: "Output sequences (FASTA format) from alternative\ncontigs that mapped,\
      \ but were not chosen for the final\noutput."
    synonyms:
    - --outAlternateContigs
    args: !SimpleFlagArg
      name: OUTALTERNATECONTIGS
    optional: true
  - !Flag
    description: "Amount to extend alignment clusters by (if --extend).\nnucmer default\
      \ 200, promer default 60."
    synonyms:
    - --breaklen
    - -b
    args: !SimpleFlagArg
      name: BREAKLEN
    optional: true
  - !Flag
    description: "Maximum gap between two adjacent matches in a cluster.\nOur default\
      \ is 200. nucmer default 90, promer default\n30. Manual suggests going to 1000."
    synonyms:
    - --maxgap
    - -g
    args: !SimpleFlagArg
      name: MAXGAP
    optional: true
  - !Flag
    description: "Minimum length of an maximal exact match. Our default\nis 10. nucmer\
      \ default 20, promer default 6."
    synonyms:
    - --minmatch
    - -l
    args: !SimpleFlagArg
      name: MINMATCH
    optional: true
  - !Flag
    description: "Minimum cluster length. nucmer default 65, promer\ndefault 20."
    synonyms:
    - --mincluster
    - -c
    args: !SimpleFlagArg
      name: MINCLUSTER
    optional: true
  - !Flag
    description: "show-tiling: minimum percent identity for contig\nalignment (0.0\
      \ - 1.0, default: 0.6)"
    synonyms:
    - --min_pct_id
    - -i
    args: !SimpleFlagArg
      name: MIN_PCT_ID
    optional: true
  - !Flag
    description: "show-tiling: reject contigs smaller than this\n(default: 200)"
    synonyms:
    - --min_contig_len
    args: !SimpleFlagArg
      name: MIN_CONTIG_LEN
    optional: true
  - !Flag
    description: "show-tiling: minimum percent of contig length in\nalignment (0.0\
      \ - 1.0, default: 0.3)"
    synonyms:
    - --min_pct_contig_aligned
    - -v
    args: !SimpleFlagArg
      name: MIN_PCT_CONTIG_ALIGNED
    optional: true
  - !Flag
    description: 'Verboseness of output. [default: DEBUG]'
    synonyms:
    - --loglevel
    args: !ChoiceFlagArg
      choices: !!set
        WARNING:
        CRITICAL:
        ERROR:
        DEBUG:
        INFO:
        EXCEPTION:
    optional: true
  - !Flag
    description: 'Base directory for temp files. [default: /tmp]'
    synonyms:
    - --tmp_dir
    args: !SimpleFlagArg
      name: TMP_DIR
    optional: true
  - !Flag
    description: "Keep the tmp_dir if an exception occurs while running.\nDefault\
      \ is to delete all temp files at the end, even\nif there's a failure.\n"
    synonyms:
    - --tmp_dirKeep
    args: !EmptyFlagArg {}
    optional: true
  parent: *id011
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    - -V
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: assembly.py subcommand order_and_orient [-h]\n              \
    \                                 [--outAlternateContigs OUTALTERNATECONTIGS]\n\
    \                                               [--breaklen BREAKLEN]\n      \
    \                                         [--maxgap MAXGAP]\n                \
    \                               [--minmatch MINMATCH]\n                      \
    \                         [--mincluster MINCLUSTER]\n                        \
    \                       [--min_pct_id MIN_PCT_ID]\n                          \
    \                     [--min_contig_len MIN_CONTIG_LEN]\n                    \
    \                           [--min_pct_contig_aligned MIN_PCT_CONTIG_ALIGNED]\n\
    \                                               [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
    \                                               [--version] [--tmp_dir TMP_DIR]\n\
    \                                               [--tmp_dirKeep]\n            \
    \                                   inFasta inReference outFasta\n\nThis step\
    \ cleans up the de novo assembly with a known reference genome. Uses\nMUMmer (nucmer\
    \ or promer) to create a reference-based consensus sequence of\naligned contigs\
    \ (with runs of N's in between the de novo contigs).\n\npositional arguments:\n\
    \  inFasta               Input de novo assembly/contigs, FASTA format.\n  inReference\
    \           Reference genome for ordering, orienting, and merging\n          \
    \              contigs, FASTA format.\n  outFasta              Output assembly,\
    \ FASTA format, with the same number of\n                        chromosomes as\
    \ inReference, and in the same order.\n\noptional arguments:\n  -h, --help   \
    \         show this help message and exit\n  --outAlternateContigs OUTALTERNATECONTIGS\n\
    \                        Output sequences (FASTA format) from alternative\n  \
    \                      contigs that mapped, but were not chosen for the final\n\
    \                        output.\n  --breaklen BREAKLEN, -b BREAKLEN\n       \
    \                 Amount to extend alignment clusters by (if --extend).\n    \
    \                    nucmer default 200, promer default 60.\n  --maxgap MAXGAP,\
    \ -g MAXGAP\n                        Maximum gap between two adjacent matches\
    \ in a cluster.\n                        Our default is 200. nucmer default 90,\
    \ promer default\n                        30. Manual suggests going to 1000.\n\
    \  --minmatch MINMATCH, -l MINMATCH\n                        Minimum length of\
    \ an maximal exact match. Our default\n                        is 10. nucmer default\
    \ 20, promer default 6.\n  --mincluster MINCLUSTER, -c MINCLUSTER\n          \
    \              Minimum cluster length. nucmer default 65, promer\n           \
    \             default 20.\n  --min_pct_id MIN_PCT_ID, -i MIN_PCT_ID\n        \
    \                show-tiling: minimum percent identity for contig\n          \
    \              alignment (0.0 - 1.0, default: 0.6)\n  --min_contig_len MIN_CONTIG_LEN\n\
    \                        show-tiling: reject contigs smaller than this\n     \
    \                   (default: 200)\n  --min_pct_contig_aligned MIN_PCT_CONTIG_ALIGNED,\
    \ -v MIN_PCT_CONTIG_ALIGNED\n                        show-tiling: minimum percent\
    \ of contig length in\n                        alignment (0.0 - 1.0, default:\
    \ 0.3)\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n         \
    \               Verboseness of output. [default: DEBUG]\n  --version, -V     \
    \    show program's version number and exit\n  --tmp_dir TMP_DIR     Base directory\
    \ for temp files. [default: /tmp]\n  --tmp_dirKeep         Keep the tmp_dir if\
    \ an exception occurs while running.\n                        Default is to delete\
    \ all temp files at the end, even\n                        if there's a failure.\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nEnter a subcommand to view additional information:\n\n     assembly.py\
  \ \e[1mtrim_rmdup_subsamp\e[0m [...]\n          Take reads through Trimmomatic,\
  \ Prinseq, and subsampling.\n          This should probably move over to read_utils\
  \ or\n          taxon_filter.\n\n     assembly.py \e[1massemble_trinity\e[0m [...]\n\
  \          This step runs the Trinity assembler. First trim reads with\n       \
  \   trimmomatic, rmdup with prinseq,and random subsample to no\n          more than\
  \ 100k reads.\n\n     assembly.py \e[1morder_and_orient\e[0m [...]\n          This\
  \ step cleans up the de novo assembly with a known\n          reference genome.\
  \ Uses MUMmer (nucmer or promer) to create a\n          reference-based consensussequence\
  \ of aligned contigs (with\n          runs of N's in between the de novocontigs).\n\
  \n     assembly.py \e[1mimpute_from_reference\e[0m [...]\n          This takes a\
  \ de novo assembly, aligns against a reference\n          genome, andimputes all\
  \ missing positions (plus some of the\n          chromosome ends)with the reference\
  \ genome. This provides an\n          assembly with the properstructure (but potentially\
  \ wrong\n          sequences in areas) from whichwe can perform further read-\n\
  \          based refinement. Two steps:filter_short_seqs: We then toss\n       \
  \   out all assemblies that come out to< 15kb or < 95%\n          unambiguous and\
  \ fail otherwise. modify_contig: Finally, we\n          trim off anything at the\
  \ end that exceedsthe length of the\n          known reference assembly. We also\
  \ replace allNs and\n          everything within 55bp of the chromosome ends with\n\
  \          thereference sequence. This is clearly incorrect consensus\n        \
  \  sequence,but it allows downstream steps to map reads in\n          parts of the\
  \ genomethat would otherwise be Ns, and we will\n          correct all of the inferredpositions\
  \ with two steps of read-\n          based refinement (below), andrevert positions\
  \ back to Ns\n          where read support is lacking. FASTA indexing: output\n\
  \          assembly is indexed for Picard, Samtools, Novoalign.\n\n     assembly.py\
  \ \e[1mrefine_assembly\e[0m [...]\n          This a refinement step where we take\
  \ a crude assembly,\n          alignall reads back to it, and modify the assembly\
  \ to the\n          majorityallele at each position based on read pileups. This\n\
  \          step considers both SNPs as well as indels called by GATKand\n      \
  \    will correct the consensus based on GATK calls. Reads are\n          aligned\
  \ with Novoalign, then PCR duplicates are removedwith\n          Picard (in order\
  \ to debias the allele counts in the\n          pileups),and realigned with GATK's\
  \ IndelRealigner (in order\n          to call indels). Output FASTA file is indexed\
  \ for Picard,\n          Samtools, and Novoalign.\n\n     assembly.py \e[1mfilter_short_seqs\e\
  [0m [...]\n          Check sequences in inFile, retaining only those that are at\n\
  \          least minLength\n\n     assembly.py \e[1mmodify_contig\e[0m [...]\n \
  \         Modifies an input contig. Depending on the optionsselected,\n        \
  \  can replace N calls with reference calls, replace\n          ambiguouscalls with\
  \ reference calls, trim to the length of\n          the reference, replacecontig\
  \ ends with reference calls, and\n          trim leading and trailing Ns. Author:\
  \ rsealfon.\n\n     assembly.py \e[1mvcf_to_fasta\e[0m [...]\n          Take input\
  \ genotypes (VCF) and construct a consensus\n          sequence(fasta) by using\
  \ majority-read-count alleles in the\n          VCF. Genotypes in the VCF will be\
  \ ignored--we will use the\n          allelewith majority read support (or an ambiguity\
  \ base if\n          there is no clear majority). Uncalled positions will be\n \
  \         emitted as N's. Author: dpark.\n\n     assembly.py \e[1mtrim_fasta\e[0m\
  \ [...]\n          Take input sequences (fasta) and trim any continuous\n      \
  \    sections ofN's from the ends of them. Write trimmed\n          sequences to\
  \ an output fasta file.\n\n     assembly.py \e[1mdeambig_fasta\e[0m [...]\n    \
  \      Take input sequences (fasta) and replace any ambiguity bases\n          with\
  \ arandom unambiguous base from among the possibilities\n          described by\
  \ the ambiguitycode. Write output to fasta file.\n\n     assembly.py \e[1mdpdiff\e\
  [0m [...]\n          Take input VCF files (all with only one sample each) and\n\
  \          reporton the discrepancies between the two DP fields (one in\n      \
  \    INFO and one in thesample's genotype column).\n\nusage: assembly.py subcommand\n\
  \nThis script contains a number of utilities for viral sequence assembly from\n\
  NGS reads. Primarily used for Lassa and Ebola virus analysis in the Sabeti Lab\n\
  / Broad Institute Viral Genomics.\n\nsubcommands:\n  \e[F\n    trim_rmdup_subsamp\n\
  \    assemble_trinity\n    order_and_orient\n    impute_from_reference\n    refine_assembly\n\
  \    filter_short_seqs\n    modify_contig\n    vcf_to_fasta\n    trim_fasta\n  \
  \  deambig_fasta\n    dpdiff\n"
generated_using: *id004
