&id003 !Command
command:
- ivar
- variants
positional:
- !Positional
  description: ''
  position: 0
  name: samtools
  optional: false
- !Positional
  description: ''
  position: 1
  name: mpileup
  optional: false
named:
- !Flag
  description: 'Minimum quality score threshold to count base (Default: 20)'
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Minimum frequency threshold(0 - 1) to call variants (Default: 0.03)'
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Minimum read depth to call variants (Default: 0)'
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Reference file used for alignment. This is used to translate the nucleotide
    sequences and identify intra host single nucleotide variants
  synonyms:
  - -r
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: A GFF file in the GFF3 format can be supplied to specify coordinates
    of open reading frames (ORFs). In absence of GFF file, amino acid translation
    will not be done.
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (Required) Prefix for the output tsv variant file
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - --reference
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -Q
  args: !SimpleFlagArg
    name: '0'
  optional: true
- !Flag
  description: ''
  synonyms:
  - -B
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -d
  args: !SimpleFlagArg
    name: '0'
  optional: true
- !Flag
  description: ''
  synonyms:
  - -A
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -aa
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - ivar
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - ivar
    - trim
    positional: []
    named:
    - !Flag
      description: (Required) Sorted bam file, with aligned reads, to trim primers
        and quality
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: BED file with primer sequences and positions. If no BED file is
        specified, only quality trimming will be done.
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Minimum length of read to retain after trimming (Default: 30)'
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Minimum quality threshold for sliding window to pass (Default:
        20)'
      synonyms:
      - -q
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Width of sliding window (Default: 4)'
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Include reads with no primers. By default, reads with no primers
        are excluded
      synonyms:
      - -e
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Prefix for the output BAM file
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: ivar trim -i <input.bam> -b <primers.bed> -p <prefix> [-m <min-length>]\
      \ [-q <min-quality>] [-s <sliding-window-width>]\n\nInput Options    Description\n\
      \           -i    (Required) Sorted bam file, with aligned reads, to trim primers\
      \ and quality\n           -b    BED file with primer sequences and positions.\
      \ If no BED file is specified, only quality trimming will be done.\n       \
      \    -m    Minimum length of read to retain after trimming (Default: 30)\n \
      \          -q    Minimum quality threshold for sliding window to pass (Default:\
      \ 20)\n           -s    Width of sliding window (Default: 4)\n           -e\
      \    Include reads with no primers. By default, reads with no primers are excluded\n\
      \nOutput Options   Description\n           -p    (Required) Prefix for the output\
      \ BAM file\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - ivar
    - Command
    positional:
    - !Positional
      description: Description
      position: 0
      name: Command
      optional: false
    - !Positional
      description: Trim reads in aligned BAM file
      position: 1
      name: trim
      optional: false
    - !Positional
      description: Call variants from aligned BAM file
      position: 2
      name: variants
      optional: false
    - !Positional
      description: Filter variants across replicates or samples
      position: 3
      name: filtervariants
      optional: false
    - !Positional
      description: Call consensus from aligned BAM file
      position: 4
      name: consensus
      optional: false
    - !Positional
      description: Detect primer mismatches and get primer indices for the amplicon
        to be masked
      position: 5
      name: getmasked
      optional: false
    - !Positional
      description: Remove reads from trimmed BAM file
      position: 6
      name: removereads
      optional: false
    - !Positional
      description: Show version information
      position: 7
      name: version
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Unknown command: \"Command\"\n\nUsage:\tivar [command <trim|variants|filtervariants|consensus|getmasked|removereads|version|help>]\n\
      \n        Command       Description\n           trim       Trim reads in aligned\
      \ BAM file\n       variants       Call variants from aligned BAM file\n filtervariants\
      \       Filter variants across replicates or samples\n      consensus      \
      \ Call consensus from aligned BAM file\n      getmasked       Detect primer\
      \ mismatches and get primer indices for the amplicon to be masked\n    removereads\
      \       Remove reads from trimmed BAM file\n        version       Show version\
      \ information\n\nTo view detailed usage for each command type `ivar <command>`\
      \ \n"
    generated_using: *id002
  - !Command
    command:
    - ivar
    - removereads
    positional: []
    named:
    - !Flag
      description: (Required) Input BAM file  trimmed with ‘ivar trim’. Must be sorted
        which can be done using `samtools sort`.
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Text file with primer indices separated by spaces. This
        is the output of `getmasked` command.
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) BED file with primer sequences and positions.
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Prefix for the output filtered BAM file
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: ivar removereads -i <input.trimmed.bam> -p <prefix> -t <text-file-with-primer-indices>\
      \ -b <primers.bed> \nNote: This step is used only for amplicon-based sequencing.\n\
      \nInput Options    Description\n           -i    (Required) Input BAM file \
      \ trimmed with ‘ivar trim’. Must be sorted which can be done using `samtools\
      \ sort`.\n           -t    (Required) Text file with primer indices separated\
      \ by spaces. This is the output of `getmasked` command.\n           -b    (Required)\
      \ BED file with primer sequences and positions.\n\nOutput Options   Description\n\
      \           -p    (Required) Prefix for the output filtered BAM file\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - ivar
    - filtervariants
    positional: []
    named:
    - !Flag
      description: 'Minimum fration of files required to contain the same variant.
        Specify value within [0,1]. (Default: 1)'
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: A text file with one variant file per line.
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Prefix for the output filtered tsv file
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: ivar filtervariants -p <prefix> replicate-one.tsv replicate-two.tsv\
      \ ... OR ivar filtervariants -p <prefix> -f <text file with one variant file\
      \ per line> \nInput: Variant tsv files for each replicate/sample\n\nInput Options\
      \    Description\n           -t    Minimum fration of files required to contain\
      \ the same variant. Specify value within [0,1]. (Default: 1)\n           -f\
      \    A text file with one variant file per line.\n\nOutput Options   Description\n\
      \           -p    (Required) Prefix for the output filtered tsv file\n"
    generated_using: *id002
  - !Command
    command:
    - ivar
    - consensus
    positional:
    - !Positional
      description: ''
      position: 0
      name: samtools
      optional: false
    - !Positional
      description: ''
      position: 1
      name: mpileup
      optional: false
    - !Positional
      description: ''
      position: 2
      name: input.bam
      optional: false
    named:
    - !Flag
      description: 'Minimum quality score threshold to count base (Default: 20)'
      synonyms:
      - -q
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Minimum frequency threshold(0 - 1) to call consensus. (Default:\
        \ 0)\nFrequently used thresholds | Description\n---------------------------|------------\n\
        0 | Majority or most common base\n0.2 | Bases that make up atleast 20% of\
        \ the depth at a position\n0.5 | Strict or bases that make up atleast 50%\
        \ of the depth at a position\n0.9 | Strict or bases that make up atleast 90%\
        \ of the depth at a position\n1 | Identical or bases that make up 100% of\
        \ the depth at a position. Will have highest ambiguities"
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Minimum depth to call consensus(Default: 10)'
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If '-k' flag is added, regions with depth less than minimum depth
        will not be added to the consensus sequence. Using '-k' will override any
        option specified using -n
      synonyms:
      - -k
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '(N/-) Character to print in regions with less than minimum coverage(Default:
        N)'
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Prefix for the output fasta file and quality file
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -Q
      args: !SimpleFlagArg
        name: '0'
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -d
      args: !SimpleFlagArg
        name: '0'
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -A
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -aa
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: samtools mpileup -aa -A -d 0 -Q 0 <input.bam> | ivar consensus\
      \ -p <prefix> \n\nNote : samtools mpileup output must be piped into `ivar consensus`\n\
      \nInput Options    Description\n           -q    Minimum quality score threshold\
      \ to count base (Default: 20)\n           -t    Minimum frequency threshold(0\
      \ - 1) to call consensus. (Default: 0)\n                 Frequently used thresholds\
      \ | Description\n                 ---------------------------|------------\n\
      \                                          0 | Majority or most common base\n\
      \                                        0.2 | Bases that make up atleast 20%\
      \ of the depth at a position\n                                        0.5 |\
      \ Strict or bases that make up atleast 50% of the depth at a position\n    \
      \                                    0.9 | Strict or bases that make up atleast\
      \ 90% of the depth at a position\n                                         \
      \ 1 | Identical or bases that make up 100% of the depth at a position. Will\
      \ have highest ambiguities\n           -m    Minimum depth to call consensus(Default:\
      \ 10)\n           -k    If '-k' flag is added, regions with depth less than\
      \ minimum depth will not be added to the consensus sequence. Using '-k' will\
      \ override any option specified using -n \n           -n    (N/-) Character\
      \ to print in regions with less than minimum coverage(Default: N)\n\nOutput\
      \ Options   Description\n           -p    (Required) Prefix for the output fasta\
      \ file and quality file\n"
    generated_using: *id002
  - !Command
    command:
    - ivar
    - getmasked
    positional: []
    named:
    - !Flag
      description: (Required) Input filtered variants tsv generated from `ivar filtervariants`
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) BED file with primer sequences and positions
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Primer pair information file containing left and right
        primer names for the same amplicon separated by a tab
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: (Required) Prefix for the output text file
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: ivar getmasked -i <input-filtered.tsv> -b <primers.bed> -f\
      \ <primer_pairs.tsv> -p <prefix>\nNote: This step is used only for amplicon-based\
      \ sequencing.\n\nInput Options    Description\n           -i    (Required) Input\
      \ filtered variants tsv generated from `ivar filtervariants`\n           -b\
      \    (Required) BED file with primer sequences and positions\n           -f\
      \    (Required) Primer pair information file containing left and right primer\
      \ names for the same amplicon separated by a tab\nOutput Options   Description\n\
      \           -p    (Required) Prefix for the output text file\n"
    generated_using: *id002
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Unknown command: \"--help\"\n\nUsage:\tivar [command <trim|variants|filtervariants|consensus|getmasked|removereads|version|help>]\n\
    \n        Command       Description\n           trim       Trim reads in aligned\
    \ BAM file\n       variants       Call variants from aligned BAM file\n filtervariants\
    \       Filter variants across replicates or samples\n      consensus       Call\
    \ consensus from aligned BAM file\n      getmasked       Detect primer mismatches\
    \ and get primer indices for the amplicon to be masked\n    removereads      \
    \ Remove reads from trimmed BAM file\n        version       Show version information\n\
    \nTo view detailed usage for each command type `ivar <command>` \n"
  generated_using: *id002
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: samtools mpileup -aa -A -d 0 -B -Q 0 --reference [<reference-fasta]\
  \ <input.bam> | ivar variants -p <prefix> [-q <min-quality>] [-t <min-frequency-threshold>]\
  \ [-m <minimum depth>] [-r <reference-fasta>] [-g GFF file]\n\nNote : samtools mpileup\
  \ output must be piped into ivar variants\n\nInput Options    Description\n    \
  \       -q    Minimum quality score threshold to count base (Default: 20)\n    \
  \       -t    Minimum frequency threshold(0 - 1) to call variants (Default: 0.03)\n\
  \           -m    Minimum read depth to call variants (Default: 0)\n           -r\
  \    Reference file used for alignment. This is used to translate the nucleotide\
  \ sequences and identify intra host single nucleotide variants\n           -g  \
  \  A GFF file in the GFF3 format can be supplied to specify coordinates of open\
  \ reading frames (ORFs). In absence of GFF file, amino acid translation will not\
  \ be done.\n\nOutput Options   Description\n           -p    (Required) Prefix for\
  \ the output tsv variant file\n\n"
generated_using: *id002
