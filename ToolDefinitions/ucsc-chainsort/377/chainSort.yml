!Command
command:
- chainSort
positional:
- !Positional
  optional: false
  position: 0
  name: inFile
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -target
  description: on target start rather than score
  args: !SimpleFlagArg
    name: sort
- !Flag
  optional: true
  synonyms:
  - -query
  description: on query start rather than score
  args: !SimpleFlagArg
    name: sort
- !Flag
  optional: true
  synonyms:
  - -index
  description: "build simple two column index file\n<out file position>  <value>\n\
    where <value> is score, target, or query\ndepending on the sort.\n"
  args: !SimpleFlagArg
    name: out.tab
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "chainSort - Sort chains.  By default sorts by score.\nNote this loads\
  \ all chains into memory, so it is not\nsuitable for large sets.  Instead, run chainSort\
  \ on\nmultiple small files, followed by chainMergeSort.\nusage:\n   chainSort inFile\
  \ outFile\nNote that inFile and outFile can be the same\noptions:\n   -target sort\
  \ on target start rather than score\n   -query sort on query start rather than score\n\
  \   -index=out.tab build simple two column index file\n                    <out\
  \ file position>  <value>\n                  where <value> is score, target, or\
  \ query \n                  depending on the sort.\n\n"
generated_using: []
docker_image:
