!Command
command:
- cPecanLastz_D
positional:
- !Positional
  optional: false
  position: 0
  name: anti-diagonal
  description: (by default no chaining is performed)
named:
- !Flag
  optional: true
  synonyms:
  - --self
  description: the target sequence is also the query
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --word
  description: "set max bits for word hash;  use this to trade time for\nmemory, eliminating\
    \ thrashing for heavy seeds\n(default is 28 bits)"
  args: !SimpleFlagArg
    name: bits
- !Flag
  optional: true
  synonyms:
  - --filter
  description: ",<M>       filter seed hits, requiring at least M matches and\nallowing\
    \ no more than T transversions\n(default is no filtering)"
  args: !SimpleFlagArg
    name: T
- !Flag
  optional: true
  synonyms:
  - --notwins
  description: require just one seed hit
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --twins
  description: "..<maxgap> require two nearby seed hits on the same diagonal\n(default\
    \ is twins aren't required)"
  args: !SimpleFlagArg
    name: min
- !Flag
  optional: true
  synonyms:
  - --seedqueue
  description: "set number of entries in seed hit queue\n(default is 262144)"
  args: !SimpleFlagArg
    name: entries
- !Flag
  optional: true
  synonyms:
  - --segments
  description: "read anchor segments from a file, instead of\ndiscovering anchors\
    \ via seeding"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --norecoverseeds
  description: don't recover hash-collision seed hits
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --recoverseeds
  description: "recover hash-collision seed hits\n(default is not to recover seed\
    \ hits)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --step
  description: set step length (default is 1)
  args: !SimpleFlagArg
    name: length
- !Flag
  optional: true
  synonyms:
  - --chain
  description: =<diag,anti>    perform chaining with given penalties for diagonal
    and
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --notrivial
  description: "do not output a trivial self-alignment block if the\ntarget and query\
    \ happen to be identical"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --scores
  description: "read substitution scores from a file\n(default is HOXD70)"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --match
  description: ',<P>        scores are +R/-P for match/mismatch'
  args: !SimpleFlagArg
    name: R
- !Flag
  optional: true
  synonyms:
  - --gap
  description: =<open,extend>    set gap open and extend penalties (default is 400.000000,30.000000)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --xdrop
  description: set x-drop threshold (default is 10*sub[A][A])
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --ydrop
  description: set y-drop threshold (default is open+300extend)
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --noxtrim
  description: "if x-drop extension encounters end of sequence, don't\ntrim back to\
    \ peak score (use this for short reads)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --noytrim
  description: "if y-drop extension encounters end of sequence, don't\ntrim back to\
    \ peak score (use this for short reads)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --infer
  description: infer scores from the sequences, then use them
  args: !SimpleFlagArg
    name: control
- !Flag
  optional: true
  synonyms:
  - --inferonly
  description: "infer scores but don't use them (requires --infscores)\nall inference\
    \ options are read from the control file"
  args: !SimpleFlagArg
    name: control
- !Flag
  optional: true
  synonyms:
  - --infscores
  description: '[=<file>]   write inferred scores to a file'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hspthresh
  description: "set threshold for high scoring pairs (default is 3000.000000)\nungapped\
    \ extensions scoring lower are discarded\n<score> can also be a percentage or\
    \ base count"
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --exact
  description: "set threshold for exact matches\nif specified, exact matches are found\
    \ rather than high\nscoring pairs (replaces --hspthresh)"
  args: !SimpleFlagArg
    name: length
- !Flag
  optional: true
  synonyms:
  - --mismatch
  description: ",<length> set threshold for mismatches\nif specified, N-mismatch segments\
    \ are found rather\nthan high scoring pairs (replaces --hspthresh)"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --inner
  description: "set threshold for HSPs during interpolation\n(default is no interpolation)"
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --gappedthresh
  description: "set threshold for gapped alignments\ngapped extensions scoring lower\
    \ are discarded\n<score> can also be a percentage or base count\n(default is to\
    \ use same value as --hspthresh)"
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --ball
  description: "[%]      set minimum score required of words 'in' a quantum ball"
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --nomirror
  description: "don't report mirror-image alignments when using --self\n(default is\
    \ to skip processing them, but recreate them\nin the output)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --allocate
  description: ":traceback=<bytes>  space for trace-back information\n(default is\
    \ 80.0M)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --maxwordcount
  description: "[%] limit seed word-repeats in target\nwords occurring too often are\
    \ not used in seed hits\n(default is no word-repeat limit)"
  args: !SimpleFlagArg
    name: limit
- !Flag
  optional: true
  synonyms:
  - --masking
  description: "mask any position in target hit this many times\nzero indicates no\
    \ masking\n(default is no masking)"
  args: !SimpleFlagArg
    name: count
- !Flag
  optional: true
  synonyms:
  - --identity
  description: "[..<max>] filter alignments by percent identity\n0<=min<=max<=100;\
    \  blocks (or HSPs) outside min..max\nare discarded\n(default is no identity filtering)"
  args: !SimpleFlagArg
    name: min
- !Flag
  optional: true
  synonyms:
  - --coverage
  description: "[..<max>] filter alignments by percentage of query covered\n0<=min<=max<=100;\
    \  blocks (or HSPs) outside min..max\nare discarded\n(default is no query coverage\
    \ filtering)"
  args: !SimpleFlagArg
    name: min
- !Flag
  optional: true
  synonyms:
  - --continuity
  description: "[..<max>] filter alignments by percent continuity\n0<=min<=max<=100;\
    \  blocks (or HSPs) outside min..max\nare discarded\n(default is no continuity\
    \ filtering)"
  args: !SimpleFlagArg
    name: min
- !Flag
  optional: true
  synonyms:
  - --output
  description: "specify output alignment file;  otherwise alignments\nare written\
    \ to stdout"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --format
  description: "specify output format; one of lav, axt, maf, cigar,\nrdotplot, text\
    \ or general\n(use --help=formats for more details)\n(by default output is LAV)"
  args: !SimpleFlagArg
    name: type
- !Flag
  optional: true
  synonyms:
  - --readgroup
  description: "specify readgroup tags for SAM format\n(use --help=formats for more\
    \ details)"
  args: !SimpleFlagArg
    name: tags
- !Flag
  optional: true
  synonyms:
  - --markend
  description: Write a comment at the end of the output file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --rdotplot
  description: create an output file suitable for plotting in R.
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --verbosity
  description: "set info level (0 is minimum, 10 is everything)\n(default is 0)"
  args: !SimpleFlagArg
    name: level
- !Flag
  optional: true
  synonyms:
  - --tableonly
  description: "[=count]    just produce the target position table, don't\nsearch\
    \ for seeds"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --writesegments
  description: "just produce the anchor segments table, don't\nperform gapped alignment"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --writecapsule
  description: write the target and seed word table to a file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --targetcapsule
  description: "read the target seed word table from a file\n(this replaces the target\
    \ specifier)"
  args: !SimpleFlagArg
    name: file
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: report the program version and quit
  args: !EmptyFlagArg {}
help_text: "NOTE: the following list may not be comprehensive.  The most up-to-date\
  \ list\n      is available at http://www.bx.psu.edu/~rsharris/lastz\n\n  target[[start..end]]\
  \   spec/file containing target sequence (fasta, fastq,\n                      \
  \   nib, 2bit or hsx);  [start..end] defines a subrange of\n                   \
  \      the file\n                         (use --help=files for more details)\n\
  \  query[[start..end]]    spec/file containing query sequences;  if absent,\n  \
  \                       queries come from stdin (if needed)\n  --self          \
  \       the target sequence is also the query\n  --seed=match<length>   use a word\
  \ with no gaps instead of a seed pattern\n  --seed=half<length>    use space-free\
  \ half-weight word instead of seed pattern\n  --[no]transition[=2]   allow one or\
  \ two transitions in a seed hit\n                         (by default a transition\
  \ is allowed)\n  --word=<bits>          set max bits for word hash;  use this to\
  \ trade time for\n                         memory, eliminating thrashing for heavy\
  \ seeds\n                         (default is 28 bits)\n  --filter=<T>,<M>     \
  \  filter seed hits, requiring at least M matches and\n                        \
  \ allowing no more than T transversions\n                         (default is no\
  \ filtering)\n  --notwins              require just one seed hit\n  --twins=<min>..<maxgap>\
  \ require two nearby seed hits on the same diagonal\n                         (default\
  \ is twins aren't required)\n  --seedqueue=<entries>  set number of entries in seed\
  \ hit queue\n                         (default is 262144)\n  --segments=<file> \
  \     read anchor segments from a file, instead of\n                         discovering\
  \ anchors via seeding\n  --norecoverseeds       don't recover hash-collision seed\
  \ hits\n  --recoverseeds         recover hash-collision seed hits\n            \
  \             (default is not to recover seed hits)\n  --step=<length>        set\
  \ step length (default is 1)\n  --strand=both          search both strands\n  --strand=plus\
  \          search + strand only (matching strand of query spec)\n  --strand=minus\
  \         search - strand only (opposite strand of query spec)\n               \
  \          (by default both strands are searched)\n  --ambiguous=n[,<penalty>] treat\
  \ N as an ambiguous nucleotide\n                         (by default N is treated\
  \ as a sequence splicing\n                          character)\n  --ambiguous=iupac[,<penalty>]\
  \ treat any ambiguous IUPAC-IUB character as a\n                         completely\
  \ ambiguous nucleotide\n                         (by default any sequence file with\
  \ B,D,H,K,M,R,S,V,W,Y\n                          is rejected)\n  --[no]gfextend\
  \         perform gap-free extension of seed hits to HSPs\n                    \
  \     (by default extension is performed)\n  --[no]chain            perform chaining\n\
  \  --chain=<diag,anti>    perform chaining with given penalties for diagonal and\n\
  \                         anti-diagonal\n                         (by default no\
  \ chaining is performed)\n  --[no]gapped           perform gapped alignment (instead\
  \ of gap-free)\n                         (by default gapped alignment is performed)\n\
  \  --notrivial            do not output a trivial self-alignment block if the\n\
  \                         target and query happen to be identical\n  --scores=<file>\
  \        read substitution scores from a file\n                         (default\
  \ is HOXD70)\n  --match=<R>,<P>        scores are +R/-P for match/mismatch\n  --gap=<open,extend>\
  \    set gap open and extend penalties (default is 400.000000,30.000000)\n  --xdrop=<score>\
  \        set x-drop threshold (default is 10*sub[A][A])\n  --ydrop=<score>     \
  \   set y-drop threshold (default is open+300extend)\n  --noxtrim              if\
  \ x-drop extension encounters end of sequence, don't\n                         trim\
  \ back to peak score (use this for short reads)\n  --noytrim              if y-drop\
  \ extension encounters end of sequence, don't\n                         trim back\
  \ to peak score (use this for short reads)\n  --infer=<control>      infer scores\
  \ from the sequences, then use them\n  --inferonly=<control>  infer scores but don't\
  \ use them (requires --infscores)\n                         all inference options\
  \ are read from the control file\n  --infscores[=<file>]   write inferred scores\
  \ to a file\n  --hspthresh=<score>    set threshold for high scoring pairs (default\
  \ is 3000.000000)\n                         ungapped extensions scoring lower are\
  \ discarded\n                         <score> can also be a percentage or base count\n\
  \  --exact=<length>       set threshold for exact matches\n                    \
  \     if specified, exact matches are found rather than high\n                 \
  \        scoring pairs (replaces --hspthresh)\n  --mismatch=<N>,<length> set threshold\
  \ for mismatches\n                         if specified, N-mismatch segments are\
  \ found rather\n                         than high scoring pairs (replaces --hspthresh)\n\
  \  --inner=<score>        set threshold for HSPs during interpolation\n        \
  \                 (default is no interpolation)\n  --gappedthresh=<score> set threshold\
  \ for gapped alignments\n                         gapped extensions scoring lower\
  \ are discarded\n                         <score> can also be a percentage or base\
  \ count\n                         (default is to use same value as --hspthresh)\n\
  \  --ball=<score>[%]      set minimum score required of words 'in' a quantum ball\n\
  \  --[no]entropy          involve entropy in filtering high scoring pairs\n    \
  \                     (default is \"entropy\")\n  --nomirror             don't report\
  \ mirror-image alignments when using --self\n                         (default is\
  \ to skip processing them, but recreate them\n                         in the output)\n\
  \  --allocate:traceback=<bytes>  space for trace-back information\n            \
  \             (default is 80.0M)\n  --maxwordcount=<limit>[%] limit seed word-repeats\
  \ in target\n                         words occurring too often are not used in\
  \ seed hits\n                         (default is no word-repeat limit)\n  --masking=<count>\
  \      mask any position in target hit this many times\n                       \
  \  zero indicates no masking\n                         (default is no masking)\n\
  \  --outputmasking=<file> report masked intervals (from --masking) to a file\n \
  \                        (default is to not report masked intervals)\n  --outputmasking+=<file>\
  \ report masked intervals (from --masking), including\n                        \
  \ sequence name, to a file\n  --outputmasking:soft=<file> report masked intervals\
  \ in the target to a file\n                         (default is to not report masked\
  \ intervals)\n  --outputmasking+:soft=<file> report masked intervals in the target,\
  \ including\n                         sequence name, to a file\n  --[no]census[=<file>]\
  \  count/report how many times each target base aligns\n                       \
  \  (default is to not report census)\n  --identity=<min>[..<max>] filter alignments\
  \ by percent identity\n                         0<=min<=max<=100;  blocks (or HSPs)\
  \ outside min..max\n                         are discarded\n                   \
  \      (default is no identity filtering)\n  --coverage=<min>[..<max>] filter alignments\
  \ by percentage of query covered\n                         0<=min<=max<=100;  blocks\
  \ (or HSPs) outside min..max\n                         are discarded\n         \
  \                (default is no query coverage filtering)\n  --continuity=<min>[..<max>]\
  \ filter alignments by percent continuity\n                         0<=min<=max<=100;\
  \  blocks (or HSPs) outside min..max\n                         are discarded\n \
  \                        (default is no continuity filtering)\n  --filter=nmatch:<min>\
  \  filter alignments by match-count\n                         0<min;  blocks (or\
  \ HSPs) with fewer than min matched\n                         bases are discarded\n\
  \                         (default is no match-count filtering)\n  --filter=nmismatch:0..<max>\
  \ filter alignments by mismatch-count\n                         0<min;  blocks (or\
  \ HSPs) with more than max mismatched\n                         bases are discarded\n\
  \                         (default is no mismatch-count filtering)\n  --filter=ngap:0..<max>\
  \ filter alignments by gap-count\n                         0<min;  blocks (or HSPs)\
  \ with more than max gaps\n                         are discarded, where any run\
  \ of gapped columns is\n                         counted as one gap\n          \
  \               (default is no gap-count filtering)\n  --filter=cgap:0..<max> filter\
  \ alignments by gap-count\n                         0<min;  blocks (or HSPs) with\
  \ more than max gaps\n                         are discarded, where any gapped columns\
  \ is counted\n                         as one gap\n                         (default\
  \ is no gap-count filtering)\n  --output=<file>        specify output alignment\
  \ file;  otherwise alignments\n                         are written to stdout\n\
  \  --format=<type>        specify output format; one of lav, axt, maf, cigar,\n\
  \                         rdotplot, text or general\n                         (use\
  \ --help=formats for more details)\n                         (by default output\
  \ is LAV)\n  --readgroup=<tags>     specify readgroup tags for SAM format\n    \
  \                     (use --help=formats for more details)\n  --markend       \
  \       Write a comment at the end of the output file\n  --rdotplot=<file>     \
  \ create an output file suitable for plotting in R.\n  --verbosity=<level>    set\
  \ info level (0 is minimum, 10 is everything)\n                         (default\
  \ is 0)\n  --[no]runtime          report runtime in the output file\n          \
  \               (default is to not report runtime)\n  --tableonly[=count]    just\
  \ produce the target position table, don't\n                         search for\
  \ seeds\n  --writesegments=<file> just produce the anchor segments table, don't\n\
  \                         perform gapped alignment\n  --writecapsule=<file>  write\
  \ the target and seed word table to a file\n  --targetcapsule=<file> read the target\
  \ seed word table from a file\n                         (this replaces the target\
  \ specifier)\n  --progress=<n>         report processing of every nth query\n  --progress+masking=<n>\
  \ report processing of every nth query, and include\n                         masking\
  \ stats (useful with --masking)\n  --version              report the program version\
  \ and quit\n  --help                 list all options\n  --help=files          \
  \ list information about file specifiers\n  --help=formats         list information\
  \ about output file formats\n  --help=shortcuts       list blastz-compatible shortcuts\n\
  \  --help=defaults        list scoring defaults for your current settings\n  --help=yasra\
  \           list yasra-specific shortcuts\n"
generated_using:
- --help
docker_image:
