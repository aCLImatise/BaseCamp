!Command
command:
- cPecanRealign
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --logLevel
  description: ': Set the log level'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  - --gapGamma
  description: ': (float >= 0) The gap gamma (as in the AMAP function)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  - --matchGamma
  description: ': (float [0, 1]) The match gamma (the avg. weight or greater to be
    allowed in the alignment)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --splitMatrixBiggerThanThis
  description: ': (int >= 0)  No dp matrix bigger than this number squared will be
    computed.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --diagonalExpansion
  description: ': (int >= 0 and even) Number of x-y diagonals to expand around anchors'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --constraintDiagonalTrim
  description: ': (int >= 0) Amount to trim from ends of each anchor'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  - --alignAmbiguityCharacters
  description: ': Align ambiguity characters (anything not ACTGactg) as a wildcard'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  - --rescoreOriginalAlignment
  description: ': Rescore the original alignment. The output cigar is the same alignment.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --rescoreByIdentity
  description: ': Set score equal to alignment identity, treating indels as mismatches.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  - --rescoreByPosteriorProb
  description: ': Set score equal to avg. posterior match probability, treating indels
    as residues with 0 match probability.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  - --rescoreByIdentityIgnoringGaps
  description: ': Set score equal to alignment identity, ignoring indels.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  - --rescoreByPosteriorProbIgnoringGaps
  description: ': Set score equal to avg. posterior match probability, ignoring gaps.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --splitIndelsLongerThanThis
  description: ': Split alignments with consecutive runs of indels that are longer
    than this.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  - --outputPosteriorProbs
  description: '[FILE] : Outputs the posterior match probs of positions in the alignment
    to the given tab separated file, each line being X-coordinate, Y-coordinate, posterior-match
    prob.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --outputAllPosteriorProbs
  description: '[FILE] : As --outputPosteriorProbs, but for all pairs in the banded
    alignment'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --outputExpectations
  description: '[FILE] : Instead of realigning, switches to calculating expectations,
    dumping out expectations as matrix in the given file.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -y
  - --loadHmm
  description: '[FILE] : Loads HMM from given file.'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: ': Print this help screen'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "cPecanRelign [options] seq1[fasta] seq2[fasta], version 0.2\nRealigns\
  \ a set of pairwise alignments, as cigars, read from the command line and written\
  \ back to the command line\n-a --logLevel : Set the log level\n-l --gapGamma : (float\
  \ >= 0) The gap gamma (as in the AMAP function)\n-L --matchGamma : (float [0, 1])\
  \ The match gamma (the avg. weight or greater to be allowed in the alignment)\n\
  -o --splitMatrixBiggerThanThis : (int >= 0)  No dp matrix bigger than this number\
  \ squared will be computed.\n-r --diagonalExpansion : (int >= 0 and even) Number\
  \ of x-y diagonals to expand around anchors\n-t --constraintDiagonalTrim : (int\
  \ >= 0) Amount to trim from ends of each anchor\n-w --alignAmbiguityCharacters :\
  \ Align ambiguity characters (anything not ACTGactg) as a wildcard\n-x --rescoreOriginalAlignment\
  \ : Rescore the original alignment. The output cigar is the same alignment.\n-i\
  \ --rescoreByIdentity : Set score equal to alignment identity, treating indels as\
  \ mismatches.\n-j --rescoreByPosteriorProb : Set score equal to avg. posterior match\
  \ probability, treating indels as residues with 0 match probability.\n-k --rescoreByIdentityIgnoringGaps\
  \ : Set score equal to alignment identity, ignoring indels.\n-m --rescoreByPosteriorProbIgnoringGaps\
  \ : Set score equal to avg. posterior match probability, ignoring gaps.\n-h --help\
  \ : Print this help screen\n-s --splitIndelsLongerThanThis : Split alignments with\
  \ consecutive runs of indels that are longer than this.\n-u --outputPosteriorProbs\
  \ [FILE] : Outputs the posterior match probs of positions in the alignment to the\
  \ given tab separated file, each line being X-coordinate, Y-coordinate, posterior-match\
  \ prob.\n-z --outputAllPosteriorProbs [FILE] : As --outputPosteriorProbs, but for\
  \ all pairs in the banded alignment\n-v --outputExpectations [FILE] : Instead of\
  \ realigning, switches to calculating expectations, dumping out expectations as\
  \ matrix in the given file.\n-y --loadHmm [FILE] : Loads HMM from given file.\n"
generated_using:
- --help
docker_image:
