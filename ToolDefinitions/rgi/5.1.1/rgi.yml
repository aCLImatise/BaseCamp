!Command
command: &id001
- rgi
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - rgi
  - tab
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --afile
    description: "must be a rgi json result file\n"
    args: !SimpleFlagArg
      name: AFILE
  parent: &id032 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --afile
        description: "must be a rgi json result file\n"
        args: !SimpleFlagArg
          name: AFILE
      parent: &id030 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --afile
            description: "must be a rgi json result file\n"
            args: !SimpleFlagArg
              name: AFILE
          parent: &id028 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --afile
                description: "must be a rgi json result file\n"
                args: !SimpleFlagArg
                  name: AFILE
              parent: &id026 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --afile
                    description: "must be a rgi json result file\n"
                    args: !SimpleFlagArg
                      name: AFILE
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named: []
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --afile
                        description: "must be a rgi json result file\n"
                        args: !SimpleFlagArg
                          name: AFILE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene\
                        \ Identifier - 5.1.1 - Tab-delimited\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -i AFILE, --afile AFILE\n                        must be\
                        \ a rgi json result file\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id006
                      - rgi
                      - kmer_query
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: rgi
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: '[--local] [--debug]'
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input
                        description: "Input file (bam file from RGI*BWT, json file\
                          \ of RGI\nresults, fasta file of sequences)"
                        args: !SimpleFlagArg
                          name: INPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - --bwt
                        description: "Specify if the input file for analysis is a\
                          \ bam file\ngenerated from RGI*BWT"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --rgi
                        description: Specify if the input file is a RGI results json
                          file
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --fasta
                        description: Specify if the input file is a fasta file of
                          sequences
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -k
                        - --kmer_size
                        description: length of k
                        args: !SimpleFlagArg
                          name: K
                      - !Flag
                        optional: true
                        synonyms:
                        - -m
                        - --minimum
                        description: "Minimum number of kmers in the called category\
                          \ for the\nclassification to be made (default=10)."
                        args: !SimpleFlagArg
                          name: MIN
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --threads
                        description: number of threads (CPUs) to use (default=1)
                        args: !SimpleFlagArg
                          name: THREADS
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Output file name.
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - --local
                        description: "use local database (default: uses database in\n\
                          executable directory)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta]\
                        \ -k K [-m MIN] [-n THREADS]\n           -o OUTPUT [--local]\
                        \ [--debug]\n\nTests sequenes using CARD*kmers\n\noptional\
                        \ arguments:\n  -h, --help            show this help message\
                        \ and exit\n  -i INPUT, --input INPUT\n                  \
                        \      Input file (bam file from RGI*BWT, json file of RGI\n\
                        \                        results, fasta file of sequences)\n\
                        \  --bwt                 Specify if the input file for analysis\
                        \ is a bam file\n                        generated from RGI*BWT\n\
                        \  --rgi                 Specify if the input file is a RGI\
                        \ results json file\n  --fasta               Specify if the\
                        \ input file is a fasta file of sequences\n  -k K, --kmer_size\
                        \ K   length of k\n  -m MIN, --minimum MIN\n             \
                        \           Minimum number of kmers in the called category\
                        \ for the\n                        classification to be made\
                        \ (default=10).\n  -n THREADS, --threads THREADS\n       \
                        \                 number of threads (CPUs) to use (default=1)\n\
                        \  -o OUTPUT, --output OUTPUT\n                        Output\
                        \ file name.\n  --local               use local database (default:\
                        \ uses database in\n                        executable directory)\n\
                        \  --debug               debug mode\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - rgi
                      - load
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --card_json
                        description: must be a card database json file
                        args: !SimpleFlagArg
                          name: CARD_JSON
                      - !Flag
                        optional: true
                        synonyms:
                        - --card_annotation
                        description: annotated reference FASTA
                        args: !SimpleFlagArg
                          name: CARD_ANNOTATION
                      - !Flag
                        optional: true
                        synonyms:
                        - --wildcard_annotation
                        description: annotated reference FASTA
                        args: !SimpleFlagArg
                          name: WILDCARD_ANNOTATION
                      - !Flag
                        optional: true
                        synonyms:
                        - --wildcard_index
                        description: wildcard index file (index-for-model-sequences.txt)
                        args: !SimpleFlagArg
                          name: WILDCARD_INDEX
                      - !Flag
                        optional: true
                        synonyms:
                        - --wildcard_version
                        description: specify variants version used
                        args: !SimpleFlagArg
                          name: WILDCARD_VERSION
                      - !Flag
                        optional: true
                        synonyms:
                        - --baits_annotation
                        description: annotated reference FASTA
                        args: !SimpleFlagArg
                          name: BAITS_ANNOTATION
                      - !Flag
                        optional: true
                        synonyms:
                        - --baits_index
                        description: baits index file (baits-probes-with-sequence-info.txt)
                        args: !SimpleFlagArg
                          name: BAITS_INDEX
                      - !Flag
                        optional: true
                        synonyms:
                        - --kmer_database
                        description: json of kmer database
                        args: !SimpleFlagArg
                          name: KMER_DATABASE
                      - !Flag
                        optional: true
                        synonyms:
                        - --amr_kmers
                        description: txt file of all amr kmers
                        args: !SimpleFlagArg
                          name: AMR_KMERS
                      - !Flag
                        optional: true
                        synonyms:
                        - --kmer_size
                        description: kmer size if loading kmer files
                        args: !SimpleFlagArg
                          name: KMER_SIZE
                      - !Flag
                        optional: true
                        synonyms:
                        - --local
                        description: "use local database (default: uses database in\n\
                          executable directory)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation\
                        \ CARD_ANNOTATION]\n                [--wildcard_annotation\
                        \ WILDCARD_ANNOTATION]\n                [--wildcard_index\
                        \ WILDCARD_INDEX]\n                [--wildcard_version WILDCARD_VERSION]\n\
                        \                [--baits_annotation BAITS_ANNOTATION]\n \
                        \               [--baits_index BAITS_INDEX] [--kmer_database\
                        \ KMER_DATABASE]\n                [--amr_kmers AMR_KMERS]\
                        \ [--kmer_size KMER_SIZE] [--local]\n                [--debug]\n\
                        \nResistance Gene Identifier - 5.1.1 - Load\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -i CARD_JSON, --card_json CARD_JSON\n                 \
                        \       must be a card database json file\n  --card_annotation\
                        \ CARD_ANNOTATION\n                        annotated reference\
                        \ FASTA\n  --wildcard_annotation WILDCARD_ANNOTATION\n   \
                        \                     annotated reference FASTA\n  --wildcard_index\
                        \ WILDCARD_INDEX\n                        wildcard index file\
                        \ (index-for-model-sequences.txt)\n  --wildcard_version WILDCARD_VERSION\n\
                        \                        specify variants version used\n \
                        \ --baits_annotation BAITS_ANNOTATION\n                  \
                        \      annotated reference FASTA\n  --baits_index BAITS_INDEX\n\
                        \                        baits index file (baits-probes-with-sequence-info.txt)\n\
                        \  --kmer_database KMER_DATABASE\n                       \
                        \ json of kmer database\n  --amr_kmers AMR_KMERS\n       \
                        \                 txt file of all amr kmers\n  --kmer_size\
                        \ KMER_SIZE\n                        kmer size if loading\
                        \ kmer files\n  --local               use local database (default:\
                        \ uses database in\n                        executable directory)\n\
                        \  --debug               debug mode\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - rgi
                      - galaxy
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --galaxy_database
                        description: path to CARD data and blast databases
                        args: !SimpleFlagArg
                          name: GALAXY_DATABASE
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE\
                        \ [--debug]\n\nResistance Gene Identifier - 5.1.1 - Galaxy\
                        \ project wrapper\n\noptional arguments:\n  -h, --help   \
                        \         show this help message and exit\n  --galaxy_database\
                        \ GALAXY_DATABASE\n                        path to CARD data\
                        \ and blast databases\n  --debug               debug mode\n\
                        \nGALAXY_DATABASE must contain the following: data files (card.json,\n\
                        proteindb.fsa),diamond blast database (protein.db.dmnd), ncbi\
                        \ blast database\n(protein.db.phr, protein.db.pin, protein.db.psq)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id009
                      - rgi
                      - card_annotation
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input
                        description: card.json file
                        args: !SimpleFlagArg
                          name: INPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - --ncbi
                        description: adds ncbi accession to FASTA headers
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\
                        \nCreates card annotations for RGI BWT from card.json\n\n\
                        optional arguments:\n  -h, --help            show this help\
                        \ message and exit\n  -i INPUT, --input INPUT\n          \
                        \              card.json file\n  --ncbi                adds\
                        \ ncbi accession to FASTA headers\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id010
                      - rgi
                      - tm
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: input_file
                        description: -o OUTPUT_FILE, --output_file OUTPUT_FILE
                      - !Positional
                        optional: false
                        position: 1
                        name: output_file
                        description: -t FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input_file
                        description: ''
                        args: !SimpleFlagArg
                          name: INPUT_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --clean
                        description: removes temporary files
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: ''
                        args: !SimpleFlagArg
                          name: FILTER_TEMPERATURE
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: ''
                        args: !SimpleFlagArg
                          name: OUTPUT_FILE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE]\
                        \ [-t FILTER_TEMPERATURE]\n              [--clean] [--debug]\n\
                        \nTM\n\noptional arguments:\n  -h, --help            show\
                        \ this help message and exit\n  -i INPUT_FILE, --input_file\
                        \ INPUT_FILE\n                        input_file\n  -o OUTPUT_FILE,\
                        \ --output_file OUTPUT_FILE\n                        output_file\n\
                        \  -t FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE\n\
                        \                        desired melting temperature (default=65).\n\
                        \  --clean               removes temporary files\n  --debug\
                        \               debug mode\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id011
                      - rgi
                      - kmer_build
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: sequences.
                        description: -n THREADS, --threads THREADS
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input_directory
                        description: input directory of prevalence data
                        args: !SimpleFlagArg
                          name: INPUT_DIRECTORY
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        - --card
                        description: "fasta file of CARD reference sequences. If missing,\n\
                          run 'rgi card_annotation' to generate."
                        args: !SimpleFlagArg
                          name: CARD_FASTA
                      - !Flag
                        optional: true
                        synonyms:
                        - -k
                        description: k-mer size (e.g., 61)
                        args: !SimpleFlagArg
                          name: K
                      - !Flag
                        optional: true
                        synonyms:
                        - --skip
                        description: skips the concatenation and splitting of the
                          CARD*R*V
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --batch_size
                        description: "number of kmers to query at a time using pyahocorasick\n\
                          --the greater the number the more memory usage\n(default=100,000)\n"
                        args: !SimpleFlagArg
                          name: BATCH_SIZE
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        description: ''
                        args: !SimpleFlagArg
                          name: THREADS
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA\
                        \ -k K [--skip] [-n THREADS]\n           [--batch_size BATCH_SIZE]\n\
                        \nBuilds the kmer sets for CARD*kmers\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n\
                        \                        input directory of prevalence data\n\
                        \  -c CARD_FASTA, --card CARD_FASTA\n                    \
                        \    fasta file of CARD reference sequences. If missing,\n\
                        \                        run 'rgi card_annotation' to generate.\n\
                        \  -k K                  k-mer size (e.g., 61)\n  --skip \
                        \               skips the concatenation and splitting of the\
                        \ CARD*R*V\n                        sequences.\n  -n THREADS,\
                        \ --threads THREADS\n                        number of threads\
                        \ (CPUs) to use (default=1)\n  --batch_size BATCH_SIZE\n \
                        \                       number of kmers to query at a time\
                        \ using pyahocorasick\n                        --the greater\
                        \ the number the more memory usage\n                     \
                        \   (default=100,000)\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id012
                      - rgi
                      - baits_annotation
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --index_file
                        description: "index file with baits information\n"
                        args: !SimpleFlagArg
                          name: INDEX_FILE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\
                        \nCreates baits annotations for RGI BWT from baits\n\noptional\
                        \ arguments:\n  -h, --help            show this help message\
                        \ and exit\n  --index_file INDEX_FILE\n                  \
                        \      index file with baits information\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id013
                      - rgi
                      - heatmap
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input
                        description: Directory containing the RGI .json files (REQUIRED)
                        args: !SimpleFlagArg
                          name: INPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - -cat
                        - --category
                        description: "The option to organize resistance genes based\
                          \ on a\ncategory."
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? gene_family
                            ? resistance_mechanism
                            ? drug_class
                      - !Flag
                        optional: true
                        synonyms:
                        - -f
                        - --frequency
                        description: Represent samples based on resistance profile.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: "Name for the output EPS and PNG files. The number\
                          \ of\nfiles run will automatically be appended to the end\
                          \ of\nthe file name. (default=RGI_heatmap)"
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - -clus
                        - --cluster
                        description: "Option to use SciPy's hiearchical clustering\
                          \ algorithm\nto cluster rows (AMR genes) or columns (samples)."
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? both
                            ? genes
                            ? samples
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --display
                        description: "Specify display options for categories\n(deafult=plain)."
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? fill
                            ? plain
                            ? text
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi heatmap [-h] -i INPUT\n             \
                        \      [-cat {drug_class,resistance_mechanism,gene_family}]\
                        \ [-f]\n                   [-o OUTPUT] [-clus {samples,genes,both}]\n\
                        \                   [-d {plain,fill,text}] [--debug]\n\nCreates\
                        \ a heatmap when given multiple RGI results.\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -i INPUT, --input INPUT\n                        Directory\
                        \ containing the RGI .json files (REQUIRED)\n  -cat {drug_class,resistance_mechanism,gene_family},\
                        \ --category {drug_class,resistance_mechanism,gene_family}\n\
                        \                        The option to organize resistance\
                        \ genes based on a\n                        category.\n  -f,\
                        \ --frequency       Represent samples based on resistance\
                        \ profile.\n  -o OUTPUT, --output OUTPUT\n               \
                        \         Name for the output EPS and PNG files. The number\
                        \ of\n                        files run will automatically\
                        \ be appended to the end of\n                        the file\
                        \ name. (default=RGI_heatmap)\n  -clus {samples,genes,both},\
                        \ --cluster {samples,genes,both}\n                       \
                        \ Option to use SciPy's hiearchical clustering algorithm\n\
                        \                        to cluster rows (AMR genes) or columns\
                        \ (samples).\n  -d {plain,fill,text}, --display {plain,fill,text}\n\
                        \                        Specify display options for categories\n\
                        \                        (deafult=plain).\n  --debug     \
                        \          debug mode\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id014
                      - rgi
                      - remove_duplicates
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input
                        description: input fasta file
                        args: !SimpleFlagArg
                          name: INPUT_FASTA_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --card_annotation
                        description: card_annotation input fasta file
                        args: !SimpleFlagArg
                          name: CARD_ANNOTATION
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: output fasta file
                        args: !SimpleFlagArg
                          name: OUTPUT_FASTA_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE\
                        \ --card_annotation\n                             CARD_ANNOTATION\
                        \ -o OUTPUT_FASTA_FILE [--debug]\n\nRemoves duplicates sequences\
                        \ from annotationed fasta file\n\noptional arguments:\n  -h,\
                        \ --help            show this help message and exit\n  -i\
                        \ INPUT_FASTA_FILE, --input INPUT_FASTA_FILE\n           \
                        \             input fasta file\n  --card_annotation CARD_ANNOTATION\n\
                        \                        card_annotation input fasta file\n\
                        \  -o OUTPUT_FASTA_FILE, --output OUTPUT_FASTA_FILE\n    \
                        \                    output fasta file\n  --debug        \
                        \       debug mode\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id015
                      - rgi
                      - Metagenomic
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: Database
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: load
                        description: Loads CARD database, annotations and k-mer database
                      - !Positional
                        optional: false
                        position: 2
                        name: clean
                        description: Removes BLAST databases and temporary files
                      - !Positional
                        optional: false
                        position: 0
                        name: galaxy
                        description: Galaxy project wrapper
                      - !Positional
                        optional: false
                        position: 0
                        name: Genomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: main
                        description: Runs rgi application
                      - !Positional
                        optional: false
                        position: 2
                        name: tab
                        description: Creates a Tab-delimited from rgi results
                      - !Positional
                        optional: false
                        position: 3
                        name: parser
                        description: Creates categorical JSON files RGI wheel visualization
                      - !Positional
                        optional: false
                        position: 4
                        name: heatmap
                        description: Heatmap for multiple analysis
                      - !Positional
                        optional: false
                        position: 0
                        name: Metagenomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: bwt
                        description: Align reads to CARD and in silico predicted allelic
                          variants (beta)
                      - !Positional
                        optional: false
                        position: 0
                        name: tm
                        description: Baits Melting Temperature
                      - !Positional
                        optional: false
                        position: 0
                        name: Annotations
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: card_annotation
                        description: Create fasta files with annotations from card.json
                      - !Positional
                        optional: false
                        position: 2
                        name: wildcard_annotation
                        description: Create fasta files with annotations from variants
                      - !Positional
                        optional: false
                        position: 3
                        name: baits_annotation
                        description: Create fasta files with annotations from baits
                          (experimental)
                      - !Positional
                        optional: false
                        position: 4
                        name: remove_duplicates
                        description: Removes duplicate sequences (experimental)
                      - !Positional
                        optional: false
                        position: 0
                        name: kmer_build
                        description: Build AMR specific k-mers database used for pathogen
                          of origin (beta)
                      - !Positional
                        optional: false
                        position: 1
                        name: kmer_query
                        description: Query sequences against AMR k-mers database to
                          predict pathogen of origin (beta)
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi <command> [<args>]\n            commands\
                        \ are:\n               ---------------------------------------------------------------------------------------\n\
                        \               Database\n               ---------------------------------------------------------------------------------------\n\
                        \n               load     Loads CARD database, annotations\
                        \ and k-mer database\n               clean    Removes BLAST\
                        \ databases and temporary files\n               database Information\
                        \ on installed card database\n               galaxy   Galaxy\
                        \ project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                        \n               main     Runs rgi application\n         \
                        \      tab      Creates a Tab-delimited from rgi results\n\
                        \               parser   Creates categorical JSON files RGI\
                        \ wheel visualization\n               heatmap  Heatmap for\
                        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                        \               bwt                   Align reads to CARD\
                        \ and in silico predicted allelic variants (beta)\n      \
                        \         \n               ---------------------------------------------------------------------------------------\n\
                        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                        \               tm                    Baits Melting Temperature\n\
                        \n               ---------------------------------------------------------------------------------------\n\
                        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                        \               card_annotation       Create fasta files with\
                        \ annotations from card.json\n               wildcard_annotation\
                        \   Create fasta files with annotations from variants\n  \
                        \             baits_annotation      Create fasta files with\
                        \ annotations from baits (experimental)\n               remove_duplicates\
                        \     Removes duplicate sequences (experimental)\n\n     \
                        \          ---------------------------------------------------------------------------------------\n\
                        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                        \               \n               kmer_build            Build\
                        \ AMR specific k-mers database used for pathogen of origin\
                        \ (beta)\n               kmer_query            Query sequences\
                        \ against AMR k-mers database to predict pathogen of origin\
                        \ (beta)\n\n               \nrgi: error: argument command:\
                        \ invalid choice: 'Metagenomic' (choose from 'main', 'tab',\
                        \ 'parser', 'load', 'clean', 'galaxy', 'database', 'bwt',\
                        \ 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation',\
                        \ 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id016
                      - rgi
                      - Annotations
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: Database
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: load
                        description: Loads CARD database, annotations and k-mer database
                      - !Positional
                        optional: false
                        position: 2
                        name: clean
                        description: Removes BLAST databases and temporary files
                      - !Positional
                        optional: false
                        position: 0
                        name: galaxy
                        description: Galaxy project wrapper
                      - !Positional
                        optional: false
                        position: 0
                        name: Genomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: main
                        description: Runs rgi application
                      - !Positional
                        optional: false
                        position: 2
                        name: tab
                        description: Creates a Tab-delimited from rgi results
                      - !Positional
                        optional: false
                        position: 3
                        name: parser
                        description: Creates categorical JSON files RGI wheel visualization
                      - !Positional
                        optional: false
                        position: 4
                        name: heatmap
                        description: Heatmap for multiple analysis
                      - !Positional
                        optional: false
                        position: 0
                        name: Metagenomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: bwt
                        description: Align reads to CARD and in silico predicted allelic
                          variants (beta)
                      - !Positional
                        optional: false
                        position: 0
                        name: tm
                        description: Baits Melting Temperature
                      - !Positional
                        optional: false
                        position: 0
                        name: Annotations
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: card_annotation
                        description: Create fasta files with annotations from card.json
                      - !Positional
                        optional: false
                        position: 2
                        name: wildcard_annotation
                        description: Create fasta files with annotations from variants
                      - !Positional
                        optional: false
                        position: 3
                        name: baits_annotation
                        description: Create fasta files with annotations from baits
                          (experimental)
                      - !Positional
                        optional: false
                        position: 4
                        name: remove_duplicates
                        description: Removes duplicate sequences (experimental)
                      - !Positional
                        optional: false
                        position: 0
                        name: kmer_build
                        description: Build AMR specific k-mers database used for pathogen
                          of origin (beta)
                      - !Positional
                        optional: false
                        position: 1
                        name: kmer_query
                        description: Query sequences against AMR k-mers database to
                          predict pathogen of origin (beta)
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi <command> [<args>]\n            commands\
                        \ are:\n               ---------------------------------------------------------------------------------------\n\
                        \               Database\n               ---------------------------------------------------------------------------------------\n\
                        \n               load     Loads CARD database, annotations\
                        \ and k-mer database\n               clean    Removes BLAST\
                        \ databases and temporary files\n               database Information\
                        \ on installed card database\n               galaxy   Galaxy\
                        \ project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                        \n               main     Runs rgi application\n         \
                        \      tab      Creates a Tab-delimited from rgi results\n\
                        \               parser   Creates categorical JSON files RGI\
                        \ wheel visualization\n               heatmap  Heatmap for\
                        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                        \               bwt                   Align reads to CARD\
                        \ and in silico predicted allelic variants (beta)\n      \
                        \         \n               ---------------------------------------------------------------------------------------\n\
                        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                        \               tm                    Baits Melting Temperature\n\
                        \n               ---------------------------------------------------------------------------------------\n\
                        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                        \               card_annotation       Create fasta files with\
                        \ annotations from card.json\n               wildcard_annotation\
                        \   Create fasta files with annotations from variants\n  \
                        \             baits_annotation      Create fasta files with\
                        \ annotations from baits (experimental)\n               remove_duplicates\
                        \     Removes duplicate sequences (experimental)\n\n     \
                        \          ---------------------------------------------------------------------------------------\n\
                        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                        \               \n               kmer_build            Build\
                        \ AMR specific k-mers database used for pathogen of origin\
                        \ (beta)\n               kmer_query            Query sequences\
                        \ against AMR k-mers database to predict pathogen of origin\
                        \ (beta)\n\n               \nrgi: error: argument command:\
                        \ invalid choice: 'Annotations' (choose from 'main', 'tab',\
                        \ 'parser', 'load', 'clean', 'galaxy', 'database', 'bwt',\
                        \ 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation',\
                        \ 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id017
                      - rgi
                      - wildcard_annotation
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input_directory
                        description: input directory for wildcard
                        args: !SimpleFlagArg
                          name: INPUT_DIRECTORY
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        - --card_json
                        description: "card.json file\n"
                        args: !SimpleFlagArg
                          name: CARD_JSON
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        description: ''
                        args: !SimpleFlagArg
                          name: VERSION
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --version
                        description: specify version downloaded for wildcard / variants
                        args: !SimpleFlagArg
                          name: VERSION
                      help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY\
                        \ -v VERSION -j CARD_JSON\n\nCreates card annotations for\
                        \ RGI BWT from Variants or Wilcard data\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n\
                        \                        input directory for wildcard\n  -v\
                        \ VERSION, --version VERSION\n                        specify\
                        \ version downloaded for wildcard / variants\n  -j CARD_JSON,\
                        \ --card_json CARD_JSON\n                        card.json\
                        \ file\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id018
                      - rgi
                      - bwt
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: aligner
                        description: -n THREADS, --threads THREADS
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - '-1'
                        - --read_one
                        description: raw read one (qc and trimmied)
                        args: !SimpleFlagArg
                          name: READ_ONE
                      - !Flag
                        optional: true
                        synonyms:
                        - '-2'
                        - --read_two
                        description: raw read two (qc and trimmied)
                        args: !SimpleFlagArg
                          name: READ_TWO
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --aligner
                        description: ''
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? bwa
                            ? kma
                            ? bowtie2
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output_file
                        description: name of output filename(s)
                        args: !SimpleFlagArg
                          name: OUTPUT_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --clean
                        description: removes temporary files
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --local
                        description: "use local database (default: uses database in\n\
                          executable directory)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --include_wildcard
                        description: include wildcard
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --include_baits
                        description: include baits
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --mapq
                        description: filter reads based on MAPQ score
                        args: !SimpleFlagArg
                          name: MAPQ
                      - !Flag
                        optional: true
                        synonyms:
                        - --mapped
                        description: filter reads based on mapped reads
                        args: !SimpleFlagArg
                          name: MAPPED
                      - !Flag
                        optional: true
                        synonyms:
                        - --coverage
                        description: filter reads based on coverage of reference sequence
                        args: !SimpleFlagArg
                          name: COVERAGE
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a\
                        \ {bowtie2,bwa,kma}]\n               [-n THREADS] -o OUTPUT_FILE\
                        \ [--debug] [--clean] [--local]\n               [--include_wildcard]\
                        \ [--include_baits] [--mapq MAPQ]\n               [--mapped\
                        \ MAPPED] [--coverage COVERAGE]\n\nAligns metagenomic reads\
                        \ to CARD and wildCARD reference using bowtie or bwa\nand\
                        \ provide reports.\n\noptional arguments:\n  -h, --help  \
                        \          show this help message and exit\n  -1 READ_ONE,\
                        \ --read_one READ_ONE\n                        raw read one\
                        \ (qc and trimmied)\n  -2 READ_TWO, --read_two READ_TWO\n\
                        \                        raw read two (qc and trimmied)\n\
                        \  -a {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n   \
                        \                     aligner\n  -n THREADS, --threads THREADS\n\
                        \                        number of threads (CPUs) to use (default=8)\n\
                        \  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n           \
                        \             name of output filename(s)\n  --debug      \
                        \         debug mode\n  --clean               removes temporary\
                        \ files\n  --local               use local database (default:\
                        \ uses database in\n                        executable directory)\n\
                        \  --include_wildcard    include wildcard\n  --include_baits\
                        \       include baits\n  --mapq MAPQ           filter reads\
                        \ based on MAPQ score\n  --mapped MAPPED       filter reads\
                        \ based on mapped reads\n  --coverage COVERAGE   filter reads\
                        \ based on coverage of reference sequence\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id019
                      - rgi
                      - Genomic
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: Database
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: load
                        description: Loads CARD database, annotations and k-mer database
                      - !Positional
                        optional: false
                        position: 2
                        name: clean
                        description: Removes BLAST databases and temporary files
                      - !Positional
                        optional: false
                        position: 0
                        name: galaxy
                        description: Galaxy project wrapper
                      - !Positional
                        optional: false
                        position: 0
                        name: Genomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: main
                        description: Runs rgi application
                      - !Positional
                        optional: false
                        position: 2
                        name: tab
                        description: Creates a Tab-delimited from rgi results
                      - !Positional
                        optional: false
                        position: 3
                        name: parser
                        description: Creates categorical JSON files RGI wheel visualization
                      - !Positional
                        optional: false
                        position: 4
                        name: heatmap
                        description: Heatmap for multiple analysis
                      - !Positional
                        optional: false
                        position: 0
                        name: Metagenomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: bwt
                        description: Align reads to CARD and in silico predicted allelic
                          variants (beta)
                      - !Positional
                        optional: false
                        position: 0
                        name: tm
                        description: Baits Melting Temperature
                      - !Positional
                        optional: false
                        position: 0
                        name: Annotations
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: card_annotation
                        description: Create fasta files with annotations from card.json
                      - !Positional
                        optional: false
                        position: 2
                        name: wildcard_annotation
                        description: Create fasta files with annotations from variants
                      - !Positional
                        optional: false
                        position: 3
                        name: baits_annotation
                        description: Create fasta files with annotations from baits
                          (experimental)
                      - !Positional
                        optional: false
                        position: 4
                        name: remove_duplicates
                        description: Removes duplicate sequences (experimental)
                      - !Positional
                        optional: false
                        position: 0
                        name: kmer_build
                        description: Build AMR specific k-mers database used for pathogen
                          of origin (beta)
                      - !Positional
                        optional: false
                        position: 1
                        name: kmer_query
                        description: Query sequences against AMR k-mers database to
                          predict pathogen of origin (beta)
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi <command> [<args>]\n            commands\
                        \ are:\n               ---------------------------------------------------------------------------------------\n\
                        \               Database\n               ---------------------------------------------------------------------------------------\n\
                        \n               load     Loads CARD database, annotations\
                        \ and k-mer database\n               clean    Removes BLAST\
                        \ databases and temporary files\n               database Information\
                        \ on installed card database\n               galaxy   Galaxy\
                        \ project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                        \n               main     Runs rgi application\n         \
                        \      tab      Creates a Tab-delimited from rgi results\n\
                        \               parser   Creates categorical JSON files RGI\
                        \ wheel visualization\n               heatmap  Heatmap for\
                        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                        \               bwt                   Align reads to CARD\
                        \ and in silico predicted allelic variants (beta)\n      \
                        \         \n               ---------------------------------------------------------------------------------------\n\
                        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                        \               tm                    Baits Melting Temperature\n\
                        \n               ---------------------------------------------------------------------------------------\n\
                        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                        \               card_annotation       Create fasta files with\
                        \ annotations from card.json\n               wildcard_annotation\
                        \   Create fasta files with annotations from variants\n  \
                        \             baits_annotation      Create fasta files with\
                        \ annotations from baits (experimental)\n               remove_duplicates\
                        \     Removes duplicate sequences (experimental)\n\n     \
                        \          ---------------------------------------------------------------------------------------\n\
                        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                        \               \n               kmer_build            Build\
                        \ AMR specific k-mers database used for pathogen of origin\
                        \ (beta)\n               kmer_query            Query sequences\
                        \ against AMR k-mers database to predict pathogen of origin\
                        \ (beta)\n\n               \nrgi: error: argument command:\
                        \ invalid choice: 'Genomic' (choose from 'main', 'tab', 'parser',\
                        \ 'load', 'clean', 'galaxy', 'database', 'bwt', 'tm', 'card_annotation',\
                        \ 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                        \ 'heatmap', 'kmer_build', 'kmer_query')\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id020
                      - rgi
                      - clean
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --local
                        description: "use local database (default: uses database in\
                          \ executable\ndirectory)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance\
                        \ Gene Identifier - 5.1.1 - Clean\n\noptional arguments:\n\
                        \  -h, --help  show this help message and exit\n  --local\
                        \     use local database (default: uses database in executable\n\
                        \              directory)\n  --debug     debug mode\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id021
                      - rgi
                      - main
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: hits
                        description: --exclude_nudge       exclude hits nudged from
                          loose to strict hits
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input_sequence
                        description: "input file must be in either FASTA (contig and\n\
                          protein) or gzip format! e.g myFile.fasta,\nmyFasta.fasta.gz"
                        args: !SimpleFlagArg
                          name: INPUT_SEQUENCE
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output_file
                        description: output folder and base filename
                        args: !SimpleFlagArg
                          name: OUTPUT_FILE
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        - --input_type
                        description: specify data input type (default = contig)
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? contig
                            ? protein
                      - !Flag
                        optional: true
                        synonyms:
                        - -a
                        - --alignment_tool
                        description: specify alignment tool (default = BLAST)
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? DIAMOND
                            ? BLAST
                      - !Flag
                        optional: true
                        synonyms:
                        - -n
                        - --num_threads
                        description: "number of threads (CPUs) to use in the BLAST\
                          \ search\n(default=8)"
                        args: !SimpleFlagArg
                          name: THREADS
                      - !Flag
                        optional: true
                        synonyms:
                        - --include_loose
                        description: include loose hits in addition to strict and
                          perfect
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --local
                        description: "use local database (default: uses database in\n\
                          executable directory)"
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --clean
                        description: removes temporary files
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --debug
                        description: debug mode
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --low_quality
                        description: use for short contigs to predict partial genes
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -d
                        - --data
                        description: specify a data-type (default = NA)
                        args: !ChoiceFlagArg
                          choices: !!set
                            ? chromosome
                            ? plasmid
                            ? wgs
                            ? NA
                      - !Flag
                        optional: true
                        synonyms:
                        - --split_prodigal_jobs
                        description: "run multiple prodigal jobs simultaneously for\
                          \ contigs\nin a fasta file\n"
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag: !Flag
                        optional: true
                        synonyms:
                        - -v
                        - --version
                        description: prints software version number
                        args: !EmptyFlagArg {}
                      help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE\
                        \ [-t {contig,protein}]\n                [-a {DIAMOND,BLAST}]\
                        \ [-n THREADS] [--include_loose]\n                [--exclude_nudge]\
                        \ [--local] [--clean] [--debug]\n                [--low_quality]\
                        \ [-d {wgs,plasmid,chromosome,NA}] [-v]\n                [--split_prodigal_jobs]\n\
                        \nResistance Gene Identifier - 5.1.1 - Main\n\noptional arguments:\n\
                        \  -h, --help            show this help message and exit\n\
                        \  -i INPUT_SEQUENCE, --input_sequence INPUT_SEQUENCE\n  \
                        \                      input file must be in either FASTA\
                        \ (contig and\n                        protein) or gzip format!\
                        \ e.g myFile.fasta,\n                        myFasta.fasta.gz\n\
                        \  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n           \
                        \             output folder and base filename\n  -t {contig,protein},\
                        \ --input_type {contig,protein}\n                        specify\
                        \ data input type (default = contig)\n  -a {DIAMOND,BLAST},\
                        \ --alignment_tool {DIAMOND,BLAST}\n                     \
                        \   specify alignment tool (default = BLAST)\n  -n THREADS,\
                        \ --num_threads THREADS\n                        number of\
                        \ threads (CPUs) to use in the BLAST search\n            \
                        \            (default=8)\n  --include_loose       include\
                        \ loose hits in addition to strict and perfect\n         \
                        \               hits\n  --exclude_nudge       exclude hits\
                        \ nudged from loose to strict hits\n  --local            \
                        \   use local database (default: uses database in\n      \
                        \                  executable directory)\n  --clean      \
                        \         removes temporary files\n  --debug             \
                        \  debug mode\n  --low_quality         use for short contigs\
                        \ to predict partial genes\n  -d {wgs,plasmid,chromosome,NA},\
                        \ --data {wgs,plasmid,chromosome,NA}\n                   \
                        \     specify a data-type (default = NA)\n  -v, --version\
                        \         prints software version number\n  --split_prodigal_jobs\n\
                        \                        run multiple prodigal jobs simultaneously\
                        \ for contigs\n                        in a fasta file\n"
                      generated_using: *id004
                      docker_image:
                    - &id005 !Command
                      command: &id022
                      - rgi
                      - parser
                      positional: []
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -i
                        - --input
                        description: RGI results in a .json file
                        args: !SimpleFlagArg
                          name: INPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        - --output
                        description: Name/identifier for the output categorical .json
                          files
                        args: !SimpleFlagArg
                          name: OUTPUT
                      - !Flag
                        optional: true
                        synonyms:
                        - --include_loose
                        description: Include loose hits in addition to strict and
                          perfect
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: ''
                        args: !SimpleFlagArg
                          name: TYPE
                      parent: *id003
                      subcommands:
                      - !Command
                        command: &id023
                        - rgi
                        - parser
                        - hits
                        positional:
                        - !Positional
                          optional: false
                          position: 0
                          name: rgi
                          description: ''
                        - !Positional
                          optional: false
                          position: 1
                          name: parser
                          description: ''
                        named:
                        - !Flag
                          optional: true
                          synonyms:
                          - -t
                          description: ''
                          args: !SimpleFlagArg
                            name: TYPE
                        - !Flag
                          optional: true
                          synonyms:
                          - --include_loose
                          description: ''
                          args: !EmptyFlagArg {}
                        - !Flag
                          optional: true
                          synonyms:
                          - -o
                          description: ''
                          args: !SimpleFlagArg
                            name: OUTPUT
                        - !Flag
                          optional: true
                          synonyms:
                          - -i
                          description: ''
                          args: !SimpleFlagArg
                            name: INPUT
                        parent: *id005
                        subcommands: []
                        usage: []
                        help_flag: !Flag
                          optional: true
                          synonyms:
                          - -h
                          description: ''
                          args: !EmptyFlagArg {}
                        usage_flag:
                        version_flag:
                        help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
                          \ [-t TYPE]\nrgi parser: error: the following arguments\
                          \ are required: -i/--input\n"
                        generated_using: &id024 []
                        docker_image:
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -h
                        - --help
                        description: show this help message and exit
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
                        \ [-t TYPE]\n\nCreates categorical .json files RGI wheel visualization.\
                        \ An input .json file\ncontaining the RGI results must be\
                        \ input.\n\noptional arguments:\n  -h, --help            show\
                        \ this help message and exit\n  -i INPUT, --input INPUT\n\
                        \                        RGI results in a .json file\n  -o\
                        \ OUTPUT, --output OUTPUT\n                        Name/identifier\
                        \ for the output categorical .json files\n  --include_loose\
                        \       Include loose hits in addition to strict and perfect\n\
                        \                        hits\n  -t TYPE, --type TYPE  type\
                        \ of input sequence: contig, protein or read\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id025
                      - rgi
                      - Database
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: Database
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: load
                        description: Loads CARD database, annotations and k-mer database
                      - !Positional
                        optional: false
                        position: 2
                        name: clean
                        description: Removes BLAST databases and temporary files
                      - !Positional
                        optional: false
                        position: 0
                        name: galaxy
                        description: Galaxy project wrapper
                      - !Positional
                        optional: false
                        position: 0
                        name: Genomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: main
                        description: Runs rgi application
                      - !Positional
                        optional: false
                        position: 2
                        name: tab
                        description: Creates a Tab-delimited from rgi results
                      - !Positional
                        optional: false
                        position: 3
                        name: parser
                        description: Creates categorical JSON files RGI wheel visualization
                      - !Positional
                        optional: false
                        position: 4
                        name: heatmap
                        description: Heatmap for multiple analysis
                      - !Positional
                        optional: false
                        position: 0
                        name: Metagenomic
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: bwt
                        description: Align reads to CARD and in silico predicted allelic
                          variants (beta)
                      - !Positional
                        optional: false
                        position: 0
                        name: tm
                        description: Baits Melting Temperature
                      - !Positional
                        optional: false
                        position: 0
                        name: Annotations
                        description: '---------------------------------------------------------------------------------------'
                      - !Positional
                        optional: false
                        position: 1
                        name: card_annotation
                        description: Create fasta files with annotations from card.json
                      - !Positional
                        optional: false
                        position: 2
                        name: wildcard_annotation
                        description: Create fasta files with annotations from variants
                      - !Positional
                        optional: false
                        position: 3
                        name: baits_annotation
                        description: Create fasta files with annotations from baits
                          (experimental)
                      - !Positional
                        optional: false
                        position: 4
                        name: remove_duplicates
                        description: Removes duplicate sequences (experimental)
                      - !Positional
                        optional: false
                        position: 0
                        name: kmer_build
                        description: Build AMR specific k-mers database used for pathogen
                          of origin (beta)
                      - !Positional
                        optional: false
                        position: 1
                        name: kmer_query
                        description: Query sequences against AMR k-mers database to
                          predict pathogen of origin (beta)
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "usage: rgi <command> [<args>]\n            commands\
                        \ are:\n               ---------------------------------------------------------------------------------------\n\
                        \               Database\n               ---------------------------------------------------------------------------------------\n\
                        \n               load     Loads CARD database, annotations\
                        \ and k-mer database\n               clean    Removes BLAST\
                        \ databases and temporary files\n               database Information\
                        \ on installed card database\n               galaxy   Galaxy\
                        \ project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                        \n               main     Runs rgi application\n         \
                        \      tab      Creates a Tab-delimited from rgi results\n\
                        \               parser   Creates categorical JSON files RGI\
                        \ wheel visualization\n               heatmap  Heatmap for\
                        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
                        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                        \               bwt                   Align reads to CARD\
                        \ and in silico predicted allelic variants (beta)\n      \
                        \         \n               ---------------------------------------------------------------------------------------\n\
                        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                        \               tm                    Baits Melting Temperature\n\
                        \n               ---------------------------------------------------------------------------------------\n\
                        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                        \               card_annotation       Create fasta files with\
                        \ annotations from card.json\n               wildcard_annotation\
                        \   Create fasta files with annotations from variants\n  \
                        \             baits_annotation      Create fasta files with\
                        \ annotations from baits (experimental)\n               remove_duplicates\
                        \     Removes duplicate sequences (experimental)\n\n     \
                        \          ---------------------------------------------------------------------------------------\n\
                        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                        \               \n               kmer_build            Build\
                        \ AMR specific k-mers database used for pathogen of origin\
                        \ (beta)\n               kmer_query            Query sequences\
                        \ against AMR k-mers database to predict pathogen of origin\
                        \ (beta)\n\n               \nrgi: error: argument command:\
                        \ invalid choice: 'Database' (choose from 'main', 'tab', 'parser',\
                        \ 'load', 'clean', 'galaxy', 'database', 'bwt', 'tm', 'card_annotation',\
                        \ 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                        \ 'heatmap', 'kmer_build', 'kmer_query')\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      - --help
                      description: show this help message and exit
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: rgi <command> [<args>]\n            commands\
                      \ are:\n               ---------------------------------------------------------------------------------------\n\
                      \               Database\n               ---------------------------------------------------------------------------------------\n\
                      \n               load     Loads CARD database, annotations and\
                      \ k-mer database\n               clean    Removes BLAST databases\
                      \ and temporary files\n               database Information on\
                      \ installed card database\n               galaxy   Galaxy project\
                      \ wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                      \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                      \n               main     Runs rgi application\n           \
                      \    tab      Creates a Tab-delimited from rgi results\n   \
                      \            parser   Creates categorical JSON files RGI wheel\
                      \ visualization\n               heatmap  Heatmap for multiple\
                      \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
                      \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                      \               bwt                   Align reads to CARD and\
                      \ in silico predicted allelic variants (beta)\n            \
                      \   \n               ---------------------------------------------------------------------------------------\n\
                      \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                      \               tm                    Baits Melting Temperature\n\
                      \n               ---------------------------------------------------------------------------------------\n\
                      \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                      \               card_annotation       Create fasta files with\
                      \ annotations from card.json\n               wildcard_annotation\
                      \   Create fasta files with annotations from variants\n    \
                      \           baits_annotation      Create fasta files with annotations\
                      \ from baits (experimental)\n               remove_duplicates\
                      \     Removes duplicate sequences (experimental)\n\n       \
                      \        ---------------------------------------------------------------------------------------\n\
                      \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                      \               \n               kmer_build            Build\
                      \ AMR specific k-mers database used for pathogen of origin (beta)\n\
                      \               kmer_query            Query sequences against\
                      \ AMR k-mers database to predict pathogen of origin (beta)\n\
                      \n               \n\nResistance Gene Identifier - 5.1.1\n\n\
                      positional arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
                      \                        Subcommand to run\n\noptional arguments:\n\
                      \  -h, --help            show this help message and exit\n\n\
                      Use the Resistance Gene Identifier to predict resistome(s) from\
                      \ protein or\nnucleotide data based on homology and SNP models.\
                      \ Check\nhttps://card.mcmaster.ca/download for software and\
                      \ data updates. Receive email\nnotification of monthly CARD\
                      \ updates via the CARD Mailing List\n(https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene Identifier\
                    \ - 5.1.1 - Tab-delimited\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  -i AFILE, --afile\
                    \ AFILE\n                        must be a rgi json result file\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: rgi
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: '[--local] [--debug]'
                    args: !SimpleFlagArg
                      name: OUTPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input
                    description: "Input file (bam file from RGI*BWT, json file of\
                      \ RGI\nresults, fasta file of sequences)"
                    args: !SimpleFlagArg
                      name: INPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - --bwt
                    description: "Specify if the input file for analysis is a bam\
                      \ file\ngenerated from RGI*BWT"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --rgi
                    description: Specify if the input file is a RGI results json file
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --fasta
                    description: Specify if the input file is a fasta file of sequences
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -k
                    - --kmer_size
                    description: length of k
                    args: !SimpleFlagArg
                      name: K
                  - !Flag
                    optional: true
                    synonyms:
                    - -m
                    - --minimum
                    description: "Minimum number of kmers in the called category for\
                      \ the\nclassification to be made (default=10)."
                    args: !SimpleFlagArg
                      name: MIN
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --threads
                    description: number of threads (CPUs) to use (default=1)
                    args: !SimpleFlagArg
                      name: THREADS
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: Output file name.
                    args: !SimpleFlagArg
                      name: OUTPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - --local
                    description: "use local database (default: uses database in\n\
                      executable directory)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta] -k\
                    \ K [-m MIN] [-n THREADS]\n           -o OUTPUT [--local] [--debug]\n\
                    \nTests sequenes using CARD*kmers\n\noptional arguments:\n  -h,\
                    \ --help            show this help message and exit\n  -i INPUT,\
                    \ --input INPUT\n                        Input file (bam file\
                    \ from RGI*BWT, json file of RGI\n                        results,\
                    \ fasta file of sequences)\n  --bwt                 Specify if\
                    \ the input file for analysis is a bam file\n                \
                    \        generated from RGI*BWT\n  --rgi                 Specify\
                    \ if the input file is a RGI results json file\n  --fasta    \
                    \           Specify if the input file is a fasta file of sequences\n\
                    \  -k K, --kmer_size K   length of k\n  -m MIN, --minimum MIN\n\
                    \                        Minimum number of kmers in the called\
                    \ category for the\n                        classification to\
                    \ be made (default=10).\n  -n THREADS, --threads THREADS\n   \
                    \                     number of threads (CPUs) to use (default=1)\n\
                    \  -o OUTPUT, --output OUTPUT\n                        Output\
                    \ file name.\n  --local               use local database (default:\
                    \ uses database in\n                        executable directory)\n\
                    \  --debug               debug mode\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --card_json
                    description: must be a card database json file
                    args: !SimpleFlagArg
                      name: CARD_JSON
                  - !Flag
                    optional: true
                    synonyms:
                    - --card_annotation
                    description: annotated reference FASTA
                    args: !SimpleFlagArg
                      name: CARD_ANNOTATION
                  - !Flag
                    optional: true
                    synonyms:
                    - --wildcard_annotation
                    description: annotated reference FASTA
                    args: !SimpleFlagArg
                      name: WILDCARD_ANNOTATION
                  - !Flag
                    optional: true
                    synonyms:
                    - --wildcard_index
                    description: wildcard index file (index-for-model-sequences.txt)
                    args: !SimpleFlagArg
                      name: WILDCARD_INDEX
                  - !Flag
                    optional: true
                    synonyms:
                    - --wildcard_version
                    description: specify variants version used
                    args: !SimpleFlagArg
                      name: WILDCARD_VERSION
                  - !Flag
                    optional: true
                    synonyms:
                    - --baits_annotation
                    description: annotated reference FASTA
                    args: !SimpleFlagArg
                      name: BAITS_ANNOTATION
                  - !Flag
                    optional: true
                    synonyms:
                    - --baits_index
                    description: baits index file (baits-probes-with-sequence-info.txt)
                    args: !SimpleFlagArg
                      name: BAITS_INDEX
                  - !Flag
                    optional: true
                    synonyms:
                    - --kmer_database
                    description: json of kmer database
                    args: !SimpleFlagArg
                      name: KMER_DATABASE
                  - !Flag
                    optional: true
                    synonyms:
                    - --amr_kmers
                    description: txt file of all amr kmers
                    args: !SimpleFlagArg
                      name: AMR_KMERS
                  - !Flag
                    optional: true
                    synonyms:
                    - --kmer_size
                    description: kmer size if loading kmer files
                    args: !SimpleFlagArg
                      name: KMER_SIZE
                  - !Flag
                    optional: true
                    synonyms:
                    - --local
                    description: "use local database (default: uses database in\n\
                      executable directory)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation\
                    \ CARD_ANNOTATION]\n                [--wildcard_annotation WILDCARD_ANNOTATION]\n\
                    \                [--wildcard_index WILDCARD_INDEX]\n         \
                    \       [--wildcard_version WILDCARD_VERSION]\n              \
                    \  [--baits_annotation BAITS_ANNOTATION]\n                [--baits_index\
                    \ BAITS_INDEX] [--kmer_database KMER_DATABASE]\n             \
                    \   [--amr_kmers AMR_KMERS] [--kmer_size KMER_SIZE] [--local]\n\
                    \                [--debug]\n\nResistance Gene Identifier - 5.1.1\
                    \ - Load\n\noptional arguments:\n  -h, --help            show\
                    \ this help message and exit\n  -i CARD_JSON, --card_json CARD_JSON\n\
                    \                        must be a card database json file\n \
                    \ --card_annotation CARD_ANNOTATION\n                        annotated\
                    \ reference FASTA\n  --wildcard_annotation WILDCARD_ANNOTATION\n\
                    \                        annotated reference FASTA\n  --wildcard_index\
                    \ WILDCARD_INDEX\n                        wildcard index file\
                    \ (index-for-model-sequences.txt)\n  --wildcard_version WILDCARD_VERSION\n\
                    \                        specify variants version used\n  --baits_annotation\
                    \ BAITS_ANNOTATION\n                        annotated reference\
                    \ FASTA\n  --baits_index BAITS_INDEX\n                       \
                    \ baits index file (baits-probes-with-sequence-info.txt)\n  --kmer_database\
                    \ KMER_DATABASE\n                        json of kmer database\n\
                    \  --amr_kmers AMR_KMERS\n                        txt file of\
                    \ all amr kmers\n  --kmer_size KMER_SIZE\n                   \
                    \     kmer size if loading kmer files\n  --local             \
                    \  use local database (default: uses database in\n           \
                    \             executable directory)\n  --debug               debug\
                    \ mode\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --galaxy_database
                    description: path to CARD data and blast databases
                    args: !SimpleFlagArg
                      name: GALAXY_DATABASE
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE\
                    \ [--debug]\n\nResistance Gene Identifier - 5.1.1 - Galaxy project\
                    \ wrapper\n\noptional arguments:\n  -h, --help            show\
                    \ this help message and exit\n  --galaxy_database GALAXY_DATABASE\n\
                    \                        path to CARD data and blast databases\n\
                    \  --debug               debug mode\n\nGALAXY_DATABASE must contain\
                    \ the following: data files (card.json,\nproteindb.fsa),diamond\
                    \ blast database (protein.db.dmnd), ncbi blast database\n(protein.db.phr,\
                    \ protein.db.pin, protein.db.psq)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id009
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input
                    description: card.json file
                    args: !SimpleFlagArg
                      name: INPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - --ncbi
                    description: adds ncbi accession to FASTA headers
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\n\
                    Creates card annotations for RGI BWT from card.json\n\noptional\
                    \ arguments:\n  -h, --help            show this help message and\
                    \ exit\n  -i INPUT, --input INPUT\n                        card.json\
                    \ file\n  --ncbi                adds ncbi accession to FASTA headers\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id010
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: ''
                    args: !SimpleFlagArg
                      name: FILTER_TEMPERATURE
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: ''
                    args: !SimpleFlagArg
                      name: OUTPUT_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    description: ''
                    args: !SimpleFlagArg
                      name: INPUT_FILE
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n-i INPUT_FILE,\
                      \ --input_file INPUT_FILE\ninput_file\n-o OUTPUT_FILE, --output_file\
                      \ OUTPUT_FILE\noutput_file\n-t FILTER_TEMPERATURE, --filter_temperature\
                      \ FILTER_TEMPERATURE\ndesired melting temperature (default=65).\n\
                      --clean               removes temporary files\n--debug     \
                      \          debug mode\n"
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE]\
                    \ [-t FILTER_TEMPERATURE]\n              [--clean] [--debug]\n\
                    \nTM\n\noptional arguments:\n  -h, --help            show this\
                    \ help message and exit\n  -i INPUT_FILE, --input_file INPUT_FILE\n\
                    \                        input_file\n  -o OUTPUT_FILE, --output_file\
                    \ OUTPUT_FILE\n                        output_file\n  -t FILTER_TEMPERATURE,\
                    \ --filter_temperature FILTER_TEMPERATURE\n                  \
                    \      desired melting temperature (default=65).\n  --clean  \
                    \             removes temporary files\n  --debug             \
                    \  debug mode\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id011
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: sequences.
                    description: -n THREADS, --threads THREADS
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input_directory
                    description: input directory of prevalence data
                    args: !SimpleFlagArg
                      name: INPUT_DIRECTORY
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    - --card
                    description: "fasta file of CARD reference sequences. If missing,\n\
                      run 'rgi card_annotation' to generate."
                    args: !SimpleFlagArg
                      name: CARD_FASTA
                  - !Flag
                    optional: true
                    synonyms:
                    - -k
                    description: k-mer size (e.g., 61)
                    args: !SimpleFlagArg
                      name: K
                  - !Flag
                    optional: true
                    synonyms:
                    - --skip
                    description: skips the concatenation and splitting of the CARD*R*V
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --batch_size
                    description: "number of kmers to query at a time using pyahocorasick\n\
                      --the greater the number the more memory usage\n(default=100,000)\n"
                    args: !SimpleFlagArg
                      name: BATCH_SIZE
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    description: ''
                    args: !SimpleFlagArg
                      name: THREADS
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA -k\
                    \ K [--skip] [-n THREADS]\n           [--batch_size BATCH_SIZE]\n\
                    \nBuilds the kmer sets for CARD*kmers\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -i\
                    \ INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n       \
                    \                 input directory of prevalence data\n  -c CARD_FASTA,\
                    \ --card CARD_FASTA\n                        fasta file of CARD\
                    \ reference sequences. If missing,\n                        run\
                    \ 'rgi card_annotation' to generate.\n  -k K                 \
                    \ k-mer size (e.g., 61)\n  --skip                skips the concatenation\
                    \ and splitting of the CARD*R*V\n                        sequences.\n\
                    \  -n THREADS, --threads THREADS\n                        number\
                    \ of threads (CPUs) to use (default=1)\n  --batch_size BATCH_SIZE\n\
                    \                        number of kmers to query at a time using\
                    \ pyahocorasick\n                        --the greater the number\
                    \ the more memory usage\n                        (default=100,000)\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id012
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --index_file
                    description: "index file with baits information\n"
                    args: !SimpleFlagArg
                      name: INDEX_FILE
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\
                    \nCreates baits annotations for RGI BWT from baits\n\noptional\
                    \ arguments:\n  -h, --help            show this help message and\
                    \ exit\n  --index_file INDEX_FILE\n                        index\
                    \ file with baits information\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id013
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input
                    description: Directory containing the RGI .json files (REQUIRED)
                    args: !SimpleFlagArg
                      name: INPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - -cat
                    - --category
                    description: "The option to organize resistance genes based on\
                      \ a\ncategory."
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? resistance_mechanism
                        ? gene_family
                        ? drug_class
                  - !Flag
                    optional: true
                    synonyms:
                    - -f
                    - --frequency
                    description: Represent samples based on resistance profile.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: "Name for the output EPS and PNG files. The number\
                      \ of\nfiles run will automatically be appended to the end of\n\
                      the file name. (default=RGI_heatmap)"
                    args: !SimpleFlagArg
                      name: OUTPUT
                  - !Flag
                    optional: true
                    synonyms:
                    - -clus
                    - --cluster
                    description: "Option to use SciPy's hiearchical clustering algorithm\n\
                      to cluster rows (AMR genes) or columns (samples)."
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? samples
                        ? genes
                        ? both
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --display
                    description: "Specify display options for categories\n(deafult=plain)."
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? text
                        ? plain
                        ? fill
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi heatmap [-h] -i INPUT\n                 \
                    \  [-cat {drug_class,resistance_mechanism,gene_family}] [-f]\n\
                    \                   [-o OUTPUT] [-clus {samples,genes,both}]\n\
                    \                   [-d {plain,fill,text}] [--debug]\n\nCreates\
                    \ a heatmap when given multiple RGI results.\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -i\
                    \ INPUT, --input INPUT\n                        Directory containing\
                    \ the RGI .json files (REQUIRED)\n  -cat {drug_class,resistance_mechanism,gene_family},\
                    \ --category {drug_class,resistance_mechanism,gene_family}\n \
                    \                       The option to organize resistance genes\
                    \ based on a\n                        category.\n  -f, --frequency\
                    \       Represent samples based on resistance profile.\n  -o OUTPUT,\
                    \ --output OUTPUT\n                        Name for the output\
                    \ EPS and PNG files. The number of\n                        files\
                    \ run will automatically be appended to the end of\n         \
                    \               the file name. (default=RGI_heatmap)\n  -clus\
                    \ {samples,genes,both}, --cluster {samples,genes,both}\n     \
                    \                   Option to use SciPy's hiearchical clustering\
                    \ algorithm\n                        to cluster rows (AMR genes)\
                    \ or columns (samples).\n  -d {plain,fill,text}, --display {plain,fill,text}\n\
                    \                        Specify display options for categories\n\
                    \                        (deafult=plain).\n  --debug         \
                    \      debug mode\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id014
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input
                    description: input fasta file
                    args: !SimpleFlagArg
                      name: INPUT_FASTA_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --card_annotation
                    description: card_annotation input fasta file
                    args: !SimpleFlagArg
                      name: CARD_ANNOTATION
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output
                    description: output fasta file
                    args: !SimpleFlagArg
                      name: OUTPUT_FASTA_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE\
                    \ --card_annotation\n                             CARD_ANNOTATION\
                    \ -o OUTPUT_FASTA_FILE [--debug]\n\nRemoves duplicates sequences\
                    \ from annotationed fasta file\n\noptional arguments:\n  -h, --help\
                    \            show this help message and exit\n  -i INPUT_FASTA_FILE,\
                    \ --input INPUT_FASTA_FILE\n                        input fasta\
                    \ file\n  --card_annotation CARD_ANNOTATION\n                \
                    \        card_annotation input fasta file\n  -o OUTPUT_FASTA_FILE,\
                    \ --output OUTPUT_FASTA_FILE\n                        output fasta\
                    \ file\n  --debug               debug mode\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id015
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: load
                    description: Loads CARD database, annotations and k-mer database
                  - !Positional
                    optional: false
                    position: 1
                    name: clean
                    description: Removes BLAST databases and temporary files
                  - !Positional
                    optional: false
                    position: 0
                    name: galaxy
                    description: Galaxy project wrapper
                  - !Positional
                    optional: false
                    position: 0
                    name: main
                    description: Runs rgi application
                  - !Positional
                    optional: false
                    position: 1
                    name: tab
                    description: Creates a Tab-delimited from rgi results
                  - !Positional
                    optional: false
                    position: 2
                    name: parser
                    description: Creates categorical JSON files RGI wheel visualization
                  - !Positional
                    optional: false
                    position: 3
                    name: heatmap
                    description: Heatmap for multiple analysis
                  - !Positional
                    optional: false
                    position: 0
                    name: bwt
                    description: Align reads to CARD and in silico predicted allelic
                      variants (beta)
                  - !Positional
                    optional: false
                    position: 0
                    name: tm
                    description: Baits Melting Temperature
                  - !Positional
                    optional: false
                    position: 0
                    name: card_annotation
                    description: Create fasta files with annotations from card.json
                  - !Positional
                    optional: false
                    position: 1
                    name: wildcard_annotation
                    description: Create fasta files with annotations from variants
                  - !Positional
                    optional: false
                    position: 2
                    name: baits_annotation
                    description: Create fasta files with annotations from baits (experimental)
                  - !Positional
                    optional: false
                    position: 3
                    name: remove_duplicates
                    description: Removes duplicate sequences (experimental)
                  - !Positional
                    optional: false
                    position: 0
                    name: kmer_build
                    description: Build AMR specific k-mers database used for pathogen
                      of origin (beta)
                  - !Positional
                    optional: false
                    position: 1
                    name: kmer_query
                    description: Query sequences against AMR k-mers database to predict
                      pathogen of origin (beta)
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi <command> [<args>]\n            commands\
                    \ are:\n               ---------------------------------------------------------------------------------------\n\
                    \               Database\n               ---------------------------------------------------------------------------------------\n\
                    \n               load     Loads CARD database, annotations and\
                    \ k-mer database\n               clean    Removes BLAST databases\
                    \ and temporary files\n               database Information on\
                    \ installed card database\n               galaxy   Galaxy project\
                    \ wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                    \n               main     Runs rgi application\n             \
                    \  tab      Creates a Tab-delimited from rgi results\n       \
                    \        parser   Creates categorical JSON files RGI wheel visualization\n\
                    \               heatmap  Heatmap for multiple analysis\n\n   \
                    \            ---------------------------------------------------------------------------------------\n\
                    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                    \               bwt                   Align reads to CARD and\
                    \ in silico predicted allelic variants (beta)\n              \
                    \ \n               ---------------------------------------------------------------------------------------\n\
                    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                    \               tm                    Baits Melting Temperature\n\
                    \n               ---------------------------------------------------------------------------------------\n\
                    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                    \               card_annotation       Create fasta files with\
                    \ annotations from card.json\n               wildcard_annotation\
                    \   Create fasta files with annotations from variants\n      \
                    \         baits_annotation      Create fasta files with annotations\
                    \ from baits (experimental)\n               remove_duplicates\
                    \     Removes duplicate sequences (experimental)\n\n         \
                    \      ---------------------------------------------------------------------------------------\n\
                    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                    \               \n               kmer_build            Build AMR\
                    \ specific k-mers database used for pathogen of origin (beta)\n\
                    \               kmer_query            Query sequences against\
                    \ AMR k-mers database to predict pathogen of origin (beta)\n\n\
                    \               \nrgi: error: argument command: invalid choice:\
                    \ 'Metagenomic' (choose from 'main', 'tab', 'parser', 'load',\
                    \ 'clean', 'galaxy', 'database', 'bwt', 'tm', 'card_annotation',\
                    \ 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                    \ 'heatmap', 'kmer_build', 'kmer_query')\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id016
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: load
                    description: Loads CARD database, annotations and k-mer database
                  - !Positional
                    optional: false
                    position: 1
                    name: clean
                    description: Removes BLAST databases and temporary files
                  - !Positional
                    optional: false
                    position: 0
                    name: galaxy
                    description: Galaxy project wrapper
                  - !Positional
                    optional: false
                    position: 0
                    name: main
                    description: Runs rgi application
                  - !Positional
                    optional: false
                    position: 1
                    name: tab
                    description: Creates a Tab-delimited from rgi results
                  - !Positional
                    optional: false
                    position: 2
                    name: parser
                    description: Creates categorical JSON files RGI wheel visualization
                  - !Positional
                    optional: false
                    position: 3
                    name: heatmap
                    description: Heatmap for multiple analysis
                  - !Positional
                    optional: false
                    position: 0
                    name: bwt
                    description: Align reads to CARD and in silico predicted allelic
                      variants (beta)
                  - !Positional
                    optional: false
                    position: 0
                    name: tm
                    description: Baits Melting Temperature
                  - !Positional
                    optional: false
                    position: 0
                    name: card_annotation
                    description: Create fasta files with annotations from card.json
                  - !Positional
                    optional: false
                    position: 1
                    name: wildcard_annotation
                    description: Create fasta files with annotations from variants
                  - !Positional
                    optional: false
                    position: 2
                    name: baits_annotation
                    description: Create fasta files with annotations from baits (experimental)
                  - !Positional
                    optional: false
                    position: 3
                    name: remove_duplicates
                    description: Removes duplicate sequences (experimental)
                  - !Positional
                    optional: false
                    position: 0
                    name: kmer_build
                    description: Build AMR specific k-mers database used for pathogen
                      of origin (beta)
                  - !Positional
                    optional: false
                    position: 1
                    name: kmer_query
                    description: Query sequences against AMR k-mers database to predict
                      pathogen of origin (beta)
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi <command> [<args>]\n            commands\
                    \ are:\n               ---------------------------------------------------------------------------------------\n\
                    \               Database\n               ---------------------------------------------------------------------------------------\n\
                    \n               load     Loads CARD database, annotations and\
                    \ k-mer database\n               clean    Removes BLAST databases\
                    \ and temporary files\n               database Information on\
                    \ installed card database\n               galaxy   Galaxy project\
                    \ wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                    \n               main     Runs rgi application\n             \
                    \  tab      Creates a Tab-delimited from rgi results\n       \
                    \        parser   Creates categorical JSON files RGI wheel visualization\n\
                    \               heatmap  Heatmap for multiple analysis\n\n   \
                    \            ---------------------------------------------------------------------------------------\n\
                    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                    \               bwt                   Align reads to CARD and\
                    \ in silico predicted allelic variants (beta)\n              \
                    \ \n               ---------------------------------------------------------------------------------------\n\
                    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                    \               tm                    Baits Melting Temperature\n\
                    \n               ---------------------------------------------------------------------------------------\n\
                    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                    \               card_annotation       Create fasta files with\
                    \ annotations from card.json\n               wildcard_annotation\
                    \   Create fasta files with annotations from variants\n      \
                    \         baits_annotation      Create fasta files with annotations\
                    \ from baits (experimental)\n               remove_duplicates\
                    \     Removes duplicate sequences (experimental)\n\n         \
                    \      ---------------------------------------------------------------------------------------\n\
                    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                    \               \n               kmer_build            Build AMR\
                    \ specific k-mers database used for pathogen of origin (beta)\n\
                    \               kmer_query            Query sequences against\
                    \ AMR k-mers database to predict pathogen of origin (beta)\n\n\
                    \               \nrgi: error: argument command: invalid choice:\
                    \ 'Annotations' (choose from 'main', 'tab', 'parser', 'load',\
                    \ 'clean', 'galaxy', 'database', 'bwt', 'tm', 'card_annotation',\
                    \ 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                    \ 'heatmap', 'kmer_build', 'kmer_query')\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id017
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input_directory
                    description: input directory for wildcard
                    args: !SimpleFlagArg
                      name: INPUT_DIRECTORY
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    - --card_json
                    description: "card.json file\n"
                    args: !SimpleFlagArg
                      name: CARD_JSON
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    description: ''
                    args: !SimpleFlagArg
                      name: VERSION
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - -v
                    - --version
                    description: specify version downloaded for wildcard / variants
                    args: !SimpleFlagArg
                      name: VERSION
                  help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY\
                    \ -v VERSION -j CARD_JSON\n\nCreates card annotations for RGI\
                    \ BWT from Variants or Wilcard data\n\noptional arguments:\n \
                    \ -h, --help            show this help message and exit\n  -i\
                    \ INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n       \
                    \                 input directory for wildcard\n  -v VERSION,\
                    \ --version VERSION\n                        specify version downloaded\
                    \ for wildcard / variants\n  -j CARD_JSON, --card_json CARD_JSON\n\
                    \                        card.json file\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id018
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    description: ''
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? kma
                        ? bowtie2
                        ? bwa
                  - !Flag
                    optional: true
                    synonyms:
                    - '-2'
                    description: ''
                    args: !SimpleFlagArg
                      name: READ_TWO
                  - !Flag
                    optional: true
                    synonyms:
                    - '-1'
                    description: ''
                    args: !SimpleFlagArg
                      name: READ_ONE
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: "show this help message and exit\n-1 READ_ONE, --read_one\
                      \ READ_ONE\nraw read one (qc and trimmied)\n-2 READ_TWO, --read_two\
                      \ READ_TWO\nraw read two (qc and trimmied)\n-a {bowtie2,bwa,kma},\
                      \ --aligner {bowtie2,bwa,kma}\naligner\n-n THREADS, --threads\
                      \ THREADS\nnumber of threads (CPUs) to use (default=8)\n-o OUTPUT_FILE,\
                      \ --output_file OUTPUT_FILE\nname of output filename(s)\n--debug\
                      \               debug mode\n--clean               removes temporary\
                      \ files\n--local               use local database (default:\
                      \ uses database in\nexecutable directory)\n--include_wildcard\
                      \    include wildcard\n--include_baits       include baits\n\
                      --mapq MAPQ           filter reads based on MAPQ score\n--mapped\
                      \ MAPPED       filter reads based on mapped reads\n--coverage\
                      \ COVERAGE   filter reads based on coverage of reference sequence\n"
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a {bowtie2,bwa,kma}]\n\
                    \               [-n THREADS] -o OUTPUT_FILE [--debug] [--clean]\
                    \ [--local]\n               [--include_wildcard] [--include_baits]\
                    \ [--mapq MAPQ]\n               [--mapped MAPPED] [--coverage\
                    \ COVERAGE]\n\nAligns metagenomic reads to CARD and wildCARD reference\
                    \ using bowtie or bwa\nand provide reports.\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -1\
                    \ READ_ONE, --read_one READ_ONE\n                        raw read\
                    \ one (qc and trimmied)\n  -2 READ_TWO, --read_two READ_TWO\n\
                    \                        raw read two (qc and trimmied)\n  -a\
                    \ {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n           \
                    \             aligner\n  -n THREADS, --threads THREADS\n     \
                    \                   number of threads (CPUs) to use (default=8)\n\
                    \  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n               \
                    \         name of output filename(s)\n  --debug              \
                    \ debug mode\n  --clean               removes temporary files\n\
                    \  --local               use local database (default: uses database\
                    \ in\n                        executable directory)\n  --include_wildcard\
                    \    include wildcard\n  --include_baits       include baits\n\
                    \  --mapq MAPQ           filter reads based on MAPQ score\n  --mapped\
                    \ MAPPED       filter reads based on mapped reads\n  --coverage\
                    \ COVERAGE   filter reads based on coverage of reference sequence\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id019
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: load
                    description: Loads CARD database, annotations and k-mer database
                  - !Positional
                    optional: false
                    position: 1
                    name: clean
                    description: Removes BLAST databases and temporary files
                  - !Positional
                    optional: false
                    position: 0
                    name: galaxy
                    description: Galaxy project wrapper
                  - !Positional
                    optional: false
                    position: 0
                    name: main
                    description: Runs rgi application
                  - !Positional
                    optional: false
                    position: 1
                    name: tab
                    description: Creates a Tab-delimited from rgi results
                  - !Positional
                    optional: false
                    position: 2
                    name: parser
                    description: Creates categorical JSON files RGI wheel visualization
                  - !Positional
                    optional: false
                    position: 3
                    name: heatmap
                    description: Heatmap for multiple analysis
                  - !Positional
                    optional: false
                    position: 0
                    name: bwt
                    description: Align reads to CARD and in silico predicted allelic
                      variants (beta)
                  - !Positional
                    optional: false
                    position: 0
                    name: tm
                    description: Baits Melting Temperature
                  - !Positional
                    optional: false
                    position: 0
                    name: card_annotation
                    description: Create fasta files with annotations from card.json
                  - !Positional
                    optional: false
                    position: 1
                    name: wildcard_annotation
                    description: Create fasta files with annotations from variants
                  - !Positional
                    optional: false
                    position: 2
                    name: baits_annotation
                    description: Create fasta files with annotations from baits (experimental)
                  - !Positional
                    optional: false
                    position: 3
                    name: remove_duplicates
                    description: Removes duplicate sequences (experimental)
                  - !Positional
                    optional: false
                    position: 0
                    name: kmer_build
                    description: Build AMR specific k-mers database used for pathogen
                      of origin (beta)
                  - !Positional
                    optional: false
                    position: 1
                    name: kmer_query
                    description: Query sequences against AMR k-mers database to predict
                      pathogen of origin (beta)
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi <command> [<args>]\n            commands\
                    \ are:\n               ---------------------------------------------------------------------------------------\n\
                    \               Database\n               ---------------------------------------------------------------------------------------\n\
                    \n               load     Loads CARD database, annotations and\
                    \ k-mer database\n               clean    Removes BLAST databases\
                    \ and temporary files\n               database Information on\
                    \ installed card database\n               galaxy   Galaxy project\
                    \ wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                    \n               main     Runs rgi application\n             \
                    \  tab      Creates a Tab-delimited from rgi results\n       \
                    \        parser   Creates categorical JSON files RGI wheel visualization\n\
                    \               heatmap  Heatmap for multiple analysis\n\n   \
                    \            ---------------------------------------------------------------------------------------\n\
                    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                    \               bwt                   Align reads to CARD and\
                    \ in silico predicted allelic variants (beta)\n              \
                    \ \n               ---------------------------------------------------------------------------------------\n\
                    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                    \               tm                    Baits Melting Temperature\n\
                    \n               ---------------------------------------------------------------------------------------\n\
                    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                    \               card_annotation       Create fasta files with\
                    \ annotations from card.json\n               wildcard_annotation\
                    \   Create fasta files with annotations from variants\n      \
                    \         baits_annotation      Create fasta files with annotations\
                    \ from baits (experimental)\n               remove_duplicates\
                    \     Removes duplicate sequences (experimental)\n\n         \
                    \      ---------------------------------------------------------------------------------------\n\
                    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                    \               \n               kmer_build            Build AMR\
                    \ specific k-mers database used for pathogen of origin (beta)\n\
                    \               kmer_query            Query sequences against\
                    \ AMR k-mers database to predict pathogen of origin (beta)\n\n\
                    \               \nrgi: error: argument command: invalid choice:\
                    \ 'Genomic' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
                    \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
                    \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build',\
                    \ 'kmer_query')\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id020
                  positional: []
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --local
                    description: "use local database (default: uses database in executable\n\
                      directory)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance\
                    \ Gene Identifier - 5.1.1 - Clean\n\noptional arguments:\n  -h,\
                    \ --help  show this help message and exit\n  --local     use local\
                    \ database (default: uses database in executable\n           \
                    \   directory)\n  --debug     debug mode\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id021
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: hits
                    description: --exclude_nudge       exclude hits nudged from loose
                      to strict hits
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -i
                    - --input_sequence
                    description: "input file must be in either FASTA (contig and\n\
                      protein) or gzip format! e.g myFile.fasta,\nmyFasta.fasta.gz"
                    args: !SimpleFlagArg
                      name: INPUT_SEQUENCE
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    - --output_file
                    description: output folder and base filename
                    args: !SimpleFlagArg
                      name: OUTPUT_FILE
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    - --input_type
                    description: specify data input type (default = contig)
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? protein
                        ? contig
                  - !Flag
                    optional: true
                    synonyms:
                    - -a
                    - --alignment_tool
                    description: specify alignment tool (default = BLAST)
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? BLAST
                        ? DIAMOND
                  - !Flag
                    optional: true
                    synonyms:
                    - -n
                    - --num_threads
                    description: "number of threads (CPUs) to use in the BLAST search\n\
                      (default=8)"
                    args: !SimpleFlagArg
                      name: THREADS
                  - !Flag
                    optional: true
                    synonyms:
                    - --include_loose
                    description: include loose hits in addition to strict and perfect
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --local
                    description: "use local database (default: uses database in\n\
                      executable directory)"
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --clean
                    description: removes temporary files
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --debug
                    description: debug mode
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --low_quality
                    description: use for short contigs to predict partial genes
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -d
                    - --data
                    description: specify a data-type (default = NA)
                    args: !ChoiceFlagArg
                      choices: !!set
                        ? wgs
                        ? plasmid
                        ? chromosome
                        ? NA
                  - !Flag
                    optional: true
                    synonyms:
                    - --split_prodigal_jobs
                    description: "run multiple prodigal jobs simultaneously for contigs\n\
                      in a fasta file\n"
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -h
                    - --help
                    description: show this help message and exit
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag: !Flag
                    optional: true
                    synonyms:
                    - -v
                    - --version
                    description: prints software version number
                    args: !EmptyFlagArg {}
                  help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE\
                    \ [-t {contig,protein}]\n                [-a {DIAMOND,BLAST}]\
                    \ [-n THREADS] [--include_loose]\n                [--exclude_nudge]\
                    \ [--local] [--clean] [--debug]\n                [--low_quality]\
                    \ [-d {wgs,plasmid,chromosome,NA}] [-v]\n                [--split_prodigal_jobs]\n\
                    \nResistance Gene Identifier - 5.1.1 - Main\n\noptional arguments:\n\
                    \  -h, --help            show this help message and exit\n  -i\
                    \ INPUT_SEQUENCE, --input_sequence INPUT_SEQUENCE\n          \
                    \              input file must be in either FASTA (contig and\n\
                    \                        protein) or gzip format! e.g myFile.fasta,\n\
                    \                        myFasta.fasta.gz\n  -o OUTPUT_FILE, --output_file\
                    \ OUTPUT_FILE\n                        output folder and base\
                    \ filename\n  -t {contig,protein}, --input_type {contig,protein}\n\
                    \                        specify data input type (default = contig)\n\
                    \  -a {DIAMOND,BLAST}, --alignment_tool {DIAMOND,BLAST}\n    \
                    \                    specify alignment tool (default = BLAST)\n\
                    \  -n THREADS, --num_threads THREADS\n                       \
                    \ number of threads (CPUs) to use in the BLAST search\n      \
                    \                  (default=8)\n  --include_loose       include\
                    \ loose hits in addition to strict and perfect\n             \
                    \           hits\n  --exclude_nudge       exclude hits nudged\
                    \ from loose to strict hits\n  --local               use local\
                    \ database (default: uses database in\n                      \
                    \  executable directory)\n  --clean               removes temporary\
                    \ files\n  --debug               debug mode\n  --low_quality \
                    \        use for short contigs to predict partial genes\n  -d\
                    \ {wgs,plasmid,chromosome,NA}, --data {wgs,plasmid,chromosome,NA}\n\
                    \                        specify a data-type (default = NA)\n\
                    \  -v, --version         prints software version number\n  --split_prodigal_jobs\n\
                    \                        run multiple prodigal jobs simultaneously\
                    \ for contigs\n                        in a fasta file\n"
                  generated_using: *id004
                  docker_image:
                - &id027 !Command
                  command: *id022
                  positional: []
                  named: []
                  parent: *id003
                  subcommands:
                  - !Command
                    command: *id023
                    positional:
                    - !Positional
                      optional: false
                      position: 0
                      name: rgi
                      description: ''
                    - !Positional
                      optional: false
                      position: 1
                      name: parser
                      description: ''
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - -t
                      description: ''
                      args: !SimpleFlagArg
                        name: TYPE
                    - !Flag
                      optional: true
                      synonyms:
                      - --include_loose
                      description: ''
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -o
                      description: ''
                      args: !SimpleFlagArg
                        name: OUTPUT
                    - !Flag
                      optional: true
                      synonyms:
                      - -i
                      description: ''
                      args: !SimpleFlagArg
                        name: INPUT
                    parent: *id005
                    subcommands: []
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - -h
                      description: ''
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag:
                    help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
                      \ [-t TYPE]\nrgi parser: error: the following arguments are\
                      \ required: -i/--input\n"
                    generated_using: *id024
                    docker_image:
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
                    \ [-t TYPE]\n\nCreates categorical .json files RGI wheel visualization.\
                    \ An input .json file\ncontaining the RGI results must be input.\n\
                    \noptional arguments:\n  -h, --help            show this help\
                    \ message and exit\n  -i INPUT, --input INPUT\n              \
                    \          RGI results in a .json file\n  -o OUTPUT, --output\
                    \ OUTPUT\n                        Name/identifier for the output\
                    \ categorical .json files\n  --include_loose       Include loose\
                    \ hits in addition to strict and perfect\n                   \
                    \     hits\n  -t TYPE, --type TYPE  type of input sequence: contig,\
                    \ protein or read\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id025
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: load
                    description: Loads CARD database, annotations and k-mer database
                  - !Positional
                    optional: false
                    position: 1
                    name: clean
                    description: Removes BLAST databases and temporary files
                  - !Positional
                    optional: false
                    position: 0
                    name: galaxy
                    description: Galaxy project wrapper
                  - !Positional
                    optional: false
                    position: 0
                    name: main
                    description: Runs rgi application
                  - !Positional
                    optional: false
                    position: 1
                    name: tab
                    description: Creates a Tab-delimited from rgi results
                  - !Positional
                    optional: false
                    position: 2
                    name: parser
                    description: Creates categorical JSON files RGI wheel visualization
                  - !Positional
                    optional: false
                    position: 3
                    name: heatmap
                    description: Heatmap for multiple analysis
                  - !Positional
                    optional: false
                    position: 0
                    name: bwt
                    description: Align reads to CARD and in silico predicted allelic
                      variants (beta)
                  - !Positional
                    optional: false
                    position: 0
                    name: tm
                    description: Baits Melting Temperature
                  - !Positional
                    optional: false
                    position: 0
                    name: card_annotation
                    description: Create fasta files with annotations from card.json
                  - !Positional
                    optional: false
                    position: 1
                    name: wildcard_annotation
                    description: Create fasta files with annotations from variants
                  - !Positional
                    optional: false
                    position: 2
                    name: baits_annotation
                    description: Create fasta files with annotations from baits (experimental)
                  - !Positional
                    optional: false
                    position: 3
                    name: remove_duplicates
                    description: Removes duplicate sequences (experimental)
                  - !Positional
                    optional: false
                    position: 0
                    name: kmer_build
                    description: Build AMR specific k-mers database used for pathogen
                      of origin (beta)
                  - !Positional
                    optional: false
                    position: 1
                    name: kmer_query
                    description: Query sequences against AMR k-mers database to predict
                      pathogen of origin (beta)
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "usage: rgi <command> [<args>]\n            commands\
                    \ are:\n               ---------------------------------------------------------------------------------------\n\
                    \               Database\n               ---------------------------------------------------------------------------------------\n\
                    \n               load     Loads CARD database, annotations and\
                    \ k-mer database\n               clean    Removes BLAST databases\
                    \ and temporary files\n               database Information on\
                    \ installed card database\n               galaxy   Galaxy project\
                    \ wrapper\n\n               ---------------------------------------------------------------------------------------\n\
                    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                    \n               main     Runs rgi application\n             \
                    \  tab      Creates a Tab-delimited from rgi results\n       \
                    \        parser   Creates categorical JSON files RGI wheel visualization\n\
                    \               heatmap  Heatmap for multiple analysis\n\n   \
                    \            ---------------------------------------------------------------------------------------\n\
                    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                    \               bwt                   Align reads to CARD and\
                    \ in silico predicted allelic variants (beta)\n              \
                    \ \n               ---------------------------------------------------------------------------------------\n\
                    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                    \               tm                    Baits Melting Temperature\n\
                    \n               ---------------------------------------------------------------------------------------\n\
                    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                    \               card_annotation       Create fasta files with\
                    \ annotations from card.json\n               wildcard_annotation\
                    \   Create fasta files with annotations from variants\n      \
                    \         baits_annotation      Create fasta files with annotations\
                    \ from baits (experimental)\n               remove_duplicates\
                    \     Removes duplicate sequences (experimental)\n\n         \
                    \      ---------------------------------------------------------------------------------------\n\
                    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                    \               \n               kmer_build            Build AMR\
                    \ specific k-mers database used for pathogen of origin (beta)\n\
                    \               kmer_query            Query sequences against\
                    \ AMR k-mers database to predict pathogen of origin (beta)\n\n\
                    \               \nrgi: error: argument command: invalid choice:\
                    \ 'Database' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
                    \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
                    \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build',\
                    \ 'kmer_query')\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "usage: rgi <command> [<args>]\n            commands are:\n\
                  \               ---------------------------------------------------------------------------------------\n\
                  \               Database\n               ---------------------------------------------------------------------------------------\n\
                  \n               load     Loads CARD database, annotations and k-mer\
                  \ database\n               clean    Removes BLAST databases and\
                  \ temporary files\n               database Information on installed\
                  \ card database\n               galaxy   Galaxy project wrapper\n\
                  \n               ---------------------------------------------------------------------------------------\n\
                  \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                  \n               main     Runs rgi application\n               tab\
                  \      Creates a Tab-delimited from rgi results\n              \
                  \ parser   Creates categorical JSON files RGI wheel visualization\n\
                  \               heatmap  Heatmap for multiple analysis\n\n     \
                  \          ---------------------------------------------------------------------------------------\n\
                  \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                  \               bwt                   Align reads to CARD and in\
                  \ silico predicted allelic variants (beta)\n               \n  \
                  \             ---------------------------------------------------------------------------------------\n\
                  \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                  \               tm                    Baits Melting Temperature\n\
                  \n               ---------------------------------------------------------------------------------------\n\
                  \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                  \               card_annotation       Create fasta files with annotations\
                  \ from card.json\n               wildcard_annotation   Create fasta\
                  \ files with annotations from variants\n               baits_annotation\
                  \      Create fasta files with annotations from baits (experimental)\n\
                  \               remove_duplicates     Removes duplicate sequences\
                  \ (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
                  \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                  \               \n               kmer_build            Build AMR\
                  \ specific k-mers database used for pathogen of origin (beta)\n\
                  \               kmer_query            Query sequences against AMR\
                  \ k-mers database to predict pathogen of origin (beta)\n\n     \
                  \          \n\nResistance Gene Identifier - 5.1.1\n\npositional\
                  \ arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
                  \                        Subcommand to run\n\noptional arguments:\n\
                  \  -h, --help            show this help message and exit\n\nUse\
                  \ the Resistance Gene Identifier to predict resistome(s) from protein\
                  \ or\nnucleotide data based on homology and SNP models. Check\n\
                  https://card.mcmaster.ca/download for software and data updates.\
                  \ Receive email\nnotification of monthly CARD updates via the CARD\
                  \ Mailing List\n(https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene Identifier\
                \ - 5.1.1 - Tab-delimited\n\noptional arguments:\n  -h, --help   \
                \         show this help message and exit\n  -i AFILE, --afile AFILE\n\
                \                        must be a rgi json result file\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: rgi
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: '[--local] [--debug]'
                args: !SimpleFlagArg
                  name: OUTPUT
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input
                description: "Input file (bam file from RGI*BWT, json file of RGI\n\
                  results, fasta file of sequences)"
                args: !SimpleFlagArg
                  name: INPUT
              - !Flag
                optional: true
                synonyms:
                - --bwt
                description: "Specify if the input file for analysis is a bam file\n\
                  generated from RGI*BWT"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --rgi
                description: Specify if the input file is a RGI results json file
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --fasta
                description: Specify if the input file is a fasta file of sequences
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -k
                - --kmer_size
                description: length of k
                args: !SimpleFlagArg
                  name: K
              - !Flag
                optional: true
                synonyms:
                - -m
                - --minimum
                description: "Minimum number of kmers in the called category for the\n\
                  classification to be made (default=10)."
                args: !SimpleFlagArg
                  name: MIN
              - !Flag
                optional: true
                synonyms:
                - -n
                - --threads
                description: number of threads (CPUs) to use (default=1)
                args: !SimpleFlagArg
                  name: THREADS
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: Output file name.
                args: !SimpleFlagArg
                  name: OUTPUT
              - !Flag
                optional: true
                synonyms:
                - --local
                description: "use local database (default: uses database in\nexecutable\
                  \ directory)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta] -k K\
                \ [-m MIN] [-n THREADS]\n           -o OUTPUT [--local] [--debug]\n\
                \nTests sequenes using CARD*kmers\n\noptional arguments:\n  -h, --help\
                \            show this help message and exit\n  -i INPUT, --input\
                \ INPUT\n                        Input file (bam file from RGI*BWT,\
                \ json file of RGI\n                        results, fasta file of\
                \ sequences)\n  --bwt                 Specify if the input file for\
                \ analysis is a bam file\n                        generated from RGI*BWT\n\
                \  --rgi                 Specify if the input file is a RGI results\
                \ json file\n  --fasta               Specify if the input file is\
                \ a fasta file of sequences\n  -k K, --kmer_size K   length of k\n\
                \  -m MIN, --minimum MIN\n                        Minimum number of\
                \ kmers in the called category for the\n                        classification\
                \ to be made (default=10).\n  -n THREADS, --threads THREADS\n    \
                \                    number of threads (CPUs) to use (default=1)\n\
                \  -o OUTPUT, --output OUTPUT\n                        Output file\
                \ name.\n  --local               use local database (default: uses\
                \ database in\n                        executable directory)\n  --debug\
                \               debug mode\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --card_json
                description: must be a card database json file
                args: !SimpleFlagArg
                  name: CARD_JSON
              - !Flag
                optional: true
                synonyms:
                - --card_annotation
                description: annotated reference FASTA
                args: !SimpleFlagArg
                  name: CARD_ANNOTATION
              - !Flag
                optional: true
                synonyms:
                - --wildcard_annotation
                description: annotated reference FASTA
                args: !SimpleFlagArg
                  name: WILDCARD_ANNOTATION
              - !Flag
                optional: true
                synonyms:
                - --wildcard_index
                description: wildcard index file (index-for-model-sequences.txt)
                args: !SimpleFlagArg
                  name: WILDCARD_INDEX
              - !Flag
                optional: true
                synonyms:
                - --wildcard_version
                description: specify variants version used
                args: !SimpleFlagArg
                  name: WILDCARD_VERSION
              - !Flag
                optional: true
                synonyms:
                - --baits_annotation
                description: annotated reference FASTA
                args: !SimpleFlagArg
                  name: BAITS_ANNOTATION
              - !Flag
                optional: true
                synonyms:
                - --baits_index
                description: baits index file (baits-probes-with-sequence-info.txt)
                args: !SimpleFlagArg
                  name: BAITS_INDEX
              - !Flag
                optional: true
                synonyms:
                - --kmer_database
                description: json of kmer database
                args: !SimpleFlagArg
                  name: KMER_DATABASE
              - !Flag
                optional: true
                synonyms:
                - --amr_kmers
                description: txt file of all amr kmers
                args: !SimpleFlagArg
                  name: AMR_KMERS
              - !Flag
                optional: true
                synonyms:
                - --kmer_size
                description: kmer size if loading kmer files
                args: !SimpleFlagArg
                  name: KMER_SIZE
              - !Flag
                optional: true
                synonyms:
                - --local
                description: "use local database (default: uses database in\nexecutable\
                  \ directory)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation CARD_ANNOTATION]\n\
                \                [--wildcard_annotation WILDCARD_ANNOTATION]\n   \
                \             [--wildcard_index WILDCARD_INDEX]\n                [--wildcard_version\
                \ WILDCARD_VERSION]\n                [--baits_annotation BAITS_ANNOTATION]\n\
                \                [--baits_index BAITS_INDEX] [--kmer_database KMER_DATABASE]\n\
                \                [--amr_kmers AMR_KMERS] [--kmer_size KMER_SIZE] [--local]\n\
                \                [--debug]\n\nResistance Gene Identifier - 5.1.1 -\
                \ Load\n\noptional arguments:\n  -h, --help            show this help\
                \ message and exit\n  -i CARD_JSON, --card_json CARD_JSON\n      \
                \                  must be a card database json file\n  --card_annotation\
                \ CARD_ANNOTATION\n                        annotated reference FASTA\n\
                \  --wildcard_annotation WILDCARD_ANNOTATION\n                   \
                \     annotated reference FASTA\n  --wildcard_index WILDCARD_INDEX\n\
                \                        wildcard index file (index-for-model-sequences.txt)\n\
                \  --wildcard_version WILDCARD_VERSION\n                        specify\
                \ variants version used\n  --baits_annotation BAITS_ANNOTATION\n \
                \                       annotated reference FASTA\n  --baits_index\
                \ BAITS_INDEX\n                        baits index file (baits-probes-with-sequence-info.txt)\n\
                \  --kmer_database KMER_DATABASE\n                        json of\
                \ kmer database\n  --amr_kmers AMR_KMERS\n                       \
                \ txt file of all amr kmers\n  --kmer_size KMER_SIZE\n           \
                \             kmer size if loading kmer files\n  --local         \
                \      use local database (default: uses database in\n           \
                \             executable directory)\n  --debug               debug\
                \ mode\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --galaxy_database
                description: path to CARD data and blast databases
                args: !SimpleFlagArg
                  name: GALAXY_DATABASE
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE\
                \ [--debug]\n\nResistance Gene Identifier - 5.1.1 - Galaxy project\
                \ wrapper\n\noptional arguments:\n  -h, --help            show this\
                \ help message and exit\n  --galaxy_database GALAXY_DATABASE\n   \
                \                     path to CARD data and blast databases\n  --debug\
                \               debug mode\n\nGALAXY_DATABASE must contain the following:\
                \ data files (card.json,\nproteindb.fsa),diamond blast database (protein.db.dmnd),\
                \ ncbi blast database\n(protein.db.phr, protein.db.pin, protein.db.psq)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id009
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input
                description: card.json file
                args: !SimpleFlagArg
                  name: INPUT
              - !Flag
                optional: true
                synonyms:
                - --ncbi
                description: adds ncbi accession to FASTA headers
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\nCreates\
                \ card annotations for RGI BWT from card.json\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  -i INPUT,\
                \ --input INPUT\n                        card.json file\n  --ncbi\
                \                adds ncbi accession to FASTA headers\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id010
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -t
                description: ''
                args: !SimpleFlagArg
                  name: FILTER_TEMPERATURE
              - !Flag
                optional: true
                synonyms:
                - -o
                description: ''
                args: !SimpleFlagArg
                  name: OUTPUT_FILE
              - !Flag
                optional: true
                synonyms:
                - -i
                description: ''
                args: !SimpleFlagArg
                  name: INPUT_FILE
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n-i INPUT_FILE, --input_file\
                  \ INPUT_FILE\ninput_file\n-o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
                  output_file\n-t FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE\n\
                  desired melting temperature (default=65).\n--clean             \
                  \  removes temporary files\n--debug               debug mode\n"
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE] [-t\
                \ FILTER_TEMPERATURE]\n              [--clean] [--debug]\n\nTM\n\n\
                optional arguments:\n  -h, --help            show this help message\
                \ and exit\n  -i INPUT_FILE, --input_file INPUT_FILE\n           \
                \             input_file\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
                \                        output_file\n  -t FILTER_TEMPERATURE, --filter_temperature\
                \ FILTER_TEMPERATURE\n                        desired melting temperature\
                \ (default=65).\n  --clean               removes temporary files\n\
                \  --debug               debug mode\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id011
              positional:
              - !Positional
                optional: false
                position: 0
                name: sequences.
                description: -n THREADS, --threads THREADS
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input_directory
                description: input directory of prevalence data
                args: !SimpleFlagArg
                  name: INPUT_DIRECTORY
              - !Flag
                optional: true
                synonyms:
                - -c
                - --card
                description: "fasta file of CARD reference sequences. If missing,\n\
                  run 'rgi card_annotation' to generate."
                args: !SimpleFlagArg
                  name: CARD_FASTA
              - !Flag
                optional: true
                synonyms:
                - -k
                description: k-mer size (e.g., 61)
                args: !SimpleFlagArg
                  name: K
              - !Flag
                optional: true
                synonyms:
                - --skip
                description: skips the concatenation and splitting of the CARD*R*V
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --batch_size
                description: "number of kmers to query at a time using pyahocorasick\n\
                  --the greater the number the more memory usage\n(default=100,000)\n"
                args: !SimpleFlagArg
                  name: BATCH_SIZE
              - !Flag
                optional: true
                synonyms:
                - -n
                description: ''
                args: !SimpleFlagArg
                  name: THREADS
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA -k K\
                \ [--skip] [-n THREADS]\n           [--batch_size BATCH_SIZE]\n\n\
                Builds the kmer sets for CARD*kmers\n\noptional arguments:\n  -h,\
                \ --help            show this help message and exit\n  -i INPUT_DIRECTORY,\
                \ --input_directory INPUT_DIRECTORY\n                        input\
                \ directory of prevalence data\n  -c CARD_FASTA, --card CARD_FASTA\n\
                \                        fasta file of CARD reference sequences. If\
                \ missing,\n                        run 'rgi card_annotation' to generate.\n\
                \  -k K                  k-mer size (e.g., 61)\n  --skip         \
                \       skips the concatenation and splitting of the CARD*R*V\n  \
                \                      sequences.\n  -n THREADS, --threads THREADS\n\
                \                        number of threads (CPUs) to use (default=1)\n\
                \  --batch_size BATCH_SIZE\n                        number of kmers\
                \ to query at a time using pyahocorasick\n                       \
                \ --the greater the number the more memory usage\n               \
                \         (default=100,000)\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id012
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --index_file
                description: "index file with baits information\n"
                args: !SimpleFlagArg
                  name: INDEX_FILE
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\
                \nCreates baits annotations for RGI BWT from baits\n\noptional arguments:\n\
                \  -h, --help            show this help message and exit\n  --index_file\
                \ INDEX_FILE\n                        index file with baits information\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id013
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input
                description: Directory containing the RGI .json files (REQUIRED)
                args: !SimpleFlagArg
                  name: INPUT
              - !Flag
                optional: true
                synonyms:
                - -cat
                - --category
                description: "The option to organize resistance genes based on a\n\
                  category."
                args: !ChoiceFlagArg
                  choices: !!set
                    ? gene_family
                    ? drug_class
                    ? resistance_mechanism
              - !Flag
                optional: true
                synonyms:
                - -f
                - --frequency
                description: Represent samples based on resistance profile.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: "Name for the output EPS and PNG files. The number of\n\
                  files run will automatically be appended to the end of\nthe file\
                  \ name. (default=RGI_heatmap)"
                args: !SimpleFlagArg
                  name: OUTPUT
              - !Flag
                optional: true
                synonyms:
                - -clus
                - --cluster
                description: "Option to use SciPy's hiearchical clustering algorithm\n\
                  to cluster rows (AMR genes) or columns (samples)."
                args: !ChoiceFlagArg
                  choices: !!set
                    ? genes
                    ? both
                    ? samples
              - !Flag
                optional: true
                synonyms:
                - -d
                - --display
                description: "Specify display options for categories\n(deafult=plain)."
                args: !ChoiceFlagArg
                  choices: !!set
                    ? text
                    ? fill
                    ? plain
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi heatmap [-h] -i INPUT\n                   [-cat\
                \ {drug_class,resistance_mechanism,gene_family}] [-f]\n          \
                \         [-o OUTPUT] [-clus {samples,genes,both}]\n             \
                \      [-d {plain,fill,text}] [--debug]\n\nCreates a heatmap when\
                \ given multiple RGI results.\n\noptional arguments:\n  -h, --help\
                \            show this help message and exit\n  -i INPUT, --input\
                \ INPUT\n                        Directory containing the RGI .json\
                \ files (REQUIRED)\n  -cat {drug_class,resistance_mechanism,gene_family},\
                \ --category {drug_class,resistance_mechanism,gene_family}\n     \
                \                   The option to organize resistance genes based\
                \ on a\n                        category.\n  -f, --frequency     \
                \  Represent samples based on resistance profile.\n  -o OUTPUT, --output\
                \ OUTPUT\n                        Name for the output EPS and PNG\
                \ files. The number of\n                        files run will automatically\
                \ be appended to the end of\n                        the file name.\
                \ (default=RGI_heatmap)\n  -clus {samples,genes,both}, --cluster {samples,genes,both}\n\
                \                        Option to use SciPy's hiearchical clustering\
                \ algorithm\n                        to cluster rows (AMR genes) or\
                \ columns (samples).\n  -d {plain,fill,text}, --display {plain,fill,text}\n\
                \                        Specify display options for categories\n\
                \                        (deafult=plain).\n  --debug             \
                \  debug mode\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id014
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input
                description: input fasta file
                args: !SimpleFlagArg
                  name: INPUT_FASTA_FILE
              - !Flag
                optional: true
                synonyms:
                - --card_annotation
                description: card_annotation input fasta file
                args: !SimpleFlagArg
                  name: CARD_ANNOTATION
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output
                description: output fasta file
                args: !SimpleFlagArg
                  name: OUTPUT_FASTA_FILE
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE --card_annotation\n\
                \                             CARD_ANNOTATION -o OUTPUT_FASTA_FILE\
                \ [--debug]\n\nRemoves duplicates sequences from annotationed fasta\
                \ file\n\noptional arguments:\n  -h, --help            show this help\
                \ message and exit\n  -i INPUT_FASTA_FILE, --input INPUT_FASTA_FILE\n\
                \                        input fasta file\n  --card_annotation CARD_ANNOTATION\n\
                \                        card_annotation input fasta file\n  -o OUTPUT_FASTA_FILE,\
                \ --output OUTPUT_FASTA_FILE\n                        output fasta\
                \ file\n  --debug               debug mode\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id015
              positional:
              - !Positional
                optional: false
                position: 0
                name: load
                description: Loads CARD database, annotations and k-mer database
              - !Positional
                optional: false
                position: 1
                name: clean
                description: Removes BLAST databases and temporary files
              - !Positional
                optional: false
                position: 0
                name: galaxy
                description: Galaxy project wrapper
              - !Positional
                optional: false
                position: 0
                name: main
                description: Runs rgi application
              - !Positional
                optional: false
                position: 1
                name: tab
                description: Creates a Tab-delimited from rgi results
              - !Positional
                optional: false
                position: 2
                name: parser
                description: Creates categorical JSON files RGI wheel visualization
              - !Positional
                optional: false
                position: 3
                name: heatmap
                description: Heatmap for multiple analysis
              - !Positional
                optional: false
                position: 0
                name: bwt
                description: Align reads to CARD and in silico predicted allelic variants
                  (beta)
              - !Positional
                optional: false
                position: 0
                name: tm
                description: Baits Melting Temperature
              - !Positional
                optional: false
                position: 0
                name: card_annotation
                description: Create fasta files with annotations from card.json
              - !Positional
                optional: false
                position: 1
                name: wildcard_annotation
                description: Create fasta files with annotations from variants
              - !Positional
                optional: false
                position: 2
                name: baits_annotation
                description: Create fasta files with annotations from baits (experimental)
              - !Positional
                optional: false
                position: 3
                name: remove_duplicates
                description: Removes duplicate sequences (experimental)
              - !Positional
                optional: false
                position: 0
                name: kmer_build
                description: Build AMR specific k-mers database used for pathogen
                  of origin (beta)
              - !Positional
                optional: false
                position: 1
                name: kmer_query
                description: Query sequences against AMR k-mers database to predict
                  pathogen of origin (beta)
              named: []
              parent: *id026
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: rgi <command> [<args>]\n            commands are:\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Database\n               ---------------------------------------------------------------------------------------\n\
                \n               load     Loads CARD database, annotations and k-mer\
                \ database\n               clean    Removes BLAST databases and temporary\
                \ files\n               database Information on installed card database\n\
                \               galaxy   Galaxy project wrapper\n\n              \
                \ ---------------------------------------------------------------------------------------\n\
                \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                \n               main     Runs rgi application\n               tab\
                \      Creates a Tab-delimited from rgi results\n               parser\
                \   Creates categorical JSON files RGI wheel visualization\n     \
                \          heatmap  Heatmap for multiple analysis\n\n            \
                \   ---------------------------------------------------------------------------------------\n\
                \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                \               bwt                   Align reads to CARD and in silico\
                \ predicted allelic variants (beta)\n               \n           \
                \    ---------------------------------------------------------------------------------------\n\
                \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                \               tm                    Baits Melting Temperature\n\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                \               card_annotation       Create fasta files with annotations\
                \ from card.json\n               wildcard_annotation   Create fasta\
                \ files with annotations from variants\n               baits_annotation\
                \      Create fasta files with annotations from baits (experimental)\n\
                \               remove_duplicates     Removes duplicate sequences\
                \ (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
                \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                \               \n               kmer_build            Build AMR specific\
                \ k-mers database used for pathogen of origin (beta)\n           \
                \    kmer_query            Query sequences against AMR k-mers database\
                \ to predict pathogen of origin (beta)\n\n               \nrgi: error:\
                \ argument command: invalid choice: 'Metagenomic' (choose from 'main',\
                \ 'tab', 'parser', 'load', 'clean', 'galaxy', 'database', 'bwt', 'tm',\
                \ 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                \ 'heatmap', 'kmer_build', 'kmer_query')\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id016
              positional:
              - !Positional
                optional: false
                position: 0
                name: load
                description: Loads CARD database, annotations and k-mer database
              - !Positional
                optional: false
                position: 1
                name: clean
                description: Removes BLAST databases and temporary files
              - !Positional
                optional: false
                position: 0
                name: galaxy
                description: Galaxy project wrapper
              - !Positional
                optional: false
                position: 0
                name: main
                description: Runs rgi application
              - !Positional
                optional: false
                position: 1
                name: tab
                description: Creates a Tab-delimited from rgi results
              - !Positional
                optional: false
                position: 2
                name: parser
                description: Creates categorical JSON files RGI wheel visualization
              - !Positional
                optional: false
                position: 3
                name: heatmap
                description: Heatmap for multiple analysis
              - !Positional
                optional: false
                position: 0
                name: bwt
                description: Align reads to CARD and in silico predicted allelic variants
                  (beta)
              - !Positional
                optional: false
                position: 0
                name: tm
                description: Baits Melting Temperature
              - !Positional
                optional: false
                position: 0
                name: card_annotation
                description: Create fasta files with annotations from card.json
              - !Positional
                optional: false
                position: 1
                name: wildcard_annotation
                description: Create fasta files with annotations from variants
              - !Positional
                optional: false
                position: 2
                name: baits_annotation
                description: Create fasta files with annotations from baits (experimental)
              - !Positional
                optional: false
                position: 3
                name: remove_duplicates
                description: Removes duplicate sequences (experimental)
              - !Positional
                optional: false
                position: 0
                name: kmer_build
                description: Build AMR specific k-mers database used for pathogen
                  of origin (beta)
              - !Positional
                optional: false
                position: 1
                name: kmer_query
                description: Query sequences against AMR k-mers database to predict
                  pathogen of origin (beta)
              named: []
              parent: *id026
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: rgi <command> [<args>]\n            commands are:\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Database\n               ---------------------------------------------------------------------------------------\n\
                \n               load     Loads CARD database, annotations and k-mer\
                \ database\n               clean    Removes BLAST databases and temporary\
                \ files\n               database Information on installed card database\n\
                \               galaxy   Galaxy project wrapper\n\n              \
                \ ---------------------------------------------------------------------------------------\n\
                \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                \n               main     Runs rgi application\n               tab\
                \      Creates a Tab-delimited from rgi results\n               parser\
                \   Creates categorical JSON files RGI wheel visualization\n     \
                \          heatmap  Heatmap for multiple analysis\n\n            \
                \   ---------------------------------------------------------------------------------------\n\
                \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                \               bwt                   Align reads to CARD and in silico\
                \ predicted allelic variants (beta)\n               \n           \
                \    ---------------------------------------------------------------------------------------\n\
                \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                \               tm                    Baits Melting Temperature\n\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                \               card_annotation       Create fasta files with annotations\
                \ from card.json\n               wildcard_annotation   Create fasta\
                \ files with annotations from variants\n               baits_annotation\
                \      Create fasta files with annotations from baits (experimental)\n\
                \               remove_duplicates     Removes duplicate sequences\
                \ (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
                \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                \               \n               kmer_build            Build AMR specific\
                \ k-mers database used for pathogen of origin (beta)\n           \
                \    kmer_query            Query sequences against AMR k-mers database\
                \ to predict pathogen of origin (beta)\n\n               \nrgi: error:\
                \ argument command: invalid choice: 'Annotations' (choose from 'main',\
                \ 'tab', 'parser', 'load', 'clean', 'galaxy', 'database', 'bwt', 'tm',\
                \ 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                \ 'heatmap', 'kmer_build', 'kmer_query')\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id017
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input_directory
                description: input directory for wildcard
                args: !SimpleFlagArg
                  name: INPUT_DIRECTORY
              - !Flag
                optional: true
                synonyms:
                - -j
                - --card_json
                description: "card.json file\n"
                args: !SimpleFlagArg
                  name: CARD_JSON
              - !Flag
                optional: true
                synonyms:
                - -v
                description: ''
                args: !SimpleFlagArg
                  name: VERSION
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - -v
                - --version
                description: specify version downloaded for wildcard / variants
                args: !SimpleFlagArg
                  name: VERSION
              help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY -v\
                \ VERSION -j CARD_JSON\n\nCreates card annotations for RGI BWT from\
                \ Variants or Wilcard data\n\noptional arguments:\n  -h, --help  \
                \          show this help message and exit\n  -i INPUT_DIRECTORY,\
                \ --input_directory INPUT_DIRECTORY\n                        input\
                \ directory for wildcard\n  -v VERSION, --version VERSION\n      \
                \                  specify version downloaded for wildcard / variants\n\
                \  -j CARD_JSON, --card_json CARD_JSON\n                        card.json\
                \ file\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id018
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - -a
                description: ''
                args: !ChoiceFlagArg
                  choices: !!set
                    ? bwa
                    ? bowtie2
                    ? kma
              - !Flag
                optional: true
                synonyms:
                - '-2'
                description: ''
                args: !SimpleFlagArg
                  name: READ_TWO
              - !Flag
                optional: true
                synonyms:
                - '-1'
                description: ''
                args: !SimpleFlagArg
                  name: READ_ONE
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: "show this help message and exit\n-1 READ_ONE, --read_one\
                  \ READ_ONE\nraw read one (qc and trimmied)\n-2 READ_TWO, --read_two\
                  \ READ_TWO\nraw read two (qc and trimmied)\n-a {bowtie2,bwa,kma},\
                  \ --aligner {bowtie2,bwa,kma}\naligner\n-n THREADS, --threads THREADS\n\
                  number of threads (CPUs) to use (default=8)\n-o OUTPUT_FILE, --output_file\
                  \ OUTPUT_FILE\nname of output filename(s)\n--debug             \
                  \  debug mode\n--clean               removes temporary files\n--local\
                  \               use local database (default: uses database in\n\
                  executable directory)\n--include_wildcard    include wildcard\n\
                  --include_baits       include baits\n--mapq MAPQ           filter\
                  \ reads based on MAPQ score\n--mapped MAPPED       filter reads\
                  \ based on mapped reads\n--coverage COVERAGE   filter reads based\
                  \ on coverage of reference sequence\n"
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a {bowtie2,bwa,kma}]\n\
                \               [-n THREADS] -o OUTPUT_FILE [--debug] [--clean] [--local]\n\
                \               [--include_wildcard] [--include_baits] [--mapq MAPQ]\n\
                \               [--mapped MAPPED] [--coverage COVERAGE]\n\nAligns\
                \ metagenomic reads to CARD and wildCARD reference using bowtie or\
                \ bwa\nand provide reports.\n\noptional arguments:\n  -h, --help \
                \           show this help message and exit\n  -1 READ_ONE, --read_one\
                \ READ_ONE\n                        raw read one (qc and trimmied)\n\
                \  -2 READ_TWO, --read_two READ_TWO\n                        raw read\
                \ two (qc and trimmied)\n  -a {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n\
                \                        aligner\n  -n THREADS, --threads THREADS\n\
                \                        number of threads (CPUs) to use (default=8)\n\
                \  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                   \
                \     name of output filename(s)\n  --debug               debug mode\n\
                \  --clean               removes temporary files\n  --local      \
                \         use local database (default: uses database in\n        \
                \                executable directory)\n  --include_wildcard    include\
                \ wildcard\n  --include_baits       include baits\n  --mapq MAPQ \
                \          filter reads based on MAPQ score\n  --mapped MAPPED   \
                \    filter reads based on mapped reads\n  --coverage COVERAGE   filter\
                \ reads based on coverage of reference sequence\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id019
              positional:
              - !Positional
                optional: false
                position: 0
                name: load
                description: Loads CARD database, annotations and k-mer database
              - !Positional
                optional: false
                position: 1
                name: clean
                description: Removes BLAST databases and temporary files
              - !Positional
                optional: false
                position: 0
                name: galaxy
                description: Galaxy project wrapper
              - !Positional
                optional: false
                position: 0
                name: main
                description: Runs rgi application
              - !Positional
                optional: false
                position: 1
                name: tab
                description: Creates a Tab-delimited from rgi results
              - !Positional
                optional: false
                position: 2
                name: parser
                description: Creates categorical JSON files RGI wheel visualization
              - !Positional
                optional: false
                position: 3
                name: heatmap
                description: Heatmap for multiple analysis
              - !Positional
                optional: false
                position: 0
                name: bwt
                description: Align reads to CARD and in silico predicted allelic variants
                  (beta)
              - !Positional
                optional: false
                position: 0
                name: tm
                description: Baits Melting Temperature
              - !Positional
                optional: false
                position: 0
                name: card_annotation
                description: Create fasta files with annotations from card.json
              - !Positional
                optional: false
                position: 1
                name: wildcard_annotation
                description: Create fasta files with annotations from variants
              - !Positional
                optional: false
                position: 2
                name: baits_annotation
                description: Create fasta files with annotations from baits (experimental)
              - !Positional
                optional: false
                position: 3
                name: remove_duplicates
                description: Removes duplicate sequences (experimental)
              - !Positional
                optional: false
                position: 0
                name: kmer_build
                description: Build AMR specific k-mers database used for pathogen
                  of origin (beta)
              - !Positional
                optional: false
                position: 1
                name: kmer_query
                description: Query sequences against AMR k-mers database to predict
                  pathogen of origin (beta)
              named: []
              parent: *id026
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: rgi <command> [<args>]\n            commands are:\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Database\n               ---------------------------------------------------------------------------------------\n\
                \n               load     Loads CARD database, annotations and k-mer\
                \ database\n               clean    Removes BLAST databases and temporary\
                \ files\n               database Information on installed card database\n\
                \               galaxy   Galaxy project wrapper\n\n              \
                \ ---------------------------------------------------------------------------------------\n\
                \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                \n               main     Runs rgi application\n               tab\
                \      Creates a Tab-delimited from rgi results\n               parser\
                \   Creates categorical JSON files RGI wheel visualization\n     \
                \          heatmap  Heatmap for multiple analysis\n\n            \
                \   ---------------------------------------------------------------------------------------\n\
                \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                \               bwt                   Align reads to CARD and in silico\
                \ predicted allelic variants (beta)\n               \n           \
                \    ---------------------------------------------------------------------------------------\n\
                \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                \               tm                    Baits Melting Temperature\n\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                \               card_annotation       Create fasta files with annotations\
                \ from card.json\n               wildcard_annotation   Create fasta\
                \ files with annotations from variants\n               baits_annotation\
                \      Create fasta files with annotations from baits (experimental)\n\
                \               remove_duplicates     Removes duplicate sequences\
                \ (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
                \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                \               \n               kmer_build            Build AMR specific\
                \ k-mers database used for pathogen of origin (beta)\n           \
                \    kmer_query            Query sequences against AMR k-mers database\
                \ to predict pathogen of origin (beta)\n\n               \nrgi: error:\
                \ argument command: invalid choice: 'Genomic' (choose from 'main',\
                \ 'tab', 'parser', 'load', 'clean', 'galaxy', 'database', 'bwt', 'tm',\
                \ 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                \ 'heatmap', 'kmer_build', 'kmer_query')\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id020
              positional: []
              named:
              - !Flag
                optional: true
                synonyms:
                - --local
                description: "use local database (default: uses database in executable\n\
                  directory)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance\
                \ Gene Identifier - 5.1.1 - Clean\n\noptional arguments:\n  -h, --help\
                \  show this help message and exit\n  --local     use local database\
                \ (default: uses database in executable\n              directory)\n\
                \  --debug     debug mode\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id021
              positional:
              - !Positional
                optional: false
                position: 0
                name: hits
                description: --exclude_nudge       exclude hits nudged from loose
                  to strict hits
              named:
              - !Flag
                optional: true
                synonyms:
                - -i
                - --input_sequence
                description: "input file must be in either FASTA (contig and\nprotein)\
                  \ or gzip format! e.g myFile.fasta,\nmyFasta.fasta.gz"
                args: !SimpleFlagArg
                  name: INPUT_SEQUENCE
              - !Flag
                optional: true
                synonyms:
                - -o
                - --output_file
                description: output folder and base filename
                args: !SimpleFlagArg
                  name: OUTPUT_FILE
              - !Flag
                optional: true
                synonyms:
                - -t
                - --input_type
                description: specify data input type (default = contig)
                args: !ChoiceFlagArg
                  choices: !!set
                    ? contig
                    ? protein
              - !Flag
                optional: true
                synonyms:
                - -a
                - --alignment_tool
                description: specify alignment tool (default = BLAST)
                args: !ChoiceFlagArg
                  choices: !!set
                    ? DIAMOND
                    ? BLAST
              - !Flag
                optional: true
                synonyms:
                - -n
                - --num_threads
                description: "number of threads (CPUs) to use in the BLAST search\n\
                  (default=8)"
                args: !SimpleFlagArg
                  name: THREADS
              - !Flag
                optional: true
                synonyms:
                - --include_loose
                description: include loose hits in addition to strict and perfect
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --local
                description: "use local database (default: uses database in\nexecutable\
                  \ directory)"
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --clean
                description: removes temporary files
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --debug
                description: debug mode
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --low_quality
                description: use for short contigs to predict partial genes
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -d
                - --data
                description: specify a data-type (default = NA)
                args: !ChoiceFlagArg
                  choices: !!set
                    ? wgs
                    ? NA
                    ? chromosome
                    ? plasmid
              - !Flag
                optional: true
                synonyms:
                - --split_prodigal_jobs
                description: "run multiple prodigal jobs simultaneously for contigs\n\
                  in a fasta file\n"
                args: !EmptyFlagArg {}
              parent: *id026
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -h
                - --help
                description: show this help message and exit
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag: !Flag
                optional: true
                synonyms:
                - -v
                - --version
                description: prints software version number
                args: !EmptyFlagArg {}
              help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE [-t\
                \ {contig,protein}]\n                [-a {DIAMOND,BLAST}] [-n THREADS]\
                \ [--include_loose]\n                [--exclude_nudge] [--local] [--clean]\
                \ [--debug]\n                [--low_quality] [-d {wgs,plasmid,chromosome,NA}]\
                \ [-v]\n                [--split_prodigal_jobs]\n\nResistance Gene\
                \ Identifier - 5.1.1 - Main\n\noptional arguments:\n  -h, --help \
                \           show this help message and exit\n  -i INPUT_SEQUENCE,\
                \ --input_sequence INPUT_SEQUENCE\n                        input file\
                \ must be in either FASTA (contig and\n                        protein)\
                \ or gzip format! e.g myFile.fasta,\n                        myFasta.fasta.gz\n\
                \  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                   \
                \     output folder and base filename\n  -t {contig,protein}, --input_type\
                \ {contig,protein}\n                        specify data input type\
                \ (default = contig)\n  -a {DIAMOND,BLAST}, --alignment_tool {DIAMOND,BLAST}\n\
                \                        specify alignment tool (default = BLAST)\n\
                \  -n THREADS, --num_threads THREADS\n                        number\
                \ of threads (CPUs) to use in the BLAST search\n                 \
                \       (default=8)\n  --include_loose       include loose hits in\
                \ addition to strict and perfect\n                        hits\n \
                \ --exclude_nudge       exclude hits nudged from loose to strict hits\n\
                \  --local               use local database (default: uses database\
                \ in\n                        executable directory)\n  --clean   \
                \            removes temporary files\n  --debug               debug\
                \ mode\n  --low_quality         use for short contigs to predict partial\
                \ genes\n  -d {wgs,plasmid,chromosome,NA}, --data {wgs,plasmid,chromosome,NA}\n\
                \                        specify a data-type (default = NA)\n  -v,\
                \ --version         prints software version number\n  --split_prodigal_jobs\n\
                \                        run multiple prodigal jobs simultaneously\
                \ for contigs\n                        in a fasta file\n"
              generated_using: *id004
              docker_image:
            - &id029 !Command
              command: *id022
              positional: []
              named: []
              parent: *id026
              subcommands:
              - !Command
                command: *id023
                positional:
                - !Positional
                  optional: false
                  position: 0
                  name: rgi
                  description: ''
                - !Positional
                  optional: false
                  position: 1
                  name: parser
                  description: ''
                named:
                - !Flag
                  optional: true
                  synonyms:
                  - -t
                  description: ''
                  args: !SimpleFlagArg
                    name: TYPE
                - !Flag
                  optional: true
                  synonyms:
                  - --include_loose
                  description: ''
                  args: !EmptyFlagArg {}
                - !Flag
                  optional: true
                  synonyms:
                  - -o
                  description: ''
                  args: !SimpleFlagArg
                    name: OUTPUT
                - !Flag
                  optional: true
                  synonyms:
                  - -i
                  description: ''
                  args: !SimpleFlagArg
                    name: INPUT
                parent: *id027
                subcommands: []
                usage: []
                help_flag: !Flag
                  optional: true
                  synonyms:
                  - -h
                  description: ''
                  args: !EmptyFlagArg {}
                usage_flag:
                version_flag:
                help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
                  \ [-t TYPE]\nrgi parser: error: the following arguments are required:\
                  \ -i/--input\n"
                generated_using: *id024
                docker_image:
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
                \ [-t TYPE]\n\nCreates categorical .json files RGI wheel visualization.\
                \ An input .json file\ncontaining the RGI results must be input.\n\
                \noptional arguments:\n  -h, --help            show this help message\
                \ and exit\n  -i INPUT, --input INPUT\n                        RGI\
                \ results in a .json file\n  -o OUTPUT, --output OUTPUT\n        \
                \                Name/identifier for the output categorical .json\
                \ files\n  --include_loose       Include loose hits in addition to\
                \ strict and perfect\n                        hits\n  -t TYPE, --type\
                \ TYPE  type of input sequence: contig, protein or read\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id025
              positional:
              - !Positional
                optional: false
                position: 0
                name: load
                description: Loads CARD database, annotations and k-mer database
              - !Positional
                optional: false
                position: 1
                name: clean
                description: Removes BLAST databases and temporary files
              - !Positional
                optional: false
                position: 0
                name: galaxy
                description: Galaxy project wrapper
              - !Positional
                optional: false
                position: 0
                name: main
                description: Runs rgi application
              - !Positional
                optional: false
                position: 1
                name: tab
                description: Creates a Tab-delimited from rgi results
              - !Positional
                optional: false
                position: 2
                name: parser
                description: Creates categorical JSON files RGI wheel visualization
              - !Positional
                optional: false
                position: 3
                name: heatmap
                description: Heatmap for multiple analysis
              - !Positional
                optional: false
                position: 0
                name: bwt
                description: Align reads to CARD and in silico predicted allelic variants
                  (beta)
              - !Positional
                optional: false
                position: 0
                name: tm
                description: Baits Melting Temperature
              - !Positional
                optional: false
                position: 0
                name: card_annotation
                description: Create fasta files with annotations from card.json
              - !Positional
                optional: false
                position: 1
                name: wildcard_annotation
                description: Create fasta files with annotations from variants
              - !Positional
                optional: false
                position: 2
                name: baits_annotation
                description: Create fasta files with annotations from baits (experimental)
              - !Positional
                optional: false
                position: 3
                name: remove_duplicates
                description: Removes duplicate sequences (experimental)
              - !Positional
                optional: false
                position: 0
                name: kmer_build
                description: Build AMR specific k-mers database used for pathogen
                  of origin (beta)
              - !Positional
                optional: false
                position: 1
                name: kmer_query
                description: Query sequences against AMR k-mers database to predict
                  pathogen of origin (beta)
              named: []
              parent: *id026
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "usage: rgi <command> [<args>]\n            commands are:\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Database\n               ---------------------------------------------------------------------------------------\n\
                \n               load     Loads CARD database, annotations and k-mer\
                \ database\n               clean    Removes BLAST databases and temporary\
                \ files\n               database Information on installed card database\n\
                \               galaxy   Galaxy project wrapper\n\n              \
                \ ---------------------------------------------------------------------------------------\n\
                \               Genomic\n               ---------------------------------------------------------------------------------------\n\
                \n               main     Runs rgi application\n               tab\
                \      Creates a Tab-delimited from rgi results\n               parser\
                \   Creates categorical JSON files RGI wheel visualization\n     \
                \          heatmap  Heatmap for multiple analysis\n\n            \
                \   ---------------------------------------------------------------------------------------\n\
                \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
                \               bwt                   Align reads to CARD and in silico\
                \ predicted allelic variants (beta)\n               \n           \
                \    ---------------------------------------------------------------------------------------\n\
                \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
                \               tm                    Baits Melting Temperature\n\n\
                \               ---------------------------------------------------------------------------------------\n\
                \               Annotations\n               ---------------------------------------------------------------------------------------\n\
                \               card_annotation       Create fasta files with annotations\
                \ from card.json\n               wildcard_annotation   Create fasta\
                \ files with annotations from variants\n               baits_annotation\
                \      Create fasta files with annotations from baits (experimental)\n\
                \               remove_duplicates     Removes duplicate sequences\
                \ (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
                \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
                \               \n               kmer_build            Build AMR specific\
                \ k-mers database used for pathogen of origin (beta)\n           \
                \    kmer_query            Query sequences against AMR k-mers database\
                \ to predict pathogen of origin (beta)\n\n               \nrgi: error:\
                \ argument command: invalid choice: 'Database' (choose from 'main',\
                \ 'tab', 'parser', 'load', 'clean', 'galaxy', 'database', 'bwt', 'tm',\
                \ 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
                \ 'heatmap', 'kmer_build', 'kmer_query')\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "usage: rgi <command> [<args>]\n            commands are:\n\
              \               ---------------------------------------------------------------------------------------\n\
              \               Database\n               ---------------------------------------------------------------------------------------\n\
              \n               load     Loads CARD database, annotations and k-mer\
              \ database\n               clean    Removes BLAST databases and temporary\
              \ files\n               database Information on installed card database\n\
              \               galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
              \               Genomic\n               ---------------------------------------------------------------------------------------\n\
              \n               main     Runs rgi application\n               tab \
              \     Creates a Tab-delimited from rgi results\n               parser\
              \   Creates categorical JSON files RGI wheel visualization\n       \
              \        heatmap  Heatmap for multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
              \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
              \               bwt                   Align reads to CARD and in silico\
              \ predicted allelic variants (beta)\n               \n             \
              \  ---------------------------------------------------------------------------------------\n\
              \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
              \               tm                    Baits Melting Temperature\n\n\
              \               ---------------------------------------------------------------------------------------\n\
              \               Annotations\n               ---------------------------------------------------------------------------------------\n\
              \               card_annotation       Create fasta files with annotations\
              \ from card.json\n               wildcard_annotation   Create fasta\
              \ files with annotations from variants\n               baits_annotation\
              \      Create fasta files with annotations from baits (experimental)\n\
              \               remove_duplicates     Removes duplicate sequences (experimental)\n\
              \n               ---------------------------------------------------------------------------------------\n\
              \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
              \               \n               kmer_build            Build AMR specific\
              \ k-mers database used for pathogen of origin (beta)\n             \
              \  kmer_query            Query sequences against AMR k-mers database\
              \ to predict pathogen of origin (beta)\n\n               \n\nResistance\
              \ Gene Identifier - 5.1.1\n\npositional arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
              \                        Subcommand to run\n\noptional arguments:\n\
              \  -h, --help            show this help message and exit\n\nUse the\
              \ Resistance Gene Identifier to predict resistome(s) from protein or\n\
              nucleotide data based on homology and SNP models. Check\nhttps://card.mcmaster.ca/download\
              \ for software and data updates. Receive email\nnotification of monthly\
              \ CARD updates via the CARD Mailing List\n(https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene Identifier -\
            \ 5.1.1 - Tab-delimited\n\noptional arguments:\n  -h, --help         \
            \   show this help message and exit\n  -i AFILE, --afile AFILE\n     \
            \                   must be a rgi json result file\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: rgi
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: '[--local] [--debug]'
            args: !SimpleFlagArg
              name: OUTPUT
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input
            description: "Input file (bam file from RGI*BWT, json file of RGI\nresults,\
              \ fasta file of sequences)"
            args: !SimpleFlagArg
              name: INPUT
          - !Flag
            optional: true
            synonyms:
            - --bwt
            description: "Specify if the input file for analysis is a bam file\ngenerated\
              \ from RGI*BWT"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --rgi
            description: Specify if the input file is a RGI results json file
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --fasta
            description: Specify if the input file is a fasta file of sequences
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -k
            - --kmer_size
            description: length of k
            args: !SimpleFlagArg
              name: K
          - !Flag
            optional: true
            synonyms:
            - -m
            - --minimum
            description: "Minimum number of kmers in the called category for the\n\
              classification to be made (default=10)."
            args: !SimpleFlagArg
              name: MIN
          - !Flag
            optional: true
            synonyms:
            - -n
            - --threads
            description: number of threads (CPUs) to use (default=1)
            args: !SimpleFlagArg
              name: THREADS
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: Output file name.
            args: !SimpleFlagArg
              name: OUTPUT
          - !Flag
            optional: true
            synonyms:
            - --local
            description: "use local database (default: uses database in\nexecutable\
              \ directory)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta] -k K [-m\
            \ MIN] [-n THREADS]\n           -o OUTPUT [--local] [--debug]\n\nTests\
            \ sequenes using CARD*kmers\n\noptional arguments:\n  -h, --help     \
            \       show this help message and exit\n  -i INPUT, --input INPUT\n \
            \                       Input file (bam file from RGI*BWT, json file of\
            \ RGI\n                        results, fasta file of sequences)\n  --bwt\
            \                 Specify if the input file for analysis is a bam file\n\
            \                        generated from RGI*BWT\n  --rgi             \
            \    Specify if the input file is a RGI results json file\n  --fasta \
            \              Specify if the input file is a fasta file of sequences\n\
            \  -k K, --kmer_size K   length of k\n  -m MIN, --minimum MIN\n      \
            \                  Minimum number of kmers in the called category for\
            \ the\n                        classification to be made (default=10).\n\
            \  -n THREADS, --threads THREADS\n                        number of threads\
            \ (CPUs) to use (default=1)\n  -o OUTPUT, --output OUTPUT\n          \
            \              Output file name.\n  --local               use local database\
            \ (default: uses database in\n                        executable directory)\n\
            \  --debug               debug mode\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --card_json
            description: must be a card database json file
            args: !SimpleFlagArg
              name: CARD_JSON
          - !Flag
            optional: true
            synonyms:
            - --card_annotation
            description: annotated reference FASTA
            args: !SimpleFlagArg
              name: CARD_ANNOTATION
          - !Flag
            optional: true
            synonyms:
            - --wildcard_annotation
            description: annotated reference FASTA
            args: !SimpleFlagArg
              name: WILDCARD_ANNOTATION
          - !Flag
            optional: true
            synonyms:
            - --wildcard_index
            description: wildcard index file (index-for-model-sequences.txt)
            args: !SimpleFlagArg
              name: WILDCARD_INDEX
          - !Flag
            optional: true
            synonyms:
            - --wildcard_version
            description: specify variants version used
            args: !SimpleFlagArg
              name: WILDCARD_VERSION
          - !Flag
            optional: true
            synonyms:
            - --baits_annotation
            description: annotated reference FASTA
            args: !SimpleFlagArg
              name: BAITS_ANNOTATION
          - !Flag
            optional: true
            synonyms:
            - --baits_index
            description: baits index file (baits-probes-with-sequence-info.txt)
            args: !SimpleFlagArg
              name: BAITS_INDEX
          - !Flag
            optional: true
            synonyms:
            - --kmer_database
            description: json of kmer database
            args: !SimpleFlagArg
              name: KMER_DATABASE
          - !Flag
            optional: true
            synonyms:
            - --amr_kmers
            description: txt file of all amr kmers
            args: !SimpleFlagArg
              name: AMR_KMERS
          - !Flag
            optional: true
            synonyms:
            - --kmer_size
            description: kmer size if loading kmer files
            args: !SimpleFlagArg
              name: KMER_SIZE
          - !Flag
            optional: true
            synonyms:
            - --local
            description: "use local database (default: uses database in\nexecutable\
              \ directory)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation CARD_ANNOTATION]\n\
            \                [--wildcard_annotation WILDCARD_ANNOTATION]\n       \
            \         [--wildcard_index WILDCARD_INDEX]\n                [--wildcard_version\
            \ WILDCARD_VERSION]\n                [--baits_annotation BAITS_ANNOTATION]\n\
            \                [--baits_index BAITS_INDEX] [--kmer_database KMER_DATABASE]\n\
            \                [--amr_kmers AMR_KMERS] [--kmer_size KMER_SIZE] [--local]\n\
            \                [--debug]\n\nResistance Gene Identifier - 5.1.1 - Load\n\
            \noptional arguments:\n  -h, --help            show this help message\
            \ and exit\n  -i CARD_JSON, --card_json CARD_JSON\n                  \
            \      must be a card database json file\n  --card_annotation CARD_ANNOTATION\n\
            \                        annotated reference FASTA\n  --wildcard_annotation\
            \ WILDCARD_ANNOTATION\n                        annotated reference FASTA\n\
            \  --wildcard_index WILDCARD_INDEX\n                        wildcard index\
            \ file (index-for-model-sequences.txt)\n  --wildcard_version WILDCARD_VERSION\n\
            \                        specify variants version used\n  --baits_annotation\
            \ BAITS_ANNOTATION\n                        annotated reference FASTA\n\
            \  --baits_index BAITS_INDEX\n                        baits index file\
            \ (baits-probes-with-sequence-info.txt)\n  --kmer_database KMER_DATABASE\n\
            \                        json of kmer database\n  --amr_kmers AMR_KMERS\n\
            \                        txt file of all amr kmers\n  --kmer_size KMER_SIZE\n\
            \                        kmer size if loading kmer files\n  --local  \
            \             use local database (default: uses database in\n        \
            \                executable directory)\n  --debug               debug\
            \ mode\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --galaxy_database
            description: path to CARD data and blast databases
            args: !SimpleFlagArg
              name: GALAXY_DATABASE
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE [--debug]\n\
            \nResistance Gene Identifier - 5.1.1 - Galaxy project wrapper\n\noptional\
            \ arguments:\n  -h, --help            show this help message and exit\n\
            \  --galaxy_database GALAXY_DATABASE\n                        path to\
            \ CARD data and blast databases\n  --debug               debug mode\n\n\
            GALAXY_DATABASE must contain the following: data files (card.json,\nproteindb.fsa),diamond\
            \ blast database (protein.db.dmnd), ncbi blast database\n(protein.db.phr,\
            \ protein.db.pin, protein.db.psq)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id009
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input
            description: card.json file
            args: !SimpleFlagArg
              name: INPUT
          - !Flag
            optional: true
            synonyms:
            - --ncbi
            description: adds ncbi accession to FASTA headers
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\nCreates\
            \ card annotations for RGI BWT from card.json\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  -i INPUT,\
            \ --input INPUT\n                        card.json file\n  --ncbi    \
            \            adds ncbi accession to FASTA headers\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id010
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -t
            description: ''
            args: !SimpleFlagArg
              name: FILTER_TEMPERATURE
          - !Flag
            optional: true
            synonyms:
            - -o
            description: ''
            args: !SimpleFlagArg
              name: OUTPUT_FILE
          - !Flag
            optional: true
            synonyms:
            - -i
            description: ''
            args: !SimpleFlagArg
              name: INPUT_FILE
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n-i INPUT_FILE, --input_file\
              \ INPUT_FILE\ninput_file\n-o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
              output_file\n-t FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE\n\
              desired melting temperature (default=65).\n--clean               removes\
              \ temporary files\n--debug               debug mode\n"
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE] [-t FILTER_TEMPERATURE]\n\
            \              [--clean] [--debug]\n\nTM\n\noptional arguments:\n  -h,\
            \ --help            show this help message and exit\n  -i INPUT_FILE,\
            \ --input_file INPUT_FILE\n                        input_file\n  -o OUTPUT_FILE,\
            \ --output_file OUTPUT_FILE\n                        output_file\n  -t\
            \ FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE\n      \
            \                  desired melting temperature (default=65).\n  --clean\
            \               removes temporary files\n  --debug               debug\
            \ mode\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id011
          positional:
          - !Positional
            optional: false
            position: 0
            name: sequences.
            description: -n THREADS, --threads THREADS
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input_directory
            description: input directory of prevalence data
            args: !SimpleFlagArg
              name: INPUT_DIRECTORY
          - !Flag
            optional: true
            synonyms:
            - -c
            - --card
            description: "fasta file of CARD reference sequences. If missing,\nrun\
              \ 'rgi card_annotation' to generate."
            args: !SimpleFlagArg
              name: CARD_FASTA
          - !Flag
            optional: true
            synonyms:
            - -k
            description: k-mer size (e.g., 61)
            args: !SimpleFlagArg
              name: K
          - !Flag
            optional: true
            synonyms:
            - --skip
            description: skips the concatenation and splitting of the CARD*R*V
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --batch_size
            description: "number of kmers to query at a time using pyahocorasick\n\
              --the greater the number the more memory usage\n(default=100,000)\n"
            args: !SimpleFlagArg
              name: BATCH_SIZE
          - !Flag
            optional: true
            synonyms:
            - -n
            description: ''
            args: !SimpleFlagArg
              name: THREADS
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA -k K [--skip]\
            \ [-n THREADS]\n           [--batch_size BATCH_SIZE]\n\nBuilds the kmer\
            \ sets for CARD*kmers\n\noptional arguments:\n  -h, --help           \
            \ show this help message and exit\n  -i INPUT_DIRECTORY, --input_directory\
            \ INPUT_DIRECTORY\n                        input directory of prevalence\
            \ data\n  -c CARD_FASTA, --card CARD_FASTA\n                        fasta\
            \ file of CARD reference sequences. If missing,\n                    \
            \    run 'rgi card_annotation' to generate.\n  -k K                  k-mer\
            \ size (e.g., 61)\n  --skip                skips the concatenation and\
            \ splitting of the CARD*R*V\n                        sequences.\n  -n\
            \ THREADS, --threads THREADS\n                        number of threads\
            \ (CPUs) to use (default=1)\n  --batch_size BATCH_SIZE\n             \
            \           number of kmers to query at a time using pyahocorasick\n \
            \                       --the greater the number the more memory usage\n\
            \                        (default=100,000)\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id012
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --index_file
            description: "index file with baits information\n"
            args: !SimpleFlagArg
              name: INDEX_FILE
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\n\
            Creates baits annotations for RGI BWT from baits\n\noptional arguments:\n\
            \  -h, --help            show this help message and exit\n  --index_file\
            \ INDEX_FILE\n                        index file with baits information\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id013
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input
            description: Directory containing the RGI .json files (REQUIRED)
            args: !SimpleFlagArg
              name: INPUT
          - !Flag
            optional: true
            synonyms:
            - -cat
            - --category
            description: "The option to organize resistance genes based on a\ncategory."
            args: !ChoiceFlagArg
              choices: !!set
                ? resistance_mechanism
                ? gene_family
                ? drug_class
          - !Flag
            optional: true
            synonyms:
            - -f
            - --frequency
            description: Represent samples based on resistance profile.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: "Name for the output EPS and PNG files. The number of\nfiles\
              \ run will automatically be appended to the end of\nthe file name. (default=RGI_heatmap)"
            args: !SimpleFlagArg
              name: OUTPUT
          - !Flag
            optional: true
            synonyms:
            - -clus
            - --cluster
            description: "Option to use SciPy's hiearchical clustering algorithm\n\
              to cluster rows (AMR genes) or columns (samples)."
            args: !ChoiceFlagArg
              choices: !!set
                ? samples
                ? both
                ? genes
          - !Flag
            optional: true
            synonyms:
            - -d
            - --display
            description: "Specify display options for categories\n(deafult=plain)."
            args: !ChoiceFlagArg
              choices: !!set
                ? plain
                ? fill
                ? text
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi heatmap [-h] -i INPUT\n                   [-cat {drug_class,resistance_mechanism,gene_family}]\
            \ [-f]\n                   [-o OUTPUT] [-clus {samples,genes,both}]\n\
            \                   [-d {plain,fill,text}] [--debug]\n\nCreates a heatmap\
            \ when given multiple RGI results.\n\noptional arguments:\n  -h, --help\
            \            show this help message and exit\n  -i INPUT, --input INPUT\n\
            \                        Directory containing the RGI .json files (REQUIRED)\n\
            \  -cat {drug_class,resistance_mechanism,gene_family}, --category {drug_class,resistance_mechanism,gene_family}\n\
            \                        The option to organize resistance genes based\
            \ on a\n                        category.\n  -f, --frequency       Represent\
            \ samples based on resistance profile.\n  -o OUTPUT, --output OUTPUT\n\
            \                        Name for the output EPS and PNG files. The number\
            \ of\n                        files run will automatically be appended\
            \ to the end of\n                        the file name. (default=RGI_heatmap)\n\
            \  -clus {samples,genes,both}, --cluster {samples,genes,both}\n      \
            \                  Option to use SciPy's hiearchical clustering algorithm\n\
            \                        to cluster rows (AMR genes) or columns (samples).\n\
            \  -d {plain,fill,text}, --display {plain,fill,text}\n               \
            \         Specify display options for categories\n                   \
            \     (deafult=plain).\n  --debug               debug mode\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id014
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input
            description: input fasta file
            args: !SimpleFlagArg
              name: INPUT_FASTA_FILE
          - !Flag
            optional: true
            synonyms:
            - --card_annotation
            description: card_annotation input fasta file
            args: !SimpleFlagArg
              name: CARD_ANNOTATION
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output
            description: output fasta file
            args: !SimpleFlagArg
              name: OUTPUT_FASTA_FILE
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE --card_annotation\n\
            \                             CARD_ANNOTATION -o OUTPUT_FASTA_FILE [--debug]\n\
            \nRemoves duplicates sequences from annotationed fasta file\n\noptional\
            \ arguments:\n  -h, --help            show this help message and exit\n\
            \  -i INPUT_FASTA_FILE, --input INPUT_FASTA_FILE\n                   \
            \     input fasta file\n  --card_annotation CARD_ANNOTATION\n        \
            \                card_annotation input fasta file\n  -o OUTPUT_FASTA_FILE,\
            \ --output OUTPUT_FASTA_FILE\n                        output fasta file\n\
            \  --debug               debug mode\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id015
          positional:
          - !Positional
            optional: false
            position: 0
            name: load
            description: Loads CARD database, annotations and k-mer database
          - !Positional
            optional: false
            position: 1
            name: clean
            description: Removes BLAST databases and temporary files
          - !Positional
            optional: false
            position: 0
            name: galaxy
            description: Galaxy project wrapper
          - !Positional
            optional: false
            position: 0
            name: main
            description: Runs rgi application
          - !Positional
            optional: false
            position: 1
            name: tab
            description: Creates a Tab-delimited from rgi results
          - !Positional
            optional: false
            position: 2
            name: parser
            description: Creates categorical JSON files RGI wheel visualization
          - !Positional
            optional: false
            position: 3
            name: heatmap
            description: Heatmap for multiple analysis
          - !Positional
            optional: false
            position: 0
            name: bwt
            description: Align reads to CARD and in silico predicted allelic variants
              (beta)
          - !Positional
            optional: false
            position: 0
            name: tm
            description: Baits Melting Temperature
          - !Positional
            optional: false
            position: 0
            name: card_annotation
            description: Create fasta files with annotations from card.json
          - !Positional
            optional: false
            position: 1
            name: wildcard_annotation
            description: Create fasta files with annotations from variants
          - !Positional
            optional: false
            position: 2
            name: baits_annotation
            description: Create fasta files with annotations from baits (experimental)
          - !Positional
            optional: false
            position: 3
            name: remove_duplicates
            description: Removes duplicate sequences (experimental)
          - !Positional
            optional: false
            position: 0
            name: kmer_build
            description: Build AMR specific k-mers database used for pathogen of origin
              (beta)
          - !Positional
            optional: false
            position: 1
            name: kmer_query
            description: Query sequences against AMR k-mers database to predict pathogen
              of origin (beta)
          named: []
          parent: *id028
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: rgi <command> [<args>]\n            commands are:\n \
            \              ---------------------------------------------------------------------------------------\n\
            \               Database\n               ---------------------------------------------------------------------------------------\n\
            \n               load     Loads CARD database, annotations and k-mer database\n\
            \               clean    Removes BLAST databases and temporary files\n\
            \               database Information on installed card database\n    \
            \           galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
            \               Genomic\n               ---------------------------------------------------------------------------------------\n\
            \n               main     Runs rgi application\n               tab   \
            \   Creates a Tab-delimited from rgi results\n               parser  \
            \ Creates categorical JSON files RGI wheel visualization\n           \
            \    heatmap  Heatmap for multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
            \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
            \               bwt                   Align reads to CARD and in silico\
            \ predicted allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
            \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
            \               tm                    Baits Melting Temperature\n\n  \
            \             ---------------------------------------------------------------------------------------\n\
            \               Annotations\n               ---------------------------------------------------------------------------------------\n\
            \               card_annotation       Create fasta files with annotations\
            \ from card.json\n               wildcard_annotation   Create fasta files\
            \ with annotations from variants\n               baits_annotation    \
            \  Create fasta files with annotations from baits (experimental)\n   \
            \            remove_duplicates     Removes duplicate sequences (experimental)\n\
            \n               ---------------------------------------------------------------------------------------\n\
            \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
            \               \n               kmer_build            Build AMR specific\
            \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
            \            Query sequences against AMR k-mers database to predict pathogen\
            \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
            \ choice: 'Metagenomic' (choose from 'main', 'tab', 'parser', 'load',\
            \ 'clean', 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
            \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id016
          positional:
          - !Positional
            optional: false
            position: 0
            name: load
            description: Loads CARD database, annotations and k-mer database
          - !Positional
            optional: false
            position: 1
            name: clean
            description: Removes BLAST databases and temporary files
          - !Positional
            optional: false
            position: 0
            name: galaxy
            description: Galaxy project wrapper
          - !Positional
            optional: false
            position: 0
            name: main
            description: Runs rgi application
          - !Positional
            optional: false
            position: 1
            name: tab
            description: Creates a Tab-delimited from rgi results
          - !Positional
            optional: false
            position: 2
            name: parser
            description: Creates categorical JSON files RGI wheel visualization
          - !Positional
            optional: false
            position: 3
            name: heatmap
            description: Heatmap for multiple analysis
          - !Positional
            optional: false
            position: 0
            name: bwt
            description: Align reads to CARD and in silico predicted allelic variants
              (beta)
          - !Positional
            optional: false
            position: 0
            name: tm
            description: Baits Melting Temperature
          - !Positional
            optional: false
            position: 0
            name: card_annotation
            description: Create fasta files with annotations from card.json
          - !Positional
            optional: false
            position: 1
            name: wildcard_annotation
            description: Create fasta files with annotations from variants
          - !Positional
            optional: false
            position: 2
            name: baits_annotation
            description: Create fasta files with annotations from baits (experimental)
          - !Positional
            optional: false
            position: 3
            name: remove_duplicates
            description: Removes duplicate sequences (experimental)
          - !Positional
            optional: false
            position: 0
            name: kmer_build
            description: Build AMR specific k-mers database used for pathogen of origin
              (beta)
          - !Positional
            optional: false
            position: 1
            name: kmer_query
            description: Query sequences against AMR k-mers database to predict pathogen
              of origin (beta)
          named: []
          parent: *id028
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: rgi <command> [<args>]\n            commands are:\n \
            \              ---------------------------------------------------------------------------------------\n\
            \               Database\n               ---------------------------------------------------------------------------------------\n\
            \n               load     Loads CARD database, annotations and k-mer database\n\
            \               clean    Removes BLAST databases and temporary files\n\
            \               database Information on installed card database\n    \
            \           galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
            \               Genomic\n               ---------------------------------------------------------------------------------------\n\
            \n               main     Runs rgi application\n               tab   \
            \   Creates a Tab-delimited from rgi results\n               parser  \
            \ Creates categorical JSON files RGI wheel visualization\n           \
            \    heatmap  Heatmap for multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
            \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
            \               bwt                   Align reads to CARD and in silico\
            \ predicted allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
            \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
            \               tm                    Baits Melting Temperature\n\n  \
            \             ---------------------------------------------------------------------------------------\n\
            \               Annotations\n               ---------------------------------------------------------------------------------------\n\
            \               card_annotation       Create fasta files with annotations\
            \ from card.json\n               wildcard_annotation   Create fasta files\
            \ with annotations from variants\n               baits_annotation    \
            \  Create fasta files with annotations from baits (experimental)\n   \
            \            remove_duplicates     Removes duplicate sequences (experimental)\n\
            \n               ---------------------------------------------------------------------------------------\n\
            \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
            \               \n               kmer_build            Build AMR specific\
            \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
            \            Query sequences against AMR k-mers database to predict pathogen\
            \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
            \ choice: 'Annotations' (choose from 'main', 'tab', 'parser', 'load',\
            \ 'clean', 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
            \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id017
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input_directory
            description: input directory for wildcard
            args: !SimpleFlagArg
              name: INPUT_DIRECTORY
          - !Flag
            optional: true
            synonyms:
            - -j
            - --card_json
            description: "card.json file\n"
            args: !SimpleFlagArg
              name: CARD_JSON
          - !Flag
            optional: true
            synonyms:
            - -v
            description: ''
            args: !SimpleFlagArg
              name: VERSION
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - -v
            - --version
            description: specify version downloaded for wildcard / variants
            args: !SimpleFlagArg
              name: VERSION
          help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY -v VERSION\
            \ -j CARD_JSON\n\nCreates card annotations for RGI BWT from Variants or\
            \ Wilcard data\n\noptional arguments:\n  -h, --help            show this\
            \ help message and exit\n  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n\
            \                        input directory for wildcard\n  -v VERSION, --version\
            \ VERSION\n                        specify version downloaded for wildcard\
            \ / variants\n  -j CARD_JSON, --card_json CARD_JSON\n                \
            \        card.json file\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id018
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - -a
            description: ''
            args: !ChoiceFlagArg
              choices: !!set
                ? kma
                ? bwa
                ? bowtie2
          - !Flag
            optional: true
            synonyms:
            - '-2'
            description: ''
            args: !SimpleFlagArg
              name: READ_TWO
          - !Flag
            optional: true
            synonyms:
            - '-1'
            description: ''
            args: !SimpleFlagArg
              name: READ_ONE
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: "show this help message and exit\n-1 READ_ONE, --read_one\
              \ READ_ONE\nraw read one (qc and trimmied)\n-2 READ_TWO, --read_two\
              \ READ_TWO\nraw read two (qc and trimmied)\n-a {bowtie2,bwa,kma}, --aligner\
              \ {bowtie2,bwa,kma}\naligner\n-n THREADS, --threads THREADS\nnumber\
              \ of threads (CPUs) to use (default=8)\n-o OUTPUT_FILE, --output_file\
              \ OUTPUT_FILE\nname of output filename(s)\n--debug               debug\
              \ mode\n--clean               removes temporary files\n--local     \
              \          use local database (default: uses database in\nexecutable\
              \ directory)\n--include_wildcard    include wildcard\n--include_baits\
              \       include baits\n--mapq MAPQ           filter reads based on MAPQ\
              \ score\n--mapped MAPPED       filter reads based on mapped reads\n\
              --coverage COVERAGE   filter reads based on coverage of reference sequence\n"
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a {bowtie2,bwa,kma}]\n\
            \               [-n THREADS] -o OUTPUT_FILE [--debug] [--clean] [--local]\n\
            \               [--include_wildcard] [--include_baits] [--mapq MAPQ]\n\
            \               [--mapped MAPPED] [--coverage COVERAGE]\n\nAligns metagenomic\
            \ reads to CARD and wildCARD reference using bowtie or bwa\nand provide\
            \ reports.\n\noptional arguments:\n  -h, --help            show this help\
            \ message and exit\n  -1 READ_ONE, --read_one READ_ONE\n             \
            \           raw read one (qc and trimmied)\n  -2 READ_TWO, --read_two\
            \ READ_TWO\n                        raw read two (qc and trimmied)\n \
            \ -a {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n                \
            \        aligner\n  -n THREADS, --threads THREADS\n                  \
            \      number of threads (CPUs) to use (default=8)\n  -o OUTPUT_FILE,\
            \ --output_file OUTPUT_FILE\n                        name of output filename(s)\n\
            \  --debug               debug mode\n  --clean               removes temporary\
            \ files\n  --local               use local database (default: uses database\
            \ in\n                        executable directory)\n  --include_wildcard\
            \    include wildcard\n  --include_baits       include baits\n  --mapq\
            \ MAPQ           filter reads based on MAPQ score\n  --mapped MAPPED \
            \      filter reads based on mapped reads\n  --coverage COVERAGE   filter\
            \ reads based on coverage of reference sequence\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id019
          positional:
          - !Positional
            optional: false
            position: 0
            name: load
            description: Loads CARD database, annotations and k-mer database
          - !Positional
            optional: false
            position: 1
            name: clean
            description: Removes BLAST databases and temporary files
          - !Positional
            optional: false
            position: 0
            name: galaxy
            description: Galaxy project wrapper
          - !Positional
            optional: false
            position: 0
            name: main
            description: Runs rgi application
          - !Positional
            optional: false
            position: 1
            name: tab
            description: Creates a Tab-delimited from rgi results
          - !Positional
            optional: false
            position: 2
            name: parser
            description: Creates categorical JSON files RGI wheel visualization
          - !Positional
            optional: false
            position: 3
            name: heatmap
            description: Heatmap for multiple analysis
          - !Positional
            optional: false
            position: 0
            name: bwt
            description: Align reads to CARD and in silico predicted allelic variants
              (beta)
          - !Positional
            optional: false
            position: 0
            name: tm
            description: Baits Melting Temperature
          - !Positional
            optional: false
            position: 0
            name: card_annotation
            description: Create fasta files with annotations from card.json
          - !Positional
            optional: false
            position: 1
            name: wildcard_annotation
            description: Create fasta files with annotations from variants
          - !Positional
            optional: false
            position: 2
            name: baits_annotation
            description: Create fasta files with annotations from baits (experimental)
          - !Positional
            optional: false
            position: 3
            name: remove_duplicates
            description: Removes duplicate sequences (experimental)
          - !Positional
            optional: false
            position: 0
            name: kmer_build
            description: Build AMR specific k-mers database used for pathogen of origin
              (beta)
          - !Positional
            optional: false
            position: 1
            name: kmer_query
            description: Query sequences against AMR k-mers database to predict pathogen
              of origin (beta)
          named: []
          parent: *id028
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: rgi <command> [<args>]\n            commands are:\n \
            \              ---------------------------------------------------------------------------------------\n\
            \               Database\n               ---------------------------------------------------------------------------------------\n\
            \n               load     Loads CARD database, annotations and k-mer database\n\
            \               clean    Removes BLAST databases and temporary files\n\
            \               database Information on installed card database\n    \
            \           galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
            \               Genomic\n               ---------------------------------------------------------------------------------------\n\
            \n               main     Runs rgi application\n               tab   \
            \   Creates a Tab-delimited from rgi results\n               parser  \
            \ Creates categorical JSON files RGI wheel visualization\n           \
            \    heatmap  Heatmap for multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
            \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
            \               bwt                   Align reads to CARD and in silico\
            \ predicted allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
            \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
            \               tm                    Baits Melting Temperature\n\n  \
            \             ---------------------------------------------------------------------------------------\n\
            \               Annotations\n               ---------------------------------------------------------------------------------------\n\
            \               card_annotation       Create fasta files with annotations\
            \ from card.json\n               wildcard_annotation   Create fasta files\
            \ with annotations from variants\n               baits_annotation    \
            \  Create fasta files with annotations from baits (experimental)\n   \
            \            remove_duplicates     Removes duplicate sequences (experimental)\n\
            \n               ---------------------------------------------------------------------------------------\n\
            \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
            \               \n               kmer_build            Build AMR specific\
            \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
            \            Query sequences against AMR k-mers database to predict pathogen\
            \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
            \ choice: 'Genomic' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
            \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
            \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id020
          positional: []
          named:
          - !Flag
            optional: true
            synonyms:
            - --local
            description: "use local database (default: uses database in executable\n\
              directory)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance Gene\
            \ Identifier - 5.1.1 - Clean\n\noptional arguments:\n  -h, --help  show\
            \ this help message and exit\n  --local     use local database (default:\
            \ uses database in executable\n              directory)\n  --debug   \
            \  debug mode\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id021
          positional:
          - !Positional
            optional: false
            position: 0
            name: hits
            description: --exclude_nudge       exclude hits nudged from loose to strict
              hits
          named:
          - !Flag
            optional: true
            synonyms:
            - -i
            - --input_sequence
            description: "input file must be in either FASTA (contig and\nprotein)\
              \ or gzip format! e.g myFile.fasta,\nmyFasta.fasta.gz"
            args: !SimpleFlagArg
              name: INPUT_SEQUENCE
          - !Flag
            optional: true
            synonyms:
            - -o
            - --output_file
            description: output folder and base filename
            args: !SimpleFlagArg
              name: OUTPUT_FILE
          - !Flag
            optional: true
            synonyms:
            - -t
            - --input_type
            description: specify data input type (default = contig)
            args: !ChoiceFlagArg
              choices: !!set
                ? contig
                ? protein
          - !Flag
            optional: true
            synonyms:
            - -a
            - --alignment_tool
            description: specify alignment tool (default = BLAST)
            args: !ChoiceFlagArg
              choices: !!set
                ? DIAMOND
                ? BLAST
          - !Flag
            optional: true
            synonyms:
            - -n
            - --num_threads
            description: "number of threads (CPUs) to use in the BLAST search\n(default=8)"
            args: !SimpleFlagArg
              name: THREADS
          - !Flag
            optional: true
            synonyms:
            - --include_loose
            description: include loose hits in addition to strict and perfect
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --local
            description: "use local database (default: uses database in\nexecutable\
              \ directory)"
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --clean
            description: removes temporary files
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --debug
            description: debug mode
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --low_quality
            description: use for short contigs to predict partial genes
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -d
            - --data
            description: specify a data-type (default = NA)
            args: !ChoiceFlagArg
              choices: !!set
                ? plasmid
                ? wgs
                ? chromosome
                ? NA
          - !Flag
            optional: true
            synonyms:
            - --split_prodigal_jobs
            description: "run multiple prodigal jobs simultaneously for contigs\n\
              in a fasta file\n"
            args: !EmptyFlagArg {}
          parent: *id028
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -h
            - --help
            description: show this help message and exit
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag: !Flag
            optional: true
            synonyms:
            - -v
            - --version
            description: prints software version number
            args: !EmptyFlagArg {}
          help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE [-t {contig,protein}]\n\
            \                [-a {DIAMOND,BLAST}] [-n THREADS] [--include_loose]\n\
            \                [--exclude_nudge] [--local] [--clean] [--debug]\n   \
            \             [--low_quality] [-d {wgs,plasmid,chromosome,NA}] [-v]\n\
            \                [--split_prodigal_jobs]\n\nResistance Gene Identifier\
            \ - 5.1.1 - Main\n\noptional arguments:\n  -h, --help            show\
            \ this help message and exit\n  -i INPUT_SEQUENCE, --input_sequence INPUT_SEQUENCE\n\
            \                        input file must be in either FASTA (contig and\n\
            \                        protein) or gzip format! e.g myFile.fasta,\n\
            \                        myFasta.fasta.gz\n  -o OUTPUT_FILE, --output_file\
            \ OUTPUT_FILE\n                        output folder and base filename\n\
            \  -t {contig,protein}, --input_type {contig,protein}\n              \
            \          specify data input type (default = contig)\n  -a {DIAMOND,BLAST},\
            \ --alignment_tool {DIAMOND,BLAST}\n                        specify alignment\
            \ tool (default = BLAST)\n  -n THREADS, --num_threads THREADS\n      \
            \                  number of threads (CPUs) to use in the BLAST search\n\
            \                        (default=8)\n  --include_loose       include\
            \ loose hits in addition to strict and perfect\n                     \
            \   hits\n  --exclude_nudge       exclude hits nudged from loose to strict\
            \ hits\n  --local               use local database (default: uses database\
            \ in\n                        executable directory)\n  --clean       \
            \        removes temporary files\n  --debug               debug mode\n\
            \  --low_quality         use for short contigs to predict partial genes\n\
            \  -d {wgs,plasmid,chromosome,NA}, --data {wgs,plasmid,chromosome,NA}\n\
            \                        specify a data-type (default = NA)\n  -v, --version\
            \         prints software version number\n  --split_prodigal_jobs\n  \
            \                      run multiple prodigal jobs simultaneously for contigs\n\
            \                        in a fasta file\n"
          generated_using: *id004
          docker_image:
        - &id031 !Command
          command: *id022
          positional: []
          named: []
          parent: *id028
          subcommands:
          - !Command
            command: *id023
            positional:
            - !Positional
              optional: false
              position: 0
              name: rgi
              description: ''
            - !Positional
              optional: false
              position: 1
              name: parser
              description: ''
            named:
            - !Flag
              optional: true
              synonyms:
              - -t
              description: ''
              args: !SimpleFlagArg
                name: TYPE
            - !Flag
              optional: true
              synonyms:
              - --include_loose
              description: ''
              args: !EmptyFlagArg {}
            - !Flag
              optional: true
              synonyms:
              - -o
              description: ''
              args: !SimpleFlagArg
                name: OUTPUT
            - !Flag
              optional: true
              synonyms:
              - -i
              description: ''
              args: !SimpleFlagArg
                name: INPUT
            parent: *id029
            subcommands: []
            usage: []
            help_flag: !Flag
              optional: true
              synonyms:
              - -h
              description: ''
              args: !EmptyFlagArg {}
            usage_flag:
            version_flag:
            help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
              \ [-t TYPE]\nrgi parser: error: the following arguments are required:\
              \ -i/--input\n"
            generated_using: *id024
            docker_image:
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
            \ [-t TYPE]\n\nCreates categorical .json files RGI wheel visualization.\
            \ An input .json file\ncontaining the RGI results must be input.\n\noptional\
            \ arguments:\n  -h, --help            show this help message and exit\n\
            \  -i INPUT, --input INPUT\n                        RGI results in a .json\
            \ file\n  -o OUTPUT, --output OUTPUT\n                        Name/identifier\
            \ for the output categorical .json files\n  --include_loose       Include\
            \ loose hits in addition to strict and perfect\n                     \
            \   hits\n  -t TYPE, --type TYPE  type of input sequence: contig, protein\
            \ or read\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id025
          positional:
          - !Positional
            optional: false
            position: 0
            name: load
            description: Loads CARD database, annotations and k-mer database
          - !Positional
            optional: false
            position: 1
            name: clean
            description: Removes BLAST databases and temporary files
          - !Positional
            optional: false
            position: 0
            name: galaxy
            description: Galaxy project wrapper
          - !Positional
            optional: false
            position: 0
            name: main
            description: Runs rgi application
          - !Positional
            optional: false
            position: 1
            name: tab
            description: Creates a Tab-delimited from rgi results
          - !Positional
            optional: false
            position: 2
            name: parser
            description: Creates categorical JSON files RGI wheel visualization
          - !Positional
            optional: false
            position: 3
            name: heatmap
            description: Heatmap for multiple analysis
          - !Positional
            optional: false
            position: 0
            name: bwt
            description: Align reads to CARD and in silico predicted allelic variants
              (beta)
          - !Positional
            optional: false
            position: 0
            name: tm
            description: Baits Melting Temperature
          - !Positional
            optional: false
            position: 0
            name: card_annotation
            description: Create fasta files with annotations from card.json
          - !Positional
            optional: false
            position: 1
            name: wildcard_annotation
            description: Create fasta files with annotations from variants
          - !Positional
            optional: false
            position: 2
            name: baits_annotation
            description: Create fasta files with annotations from baits (experimental)
          - !Positional
            optional: false
            position: 3
            name: remove_duplicates
            description: Removes duplicate sequences (experimental)
          - !Positional
            optional: false
            position: 0
            name: kmer_build
            description: Build AMR specific k-mers database used for pathogen of origin
              (beta)
          - !Positional
            optional: false
            position: 1
            name: kmer_query
            description: Query sequences against AMR k-mers database to predict pathogen
              of origin (beta)
          named: []
          parent: *id028
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "usage: rgi <command> [<args>]\n            commands are:\n \
            \              ---------------------------------------------------------------------------------------\n\
            \               Database\n               ---------------------------------------------------------------------------------------\n\
            \n               load     Loads CARD database, annotations and k-mer database\n\
            \               clean    Removes BLAST databases and temporary files\n\
            \               database Information on installed card database\n    \
            \           galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
            \               Genomic\n               ---------------------------------------------------------------------------------------\n\
            \n               main     Runs rgi application\n               tab   \
            \   Creates a Tab-delimited from rgi results\n               parser  \
            \ Creates categorical JSON files RGI wheel visualization\n           \
            \    heatmap  Heatmap for multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
            \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
            \               bwt                   Align reads to CARD and in silico\
            \ predicted allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
            \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
            \               tm                    Baits Melting Temperature\n\n  \
            \             ---------------------------------------------------------------------------------------\n\
            \               Annotations\n               ---------------------------------------------------------------------------------------\n\
            \               card_annotation       Create fasta files with annotations\
            \ from card.json\n               wildcard_annotation   Create fasta files\
            \ with annotations from variants\n               baits_annotation    \
            \  Create fasta files with annotations from baits (experimental)\n   \
            \            remove_duplicates     Removes duplicate sequences (experimental)\n\
            \n               ---------------------------------------------------------------------------------------\n\
            \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
            \               \n               kmer_build            Build AMR specific\
            \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
            \            Query sequences against AMR k-mers database to predict pathogen\
            \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
            \ choice: 'Database' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
            \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
            \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "usage: rgi <command> [<args>]\n            commands are:\n   \
          \            ---------------------------------------------------------------------------------------\n\
          \               Database\n               ---------------------------------------------------------------------------------------\n\
          \n               load     Loads CARD database, annotations and k-mer database\n\
          \               clean    Removes BLAST databases and temporary files\n \
          \              database Information on installed card database\n       \
          \        galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
          \               Genomic\n               ---------------------------------------------------------------------------------------\n\
          \n               main     Runs rgi application\n               tab     \
          \ Creates a Tab-delimited from rgi results\n               parser   Creates\
          \ categorical JSON files RGI wheel visualization\n               heatmap\
          \  Heatmap for multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
          \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
          \               bwt                   Align reads to CARD and in silico\
          \ predicted allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
          \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
          \               tm                    Baits Melting Temperature\n\n    \
          \           ---------------------------------------------------------------------------------------\n\
          \               Annotations\n               ---------------------------------------------------------------------------------------\n\
          \               card_annotation       Create fasta files with annotations\
          \ from card.json\n               wildcard_annotation   Create fasta files\
          \ with annotations from variants\n               baits_annotation      Create\
          \ fasta files with annotations from baits (experimental)\n             \
          \  remove_duplicates     Removes duplicate sequences (experimental)\n\n\
          \               ---------------------------------------------------------------------------------------\n\
          \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
          \               \n               kmer_build            Build AMR specific\
          \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
          \            Query sequences against AMR k-mers database to predict pathogen\
          \ of origin (beta)\n\n               \n\nResistance Gene Identifier - 5.1.1\n\
          \npositional arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
          \                        Subcommand to run\n\noptional arguments:\n  -h,\
          \ --help            show this help message and exit\n\nUse the Resistance\
          \ Gene Identifier to predict resistome(s) from protein or\nnucleotide data\
          \ based on homology and SNP models. Check\nhttps://card.mcmaster.ca/download\
          \ for software and data updates. Receive email\nnotification of monthly\
          \ CARD updates via the CARD Mailing List\n(https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene Identifier - 5.1.1\
        \ - Tab-delimited\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -i AFILE, --afile AFILE\n                     \
        \   must be a rgi json result file\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: rgi
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: '[--local] [--debug]'
        args: !SimpleFlagArg
          name: OUTPUT
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input
        description: "Input file (bam file from RGI*BWT, json file of RGI\nresults,\
          \ fasta file of sequences)"
        args: !SimpleFlagArg
          name: INPUT
      - !Flag
        optional: true
        synonyms:
        - --bwt
        description: "Specify if the input file for analysis is a bam file\ngenerated\
          \ from RGI*BWT"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --rgi
        description: Specify if the input file is a RGI results json file
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --fasta
        description: Specify if the input file is a fasta file of sequences
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -k
        - --kmer_size
        description: length of k
        args: !SimpleFlagArg
          name: K
      - !Flag
        optional: true
        synonyms:
        - -m
        - --minimum
        description: "Minimum number of kmers in the called category for the\nclassification\
          \ to be made (default=10)."
        args: !SimpleFlagArg
          name: MIN
      - !Flag
        optional: true
        synonyms:
        - -n
        - --threads
        description: number of threads (CPUs) to use (default=1)
        args: !SimpleFlagArg
          name: THREADS
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: Output file name.
        args: !SimpleFlagArg
          name: OUTPUT
      - !Flag
        optional: true
        synonyms:
        - --local
        description: "use local database (default: uses database in\nexecutable directory)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta] -k K [-m MIN]\
        \ [-n THREADS]\n           -o OUTPUT [--local] [--debug]\n\nTests sequenes\
        \ using CARD*kmers\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -i INPUT, --input INPUT\n                     \
        \   Input file (bam file from RGI*BWT, json file of RGI\n                \
        \        results, fasta file of sequences)\n  --bwt                 Specify\
        \ if the input file for analysis is a bam file\n                        generated\
        \ from RGI*BWT\n  --rgi                 Specify if the input file is a RGI\
        \ results json file\n  --fasta               Specify if the input file is\
        \ a fasta file of sequences\n  -k K, --kmer_size K   length of k\n  -m MIN,\
        \ --minimum MIN\n                        Minimum number of kmers in the called\
        \ category for the\n                        classification to be made (default=10).\n\
        \  -n THREADS, --threads THREADS\n                        number of threads\
        \ (CPUs) to use (default=1)\n  -o OUTPUT, --output OUTPUT\n              \
        \          Output file name.\n  --local               use local database (default:\
        \ uses database in\n                        executable directory)\n  --debug\
        \               debug mode\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --card_json
        description: must be a card database json file
        args: !SimpleFlagArg
          name: CARD_JSON
      - !Flag
        optional: true
        synonyms:
        - --card_annotation
        description: annotated reference FASTA
        args: !SimpleFlagArg
          name: CARD_ANNOTATION
      - !Flag
        optional: true
        synonyms:
        - --wildcard_annotation
        description: annotated reference FASTA
        args: !SimpleFlagArg
          name: WILDCARD_ANNOTATION
      - !Flag
        optional: true
        synonyms:
        - --wildcard_index
        description: wildcard index file (index-for-model-sequences.txt)
        args: !SimpleFlagArg
          name: WILDCARD_INDEX
      - !Flag
        optional: true
        synonyms:
        - --wildcard_version
        description: specify variants version used
        args: !SimpleFlagArg
          name: WILDCARD_VERSION
      - !Flag
        optional: true
        synonyms:
        - --baits_annotation
        description: annotated reference FASTA
        args: !SimpleFlagArg
          name: BAITS_ANNOTATION
      - !Flag
        optional: true
        synonyms:
        - --baits_index
        description: baits index file (baits-probes-with-sequence-info.txt)
        args: !SimpleFlagArg
          name: BAITS_INDEX
      - !Flag
        optional: true
        synonyms:
        - --kmer_database
        description: json of kmer database
        args: !SimpleFlagArg
          name: KMER_DATABASE
      - !Flag
        optional: true
        synonyms:
        - --amr_kmers
        description: txt file of all amr kmers
        args: !SimpleFlagArg
          name: AMR_KMERS
      - !Flag
        optional: true
        synonyms:
        - --kmer_size
        description: kmer size if loading kmer files
        args: !SimpleFlagArg
          name: KMER_SIZE
      - !Flag
        optional: true
        synonyms:
        - --local
        description: "use local database (default: uses database in\nexecutable directory)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation CARD_ANNOTATION]\n\
        \                [--wildcard_annotation WILDCARD_ANNOTATION]\n           \
        \     [--wildcard_index WILDCARD_INDEX]\n                [--wildcard_version\
        \ WILDCARD_VERSION]\n                [--baits_annotation BAITS_ANNOTATION]\n\
        \                [--baits_index BAITS_INDEX] [--kmer_database KMER_DATABASE]\n\
        \                [--amr_kmers AMR_KMERS] [--kmer_size KMER_SIZE] [--local]\n\
        \                [--debug]\n\nResistance Gene Identifier - 5.1.1 - Load\n\n\
        optional arguments:\n  -h, --help            show this help message and exit\n\
        \  -i CARD_JSON, --card_json CARD_JSON\n                        must be a\
        \ card database json file\n  --card_annotation CARD_ANNOTATION\n         \
        \               annotated reference FASTA\n  --wildcard_annotation WILDCARD_ANNOTATION\n\
        \                        annotated reference FASTA\n  --wildcard_index WILDCARD_INDEX\n\
        \                        wildcard index file (index-for-model-sequences.txt)\n\
        \  --wildcard_version WILDCARD_VERSION\n                        specify variants\
        \ version used\n  --baits_annotation BAITS_ANNOTATION\n                  \
        \      annotated reference FASTA\n  --baits_index BAITS_INDEX\n          \
        \              baits index file (baits-probes-with-sequence-info.txt)\n  --kmer_database\
        \ KMER_DATABASE\n                        json of kmer database\n  --amr_kmers\
        \ AMR_KMERS\n                        txt file of all amr kmers\n  --kmer_size\
        \ KMER_SIZE\n                        kmer size if loading kmer files\n  --local\
        \               use local database (default: uses database in\n          \
        \              executable directory)\n  --debug               debug mode\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --galaxy_database
        description: path to CARD data and blast databases
        args: !SimpleFlagArg
          name: GALAXY_DATABASE
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE [--debug]\n\
        \nResistance Gene Identifier - 5.1.1 - Galaxy project wrapper\n\noptional\
        \ arguments:\n  -h, --help            show this help message and exit\n  --galaxy_database\
        \ GALAXY_DATABASE\n                        path to CARD data and blast databases\n\
        \  --debug               debug mode\n\nGALAXY_DATABASE must contain the following:\
        \ data files (card.json,\nproteindb.fsa),diamond blast database (protein.db.dmnd),\
        \ ncbi blast database\n(protein.db.phr, protein.db.pin, protein.db.psq)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id009
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input
        description: card.json file
        args: !SimpleFlagArg
          name: INPUT
      - !Flag
        optional: true
        synonyms:
        - --ncbi
        description: adds ncbi accession to FASTA headers
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\nCreates card\
        \ annotations for RGI BWT from card.json\n\noptional arguments:\n  -h, --help\
        \            show this help message and exit\n  -i INPUT, --input INPUT\n\
        \                        card.json file\n  --ncbi                adds ncbi\
        \ accession to FASTA headers\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id010
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -t
        description: ''
        args: !SimpleFlagArg
          name: FILTER_TEMPERATURE
      - !Flag
        optional: true
        synonyms:
        - -o
        description: ''
        args: !SimpleFlagArg
          name: OUTPUT_FILE
      - !Flag
        optional: true
        synonyms:
        - -i
        description: ''
        args: !SimpleFlagArg
          name: INPUT_FILE
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n-i INPUT_FILE, --input_file\
          \ INPUT_FILE\ninput_file\n-o OUTPUT_FILE, --output_file OUTPUT_FILE\noutput_file\n\
          -t FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE\ndesired\
          \ melting temperature (default=65).\n--clean               removes temporary\
          \ files\n--debug               debug mode\n"
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE] [-t FILTER_TEMPERATURE]\n\
        \              [--clean] [--debug]\n\nTM\n\noptional arguments:\n  -h, --help\
        \            show this help message and exit\n  -i INPUT_FILE, --input_file\
        \ INPUT_FILE\n                        input_file\n  -o OUTPUT_FILE, --output_file\
        \ OUTPUT_FILE\n                        output_file\n  -t FILTER_TEMPERATURE,\
        \ --filter_temperature FILTER_TEMPERATURE\n                        desired\
        \ melting temperature (default=65).\n  --clean               removes temporary\
        \ files\n  --debug               debug mode\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id011
      positional:
      - !Positional
        optional: false
        position: 0
        name: sequences.
        description: -n THREADS, --threads THREADS
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input_directory
        description: input directory of prevalence data
        args: !SimpleFlagArg
          name: INPUT_DIRECTORY
      - !Flag
        optional: true
        synonyms:
        - -c
        - --card
        description: "fasta file of CARD reference sequences. If missing,\nrun 'rgi\
          \ card_annotation' to generate."
        args: !SimpleFlagArg
          name: CARD_FASTA
      - !Flag
        optional: true
        synonyms:
        - -k
        description: k-mer size (e.g., 61)
        args: !SimpleFlagArg
          name: K
      - !Flag
        optional: true
        synonyms:
        - --skip
        description: skips the concatenation and splitting of the CARD*R*V
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --batch_size
        description: "number of kmers to query at a time using pyahocorasick\n--the\
          \ greater the number the more memory usage\n(default=100,000)\n"
        args: !SimpleFlagArg
          name: BATCH_SIZE
      - !Flag
        optional: true
        synonyms:
        - -n
        description: ''
        args: !SimpleFlagArg
          name: THREADS
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA -k K [--skip]\
        \ [-n THREADS]\n           [--batch_size BATCH_SIZE]\n\nBuilds the kmer sets\
        \ for CARD*kmers\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n\
        \                        input directory of prevalence data\n  -c CARD_FASTA,\
        \ --card CARD_FASTA\n                        fasta file of CARD reference\
        \ sequences. If missing,\n                        run 'rgi card_annotation'\
        \ to generate.\n  -k K                  k-mer size (e.g., 61)\n  --skip  \
        \              skips the concatenation and splitting of the CARD*R*V\n   \
        \                     sequences.\n  -n THREADS, --threads THREADS\n      \
        \                  number of threads (CPUs) to use (default=1)\n  --batch_size\
        \ BATCH_SIZE\n                        number of kmers to query at a time using\
        \ pyahocorasick\n                        --the greater the number the more\
        \ memory usage\n                        (default=100,000)\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id012
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --index_file
        description: "index file with baits information\n"
        args: !SimpleFlagArg
          name: INDEX_FILE
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\nCreates\
        \ baits annotations for RGI BWT from baits\n\noptional arguments:\n  -h, --help\
        \            show this help message and exit\n  --index_file INDEX_FILE\n\
        \                        index file with baits information\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id013
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input
        description: Directory containing the RGI .json files (REQUIRED)
        args: !SimpleFlagArg
          name: INPUT
      - !Flag
        optional: true
        synonyms:
        - -cat
        - --category
        description: "The option to organize resistance genes based on a\ncategory."
        args: !ChoiceFlagArg
          choices: !!set
            ? resistance_mechanism
            ? gene_family
            ? drug_class
      - !Flag
        optional: true
        synonyms:
        - -f
        - --frequency
        description: Represent samples based on resistance profile.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: "Name for the output EPS and PNG files. The number of\nfiles\
          \ run will automatically be appended to the end of\nthe file name. (default=RGI_heatmap)"
        args: !SimpleFlagArg
          name: OUTPUT
      - !Flag
        optional: true
        synonyms:
        - -clus
        - --cluster
        description: "Option to use SciPy's hiearchical clustering algorithm\nto cluster\
          \ rows (AMR genes) or columns (samples)."
        args: !ChoiceFlagArg
          choices: !!set
            ? genes
            ? both
            ? samples
      - !Flag
        optional: true
        synonyms:
        - -d
        - --display
        description: "Specify display options for categories\n(deafult=plain)."
        args: !ChoiceFlagArg
          choices: !!set
            ? fill
            ? text
            ? plain
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi heatmap [-h] -i INPUT\n                   [-cat {drug_class,resistance_mechanism,gene_family}]\
        \ [-f]\n                   [-o OUTPUT] [-clus {samples,genes,both}]\n    \
        \               [-d {plain,fill,text}] [--debug]\n\nCreates a heatmap when\
        \ given multiple RGI results.\n\noptional arguments:\n  -h, --help       \
        \     show this help message and exit\n  -i INPUT, --input INPUT\n       \
        \                 Directory containing the RGI .json files (REQUIRED)\n  -cat\
        \ {drug_class,resistance_mechanism,gene_family}, --category {drug_class,resistance_mechanism,gene_family}\n\
        \                        The option to organize resistance genes based on\
        \ a\n                        category.\n  -f, --frequency       Represent\
        \ samples based on resistance profile.\n  -o OUTPUT, --output OUTPUT\n   \
        \                     Name for the output EPS and PNG files. The number of\n\
        \                        files run will automatically be appended to the end\
        \ of\n                        the file name. (default=RGI_heatmap)\n  -clus\
        \ {samples,genes,both}, --cluster {samples,genes,both}\n                 \
        \       Option to use SciPy's hiearchical clustering algorithm\n         \
        \               to cluster rows (AMR genes) or columns (samples).\n  -d {plain,fill,text},\
        \ --display {plain,fill,text}\n                        Specify display options\
        \ for categories\n                        (deafult=plain).\n  --debug    \
        \           debug mode\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id014
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input
        description: input fasta file
        args: !SimpleFlagArg
          name: INPUT_FASTA_FILE
      - !Flag
        optional: true
        synonyms:
        - --card_annotation
        description: card_annotation input fasta file
        args: !SimpleFlagArg
          name: CARD_ANNOTATION
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output
        description: output fasta file
        args: !SimpleFlagArg
          name: OUTPUT_FASTA_FILE
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE --card_annotation\n\
        \                             CARD_ANNOTATION -o OUTPUT_FASTA_FILE [--debug]\n\
        \nRemoves duplicates sequences from annotationed fasta file\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -i INPUT_FASTA_FILE,\
        \ --input INPUT_FASTA_FILE\n                        input fasta file\n  --card_annotation\
        \ CARD_ANNOTATION\n                        card_annotation input fasta file\n\
        \  -o OUTPUT_FASTA_FILE, --output OUTPUT_FASTA_FILE\n                    \
        \    output fasta file\n  --debug               debug mode\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id015
      positional:
      - !Positional
        optional: false
        position: 0
        name: load
        description: Loads CARD database, annotations and k-mer database
      - !Positional
        optional: false
        position: 1
        name: clean
        description: Removes BLAST databases and temporary files
      - !Positional
        optional: false
        position: 0
        name: galaxy
        description: Galaxy project wrapper
      - !Positional
        optional: false
        position: 0
        name: main
        description: Runs rgi application
      - !Positional
        optional: false
        position: 1
        name: tab
        description: Creates a Tab-delimited from rgi results
      - !Positional
        optional: false
        position: 2
        name: parser
        description: Creates categorical JSON files RGI wheel visualization
      - !Positional
        optional: false
        position: 3
        name: heatmap
        description: Heatmap for multiple analysis
      - !Positional
        optional: false
        position: 0
        name: bwt
        description: Align reads to CARD and in silico predicted allelic variants
          (beta)
      - !Positional
        optional: false
        position: 0
        name: tm
        description: Baits Melting Temperature
      - !Positional
        optional: false
        position: 0
        name: card_annotation
        description: Create fasta files with annotations from card.json
      - !Positional
        optional: false
        position: 1
        name: wildcard_annotation
        description: Create fasta files with annotations from variants
      - !Positional
        optional: false
        position: 2
        name: baits_annotation
        description: Create fasta files with annotations from baits (experimental)
      - !Positional
        optional: false
        position: 3
        name: remove_duplicates
        description: Removes duplicate sequences (experimental)
      - !Positional
        optional: false
        position: 0
        name: kmer_build
        description: Build AMR specific k-mers database used for pathogen of origin
          (beta)
      - !Positional
        optional: false
        position: 1
        name: kmer_query
        description: Query sequences against AMR k-mers database to predict pathogen
          of origin (beta)
      named: []
      parent: *id030
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: rgi <command> [<args>]\n            commands are:\n     \
        \          ---------------------------------------------------------------------------------------\n\
        \               Database\n               ---------------------------------------------------------------------------------------\n\
        \n               load     Loads CARD database, annotations and k-mer database\n\
        \               clean    Removes BLAST databases and temporary files\n   \
        \            database Information on installed card database\n           \
        \    galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
        \n               main     Runs rgi application\n               tab      Creates\
        \ a Tab-delimited from rgi results\n               parser   Creates categorical\
        \ JSON files RGI wheel visualization\n               heatmap  Heatmap for\
        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
        \               bwt                   Align reads to CARD and in silico predicted\
        \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
        \               tm                    Baits Melting Temperature\n\n      \
        \         ---------------------------------------------------------------------------------------\n\
        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
        \               card_annotation       Create fasta files with annotations\
        \ from card.json\n               wildcard_annotation   Create fasta files\
        \ with annotations from variants\n               baits_annotation      Create\
        \ fasta files with annotations from baits (experimental)\n               remove_duplicates\
        \     Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
        \               \n               kmer_build            Build AMR specific\
        \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
        \            Query sequences against AMR k-mers database to predict pathogen\
        \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
        \ choice: 'Metagenomic' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
        \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
        \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id016
      positional:
      - !Positional
        optional: false
        position: 0
        name: load
        description: Loads CARD database, annotations and k-mer database
      - !Positional
        optional: false
        position: 1
        name: clean
        description: Removes BLAST databases and temporary files
      - !Positional
        optional: false
        position: 0
        name: galaxy
        description: Galaxy project wrapper
      - !Positional
        optional: false
        position: 0
        name: main
        description: Runs rgi application
      - !Positional
        optional: false
        position: 1
        name: tab
        description: Creates a Tab-delimited from rgi results
      - !Positional
        optional: false
        position: 2
        name: parser
        description: Creates categorical JSON files RGI wheel visualization
      - !Positional
        optional: false
        position: 3
        name: heatmap
        description: Heatmap for multiple analysis
      - !Positional
        optional: false
        position: 0
        name: bwt
        description: Align reads to CARD and in silico predicted allelic variants
          (beta)
      - !Positional
        optional: false
        position: 0
        name: tm
        description: Baits Melting Temperature
      - !Positional
        optional: false
        position: 0
        name: card_annotation
        description: Create fasta files with annotations from card.json
      - !Positional
        optional: false
        position: 1
        name: wildcard_annotation
        description: Create fasta files with annotations from variants
      - !Positional
        optional: false
        position: 2
        name: baits_annotation
        description: Create fasta files with annotations from baits (experimental)
      - !Positional
        optional: false
        position: 3
        name: remove_duplicates
        description: Removes duplicate sequences (experimental)
      - !Positional
        optional: false
        position: 0
        name: kmer_build
        description: Build AMR specific k-mers database used for pathogen of origin
          (beta)
      - !Positional
        optional: false
        position: 1
        name: kmer_query
        description: Query sequences against AMR k-mers database to predict pathogen
          of origin (beta)
      named: []
      parent: *id030
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: rgi <command> [<args>]\n            commands are:\n     \
        \          ---------------------------------------------------------------------------------------\n\
        \               Database\n               ---------------------------------------------------------------------------------------\n\
        \n               load     Loads CARD database, annotations and k-mer database\n\
        \               clean    Removes BLAST databases and temporary files\n   \
        \            database Information on installed card database\n           \
        \    galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
        \n               main     Runs rgi application\n               tab      Creates\
        \ a Tab-delimited from rgi results\n               parser   Creates categorical\
        \ JSON files RGI wheel visualization\n               heatmap  Heatmap for\
        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
        \               bwt                   Align reads to CARD and in silico predicted\
        \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
        \               tm                    Baits Melting Temperature\n\n      \
        \         ---------------------------------------------------------------------------------------\n\
        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
        \               card_annotation       Create fasta files with annotations\
        \ from card.json\n               wildcard_annotation   Create fasta files\
        \ with annotations from variants\n               baits_annotation      Create\
        \ fasta files with annotations from baits (experimental)\n               remove_duplicates\
        \     Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
        \               \n               kmer_build            Build AMR specific\
        \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
        \            Query sequences against AMR k-mers database to predict pathogen\
        \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
        \ choice: 'Annotations' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
        \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
        \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id017
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input_directory
        description: input directory for wildcard
        args: !SimpleFlagArg
          name: INPUT_DIRECTORY
      - !Flag
        optional: true
        synonyms:
        - -j
        - --card_json
        description: "card.json file\n"
        args: !SimpleFlagArg
          name: CARD_JSON
      - !Flag
        optional: true
        synonyms:
        - -v
        description: ''
        args: !SimpleFlagArg
          name: VERSION
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - -v
        - --version
        description: specify version downloaded for wildcard / variants
        args: !SimpleFlagArg
          name: VERSION
      help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY -v VERSION\
        \ -j CARD_JSON\n\nCreates card annotations for RGI BWT from Variants or Wilcard\
        \ data\n\noptional arguments:\n  -h, --help            show this help message\
        \ and exit\n  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n    \
        \                    input directory for wildcard\n  -v VERSION, --version\
        \ VERSION\n                        specify version downloaded for wildcard\
        \ / variants\n  -j CARD_JSON, --card_json CARD_JSON\n                    \
        \    card.json file\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id018
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - -a
        description: ''
        args: !ChoiceFlagArg
          choices: !!set
            ? bowtie2
            ? kma
            ? bwa
      - !Flag
        optional: true
        synonyms:
        - '-2'
        description: ''
        args: !SimpleFlagArg
          name: READ_TWO
      - !Flag
        optional: true
        synonyms:
        - '-1'
        description: ''
        args: !SimpleFlagArg
          name: READ_ONE
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: "show this help message and exit\n-1 READ_ONE, --read_one READ_ONE\n\
          raw read one (qc and trimmied)\n-2 READ_TWO, --read_two READ_TWO\nraw read\
          \ two (qc and trimmied)\n-a {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n\
          aligner\n-n THREADS, --threads THREADS\nnumber of threads (CPUs) to use\
          \ (default=8)\n-o OUTPUT_FILE, --output_file OUTPUT_FILE\nname of output\
          \ filename(s)\n--debug               debug mode\n--clean               removes\
          \ temporary files\n--local               use local database (default: uses\
          \ database in\nexecutable directory)\n--include_wildcard    include wildcard\n\
          --include_baits       include baits\n--mapq MAPQ           filter reads\
          \ based on MAPQ score\n--mapped MAPPED       filter reads based on mapped\
          \ reads\n--coverage COVERAGE   filter reads based on coverage of reference\
          \ sequence\n"
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a {bowtie2,bwa,kma}]\n\
        \               [-n THREADS] -o OUTPUT_FILE [--debug] [--clean] [--local]\n\
        \               [--include_wildcard] [--include_baits] [--mapq MAPQ]\n   \
        \            [--mapped MAPPED] [--coverage COVERAGE]\n\nAligns metagenomic\
        \ reads to CARD and wildCARD reference using bowtie or bwa\nand provide reports.\n\
        \noptional arguments:\n  -h, --help            show this help message and\
        \ exit\n  -1 READ_ONE, --read_one READ_ONE\n                        raw read\
        \ one (qc and trimmied)\n  -2 READ_TWO, --read_two READ_TWO\n            \
        \            raw read two (qc and trimmied)\n  -a {bowtie2,bwa,kma}, --aligner\
        \ {bowtie2,bwa,kma}\n                        aligner\n  -n THREADS, --threads\
        \ THREADS\n                        number of threads (CPUs) to use (default=8)\n\
        \  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        name\
        \ of output filename(s)\n  --debug               debug mode\n  --clean   \
        \            removes temporary files\n  --local               use local database\
        \ (default: uses database in\n                        executable directory)\n\
        \  --include_wildcard    include wildcard\n  --include_baits       include\
        \ baits\n  --mapq MAPQ           filter reads based on MAPQ score\n  --mapped\
        \ MAPPED       filter reads based on mapped reads\n  --coverage COVERAGE \
        \  filter reads based on coverage of reference sequence\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id019
      positional:
      - !Positional
        optional: false
        position: 0
        name: load
        description: Loads CARD database, annotations and k-mer database
      - !Positional
        optional: false
        position: 1
        name: clean
        description: Removes BLAST databases and temporary files
      - !Positional
        optional: false
        position: 0
        name: galaxy
        description: Galaxy project wrapper
      - !Positional
        optional: false
        position: 0
        name: main
        description: Runs rgi application
      - !Positional
        optional: false
        position: 1
        name: tab
        description: Creates a Tab-delimited from rgi results
      - !Positional
        optional: false
        position: 2
        name: parser
        description: Creates categorical JSON files RGI wheel visualization
      - !Positional
        optional: false
        position: 3
        name: heatmap
        description: Heatmap for multiple analysis
      - !Positional
        optional: false
        position: 0
        name: bwt
        description: Align reads to CARD and in silico predicted allelic variants
          (beta)
      - !Positional
        optional: false
        position: 0
        name: tm
        description: Baits Melting Temperature
      - !Positional
        optional: false
        position: 0
        name: card_annotation
        description: Create fasta files with annotations from card.json
      - !Positional
        optional: false
        position: 1
        name: wildcard_annotation
        description: Create fasta files with annotations from variants
      - !Positional
        optional: false
        position: 2
        name: baits_annotation
        description: Create fasta files with annotations from baits (experimental)
      - !Positional
        optional: false
        position: 3
        name: remove_duplicates
        description: Removes duplicate sequences (experimental)
      - !Positional
        optional: false
        position: 0
        name: kmer_build
        description: Build AMR specific k-mers database used for pathogen of origin
          (beta)
      - !Positional
        optional: false
        position: 1
        name: kmer_query
        description: Query sequences against AMR k-mers database to predict pathogen
          of origin (beta)
      named: []
      parent: *id030
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: rgi <command> [<args>]\n            commands are:\n     \
        \          ---------------------------------------------------------------------------------------\n\
        \               Database\n               ---------------------------------------------------------------------------------------\n\
        \n               load     Loads CARD database, annotations and k-mer database\n\
        \               clean    Removes BLAST databases and temporary files\n   \
        \            database Information on installed card database\n           \
        \    galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
        \n               main     Runs rgi application\n               tab      Creates\
        \ a Tab-delimited from rgi results\n               parser   Creates categorical\
        \ JSON files RGI wheel visualization\n               heatmap  Heatmap for\
        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
        \               bwt                   Align reads to CARD and in silico predicted\
        \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
        \               tm                    Baits Melting Temperature\n\n      \
        \         ---------------------------------------------------------------------------------------\n\
        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
        \               card_annotation       Create fasta files with annotations\
        \ from card.json\n               wildcard_annotation   Create fasta files\
        \ with annotations from variants\n               baits_annotation      Create\
        \ fasta files with annotations from baits (experimental)\n               remove_duplicates\
        \     Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
        \               \n               kmer_build            Build AMR specific\
        \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
        \            Query sequences against AMR k-mers database to predict pathogen\
        \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
        \ choice: 'Genomic' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
        \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
        \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id020
      positional: []
      named:
      - !Flag
        optional: true
        synonyms:
        - --local
        description: "use local database (default: uses database in executable\ndirectory)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance Gene Identifier\
        \ - 5.1.1 - Clean\n\noptional arguments:\n  -h, --help  show this help message\
        \ and exit\n  --local     use local database (default: uses database in executable\n\
        \              directory)\n  --debug     debug mode\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id021
      positional:
      - !Positional
        optional: false
        position: 0
        name: hits
        description: --exclude_nudge       exclude hits nudged from loose to strict
          hits
      named:
      - !Flag
        optional: true
        synonyms:
        - -i
        - --input_sequence
        description: "input file must be in either FASTA (contig and\nprotein) or\
          \ gzip format! e.g myFile.fasta,\nmyFasta.fasta.gz"
        args: !SimpleFlagArg
          name: INPUT_SEQUENCE
      - !Flag
        optional: true
        synonyms:
        - -o
        - --output_file
        description: output folder and base filename
        args: !SimpleFlagArg
          name: OUTPUT_FILE
      - !Flag
        optional: true
        synonyms:
        - -t
        - --input_type
        description: specify data input type (default = contig)
        args: !ChoiceFlagArg
          choices: !!set
            ? protein
            ? contig
      - !Flag
        optional: true
        synonyms:
        - -a
        - --alignment_tool
        description: specify alignment tool (default = BLAST)
        args: !ChoiceFlagArg
          choices: !!set
            ? BLAST
            ? DIAMOND
      - !Flag
        optional: true
        synonyms:
        - -n
        - --num_threads
        description: "number of threads (CPUs) to use in the BLAST search\n(default=8)"
        args: !SimpleFlagArg
          name: THREADS
      - !Flag
        optional: true
        synonyms:
        - --include_loose
        description: include loose hits in addition to strict and perfect
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --local
        description: "use local database (default: uses database in\nexecutable directory)"
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --clean
        description: removes temporary files
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --debug
        description: debug mode
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --low_quality
        description: use for short contigs to predict partial genes
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -d
        - --data
        description: specify a data-type (default = NA)
        args: !ChoiceFlagArg
          choices: !!set
            ? chromosome
            ? wgs
            ? plasmid
            ? NA
      - !Flag
        optional: true
        synonyms:
        - --split_prodigal_jobs
        description: "run multiple prodigal jobs simultaneously for contigs\nin a\
          \ fasta file\n"
        args: !EmptyFlagArg {}
      parent: *id030
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -h
        - --help
        description: show this help message and exit
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag: !Flag
        optional: true
        synonyms:
        - -v
        - --version
        description: prints software version number
        args: !EmptyFlagArg {}
      help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE [-t {contig,protein}]\n\
        \                [-a {DIAMOND,BLAST}] [-n THREADS] [--include_loose]\n   \
        \             [--exclude_nudge] [--local] [--clean] [--debug]\n          \
        \      [--low_quality] [-d {wgs,plasmid,chromosome,NA}] [-v]\n           \
        \     [--split_prodigal_jobs]\n\nResistance Gene Identifier - 5.1.1 - Main\n\
        \noptional arguments:\n  -h, --help            show this help message and\
        \ exit\n  -i INPUT_SEQUENCE, --input_sequence INPUT_SEQUENCE\n           \
        \             input file must be in either FASTA (contig and\n           \
        \             protein) or gzip format! e.g myFile.fasta,\n               \
        \         myFasta.fasta.gz\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
        \                        output folder and base filename\n  -t {contig,protein},\
        \ --input_type {contig,protein}\n                        specify data input\
        \ type (default = contig)\n  -a {DIAMOND,BLAST}, --alignment_tool {DIAMOND,BLAST}\n\
        \                        specify alignment tool (default = BLAST)\n  -n THREADS,\
        \ --num_threads THREADS\n                        number of threads (CPUs)\
        \ to use in the BLAST search\n                        (default=8)\n  --include_loose\
        \       include loose hits in addition to strict and perfect\n           \
        \             hits\n  --exclude_nudge       exclude hits nudged from loose\
        \ to strict hits\n  --local               use local database (default: uses\
        \ database in\n                        executable directory)\n  --clean  \
        \             removes temporary files\n  --debug               debug mode\n\
        \  --low_quality         use for short contigs to predict partial genes\n\
        \  -d {wgs,plasmid,chromosome,NA}, --data {wgs,plasmid,chromosome,NA}\n  \
        \                      specify a data-type (default = NA)\n  -v, --version\
        \         prints software version number\n  --split_prodigal_jobs\n      \
        \                  run multiple prodigal jobs simultaneously for contigs\n\
        \                        in a fasta file\n"
      generated_using: *id004
      docker_image:
    - &id033 !Command
      command: *id022
      positional: []
      named: []
      parent: *id030
      subcommands:
      - !Command
        command: *id023
        positional:
        - !Positional
          optional: false
          position: 0
          name: rgi
          description: ''
        - !Positional
          optional: false
          position: 1
          name: parser
          description: ''
        named:
        - !Flag
          optional: true
          synonyms:
          - -t
          description: ''
          args: !SimpleFlagArg
            name: TYPE
        - !Flag
          optional: true
          synonyms:
          - --include_loose
          description: ''
          args: !EmptyFlagArg {}
        - !Flag
          optional: true
          synonyms:
          - -o
          description: ''
          args: !SimpleFlagArg
            name: OUTPUT
        - !Flag
          optional: true
          synonyms:
          - -i
          description: ''
          args: !SimpleFlagArg
            name: INPUT
        parent: *id031
        subcommands: []
        usage: []
        help_flag: !Flag
          optional: true
          synonyms:
          - -h
          description: ''
          args: !EmptyFlagArg {}
        usage_flag:
        version_flag:
        help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose]\
          \ [-t TYPE]\nrgi parser: error: the following arguments are required: -i/--input\n"
        generated_using: *id024
        docker_image:
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose] [-t\
        \ TYPE]\n\nCreates categorical .json files RGI wheel visualization. An input\
        \ .json file\ncontaining the RGI results must be input.\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -i INPUT, --input\
        \ INPUT\n                        RGI results in a .json file\n  -o OUTPUT,\
        \ --output OUTPUT\n                        Name/identifier for the output\
        \ categorical .json files\n  --include_loose       Include loose hits in addition\
        \ to strict and perfect\n                        hits\n  -t TYPE, --type TYPE\
        \  type of input sequence: contig, protein or read\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id025
      positional:
      - !Positional
        optional: false
        position: 0
        name: load
        description: Loads CARD database, annotations and k-mer database
      - !Positional
        optional: false
        position: 1
        name: clean
        description: Removes BLAST databases and temporary files
      - !Positional
        optional: false
        position: 0
        name: galaxy
        description: Galaxy project wrapper
      - !Positional
        optional: false
        position: 0
        name: main
        description: Runs rgi application
      - !Positional
        optional: false
        position: 1
        name: tab
        description: Creates a Tab-delimited from rgi results
      - !Positional
        optional: false
        position: 2
        name: parser
        description: Creates categorical JSON files RGI wheel visualization
      - !Positional
        optional: false
        position: 3
        name: heatmap
        description: Heatmap for multiple analysis
      - !Positional
        optional: false
        position: 0
        name: bwt
        description: Align reads to CARD and in silico predicted allelic variants
          (beta)
      - !Positional
        optional: false
        position: 0
        name: tm
        description: Baits Melting Temperature
      - !Positional
        optional: false
        position: 0
        name: card_annotation
        description: Create fasta files with annotations from card.json
      - !Positional
        optional: false
        position: 1
        name: wildcard_annotation
        description: Create fasta files with annotations from variants
      - !Positional
        optional: false
        position: 2
        name: baits_annotation
        description: Create fasta files with annotations from baits (experimental)
      - !Positional
        optional: false
        position: 3
        name: remove_duplicates
        description: Removes duplicate sequences (experimental)
      - !Positional
        optional: false
        position: 0
        name: kmer_build
        description: Build AMR specific k-mers database used for pathogen of origin
          (beta)
      - !Positional
        optional: false
        position: 1
        name: kmer_query
        description: Query sequences against AMR k-mers database to predict pathogen
          of origin (beta)
      named: []
      parent: *id030
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "usage: rgi <command> [<args>]\n            commands are:\n     \
        \          ---------------------------------------------------------------------------------------\n\
        \               Database\n               ---------------------------------------------------------------------------------------\n\
        \n               load     Loads CARD database, annotations and k-mer database\n\
        \               clean    Removes BLAST databases and temporary files\n   \
        \            database Information on installed card database\n           \
        \    galaxy   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
        \               Genomic\n               ---------------------------------------------------------------------------------------\n\
        \n               main     Runs rgi application\n               tab      Creates\
        \ a Tab-delimited from rgi results\n               parser   Creates categorical\
        \ JSON files RGI wheel visualization\n               heatmap  Heatmap for\
        \ multiple analysis\n\n               ---------------------------------------------------------------------------------------\n\
        \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
        \               bwt                   Align reads to CARD and in silico predicted\
        \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
        \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
        \               tm                    Baits Melting Temperature\n\n      \
        \         ---------------------------------------------------------------------------------------\n\
        \               Annotations\n               ---------------------------------------------------------------------------------------\n\
        \               card_annotation       Create fasta files with annotations\
        \ from card.json\n               wildcard_annotation   Create fasta files\
        \ with annotations from variants\n               baits_annotation      Create\
        \ fasta files with annotations from baits (experimental)\n               remove_duplicates\
        \     Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
        \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
        \               \n               kmer_build            Build AMR specific\
        \ k-mers database used for pathogen of origin (beta)\n               kmer_query\
        \            Query sequences against AMR k-mers database to predict pathogen\
        \ of origin (beta)\n\n               \nrgi: error: argument command: invalid\
        \ choice: 'Database' (choose from 'main', 'tab', 'parser', 'load', 'clean',\
        \ 'galaxy', 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation',\
        \ 'baits_annotation', 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: rgi <command> [<args>]\n            commands are:\n       \
      \        ---------------------------------------------------------------------------------------\n\
      \               Database\n               ---------------------------------------------------------------------------------------\n\
      \n               load     Loads CARD database, annotations and k-mer database\n\
      \               clean    Removes BLAST databases and temporary files\n     \
      \          database Information on installed card database\n               galaxy\
      \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
      \               Genomic\n               ---------------------------------------------------------------------------------------\n\
      \n               main     Runs rgi application\n               tab      Creates\
      \ a Tab-delimited from rgi results\n               parser   Creates categorical\
      \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
      \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
      \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
      \               bwt                   Align reads to CARD and in silico predicted\
      \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
      \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
      \               tm                    Baits Melting Temperature\n\n        \
      \       ---------------------------------------------------------------------------------------\n\
      \               Annotations\n               ---------------------------------------------------------------------------------------\n\
      \               card_annotation       Create fasta files with annotations from\
      \ card.json\n               wildcard_annotation   Create fasta files with annotations\
      \ from variants\n               baits_annotation      Create fasta files with\
      \ annotations from baits (experimental)\n               remove_duplicates  \
      \   Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
      \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
      \               \n               kmer_build            Build AMR specific k-mers\
      \ database used for pathogen of origin (beta)\n               kmer_query   \
      \         Query sequences against AMR k-mers database to predict pathogen of\
      \ origin (beta)\n\n               \n\nResistance Gene Identifier - 5.1.1\n\n\
      positional arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
      \                        Subcommand to run\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n\nUse the Resistance Gene Identifier\
      \ to predict resistome(s) from protein or\nnucleotide data based on homology\
      \ and SNP models. Check\nhttps://card.mcmaster.ca/download for software and\
      \ data updates. Receive email\nnotification of monthly CARD updates via the\
      \ CARD Mailing List\n(https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene Identifier - 5.1.1 -\
    \ Tab-delimited\n\noptional arguments:\n  -h, --help            show this help\
    \ message and exit\n  -i AFILE, --afile AFILE\n                        must be\
    \ a rgi json result file\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: rgi
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input
    description: "Input file (bam file from RGI*BWT, json file of RGI\nresults, fasta\
      \ file of sequences)"
    args: !SimpleFlagArg
      name: INPUT
  - !Flag
    optional: true
    synonyms:
    - --bwt
    description: "Specify if the input file for analysis is a bam file\ngenerated\
      \ from RGI*BWT"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --rgi
    description: Specify if the input file is a RGI results json file
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --fasta
    description: Specify if the input file is a fasta file of sequences
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -k
    - --kmer_size
    description: length of k
    args: !SimpleFlagArg
      name: K
  - !Flag
    optional: true
    synonyms:
    - -m
    - --minimum
    description: "Minimum number of kmers in the called category for the\nclassification\
      \ to be made (default=10)."
    args: !SimpleFlagArg
      name: MIN
  - !Flag
    optional: true
    synonyms:
    - -n
    - --threads
    description: number of threads (CPUs) to use (default=1)
    args: !SimpleFlagArg
      name: THREADS
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: Output file name.
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - --local
    description: "use local database (default: uses database in\nexecutable directory)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta] -k K [-m MIN] [-n\
    \ THREADS]\n           -o OUTPUT [--local] [--debug]\n\nTests sequenes using CARD*kmers\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -i INPUT, --input INPUT\n                        Input file (bam file from\
    \ RGI*BWT, json file of RGI\n                        results, fasta file of sequences)\n\
    \  --bwt                 Specify if the input file for analysis is a bam file\n\
    \                        generated from RGI*BWT\n  --rgi                 Specify\
    \ if the input file is a RGI results json file\n  --fasta               Specify\
    \ if the input file is a fasta file of sequences\n  -k K, --kmer_size K   length\
    \ of k\n  -m MIN, --minimum MIN\n                        Minimum number of kmers\
    \ in the called category for the\n                        classification to be\
    \ made (default=10).\n  -n THREADS, --threads THREADS\n                      \
    \  number of threads (CPUs) to use (default=1)\n  -o OUTPUT, --output OUTPUT\n\
    \                        Output file name.\n  --local               use local\
    \ database (default: uses database in\n                        executable directory)\n\
    \  --debug               debug mode\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --card_json
    description: must be a card database json file
    args: !SimpleFlagArg
      name: CARD_JSON
  - !Flag
    optional: true
    synonyms:
    - --card_annotation
    description: annotated reference FASTA
    args: !SimpleFlagArg
      name: CARD_ANNOTATION
  - !Flag
    optional: true
    synonyms:
    - --wildcard_annotation
    description: annotated reference FASTA
    args: !SimpleFlagArg
      name: WILDCARD_ANNOTATION
  - !Flag
    optional: true
    synonyms:
    - --wildcard_index
    description: wildcard index file (index-for-model-sequences.txt)
    args: !SimpleFlagArg
      name: WILDCARD_INDEX
  - !Flag
    optional: true
    synonyms:
    - --wildcard_version
    description: specify variants version used
    args: !SimpleFlagArg
      name: WILDCARD_VERSION
  - !Flag
    optional: true
    synonyms:
    - --baits_annotation
    description: annotated reference FASTA
    args: !SimpleFlagArg
      name: BAITS_ANNOTATION
  - !Flag
    optional: true
    synonyms:
    - --baits_index
    description: baits index file (baits-probes-with-sequence-info.txt)
    args: !SimpleFlagArg
      name: BAITS_INDEX
  - !Flag
    optional: true
    synonyms:
    - --kmer_database
    description: json of kmer database
    args: !SimpleFlagArg
      name: KMER_DATABASE
  - !Flag
    optional: true
    synonyms:
    - --amr_kmers
    description: txt file of all amr kmers
    args: !SimpleFlagArg
      name: AMR_KMERS
  - !Flag
    optional: true
    synonyms:
    - --kmer_size
    description: kmer size if loading kmer files
    args: !SimpleFlagArg
      name: KMER_SIZE
  - !Flag
    optional: true
    synonyms:
    - --local
    description: "use local database (default: uses database in\nexecutable directory)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation CARD_ANNOTATION]\n\
    \                [--wildcard_annotation WILDCARD_ANNOTATION]\n               \
    \ [--wildcard_index WILDCARD_INDEX]\n                [--wildcard_version WILDCARD_VERSION]\n\
    \                [--baits_annotation BAITS_ANNOTATION]\n                [--baits_index\
    \ BAITS_INDEX] [--kmer_database KMER_DATABASE]\n                [--amr_kmers AMR_KMERS]\
    \ [--kmer_size KMER_SIZE] [--local]\n                [--debug]\n\nResistance Gene\
    \ Identifier - 5.1.1 - Load\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  -i CARD_JSON, --card_json CARD_JSON\n        \
    \                must be a card database json file\n  --card_annotation CARD_ANNOTATION\n\
    \                        annotated reference FASTA\n  --wildcard_annotation WILDCARD_ANNOTATION\n\
    \                        annotated reference FASTA\n  --wildcard_index WILDCARD_INDEX\n\
    \                        wildcard index file (index-for-model-sequences.txt)\n\
    \  --wildcard_version WILDCARD_VERSION\n                        specify variants\
    \ version used\n  --baits_annotation BAITS_ANNOTATION\n                      \
    \  annotated reference FASTA\n  --baits_index BAITS_INDEX\n                  \
    \      baits index file (baits-probes-with-sequence-info.txt)\n  --kmer_database\
    \ KMER_DATABASE\n                        json of kmer database\n  --amr_kmers\
    \ AMR_KMERS\n                        txt file of all amr kmers\n  --kmer_size\
    \ KMER_SIZE\n                        kmer size if loading kmer files\n  --local\
    \               use local database (default: uses database in\n              \
    \          executable directory)\n  --debug               debug mode\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --galaxy_database
    description: path to CARD data and blast databases
    args: !SimpleFlagArg
      name: GALAXY_DATABASE
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE [--debug]\n\
    \nResistance Gene Identifier - 5.1.1 - Galaxy project wrapper\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  --galaxy_database\
    \ GALAXY_DATABASE\n                        path to CARD data and blast databases\n\
    \  --debug               debug mode\n\nGALAXY_DATABASE must contain the following:\
    \ data files (card.json,\nproteindb.fsa),diamond blast database (protein.db.dmnd),\
    \ ncbi blast database\n(protein.db.phr, protein.db.pin, protein.db.psq)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input
    description: card.json file
    args: !SimpleFlagArg
      name: INPUT
  - !Flag
    optional: true
    synonyms:
    - --ncbi
    description: adds ncbi accession to FASTA headers
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\nCreates card annotations\
    \ for RGI BWT from card.json\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  -i INPUT, --input INPUT\n                    \
    \    card.json file\n  --ncbi                adds ncbi accession to FASTA headers\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id010
  positional:
  - !Positional
    optional: false
    position: 0
    name: input_file
    description: -o OUTPUT_FILE, --output_file OUTPUT_FILE
  named:
  - !Flag
    optional: true
    synonyms:
    - --clean
    description: removes temporary files
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: ''
    args: !SimpleFlagArg
      name: FILTER_TEMPERATURE
  - !Flag
    optional: true
    synonyms:
    - -o
    description: ''
    args: !SimpleFlagArg
      name: OUTPUT_FILE
  - !Flag
    optional: true
    synonyms:
    - -i
    description: ''
    args: !SimpleFlagArg
      name: INPUT_FILE
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE] [-t FILTER_TEMPERATURE]\n\
    \              [--clean] [--debug]\n\nTM\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  -i INPUT_FILE, --input_file INPUT_FILE\n\
    \                        input_file\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
    \                        output_file\n  -t FILTER_TEMPERATURE, --filter_temperature\
    \ FILTER_TEMPERATURE\n                        desired melting temperature (default=65).\n\
    \  --clean               removes temporary files\n  --debug               debug\
    \ mode\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id011
  positional:
  - !Positional
    optional: false
    position: 0
    name: sequences.
    description: -n THREADS, --threads THREADS
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input_directory
    description: input directory of prevalence data
    args: !SimpleFlagArg
      name: INPUT_DIRECTORY
  - !Flag
    optional: true
    synonyms:
    - -c
    - --card
    description: "fasta file of CARD reference sequences. If missing,\nrun 'rgi card_annotation'\
      \ to generate."
    args: !SimpleFlagArg
      name: CARD_FASTA
  - !Flag
    optional: true
    synonyms:
    - -k
    description: k-mer size (e.g., 61)
    args: !SimpleFlagArg
      name: K
  - !Flag
    optional: true
    synonyms:
    - --skip
    description: skips the concatenation and splitting of the CARD*R*V
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --batch_size
    description: "number of kmers to query at a time using pyahocorasick\n--the greater\
      \ the number the more memory usage\n(default=100,000)\n"
    args: !SimpleFlagArg
      name: BATCH_SIZE
  - !Flag
    optional: true
    synonyms:
    - -n
    description: ''
    args: !SimpleFlagArg
      name: THREADS
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA -k K [--skip] [-n\
    \ THREADS]\n           [--batch_size BATCH_SIZE]\n\nBuilds the kmer sets for CARD*kmers\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n                   \
    \     input directory of prevalence data\n  -c CARD_FASTA, --card CARD_FASTA\n\
    \                        fasta file of CARD reference sequences. If missing,\n\
    \                        run 'rgi card_annotation' to generate.\n  -k K      \
    \            k-mer size (e.g., 61)\n  --skip                skips the concatenation\
    \ and splitting of the CARD*R*V\n                        sequences.\n  -n THREADS,\
    \ --threads THREADS\n                        number of threads (CPUs) to use (default=1)\n\
    \  --batch_size BATCH_SIZE\n                        number of kmers to query at\
    \ a time using pyahocorasick\n                        --the greater the number\
    \ the more memory usage\n                        (default=100,000)\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id012
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --index_file
    description: "index file with baits information\n"
    args: !SimpleFlagArg
      name: INDEX_FILE
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\nCreates\
    \ baits annotations for RGI BWT from baits\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  --index_file INDEX_FILE\n    \
    \                    index file with baits information\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id013
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input
    description: Directory containing the RGI .json files (REQUIRED)
    args: !SimpleFlagArg
      name: INPUT
  - !Flag
    optional: true
    synonyms:
    - -cat
    - --category
    description: "The option to organize resistance genes based on a\ncategory."
    args: !ChoiceFlagArg
      choices: !!set
        resistance_mechanism:
        drug_class:
        gene_family:
  - !Flag
    optional: true
    synonyms:
    - -f
    - --frequency
    description: Represent samples based on resistance profile.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: "Name for the output EPS and PNG files. The number of\nfiles run\
      \ will automatically be appended to the end of\nthe file name. (default=RGI_heatmap)"
    args: !SimpleFlagArg
      name: OUTPUT
  - !Flag
    optional: true
    synonyms:
    - -clus
    - --cluster
    description: "Option to use SciPy's hiearchical clustering algorithm\nto cluster\
      \ rows (AMR genes) or columns (samples)."
    args: !ChoiceFlagArg
      choices: !!set
        samples:
        both:
        genes:
  - !Flag
    optional: true
    synonyms:
    - -d
    - --display
    description: "Specify display options for categories\n(deafult=plain)."
    args: !ChoiceFlagArg
      choices: !!set
        text:
        fill:
        plain:
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi heatmap [-h] -i INPUT\n                   [-cat {drug_class,resistance_mechanism,gene_family}]\
    \ [-f]\n                   [-o OUTPUT] [-clus {samples,genes,both}]\n        \
    \           [-d {plain,fill,text}] [--debug]\n\nCreates a heatmap when given multiple\
    \ RGI results.\n\noptional arguments:\n  -h, --help            show this help\
    \ message and exit\n  -i INPUT, --input INPUT\n                        Directory\
    \ containing the RGI .json files (REQUIRED)\n  -cat {drug_class,resistance_mechanism,gene_family},\
    \ --category {drug_class,resistance_mechanism,gene_family}\n                 \
    \       The option to organize resistance genes based on a\n                 \
    \       category.\n  -f, --frequency       Represent samples based on resistance\
    \ profile.\n  -o OUTPUT, --output OUTPUT\n                        Name for the\
    \ output EPS and PNG files. The number of\n                        files run will\
    \ automatically be appended to the end of\n                        the file name.\
    \ (default=RGI_heatmap)\n  -clus {samples,genes,both}, --cluster {samples,genes,both}\n\
    \                        Option to use SciPy's hiearchical clustering algorithm\n\
    \                        to cluster rows (AMR genes) or columns (samples).\n \
    \ -d {plain,fill,text}, --display {plain,fill,text}\n                        Specify\
    \ display options for categories\n                        (deafult=plain).\n \
    \ --debug               debug mode\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id014
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input
    description: input fasta file
    args: !SimpleFlagArg
      name: INPUT_FASTA_FILE
  - !Flag
    optional: true
    synonyms:
    - --card_annotation
    description: card_annotation input fasta file
    args: !SimpleFlagArg
      name: CARD_ANNOTATION
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output
    description: output fasta file
    args: !SimpleFlagArg
      name: OUTPUT_FASTA_FILE
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE --card_annotation\n\
    \                             CARD_ANNOTATION -o OUTPUT_FASTA_FILE [--debug]\n\
    \nRemoves duplicates sequences from annotationed fasta file\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  -i INPUT_FASTA_FILE,\
    \ --input INPUT_FASTA_FILE\n                        input fasta file\n  --card_annotation\
    \ CARD_ANNOTATION\n                        card_annotation input fasta file\n\
    \  -o OUTPUT_FASTA_FILE, --output OUTPUT_FASTA_FILE\n                        output\
    \ fasta file\n  --debug               debug mode\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id015
  positional:
  - !Positional
    optional: false
    position: 0
    name: load
    description: Loads CARD database, annotations and k-mer database
  - !Positional
    optional: false
    position: 1
    name: clean
    description: Removes BLAST databases and temporary files
  - !Positional
    optional: false
    position: 0
    name: galaxy
    description: Galaxy project wrapper
  - !Positional
    optional: false
    position: 0
    name: main
    description: Runs rgi application
  - !Positional
    optional: false
    position: 1
    name: tab
    description: Creates a Tab-delimited from rgi results
  - !Positional
    optional: false
    position: 2
    name: parser
    description: Creates categorical JSON files RGI wheel visualization
  - !Positional
    optional: false
    position: 3
    name: heatmap
    description: Heatmap for multiple analysis
  - !Positional
    optional: false
    position: 0
    name: bwt
    description: Align reads to CARD and in silico predicted allelic variants (beta)
  - !Positional
    optional: false
    position: 0
    name: tm
    description: Baits Melting Temperature
  - !Positional
    optional: false
    position: 0
    name: card_annotation
    description: Create fasta files with annotations from card.json
  - !Positional
    optional: false
    position: 1
    name: wildcard_annotation
    description: Create fasta files with annotations from variants
  - !Positional
    optional: false
    position: 2
    name: baits_annotation
    description: Create fasta files with annotations from baits (experimental)
  - !Positional
    optional: false
    position: 3
    name: remove_duplicates
    description: Removes duplicate sequences (experimental)
  - !Positional
    optional: false
    position: 0
    name: kmer_build
    description: Build AMR specific k-mers database used for pathogen of origin (beta)
  - !Positional
    optional: false
    position: 1
    name: kmer_query
    description: Query sequences against AMR k-mers database to predict pathogen of
      origin (beta)
  named: []
  parent: *id032
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: rgi <command> [<args>]\n            commands are:\n         \
    \      ---------------------------------------------------------------------------------------\n\
    \               Database\n               ---------------------------------------------------------------------------------------\n\
    \n               load     Loads CARD database, annotations and k-mer database\n\
    \               clean    Removes BLAST databases and temporary files\n       \
    \        database Information on installed card database\n               galaxy\
    \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
    \n               main     Runs rgi application\n               tab      Creates\
    \ a Tab-delimited from rgi results\n               parser   Creates categorical\
    \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
    \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
    \               bwt                   Align reads to CARD and in silico predicted\
    \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
    \               tm                    Baits Melting Temperature\n\n          \
    \     ---------------------------------------------------------------------------------------\n\
    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
    \               card_annotation       Create fasta files with annotations from\
    \ card.json\n               wildcard_annotation   Create fasta files with annotations\
    \ from variants\n               baits_annotation      Create fasta files with\
    \ annotations from baits (experimental)\n               remove_duplicates    \
    \ Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
    \               \n               kmer_build            Build AMR specific k-mers\
    \ database used for pathogen of origin (beta)\n               kmer_query     \
    \       Query sequences against AMR k-mers database to predict pathogen of origin\
    \ (beta)\n\n               \nrgi: error: argument command: invalid choice: 'Metagenomic'\
    \ (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy', 'database',\
    \ 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
    \ 'heatmap', 'kmer_build', 'kmer_query')\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id016
  positional:
  - !Positional
    optional: false
    position: 0
    name: load
    description: Loads CARD database, annotations and k-mer database
  - !Positional
    optional: false
    position: 1
    name: clean
    description: Removes BLAST databases and temporary files
  - !Positional
    optional: false
    position: 0
    name: galaxy
    description: Galaxy project wrapper
  - !Positional
    optional: false
    position: 0
    name: main
    description: Runs rgi application
  - !Positional
    optional: false
    position: 1
    name: tab
    description: Creates a Tab-delimited from rgi results
  - !Positional
    optional: false
    position: 2
    name: parser
    description: Creates categorical JSON files RGI wheel visualization
  - !Positional
    optional: false
    position: 3
    name: heatmap
    description: Heatmap for multiple analysis
  - !Positional
    optional: false
    position: 0
    name: bwt
    description: Align reads to CARD and in silico predicted allelic variants (beta)
  - !Positional
    optional: false
    position: 0
    name: tm
    description: Baits Melting Temperature
  - !Positional
    optional: false
    position: 0
    name: card_annotation
    description: Create fasta files with annotations from card.json
  - !Positional
    optional: false
    position: 1
    name: wildcard_annotation
    description: Create fasta files with annotations from variants
  - !Positional
    optional: false
    position: 2
    name: baits_annotation
    description: Create fasta files with annotations from baits (experimental)
  - !Positional
    optional: false
    position: 3
    name: remove_duplicates
    description: Removes duplicate sequences (experimental)
  - !Positional
    optional: false
    position: 0
    name: kmer_build
    description: Build AMR specific k-mers database used for pathogen of origin (beta)
  - !Positional
    optional: false
    position: 1
    name: kmer_query
    description: Query sequences against AMR k-mers database to predict pathogen of
      origin (beta)
  named: []
  parent: *id032
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: rgi <command> [<args>]\n            commands are:\n         \
    \      ---------------------------------------------------------------------------------------\n\
    \               Database\n               ---------------------------------------------------------------------------------------\n\
    \n               load     Loads CARD database, annotations and k-mer database\n\
    \               clean    Removes BLAST databases and temporary files\n       \
    \        database Information on installed card database\n               galaxy\
    \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
    \n               main     Runs rgi application\n               tab      Creates\
    \ a Tab-delimited from rgi results\n               parser   Creates categorical\
    \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
    \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
    \               bwt                   Align reads to CARD and in silico predicted\
    \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
    \               tm                    Baits Melting Temperature\n\n          \
    \     ---------------------------------------------------------------------------------------\n\
    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
    \               card_annotation       Create fasta files with annotations from\
    \ card.json\n               wildcard_annotation   Create fasta files with annotations\
    \ from variants\n               baits_annotation      Create fasta files with\
    \ annotations from baits (experimental)\n               remove_duplicates    \
    \ Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
    \               \n               kmer_build            Build AMR specific k-mers\
    \ database used for pathogen of origin (beta)\n               kmer_query     \
    \       Query sequences against AMR k-mers database to predict pathogen of origin\
    \ (beta)\n\n               \nrgi: error: argument command: invalid choice: 'Annotations'\
    \ (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy', 'database',\
    \ 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
    \ 'heatmap', 'kmer_build', 'kmer_query')\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id017
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input_directory
    description: input directory for wildcard
    args: !SimpleFlagArg
      name: INPUT_DIRECTORY
  - !Flag
    optional: true
    synonyms:
    - -j
    - --card_json
    description: "card.json file\n"
    args: !SimpleFlagArg
      name: CARD_JSON
  - !Flag
    optional: true
    synonyms:
    - -v
    description: ''
    args: !SimpleFlagArg
      name: VERSION
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - -v
    - --version
    description: specify version downloaded for wildcard / variants
    args: !SimpleFlagArg
      name: VERSION
  help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY -v VERSION -j\
    \ CARD_JSON\n\nCreates card annotations for RGI BWT from Variants or Wilcard data\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n                   \
    \     input directory for wildcard\n  -v VERSION, --version VERSION\n        \
    \                specify version downloaded for wildcard / variants\n  -j CARD_JSON,\
    \ --card_json CARD_JSON\n                        card.json file\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id018
  positional:
  - !Positional
    optional: false
    position: 0
    name: aligner
    description: -n THREADS, --threads THREADS
  named:
  - !Flag
    optional: true
    synonyms:
    - '-1'
    - --read_one
    description: raw read one (qc and trimmied)
    args: !SimpleFlagArg
      name: READ_ONE
  - !Flag
    optional: true
    synonyms:
    - '-2'
    - --read_two
    description: raw read two (qc and trimmied)
    args: !SimpleFlagArg
      name: READ_TWO
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output_file
    description: name of output filename(s)
    args: !SimpleFlagArg
      name: OUTPUT_FILE
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --clean
    description: removes temporary files
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --local
    description: "use local database (default: uses database in\nexecutable directory)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --include_wildcard
    description: include wildcard
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --include_baits
    description: include baits
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --mapq
    description: filter reads based on MAPQ score
    args: !SimpleFlagArg
      name: MAPQ
  - !Flag
    optional: true
    synonyms:
    - --mapped
    description: filter reads based on mapped reads
    args: !SimpleFlagArg
      name: MAPPED
  - !Flag
    optional: true
    synonyms:
    - --coverage
    description: filter reads based on coverage of reference sequence
    args: !SimpleFlagArg
      name: COVERAGE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: ''
    args: !ChoiceFlagArg
      choices: !!set
        bwa:
        bowtie2:
        kma:
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a {bowtie2,bwa,kma}]\n\
    \               [-n THREADS] -o OUTPUT_FILE [--debug] [--clean] [--local]\n  \
    \             [--include_wildcard] [--include_baits] [--mapq MAPQ]\n         \
    \      [--mapped MAPPED] [--coverage COVERAGE]\n\nAligns metagenomic reads to\
    \ CARD and wildCARD reference using bowtie or bwa\nand provide reports.\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  -1 READ_ONE,\
    \ --read_one READ_ONE\n                        raw read one (qc and trimmied)\n\
    \  -2 READ_TWO, --read_two READ_TWO\n                        raw read two (qc\
    \ and trimmied)\n  -a {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n       \
    \                 aligner\n  -n THREADS, --threads THREADS\n                 \
    \       number of threads (CPUs) to use (default=8)\n  -o OUTPUT_FILE, --output_file\
    \ OUTPUT_FILE\n                        name of output filename(s)\n  --debug \
    \              debug mode\n  --clean               removes temporary files\n \
    \ --local               use local database (default: uses database in\n      \
    \                  executable directory)\n  --include_wildcard    include wildcard\n\
    \  --include_baits       include baits\n  --mapq MAPQ           filter reads based\
    \ on MAPQ score\n  --mapped MAPPED       filter reads based on mapped reads\n\
    \  --coverage COVERAGE   filter reads based on coverage of reference sequence\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id019
  positional:
  - !Positional
    optional: false
    position: 0
    name: load
    description: Loads CARD database, annotations and k-mer database
  - !Positional
    optional: false
    position: 1
    name: clean
    description: Removes BLAST databases and temporary files
  - !Positional
    optional: false
    position: 0
    name: galaxy
    description: Galaxy project wrapper
  - !Positional
    optional: false
    position: 0
    name: main
    description: Runs rgi application
  - !Positional
    optional: false
    position: 1
    name: tab
    description: Creates a Tab-delimited from rgi results
  - !Positional
    optional: false
    position: 2
    name: parser
    description: Creates categorical JSON files RGI wheel visualization
  - !Positional
    optional: false
    position: 3
    name: heatmap
    description: Heatmap for multiple analysis
  - !Positional
    optional: false
    position: 0
    name: bwt
    description: Align reads to CARD and in silico predicted allelic variants (beta)
  - !Positional
    optional: false
    position: 0
    name: tm
    description: Baits Melting Temperature
  - !Positional
    optional: false
    position: 0
    name: card_annotation
    description: Create fasta files with annotations from card.json
  - !Positional
    optional: false
    position: 1
    name: wildcard_annotation
    description: Create fasta files with annotations from variants
  - !Positional
    optional: false
    position: 2
    name: baits_annotation
    description: Create fasta files with annotations from baits (experimental)
  - !Positional
    optional: false
    position: 3
    name: remove_duplicates
    description: Removes duplicate sequences (experimental)
  - !Positional
    optional: false
    position: 0
    name: kmer_build
    description: Build AMR specific k-mers database used for pathogen of origin (beta)
  - !Positional
    optional: false
    position: 1
    name: kmer_query
    description: Query sequences against AMR k-mers database to predict pathogen of
      origin (beta)
  named: []
  parent: *id032
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: rgi <command> [<args>]\n            commands are:\n         \
    \      ---------------------------------------------------------------------------------------\n\
    \               Database\n               ---------------------------------------------------------------------------------------\n\
    \n               load     Loads CARD database, annotations and k-mer database\n\
    \               clean    Removes BLAST databases and temporary files\n       \
    \        database Information on installed card database\n               galaxy\
    \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
    \n               main     Runs rgi application\n               tab      Creates\
    \ a Tab-delimited from rgi results\n               parser   Creates categorical\
    \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
    \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
    \               bwt                   Align reads to CARD and in silico predicted\
    \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
    \               tm                    Baits Melting Temperature\n\n          \
    \     ---------------------------------------------------------------------------------------\n\
    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
    \               card_annotation       Create fasta files with annotations from\
    \ card.json\n               wildcard_annotation   Create fasta files with annotations\
    \ from variants\n               baits_annotation      Create fasta files with\
    \ annotations from baits (experimental)\n               remove_duplicates    \
    \ Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
    \               \n               kmer_build            Build AMR specific k-mers\
    \ database used for pathogen of origin (beta)\n               kmer_query     \
    \       Query sequences against AMR k-mers database to predict pathogen of origin\
    \ (beta)\n\n               \nrgi: error: argument command: invalid choice: 'Genomic'\
    \ (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy', 'database',\
    \ 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
    \ 'heatmap', 'kmer_build', 'kmer_query')\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id020
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --local
    description: "use local database (default: uses database in executable\ndirectory)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance Gene Identifier\
    \ - 5.1.1 - Clean\n\noptional arguments:\n  -h, --help  show this help message\
    \ and exit\n  --local     use local database (default: uses database in executable\n\
    \              directory)\n  --debug     debug mode\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id021
  positional:
  - !Positional
    optional: false
    position: 0
    name: hits
    description: --exclude_nudge       exclude hits nudged from loose to strict hits
  named:
  - !Flag
    optional: true
    synonyms:
    - -i
    - --input_sequence
    description: "input file must be in either FASTA (contig and\nprotein) or gzip\
      \ format! e.g myFile.fasta,\nmyFasta.fasta.gz"
    args: !SimpleFlagArg
      name: INPUT_SEQUENCE
  - !Flag
    optional: true
    synonyms:
    - -o
    - --output_file
    description: output folder and base filename
    args: !SimpleFlagArg
      name: OUTPUT_FILE
  - !Flag
    optional: true
    synonyms:
    - -t
    - --input_type
    description: specify data input type (default = contig)
    args: !ChoiceFlagArg
      choices: !!set
        contig:
        protein:
  - !Flag
    optional: true
    synonyms:
    - -a
    - --alignment_tool
    description: specify alignment tool (default = BLAST)
    args: !ChoiceFlagArg
      choices: !!set
        BLAST:
        DIAMOND:
  - !Flag
    optional: true
    synonyms:
    - -n
    - --num_threads
    description: "number of threads (CPUs) to use in the BLAST search\n(default=8)"
    args: !SimpleFlagArg
      name: THREADS
  - !Flag
    optional: true
    synonyms:
    - --include_loose
    description: include loose hits in addition to strict and perfect
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --local
    description: "use local database (default: uses database in\nexecutable directory)"
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --clean
    description: removes temporary files
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --debug
    description: debug mode
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --low_quality
    description: use for short contigs to predict partial genes
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -d
    - --data
    description: specify a data-type (default = NA)
    args: !ChoiceFlagArg
      choices: !!set
        NA:
        chromosome:
        plasmid:
        wgs:
  - !Flag
    optional: true
    synonyms:
    - --split_prodigal_jobs
    description: "run multiple prodigal jobs simultaneously for contigs\nin a fasta\
      \ file\n"
    args: !EmptyFlagArg {}
  parent: *id032
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -h
    - --help
    description: show this help message and exit
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag: !Flag
    optional: true
    synonyms:
    - -v
    - --version
    description: prints software version number
    args: !EmptyFlagArg {}
  help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE [-t {contig,protein}]\n\
    \                [-a {DIAMOND,BLAST}] [-n THREADS] [--include_loose]\n       \
    \         [--exclude_nudge] [--local] [--clean] [--debug]\n                [--low_quality]\
    \ [-d {wgs,plasmid,chromosome,NA}] [-v]\n                [--split_prodigal_jobs]\n\
    \nResistance Gene Identifier - 5.1.1 - Main\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  -i INPUT_SEQUENCE, --input_sequence\
    \ INPUT_SEQUENCE\n                        input file must be in either FASTA (contig\
    \ and\n                        protein) or gzip format! e.g myFile.fasta,\n  \
    \                      myFasta.fasta.gz\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
    \                        output folder and base filename\n  -t {contig,protein},\
    \ --input_type {contig,protein}\n                        specify data input type\
    \ (default = contig)\n  -a {DIAMOND,BLAST}, --alignment_tool {DIAMOND,BLAST}\n\
    \                        specify alignment tool (default = BLAST)\n  -n THREADS,\
    \ --num_threads THREADS\n                        number of threads (CPUs) to use\
    \ in the BLAST search\n                        (default=8)\n  --include_loose\
    \       include loose hits in addition to strict and perfect\n               \
    \         hits\n  --exclude_nudge       exclude hits nudged from loose to strict\
    \ hits\n  --local               use local database (default: uses database in\n\
    \                        executable directory)\n  --clean               removes\
    \ temporary files\n  --debug               debug mode\n  --low_quality       \
    \  use for short contigs to predict partial genes\n  -d {wgs,plasmid,chromosome,NA},\
    \ --data {wgs,plasmid,chromosome,NA}\n                        specify a data-type\
    \ (default = NA)\n  -v, --version         prints software version number\n  --split_prodigal_jobs\n\
    \                        run multiple prodigal jobs simultaneously for contigs\n\
    \                        in a fasta file\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id022
  positional: []
  named: []
  parent: *id032
  subcommands:
  - !Command
    command: *id023
    positional:
    - !Positional
      optional: false
      position: 0
      name: rgi
      description: ''
    - !Positional
      optional: false
      position: 1
      name: parser
      description: ''
    named:
    - !Flag
      optional: true
      synonyms:
      - -t
      description: ''
      args: !SimpleFlagArg
        name: TYPE
    - !Flag
      optional: true
      synonyms:
      - --include_loose
      description: ''
      args: !EmptyFlagArg {}
    - !Flag
      optional: true
      synonyms:
      - -o
      description: ''
      args: !SimpleFlagArg
        name: OUTPUT
    - !Flag
      optional: true
      synonyms:
      - -i
      description: ''
      args: !SimpleFlagArg
        name: INPUT
    parent: *id033
    subcommands: []
    usage: []
    help_flag: !Flag
      optional: true
      synonyms:
      - -h
      description: ''
      args: !EmptyFlagArg {}
    usage_flag:
    version_flag:
    help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose] [-t\
      \ TYPE]\nrgi parser: error: the following arguments are required: -i/--input\n"
    generated_using: *id024
    docker_image:
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose] [-t TYPE]\n\
    \nCreates categorical .json files RGI wheel visualization. An input .json file\n\
    containing the RGI results must be input.\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n  -i INPUT, --input INPUT\n    \
    \                    RGI results in a .json file\n  -o OUTPUT, --output OUTPUT\n\
    \                        Name/identifier for the output categorical .json files\n\
    \  --include_loose       Include loose hits in addition to strict and perfect\n\
    \                        hits\n  -t TYPE, --type TYPE  type of input sequence:\
    \ contig, protein or read\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id025
  positional:
  - !Positional
    optional: false
    position: 0
    name: load
    description: Loads CARD database, annotations and k-mer database
  - !Positional
    optional: false
    position: 1
    name: clean
    description: Removes BLAST databases and temporary files
  - !Positional
    optional: false
    position: 0
    name: galaxy
    description: Galaxy project wrapper
  - !Positional
    optional: false
    position: 0
    name: main
    description: Runs rgi application
  - !Positional
    optional: false
    position: 1
    name: tab
    description: Creates a Tab-delimited from rgi results
  - !Positional
    optional: false
    position: 2
    name: parser
    description: Creates categorical JSON files RGI wheel visualization
  - !Positional
    optional: false
    position: 3
    name: heatmap
    description: Heatmap for multiple analysis
  - !Positional
    optional: false
    position: 0
    name: bwt
    description: Align reads to CARD and in silico predicted allelic variants (beta)
  - !Positional
    optional: false
    position: 0
    name: tm
    description: Baits Melting Temperature
  - !Positional
    optional: false
    position: 0
    name: card_annotation
    description: Create fasta files with annotations from card.json
  - !Positional
    optional: false
    position: 1
    name: wildcard_annotation
    description: Create fasta files with annotations from variants
  - !Positional
    optional: false
    position: 2
    name: baits_annotation
    description: Create fasta files with annotations from baits (experimental)
  - !Positional
    optional: false
    position: 3
    name: remove_duplicates
    description: Removes duplicate sequences (experimental)
  - !Positional
    optional: false
    position: 0
    name: kmer_build
    description: Build AMR specific k-mers database used for pathogen of origin (beta)
  - !Positional
    optional: false
    position: 1
    name: kmer_query
    description: Query sequences against AMR k-mers database to predict pathogen of
      origin (beta)
  named: []
  parent: *id032
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: rgi <command> [<args>]\n            commands are:\n         \
    \      ---------------------------------------------------------------------------------------\n\
    \               Database\n               ---------------------------------------------------------------------------------------\n\
    \n               load     Loads CARD database, annotations and k-mer database\n\
    \               clean    Removes BLAST databases and temporary files\n       \
    \        database Information on installed card database\n               galaxy\
    \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
    \n               main     Runs rgi application\n               tab      Creates\
    \ a Tab-delimited from rgi results\n               parser   Creates categorical\
    \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
    \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
    \               bwt                   Align reads to CARD and in silico predicted\
    \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
    \               tm                    Baits Melting Temperature\n\n          \
    \     ---------------------------------------------------------------------------------------\n\
    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
    \               card_annotation       Create fasta files with annotations from\
    \ card.json\n               wildcard_annotation   Create fasta files with annotations\
    \ from variants\n               baits_annotation      Create fasta files with\
    \ annotations from baits (experimental)\n               remove_duplicates    \
    \ Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
    \               \n               kmer_build            Build AMR specific k-mers\
    \ database used for pathogen of origin (beta)\n               kmer_query     \
    \       Query sequences against AMR k-mers database to predict pathogen of origin\
    \ (beta)\n\n               \nrgi: error: argument command: invalid choice: 'Database'\
    \ (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy', 'database',\
    \ 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation', 'remove_duplicates',\
    \ 'heatmap', 'kmer_build', 'kmer_query')\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: rgi <command> [<args>]\n            commands are:\n           \
  \    ---------------------------------------------------------------------------------------\n\
  \               Database\n               ---------------------------------------------------------------------------------------\n\
  \n               load     Loads CARD database, annotations and k-mer database\n\
  \               clean    Removes BLAST databases and temporary files\n         \
  \      database Information on installed card database\n               galaxy  \
  \ Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
  \               Genomic\n               ---------------------------------------------------------------------------------------\n\
  \n               main     Runs rgi application\n               tab      Creates\
  \ a Tab-delimited from rgi results\n               parser   Creates categorical\
  \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
  \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
  \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
  \               bwt                   Align reads to CARD and in silico predicted\
  \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
  \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
  \               tm                    Baits Melting Temperature\n\n            \
  \   ---------------------------------------------------------------------------------------\n\
  \               Annotations\n               ---------------------------------------------------------------------------------------\n\
  \               card_annotation       Create fasta files with annotations from card.json\n\
  \               wildcard_annotation   Create fasta files with annotations from variants\n\
  \               baits_annotation      Create fasta files with annotations from baits\
  \ (experimental)\n               remove_duplicates     Removes duplicate sequences\
  \ (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
  \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
  \               \n               kmer_build            Build AMR specific k-mers\
  \ database used for pathogen of origin (beta)\n               kmer_query       \
  \     Query sequences against AMR k-mers database to predict pathogen of origin\
  \ (beta)\n\n               \n\nResistance Gene Identifier - 5.1.1\n\npositional\
  \ arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
  \                        Subcommand to run\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n\nUse the Resistance Gene Identifier\
  \ to predict resistome(s) from protein or\nnucleotide data based on homology and\
  \ SNP models. Check\nhttps://card.mcmaster.ca/download for software and data updates.\
  \ Receive email\nnotification of monthly CARD updates via the CARD Mailing List\n\
  (https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
generated_using: *id004
docker_image:
