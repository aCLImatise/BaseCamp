!Command
command:
- run_midas.py
- snps
positional:
- !Positional
  optional: false
  position: 0
  name: outdir
  description: "Path to directory to store results. \nDirectory name should correspond\
    \ to sample identifier"
named:
- !Flag
  optional: true
  synonyms:
  - --remove_temp
  description: "Remove intermediate files generated by MIDAS (False).\nUseful to reduce\
    \ disk space of MIDAS output"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --build_db
  description: Build bowtie2 database of pangenomes
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --align
  description: Align reads to pangenome database
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --pileup
  description: Run samtools mpileup and count 4 alleles across genome
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: "Path to reference database\nBy default, the MIDAS_DB environmental\
    \ variable is used"
  args: !SimpleFlagArg
    name: DB
- !Flag
  optional: true
  synonyms:
  - --species_cov
  description: Include species with >X coverage (3.0)
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --species_topn
  description: Include top N most abundant species
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --species_id
  description: Include specified species. Separate ids with a comma
  args: !SimpleFlagArg
    name: CHAR
- !Flag
  optional: true
  synonyms:
  - '-1'
  description: "FASTA/FASTQ file containing 1st mate if using paired-end reads.\n\
    Otherwise FASTA/FASTQ containing unpaired reads.\nCan be gzip'ed (extension: .gz)\
    \ or bzip2'ed (extension: .bz2)"
  args: !SimpleFlagArg
    name: M1
- !Flag
  optional: true
  synonyms:
  - '-2'
  description: "FASTA/FASTQ file containing 2nd mate if using paired-end reads.\n\
    Can be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2)"
  args: !SimpleFlagArg
    name: M2
- !Flag
  optional: true
  synonyms:
  - --interleaved
  description: FASTA/FASTQ file in -1 are paired and contain forward AND reverse reads
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: Bowtie2 alignment speed/sensitivity (very-sensitive)
  args: !ChoiceFlagArg
    choices: !!set
      very-fast:
      fast:
      sensitive:
      very-sensitive:
- !Flag
  optional: true
  synonyms:
  - -n
  description: '# reads to use from input file(s) (use all)'
  args: !SimpleFlagArg
    name: MAX_READS
- !Flag
  optional: true
  synonyms:
  - -m
  description: Global/local read alignment (global)
  args: !ChoiceFlagArg
    choices: !!set
      global:
      local:
- !Flag
  optional: true
  synonyms:
  - -t
  description: Number of threads to use (1)
  args: !SimpleFlagArg
    name: THREADS
- !Flag
  optional: true
  synonyms:
  - --mapid
  description: Discard reads with alignment identity < MAPID (94.0)
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --mapq
  description: Discard reads with mapping quality < MAPQ (20)
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --baseq
  description: Discard bases with quality < BASEQ (30)
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --readq
  description: Discard reads with mean quality < READQ (20)
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --aln_cov
  description: Discard reads with alignment coverage < ALN_COV (0.75)
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --trim
  description: Trim N base-pairs from 3'/right end of read (0)
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --discard
  description: Discard discordant read-pairs (False)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --baq
  description: 'Enable BAQ: per-base alignment quality (False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --adjust_mq
  description: Adjust MAPQ (False)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Description: Map metagenomic reads to a bacterial genome database and\
  \ quantify nucleotide variation\n\nThe pipeline can be broken down into the following\
  \ steps:\n  1) build a database of genome sequences for abundant bacterial species\
  \ (1 representative genome/species)\n  2) use global alignment to map high-quality\
  \ reads to the database\n  3) generate pileups and count variants at each genomic\
  \ site\n\nAfter completion, use 'merge_midas.py snps' to perform multisample SNP\
  \ calling\n  \nUsage: run_midas.py snps <outdir> [options]\n\npositional arguments:\n\
  \  outdir                Path to directory to store results. \n                \
  \        Directory name should correspond to sample identifier\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --remove_temp      \
  \   Remove intermediate files generated by MIDAS (False).\n                    \
  \    Useful to reduce disk space of MIDAS output\n\nPipeline options (choose one\
  \ or more; default=all):\n  --build_db            Build bowtie2 database of pangenomes\n\
  \  --align               Align reads to pangenome database\n  --pileup         \
  \     Run samtools mpileup and count 4 alleles across genome\n\nDatabase options\
  \ (if using --build_db):\n  -d DB                 Path to reference database\n \
  \                       By default, the MIDAS_DB environmental variable is used\n\
  \  --species_cov FLOAT   Include species with >X coverage (3.0)\n  --species_topn\
  \ INT    Include top N most abundant species\n  --species_id CHAR     Include specified\
  \ species. Separate ids with a comma\n\nRead alignment options (if using --align):\n\
  \  -1 M1                 FASTA/FASTQ file containing 1st mate if using paired-end\
  \ reads.\n                        Otherwise FASTA/FASTQ containing unpaired reads.\n\
  \                        Can be gzip'ed (extension: .gz) or bzip2'ed (extension:\
  \ .bz2)\n  -2 M2                 FASTA/FASTQ file containing 2nd mate if using paired-end\
  \ reads.\n                        Can be gzip'ed (extension: .gz) or bzip2'ed (extension:\
  \ .bz2)\n  --interleaved         FASTA/FASTQ file in -1 are paired and contain forward\
  \ AND reverse reads\n  -s {very-fast,fast,sensitive,very-sensitive}\n          \
  \              Bowtie2 alignment speed/sensitivity (very-sensitive)\n  -n MAX_READS\
  \          # reads to use from input file(s) (use all)\n  -m {local,global}    \
  \ Global/local read alignment (global)\n  -t THREADS            Number of threads\
  \ to use (1)\n\nPileup options (if using --pileup):\n  --mapid FLOAT         Discard\
  \ reads with alignment identity < MAPID (94.0)\n  --mapq INT            Discard\
  \ reads with mapping quality < MAPQ (20)\n  --baseq INT           Discard bases\
  \ with quality < BASEQ (30)\n  --readq INT           Discard reads with mean quality\
  \ < READQ (20)\n  --aln_cov FLOAT       Discard reads with alignment coverage <\
  \ ALN_COV (0.75)\n  --trim INT            Trim N base-pairs from 3'/right end of\
  \ read (0)\n  --discard             Discard discordant read-pairs (False)\n  --baq\
  \                 Enable BAQ: per-base alignment quality (False)\n  --adjust_mq\
  \           Adjust MAPQ (False)\n\nExamples:\n1) run entire pipeline using defaults:\n\
  run_midas.py snps /path/to/outdir -1 /path/to/reads_1.fq.gz -2 /path/to/reads_2.fq.gz\n\
  \t\t\t\n2) run entire pipeline for a specific species:\nrun_midas.py snps /path/to/outdir\
  \ --species_id Bacteroides_vulgatus_57955 -1 /path/to/reads_1.fq.gz -2 /path/to/reads_2.fq.gz\n\
  \n3) use local read alignment and discard alignments that cover reads by < 75% (default\
  \ is global alignment):\nrun_midas.py snps /path/to/outdir -1 /path/to/reads_1.fq.gz\
  \ -2 /path/to/reads_2.fq.gz -m local --aln_cov 0.75\n\n4) just align reads, use\
  \ faster alignment, only use the first 10M reads, use 4 CPUs:\nrun_midas.py snps\
  \ /path/to/outdir --align -1 /path/to/reads_1.fq.gz -2 /path/to/reads_2.fq.gz -s\
  \ very-fast -n 10000000 -t 4\n\n5) just count variants, keep reads with >=95% alignment\
  \ identity and keep bases with quality-scores >=35:\nrun_midas.py snps /path/to/outdir\
  \ --pileup --mapid 95 --baseq 35\n\t\n"
generated_using:
- --help
docker_image:
