!Command
command:
- bedtools
- makewindows
positional:
- !Positional
  optional: true
  position: 0
  name: OR
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -g
  description: "Genome file size (see notes below).\nWindows will be created for each\
    \ chromosome in the file."
  args: !SimpleFlagArg
    name: genome
- !Flag
  optional: true
  synonyms:
  - -b
  description: "BED file (with chrom,start,end fields).\nWindows will be created for\
    \ each interval in the file."
  args: !SimpleFlagArg
    name: bed
- !Flag
  optional: true
  synonyms:
  - -w
  description: "Divide each input interval (either a chromosome or a BED interval)\n\
    to fixed-sized windows (i.e. same number of nucleotide in each window).\nCan be\
    \ combined with -s <step_size>"
  args: !SimpleFlagArg
    name: window_size
- !Flag
  optional: true
  synonyms:
  - -s
  description: "Step size: i.e., how many base pairs to step before\ncreating a new\
    \ window. Used to create \"sliding\" windows.\n- Defaults to window size (non-sliding\
    \ windows)."
  args: !SimpleFlagArg
    name: step_size
- !Flag
  optional: true
  synonyms:
  - -n
  description: "Divide each input interval (either a chromosome or a BED interval)\n\
    to fixed number of windows (i.e. same number of windows, with\nvarying window\
    \ sizes)."
  args: !SimpleFlagArg
    name: number_of_windows
- !Flag
  optional: true
  synonyms:
  - -reverse
  description: "Reverse numbering of windows in the output, i.e. report\nwindows in\
    \ decreasing order"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: "|winnum|srcwinnum\nThe default output is 3 columns: chrom, start,\
    \ end .\nWith this option, a name column will be added.\n\"-i src\" - use the\
    \ source interval's name.\n\"-i winnum\" - use the window number as the ID (e.g.\
    \ 1,2,3,4...).\n\"-i srcwinnum\" - use the source interval's name with the window\
    \ number.\nSee below for usage examples."
  args: !SimpleFlagArg
    name: src
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n*****ERROR: Unrecognized parameter: --help *****\n\n\n*****\n*****ERROR:\
  \ Need -g (genome file) or -b (BED file) for interval source. \n*****\n\n*****\n\
  *****ERROR: Need -w (window size) or -n (number of windows). \n*****\n\nTool: bedtools\
  \ makewindows\nVersion: v2.29.2\nSummary: Makes adjacent or sliding windows across\
  \ a genome or BED file.\n\nUsage: bedtools makewindows [OPTIONS] [-g <genome> OR\
  \ -b <bed>]\n [ -w <window_size> OR -n <number of windows> ]\n\nInput Options: \n\
  \t-g <genome>\n\t\tGenome file size (see notes below).\n\t\tWindows will be created\
  \ for each chromosome in the file.\n\n\t-b <bed>\n\t\tBED file (with chrom,start,end\
  \ fields).\n\t\tWindows will be created for each interval in the file.\n\nWindows\
  \ Output Options: \n\t-w <window_size>\n\t\tDivide each input interval (either a\
  \ chromosome or a BED interval)\n\t\tto fixed-sized windows (i.e. same number of\
  \ nucleotide in each window).\n\t\tCan be combined with -s <step_size>\n\n\t-s <step_size>\n\
  \t\tStep size: i.e., how many base pairs to step before\n\t\tcreating a new window.\
  \ Used to create \"sliding\" windows.\n\t\t- Defaults to window size (non-sliding\
  \ windows).\n\n\t-n <number_of_windows>\n\t\tDivide each input interval (either\
  \ a chromosome or a BED interval)\n\t\tto fixed number of windows (i.e. same number\
  \ of windows, with\n\t\tvarying window sizes).\n\n\t-reverse\n\t\t Reverse numbering\
  \ of windows in the output, i.e. report \n\t\t windows in decreasing order\n\nID\
  \ Naming Options: \n\t-i src|winnum|srcwinnum\n\t\tThe default output is 3 columns:\
  \ chrom, start, end .\n\t\tWith this option, a name column will be added.\n\t\t\
  \ \"-i src\" - use the source interval's name.\n\t\t \"-i winnum\" - use the window\
  \ number as the ID (e.g. 1,2,3,4...).\n\t\t \"-i srcwinnum\" - use the source interval's\
  \ name with the window number.\n\t\tSee below for usage examples.\n\nNotes: \n\t\
  (1) The genome file should tab delimited and structured as follows:\n\t <chromName><TAB><chromSize>\n\
  \n\tFor example, Human (hg19):\n\tchr1\t249250621\n\tchr2\t243199373\n\t...\n\t\
  chr18_gl000207_random\t4262\n\nTips: \n\tOne can use the UCSC Genome Browser's MySQL\
  \ database to extract\n\tchromosome sizes. For example, H. sapiens:\n\n\tmysql --user=genome\
  \ --host=genome-mysql.cse.ucsc.edu -A -e \\\n\t\"select chrom, size from hg19.chromInfo\"\
  \ > hg19.genome\n\nExamples: \n # Divide the human genome into windows of 1MB:\n\
  \ $ bedtools makewindows -g hg19.txt -w 1000000\n chr1 0 1000000\n chr1 1000000\
  \ 2000000\n chr1 2000000 3000000\n chr1 3000000 4000000\n chr1 4000000 5000000\n\
  \ ...\n\n # Divide the human genome into sliding (=overlapping) windows of 1MB,\
  \ with 500KB overlap:\n $ bedtools makewindows -g hg19.txt -w 1000000 -s 500000\n\
  \ chr1 0 1000000\n chr1 500000 1500000\n chr1 1000000 2000000\n chr1 1500000 2500000\n\
  \ chr1 2000000 3000000\n ...\n\n # Divide each chromosome in human genome to 1000\
  \ windows of equal size:\n $ bedtools makewindows -g hg19.txt -n 1000\n chr1 0 249251\n\
  \ chr1 249251 498502\n chr1 498502 747753\n chr1 747753 997004\n chr1 997004 1246255\n\
  \ ...\n\n # Divide each interval in the given BED file into 10 equal-sized windows:\n\
  \ $ cat input.bed\n chr5 60000 70000\n chr5 73000 90000\n chr5 100000 101000\n $\
  \ bedtools makewindows -b input.bed -n 10\n chr5 60000 61000\n chr5 61000 62000\n\
  \ chr5 62000 63000\n chr5 63000 64000\n chr5 64000 65000\n ...\n\n # Add a name\
  \ column, based on the window number: \n $ cat input.bed\n chr5  60000  70000 AAA\n\
  \ chr5  73000  90000 BBB\n chr5 100000 101000 CCC\n $ bedtools makewindows -b input.bed\
  \ -n 3 -i winnum\n chr5        60000   63334   1\n chr5        63334   66668   2\n\
  \ chr5        66668   70000   3\n chr5        73000   78667   1\n chr5        78667\
  \   84334   2\n chr5        84334   90000   3\n chr5        100000  100334  1\n\
  \ chr5        100334  100668  2\n chr5        100668  101000  3\n ...\n\n # Reverse\
  \ window numbers: \n $ cat input.bed\n chr5  60000  70000 AAA\n chr5  73000  90000\
  \ BBB\n chr5 100000 101000 CCC\n $ bedtools makewindows -b input.bed -n 3 -i winnum\
  \ -reverse\n chr5        60000   63334   3\n chr5        63334   66668   2\n chr5\
  \        66668   70000   1\n chr5        73000   78667   3\n chr5        78667 \
  \  84334   2\n chr5        84334   90000   1\n chr5        100000  100334  3\n chr5\
  \        100334  100668  2\n chr5        100668  101000  1\n ...\n\n # Add a name\
  \ column, based on the source ID + window number: \n $ cat input.bed\n chr5  60000\
  \  70000 AAA\n chr5  73000  90000 BBB\n chr5 100000 101000 CCC\n $ bedtools makewindows\
  \ -b input.bed -n 3 -i srcwinnum\n chr5        60000   63334   AAA_1\n chr5    \
  \    63334   66668   AAA_2\n chr5        66668   70000   AAA_3\n chr5        73000\
  \   78667   BBB_1\n chr5        78667   84334   BBB_2\n chr5        84334   90000\
  \   BBB_3\n chr5        100000  100334  CCC_1\n chr5        100334  100668  CCC_2\n\
  \ chr5        100668  101000  CCC_3\n ...\n\n\n"
generated_using:
- --help
docker_image:
