!Command
command: &id001
- pyqi
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - pyqi
  - make-command
  positional: []
  named:
  - !Flag
    description: 'author/maintainer name [default: none]'
    synonyms:
    - -a
    - --author
    args: !SimpleFlagArg
      name: AUTHOR
    optional: true
  - !Flag
    description: 'maintainer email address [default: none]'
    synonyms:
    - -e
    - --email
    args: !SimpleFlagArg
      name: EMAIL
    optional: true
  - !Flag
    description: 'license (e.g., BSD) [default: none]'
    synonyms:
    - -l
    - --license
    args: !SimpleFlagArg
      name: LICENSE
    optional: true
  - !Flag
    description: "copyright (e.g., Copyright 2013, The pyqi project)\n[default: none]"
    synonyms:
    - -c
    - --copyright
    args: !SimpleFlagArg
      name: COPYRIGHT
    optional: true
  - !Flag
    description: 'version (e.g., 0.1) [default: none]'
    synonyms:
    - --command-version
    args: !SimpleFlagArg
      name: COMMAND_VERSION
    optional: true
  - !Flag
    description: 'comma-separated list of other authors [default: none]'
    synonyms:
    - --credits
    args: !SimpleFlagArg
      name: CREDITS
    optional: true
  - !Flag
    description: 'create stubbed out unit test code [default: False]'
    synonyms:
    - --test-code
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: the name of the Command [REQUIRED]
    synonyms:
    - -n
    - --name
    args: !SimpleFlagArg
      name: NAME
    optional: true
  - !Flag
    description: "output filepath to store generated Python code\n[REQUIRED]\n"
    synonyms:
    - -o
    - --output-fp
    args: !SimpleFlagArg
      name: OUTPUT_FP
    optional: true
  parent: &id003 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional: []
      named:
      - !Flag
        description: 'author/maintainer name [default: none]'
        synonyms:
        - -a
        - --author
        args: !SimpleFlagArg
          name: AUTHOR
        optional: true
      - !Flag
        description: 'maintainer email address [default: none]'
        synonyms:
        - -e
        - --email
        args: !SimpleFlagArg
          name: EMAIL
        optional: true
      - !Flag
        description: 'license (e.g., BSD) [default: none]'
        synonyms:
        - -l
        - --license
        args: !SimpleFlagArg
          name: LICENSE
        optional: true
      - !Flag
        description: "copyright (e.g., Copyright 2013, The pyqi project)\n[default:\
          \ none]"
        synonyms:
        - -c
        - --copyright
        args: !SimpleFlagArg
          name: COPYRIGHT
        optional: true
      - !Flag
        description: 'version (e.g., 0.1) [default: none]'
        synonyms:
        - --command-version
        args: !SimpleFlagArg
          name: COMMAND_VERSION
        optional: true
      - !Flag
        description: 'comma-separated list of other authors [default: none]'
        synonyms:
        - --credits
        args: !SimpleFlagArg
          name: CREDITS
        optional: true
      - !Flag
        description: 'create stubbed out unit test code [default: False]'
        synonyms:
        - --test-code
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: the name of the Command [REQUIRED]
        synonyms:
        - -n
        - --name
        args: !SimpleFlagArg
          name: NAME
        optional: true
      - !Flag
        description: "output filepath to store generated Python code\n[REQUIRED]\n"
        synonyms:
        - -o
        - --output-fp
        args: !SimpleFlagArg
          name: OUTPUT_FP
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Usage: pyqi make-command [options] {-n/--name NAME -o/--output-fp\
        \ OUTPUT-FP}\n\n[] indicates optional input (order unimportant)\n{} indicates\
        \ required input (order unimportant)\n\nThis command is intended to construct\
        \ the basics of a Command object so that a developer can dive straight into\
        \ the implementation of the command\n\nExample usage: \nPrint help message\
        \ and exit\n pyqi make-command -h\n\nBasic Command: Create a basic Command\
        \ with appropriate attribution\n pyqi make-command -n example -a \"some author\"\
        \ -c \"Copyright 2013, The pyqi project\" -e \"foo@bar.com\" -l BSD --command-version\
        \ \"0.1\" --credits \"someone else\",\"and another person\" -o example.py\n\
        \nOptions:\n  --version             show program's version number and exit\n\
        \  -h, --help            show this help message and exit\n  -a AUTHOR, --author=AUTHOR\n\
        \                        author/maintainer name [default: none]\n  -e EMAIL,\
        \ --email=EMAIL\n                        maintainer email address [default:\
        \ none]\n  -l LICENSE, --license=LICENSE\n                        license\
        \ (e.g., BSD) [default: none]\n  -c COPYRIGHT, --copyright=COPYRIGHT\n   \
        \                     copyright (e.g., Copyright 2013, The pyqi project)\n\
        \                        [default: none]\n  --command-version=COMMAND_VERSION\n\
        \                        version (e.g., 0.1) [default: none]\n  --credits=CREDITS\
        \     comma-separated list of other authors [default: none]\n  --test-code\
        \           create stubbed out unit test code [default: False]\n\n  REQUIRED\
        \ options:\n    The following options must be provided under all circumstances.\n\
        \n    -n NAME, --name=NAME\n                        the name of the Command\
        \ [REQUIRED]\n    -o OUTPUT_FP, --output-fp=OUTPUT_FP\n                  \
        \      output filepath to store generated Python code\n                  \
        \      [REQUIRED]\n"
      generated_using: &id004
      - --help
    - !Command
      command: &id005
      - pyqi
      - make-optparse
      positional: []
      named:
      - !Flag
        description: 'author/maintainer name [default: none]'
        synonyms:
        - -a
        - --author
        args: !SimpleFlagArg
          name: AUTHOR
        optional: true
      - !Flag
        description: 'maintainer email address [default: none]'
        synonyms:
        - -e
        - --email
        args: !SimpleFlagArg
          name: EMAIL
        optional: true
      - !Flag
        description: 'license (e.g., BSD) [default: none]'
        synonyms:
        - -l
        - --license
        args: !SimpleFlagArg
          name: LICENSE
        optional: true
      - !Flag
        description: "copyright (e.g., Copyright 2013, The pyqi project)\n[default:\
          \ none]"
        synonyms:
        - --copyright
        args: !SimpleFlagArg
          name: COPYRIGHT
        optional: true
      - !Flag
        description: 'version (e.g., 0.1) [default: none]'
        synonyms:
        - --config-version
        args: !SimpleFlagArg
          name: CONFIG_VERSION
        optional: true
      - !Flag
        description: 'comma-separated list of other authors [default: none]'
        synonyms:
        - --credits
        args: !SimpleFlagArg
          name: CREDITS
        optional: true
      - !Flag
        description: an existing Command [REQUIRED]
        synonyms:
        - -c
        - --command
        args: !SimpleFlagArg
          name: COMMAND
        optional: true
      - !Flag
        description: the Command source module [REQUIRED]
        synonyms:
        - -m
        - --command-module
        args: !SimpleFlagArg
          name: COMMAND_MODULE
        optional: true
      - !Flag
        description: "output filepath to store generated optparse Python\nconfiguration\
          \ file [REQUIRED]\n"
        synonyms:
        - -o
        - --output-fp
        args: !SimpleFlagArg
          name: OUTPUT_FP
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Usage: pyqi make-optparse [options] {-c/--command COMMAND -m/--command-module\
        \ COMMAND-MODULE -o/--output-fp OUTPUT-FP}\n\n[] indicates optional input\
        \ (order unimportant)\n{} indicates required input (order unimportant)\n\n\
        Construct and stub out the basic optparse configuration for a given Command.\
        \ This template provides comments and examples of what to fill in.\n\nExample\
        \ usage: \nPrint help message and exit\n pyqi make-optparse -h\n\nCreate an\
        \ optparse config template: Construct the beginning of an optparse configuration\
        \ file based on the Parameters required by the Command.\n pyqi make-optparse\
        \ -c pyqi.commands.make_optparse.MakeOptparse -m pyqi.commands.make_optparse\
        \ -a \"some author\" --copyright \"Copyright 2013, The pyqi project\" -e \"\
        foo@bar.com\" -l BSD --config-version \"0.1\" --credits \"someone else\",\"\
        and another person\" -o pyqi/interfaces/optparse/config/make_optparse.py\n\
        \nCreate a different optparse config template: Construct the beginning of\
        \ an optparse configuration file based on the Parameters required by the Command.\
        \ This command corresponds to the pyqi tutorial example where a sequence_collection_summarizer\
        \ command line interface is created for a SequenceCollectionSummarizer Command.\n\
        \ pyqi make-optparse -c sequence_collection_summarizer.SequenceCollectionSummarizer\
        \ -m sequence_collection_summarizer -a \"Greg Caporaso\" --copyright \"Copyright\
        \ 2013, Greg Caporaso\" -e \"gregcaporaso@gmail.com\" -l BSD --config-version\
        \ 0.0.1 -o summarize_sequence_collection.py\n\nOptions:\n  --version     \
        \        show program's version number and exit\n  -h, --help            show\
        \ this help message and exit\n  -a AUTHOR, --author=AUTHOR\n             \
        \           author/maintainer name [default: none]\n  -e EMAIL, --email=EMAIL\n\
        \                        maintainer email address [default: none]\n  -l LICENSE,\
        \ --license=LICENSE\n                        license (e.g., BSD) [default:\
        \ none]\n  --copyright=COPYRIGHT\n                        copyright (e.g.,\
        \ Copyright 2013, The pyqi project)\n                        [default: none]\n\
        \  --config-version=CONFIG_VERSION\n                        version (e.g.,\
        \ 0.1) [default: none]\n  --credits=CREDITS     comma-separated list of other\
        \ authors [default: none]\n\n  REQUIRED options:\n    The following options\
        \ must be provided under all circumstances.\n\n    -c COMMAND, --command=COMMAND\n\
        \                        an existing Command [REQUIRED]\n    -m COMMAND_MODULE,\
        \ --command-module=COMMAND_MODULE\n                        the Command source\
        \ module [REQUIRED]\n    -o OUTPUT_FP, --output-fp=OUTPUT_FP\n           \
        \             output filepath to store generated optparse Python\n       \
        \                 configuration file [REQUIRED]\n"
      generated_using: *id004
    - !Command
      command: &id006
      - pyqi
      - make-release
      positional: []
      named:
      - !Flag
        description: 'Perform a real run [default: False]'
        synonyms:
        - --real-run
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "The name of the package to release [REQUIRED]\n"
        synonyms:
        - --package-name
        args: !SimpleFlagArg
          name: PACKAGE_NAME
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Usage: pyqi make-release [options] {--package-name PACKAGE-NAME}\n\
        \n[] indicates optional input (order unimportant)\n{} indicates required input\
        \ (order unimportant)\n\nDo all the things for a release\n\nExample usage:\
        \ \nPrint help message and exit\n pyqi make-release -h\n\nMake a release:\
        \ Make a release, tag it, update version strings and upload to pypi\n pyqi\
        \ make-release --package-name=pyqi --real-run\n\nOptions:\n  --version   \
        \          show program's version number and exit\n  -h, --help          \
        \  show this help message and exit\n  --real-run            Perform a real\
        \ run [default: False]\n\n  REQUIRED options:\n    The following options must\
        \ be provided under all circumstances.\n\n    --package-name=PACKAGE_NAME\n\
        \                        The name of the package to release [REQUIRED]\n"
      generated_using: *id004
    - !Command
      command: &id007
      - pyqi
      - make-bash-completion
      positional: []
      named:
      - !Flag
        description: CLI command configuration module [REQUIRED]
        synonyms:
        - --command-config-module
        args: !SimpleFlagArg
          name: COMMAND_CONFIG_MODULE
        optional: true
      - !Flag
        description: name of the driver script [REQUIRED]
        synonyms:
        - --driver-name
        args: !SimpleFlagArg
          name: DRIVER_NAME
        optional: true
      - !Flag
        description: "output filepath [REQUIRED]\n"
        synonyms:
        - -o
        - --output-fp
        args: !SimpleFlagArg
          name: OUTPUT_FP
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Usage: pyqi make-bash-completion [options] {--command-config-module\
        \ COMMAND-CONFIG-MODULE --driver-name DRIVER-NAME -o/--output-fp OUTPUT-FP}\n\
        \n[] indicates optional input (order unimportant)\n{} indicates required input\
        \ (order unimportant)\n\nConstruct a bash tab completion script that will\
        \ search through available commands and options\n\nExample usage: \nPrint\
        \ help message and exit\n pyqi make-bash-completion -h\n\nCreate a bash completion\
        \ script: Create a bash completion script for use with a pyqi driver\n pyqi\
        \ make-bash-completion --command-config-module pyqi.interfaces.optparse.config\
        \ --driver-name pyqi -o ~/.bash_completion.d/pyqi\n\nOptions:\n  --version\
        \             show program's version number and exit\n  -h, --help       \
        \     show this help message and exit\n\n  REQUIRED options:\n    The following\
        \ options must be provided under all circumstances.\n\n    --command-config-module=COMMAND_CONFIG_MODULE\n\
        \                        CLI command configuration module [REQUIRED]\n   \
        \ --driver-name=DRIVER_NAME\n                        name of the driver script\
        \ [REQUIRED]\n    -o OUTPUT_FP, --output-fp=OUTPUT_FP\n                  \
        \      output filepath [REQUIRED]\n"
      generated_using: *id004
    - !Command
      command: &id008
      - pyqi
      - serve-html-interface
      positional: []
      named:
      - !Flag
        description: 'The port to run the server on [default: 8080]'
        synonyms:
        - -p
        - --port
        args: !SimpleFlagArg
          name: PORT
        optional: true
      - !Flag
        description: "The module to serve the interface for [REQUIRED]\n"
        synonyms:
        - -m
        - --interface-module
        args: !SimpleFlagArg
          name: INTERFACE_MODULE
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: show program's version number and exit
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "Usage: pyqi serve-html-interface [options] {-m/--interface-module\
        \ INTERFACE-MODULE}\n\n[] indicates optional input (order unimportant)\n{}\
        \ indicates required input (order unimportant)\n\nStart the HTMLInterface\
        \ server and load the provided interface_module and port\n\nExample usage:\
        \ \nPrint help message and exit\n pyqi serve-html-interface -h\n\nStart html\
        \ interface: Starts an html interface server on the specified --port and --interface-module\n\
        \ pyqi serve-html-interface -p 8080 -m pyqi.interfaces.html.config\n\nOptions:\n\
        \  --version             show program's version number and exit\n  -h, --help\
        \            show this help message and exit\n  -p PORT, --port=PORT  The\
        \ port to run the server on [default: 8080]\n\n  REQUIRED options:\n    The\
        \ following options must be provided under all circumstances.\n\n    -m INTERFACE_MODULE,\
        \ --interface-module=INTERFACE_MODULE\n                        The module\
        \ to serve the interface for [REQUIRED]\n"
      generated_using: *id004
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: pyqi <command> [<args>]\n\nThe currently available commands\
      \ are:\n   make-bash-completion   Construct a bash completion script\n   make-command\
      \           Construct a stubbed out Command object\n   make-optparse       \
      \   Consume a Command, stub out an optparse configuration\n   make-release \
      \          Make the release\n   serve-html-interface   Start the HTMLInterface\
      \ server\n\nSee 'pyqi help <command>' for more information on a specific command.\n"
    generated_using: *id004
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: pyqi make-command [options] {-n/--name NAME -o/--output-fp OUTPUT-FP}\n\
    \n[] indicates optional input (order unimportant)\n{} indicates required input\
    \ (order unimportant)\n\nThis command is intended to construct the basics of a\
    \ Command object so that a developer can dive straight into the implementation\
    \ of the command\n\nExample usage: \nPrint help message and exit\n pyqi make-command\
    \ -h\n\nBasic Command: Create a basic Command with appropriate attribution\n pyqi\
    \ make-command -n example -a \"some author\" -c \"Copyright 2013, The pyqi project\"\
    \ -e \"foo@bar.com\" -l BSD --command-version \"0.1\" --credits \"someone else\"\
    ,\"and another person\" -o example.py\n\nOptions:\n  --version             show\
    \ program's version number and exit\n  -h, --help            show this help message\
    \ and exit\n  -a AUTHOR, --author=AUTHOR\n                        author/maintainer\
    \ name [default: none]\n  -e EMAIL, --email=EMAIL\n                        maintainer\
    \ email address [default: none]\n  -l LICENSE, --license=LICENSE\n           \
    \             license (e.g., BSD) [default: none]\n  -c COPYRIGHT, --copyright=COPYRIGHT\n\
    \                        copyright (e.g., Copyright 2013, The pyqi project)\n\
    \                        [default: none]\n  --command-version=COMMAND_VERSION\n\
    \                        version (e.g., 0.1) [default: none]\n  --credits=CREDITS\
    \     comma-separated list of other authors [default: none]\n  --test-code   \
    \        create stubbed out unit test code [default: False]\n\n  REQUIRED options:\n\
    \    The following options must be provided under all circumstances.\n\n    -n\
    \ NAME, --name=NAME\n                        the name of the Command [REQUIRED]\n\
    \    -o OUTPUT_FP, --output-fp=OUTPUT_FP\n                        output filepath\
    \ to store generated Python code\n                        [REQUIRED]\n"
  generated_using: *id004
- !Command
  command: *id005
  positional: []
  named:
  - !Flag
    description: 'author/maintainer name [default: none]'
    synonyms:
    - -a
    - --author
    args: !SimpleFlagArg
      name: AUTHOR
    optional: true
  - !Flag
    description: 'maintainer email address [default: none]'
    synonyms:
    - -e
    - --email
    args: !SimpleFlagArg
      name: EMAIL
    optional: true
  - !Flag
    description: 'license (e.g., BSD) [default: none]'
    synonyms:
    - -l
    - --license
    args: !SimpleFlagArg
      name: LICENSE
    optional: true
  - !Flag
    description: "copyright (e.g., Copyright 2013, The pyqi project)\n[default: none]"
    synonyms:
    - --copyright
    args: !SimpleFlagArg
      name: COPYRIGHT
    optional: true
  - !Flag
    description: 'version (e.g., 0.1) [default: none]'
    synonyms:
    - --config-version
    args: !SimpleFlagArg
      name: CONFIG_VERSION
    optional: true
  - !Flag
    description: 'comma-separated list of other authors [default: none]'
    synonyms:
    - --credits
    args: !SimpleFlagArg
      name: CREDITS
    optional: true
  - !Flag
    description: an existing Command [REQUIRED]
    synonyms:
    - -c
    - --command
    args: !SimpleFlagArg
      name: COMMAND
    optional: true
  - !Flag
    description: the Command source module [REQUIRED]
    synonyms:
    - -m
    - --command-module
    args: !SimpleFlagArg
      name: COMMAND_MODULE
    optional: true
  - !Flag
    description: "output filepath to store generated optparse Python\nconfiguration\
      \ file [REQUIRED]\n"
    synonyms:
    - -o
    - --output-fp
    args: !SimpleFlagArg
      name: OUTPUT_FP
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: pyqi make-optparse [options] {-c/--command COMMAND -m/--command-module\
    \ COMMAND-MODULE -o/--output-fp OUTPUT-FP}\n\n[] indicates optional input (order\
    \ unimportant)\n{} indicates required input (order unimportant)\n\nConstruct and\
    \ stub out the basic optparse configuration for a given Command. This template\
    \ provides comments and examples of what to fill in.\n\nExample usage: \nPrint\
    \ help message and exit\n pyqi make-optparse -h\n\nCreate an optparse config template:\
    \ Construct the beginning of an optparse configuration file based on the Parameters\
    \ required by the Command.\n pyqi make-optparse -c pyqi.commands.make_optparse.MakeOptparse\
    \ -m pyqi.commands.make_optparse -a \"some author\" --copyright \"Copyright 2013,\
    \ The pyqi project\" -e \"foo@bar.com\" -l BSD --config-version \"0.1\" --credits\
    \ \"someone else\",\"and another person\" -o pyqi/interfaces/optparse/config/make_optparse.py\n\
    \nCreate a different optparse config template: Construct the beginning of an optparse\
    \ configuration file based on the Parameters required by the Command. This command\
    \ corresponds to the pyqi tutorial example where a sequence_collection_summarizer\
    \ command line interface is created for a SequenceCollectionSummarizer Command.\n\
    \ pyqi make-optparse -c sequence_collection_summarizer.SequenceCollectionSummarizer\
    \ -m sequence_collection_summarizer -a \"Greg Caporaso\" --copyright \"Copyright\
    \ 2013, Greg Caporaso\" -e \"gregcaporaso@gmail.com\" -l BSD --config-version\
    \ 0.0.1 -o summarize_sequence_collection.py\n\nOptions:\n  --version         \
    \    show program's version number and exit\n  -h, --help            show this\
    \ help message and exit\n  -a AUTHOR, --author=AUTHOR\n                      \
    \  author/maintainer name [default: none]\n  -e EMAIL, --email=EMAIL\n       \
    \                 maintainer email address [default: none]\n  -l LICENSE, --license=LICENSE\n\
    \                        license (e.g., BSD) [default: none]\n  --copyright=COPYRIGHT\n\
    \                        copyright (e.g., Copyright 2013, The pyqi project)\n\
    \                        [default: none]\n  --config-version=CONFIG_VERSION\n\
    \                        version (e.g., 0.1) [default: none]\n  --credits=CREDITS\
    \     comma-separated list of other authors [default: none]\n\n  REQUIRED options:\n\
    \    The following options must be provided under all circumstances.\n\n    -c\
    \ COMMAND, --command=COMMAND\n                        an existing Command [REQUIRED]\n\
    \    -m COMMAND_MODULE, --command-module=COMMAND_MODULE\n                    \
    \    the Command source module [REQUIRED]\n    -o OUTPUT_FP, --output-fp=OUTPUT_FP\n\
    \                        output filepath to store generated optparse Python\n\
    \                        configuration file [REQUIRED]\n"
  generated_using: *id004
- !Command
  command: *id006
  positional: []
  named:
  - !Flag
    description: 'Perform a real run [default: False]'
    synonyms:
    - --real-run
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "The name of the package to release [REQUIRED]\n"
    synonyms:
    - --package-name
    args: !SimpleFlagArg
      name: PACKAGE_NAME
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: pyqi make-release [options] {--package-name PACKAGE-NAME}\n\n\
    [] indicates optional input (order unimportant)\n{} indicates required input (order\
    \ unimportant)\n\nDo all the things for a release\n\nExample usage: \nPrint help\
    \ message and exit\n pyqi make-release -h\n\nMake a release: Make a release, tag\
    \ it, update version strings and upload to pypi\n pyqi make-release --package-name=pyqi\
    \ --real-run\n\nOptions:\n  --version             show program's version number\
    \ and exit\n  -h, --help            show this help message and exit\n  --real-run\
    \            Perform a real run [default: False]\n\n  REQUIRED options:\n    The\
    \ following options must be provided under all circumstances.\n\n    --package-name=PACKAGE_NAME\n\
    \                        The name of the package to release [REQUIRED]\n"
  generated_using: *id004
- !Command
  command: *id007
  positional: []
  named:
  - !Flag
    description: CLI command configuration module [REQUIRED]
    synonyms:
    - --command-config-module
    args: !SimpleFlagArg
      name: COMMAND_CONFIG_MODULE
    optional: true
  - !Flag
    description: name of the driver script [REQUIRED]
    synonyms:
    - --driver-name
    args: !SimpleFlagArg
      name: DRIVER_NAME
    optional: true
  - !Flag
    description: "output filepath [REQUIRED]\n"
    synonyms:
    - -o
    - --output-fp
    args: !SimpleFlagArg
      name: OUTPUT_FP
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: pyqi make-bash-completion [options] {--command-config-module\
    \ COMMAND-CONFIG-MODULE --driver-name DRIVER-NAME -o/--output-fp OUTPUT-FP}\n\n\
    [] indicates optional input (order unimportant)\n{} indicates required input (order\
    \ unimportant)\n\nConstruct a bash tab completion script that will search through\
    \ available commands and options\n\nExample usage: \nPrint help message and exit\n\
    \ pyqi make-bash-completion -h\n\nCreate a bash completion script: Create a bash\
    \ completion script for use with a pyqi driver\n pyqi make-bash-completion --command-config-module\
    \ pyqi.interfaces.optparse.config --driver-name pyqi -o ~/.bash_completion.d/pyqi\n\
    \nOptions:\n  --version             show program's version number and exit\n \
    \ -h, --help            show this help message and exit\n\n  REQUIRED options:\n\
    \    The following options must be provided under all circumstances.\n\n    --command-config-module=COMMAND_CONFIG_MODULE\n\
    \                        CLI command configuration module [REQUIRED]\n    --driver-name=DRIVER_NAME\n\
    \                        name of the driver script [REQUIRED]\n    -o OUTPUT_FP,\
    \ --output-fp=OUTPUT_FP\n                        output filepath [REQUIRED]\n"
  generated_using: *id004
- !Command
  command: *id008
  positional: []
  named:
  - !Flag
    description: 'The port to run the server on [default: 8080]'
    synonyms:
    - -p
    - --port
    args: !SimpleFlagArg
      name: PORT
    optional: true
  - !Flag
    description: "The module to serve the interface for [REQUIRED]\n"
    synonyms:
    - -m
    - --interface-module
    args: !SimpleFlagArg
      name: INTERFACE_MODULE
    optional: true
  parent: *id003
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: pyqi serve-html-interface [options] {-m/--interface-module INTERFACE-MODULE}\n\
    \n[] indicates optional input (order unimportant)\n{} indicates required input\
    \ (order unimportant)\n\nStart the HTMLInterface server and load the provided\
    \ interface_module and port\n\nExample usage: \nPrint help message and exit\n\
    \ pyqi serve-html-interface -h\n\nStart html interface: Starts an html interface\
    \ server on the specified --port and --interface-module\n pyqi serve-html-interface\
    \ -p 8080 -m pyqi.interfaces.html.config\n\nOptions:\n  --version            \
    \ show program's version number and exit\n  -h, --help            show this help\
    \ message and exit\n  -p PORT, --port=PORT  The port to run the server on [default:\
    \ 8080]\n\n  REQUIRED options:\n    The following options must be provided under\
    \ all circumstances.\n\n    -m INTERFACE_MODULE, --interface-module=INTERFACE_MODULE\n\
    \                        The module to serve the interface for [REQUIRED]\n"
  generated_using: *id004
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: pyqi <command> [<args>]\n\nThe currently available commands are:\n\
  \   make-bash-completion   Construct a bash completion script\n   make-command \
  \          Construct a stubbed out Command object\n   make-optparse          Consume\
  \ a Command, stub out an optparse configuration\n   make-release           Make\
  \ the release\n   serve-html-interface   Start the HTMLInterface server\n\nSee 'pyqi\
  \ help <command>' for more information on a specific command.\n"
generated_using: *id004
