&id006 !Command
command:
- augur
- align
positional: []
named:
- !Flag
  description: 'sequences to align (default: None)'
  synonyms:
  - --sequences
  - -s
  args: !RepeatFlagArg
    name: FASTA
  optional: true
- !Flag
  description: 'output file (default: alignment.fasta)'
  synonyms:
  - --output
  - -o
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: "number of threads to use; specifying the value 'auto'\nwill cause\
    \ the number of available CPU cores on your\nsystem, if determinable, to be used\
    \ (default: 1)"
  synonyms:
  - --nthreads
  args: !SimpleFlagArg
    name: NTHREADS
  optional: true
- !Flag
  description: 'alignment program to use (default: mafft)'
  synonyms:
  - --method
  args: !ChoiceFlagArg
    choices: !!set
      mafft:
  optional: true
- !Flag
  description: "strip insertions relative to reference sequence; use\nif the reference\
    \ is already in the input sequences\n(default: None)"
  synonyms:
  - --reference-name
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: "Add this reference sequence to the dataset & strip\ninsertions relative\
    \ to this. Use if the reference is\nNOT already in the input sequences (default:\
    \ None)"
  synonyms:
  - --reference-sequence
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "remove reference sequence from the alignment (default:\nFalse)"
  synonyms:
  - --remove-reference
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "If gaps represent missing data rather than true\nindels, replace by\
    \ N after aligning. (default: False)"
  synonyms:
  - --fill-gaps
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "An existing alignment to which the sequences will be\nadded. The ouput\
    \ alignment will be the same length as\nthis existing alignment. (default: False)"
  synonyms:
  - --existing-alignment
  args: !SimpleFlagArg
    name: FASTA
  optional: true
- !Flag
  description: "Produce extra files (e.g. pre- and post-aligner files)\nwhich can\
    \ help with debugging poor alignments.\n(default: False)\n"
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - augur
  positional: []
  named: []
  parent:
  subcommands:
  - &id002 !Command
    command:
    - augur
    - import
    positional: []
    named: []
    parent: *id001
    subcommands:
    - !Command
      command:
      - augur
      - import
      - beast
      positional:
      - !Positional
        description: 'optional arguments:'
        position: 0
        name: OUTPUT_NODE_DATA
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --output-tree
        - --output-node-data
        args: !SimpleFlagArg
          name: OUTPUT_TREE
        optional: true
      - !Flag
        description: BEAST MCC tree
        synonyms:
        - --mcc
        args: !SimpleFlagArg
          name: MCC
        optional: true
      - !Flag
        description: "Numeric date of most recent tip in tree (--tip-date-\nregex,\
          \ --tip-date-format and --tip-date-delimeter are\nignored if this is set)"
        synonyms:
        - --most-recent-tip-date
        args: !SimpleFlagArg
          name: MOST_RECENT_TIP_DATE
        optional: true
      - !Flag
        description: regex to extract dates from tip names
        synonyms:
        - --tip-date-regex
        args: !SimpleFlagArg
          name: TIP_DATE_REGEX
        optional: true
      - !Flag
        description: Format of date (if extracted by regex)
        synonyms:
        - --tip-date-format
        args: !SimpleFlagArg
          name: TIP_DATE_FORMAT
        optional: true
      - !Flag
        description: "delimeter used in tip-date-format. Used to match\npartial dates."
        synonyms:
        - --tip-date-delimeter
        args: !SimpleFlagArg
          name: TIP_DATE_DELIMETER
        optional: true
      - !Flag
        description: Display verbose output. Only useful for debugging.
        synonyms:
        - --verbose
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Set a custom recursion limit (dangerous!)
        synonyms:
        - --recursion-limit
        args: !SimpleFlagArg
          name: RECURSION_LIMIT
        optional: true
      parent: *id002
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: augur import beast [-h] --mcc MCC\n                     \
        \     [--most-recent-tip-date MOST_RECENT_TIP_DATE]\n                    \
        \      [--tip-date-regex TIP_DATE_REGEX]\n                          [--tip-date-format\
        \ TIP_DATE_FORMAT]\n                          [--tip-date-delimeter TIP_DATE_DELIMETER]\n\
        \                          [--verbose] [--recursion-limit RECURSION_LIMIT]\n\
        \                          --output-tree OUTPUT_TREE --output-node-data\n\
        \                          OUTPUT_NODE_DATA\n\noptional arguments:\n  -h,\
        \ --help            show this help message and exit\n  --mcc MCC         \
        \    BEAST MCC tree\n  --most-recent-tip-date MOST_RECENT_TIP_DATE\n     \
        \                   Numeric date of most recent tip in tree (--tip-date-\n\
        \                        regex, --tip-date-format and --tip-date-delimeter\
        \ are\n                        ignored if this is set)\n  --tip-date-regex\
        \ TIP_DATE_REGEX\n                        regex to extract dates from tip\
        \ names\n  --tip-date-format TIP_DATE_FORMAT\n                        Format\
        \ of date (if extracted by regex)\n  --tip-date-delimeter TIP_DATE_DELIMETER\n\
        \                        delimeter used in tip-date-format. Used to match\n\
        \                        partial dates.\n  --verbose             Display verbose\
        \ output. Only useful for debugging.\n  --recursion-limit RECURSION_LIMIT\n\
        \                        Set a custom recursion limit (dangerous!)\n  --output-tree\
        \ OUTPUT_TREE\n                        file name to write tree to\n  --output-node-data\
        \ OUTPUT_NODE_DATA\n                        file name to write (temporal)\
        \ branch lengths & BEAST\n                        traits as node data\n"
      generated_using: &id003
      - --help
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur import [-h]\n                    Import analyses into\
      \ augur pipeline from other systems ...\n\nImport analyses into augur pipeline\
      \ from other systems\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n\nTYPE:\n  Import analyses into augur pipeline from\
      \ other systems\n    beast               Import beast analysis\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - mask
    positional: []
    named:
    - !Flag
      description: 'sequences in VCF or FASTA format (default: None)'
      synonyms:
      - --sequences
      - -s
      args: !SimpleFlagArg
        name: SEQUENCES
      optional: true
    - !Flag
      description: "locations to be masked in either BED file format, DRM\nformat,\
        \ or one 1-indexed site per line. (default:\nNone)"
      synonyms:
      - --mask
      args: !SimpleFlagArg
        name: MASK_FILE
      optional: true
    - !Flag
      description: "FASTA Only: Number of sites to mask from beginning\n(default:\
        \ 0)"
      synonyms:
      - --mask-from-beginning
      args: !SimpleFlagArg
        name: MASK_FROM_BEGINNING
      optional: true
    - !Flag
      description: "FASTA Only: Number of sites to mask from end (default:\n0)"
      synonyms:
      - --mask-from-end
      args: !SimpleFlagArg
        name: MASK_FROM_END
      optional: true
    - !Flag
      description: '1-indexed list of sites to mask (default: None)'
      synonyms:
      - --mask-sites
      args: !RepeatFlagArg
        name: MASK_SITES
      optional: true
    - !Flag
      description: 'output file (default: None)'
      synonyms:
      - --output
      - -o
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "Leave intermediate files around. May be useful for\ndebugging\
        \ (default: True)\n"
      synonyms:
      - --no-cleanup
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur mask [-h] --sequences SEQUENCES [--mask MASK_FILE]\n\
      \                  [--mask-from-beginning MASK_FROM_BEGINNING]\n           \
      \       [--mask-from-end MASK_FROM_END]\n                  [--mask-sites MASK_SITES\
      \ [MASK_SITES ...]] [--output OUTPUT]\n                  [--no-cleanup]\n\n\
      Mask specified sites from a VCF or FASTA file.\n\noptional arguments:\n  -h,\
      \ --help            show this help message and exit\n  --sequences SEQUENCES,\
      \ -s SEQUENCES\n                        sequences in VCF or FASTA format (default:\
      \ None)\n  --mask MASK_FILE      locations to be masked in either BED file format,\
      \ DRM\n                        format, or one 1-indexed site per line. (default:\n\
      \                        None)\n  --mask-from-beginning MASK_FROM_BEGINNING\n\
      \                        FASTA Only: Number of sites to mask from beginning\n\
      \                        (default: 0)\n  --mask-from-end MASK_FROM_END\n   \
      \                     FASTA Only: Number of sites to mask from end (default:\n\
      \                        0)\n  --mask-sites MASK_SITES [MASK_SITES ...]\n  \
      \                      1-indexed list of sites to mask (default: None)\n  --output\
      \ OUTPUT, -o OUTPUT\n                        output file (default: None)\n \
      \ --no-cleanup          Leave intermediate files around. May be useful for\n\
      \                        debugging (default: True)\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - filter
    positional: []
    named:
    - !Flag
      description: 'sequences in fasta or VCF format (default: None)'
      synonyms:
      - --sequences
      - -s
      args: !SimpleFlagArg
        name: SEQUENCES
      optional: true
    - !Flag
      description: 'metadata associated with sequences (default: None)'
      synonyms:
      - --metadata
      args: !SimpleFlagArg
        name: METADATA
      optional: true
    - !Flag
      description: "minimal cutoff for date; may be specified as an Augur-\nstyle\
        \ numeric date (with the year as the integer part)\nor YYYY-MM-DD (default:\
        \ None)"
      synonyms:
      - --min-date
      args: !SimpleFlagArg
        name: MIN_DATE
      optional: true
    - !Flag
      description: "maximal cutoff for date; may be specified as an Augur-\nstyle\
        \ numeric date (with the year as the integer part)\nor YYYY-MM-DD (default:\
        \ None)"
      synonyms:
      - --max-date
      args: !SimpleFlagArg
        name: MAX_DATE
      optional: true
    - !Flag
      description: 'minimal length of the sequences (default: None)'
      synonyms:
      - --min-length
      args: !SimpleFlagArg
        name: MIN_LENGTH
      optional: true
    - !Flag
      description: "exclude sequences that contain illegal characters\n(default: False)"
      synonyms:
      - --non-nucleotide
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "file with list of strains that are to be excluded\n(default: None)"
      synonyms:
      - --exclude
      args: !SimpleFlagArg
        name: EXCLUDE
      optional: true
    - !Flag
      description: "file with list of strains that are to be included\nregardless\
        \ of priorities or subsampling (default:\nNone)"
      synonyms:
      - --include
      args: !SimpleFlagArg
        name: INCLUDE
      optional: true
    - !Flag
      description: "file with list of priority scores for sequences\n(strain priority)\
        \ (default: None)"
      synonyms:
      - --priority
      args: !SimpleFlagArg
        name: PRIORITY
      optional: true
    - !Flag
      description: "subsample to no more than this number of sequences per\ncategory\
        \ (default: None)"
      synonyms:
      - --sequences-per-group
      args: !SimpleFlagArg
        name: SEQUENCES_PER_GROUP
      optional: true
    - !Flag
      description: "categories with respect to subsample; two virtual\nfields, \"\
        month\" and \"year\", are supported if they\ndon't already exist as real fields\
        \ but a \"date\" field\ndoes exist (default: None)"
      synonyms:
      - --group-by
      args: !RepeatFlagArg
        name: GROUP_BY
      optional: true
    - !Flag
      description: "random number generator seed to allow reproducible\nsub-sampling\
        \ (with same input data). Can be number or\nstring. (default: None)"
      synonyms:
      - --subsample-seed
      args: !SimpleFlagArg
        name: SUBSAMPLE_SEED
      optional: true
    - !Flag
      description: "Exclude samples matching these conditions. Ex:\n\"host=rat\" or\
        \ \"host!=rat\". Multiple values are\nprocessed as OR (matching any of those\
        \ specified will\nbe excluded), not AND (default: None)"
      synonyms:
      - --exclude-where
      args: !RepeatFlagArg
        name: EXCLUDE_WHERE
      optional: true
    - !Flag
      description: "Include samples with these values. ex: host=rat.\nMultiple values\
        \ are processed as OR (having any of\nthose specified will be included), not\
        \ AND. This rule\nis applied last and ensures any sequences matching\nthese\
        \ rules will be included. (default: None)"
      synonyms:
      - --include-where
      args: !RepeatFlagArg
        name: INCLUDE_WHERE
      optional: true
    - !Flag
      description: "Filter samples by attribute. Uses Pandas Dataframe\nquerying,\
        \ see https://pandas.pydata.org/pandas-\ndocs/stable/user_guide/indexing.html#indexing-query\n\
        for syntax. (default: None)"
      synonyms:
      - --query
      args: !SimpleFlagArg
        name: QUERY
      optional: true
    - !Flag
      description: "output file (default: None)\n"
      synonyms:
      - --output
      - -o
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur filter [-h] --sequences SEQUENCES --metadata METADATA\n\
      \                    [--min-date MIN_DATE] [--max-date MAX_DATE]\n         \
      \           [--min-length MIN_LENGTH] [--non-nucleotide]\n                 \
      \   [--exclude EXCLUDE] [--include INCLUDE]\n                    [--priority\
      \ PRIORITY]\n                    [--sequences-per-group SEQUENCES_PER_GROUP]\n\
      \                    [--group-by GROUP_BY [GROUP_BY ...]]\n                \
      \    [--subsample-seed SUBSAMPLE_SEED]\n                    [--exclude-where\
      \ EXCLUDE_WHERE [EXCLUDE_WHERE ...]]\n                    [--include-where INCLUDE_WHERE\
      \ [INCLUDE_WHERE ...]]\n                    [--query QUERY] --output OUTPUT\n\
      \nFilter and subsample a sequence set.\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  --sequences SEQUENCES, -s SEQUENCES\n\
      \                        sequences in fasta or VCF format (default: None)\n\
      \  --metadata METADATA   metadata associated with sequences (default: None)\n\
      \  --min-date MIN_DATE   minimal cutoff for date; may be specified as an Augur-\n\
      \                        style numeric date (with the year as the integer part)\n\
      \                        or YYYY-MM-DD (default: None)\n  --max-date MAX_DATE\
      \   maximal cutoff for date; may be specified as an Augur-\n               \
      \         style numeric date (with the year as the integer part)\n         \
      \               or YYYY-MM-DD (default: None)\n  --min-length MIN_LENGTH\n \
      \                       minimal length of the sequences (default: None)\n  --non-nucleotide\
      \      exclude sequences that contain illegal characters\n                 \
      \       (default: False)\n  --exclude EXCLUDE     file with list of strains\
      \ that are to be excluded\n                        (default: None)\n  --include\
      \ INCLUDE     file with list of strains that are to be included\n          \
      \              regardless of priorities or subsampling (default:\n         \
      \               None)\n  --priority PRIORITY   file with list of priority scores\
      \ for sequences\n                        (strain priority) (default: None)\n\
      \  --sequences-per-group SEQUENCES_PER_GROUP\n                        subsample\
      \ to no more than this number of sequences per\n                        category\
      \ (default: None)\n  --group-by GROUP_BY [GROUP_BY ...]\n                  \
      \      categories with respect to subsample; two virtual\n                 \
      \       fields, \"month\" and \"year\", are supported if they\n            \
      \            don't already exist as real fields but a \"date\" field\n     \
      \                   does exist (default: None)\n  --subsample-seed SUBSAMPLE_SEED\n\
      \                        random number generator seed to allow reproducible\n\
      \                        sub-sampling (with same input data). Can be number\
      \ or\n                        string. (default: None)\n  --exclude-where EXCLUDE_WHERE\
      \ [EXCLUDE_WHERE ...]\n                        Exclude samples matching these\
      \ conditions. Ex:\n                        \"host=rat\" or \"host!=rat\". Multiple\
      \ values are\n                        processed as OR (matching any of those\
      \ specified will\n                        be excluded), not AND (default: None)\n\
      \  --include-where INCLUDE_WHERE [INCLUDE_WHERE ...]\n                     \
      \   Include samples with these values. ex: host=rat.\n                     \
      \   Multiple values are processed as OR (having any of\n                   \
      \     those specified will be included), not AND. This rule\n              \
      \          is applied last and ensures any sequences matching\n            \
      \            these rules will be included. (default: None)\n  --query QUERY\
      \         Filter samples by attribute. Uses Pandas Dataframe\n             \
      \           querying, see https://pandas.pydata.org/pandas-\n              \
      \          docs/stable/user_guide/indexing.html#indexing-query\n           \
      \             for syntax. (default: None)\n  --output OUTPUT, -o OUTPUT\n  \
      \                      output file (default: None)\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - measurements.
    positional:
    - !Positional
      description: ''
      position: 0
      name: augur
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
      \             ...\naugur: error: invalid choice: 'measurements.' (choose from\
      \ 'parse', 'filter', 'mask', 'align', 'tree', 'refine', 'ancestral', 'translate',\
      \ 'reconstruct-sequences', 'clades', 'traits', 'sequence-traits', 'lbi', 'distance',\
      \ 'titers', 'frequencies', 'export', 'validate', 'version', 'import')\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - auspice.
    positional:
    - !Positional
      description: ''
      position: 0
      name: augur
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
      \             ...\naugur: error: invalid choice: 'auspice.' (choose from 'parse',\
      \ 'filter', 'mask', 'align', 'tree', 'refine', 'ancestral', 'translate', 'reconstruct-sequences',\
      \ 'clades', 'traits', 'sequence-traits', 'lbi', 'distance', 'titers', 'frequencies',\
      \ 'export', 'validate', 'version', 'import')\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - ancestral
    positional: []
    named:
    - !Flag
      description: 'prebuilt Newick (default: None)'
      synonyms:
      - --tree
      - -t
      args: !SimpleFlagArg
        name: TREE
      optional: true
    - !Flag
      description: 'alignment in fasta or VCF format (default: None)'
      synonyms:
      - --alignment
      - -a
      args: !SimpleFlagArg
        name: ALIGNMENT
      optional: true
    - !Flag
      description: "name of JSON file to save mutations and ancestral\nsequences to\
        \ (default: None)"
      synonyms:
      - --output-node-data
      args: !SimpleFlagArg
        name: OUTPUT_NODE_DATA
      optional: true
    - !Flag
      description: "name of FASTA file to save ancestral sequences to\n(FASTA alignments\
        \ only) (default: None)"
      synonyms:
      - --output-sequences
      args: !SimpleFlagArg
        name: OUTPUT_SEQUENCES
      optional: true
    - !Flag
      description: "calculate joint or marginal maximum likelihood\nancestral sequence\
        \ states (default: joint)"
      synonyms:
      - --inference
      args: !ChoiceFlagArg
        choices: !!set
          joint:
          marginal:
      optional: true
    - !Flag
      description: "fasta file of the sequence the VCF was mapped to\n(default: None)"
      synonyms:
      - --vcf-reference
      args: !SimpleFlagArg
        name: VCF_REFERENCE
      optional: true
    - !Flag
      description: "name of output VCF file which will include ancestral\nseqs (default:\
        \ None)"
      synonyms:
      - --output-vcf
      args: !SimpleFlagArg
        name: OUTPUT_VCF
      optional: true
    - !Flag
      description: "do not infer nucleotides at ambiguous (N) sites on tip\nsequences\
        \ (leave as N). (default: True)"
      synonyms:
      - --keep-ambiguous
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "infer nucleotides at ambiguous (N,W,R,..) sites on tip\nsequences\
        \ and replace with most likely state.\n(default: False)"
      synonyms:
      - --infer-ambiguous
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "do not infer nucleotides for gaps (-) on either side\nof the alignment\
        \ (default: False)\n"
      synonyms:
      - --keep-overhangs
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur ancestral [-h] --tree TREE [--alignment ALIGNMENT]\n\
      \                       [--output-node-data OUTPUT_NODE_DATA]\n            \
      \           [--output-sequences OUTPUT_SEQUENCES]\n                       [--inference\
      \ {joint,marginal}]\n                       [--vcf-reference VCF_REFERENCE]\n\
      \                       [--output-vcf OUTPUT_VCF]\n                       [--keep-ambiguous\
      \ | --infer-ambiguous]\n                       [--keep-overhangs]\n\nInfer ancestral\
      \ sequences based on a tree.\n\noptional arguments:\n  -h, --help          \
      \  show this help message and exit\n  --tree TREE, -t TREE  prebuilt Newick\
      \ (default: None)\n  --alignment ALIGNMENT, -a ALIGNMENT\n                 \
      \       alignment in fasta or VCF format (default: None)\n  --output-node-data\
      \ OUTPUT_NODE_DATA\n                        name of JSON file to save mutations\
      \ and ancestral\n                        sequences to (default: None)\n  --output-sequences\
      \ OUTPUT_SEQUENCES\n                        name of FASTA file to save ancestral\
      \ sequences to\n                        (FASTA alignments only) (default: None)\n\
      \  --inference {joint,marginal}\n                        calculate joint or\
      \ marginal maximum likelihood\n                        ancestral sequence states\
      \ (default: joint)\n  --vcf-reference VCF_REFERENCE\n                      \
      \  fasta file of the sequence the VCF was mapped to\n                      \
      \  (default: None)\n  --output-vcf OUTPUT_VCF\n                        name\
      \ of output VCF file which will include ancestral\n                        seqs\
      \ (default: None)\n  --keep-ambiguous      do not infer nucleotides at ambiguous\
      \ (N) sites on tip\n                        sequences (leave as N). (default:\
      \ True)\n  --infer-ambiguous     infer nucleotides at ambiguous (N,W,R,..) sites\
      \ on tip\n                        sequences and replace with most likely state.\n\
      \                        (default: False)\n  --keep-overhangs      do not infer\
      \ nucleotides for gaps (-) on either side\n                        of the alignment\
      \ (default: False)\n"
    generated_using: *id003
  - &id004 !Command
    command:
    - augur
    - titers
    positional: []
    named: []
    parent: *id001
    subcommands:
    - !Command
      command:
      - augur
      - titers
      - sub
      positional: []
      named:
      - !Flag
        description: "JSON file to save titer model\n"
        synonyms:
        - --output
        - -o
        args: !SimpleFlagArg
          name: OUTPUT
        optional: true
      - !Flag
        description: file with titer measurements
        synonyms:
        - --titers
        args: !RepeatFlagArg
          name: TITERS
        optional: true
      - !Flag
        description: "sequence to be used in the substitution model,\nsupplied as\
          \ fasta files"
        synonyms:
        - --alignment
        args: !RepeatFlagArg
          name: ALIGNMENT
        optional: true
      - !Flag
        description: "names of the sequences in the alignment, same order\nassumed"
        synonyms:
        - --gene-names
        args: !RepeatFlagArg
          name: GENE_NAMES
        optional: true
      - !Flag
        description: optional tree to annotate fit titer model to
        synonyms:
        - --tree
        - -t
        args: !SimpleFlagArg
          name: TREE
        optional: true
      - !Flag
        description: allow model to be empty
        synonyms:
        - --allow-empty-model
        args: !EmptyFlagArg {}
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: augur titers sub [-h] --titers TITERS [TITERS ...] --alignment\n\
        \                        ALIGNMENT [ALIGNMENT ...] --gene-names GENE_NAMES\n\
        \                        [GENE_NAMES ...] [--tree TREE] [--allow-empty-model]\n\
        \                        --output OUTPUT\n\noptional arguments:\n  -h, --help\
        \            show this help message and exit\n  --titers TITERS [TITERS ...]\n\
        \                        file with titer measurements\n  --alignment ALIGNMENT\
        \ [ALIGNMENT ...]\n                        sequence to be used in the substitution\
        \ model,\n                        supplied as fasta files\n  --gene-names\
        \ GENE_NAMES [GENE_NAMES ...]\n                        names of the sequences\
        \ in the alignment, same order\n                        assumed\n  --tree\
        \ TREE, -t TREE  optional tree to annotate fit titer model to\n  --allow-empty-model\
        \   allow model to be empty\n  --output OUTPUT, -o OUTPUT\n              \
        \          JSON file to save titer model\n"
      generated_using: *id003
    - !Command
      command:
      - augur
      - titers
      - tree
      positional: []
      named:
      - !Flag
        description: file with titer measurements
        synonyms:
        - --titers
        args: !RepeatFlagArg
          name: TITERS
        optional: true
      - !Flag
        description: tree to perform fit titer model to
        synonyms:
        - --tree
        - -t
        args: !SimpleFlagArg
          name: TREE
        optional: true
      - !Flag
        description: allow model to be empty
        synonyms:
        - --allow-empty-model
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "JSON file to save titer model\n"
        synonyms:
        - --output
        - -o
        args: !SimpleFlagArg
          name: OUTPUT
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: augur titers tree [-h] --titers TITERS [TITERS ...] --tree\
        \ TREE\n                         [--allow-empty-model] --output OUTPUT\n\n\
        optional arguments:\n  -h, --help            show this help message and exit\n\
        \  --titers TITERS [TITERS ...]\n                        file with titer measurements\n\
        \  --tree TREE, -t TREE  tree to perform fit titer model to\n  --allow-empty-model\
        \   allow model to be empty\n  --output OUTPUT, -o OUTPUT\n              \
        \          JSON file to save titer model\n"
      generated_using: *id003
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur titers [-h] {tree,sub} ...\n\nAnnotate a tree with actual\
      \ and inferred titer measurements.\n\npositional arguments:\n  {tree,sub}\n\
      \    tree      tree model\n    sub       substitution model\n\noptional arguments:\n\
      \  -h, --help  show this help message and exit\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - version
    positional:
    - !Positional
      description: ''
      position: 0
      name: augur
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
      \             ...\naugur: error: unrecognized arguments: --usage\n"
    generated_using:
    - --usage
  - !Command
    command:
    - augur
    - translate
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --reference-sequence
      args: !SimpleFlagArg
        name: REFERENCE_SEQUENCE
      optional: true
    - !Flag
      description: "prebuilt Newick -- no tree will be built if provided\n(default:\
        \ None)"
      synonyms:
      - --tree
      args: !SimpleFlagArg
        name: TREE
      optional: true
    - !Flag
      description: "JSON (fasta input) or VCF (VCF input) containing\nancestral and\
        \ tip sequences (default: None)"
      synonyms:
      - --ancestral-sequences
      args: !SimpleFlagArg
        name: ANCESTRAL_SEQUENCES
      optional: true
    - !Flag
      description: "genes to translate (list or file containing list)\n(default: None)"
      synonyms:
      - --genes
      args: !RepeatFlagArg
        name: GENES
      optional: true
    - !Flag
      description: "name of JSON file to save aa-mutations to (default:\nNone)"
      synonyms:
      - --output-node-data
      args: !SimpleFlagArg
        name: OUTPUT_NODE_DATA
      optional: true
    - !Flag
      description: "write out translated gene alignments. If a VCF-input,\na .vcf\
        \ or .vcf.gz will be output here (depending on\nfile ending). If fasta-input,\
        \ specify the file name\nlike so: 'my_alignment_%GENE.fasta', where '%GENE'\n\
        will be replaced by the name of the gene (default:\nNone)"
      synonyms:
      - --alignment-output
      args: !SimpleFlagArg
        name: ALIGNMENT_OUTPUT
      optional: true
    - !Flag
      description: "fasta file where reference sequence translations for\nVCF input\
        \ will be written (default: None)"
      synonyms:
      - --vcf-reference-output
      args: !SimpleFlagArg
        name: VCF_REFERENCE_OUTPUT
      optional: true
    - !Flag
      description: "fasta file of the sequence the VCF was mapped to\n(default: None)\n"
      synonyms:
      - --vcf-reference
      args: !SimpleFlagArg
        name: VCF_REFERENCE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur translate [-h] [--tree TREE]\n                      \
      \ [--ancestral-sequences ANCESTRAL_SEQUENCES]\n                       --reference-sequence\
      \ REFERENCE_SEQUENCE\n                       [--genes GENES [GENES ...]]\n \
      \                      [--output-node-data OUTPUT_NODE_DATA]\n             \
      \          [--alignment-output ALIGNMENT_OUTPUT]\n                       [--vcf-reference-output\
      \ VCF_REFERENCE_OUTPUT]\n                       [--vcf-reference VCF_REFERENCE]\n\
      \nTranslate gene regions from nucleotides to amino acids.\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --tree TREE    \
      \       prebuilt Newick -- no tree will be built if provided\n             \
      \           (default: None)\n  --ancestral-sequences ANCESTRAL_SEQUENCES\n \
      \                       JSON (fasta input) or VCF (VCF input) containing\n \
      \                       ancestral and tip sequences (default: None)\n  --reference-sequence\
      \ REFERENCE_SEQUENCE\n                        GenBank or GFF file containing\
      \ the annotation\n                        (default: None)\n  --genes GENES [GENES\
      \ ...]\n                        genes to translate (list or file containing\
      \ list)\n                        (default: None)\n  --output-node-data OUTPUT_NODE_DATA\n\
      \                        name of JSON file to save aa-mutations to (default:\n\
      \                        None)\n  --alignment-output ALIGNMENT_OUTPUT\n    \
      \                    write out translated gene alignments. If a VCF-input,\n\
      \                        a .vcf or .vcf.gz will be output here (depending on\n\
      \                        file ending). If fasta-input, specify the file name\n\
      \                        like so: 'my_alignment_%GENE.fasta', where '%GENE'\n\
      \                        will be replaced by the name of the gene (default:\n\
      \                        None)\n  --vcf-reference-output VCF_REFERENCE_OUTPUT\n\
      \                        fasta file where reference sequence translations for\n\
      \                        VCF input will be written (default: None)\n  --vcf-reference\
      \ VCF_REFERENCE\n                        fasta file of the sequence the VCF\
      \ was mapped to\n                        (default: None)\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - sequence-traits
    positional: []
    named:
    - !Flag
      description: "nucleotide alignment (VCF) to search for sequence\ntraits in (can\
        \ be generated from 'ancestral' using '--\noutput-vcf') (default: None)"
      synonyms:
      - --ancestral-sequences
      args: !SimpleFlagArg
        name: ANCESTRAL_SEQUENCES
      optional: true
    - !Flag
      description: "AA alignment to search for sequence traits in (can\ninclude ancestral\
        \ sequences) (default: None)"
      synonyms:
      - --translations
      args: !SimpleFlagArg
        name: TRANSLATIONS
      optional: true
    - !Flag
      description: "fasta file of the sequence the nucleotide VCF was\nmapped to (default:\
        \ None)"
      synonyms:
      - --vcf-reference
      args: !SimpleFlagArg
        name: VCF_REFERENCE
      optional: true
    - !Flag
      description: "fasta file of the sequence the translated VCF was\nmapped to (default:\
        \ None)"
      synonyms:
      - --vcf-translate-reference
      args: !SimpleFlagArg
        name: VCF_TRANSLATE_REFERENCE
      optional: true
    - !Flag
      description: "file that specifies sites defining the features in a\ntab-delimited\
        \ format: \"GENE SITE ALT DISPLAY_NAME\nFEATURE\". For nucleotide sites, GENE\
        \ can be \"nuc\" (or\ncolumn excluded entirely for all-nuc sites).\n\"DISPLAY_NAME\"\
        \ can be blank or excluded entirely.\n(default: None)"
      synonyms:
      - --features
      args: !SimpleFlagArg
        name: FEATURES
      optional: true
    - !Flag
      description: "Whether to count traits (ex: # drugs resistant to) or\nmutations\
        \ (default: traits)"
      synonyms:
      - --count
      args: !ChoiceFlagArg
        choices: !!set
          traits:
          mutations:
      optional: true
    - !Flag
      description: "How to label the counts (ex: Drug_Resistance)\n(default: # Traits)"
      synonyms:
      - --label
      args: !SimpleFlagArg
        name: LABEL
      optional: true
    - !Flag
      description: "name of JSON file to save sequence features to\n(default: None)\n"
      synonyms:
      - --output-node-data
      args: !SimpleFlagArg
        name: OUTPUT_NODE_DATA
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur sequence-traits [-h] [--ancestral-sequences ANCESTRAL_SEQUENCES]\n\
      \                             [--translations TRANSLATIONS]\n              \
      \               [--vcf-reference VCF_REFERENCE]\n                          \
      \   [--vcf-translate-reference VCF_TRANSLATE_REFERENCE]\n                  \
      \           [--features FEATURES]\n                             [--count {traits,mutations}]\
      \ [--label LABEL]\n                             [--output-node-data OUTPUT_NODE_DATA]\n\
      \nAnnotate sequences based on amino-acid or nucleotide signatures.\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --ancestral-sequences\
      \ ANCESTRAL_SEQUENCES\n                        nucleotide alignment (VCF) to\
      \ search for sequence\n                        traits in (can be generated from\
      \ 'ancestral' using '--\n                        output-vcf') (default: None)\n\
      \  --translations TRANSLATIONS\n                        AA alignment to search\
      \ for sequence traits in (can\n                        include ancestral sequences)\
      \ (default: None)\n  --vcf-reference VCF_REFERENCE\n                       \
      \ fasta file of the sequence the nucleotide VCF was\n                      \
      \  mapped to (default: None)\n  --vcf-translate-reference VCF_TRANSLATE_REFERENCE\n\
      \                        fasta file of the sequence the translated VCF was\n\
      \                        mapped to (default: None)\n  --features FEATURES  \
      \ file that specifies sites defining the features in a\n                   \
      \     tab-delimited format: \"GENE SITE ALT DISPLAY_NAME\n                 \
      \       FEATURE\". For nucleotide sites, GENE can be \"nuc\" (or\n         \
      \               column excluded entirely for all-nuc sites).\n             \
      \           \"DISPLAY_NAME\" can be blank or excluded entirely.\n          \
      \              (default: None)\n  --count {traits,mutations}\n             \
      \           Whether to count traits (ex: # drugs resistant to) or\n        \
      \                mutations (default: traits)\n  --label LABEL         How to\
      \ label the counts (ex: Drug_Resistance)\n                        (default:\
      \ # Traits)\n  --output-node-data OUTPUT_NODE_DATA\n                       \
      \ name of JSON file to save sequence features to\n                        (default:\
      \ None)\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - signatures.
    positional:
    - !Positional
      description: ''
      position: 0
      name: augur
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
      \             ...\naugur: error: invalid choice: 'signatures.' (choose from\
      \ 'parse', 'filter', 'mask', 'align', 'tree', 'refine', 'ancestral', 'translate',\
      \ 'reconstruct-sequences', 'clades', 'traits', 'sequence-traits', 'lbi', 'distance',\
      \ 'titers', 'frequencies', 'export', 'validate', 'version', 'import')\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - tree
    positional: []
    named:
    - !Flag
      description: 'alignment in fasta or VCF format (default: None)'
      synonyms:
      - --alignment
      - -a
      args: !SimpleFlagArg
        name: ALIGNMENT
      optional: true
    - !Flag
      description: 'tree builder to use (default: iqtree)'
      synonyms:
      - --method
      args: !ChoiceFlagArg
        choices: !!set
          fasttree:
          iqtree:
          raxml:
      optional: true
    - !Flag
      description: 'file name to write tree to (default: None)'
      synonyms:
      - --output
      - -o
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "{HKY,GTR,HKY+G,GTR+G,GTR+R10}\nsubstitution model to use. Specify\
        \ 'none' to run\nModelTest. Currently, only available for IQTREE.\n(default:\
        \ GTR)"
      synonyms:
      - --substitution-model
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "number of threads to use; specifying the value 'auto'\nwill cause\
        \ the number of available CPU cores on your\nsystem, if determinable, to be\
        \ used (default: 1)"
      synonyms:
      - --nthreads
      args: !SimpleFlagArg
        name: NTHREADS
      optional: true
    - !Flag
      description: "fasta file of the sequence the VCF was mapped to\n(default: None)"
      synonyms:
      - --vcf-reference
      args: !SimpleFlagArg
        name: VCF_REFERENCE
      optional: true
    - !Flag
      description: "file name of one-based sites to exclude for raw tree\nbuilding\
        \ (BED format in .bed files, DRM format in tab-\ndelimited files, or one position\
        \ per line) (default:\nNone)"
      synonyms:
      - --exclude-sites
      args: !SimpleFlagArg
        name: EXCLUDE_SITES
      optional: true
    - !Flag
      description: "extra arguments to be passed directly to the\nexecutable of the\
        \ requested tree method (e.g., --tree-\nbuilder-args=\"-czb\") (default: )\n"
      synonyms:
      - --tree-builder-args
      args: !SimpleFlagArg
        name: TREE_BUILDER_ARGS
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur tree [-h] --alignment ALIGNMENT\n                  [--method\
      \ {fasttree,raxml,iqtree}] [--output OUTPUT]\n                  [--substitution-model\
      \ {HKY,GTR,HKY+G,GTR+G,GTR+R10}]\n                  [--nthreads NTHREADS] [--vcf-reference\
      \ VCF_REFERENCE]\n                  [--exclude-sites EXCLUDE_SITES]\n      \
      \            [--tree-builder-args TREE_BUILDER_ARGS]\n\nBuild a tree using a\
      \ variety of methods.\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --alignment ALIGNMENT, -a ALIGNMENT\n           \
      \             alignment in fasta or VCF format (default: None)\n  --method {fasttree,raxml,iqtree}\n\
      \                        tree builder to use (default: iqtree)\n  --output OUTPUT,\
      \ -o OUTPUT\n                        file name to write tree to (default: None)\n\
      \  --substitution-model {HKY,GTR,HKY+G,GTR+G,GTR+R10}\n                    \
      \    substitution model to use. Specify 'none' to run\n                    \
      \    ModelTest. Currently, only available for IQTREE.\n                    \
      \    (default: GTR)\n  --nthreads NTHREADS   number of threads to use; specifying\
      \ the value 'auto'\n                        will cause the number of available\
      \ CPU cores on your\n                        system, if determinable, to be\
      \ used (default: 1)\n  --vcf-reference VCF_REFERENCE\n                     \
      \   fasta file of the sequence the VCF was mapped to\n                     \
      \   (default: None)\n  --exclude-sites EXCLUDE_SITES\n                     \
      \   file name of one-based sites to exclude for raw tree\n                 \
      \       building (BED format in .bed files, DRM format in tab-\n           \
      \             delimited files, or one position per line) (default:\n       \
      \                 None)\n  --tree-builder-args TREE_BUILDER_ARGS\n         \
      \               extra arguments to be passed directly to the\n             \
      \           executable of the requested tree method (e.g., --tree-\n       \
      \                 builder-args=\"-czb\") (default: )\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - refine
    positional: []
    named:
    - !Flag
      description: 'alignment in fasta or VCF format (default: None)'
      synonyms:
      - --alignment
      - -a
      args: !SimpleFlagArg
        name: ALIGNMENT
      optional: true
    - !Flag
      description: 'prebuilt Newick (default: None)'
      synonyms:
      - --tree
      - -t
      args: !SimpleFlagArg
        name: TREE
      optional: true
    - !Flag
      description: "tsv/csv table with meta data for sequences (default:\nNone)"
      synonyms:
      - --metadata
      args: !SimpleFlagArg
        name: METADATA
      optional: true
    - !Flag
      description: 'file name to write tree to (default: None)'
      synonyms:
      - --output-tree
      args: !SimpleFlagArg
        name: OUTPUT_TREE
      optional: true
    - !Flag
      description: "file name to write branch lengths as node data\n(default: None)"
      synonyms:
      - --output-node-data
      args: !SimpleFlagArg
        name: OUTPUT_NODE_DATA
      optional: true
    - !Flag
      description: 'produce timetree using treetime (default: False)'
      synonyms:
      - --timetree
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "coalescent time scale in units of inverse clock rate\n(float),\
        \ optimize as scalar ('opt'), or skyline\n('skyline') (default: None)"
      synonyms:
      - --coalescent
      args: !SimpleFlagArg
        name: COALESCENT
      optional: true
    - !Flag
      description: "number of generations per year, relevant for skyline\noutput('skyline')\
        \ (default: 50)"
      synonyms:
      - --gen-per-year
      args: !SimpleFlagArg
        name: GEN_PER_YEAR
      optional: true
    - !Flag
      description: 'fixed clock rate (default: None)'
      synonyms:
      - --clock-rate
      args: !SimpleFlagArg
        name: CLOCK_RATE
      optional: true
    - !Flag
      description: "standard deviation of the fixed clock_rate estimate\n(default:\
        \ None)"
      synonyms:
      - --clock-std-dev
      args: !SimpleFlagArg
        name: CLOCK_STD_DEV
      optional: true
    - !Flag
      description: "rooting mechanism ('best', least-squares', 'min_dev',\n'oldest')\
        \ OR node to root by OR two nodes indicating a\nmonophyletic group to root\
        \ by. Run treetime -h for\ndefinitions of rooting methods. (default: best)"
      synonyms:
      - --root
      args: !RepeatFlagArg
        name: ROOT
      optional: true
    - !Flag
      description: "do not reroot the tree; use it as-is. Overrides\nanything specified\
        \ by --root. (default: False)"
      synonyms:
      - --keep-root
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Account for covariation when estimating rates and/or\nrerooting.\
        \ Use --no-covariance to turn off. (default:\nTrue)"
      synonyms:
      - --covariance
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --no-covariance
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Do not attempt to resolve polytomies (default: False)'
      synonyms:
      - --keep-polytomies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "precision used by TreeTime to determine the number of\ngrid points\
        \ that are used for the evaluation of the\nbranch length interpolation objects.\
        \ Values range from\n0 (rough) to 3 (ultra fine) and default to 'auto'.\n\
        (default: None)"
      synonyms:
      - --precision
      args: !ChoiceFlagArg
        choices: !!set
          '3':
          '1':
          '2':
          '0':
      optional: true
    - !Flag
      description: 'date format (default: %Y-%m-%d)'
      synonyms:
      - --date-format
      args: !SimpleFlagArg
        name: DATE_FORMAT
      optional: true
    - !Flag
      description: "calculate confidence intervals for node dates\n(default: False)"
      synonyms:
      - --date-confidence
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "assign internal nodes to their marginally most likely\ndates,\
        \ not jointly most likely (default: joint)"
      synonyms:
      - --date-inference
      args: !ChoiceFlagArg
        choices: !!set
          joint:
          marginal:
      optional: true
    - !Flag
      description: 'branch length mode of treetime to use (default: auto)'
      synonyms:
      - --branch-length-inference
      args: !ChoiceFlagArg
        choices: !!set
          joint:
          marginal:
          auto:
          input:
      optional: true
    - !Flag
      description: "clock-filter: remove tips that deviate more than n_iqd\ninterquartile\
        \ ranges from the root-to-tip vs time\nregression (default: None)"
      synonyms:
      - --clock-filter-iqd
      args: !SimpleFlagArg
        name: CLOCK_FILTER_IQD
      optional: true
    - !Flag
      description: "fasta file of the sequence the VCF was mapped to\n(default: None)"
      synonyms:
      - --vcf-reference
      args: !SimpleFlagArg
        name: VCF_REFERENCE
      optional: true
    - !Flag
      description: "specify min or max & min prediction bounds for samples\nwith XX\
        \ in year (default: None)"
      synonyms:
      - --year-bounds
      args: !RepeatFlagArg
        name: YEAR_BOUNDS
      optional: true
    - !Flag
      description: "Units in which sequence divergences is exported.\n(default: mutations-per-site)"
      synonyms:
      - --divergence-units
      args: !ChoiceFlagArg
        choices: !!set
          mutations:
          mutations-per-site:
      optional: true
    - !Flag
      description: 'seed for random number generation (default: None)'
      synonyms:
      - --seed
      args: !SimpleFlagArg
        name: SEED
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur refine [-h] [--alignment ALIGNMENT] --tree TREE\n   \
      \                 [--metadata METADATA] [--output-tree OUTPUT_TREE]\n      \
      \              [--output-node-data OUTPUT_NODE_DATA] [--timetree]\n        \
      \            [--coalescent COALESCENT] [--gen-per-year GEN_PER_YEAR]\n     \
      \               [--clock-rate CLOCK_RATE] [--clock-std-dev CLOCK_STD_DEV]\n\
      \                    [--root ROOT [ROOT ...]] [--keep-root] [--covariance]\n\
      \                    [--no-covariance] [--keep-polytomies]\n               \
      \     [--precision {0,1,2,3}] [--date-format DATE_FORMAT]\n                \
      \    [--date-confidence] [--date-inference {joint,marginal}]\n             \
      \       [--branch-length-inference {auto,joint,marginal,input}]\n          \
      \          [--clock-filter-iqd CLOCK_FILTER_IQD]\n                    [--vcf-reference\
      \ VCF_REFERENCE]\n                    [--year-bounds YEAR_BOUNDS [YEAR_BOUNDS\
      \ ...]]\n                    [--divergence-units {mutations,mutations-per-site}]\n\
      \                    [--seed SEED]\n\nRefine an initial tree using sequence\
      \ metadata.\n\noptional arguments:\n  -h, --help            show this help message\
      \ and exit\n  --alignment ALIGNMENT, -a ALIGNMENT\n                        alignment\
      \ in fasta or VCF format (default: None)\n  --tree TREE, -t TREE  prebuilt Newick\
      \ (default: None)\n  --metadata METADATA   tsv/csv table with meta data for\
      \ sequences (default:\n                        None)\n  --output-tree OUTPUT_TREE\n\
      \                        file name to write tree to (default: None)\n  --output-node-data\
      \ OUTPUT_NODE_DATA\n                        file name to write branch lengths\
      \ as node data\n                        (default: None)\n  --timetree      \
      \      produce timetree using treetime (default: False)\n  --coalescent COALESCENT\n\
      \                        coalescent time scale in units of inverse clock rate\n\
      \                        (float), optimize as scalar ('opt'), or skyline\n \
      \                       ('skyline') (default: None)\n  --gen-per-year GEN_PER_YEAR\n\
      \                        number of generations per year, relevant for skyline\n\
      \                        output('skyline') (default: 50)\n  --clock-rate CLOCK_RATE\n\
      \                        fixed clock rate (default: None)\n  --clock-std-dev\
      \ CLOCK_STD_DEV\n                        standard deviation of the fixed clock_rate\
      \ estimate\n                        (default: None)\n  --root ROOT [ROOT ...]\n\
      \                        rooting mechanism ('best', least-squares', 'min_dev',\n\
      \                        'oldest') OR node to root by OR two nodes indicating\
      \ a\n                        monophyletic group to root by. Run treetime -h\
      \ for\n                        definitions of rooting methods. (default: best)\n\
      \  --keep-root           do not reroot the tree; use it as-is. Overrides\n \
      \                       anything specified by --root. (default: False)\n  --covariance\
      \          Account for covariation when estimating rates and/or\n          \
      \              rerooting. Use --no-covariance to turn off. (default:\n     \
      \                   True)\n  --no-covariance\n  --keep-polytomies     Do not\
      \ attempt to resolve polytomies (default: False)\n  --precision {0,1,2,3}\n\
      \                        precision used by TreeTime to determine the number\
      \ of\n                        grid points that are used for the evaluation of\
      \ the\n                        branch length interpolation objects. Values range\
      \ from\n                        0 (rough) to 3 (ultra fine) and default to 'auto'.\n\
      \                        (default: None)\n  --date-format DATE_FORMAT\n    \
      \                    date format (default: %Y-%m-%d)\n  --date-confidence  \
      \   calculate confidence intervals for node dates\n                        (default:\
      \ False)\n  --date-inference {joint,marginal}\n                        assign\
      \ internal nodes to their marginally most likely\n                        dates,\
      \ not jointly most likely (default: joint)\n  --branch-length-inference {auto,joint,marginal,input}\n\
      \                        branch length mode of treetime to use (default: auto)\n\
      \  --clock-filter-iqd CLOCK_FILTER_IQD\n                        clock-filter:\
      \ remove tips that deviate more than n_iqd\n                        interquartile\
      \ ranges from the root-to-tip vs time\n                        regression (default:\
      \ None)\n  --vcf-reference VCF_REFERENCE\n                        fasta file\
      \ of the sequence the VCF was mapped to\n                        (default: None)\n\
      \  --year-bounds YEAR_BOUNDS [YEAR_BOUNDS ...]\n                        specify\
      \ min or max & min prediction bounds for samples\n                        with\
      \ XX in year (default: None)\n  --divergence-units {mutations,mutations-per-site}\n\
      \                        Units in which sequence divergences is exported.\n\
      \                        (default: mutations-per-site)\n  --seed SEED      \
      \     seed for random number generation (default: None)\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - acids.
    positional:
    - !Positional
      description: ''
      position: 0
      name: augur
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
      \             ...\naugur: error: invalid choice: 'acids.' (choose from 'parse',\
      \ 'filter', 'mask', 'align', 'tree', 'refine', 'ancestral', 'translate', 'reconstruct-sequences',\
      \ 'clades', 'traits', 'sequence-traits', 'lbi', 'distance', 'titers', 'frequencies',\
      \ 'export', 'validate', 'version', 'import')\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - parameters.
    positional:
    - !Positional
      description: ''
      position: 0
      name: augur
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
      \             ...\naugur: error: invalid choice: 'parameters.' (choose from\
      \ 'parse', 'filter', 'mask', 'align', 'tree', 'refine', 'ancestral', 'translate',\
      \ 'reconstruct-sequences', 'clades', 'traits', 'sequence-traits', 'lbi', 'distance',\
      \ 'titers', 'frequencies', 'export', 'validate', 'version', 'import')\n"
    generated_using: *id003
  - &id005 !Command
    command:
    - augur
    - export
    positional: []
    named: []
    parent: *id001
    subcommands:
    - !Command
      command:
      - augur
      - export
      - v2
      positional: []
      named:
      - !Flag
        description: Phylogenetic tree, usually output from `augur refine`
        synonyms:
        - --tree
        - -t
        args: !SimpleFlagArg
          name: newick
        optional: true
      - !Flag
        description: JSON files containing metadata for nodes in the tree
        synonyms:
        - --node-data
        args: !RepeatFlagArg
          name: JSON
        optional: true
      - !Flag
        description: Ouput file (typically for visualisation in auspice)
        synonyms:
        - --output
        args: !SimpleFlagArg
          name: JSON
        optional: true
      - !Flag
        description: Auspice configuration file
        synonyms:
        - --auspice-config
        args: !SimpleFlagArg
          name: JSON
        optional: true
      - !Flag
        description: Title to be displayed by auspice
        synonyms:
        - --title
        args: !SimpleFlagArg
          name: title
        optional: true
      - !Flag
        description: "Analysis maintained by, in format 'Name <URL>' 'Name2\n<URL>',\
          \ ..."
        synonyms:
        - --maintainers
        args: !RepeatFlagArg
          name: name
        optional: true
      - !Flag
        description: Build URL/repository to be displayed by Auspice
        synonyms:
        - --build-url
        args: !SimpleFlagArg
          name: url
        optional: true
      - !Flag
        description: "Markdown file with description of build and/or\nacknowledgements\
          \ to be displayed by Auspice"
        synonyms:
        - --description
        args: !SimpleFlagArg
          name: description.md
        optional: true
      - !Flag
        description: Geographic traits to be displayed on map
        synonyms:
        - --geo-resolutions
        args: !RepeatFlagArg
          name: trait
        optional: true
      - !Flag
        description: Metadata columns to include as coloring options
        synonyms:
        - --color-by-metadata
        args: !RepeatFlagArg
          name: trait
        optional: true
      - !Flag
        description: "Restrict panel display in auspice. Options are tree,\nmap, entropy,\
          \ frequencies. Ignore this option to\ndisplay all available panels."
        synonyms:
        - --panels
        args: !RepeatFlagArg
          name: panels
        optional: true
      - !Flag
        description: Additional metadata for strains in the tree
        synonyms:
        - --metadata
        args: !SimpleFlagArg
          name: TSV
        optional: true
      - !Flag
        description: Custom color definitions
        synonyms:
        - --colors
        args: !SimpleFlagArg
          name: TSV
        optional: true
      - !Flag
        description: "Latitudes and longitudes for geography traits\n(overrides built\
          \ in mappings)"
        synonyms:
        - --lat-longs
        args: !SimpleFlagArg
          name: TSV
        optional: true
      - !Flag
        description: export JSONs without indentation or line returns
        synonyms:
        - --minify-json
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Export an additional JSON containing the root sequence\n(reference\
          \ sequence for vcf) used to identify\nmutations. The filename will follow\
          \ the pattern of\n<OUTPUT>_root-sequence.json for a main auspice JSON of\n\
          <OUTPUT>.json\n"
        synonyms:
        - --include-root-sequence
        args: !EmptyFlagArg {}
        optional: true
      parent: *id005
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: augur export v2 [-h] --tree newick --node-data JSON [JSON\
        \ ...] --output\n                       JSON [--auspice-config JSON] [--title\
        \ title]\n                       [--maintainers name [name ...]] [--build-url\
        \ url]\n                       [--description description.md]\n          \
        \             [--geo-resolutions trait [trait ...]]\n                    \
        \   [--color-by-metadata trait [trait ...]]\n                       [--panels\
        \ panels [panels ...]] [--metadata TSV]\n                       [--colors\
        \ TSV] [--lat-longs TSV] [--minify-json]\n                       [--include-root-sequence]\n\
        \noptional arguments:\n  -h, --help            show this help message and\
        \ exit\n\nREQUIRED:\n  --tree newick, -t newick\n                        Phylogenetic\
        \ tree, usually output from `augur refine`\n  --node-data JSON [JSON ...]\n\
        \                        JSON files containing metadata for nodes in the tree\n\
        \  --output JSON         Ouput file (typically for visualisation in auspice)\n\
        \nDISPLAY CONFIGURATION:\n  These control the display settings for auspice.\
        \ You can supply a config\n  JSON (which has all available options) or command\
        \ line arguments (which\n  are more limited but great to get started). Supplying\
        \ both is fine too,\n  command line args will overrule what is set in the\
        \ config file!\n\n  --auspice-config JSON\n                        Auspice\
        \ configuration file\n  --title title         Title to be displayed by auspice\n\
        \  --maintainers name [name ...]\n                        Analysis maintained\
        \ by, in format 'Name <URL>' 'Name2\n                        <URL>', ...\n\
        \  --build-url url       Build URL/repository to be displayed by Auspice\n\
        \  --description description.md\n                        Markdown file with\
        \ description of build and/or\n                        acknowledgements to\
        \ be displayed by Auspice\n  --geo-resolutions trait [trait ...]\n       \
        \                 Geographic traits to be displayed on map\n  --color-by-metadata\
        \ trait [trait ...]\n                        Metadata columns to include as\
        \ coloring options\n  --panels panels [panels ...]\n                     \
        \   Restrict panel display in auspice. Options are tree,\n               \
        \         map, entropy, frequencies. Ignore this option to\n             \
        \           display all available panels.\n\nOPTIONAL INPUT FILES:\n  --metadata\
        \ TSV        Additional metadata for strains in the tree\n  --colors TSV \
        \         Custom color definitions\n  --lat-longs TSV       Latitudes and\
        \ longitudes for geography traits\n                        (overrides built\
        \ in mappings)\n\nOPTIONAL SETTINGS:\n  --minify-json         export JSONs\
        \ without indentation or line returns\n  --include-root-sequence\n       \
        \                 Export an additional JSON containing the root sequence\n\
        \                        (reference sequence for vcf) used to identify\n \
        \                       mutations. The filename will follow the pattern of\n\
        \                        <OUTPUT>_root-sequence.json for a main auspice JSON\
        \ of\n                        <OUTPUT>.json\n"
      generated_using: *id003
    - !Command
      command:
      - augur
      - export
      - v1
      positional: []
      named:
      - !Flag
        description: tree to perform trait reconstruction on
        synonyms:
        - --tree
        - -t
        args: !SimpleFlagArg
          name: TREE
        optional: true
      - !Flag
        description: tsv file with sequence meta data
        synonyms:
        - --metadata
        args: !SimpleFlagArg
          name: METADATA
        optional: true
      - !Flag
        description: JSON files with meta data for each node
        synonyms:
        - --node-data
        args: !RepeatFlagArg
          name: NODE_DATA
        optional: true
      - !Flag
        description: "JSON file name that is passed on to auspice (e.g.,\nzika_tree.json)."
        synonyms:
        - --output-tree
        args: !SimpleFlagArg
          name: OUTPUT_TREE
        optional: true
      - !Flag
        description: "JSON file name that is passed on to auspice (e.g.,\nzika_meta.json)."
        synonyms:
        - --output-meta
        args: !SimpleFlagArg
          name: OUTPUT_META
        optional: true
      - !Flag
        description: file with auspice configuration
        synonyms:
        - --auspice-config
        args: !SimpleFlagArg
          name: AUSPICE_CONFIG
        optional: true
      - !Flag
        description: file with color definitions
        synonyms:
        - --colors
        args: !SimpleFlagArg
          name: COLORS
        optional: true
      - !Flag
        description: "file latitudes and longitudes, overrides built in\nmappings"
        synonyms:
        - --lat-longs
        args: !SimpleFlagArg
          name: LAT_LONGS
        optional: true
      - !Flag
        description: Tree name (needed for tangle tree functionality)
        synonyms:
        - --tree-name
        args: !SimpleFlagArg
          name: TREE_NAME
        optional: true
      - !Flag
        description: export JSONs without indentation or line returns
        synonyms:
        - --minify-json
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "JSON file name that is passed on to auspice (e.g.,\nzika_seq.json)."
        synonyms:
        - --output-sequence
        args: !SimpleFlagArg
          name: OUTPUT_SEQUENCE
        optional: true
      - !Flag
        description: reference sequence for export to browser, only vcf
        synonyms:
        - --reference
        args: !SimpleFlagArg
          name: REFERENCE
        optional: true
      - !Flag
        description: "reference translations for export to browser, only vcf\n"
        synonyms:
        - --reference-translations
        args: !SimpleFlagArg
          name: REFERENCE_TRANSLATIONS
        optional: true
      parent: *id005
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: augur export v1 [-h] --tree TREE --metadata METADATA --node-data\n\
        \                       NODE_DATA [NODE_DATA ...] [--output-tree OUTPUT_TREE]\n\
        \                       [--output-meta OUTPUT_META]\n                    \
        \   [--auspice-config AUSPICE_CONFIG] [--colors COLORS]\n                \
        \       [--lat-longs LAT_LONGS] [--tree-name TREE_NAME]\n                \
        \       [--minify-json] [--output-sequence OUTPUT_SEQUENCE]\n            \
        \           [--reference REFERENCE]\n                       [--reference-translations\
        \ REFERENCE_TRANSLATIONS]\n\noptional arguments:\n  -h, --help           \
        \ show this help message and exit\n\nREQUIRED:\n  --tree TREE, -t TREE  tree\
        \ to perform trait reconstruction on\n  --metadata METADATA   tsv file with\
        \ sequence meta data\n  --node-data NODE_DATA [NODE_DATA ...]\n          \
        \              JSON files with meta data for each node\n  --output-tree OUTPUT_TREE\n\
        \                        JSON file name that is passed on to auspice (e.g.,\n\
        \                        zika_tree.json).\n  --output-meta OUTPUT_META\n \
        \                       JSON file name that is passed on to auspice (e.g.,\n\
        \                        zika_meta.json).\n  --auspice-config AUSPICE_CONFIG\n\
        \                        file with auspice configuration\n\nOPTIONS:\n  --colors\
        \ COLORS       file with color definitions\n  --lat-longs LAT_LONGS\n    \
        \                    file latitudes and longitudes, overrides built in\n \
        \                       mappings\n  --tree-name TREE_NAME\n              \
        \          Tree name (needed for tangle tree functionality)\n  --minify-json\
        \         export JSONs without indentation or line returns\n  --output-sequence\
        \ OUTPUT_SEQUENCE\n                        JSON file name that is passed on\
        \ to auspice (e.g.,\n                        zika_seq.json).\n  --reference\
        \ REFERENCE\n                        reference sequence for export to browser,\
        \ only vcf\n  --reference-translations REFERENCE_TRANSLATIONS\n          \
        \              reference translations for export to browser, only vcf\n"
      generated_using: *id003
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur export [-h]\n                    Augur export now needs\
      \ you to define the JSON version you\n                    want, e.g. `augur\
      \ export v2`. ...\n\nExport JSON files suitable for visualization with auspice.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \nJSON SCHEMA:\n  Augur export now needs you to define the JSON version you\
      \ want, e.g. `augur export v2`.\n    v2                  Export version 2 JSON\
      \ schema\n    v1                  Export version 1 JSON schema (separate meta\
      \ and tree\n                        JSONs)\n"
    generated_using: *id003
  - !Command
    command:
    - augur
    - parse
    positional: []
    named:
    - !Flag
      description: 'sequences in fasta or VCF format (default: None)'
      synonyms:
      - --sequences
      - -s
      args: !SimpleFlagArg
        name: SEQUENCES
      optional: true
    - !Flag
      description: 'output sequences file (default: None)'
      synonyms:
      - --output-sequences
      args: !SimpleFlagArg
        name: OUTPUT_SEQUENCES
      optional: true
    - !Flag
      description: 'output metadata file (default: None)'
      synonyms:
      - --output-metadata
      args: !SimpleFlagArg
        name: OUTPUT_METADATA
      optional: true
    - !Flag
      description: 'fields in fasta header (default: None)'
      synonyms:
      - --fields
      args: !RepeatFlagArg
        name: FIELDS
      optional: true
    - !Flag
      description: "apply string prettifying operations (underscores to\nspaces, capitalization,\
        \ etc) to specified metadata\nfields (default: None)"
      synonyms:
      - --prettify-fields
      args: !RepeatFlagArg
        name: PRETTIFY_FIELDS
      optional: true
    - !Flag
      description: 'separator of fasta header (default: |)'
      synonyms:
      - --separator
      args: !SimpleFlagArg
        name: SEPARATOR
      optional: true
    - !Flag
      description: "attempt to parse non-standard dates and output them in\nstandard\
        \ YYYY-MM-DD format (default: None)\n"
      synonyms:
      - --fix-dates
      args: !ChoiceFlagArg
        choices: !!set
          dayfirst:
          monthfirst:
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur parse [-h] --sequences SEQUENCES\n                  \
      \ [--output-sequences OUTPUT_SEQUENCES]\n                   [--output-metadata\
      \ OUTPUT_METADATA]\n                   [--fields FIELDS [FIELDS ...]]\n    \
      \               [--prettify-fields PRETTIFY_FIELDS [PRETTIFY_FIELDS ...]]\n\
      \                   [--separator SEPARATOR] [--fix-dates {dayfirst,monthfirst}]\n\
      \nParse delimited fields from FASTA sequence names into a TSV and FASTA file.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  --sequences SEQUENCES, -s SEQUENCES\n                        sequences in\
      \ fasta or VCF format (default: None)\n  --output-sequences OUTPUT_SEQUENCES\n\
      \                        output sequences file (default: None)\n  --output-metadata\
      \ OUTPUT_METADATA\n                        output metadata file (default: None)\n\
      \  --fields FIELDS [FIELDS ...]\n                        fields in fasta header\
      \ (default: None)\n  --prettify-fields PRETTIFY_FIELDS [PRETTIFY_FIELDS ...]\n\
      \                        apply string prettifying operations (underscores to\n\
      \                        spaces, capitalization, etc) to specified metadata\n\
      \                        fields (default: None)\n  --separator SEPARATOR\n \
      \                       separator of fasta header (default: |)\n  --fix-dates\
      \ {dayfirst,monthfirst}\n                        attempt to parse non-standard\
      \ dates and output them in\n                        standard YYYY-MM-DD format\
      \ (default: None)\n"
    generated_using: *id003
  - *id006
  - !Command
    command:
    - augur
    - traits
    positional: []
    named:
    - !Flag
      description: '[--confidence]'
      synonyms:
      - --columns
      args: !RepeatFlagArg
        name: COLUMNS
      optional: true
    - !Flag
      description: "tree to perform trait reconstruction on (default:\nNone)"
      synonyms:
      - --tree
      - -t
      args: !SimpleFlagArg
        name: TREE
      optional: true
    - !Flag
      description: 'tsv/csv table with meta data (default: None)'
      synonyms:
      - --metadata
      args: !SimpleFlagArg
        name: METADATA
      optional: true
    - !Flag
      description: "tsv/csv table with equilibrium probabilities of\ndiscrete states\
        \ (default: None)"
      synonyms:
      - --weights
      args: !SimpleFlagArg
        name: WEIGHTS
      optional: true
    - !Flag
      description: "record the distribution of subleading mugration states\n(default:\
        \ False)"
      synonyms:
      - --confidence
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "a rough estimate of how many more events would have\nbeen observed\
        \ if sequences represented an even sample.\nThis should be roughly the (1-sum_i\
        \ p_i^2)/(1-sum_i\nt_i^2), where p_i are the equilibrium frequencies and\n\
        t_i are apparent ones.(or rather the time spent in a\nparticular state on\
        \ the tree) (default: None)"
      synonyms:
      - --sampling-bias-correction
      args: !SimpleFlagArg
        name: SAMPLING_BIAS_CORRECTION
      optional: true
    - !Flag
      description: "name of JSON file to save trait inferences to\n(default: None)"
      synonyms:
      - --output-node-data
      args: !SimpleFlagArg
        name: OUTPUT_NODE_DATA
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: augur traits [-h] --tree TREE --metadata METADATA [--weights\
      \ WEIGHTS]\n                    --columns COLUMNS [COLUMNS ...] [--confidence]\n\
      \                    [--sampling-bias-correction SAMPLING_BIAS_CORRECTION]\n\
      \                    [--output-node-data OUTPUT_NODE_DATA]\n\nInfer ancestral\
      \ traits based on a tree.\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  --tree TREE, -t TREE  tree to perform trait\
      \ reconstruction on (default:\n                        None)\n  --metadata METADATA\
      \   tsv/csv table with meta data (default: None)\n  --weights WEIGHTS     tsv/csv\
      \ table with equilibrium probabilities of\n                        discrete\
      \ states (default: None)\n  --columns COLUMNS [COLUMNS ...]\n              \
      \          metadata fields to perform discrete reconstruction on\n         \
      \               (default: None)\n  --confidence          record the distribution\
      \ of subleading mugration states\n                        (default: False)\n\
      \  --sampling-bias-correction SAMPLING_BIAS_CORRECTION\n                   \
      \     a rough estimate of how many more events would have\n                \
      \        been observed if sequences represented an even sample.\n          \
      \              This should be roughly the (1-sum_i p_i^2)/(1-sum_i\n       \
      \                 t_i^2), where p_i are the equilibrium frequencies and\n  \
      \                      t_i are apparent ones.(or rather the time spent in a\n\
      \                        particular state on the tree) (default: None)\n  --output-node-data\
      \ OUTPUT_NODE_DATA\n                        name of JSON file to save trait\
      \ inferences to\n                        (default: None)\n\nNote that missing\
      \ data must be represented by a `?` character. Missing data\nwill currently\
      \ be inferred.\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: augur [-h]\n             {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
    \             ...\n\nAugur: A bioinformatics toolkit for phylogenetic analysis.\n\
    \npositional arguments:\n  {parse,filter,mask,align,tree,refine,ancestral,translate,reconstruct-sequences,clades,traits,sequence-traits,lbi,distance,titers,frequencies,export,validate,version,import}\n\
    \    parse               Parse delimited fields from FASTA sequence names into\n\
    \                        a TSV and FASTA file.\n    filter              Filter\
    \ and subsample a sequence set.\n    mask                Mask specified sites\
    \ from a VCF or FASTA file.\n    align               Align multiple sequences\
    \ from FASTA.\n    tree                Build a tree using a variety of methods.\n\
    \    refine              Refine an initial tree using sequence metadata.\n   \
    \ ancestral           Infer ancestral sequences based on a tree.\n    translate\
    \           Translate gene regions from nucleotides to amino\n               \
    \         acids.\n    reconstruct-sequences\n                        Reconstruct\
    \ alignments from mutations inferred on the\n                        tree\n  \
    \  clades              Assign clades to nodes in a tree based on amino-acid\n\
    \                        or nucleotide signatures.\n    traits              Infer\
    \ ancestral traits based on a tree.\n    sequence-traits     Annotate sequences\
    \ based on amino-acid or nucleotide\n                        signatures.\n   \
    \ lbi                 Calculate LBI for a given tree and one or more sets of\n\
    \                        parameters.\n    distance            Calculate the distance\
    \ between sequences across entire\n                        genes or at a predefined\
    \ subset of sites.\n    titers              Annotate a tree with actual and inferred\
    \ titer\n                        measurements.\n    frequencies         infer\
    \ frequencies of mutations or clades\n    export              Export JSON files\
    \ suitable for visualization with\n                        auspice.\n    validate\
    \            Validate files related to augur consumption or export.\n    version\
    \             Print the version of augur.\n    import              Import analyses\
    \ into augur pipeline from other systems\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n"
  generated_using:
  - -h
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: augur align [-h] --sequences FASTA [FASTA ...] [--output OUTPUT]\n\
  \                   [--nthreads NTHREADS] [--method {mafft}]\n                 \
  \  [--reference-name NAME] [--reference-sequence PATH]\n                   [--remove-reference]\
  \ [--fill-gaps]\n                   [--existing-alignment FASTA] [--debug]\n\nAlign\
  \ multiple sequences from FASTA.\n\noptional arguments:\n  -h, --help          \
  \  show this help message and exit\n  --sequences FASTA [FASTA ...], -s FASTA [FASTA\
  \ ...]\n                        sequences to align (default: None)\n  --output OUTPUT,\
  \ -o OUTPUT\n                        output file (default: alignment.fasta)\n  --nthreads\
  \ NTHREADS   number of threads to use; specifying the value 'auto'\n           \
  \             will cause the number of available CPU cores on your\n           \
  \             system, if determinable, to be used (default: 1)\n  --method {mafft}\
  \      alignment program to use (default: mafft)\n  --reference-name NAME\n    \
  \                    strip insertions relative to reference sequence; use\n    \
  \                    if the reference is already in the input sequences\n      \
  \                  (default: None)\n  --reference-sequence PATH\n              \
  \          Add this reference sequence to the dataset & strip\n                \
  \        insertions relative to this. Use if the reference is\n                \
  \        NOT already in the input sequences (default: None)\n  --remove-reference\
  \    remove reference sequence from the alignment (default:\n                  \
  \      False)\n  --fill-gaps           If gaps represent missing data rather than\
  \ true\n                        indels, replace by N after aligning. (default: False)\n\
  \  --existing-alignment FASTA\n                        An existing alignment to\
  \ which the sequences will be\n                        added. The ouput alignment\
  \ will be the same length as\n                        this existing alignment. (default:\
  \ False)\n  --debug               Produce extra files (e.g. pre- and post-aligner\
  \ files)\n                        which can help with debugging poor alignments.\n\
  \                        (default: False)\n"
generated_using: *id003
