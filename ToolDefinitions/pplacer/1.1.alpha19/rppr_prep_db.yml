&id003 !Command
command:
- rppr
- prep_db
positional:
- !Positional
  description: ''
  position: 0
  name: prep_db
  optional: false
named:
- !Flag
  description: Reference package path. Required.
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Specify the database file to use. Required.
  synonyms:
  - --sqlite
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Display this list of options
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - rppr
  positional: []
  named:
  - !Flag
    description: Print a list of the available commands.
    synonyms:
    - --cmds
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Run the provided batch file of guppy commands
    synonyms:
    - --batch
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Don't write messages to stdout (unless explicitly requested).
    synonyms:
    - --quiet
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Display this list of options and subcommands
    synonyms:
    - -help
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - rppr
    - ref_tree
    positional:
    - !Positional
      description: ''
      position: 0
      name: ref_tree
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Put the node numbers in where the bootstraps usually go.
      synonyms:
      - --node-numbers
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Use a painted tree in place of the taxonomically annotated tree.
      synonyms:
      - --painted
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Include a tree for each rank with taxonomic annotations on every
        edge.
      synonyms:
      - --rank-colored
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c              Reference\
      \ package path. Required.\n  -o              Specify the filename to write to.\n\
      \  --out-dir       Specify the directory to write files to.\n  --prefix    \
      \    Specify a string to be prepended to filenames.\n  --node-numbers  Put the\
      \ node numbers in where the bootstraps usually go.\n  --painted       Use a\
      \ painted tree in place of the taxonomically annotated tree.\n  --rank-colored\
      \  Include a tree for each rank with taxonomic annotations on every edge.\n\
      \  -help           Display this list of options\n  --help          Display this\
      \ list of options\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - rppr
    - infer
    positional:
    - !Positional
      description: ''
      position: 0
      name: infer
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as csv instead of a padded matrix.
      synonyms:
      - --csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'The number of processes to run pplacer with. default: 2'
      synonyms:
      - -j
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Calculate posterior probabilities when doing placements.
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Save the placefile generated by running pplacer to the specified
        location.
      synonyms:
      - --placefile
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: infer [options] -c my.refpkg\n  -c           Reference package\
      \ path. Required.\n  -o           Specify the filename to write to.\n  --out-dir\
      \    Specify the directory to write files to.\n  --prefix     Specify a string\
      \ to be prepended to filenames.\n  --csv        Output the results as csv instead\
      \ of a padded matrix.\n  -j           The number of processes to run pplacer\
      \ with. default: 2\n  -p           Calculate posterior probabilities when doing\
      \ placements.\n  --placefile  Save the placefile generated by running pplacer\
      \ to the specified location.\n  -help        Display this list of options\n\
      \  --help       Display this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - info
    positional:
    - !Positional
      description: ''
      position: 0
      name: info
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as csv instead of a padded matrix.
      synonyms:
      - --csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Show by-rank taxonomic information
      synonyms:
      - --taxonomic
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: info -c my.refpkg\n  -c           Reference package path. Required.\n\
      \  -o           Specify the filename to write to.\n  --out-dir    Specify the\
      \ directory to write files to.\n  --prefix     Specify a string to be prepended\
      \ to filenames.\n  --csv        Output the results as csv instead of a padded\
      \ matrix.\n  --taxonomic  Show by-rank taxonomic information\n  -help      \
      \  Display this list of options\n  --help       Display this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - reclass
    positional:
    - !Positional
      description: ''
      position: 0
      name: reclass
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as csv instead of a padded matrix.
      synonyms:
      - --csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'The number of processes to run pplacer with. default: 2'
      synonyms:
      - -j
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Calculate posterior probabilities when doing placements.
      synonyms:
      - -p
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Save the placefile generated by running pplacer to the specified
        location.
      synonyms:
      - --placefile
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the path to write the suggestion tree to.
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: reclass [options] -c my.refpkg\n  -c           Reference package\
      \ path. Required.\n  -o           Specify the filename to write to.\n  --out-dir\
      \    Specify the directory to write files to.\n  --prefix     Specify a string\
      \ to be prepended to filenames.\n  --csv        Output the results as csv instead\
      \ of a padded matrix.\n  -j           The number of processes to run pplacer\
      \ with. default: 2\n  -p           Calculate posterior probabilities when doing\
      \ placements.\n  --placefile  Save the placefile generated by running pplacer\
      \ to the specified location.\n  -t           If specified, the path to write\
      \ the suggestion tree to.\n  -help        Display this list of options\n  --help\
      \       Display this list of options\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - rppr
    - pdprune
    positional:
    - !Positional
      description: ''
      position: 0
      name: pdprune
      optional: false
    - !Positional
      description: ''
      position: 1
      name: tree
      optional: false
    named:
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as csv instead of a padded matrix.
      synonyms:
      - --csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the maximum branch length to be trimmed.
      synonyms:
      - --cutoff
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the maximum number of leaves to leave un-trimmed.
      synonyms:
      - --leaves
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Only split out a list of names, rather than names and PD decrease.
      synonyms:
      - --names-only
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Don't perform internal checks.
      synonyms:
      - --unsafe
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Provide a file containing sequence names that will not be pruned.
      synonyms:
      - --never-prune-from
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Provide a file containing regular expressions; sequence names matching
        one of these will not be pruned.
      synonyms:
      - --never-prune-regex-from
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: pdprune [options] tree\n  -o                        Specify\
      \ the filename to write to.\n  --out-dir                 Specify the directory\
      \ to write files to.\n  --prefix                  Specify a string to be prepended\
      \ to filenames.\n  --csv                     Output the results as csv instead\
      \ of a padded matrix.\n  --cutoff                  Specify the maximum branch\
      \ length to be trimmed.\n  --leaves                  Specify the maximum number\
      \ of leaves to leave un-trimmed.\n  --names-only              Only split out\
      \ a list of names, rather than names and PD decrease.\n  --unsafe          \
      \        Don't perform internal checks.\n  --never-prune-from        Provide\
      \ a file containing sequence names that will not be pruned.\n  --never-prune-regex-from\
      \  Provide a file containing regular expressions; sequence names matching one\
      \ of these will not be pruned.\n  -help                     Display this list\
      \ of options\n  --help                    Display this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - prepsim
    positional:
    - !Positional
      description: ''
      position: 0
      name: prepsim
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames. Required.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Comma-delimited list of tax_ids to prune.
      synonyms:
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prepsim [options] -c my.refpkg\n  -c         Reference package\
      \ path. Required.\n  --out-dir  Specify the directory to write files to.\n \
      \ --prefix   Specify a string to be prepended to filenames. Required.\n  -r\
      \         Comma-delimited list of tax_ids to prune.\n  -help      Display this\
      \ list of options\n  --help     Display this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - convex_taxids
    positional:
    - !Positional
      description: ''
      position: 0
      name: convex_taxids
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as a padded matrix instead of csv.
      synonyms:
      - --no-csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: convex_taxids -c my.refpkg\n  -c         Reference package\
      \ path. Required.\n  -o         Specify the filename to write to.\n  --out-dir\
      \  Specify the directory to write files to.\n  --prefix   Specify a string to\
      \ be prepended to filenames.\n  --no-csv   Output the results as a padded matrix\
      \ instead of csv.\n  -help      Display this list of options\n  --help     Display\
      \ this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - rppr
    positional:
    - !Positional
      description: check          checks a reference package
      position: 0
      name: rppr
      optional: false
    - !Positional
      description: determines convex tax_ids per-rank in a refpkg
      position: 1
      name: convex_taxids
      optional: false
    - !Positional
      description: identifies minimal leaf set to cut for taxonomic concordance
      position: 2
      name: convexify
      optional: false
    - !Positional
      description: infers classifications of unclassified sequences in a reference
        package
      position: 3
      name: infer
      optional: false
    - !Positional
      description: gives information about a reference package
      position: 4
      name: info
      optional: false
    - !Positional
      description: finds a good collection of sequences to cut from a placefile's
        ref tree
      position: 5
      name: min_adcl
      optional: false
    - !Positional
      description: finds a good collection of sequences to cut from a tree
      position: 6
      name: min_adcl_tree
      optional: false
    - !Positional
      description: prunes the tree to maximize PD
      position: 7
      name: pdprune
      optional: false
    - !Positional
      description: makes SQL enabling taxonomic querying of placement results
      position: 8
      name: prep_db
      optional: false
    - !Positional
      description: makes a simulation by taking out taxids and turning them into fake
        placements
      position: 9
      name: prepsim
      optional: false
    - !Positional
      description: reclassifies nonconvex sequences in a reference package
      position: 10
      name: reclass
      optional: false
    - !Positional
      description: writes a taxonomically annotated reference tree and an induced
        taxonomic tree
      position: 11
      name: ref_tree
      optional: false
    - !Positional
      description: reroots a given reference package in place
      position: 12
      name: reroot
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Unknown rppr command: rppr\nHere is a list of commands available using\
      \ this interface:\n  rppr\n    check          checks a reference package\n \
      \   convex_taxids  determines convex tax_ids per-rank in a refpkg\n    convexify\
      \      identifies minimal leaf set to cut for taxonomic concordance\n    infer\
      \          infers classifications of unclassified sequences in a reference package\n\
      \    info           gives information about a reference package\n    min_adcl\
      \       finds a good collection of sequences to cut from a placefile's ref tree\n\
      \    min_adcl_tree  finds a good collection of sequences to cut from a tree\n\
      \    pdprune        prunes the tree to maximize PD\n    prep_db        makes\
      \ SQL enabling taxonomic querying of placement results\n    prepsim        makes\
      \ a simulation by taking out taxids and turning them into fake placements\n\
      \    reclass        reclassifies nonconvex sequences in a reference package\n\
      \    ref_tree       writes a taxonomically annotated reference tree and an induced\
      \ taxonomic tree\n    reroot         reroots a given reference package in place\n\
      \nTo get more help about a given command, type rppr COMMAND --help\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - convexify
    positional:
    - !Positional
      description: ''
      position: 0
      name: convexify
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Put the node numbers in where the bootstraps usually go.
      synonyms:
      - --node-numbers
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: A tree file in newick format to work on in place of a reference
        package.
      synonyms:
      - --tree
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: A CSV file of the colors on the tree supplied with --tree.
      synonyms:
      - --colors
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the path to write the discordance tree to.
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the path to write a CSV file of cut sequences per-rank
        to.
      synonyms:
      - --cut-seqs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the path to write a CSV file of alternate colors
        per-sequence to.
      synonyms:
      - --alternates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: When determining alternate colors, check all ranks instead of the
        least recent uncut rank.
      synonyms:
      - --check-all-ranks
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: When determining alternate colors, ignore the taxononomy and show
        all alternates.
      synonyms:
      - --all-alternates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Any trees with a maximum badness over this value are skipped.
        Default: 12.'
      synonyms:
      - --cutoff
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, only convexify at the given ranks. Ranks are given
        as a comma-delimited list of names.
      synonyms:
      - --limit-rank
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, save timing information for solved trees to a CSV
        file.
      synonyms:
      - --timing
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Strictly evaluate convexity; ensure that each color sits in its
        own rooted subtree.
      synonyms:
      - --rooted
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Use the naive convexify algorithm.
      synonyms:
      - --naive
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Don't terminate early when convexifying.
      synonyms:
      - --no-early
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors my.csv]\n\
      \  -c                 Reference package path. Required.\n  --node-numbers  \
      \   Put the node numbers in where the bootstraps usually go.\n  --tree     \
      \        A tree file in newick format to work on in place of a reference package.\n\
      \  --colors           A CSV file of the colors on the tree supplied with --tree.\n\
      \  -t                 If specified, the path to write the discordance tree to.\n\
      \  --cut-seqs         If specified, the path to write a CSV file of cut sequences\
      \ per-rank to.\n  --alternates       If specified, the path to write a CSV file\
      \ of alternate colors per-sequence to.\n  --check-all-ranks  When determining\
      \ alternate colors, check all ranks instead of the least recent uncut rank.\n\
      \  --all-alternates   When determining alternate colors, ignore the taxononomy\
      \ and show all alternates.\n  --cutoff           Any trees with a maximum badness\
      \ over this value are skipped. Default: 12.\n  --limit-rank       If specified,\
      \ only convexify at the given ranks. Ranks are given as a comma-delimited list\
      \ of names.\n  --timing           If specified, save timing information for\
      \ solved trees to a CSV file.\n  --rooted           Strictly evaluate convexity;\
      \ ensure that each color sits in its own rooted subtree.\n  --naive        \
      \    Use the naive convexify algorithm.\n  --no-early         Don't terminate\
      \ early when convexifying.\n  -help              Display this list of options\n\
      \  --help             Display this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - min_adcl_tree
    positional:
    - !Positional
      description: ''
      position: 0
      name: min_adcl_tree
      optional: false
    - !Positional
      description: ''
      position: 1
      name: newick.tre
      optional: false
    named:
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as a padded matrix instead of csv.
      synonyms:
      - --no-csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Put the node numbers in where the bootstraps usually go.
      synonyms:
      - --node-numbers
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Set the random seed, an integer > 0. Default is 1.
      synonyms:
      - --seed
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, write progress output to stderr.
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the path to write the trimmed tree to.
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: The maximum number of leaves to keep in the tree.
      synonyms:
      - --leaves
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: The maximum ADCL that a solution can have.
      synonyms:
      - --max-adcl
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Which algorithm to use to prune leaves. Choices are 'greedy', 'full',
        'force', and 'pam'. Default full.
      synonyms:
      - --algorithm
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, write out a csv file containing every intermediate
        computed ADCL.
      synonyms:
      - --all-adcls-file
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified with the full algorithm, write out a csv file containing
        solutions at every internal node.
      synonyms:
      - --log
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the leaf names read from the provided file will not
        be trimmed.
      synonyms:
      - --always-include
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: A comma-separated list of leaves to turn into query sequences.
      synonyms:
      - --query-seqs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: min_adcl_tree [options] newick.tre\n  -o                Specify\
      \ the filename to write to.\n  --out-dir         Specify the directory to write\
      \ files to.\n  --prefix          Specify a string to be prepended to filenames.\n\
      \  --no-csv          Output the results as a padded matrix instead of csv.\n\
      \  --node-numbers    Put the node numbers in where the bootstraps usually go.\n\
      \  --seed            Set the random seed, an integer > 0. Default is 1.\n  -v\
      \                If specified, write progress output to stderr.\n  -t      \
      \          If specified, the path to write the trimmed tree to.\n  --leaves\
      \          The maximum number of leaves to keep in the tree.\n  --max-adcl \
      \       The maximum ADCL that a solution can have.\n  --algorithm       Which\
      \ algorithm to use to prune leaves. Choices are 'greedy', 'full', 'force', and\
      \ 'pam'. Default full.\n  --all-adcls-file  If specified, write out a csv file\
      \ containing every intermediate computed ADCL.\n  --log             If specified\
      \ with the full algorithm, write out a csv file containing solutions at every\
      \ internal node.\n  --always-include  If specified, the leaf names read from\
      \ the provided file will not be trimmed.\n  --query-seqs      A comma-separated\
      \ list of leaves to turn into query sequences.\n  -help             Display\
      \ this list of options\n  --help            Display this list of options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - reroot
    positional:
    - !Positional
      description: ''
      position: 0
      name: reroot
      optional: false
    named:
    - !Flag
      description: Reference package path. Required.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: reroot -c my.refpkg\n  -c         Reference package path. Required.\n\
      \  -o         Specify the filename to write to.\n  --out-dir  Specify the directory\
      \ to write files to.\n  --prefix   Specify a string to be prepended to filenames.\n\
      \  -help      Display this list of options\n  --help     Display this list of\
      \ options\n"
    generated_using: *id002
  - !Command
    command:
    - rppr
    - min_adcl
    positional:
    - !Positional
      description: ''
      position: 0
      name: min_adcl
      optional: false
    - !Positional
      description: ''
      position: 1
      name: placefile
      optional: false
    named:
    - !Flag
      description: Treat every pquery as a point mass concentrated on the highest-weight
        placement.
      synonyms:
      - --point-mass
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Use posterior probability for the weight.
      synonyms:
      - --pp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Reference package path.
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the filename to write to.
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify the directory to write files to.
      synonyms:
      - --out-dir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a string to be prepended to filenames.
      synonyms:
      - --prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output the results as a padded matrix instead of csv.
      synonyms:
      - --no-csv
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Put the node numbers in where the bootstraps usually go.
      synonyms:
      - --node-numbers
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Set the random seed, an integer > 0. Default is 1.
      synonyms:
      - --seed
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, write progress output to stderr.
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the path to write the trimmed tree to.
      synonyms:
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: The maximum number of leaves to keep in the tree.
      synonyms:
      - --leaves
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: The maximum ADCL that a solution can have.
      synonyms:
      - --max-adcl
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Which algorithm to use to prune leaves. Choices are 'greedy', 'full',
        'force', and 'pam'. Default full.
      synonyms:
      - --algorithm
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, write out a csv file containing every intermediate
        computed ADCL.
      synonyms:
      - --all-adcls-file
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified with the full algorithm, write out a csv file containing
        solutions at every internal node.
      synonyms:
      - --log
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If specified, the leaf names read from the provided file will not
        be trimmed.
      synonyms:
      - --always-include
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Fraction of mass to be distributed uniformly across leaves. Default
        0.
      synonyms:
      - --leaf-mass
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Display this list of options
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Display this list of options
      synonyms:
      - -help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: min_adcl [options] placefile\n  --point-mass      Treat every\
      \ pquery as a point mass concentrated on the highest-weight placement.\n  --pp\
      \              Use posterior probability for the weight.\n  -c             \
      \   Reference package path.\n  -o                Specify the filename to write\
      \ to.\n  --out-dir         Specify the directory to write files to.\n  --prefix\
      \          Specify a string to be prepended to filenames.\n  --no-csv      \
      \    Output the results as a padded matrix instead of csv.\n  --node-numbers\
      \    Put the node numbers in where the bootstraps usually go.\n  --seed    \
      \        Set the random seed, an integer > 0. Default is 1.\n  -v          \
      \      If specified, write progress output to stderr.\n  -t                If\
      \ specified, the path to write the trimmed tree to.\n  --leaves          The\
      \ maximum number of leaves to keep in the tree.\n  --max-adcl        The maximum\
      \ ADCL that a solution can have.\n  --algorithm       Which algorithm to use\
      \ to prune leaves. Choices are 'greedy', 'full', 'force', and 'pam'. Default\
      \ full.\n  --all-adcls-file  If specified, write out a csv file containing every\
      \ intermediate computed ADCL.\n  --log             If specified with the full\
      \ algorithm, write out a csv file containing solutions at every internal node.\n\
      \  --always-include  If specified, the leaf names read from the provided file\
      \ will not be trimmed.\n  --leaf-mass       Fraction of mass to be distributed\
      \ uniformly across leaves. Default 0.\n  -help             Display this list\
      \ of options\n  --help            Display this list of options\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: Display this list of options and subcommands
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Print version and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Here is a list of commands available using this interface:\n  rppr\n\
    \    check          checks a reference package\n    convex_taxids  determines\
    \ convex tax_ids per-rank in a refpkg\n    convexify      identifies minimal leaf\
    \ set to cut for taxonomic concordance\n    infer          infers classifications\
    \ of unclassified sequences in a reference package\n    info           gives information\
    \ about a reference package\n    min_adcl       finds a good collection of sequences\
    \ to cut from a placefile's ref tree\n    min_adcl_tree  finds a good collection\
    \ of sequences to cut from a tree\n    pdprune        prunes the tree to maximize\
    \ PD\n    prep_db        makes SQL enabling taxonomic querying of placement results\n\
    \    prepsim        makes a simulation by taking out taxids and turning them into\
    \ fake placements\n    reclass        reclassifies nonconvex sequences in a reference\
    \ package\n    ref_tree       writes a taxonomically annotated reference tree\
    \ and an induced taxonomic tree\n    reroot         reroots a given reference\
    \ package in place\n\nTo get more help about a given command, type rppr COMMAND\
    \ --help\n\nAdditional flags for rppr:\n  --version  Print version and exit\n\
    \  --cmds     Print a list of the available commands.\n  --batch    Run the provided\
    \ batch file of guppy commands\n  --quiet    Don't write messages to stdout (unless\
    \ explicitly requested).\n  --help     Display this list of options and subcommands\n\
    \  -help      Display this list of options and subcommands\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: Display this list of options
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: prep_db [options] -c <refpkg>\n  -c        Reference package path.\
  \ Required.\n  --sqlite  Specify the database file to use. Required.\n  -help  \
  \   Display this list of options\n  --help    Display this list of options\n"
generated_using: *id002
