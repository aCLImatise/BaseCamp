!Command
command: &id001
- rppr
positional: []
named: []
parent:
subcommands:
- !Command
  command: &id002
  - rppr
  - ref_tree
  positional:
  - !Positional
    optional: false
    position: 0
    name: ref_tree
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --node-numbers
    description: Put the node numbers in where the bootstraps usually go.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --painted
    description: Use a painted tree in place of the taxonomically annotated tree.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --rank-colored
    description: Include a tree for each rank with taxonomic annotations on every
      edge.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: &id020 !Command
    command: *id001
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command: *id002
      positional:
      - !Positional
        optional: false
        position: 0
        name: ref_tree
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --node-numbers
        description: Put the node numbers in where the bootstraps usually go.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --painted
        description: Use a painted tree in place of the taxonomically annotated tree.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --rank-colored
        description: Include a tree for each rank with taxonomic annotations on every
          edge.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: &id019 !Command
        command: *id001
        positional: []
        named: []
        parent:
        subcommands:
        - !Command
          command: *id002
          positional:
          - !Positional
            optional: false
            position: 0
            name: ref_tree
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --node-numbers
            description: Put the node numbers in where the bootstraps usually go.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --painted
            description: Use a painted tree in place of the taxonomically annotated
              tree.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --rank-colored
            description: Include a tree for each rank with taxonomic annotations on
              every edge.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: &id018 !Command
            command: *id001
            positional: []
            named: []
            parent:
            subcommands:
            - !Command
              command: *id002
              positional:
              - !Positional
                optional: false
                position: 0
                name: ref_tree
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --node-numbers
                description: Put the node numbers in where the bootstraps usually
                  go.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --painted
                description: Use a painted tree in place of the taxonomically annotated
                  tree.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --rank-colored
                description: Include a tree for each rank with taxonomic annotations
                  on every edge.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: &id017 !Command
                command: *id001
                positional: []
                named: []
                parent:
                subcommands:
                - !Command
                  command: *id002
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: ref_tree
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --node-numbers
                    description: Put the node numbers in where the bootstraps usually
                      go.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --painted
                    description: Use a painted tree in place of the taxonomically
                      annotated tree.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --rank-colored
                    description: Include a tree for each rank with taxonomic annotations
                      on every edge.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: &id003 !Command
                    command: *id001
                    positional: []
                    named:
                    - !Flag
                      optional: true
                      synonyms:
                      - --cmds
                      description: Print a list of the available commands.
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --batch
                      description: Run the provided batch file of guppy commands
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - --quiet
                      description: Don't write messages to stdout (unless explicitly
                        requested).
                      args: !EmptyFlagArg {}
                    - !Flag
                      optional: true
                      synonyms:
                      - -help
                      description: Display this list of options and subcommands
                      args: !EmptyFlagArg {}
                    parent:
                    subcommands:
                    - !Command
                      command: *id002
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: ref_tree
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --node-numbers
                        description: Put the node numbers in where the bootstraps
                          usually go.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --painted
                        description: Use a painted tree in place of the taxonomically
                          annotated tree.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --rank-colored
                        description: Include a tree for each rank with taxonomic annotations
                          on every edge.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c   \
                        \           Reference package path. Required.\n  -o      \
                        \        Specify the filename to write to.\n  --out-dir  \
                        \     Specify the directory to write files to.\n  --prefix\
                        \        Specify a string to be prepended to filenames.\n\
                        \  --node-numbers  Put the node numbers in where the bootstraps\
                        \ usually go.\n  --painted       Use a painted tree in place\
                        \ of the taxonomically annotated tree.\n  --rank-colored \
                        \ Include a tree for each rank with taxonomic annotations\
                        \ on every edge.\n  -help           Display this list of options\n\
                        \  --help          Display this list of options\n"
                      generated_using: &id004
                      - --help
                      docker_image:
                    - !Command
                      command: &id005
                      - rppr
                      - infer
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: infer
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --csv
                        description: Output the results as csv instead of a padded
                          matrix.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        description: 'The number of processes to run pplacer with.
                          default: 2'
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        description: Calculate posterior probabilities when doing
                          placements.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --placefile
                        description: Save the placefile generated by running pplacer
                          to the specified location.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: infer [options] -c my.refpkg\n  -c      \
                        \     Reference package path. Required.\n  -o           Specify\
                        \ the filename to write to.\n  --out-dir    Specify the directory\
                        \ to write files to.\n  --prefix     Specify a string to be\
                        \ prepended to filenames.\n  --csv        Output the results\
                        \ as csv instead of a padded matrix.\n  -j           The number\
                        \ of processes to run pplacer with. default: 2\n  -p     \
                        \      Calculate posterior probabilities when doing placements.\n\
                        \  --placefile  Save the placefile generated by running pplacer\
                        \ to the specified location.\n  -help        Display this\
                        \ list of options\n  --help       Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id006
                      - rppr
                      - info
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: info
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --csv
                        description: Output the results as csv instead of a padded
                          matrix.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --taxonomic
                        description: Show by-rank taxonomic information
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: info -c my.refpkg\n  -c           Reference\
                        \ package path. Required.\n  -o           Specify the filename\
                        \ to write to.\n  --out-dir    Specify the directory to write\
                        \ files to.\n  --prefix     Specify a string to be prepended\
                        \ to filenames.\n  --csv        Output the results as csv\
                        \ instead of a padded matrix.\n  --taxonomic  Show by-rank\
                        \ taxonomic information\n  -help        Display this list\
                        \ of options\n  --help       Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id007
                      - rppr
                      - reclass
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: reclass
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --csv
                        description: Output the results as csv instead of a padded
                          matrix.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -j
                        description: 'The number of processes to run pplacer with.
                          default: 2'
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -p
                        description: Calculate posterior probabilities when doing
                          placements.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --placefile
                        description: Save the placefile generated by running pplacer
                          to the specified location.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: If specified, the path to write the suggestion
                          tree to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: reclass [options] -c my.refpkg\n  -c    \
                        \       Reference package path. Required.\n  -o          \
                        \ Specify the filename to write to.\n  --out-dir    Specify\
                        \ the directory to write files to.\n  --prefix     Specify\
                        \ a string to be prepended to filenames.\n  --csv        Output\
                        \ the results as csv instead of a padded matrix.\n  -j   \
                        \        The number of processes to run pplacer with. default:\
                        \ 2\n  -p           Calculate posterior probabilities when\
                        \ doing placements.\n  --placefile  Save the placefile generated\
                        \ by running pplacer to the specified location.\n  -t    \
                        \       If specified, the path to write the suggestion tree\
                        \ to.\n  -help        Display this list of options\n  --help\
                        \       Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id008
                      - rppr
                      - prep_db
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: prep_db
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --sqlite
                        description: Specify the database file to use. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prep_db [options] -c <refpkg>\n  -c     \
                        \   Reference package path. Required.\n  --sqlite  Specify\
                        \ the database file to use. Required.\n  -help     Display\
                        \ this list of options\n  --help    Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id009
                      - rppr
                      - pdprune
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: pdprune
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: tree
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --csv
                        description: Output the results as csv instead of a padded
                          matrix.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --cutoff
                        description: Specify the maximum branch length to be trimmed.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --leaves
                        description: Specify the maximum number of leaves to leave
                          un-trimmed.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --names-only
                        description: Only split out a list of names, rather than names
                          and PD decrease.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --unsafe
                        description: Don't perform internal checks.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --never-prune-from
                        description: Provide a file containing sequence names that
                          will not be pruned.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --never-prune-regex-from
                        description: Provide a file containing regular expressions;
                          sequence names matching one of these will not be pruned.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: pdprune [options] tree\n  -o            \
                        \            Specify the filename to write to.\n  --out-dir\
                        \                 Specify the directory to write files to.\n\
                        \  --prefix                  Specify a string to be prepended\
                        \ to filenames.\n  --csv                     Output the results\
                        \ as csv instead of a padded matrix.\n  --cutoff         \
                        \         Specify the maximum branch length to be trimmed.\n\
                        \  --leaves                  Specify the maximum number of\
                        \ leaves to leave un-trimmed.\n  --names-only            \
                        \  Only split out a list of names, rather than names and PD\
                        \ decrease.\n  --unsafe                  Don't perform internal\
                        \ checks.\n  --never-prune-from        Provide a file containing\
                        \ sequence names that will not be pruned.\n  --never-prune-regex-from\
                        \  Provide a file containing regular expressions; sequence\
                        \ names matching one of these will not be pruned.\n  -help\
                        \                     Display this list of options\n  --help\
                        \                    Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id010
                      - rppr
                      - prepsim
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: prepsim
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                          Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -r
                        description: Comma-delimited list of tax_ids to prune.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: prepsim [options] -c my.refpkg\n  -c    \
                        \     Reference package path. Required.\n  --out-dir  Specify\
                        \ the directory to write files to.\n  --prefix   Specify a\
                        \ string to be prepended to filenames. Required.\n  -r   \
                        \      Comma-delimited list of tax_ids to prune.\n  -help\
                        \      Display this list of options\n  --help     Display\
                        \ this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id011
                      - rppr
                      - convex_taxids
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: convex_taxids
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-csv
                        description: Output the results as a padded matrix instead
                          of csv.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: convex_taxids -c my.refpkg\n  -c        \
                        \ Reference package path. Required.\n  -o         Specify\
                        \ the filename to write to.\n  --out-dir  Specify the directory\
                        \ to write files to.\n  --prefix   Specify a string to be\
                        \ prepended to filenames.\n  --no-csv   Output the results\
                        \ as a padded matrix instead of csv.\n  -help      Display\
                        \ this list of options\n  --help     Display this list of\
                        \ options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id012
                      - rppr
                      - rppr
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: rppr
                        description: check          checks a reference package
                      - !Positional
                        optional: false
                        position: 1
                        name: convex_taxids
                        description: determines convex tax_ids per-rank in a refpkg
                      - !Positional
                        optional: false
                        position: 2
                        name: convexify
                        description: identifies minimal leaf set to cut for taxonomic
                          concordance
                      - !Positional
                        optional: false
                        position: 3
                        name: infer
                        description: infers classifications of unclassified sequences
                          in a reference package
                      - !Positional
                        optional: false
                        position: 4
                        name: info
                        description: gives information about a reference package
                      - !Positional
                        optional: false
                        position: 5
                        name: min_adcl
                        description: finds a good collection of sequences to cut from
                          a placefile's ref tree
                      - !Positional
                        optional: false
                        position: 6
                        name: min_adcl_tree
                        description: finds a good collection of sequences to cut from
                          a tree
                      - !Positional
                        optional: false
                        position: 7
                        name: pdprune
                        description: prunes the tree to maximize PD
                      - !Positional
                        optional: false
                        position: 8
                        name: prep_db
                        description: makes SQL enabling taxonomic querying of placement
                          results
                      - !Positional
                        optional: false
                        position: 9
                        name: prepsim
                        description: makes a simulation by taking out taxids and turning
                          them into fake placements
                      - !Positional
                        optional: false
                        position: 10
                        name: reclass
                        description: reclassifies nonconvex sequences in a reference
                          package
                      - !Positional
                        optional: false
                        position: 11
                        name: ref_tree
                        description: writes a taxonomically annotated reference tree
                          and an induced taxonomic tree
                      - !Positional
                        optional: false
                        position: 12
                        name: reroot
                        description: reroots a given reference package in place
                      named: []
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag:
                      usage_flag:
                      version_flag:
                      help_text: "Unknown rppr command: rppr\nHere is a list of commands\
                        \ available using this interface:\n  rppr\n    check     \
                        \     checks a reference package\n    convex_taxids  determines\
                        \ convex tax_ids per-rank in a refpkg\n    convexify     \
                        \ identifies minimal leaf set to cut for taxonomic concordance\n\
                        \    infer          infers classifications of unclassified\
                        \ sequences in a reference package\n    info           gives\
                        \ information about a reference package\n    min_adcl    \
                        \   finds a good collection of sequences to cut from a placefile's\
                        \ ref tree\n    min_adcl_tree  finds a good collection of\
                        \ sequences to cut from a tree\n    pdprune        prunes\
                        \ the tree to maximize PD\n    prep_db        makes SQL enabling\
                        \ taxonomic querying of placement results\n    prepsim   \
                        \     makes a simulation by taking out taxids and turning\
                        \ them into fake placements\n    reclass        reclassifies\
                        \ nonconvex sequences in a reference package\n    ref_tree\
                        \       writes a taxonomically annotated reference tree and\
                        \ an induced taxonomic tree\n    reroot         reroots a\
                        \ given reference package in place\n\nTo get more help about\
                        \ a given command, type rppr COMMAND --help\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id013
                      - rppr
                      - convexify
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: convexify
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --node-numbers
                        description: Put the node numbers in where the bootstraps
                          usually go.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --tree
                        description: A tree file in newick format to work on in place
                          of a reference package.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --colors
                        description: A CSV file of the colors on the tree supplied
                          with --tree.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: If specified, the path to write the discordance
                          tree to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --cut-seqs
                        description: If specified, the path to write a CSV file of
                          cut sequences per-rank to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --alternates
                        description: If specified, the path to write a CSV file of
                          alternate colors per-sequence to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --check-all-ranks
                        description: When determining alternate colors, check all
                          ranks instead of the least recent uncut rank.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --all-alternates
                        description: When determining alternate colors, ignore the
                          taxononomy and show all alternates.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --cutoff
                        description: 'Any trees with a maximum badness over this value
                          are skipped. Default: 12.'
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --limit-rank
                        description: If specified, only convexify at the given ranks.
                          Ranks are given as a comma-delimited list of names.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --timing
                        description: If specified, save timing information for solved
                          trees to a CSV file.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --rooted
                        description: Strictly evaluate convexity; ensure that each
                          color sits in its own rooted subtree.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --naive
                        description: Use the naive convexify algorithm.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-early
                        description: Don't terminate early when convexifying.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors\
                        \ my.csv]\n  -c                 Reference package path. Required.\n\
                        \  --node-numbers     Put the node numbers in where the bootstraps\
                        \ usually go.\n  --tree             A tree file in newick\
                        \ format to work on in place of a reference package.\n  --colors\
                        \           A CSV file of the colors on the tree supplied\
                        \ with --tree.\n  -t                 If specified, the path\
                        \ to write the discordance tree to.\n  --cut-seqs        \
                        \ If specified, the path to write a CSV file of cut sequences\
                        \ per-rank to.\n  --alternates       If specified, the path\
                        \ to write a CSV file of alternate colors per-sequence to.\n\
                        \  --check-all-ranks  When determining alternate colors, check\
                        \ all ranks instead of the least recent uncut rank.\n  --all-alternates\
                        \   When determining alternate colors, ignore the taxononomy\
                        \ and show all alternates.\n  --cutoff           Any trees\
                        \ with a maximum badness over this value are skipped. Default:\
                        \ 12.\n  --limit-rank       If specified, only convexify at\
                        \ the given ranks. Ranks are given as a comma-delimited list\
                        \ of names.\n  --timing           If specified, save timing\
                        \ information for solved trees to a CSV file.\n  --rooted\
                        \           Strictly evaluate convexity; ensure that each\
                        \ color sits in its own rooted subtree.\n  --naive       \
                        \     Use the naive convexify algorithm.\n  --no-early   \
                        \      Don't terminate early when convexifying.\n  -help \
                        \             Display this list of options\n  --help     \
                        \        Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id014
                      - rppr
                      - min_adcl_tree
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: min_adcl_tree
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: newick.tre
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-csv
                        description: Output the results as a padded matrix instead
                          of csv.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --node-numbers
                        description: Put the node numbers in where the bootstraps
                          usually go.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --seed
                        description: Set the random seed, an integer > 0. Default
                          is 1.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        description: If specified, write progress output to stderr.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: If specified, the path to write the trimmed tree
                          to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --leaves
                        description: The maximum number of leaves to keep in the tree.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --max-adcl
                        description: The maximum ADCL that a solution can have.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --algorithm
                        description: Which algorithm to use to prune leaves. Choices
                          are 'greedy', 'full', 'force', and 'pam'. Default full.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --all-adcls-file
                        description: If specified, write out a csv file containing
                          every intermediate computed ADCL.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --log
                        description: If specified with the full algorithm, write out
                          a csv file containing solutions at every internal node.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --always-include
                        description: If specified, the leaf names read from the provided
                          file will not be trimmed.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --query-seqs
                        description: A comma-separated list of leaves to turn into
                          query sequences.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: min_adcl_tree [options] newick.tre\n  -o\
                        \                Specify the filename to write to.\n  --out-dir\
                        \         Specify the directory to write files to.\n  --prefix\
                        \          Specify a string to be prepended to filenames.\n\
                        \  --no-csv          Output the results as a padded matrix\
                        \ instead of csv.\n  --node-numbers    Put the node numbers\
                        \ in where the bootstraps usually go.\n  --seed          \
                        \  Set the random seed, an integer > 0. Default is 1.\n  -v\
                        \                If specified, write progress output to stderr.\n\
                        \  -t                If specified, the path to write the trimmed\
                        \ tree to.\n  --leaves          The maximum number of leaves\
                        \ to keep in the tree.\n  --max-adcl        The maximum ADCL\
                        \ that a solution can have.\n  --algorithm       Which algorithm\
                        \ to use to prune leaves. Choices are 'greedy', 'full', 'force',\
                        \ and 'pam'. Default full.\n  --all-adcls-file  If specified,\
                        \ write out a csv file containing every intermediate computed\
                        \ ADCL.\n  --log             If specified with the full algorithm,\
                        \ write out a csv file containing solutions at every internal\
                        \ node.\n  --always-include  If specified, the leaf names\
                        \ read from the provided file will not be trimmed.\n  --query-seqs\
                        \      A comma-separated list of leaves to turn into query\
                        \ sequences.\n  -help             Display this list of options\n\
                        \  --help            Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id015
                      - rppr
                      - reroot
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: reroot
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path. Required.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: reroot -c my.refpkg\n  -c         Reference\
                        \ package path. Required.\n  -o         Specify the filename\
                        \ to write to.\n  --out-dir  Specify the directory to write\
                        \ files to.\n  --prefix   Specify a string to be prepended\
                        \ to filenames.\n  -help      Display this list of options\n\
                        \  --help     Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    - !Command
                      command: &id016
                      - rppr
                      - min_adcl
                      positional:
                      - !Positional
                        optional: false
                        position: 0
                        name: min_adcl
                        description: ''
                      - !Positional
                        optional: false
                        position: 1
                        name: placefile
                        description: ''
                      named:
                      - !Flag
                        optional: true
                        synonyms:
                        - --point-mass
                        description: Treat every pquery as a point mass concentrated
                          on the highest-weight placement.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --pp
                        description: Use posterior probability for the weight.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -c
                        description: Reference package path.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -o
                        description: Specify the filename to write to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --out-dir
                        description: Specify the directory to write files to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --prefix
                        description: Specify a string to be prepended to filenames.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --no-csv
                        description: Output the results as a padded matrix instead
                          of csv.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --node-numbers
                        description: Put the node numbers in where the bootstraps
                          usually go.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --seed
                        description: Set the random seed, an integer > 0. Default
                          is 1.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -v
                        description: If specified, write progress output to stderr.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - -t
                        description: If specified, the path to write the trimmed tree
                          to.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --leaves
                        description: The maximum number of leaves to keep in the tree.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --max-adcl
                        description: The maximum ADCL that a solution can have.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --algorithm
                        description: Which algorithm to use to prune leaves. Choices
                          are 'greedy', 'full', 'force', and 'pam'. Default full.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --all-adcls-file
                        description: If specified, write out a csv file containing
                          every intermediate computed ADCL.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --log
                        description: If specified with the full algorithm, write out
                          a csv file containing solutions at every internal node.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --always-include
                        description: If specified, the leaf names read from the provided
                          file will not be trimmed.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --leaf-mass
                        description: Fraction of mass to be distributed uniformly
                          across leaves. Default 0.
                        args: !EmptyFlagArg {}
                      - !Flag
                        optional: true
                        synonyms:
                        - --help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      parent: *id003
                      subcommands: []
                      usage: []
                      help_flag: !Flag
                        optional: true
                        synonyms:
                        - -help
                        description: Display this list of options
                        args: !EmptyFlagArg {}
                      usage_flag:
                      version_flag:
                      help_text: "usage: min_adcl [options] placefile\n  --point-mass\
                        \      Treat every pquery as a point mass concentrated on\
                        \ the highest-weight placement.\n  --pp              Use posterior\
                        \ probability for the weight.\n  -c                Reference\
                        \ package path.\n  -o                Specify the filename\
                        \ to write to.\n  --out-dir         Specify the directory\
                        \ to write files to.\n  --prefix          Specify a string\
                        \ to be prepended to filenames.\n  --no-csv          Output\
                        \ the results as a padded matrix instead of csv.\n  --node-numbers\
                        \    Put the node numbers in where the bootstraps usually\
                        \ go.\n  --seed            Set the random seed, an integer\
                        \ > 0. Default is 1.\n  -v                If specified, write\
                        \ progress output to stderr.\n  -t                If specified,\
                        \ the path to write the trimmed tree to.\n  --leaves     \
                        \     The maximum number of leaves to keep in the tree.\n\
                        \  --max-adcl        The maximum ADCL that a solution can\
                        \ have.\n  --algorithm       Which algorithm to use to prune\
                        \ leaves. Choices are 'greedy', 'full', 'force', and 'pam'.\
                        \ Default full.\n  --all-adcls-file  If specified, write out\
                        \ a csv file containing every intermediate computed ADCL.\n\
                        \  --log             If specified with the full algorithm,\
                        \ write out a csv file containing solutions at every internal\
                        \ node.\n  --always-include  If specified, the leaf names\
                        \ read from the provided file will not be trimmed.\n  --leaf-mass\
                        \       Fraction of mass to be distributed uniformly across\
                        \ leaves. Default 0.\n  -help             Display this list\
                        \ of options\n  --help            Display this list of options\n"
                      generated_using: *id004
                      docker_image:
                    usage: []
                    help_flag: !Flag
                      optional: true
                      synonyms:
                      - --help
                      description: Display this list of options and subcommands
                      args: !EmptyFlagArg {}
                    usage_flag:
                    version_flag: !Flag
                      optional: true
                      synonyms:
                      - --version
                      description: Print version and exit
                      args: !EmptyFlagArg {}
                    help_text: "Here is a list of commands available using this interface:\n\
                      \  rppr\n    check          checks a reference package\n   \
                      \ convex_taxids  determines convex tax_ids per-rank in a refpkg\n\
                      \    convexify      identifies minimal leaf set to cut for taxonomic\
                      \ concordance\n    infer          infers classifications of\
                      \ unclassified sequences in a reference package\n    info  \
                      \         gives information about a reference package\n    min_adcl\
                      \       finds a good collection of sequences to cut from a placefile's\
                      \ ref tree\n    min_adcl_tree  finds a good collection of sequences\
                      \ to cut from a tree\n    pdprune        prunes the tree to\
                      \ maximize PD\n    prep_db        makes SQL enabling taxonomic\
                      \ querying of placement results\n    prepsim        makes a\
                      \ simulation by taking out taxids and turning them into fake\
                      \ placements\n    reclass        reclassifies nonconvex sequences\
                      \ in a reference package\n    ref_tree       writes a taxonomically\
                      \ annotated reference tree and an induced taxonomic tree\n \
                      \   reroot         reroots a given reference package in place\n\
                      \nTo get more help about a given command, type rppr COMMAND\
                      \ --help\n\nAdditional flags for rppr:\n  --version  Print version\
                      \ and exit\n  --cmds     Print a list of the available commands.\n\
                      \  --batch    Run the provided batch file of guppy commands\n\
                      \  --quiet    Don't write messages to stdout (unless explicitly\
                      \ requested).\n  --help     Display this list of options and\
                      \ subcommands\n  -help      Display this list of options and\
                      \ subcommands\n"
                    generated_using: *id004
                    docker_image:
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c       \
                    \       Reference package path. Required.\n  -o              Specify\
                    \ the filename to write to.\n  --out-dir       Specify the directory\
                    \ to write files to.\n  --prefix        Specify a string to be\
                    \ prepended to filenames.\n  --node-numbers  Put the node numbers\
                    \ in where the bootstraps usually go.\n  --painted       Use a\
                    \ painted tree in place of the taxonomically annotated tree.\n\
                    \  --rank-colored  Include a tree for each rank with taxonomic\
                    \ annotations on every edge.\n  -help           Display this list\
                    \ of options\n  --help          Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id005
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: infer
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --csv
                    description: Output the results as csv instead of a padded matrix.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    description: 'The number of processes to run pplacer with. default:
                      2'
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    description: Calculate posterior probabilities when doing placements.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --placefile
                    description: Save the placefile generated by running pplacer to
                      the specified location.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: infer [options] -c my.refpkg\n  -c          \
                    \ Reference package path. Required.\n  -o           Specify the\
                    \ filename to write to.\n  --out-dir    Specify the directory\
                    \ to write files to.\n  --prefix     Specify a string to be prepended\
                    \ to filenames.\n  --csv        Output the results as csv instead\
                    \ of a padded matrix.\n  -j           The number of processes\
                    \ to run pplacer with. default: 2\n  -p           Calculate posterior\
                    \ probabilities when doing placements.\n  --placefile  Save the\
                    \ placefile generated by running pplacer to the specified location.\n\
                    \  -help        Display this list of options\n  --help       Display\
                    \ this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id006
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: info
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --csv
                    description: Output the results as csv instead of a padded matrix.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --taxonomic
                    description: Show by-rank taxonomic information
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: info -c my.refpkg\n  -c           Reference package\
                    \ path. Required.\n  -o           Specify the filename to write\
                    \ to.\n  --out-dir    Specify the directory to write files to.\n\
                    \  --prefix     Specify a string to be prepended to filenames.\n\
                    \  --csv        Output the results as csv instead of a padded\
                    \ matrix.\n  --taxonomic  Show by-rank taxonomic information\n\
                    \  -help        Display this list of options\n  --help       Display\
                    \ this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id007
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: reclass
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --csv
                    description: Output the results as csv instead of a padded matrix.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -j
                    description: 'The number of processes to run pplacer with. default:
                      2'
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -p
                    description: Calculate posterior probabilities when doing placements.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --placefile
                    description: Save the placefile generated by running pplacer to
                      the specified location.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: If specified, the path to write the suggestion tree
                      to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: reclass [options] -c my.refpkg\n  -c        \
                    \   Reference package path. Required.\n  -o           Specify\
                    \ the filename to write to.\n  --out-dir    Specify the directory\
                    \ to write files to.\n  --prefix     Specify a string to be prepended\
                    \ to filenames.\n  --csv        Output the results as csv instead\
                    \ of a padded matrix.\n  -j           The number of processes\
                    \ to run pplacer with. default: 2\n  -p           Calculate posterior\
                    \ probabilities when doing placements.\n  --placefile  Save the\
                    \ placefile generated by running pplacer to the specified location.\n\
                    \  -t           If specified, the path to write the suggestion\
                    \ tree to.\n  -help        Display this list of options\n  --help\
                    \       Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id008
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: prep_db
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --sqlite
                    description: Specify the database file to use. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prep_db [options] -c <refpkg>\n  -c        Reference\
                    \ package path. Required.\n  --sqlite  Specify the database file\
                    \ to use. Required.\n  -help     Display this list of options\n\
                    \  --help    Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id009
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: pdprune
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: tree
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --csv
                    description: Output the results as csv instead of a padded matrix.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --cutoff
                    description: Specify the maximum branch length to be trimmed.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --leaves
                    description: Specify the maximum number of leaves to leave un-trimmed.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --names-only
                    description: Only split out a list of names, rather than names
                      and PD decrease.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --unsafe
                    description: Don't perform internal checks.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --never-prune-from
                    description: Provide a file containing sequence names that will
                      not be pruned.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --never-prune-regex-from
                    description: Provide a file containing regular expressions; sequence
                      names matching one of these will not be pruned.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: pdprune [options] tree\n  -o                \
                    \        Specify the filename to write to.\n  --out-dir      \
                    \           Specify the directory to write files to.\n  --prefix\
                    \                  Specify a string to be prepended to filenames.\n\
                    \  --csv                     Output the results as csv instead\
                    \ of a padded matrix.\n  --cutoff                  Specify the\
                    \ maximum branch length to be trimmed.\n  --leaves           \
                    \       Specify the maximum number of leaves to leave un-trimmed.\n\
                    \  --names-only              Only split out a list of names, rather\
                    \ than names and PD decrease.\n  --unsafe                  Don't\
                    \ perform internal checks.\n  --never-prune-from        Provide\
                    \ a file containing sequence names that will not be pruned.\n\
                    \  --never-prune-regex-from  Provide a file containing regular\
                    \ expressions; sequence names matching one of these will not be\
                    \ pruned.\n  -help                     Display this list of options\n\
                    \  --help                    Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id010
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: prepsim
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -r
                    description: Comma-delimited list of tax_ids to prune.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: prepsim [options] -c my.refpkg\n  -c        \
                    \ Reference package path. Required.\n  --out-dir  Specify the\
                    \ directory to write files to.\n  --prefix   Specify a string\
                    \ to be prepended to filenames. Required.\n  -r         Comma-delimited\
                    \ list of tax_ids to prune.\n  -help      Display this list of\
                    \ options\n  --help     Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id011
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: convex_taxids
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-csv
                    description: Output the results as a padded matrix instead of
                      csv.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: convex_taxids -c my.refpkg\n  -c         Reference\
                    \ package path. Required.\n  -o         Specify the filename to\
                    \ write to.\n  --out-dir  Specify the directory to write files\
                    \ to.\n  --prefix   Specify a string to be prepended to filenames.\n\
                    \  --no-csv   Output the results as a padded matrix instead of\
                    \ csv.\n  -help      Display this list of options\n  --help  \
                    \   Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id012
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: rppr
                    description: check          checks a reference package
                  - !Positional
                    optional: false
                    position: 1
                    name: convex_taxids
                    description: determines convex tax_ids per-rank in a refpkg
                  - !Positional
                    optional: false
                    position: 2
                    name: convexify
                    description: identifies minimal leaf set to cut for taxonomic
                      concordance
                  - !Positional
                    optional: false
                    position: 3
                    name: infer
                    description: infers classifications of unclassified sequences
                      in a reference package
                  - !Positional
                    optional: false
                    position: 4
                    name: info
                    description: gives information about a reference package
                  - !Positional
                    optional: false
                    position: 5
                    name: min_adcl
                    description: finds a good collection of sequences to cut from
                      a placefile's ref tree
                  - !Positional
                    optional: false
                    position: 6
                    name: min_adcl_tree
                    description: finds a good collection of sequences to cut from
                      a tree
                  - !Positional
                    optional: false
                    position: 7
                    name: pdprune
                    description: prunes the tree to maximize PD
                  - !Positional
                    optional: false
                    position: 8
                    name: prep_db
                    description: makes SQL enabling taxonomic querying of placement
                      results
                  - !Positional
                    optional: false
                    position: 9
                    name: prepsim
                    description: makes a simulation by taking out taxids and turning
                      them into fake placements
                  - !Positional
                    optional: false
                    position: 10
                    name: reclass
                    description: reclassifies nonconvex sequences in a reference package
                  - !Positional
                    optional: false
                    position: 11
                    name: ref_tree
                    description: writes a taxonomically annotated reference tree and
                      an induced taxonomic tree
                  - !Positional
                    optional: false
                    position: 12
                    name: reroot
                    description: reroots a given reference package in place
                  named: []
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag:
                  usage_flag:
                  version_flag:
                  help_text: "Unknown rppr command: rppr\nHere is a list of commands\
                    \ available using this interface:\n  rppr\n    check         \
                    \ checks a reference package\n    convex_taxids  determines convex\
                    \ tax_ids per-rank in a refpkg\n    convexify      identifies\
                    \ minimal leaf set to cut for taxonomic concordance\n    infer\
                    \          infers classifications of unclassified sequences in\
                    \ a reference package\n    info           gives information about\
                    \ a reference package\n    min_adcl       finds a good collection\
                    \ of sequences to cut from a placefile's ref tree\n    min_adcl_tree\
                    \  finds a good collection of sequences to cut from a tree\n \
                    \   pdprune        prunes the tree to maximize PD\n    prep_db\
                    \        makes SQL enabling taxonomic querying of placement results\n\
                    \    prepsim        makes a simulation by taking out taxids and\
                    \ turning them into fake placements\n    reclass        reclassifies\
                    \ nonconvex sequences in a reference package\n    ref_tree   \
                    \    writes a taxonomically annotated reference tree and an induced\
                    \ taxonomic tree\n    reroot         reroots a given reference\
                    \ package in place\n\nTo get more help about a given command,\
                    \ type rppr COMMAND --help\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id013
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: convexify
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --node-numbers
                    description: Put the node numbers in where the bootstraps usually
                      go.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --tree
                    description: A tree file in newick format to work on in place
                      of a reference package.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --colors
                    description: A CSV file of the colors on the tree supplied with
                      --tree.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: If specified, the path to write the discordance tree
                      to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --cut-seqs
                    description: If specified, the path to write a CSV file of cut
                      sequences per-rank to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --alternates
                    description: If specified, the path to write a CSV file of alternate
                      colors per-sequence to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --check-all-ranks
                    description: When determining alternate colors, check all ranks
                      instead of the least recent uncut rank.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --all-alternates
                    description: When determining alternate colors, ignore the taxononomy
                      and show all alternates.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --cutoff
                    description: 'Any trees with a maximum badness over this value
                      are skipped. Default: 12.'
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --limit-rank
                    description: If specified, only convexify at the given ranks.
                      Ranks are given as a comma-delimited list of names.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --timing
                    description: If specified, save timing information for solved
                      trees to a CSV file.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --rooted
                    description: Strictly evaluate convexity; ensure that each color
                      sits in its own rooted subtree.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --naive
                    description: Use the naive convexify algorithm.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-early
                    description: Don't terminate early when convexifying.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors\
                    \ my.csv]\n  -c                 Reference package path. Required.\n\
                    \  --node-numbers     Put the node numbers in where the bootstraps\
                    \ usually go.\n  --tree             A tree file in newick format\
                    \ to work on in place of a reference package.\n  --colors    \
                    \       A CSV file of the colors on the tree supplied with --tree.\n\
                    \  -t                 If specified, the path to write the discordance\
                    \ tree to.\n  --cut-seqs         If specified, the path to write\
                    \ a CSV file of cut sequences per-rank to.\n  --alternates   \
                    \    If specified, the path to write a CSV file of alternate colors\
                    \ per-sequence to.\n  --check-all-ranks  When determining alternate\
                    \ colors, check all ranks instead of the least recent uncut rank.\n\
                    \  --all-alternates   When determining alternate colors, ignore\
                    \ the taxononomy and show all alternates.\n  --cutoff        \
                    \   Any trees with a maximum badness over this value are skipped.\
                    \ Default: 12.\n  --limit-rank       If specified, only convexify\
                    \ at the given ranks. Ranks are given as a comma-delimited list\
                    \ of names.\n  --timing           If specified, save timing information\
                    \ for solved trees to a CSV file.\n  --rooted           Strictly\
                    \ evaluate convexity; ensure that each color sits in its own rooted\
                    \ subtree.\n  --naive            Use the naive convexify algorithm.\n\
                    \  --no-early         Don't terminate early when convexifying.\n\
                    \  -help              Display this list of options\n  --help \
                    \            Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id014
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: min_adcl_tree
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: newick.tre
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-csv
                    description: Output the results as a padded matrix instead of
                      csv.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --node-numbers
                    description: Put the node numbers in where the bootstraps usually
                      go.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --seed
                    description: Set the random seed, an integer > 0. Default is 1.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    description: If specified, write progress output to stderr.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: If specified, the path to write the trimmed tree
                      to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --leaves
                    description: The maximum number of leaves to keep in the tree.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --max-adcl
                    description: The maximum ADCL that a solution can have.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --algorithm
                    description: Which algorithm to use to prune leaves. Choices are
                      'greedy', 'full', 'force', and 'pam'. Default full.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --all-adcls-file
                    description: If specified, write out a csv file containing every
                      intermediate computed ADCL.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --log
                    description: If specified with the full algorithm, write out a
                      csv file containing solutions at every internal node.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --always-include
                    description: If specified, the leaf names read from the provided
                      file will not be trimmed.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --query-seqs
                    description: A comma-separated list of leaves to turn into query
                      sequences.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: min_adcl_tree [options] newick.tre\n  -o    \
                    \            Specify the filename to write to.\n  --out-dir  \
                    \       Specify the directory to write files to.\n  --prefix \
                    \         Specify a string to be prepended to filenames.\n  --no-csv\
                    \          Output the results as a padded matrix instead of csv.\n\
                    \  --node-numbers    Put the node numbers in where the bootstraps\
                    \ usually go.\n  --seed            Set the random seed, an integer\
                    \ > 0. Default is 1.\n  -v                If specified, write\
                    \ progress output to stderr.\n  -t                If specified,\
                    \ the path to write the trimmed tree to.\n  --leaves         \
                    \ The maximum number of leaves to keep in the tree.\n  --max-adcl\
                    \        The maximum ADCL that a solution can have.\n  --algorithm\
                    \       Which algorithm to use to prune leaves. Choices are 'greedy',\
                    \ 'full', 'force', and 'pam'. Default full.\n  --all-adcls-file\
                    \  If specified, write out a csv file containing every intermediate\
                    \ computed ADCL.\n  --log             If specified with the full\
                    \ algorithm, write out a csv file containing solutions at every\
                    \ internal node.\n  --always-include  If specified, the leaf names\
                    \ read from the provided file will not be trimmed.\n  --query-seqs\
                    \      A comma-separated list of leaves to turn into query sequences.\n\
                    \  -help             Display this list of options\n  --help  \
                    \          Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id015
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: reroot
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path. Required.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: reroot -c my.refpkg\n  -c         Reference package\
                    \ path. Required.\n  -o         Specify the filename to write\
                    \ to.\n  --out-dir  Specify the directory to write files to.\n\
                    \  --prefix   Specify a string to be prepended to filenames.\n\
                    \  -help      Display this list of options\n  --help     Display\
                    \ this list of options\n"
                  generated_using: *id004
                  docker_image:
                - !Command
                  command: *id016
                  positional:
                  - !Positional
                    optional: false
                    position: 0
                    name: min_adcl
                    description: ''
                  - !Positional
                    optional: false
                    position: 1
                    name: placefile
                    description: ''
                  named:
                  - !Flag
                    optional: true
                    synonyms:
                    - --point-mass
                    description: Treat every pquery as a point mass concentrated on
                      the highest-weight placement.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --pp
                    description: Use posterior probability for the weight.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -c
                    description: Reference package path.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -o
                    description: Specify the filename to write to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --out-dir
                    description: Specify the directory to write files to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --prefix
                    description: Specify a string to be prepended to filenames.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --no-csv
                    description: Output the results as a padded matrix instead of
                      csv.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --node-numbers
                    description: Put the node numbers in where the bootstraps usually
                      go.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --seed
                    description: Set the random seed, an integer > 0. Default is 1.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -v
                    description: If specified, write progress output to stderr.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - -t
                    description: If specified, the path to write the trimmed tree
                      to.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --leaves
                    description: The maximum number of leaves to keep in the tree.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --max-adcl
                    description: The maximum ADCL that a solution can have.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --algorithm
                    description: Which algorithm to use to prune leaves. Choices are
                      'greedy', 'full', 'force', and 'pam'. Default full.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --all-adcls-file
                    description: If specified, write out a csv file containing every
                      intermediate computed ADCL.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --log
                    description: If specified with the full algorithm, write out a
                      csv file containing solutions at every internal node.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --always-include
                    description: If specified, the leaf names read from the provided
                      file will not be trimmed.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --leaf-mass
                    description: Fraction of mass to be distributed uniformly across
                      leaves. Default 0.
                    args: !EmptyFlagArg {}
                  - !Flag
                    optional: true
                    synonyms:
                    - --help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  parent: *id003
                  subcommands: []
                  usage: []
                  help_flag: !Flag
                    optional: true
                    synonyms:
                    - -help
                    description: Display this list of options
                    args: !EmptyFlagArg {}
                  usage_flag:
                  version_flag:
                  help_text: "usage: min_adcl [options] placefile\n  --point-mass\
                    \      Treat every pquery as a point mass concentrated on the\
                    \ highest-weight placement.\n  --pp              Use posterior\
                    \ probability for the weight.\n  -c                Reference package\
                    \ path.\n  -o                Specify the filename to write to.\n\
                    \  --out-dir         Specify the directory to write files to.\n\
                    \  --prefix          Specify a string to be prepended to filenames.\n\
                    \  --no-csv          Output the results as a padded matrix instead\
                    \ of csv.\n  --node-numbers    Put the node numbers in where the\
                    \ bootstraps usually go.\n  --seed            Set the random seed,\
                    \ an integer > 0. Default is 1.\n  -v                If specified,\
                    \ write progress output to stderr.\n  -t                If specified,\
                    \ the path to write the trimmed tree to.\n  --leaves         \
                    \ The maximum number of leaves to keep in the tree.\n  --max-adcl\
                    \        The maximum ADCL that a solution can have.\n  --algorithm\
                    \       Which algorithm to use to prune leaves. Choices are 'greedy',\
                    \ 'full', 'force', and 'pam'. Default full.\n  --all-adcls-file\
                    \  If specified, write out a csv file containing every intermediate\
                    \ computed ADCL.\n  --log             If specified with the full\
                    \ algorithm, write out a csv file containing solutions at every\
                    \ internal node.\n  --always-include  If specified, the leaf names\
                    \ read from the provided file will not be trimmed.\n  --leaf-mass\
                    \       Fraction of mass to be distributed uniformly across leaves.\
                    \ Default 0.\n  -help             Display this list of options\n\
                    \  --help            Display this list of options\n"
                  generated_using: *id004
                  docker_image:
                usage: []
                help_flag:
                usage_flag:
                version_flag:
                help_text: "Here is a list of commands available using this interface:\n\
                  \  rppr\n    check          checks a reference package\n    convex_taxids\
                  \  determines convex tax_ids per-rank in a refpkg\n    convexify\
                  \      identifies minimal leaf set to cut for taxonomic concordance\n\
                  \    infer          infers classifications of unclassified sequences\
                  \ in a reference package\n    info           gives information about\
                  \ a reference package\n    min_adcl       finds a good collection\
                  \ of sequences to cut from a placefile's ref tree\n    min_adcl_tree\
                  \  finds a good collection of sequences to cut from a tree\n   \
                  \ pdprune        prunes the tree to maximize PD\n    prep_db   \
                  \     makes SQL enabling taxonomic querying of placement results\n\
                  \    prepsim        makes a simulation by taking out taxids and\
                  \ turning them into fake placements\n    reclass        reclassifies\
                  \ nonconvex sequences in a reference package\n    ref_tree     \
                  \  writes a taxonomically annotated reference tree and an induced\
                  \ taxonomic tree\n    reroot         reroots a given reference package\
                  \ in place\n\nTo get more help about a given command, type rppr\
                  \ COMMAND --help\n\nAdditional flags for rppr:\n  --version  Print\
                  \ version and exit\n  --cmds     Print a list of the available commands.\n\
                  \  --batch    Run the provided batch file of guppy commands\n  --quiet\
                  \    Don't write messages to stdout (unless explicitly requested).\n\
                  \  --help     Display this list of options and subcommands\n  -help\
                  \      Display this list of options and subcommands\n"
                generated_using: *id004
                docker_image:
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c           \
                \   Reference package path. Required.\n  -o              Specify the\
                \ filename to write to.\n  --out-dir       Specify the directory to\
                \ write files to.\n  --prefix        Specify a string to be prepended\
                \ to filenames.\n  --node-numbers  Put the node numbers in where the\
                \ bootstraps usually go.\n  --painted       Use a painted tree in\
                \ place of the taxonomically annotated tree.\n  --rank-colored  Include\
                \ a tree for each rank with taxonomic annotations on every edge.\n\
                \  -help           Display this list of options\n  --help        \
                \  Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id005
              positional:
              - !Positional
                optional: false
                position: 0
                name: infer
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --csv
                description: Output the results as csv instead of a padded matrix.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -j
                description: 'The number of processes to run pplacer with. default:
                  2'
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -p
                description: Calculate posterior probabilities when doing placements.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --placefile
                description: Save the placefile generated by running pplacer to the
                  specified location.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: infer [options] -c my.refpkg\n  -c           Reference\
                \ package path. Required.\n  -o           Specify the filename to\
                \ write to.\n  --out-dir    Specify the directory to write files to.\n\
                \  --prefix     Specify a string to be prepended to filenames.\n \
                \ --csv        Output the results as csv instead of a padded matrix.\n\
                \  -j           The number of processes to run pplacer with. default:\
                \ 2\n  -p           Calculate posterior probabilities when doing placements.\n\
                \  --placefile  Save the placefile generated by running pplacer to\
                \ the specified location.\n  -help        Display this list of options\n\
                \  --help       Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id006
              positional:
              - !Positional
                optional: false
                position: 0
                name: info
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --csv
                description: Output the results as csv instead of a padded matrix.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --taxonomic
                description: Show by-rank taxonomic information
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: info -c my.refpkg\n  -c           Reference package\
                \ path. Required.\n  -o           Specify the filename to write to.\n\
                \  --out-dir    Specify the directory to write files to.\n  --prefix\
                \     Specify a string to be prepended to filenames.\n  --csv    \
                \    Output the results as csv instead of a padded matrix.\n  --taxonomic\
                \  Show by-rank taxonomic information\n  -help        Display this\
                \ list of options\n  --help       Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id007
              positional:
              - !Positional
                optional: false
                position: 0
                name: reclass
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --csv
                description: Output the results as csv instead of a padded matrix.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -j
                description: 'The number of processes to run pplacer with. default:
                  2'
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -p
                description: Calculate posterior probabilities when doing placements.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --placefile
                description: Save the placefile generated by running pplacer to the
                  specified location.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -t
                description: If specified, the path to write the suggestion tree to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: reclass [options] -c my.refpkg\n  -c           Reference\
                \ package path. Required.\n  -o           Specify the filename to\
                \ write to.\n  --out-dir    Specify the directory to write files to.\n\
                \  --prefix     Specify a string to be prepended to filenames.\n \
                \ --csv        Output the results as csv instead of a padded matrix.\n\
                \  -j           The number of processes to run pplacer with. default:\
                \ 2\n  -p           Calculate posterior probabilities when doing placements.\n\
                \  --placefile  Save the placefile generated by running pplacer to\
                \ the specified location.\n  -t           If specified, the path to\
                \ write the suggestion tree to.\n  -help        Display this list\
                \ of options\n  --help       Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id008
              positional:
              - !Positional
                optional: false
                position: 0
                name: prep_db
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --sqlite
                description: Specify the database file to use. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prep_db [options] -c <refpkg>\n  -c        Reference\
                \ package path. Required.\n  --sqlite  Specify the database file to\
                \ use. Required.\n  -help     Display this list of options\n  --help\
                \    Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id009
              positional:
              - !Positional
                optional: false
                position: 0
                name: pdprune
                description: ''
              - !Positional
                optional: false
                position: 1
                name: tree
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --csv
                description: Output the results as csv instead of a padded matrix.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --cutoff
                description: Specify the maximum branch length to be trimmed.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --leaves
                description: Specify the maximum number of leaves to leave un-trimmed.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --names-only
                description: Only split out a list of names, rather than names and
                  PD decrease.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --unsafe
                description: Don't perform internal checks.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --never-prune-from
                description: Provide a file containing sequence names that will not
                  be pruned.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --never-prune-regex-from
                description: Provide a file containing regular expressions; sequence
                  names matching one of these will not be pruned.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: pdprune [options] tree\n  -o                    \
                \    Specify the filename to write to.\n  --out-dir              \
                \   Specify the directory to write files to.\n  --prefix         \
                \         Specify a string to be prepended to filenames.\n  --csv\
                \                     Output the results as csv instead of a padded\
                \ matrix.\n  --cutoff                  Specify the maximum branch\
                \ length to be trimmed.\n  --leaves                  Specify the maximum\
                \ number of leaves to leave un-trimmed.\n  --names-only          \
                \    Only split out a list of names, rather than names and PD decrease.\n\
                \  --unsafe                  Don't perform internal checks.\n  --never-prune-from\
                \        Provide a file containing sequence names that will not be\
                \ pruned.\n  --never-prune-regex-from  Provide a file containing regular\
                \ expressions; sequence names matching one of these will not be pruned.\n\
                \  -help                     Display this list of options\n  --help\
                \                    Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id010
              positional:
              - !Positional
                optional: false
                position: 0
                name: prepsim
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -r
                description: Comma-delimited list of tax_ids to prune.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: prepsim [options] -c my.refpkg\n  -c         Reference\
                \ package path. Required.\n  --out-dir  Specify the directory to write\
                \ files to.\n  --prefix   Specify a string to be prepended to filenames.\
                \ Required.\n  -r         Comma-delimited list of tax_ids to prune.\n\
                \  -help      Display this list of options\n  --help     Display this\
                \ list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id011
              positional:
              - !Positional
                optional: false
                position: 0
                name: convex_taxids
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-csv
                description: Output the results as a padded matrix instead of csv.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: convex_taxids -c my.refpkg\n  -c         Reference\
                \ package path. Required.\n  -o         Specify the filename to write\
                \ to.\n  --out-dir  Specify the directory to write files to.\n  --prefix\
                \   Specify a string to be prepended to filenames.\n  --no-csv   Output\
                \ the results as a padded matrix instead of csv.\n  -help      Display\
                \ this list of options\n  --help     Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id012
              positional:
              - !Positional
                optional: false
                position: 0
                name: rppr
                description: check          checks a reference package
              - !Positional
                optional: false
                position: 1
                name: convex_taxids
                description: determines convex tax_ids per-rank in a refpkg
              - !Positional
                optional: false
                position: 2
                name: convexify
                description: identifies minimal leaf set to cut for taxonomic concordance
              - !Positional
                optional: false
                position: 3
                name: infer
                description: infers classifications of unclassified sequences in a
                  reference package
              - !Positional
                optional: false
                position: 4
                name: info
                description: gives information about a reference package
              - !Positional
                optional: false
                position: 5
                name: min_adcl
                description: finds a good collection of sequences to cut from a placefile's
                  ref tree
              - !Positional
                optional: false
                position: 6
                name: min_adcl_tree
                description: finds a good collection of sequences to cut from a tree
              - !Positional
                optional: false
                position: 7
                name: pdprune
                description: prunes the tree to maximize PD
              - !Positional
                optional: false
                position: 8
                name: prep_db
                description: makes SQL enabling taxonomic querying of placement results
              - !Positional
                optional: false
                position: 9
                name: prepsim
                description: makes a simulation by taking out taxids and turning them
                  into fake placements
              - !Positional
                optional: false
                position: 10
                name: reclass
                description: reclassifies nonconvex sequences in a reference package
              - !Positional
                optional: false
                position: 11
                name: ref_tree
                description: writes a taxonomically annotated reference tree and an
                  induced taxonomic tree
              - !Positional
                optional: false
                position: 12
                name: reroot
                description: reroots a given reference package in place
              named: []
              parent: *id017
              subcommands: []
              usage: []
              help_flag:
              usage_flag:
              version_flag:
              help_text: "Unknown rppr command: rppr\nHere is a list of commands available\
                \ using this interface:\n  rppr\n    check          checks a reference\
                \ package\n    convex_taxids  determines convex tax_ids per-rank in\
                \ a refpkg\n    convexify      identifies minimal leaf set to cut\
                \ for taxonomic concordance\n    infer          infers classifications\
                \ of unclassified sequences in a reference package\n    info     \
                \      gives information about a reference package\n    min_adcl \
                \      finds a good collection of sequences to cut from a placefile's\
                \ ref tree\n    min_adcl_tree  finds a good collection of sequences\
                \ to cut from a tree\n    pdprune        prunes the tree to maximize\
                \ PD\n    prep_db        makes SQL enabling taxonomic querying of\
                \ placement results\n    prepsim        makes a simulation by taking\
                \ out taxids and turning them into fake placements\n    reclass  \
                \      reclassifies nonconvex sequences in a reference package\n \
                \   ref_tree       writes a taxonomically annotated reference tree\
                \ and an induced taxonomic tree\n    reroot         reroots a given\
                \ reference package in place\n\nTo get more help about a given command,\
                \ type rppr COMMAND --help\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id013
              positional:
              - !Positional
                optional: false
                position: 0
                name: convexify
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --node-numbers
                description: Put the node numbers in where the bootstraps usually
                  go.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --tree
                description: A tree file in newick format to work on in place of a
                  reference package.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --colors
                description: A CSV file of the colors on the tree supplied with --tree.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -t
                description: If specified, the path to write the discordance tree
                  to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --cut-seqs
                description: If specified, the path to write a CSV file of cut sequences
                  per-rank to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --alternates
                description: If specified, the path to write a CSV file of alternate
                  colors per-sequence to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --check-all-ranks
                description: When determining alternate colors, check all ranks instead
                  of the least recent uncut rank.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --all-alternates
                description: When determining alternate colors, ignore the taxononomy
                  and show all alternates.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --cutoff
                description: 'Any trees with a maximum badness over this value are
                  skipped. Default: 12.'
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --limit-rank
                description: If specified, only convexify at the given ranks. Ranks
                  are given as a comma-delimited list of names.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --timing
                description: If specified, save timing information for solved trees
                  to a CSV file.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --rooted
                description: Strictly evaluate convexity; ensure that each color sits
                  in its own rooted subtree.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --naive
                description: Use the naive convexify algorithm.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-early
                description: Don't terminate early when convexifying.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors\
                \ my.csv]\n  -c                 Reference package path. Required.\n\
                \  --node-numbers     Put the node numbers in where the bootstraps\
                \ usually go.\n  --tree             A tree file in newick format to\
                \ work on in place of a reference package.\n  --colors           A\
                \ CSV file of the colors on the tree supplied with --tree.\n  -t \
                \                If specified, the path to write the discordance tree\
                \ to.\n  --cut-seqs         If specified, the path to write a CSV\
                \ file of cut sequences per-rank to.\n  --alternates       If specified,\
                \ the path to write a CSV file of alternate colors per-sequence to.\n\
                \  --check-all-ranks  When determining alternate colors, check all\
                \ ranks instead of the least recent uncut rank.\n  --all-alternates\
                \   When determining alternate colors, ignore the taxononomy and show\
                \ all alternates.\n  --cutoff           Any trees with a maximum badness\
                \ over this value are skipped. Default: 12.\n  --limit-rank      \
                \ If specified, only convexify at the given ranks. Ranks are given\
                \ as a comma-delimited list of names.\n  --timing           If specified,\
                \ save timing information for solved trees to a CSV file.\n  --rooted\
                \           Strictly evaluate convexity; ensure that each color sits\
                \ in its own rooted subtree.\n  --naive            Use the naive convexify\
                \ algorithm.\n  --no-early         Don't terminate early when convexifying.\n\
                \  -help              Display this list of options\n  --help     \
                \        Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id014
              positional:
              - !Positional
                optional: false
                position: 0
                name: min_adcl_tree
                description: ''
              - !Positional
                optional: false
                position: 1
                name: newick.tre
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-csv
                description: Output the results as a padded matrix instead of csv.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --node-numbers
                description: Put the node numbers in where the bootstraps usually
                  go.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --seed
                description: Set the random seed, an integer > 0. Default is 1.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -v
                description: If specified, write progress output to stderr.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -t
                description: If specified, the path to write the trimmed tree to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --leaves
                description: The maximum number of leaves to keep in the tree.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --max-adcl
                description: The maximum ADCL that a solution can have.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --algorithm
                description: Which algorithm to use to prune leaves. Choices are 'greedy',
                  'full', 'force', and 'pam'. Default full.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --all-adcls-file
                description: If specified, write out a csv file containing every intermediate
                  computed ADCL.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --log
                description: If specified with the full algorithm, write out a csv
                  file containing solutions at every internal node.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --always-include
                description: If specified, the leaf names read from the provided file
                  will not be trimmed.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --query-seqs
                description: A comma-separated list of leaves to turn into query sequences.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: min_adcl_tree [options] newick.tre\n  -o        \
                \        Specify the filename to write to.\n  --out-dir         Specify\
                \ the directory to write files to.\n  --prefix          Specify a\
                \ string to be prepended to filenames.\n  --no-csv          Output\
                \ the results as a padded matrix instead of csv.\n  --node-numbers\
                \    Put the node numbers in where the bootstraps usually go.\n  --seed\
                \            Set the random seed, an integer > 0. Default is 1.\n\
                \  -v                If specified, write progress output to stderr.\n\
                \  -t                If specified, the path to write the trimmed tree\
                \ to.\n  --leaves          The maximum number of leaves to keep in\
                \ the tree.\n  --max-adcl        The maximum ADCL that a solution\
                \ can have.\n  --algorithm       Which algorithm to use to prune leaves.\
                \ Choices are 'greedy', 'full', 'force', and 'pam'. Default full.\n\
                \  --all-adcls-file  If specified, write out a csv file containing\
                \ every intermediate computed ADCL.\n  --log             If specified\
                \ with the full algorithm, write out a csv file containing solutions\
                \ at every internal node.\n  --always-include  If specified, the leaf\
                \ names read from the provided file will not be trimmed.\n  --query-seqs\
                \      A comma-separated list of leaves to turn into query sequences.\n\
                \  -help             Display this list of options\n  --help      \
                \      Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id015
              positional:
              - !Positional
                optional: false
                position: 0
                name: reroot
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path. Required.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: reroot -c my.refpkg\n  -c         Reference package\
                \ path. Required.\n  -o         Specify the filename to write to.\n\
                \  --out-dir  Specify the directory to write files to.\n  --prefix\
                \   Specify a string to be prepended to filenames.\n  -help      Display\
                \ this list of options\n  --help     Display this list of options\n"
              generated_using: *id004
              docker_image:
            - !Command
              command: *id016
              positional:
              - !Positional
                optional: false
                position: 0
                name: min_adcl
                description: ''
              - !Positional
                optional: false
                position: 1
                name: placefile
                description: ''
              named:
              - !Flag
                optional: true
                synonyms:
                - --point-mass
                description: Treat every pquery as a point mass concentrated on the
                  highest-weight placement.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --pp
                description: Use posterior probability for the weight.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -c
                description: Reference package path.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -o
                description: Specify the filename to write to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --out-dir
                description: Specify the directory to write files to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --prefix
                description: Specify a string to be prepended to filenames.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --no-csv
                description: Output the results as a padded matrix instead of csv.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --node-numbers
                description: Put the node numbers in where the bootstraps usually
                  go.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --seed
                description: Set the random seed, an integer > 0. Default is 1.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -v
                description: If specified, write progress output to stderr.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - -t
                description: If specified, the path to write the trimmed tree to.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --leaves
                description: The maximum number of leaves to keep in the tree.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --max-adcl
                description: The maximum ADCL that a solution can have.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --algorithm
                description: Which algorithm to use to prune leaves. Choices are 'greedy',
                  'full', 'force', and 'pam'. Default full.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --all-adcls-file
                description: If specified, write out a csv file containing every intermediate
                  computed ADCL.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --log
                description: If specified with the full algorithm, write out a csv
                  file containing solutions at every internal node.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --always-include
                description: If specified, the leaf names read from the provided file
                  will not be trimmed.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --leaf-mass
                description: Fraction of mass to be distributed uniformly across leaves.
                  Default 0.
                args: !EmptyFlagArg {}
              - !Flag
                optional: true
                synonyms:
                - --help
                description: Display this list of options
                args: !EmptyFlagArg {}
              parent: *id017
              subcommands: []
              usage: []
              help_flag: !Flag
                optional: true
                synonyms:
                - -help
                description: Display this list of options
                args: !EmptyFlagArg {}
              usage_flag:
              version_flag:
              help_text: "usage: min_adcl [options] placefile\n  --point-mass    \
                \  Treat every pquery as a point mass concentrated on the highest-weight\
                \ placement.\n  --pp              Use posterior probability for the\
                \ weight.\n  -c                Reference package path.\n  -o     \
                \           Specify the filename to write to.\n  --out-dir       \
                \  Specify the directory to write files to.\n  --prefix          Specify\
                \ a string to be prepended to filenames.\n  --no-csv          Output\
                \ the results as a padded matrix instead of csv.\n  --node-numbers\
                \    Put the node numbers in where the bootstraps usually go.\n  --seed\
                \            Set the random seed, an integer > 0. Default is 1.\n\
                \  -v                If specified, write progress output to stderr.\n\
                \  -t                If specified, the path to write the trimmed tree\
                \ to.\n  --leaves          The maximum number of leaves to keep in\
                \ the tree.\n  --max-adcl        The maximum ADCL that a solution\
                \ can have.\n  --algorithm       Which algorithm to use to prune leaves.\
                \ Choices are 'greedy', 'full', 'force', and 'pam'. Default full.\n\
                \  --all-adcls-file  If specified, write out a csv file containing\
                \ every intermediate computed ADCL.\n  --log             If specified\
                \ with the full algorithm, write out a csv file containing solutions\
                \ at every internal node.\n  --always-include  If specified, the leaf\
                \ names read from the provided file will not be trimmed.\n  --leaf-mass\
                \       Fraction of mass to be distributed uniformly across leaves.\
                \ Default 0.\n  -help             Display this list of options\n \
                \ --help            Display this list of options\n"
              generated_using: *id004
              docker_image:
            usage: []
            help_flag:
            usage_flag:
            version_flag:
            help_text: "Here is a list of commands available using this interface:\n\
              \  rppr\n    check          checks a reference package\n    convex_taxids\
              \  determines convex tax_ids per-rank in a refpkg\n    convexify   \
              \   identifies minimal leaf set to cut for taxonomic concordance\n \
              \   infer          infers classifications of unclassified sequences\
              \ in a reference package\n    info           gives information about\
              \ a reference package\n    min_adcl       finds a good collection of\
              \ sequences to cut from a placefile's ref tree\n    min_adcl_tree  finds\
              \ a good collection of sequences to cut from a tree\n    pdprune   \
              \     prunes the tree to maximize PD\n    prep_db        makes SQL enabling\
              \ taxonomic querying of placement results\n    prepsim        makes\
              \ a simulation by taking out taxids and turning them into fake placements\n\
              \    reclass        reclassifies nonconvex sequences in a reference\
              \ package\n    ref_tree       writes a taxonomically annotated reference\
              \ tree and an induced taxonomic tree\n    reroot         reroots a given\
              \ reference package in place\n\nTo get more help about a given command,\
              \ type rppr COMMAND --help\n\nAdditional flags for rppr:\n  --version\
              \  Print version and exit\n  --cmds     Print a list of the available\
              \ commands.\n  --batch    Run the provided batch file of guppy commands\n\
              \  --quiet    Don't write messages to stdout (unless explicitly requested).\n\
              \  --help     Display this list of options and subcommands\n  -help\
              \      Display this list of options and subcommands\n"
            generated_using: *id004
            docker_image:
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c              Reference\
            \ package path. Required.\n  -o              Specify the filename to write\
            \ to.\n  --out-dir       Specify the directory to write files to.\n  --prefix\
            \        Specify a string to be prepended to filenames.\n  --node-numbers\
            \  Put the node numbers in where the bootstraps usually go.\n  --painted\
            \       Use a painted tree in place of the taxonomically annotated tree.\n\
            \  --rank-colored  Include a tree for each rank with taxonomic annotations\
            \ on every edge.\n  -help           Display this list of options\n  --help\
            \          Display this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id005
          positional:
          - !Positional
            optional: false
            position: 0
            name: infer
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --csv
            description: Output the results as csv instead of a padded matrix.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -j
            description: 'The number of processes to run pplacer with. default: 2'
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -p
            description: Calculate posterior probabilities when doing placements.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --placefile
            description: Save the placefile generated by running pplacer to the specified
              location.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: infer [options] -c my.refpkg\n  -c           Reference\
            \ package path. Required.\n  -o           Specify the filename to write\
            \ to.\n  --out-dir    Specify the directory to write files to.\n  --prefix\
            \     Specify a string to be prepended to filenames.\n  --csv        Output\
            \ the results as csv instead of a padded matrix.\n  -j           The number\
            \ of processes to run pplacer with. default: 2\n  -p           Calculate\
            \ posterior probabilities when doing placements.\n  --placefile  Save\
            \ the placefile generated by running pplacer to the specified location.\n\
            \  -help        Display this list of options\n  --help       Display this\
            \ list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id006
          positional:
          - !Positional
            optional: false
            position: 0
            name: info
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --csv
            description: Output the results as csv instead of a padded matrix.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --taxonomic
            description: Show by-rank taxonomic information
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: info -c my.refpkg\n  -c           Reference package path.\
            \ Required.\n  -o           Specify the filename to write to.\n  --out-dir\
            \    Specify the directory to write files to.\n  --prefix     Specify\
            \ a string to be prepended to filenames.\n  --csv        Output the results\
            \ as csv instead of a padded matrix.\n  --taxonomic  Show by-rank taxonomic\
            \ information\n  -help        Display this list of options\n  --help \
            \      Display this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id007
          positional:
          - !Positional
            optional: false
            position: 0
            name: reclass
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --csv
            description: Output the results as csv instead of a padded matrix.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -j
            description: 'The number of processes to run pplacer with. default: 2'
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -p
            description: Calculate posterior probabilities when doing placements.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --placefile
            description: Save the placefile generated by running pplacer to the specified
              location.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -t
            description: If specified, the path to write the suggestion tree to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: reclass [options] -c my.refpkg\n  -c           Reference\
            \ package path. Required.\n  -o           Specify the filename to write\
            \ to.\n  --out-dir    Specify the directory to write files to.\n  --prefix\
            \     Specify a string to be prepended to filenames.\n  --csv        Output\
            \ the results as csv instead of a padded matrix.\n  -j           The number\
            \ of processes to run pplacer with. default: 2\n  -p           Calculate\
            \ posterior probabilities when doing placements.\n  --placefile  Save\
            \ the placefile generated by running pplacer to the specified location.\n\
            \  -t           If specified, the path to write the suggestion tree to.\n\
            \  -help        Display this list of options\n  --help       Display this\
            \ list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id008
          positional:
          - !Positional
            optional: false
            position: 0
            name: prep_db
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --sqlite
            description: Specify the database file to use. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prep_db [options] -c <refpkg>\n  -c        Reference\
            \ package path. Required.\n  --sqlite  Specify the database file to use.\
            \ Required.\n  -help     Display this list of options\n  --help    Display\
            \ this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id009
          positional:
          - !Positional
            optional: false
            position: 0
            name: pdprune
            description: ''
          - !Positional
            optional: false
            position: 1
            name: tree
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --csv
            description: Output the results as csv instead of a padded matrix.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --cutoff
            description: Specify the maximum branch length to be trimmed.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --leaves
            description: Specify the maximum number of leaves to leave un-trimmed.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --names-only
            description: Only split out a list of names, rather than names and PD
              decrease.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --unsafe
            description: Don't perform internal checks.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --never-prune-from
            description: Provide a file containing sequence names that will not be
              pruned.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --never-prune-regex-from
            description: Provide a file containing regular expressions; sequence names
              matching one of these will not be pruned.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: pdprune [options] tree\n  -o                        Specify\
            \ the filename to write to.\n  --out-dir                 Specify the directory\
            \ to write files to.\n  --prefix                  Specify a string to\
            \ be prepended to filenames.\n  --csv                     Output the results\
            \ as csv instead of a padded matrix.\n  --cutoff                  Specify\
            \ the maximum branch length to be trimmed.\n  --leaves               \
            \   Specify the maximum number of leaves to leave un-trimmed.\n  --names-only\
            \              Only split out a list of names, rather than names and PD\
            \ decrease.\n  --unsafe                  Don't perform internal checks.\n\
            \  --never-prune-from        Provide a file containing sequence names\
            \ that will not be pruned.\n  --never-prune-regex-from  Provide a file\
            \ containing regular expressions; sequence names matching one of these\
            \ will not be pruned.\n  -help                     Display this list of\
            \ options\n  --help                    Display this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id010
          positional:
          - !Positional
            optional: false
            position: 0
            name: prepsim
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -r
            description: Comma-delimited list of tax_ids to prune.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: prepsim [options] -c my.refpkg\n  -c         Reference\
            \ package path. Required.\n  --out-dir  Specify the directory to write\
            \ files to.\n  --prefix   Specify a string to be prepended to filenames.\
            \ Required.\n  -r         Comma-delimited list of tax_ids to prune.\n\
            \  -help      Display this list of options\n  --help     Display this\
            \ list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id011
          positional:
          - !Positional
            optional: false
            position: 0
            name: convex_taxids
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-csv
            description: Output the results as a padded matrix instead of csv.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: convex_taxids -c my.refpkg\n  -c         Reference package\
            \ path. Required.\n  -o         Specify the filename to write to.\n  --out-dir\
            \  Specify the directory to write files to.\n  --prefix   Specify a string\
            \ to be prepended to filenames.\n  --no-csv   Output the results as a\
            \ padded matrix instead of csv.\n  -help      Display this list of options\n\
            \  --help     Display this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id012
          positional:
          - !Positional
            optional: false
            position: 0
            name: rppr
            description: check          checks a reference package
          - !Positional
            optional: false
            position: 1
            name: convex_taxids
            description: determines convex tax_ids per-rank in a refpkg
          - !Positional
            optional: false
            position: 2
            name: convexify
            description: identifies minimal leaf set to cut for taxonomic concordance
          - !Positional
            optional: false
            position: 3
            name: infer
            description: infers classifications of unclassified sequences in a reference
              package
          - !Positional
            optional: false
            position: 4
            name: info
            description: gives information about a reference package
          - !Positional
            optional: false
            position: 5
            name: min_adcl
            description: finds a good collection of sequences to cut from a placefile's
              ref tree
          - !Positional
            optional: false
            position: 6
            name: min_adcl_tree
            description: finds a good collection of sequences to cut from a tree
          - !Positional
            optional: false
            position: 7
            name: pdprune
            description: prunes the tree to maximize PD
          - !Positional
            optional: false
            position: 8
            name: prep_db
            description: makes SQL enabling taxonomic querying of placement results
          - !Positional
            optional: false
            position: 9
            name: prepsim
            description: makes a simulation by taking out taxids and turning them
              into fake placements
          - !Positional
            optional: false
            position: 10
            name: reclass
            description: reclassifies nonconvex sequences in a reference package
          - !Positional
            optional: false
            position: 11
            name: ref_tree
            description: writes a taxonomically annotated reference tree and an induced
              taxonomic tree
          - !Positional
            optional: false
            position: 12
            name: reroot
            description: reroots a given reference package in place
          named: []
          parent: *id018
          subcommands: []
          usage: []
          help_flag:
          usage_flag:
          version_flag:
          help_text: "Unknown rppr command: rppr\nHere is a list of commands available\
            \ using this interface:\n  rppr\n    check          checks a reference\
            \ package\n    convex_taxids  determines convex tax_ids per-rank in a\
            \ refpkg\n    convexify      identifies minimal leaf set to cut for taxonomic\
            \ concordance\n    infer          infers classifications of unclassified\
            \ sequences in a reference package\n    info           gives information\
            \ about a reference package\n    min_adcl       finds a good collection\
            \ of sequences to cut from a placefile's ref tree\n    min_adcl_tree \
            \ finds a good collection of sequences to cut from a tree\n    pdprune\
            \        prunes the tree to maximize PD\n    prep_db        makes SQL\
            \ enabling taxonomic querying of placement results\n    prepsim      \
            \  makes a simulation by taking out taxids and turning them into fake\
            \ placements\n    reclass        reclassifies nonconvex sequences in a\
            \ reference package\n    ref_tree       writes a taxonomically annotated\
            \ reference tree and an induced taxonomic tree\n    reroot         reroots\
            \ a given reference package in place\n\nTo get more help about a given\
            \ command, type rppr COMMAND --help\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id013
          positional:
          - !Positional
            optional: false
            position: 0
            name: convexify
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --node-numbers
            description: Put the node numbers in where the bootstraps usually go.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --tree
            description: A tree file in newick format to work on in place of a reference
              package.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --colors
            description: A CSV file of the colors on the tree supplied with --tree.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -t
            description: If specified, the path to write the discordance tree to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --cut-seqs
            description: If specified, the path to write a CSV file of cut sequences
              per-rank to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --alternates
            description: If specified, the path to write a CSV file of alternate colors
              per-sequence to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --check-all-ranks
            description: When determining alternate colors, check all ranks instead
              of the least recent uncut rank.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --all-alternates
            description: When determining alternate colors, ignore the taxononomy
              and show all alternates.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --cutoff
            description: 'Any trees with a maximum badness over this value are skipped.
              Default: 12.'
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --limit-rank
            description: If specified, only convexify at the given ranks. Ranks are
              given as a comma-delimited list of names.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --timing
            description: If specified, save timing information for solved trees to
              a CSV file.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --rooted
            description: Strictly evaluate convexity; ensure that each color sits
              in its own rooted subtree.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --naive
            description: Use the naive convexify algorithm.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-early
            description: Don't terminate early when convexifying.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors my.csv]\n\
            \  -c                 Reference package path. Required.\n  --node-numbers\
            \     Put the node numbers in where the bootstraps usually go.\n  --tree\
            \             A tree file in newick format to work on in place of a reference\
            \ package.\n  --colors           A CSV file of the colors on the tree\
            \ supplied with --tree.\n  -t                 If specified, the path to\
            \ write the discordance tree to.\n  --cut-seqs         If specified, the\
            \ path to write a CSV file of cut sequences per-rank to.\n  --alternates\
            \       If specified, the path to write a CSV file of alternate colors\
            \ per-sequence to.\n  --check-all-ranks  When determining alternate colors,\
            \ check all ranks instead of the least recent uncut rank.\n  --all-alternates\
            \   When determining alternate colors, ignore the taxononomy and show\
            \ all alternates.\n  --cutoff           Any trees with a maximum badness\
            \ over this value are skipped. Default: 12.\n  --limit-rank       If specified,\
            \ only convexify at the given ranks. Ranks are given as a comma-delimited\
            \ list of names.\n  --timing           If specified, save timing information\
            \ for solved trees to a CSV file.\n  --rooted           Strictly evaluate\
            \ convexity; ensure that each color sits in its own rooted subtree.\n\
            \  --naive            Use the naive convexify algorithm.\n  --no-early\
            \         Don't terminate early when convexifying.\n  -help          \
            \    Display this list of options\n  --help             Display this list\
            \ of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id014
          positional:
          - !Positional
            optional: false
            position: 0
            name: min_adcl_tree
            description: ''
          - !Positional
            optional: false
            position: 1
            name: newick.tre
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-csv
            description: Output the results as a padded matrix instead of csv.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --node-numbers
            description: Put the node numbers in where the bootstraps usually go.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --seed
            description: Set the random seed, an integer > 0. Default is 1.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -v
            description: If specified, write progress output to stderr.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -t
            description: If specified, the path to write the trimmed tree to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --leaves
            description: The maximum number of leaves to keep in the tree.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --max-adcl
            description: The maximum ADCL that a solution can have.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --algorithm
            description: Which algorithm to use to prune leaves. Choices are 'greedy',
              'full', 'force', and 'pam'. Default full.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --all-adcls-file
            description: If specified, write out a csv file containing every intermediate
              computed ADCL.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --log
            description: If specified with the full algorithm, write out a csv file
              containing solutions at every internal node.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --always-include
            description: If specified, the leaf names read from the provided file
              will not be trimmed.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --query-seqs
            description: A comma-separated list of leaves to turn into query sequences.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: min_adcl_tree [options] newick.tre\n  -o            \
            \    Specify the filename to write to.\n  --out-dir         Specify the\
            \ directory to write files to.\n  --prefix          Specify a string to\
            \ be prepended to filenames.\n  --no-csv          Output the results as\
            \ a padded matrix instead of csv.\n  --node-numbers    Put the node numbers\
            \ in where the bootstraps usually go.\n  --seed            Set the random\
            \ seed, an integer > 0. Default is 1.\n  -v                If specified,\
            \ write progress output to stderr.\n  -t                If specified,\
            \ the path to write the trimmed tree to.\n  --leaves          The maximum\
            \ number of leaves to keep in the tree.\n  --max-adcl        The maximum\
            \ ADCL that a solution can have.\n  --algorithm       Which algorithm\
            \ to use to prune leaves. Choices are 'greedy', 'full', 'force', and 'pam'.\
            \ Default full.\n  --all-adcls-file  If specified, write out a csv file\
            \ containing every intermediate computed ADCL.\n  --log             If\
            \ specified with the full algorithm, write out a csv file containing solutions\
            \ at every internal node.\n  --always-include  If specified, the leaf\
            \ names read from the provided file will not be trimmed.\n  --query-seqs\
            \      A comma-separated list of leaves to turn into query sequences.\n\
            \  -help             Display this list of options\n  --help          \
            \  Display this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id015
          positional:
          - !Positional
            optional: false
            position: 0
            name: reroot
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path. Required.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: reroot -c my.refpkg\n  -c         Reference package path.\
            \ Required.\n  -o         Specify the filename to write to.\n  --out-dir\
            \  Specify the directory to write files to.\n  --prefix   Specify a string\
            \ to be prepended to filenames.\n  -help      Display this list of options\n\
            \  --help     Display this list of options\n"
          generated_using: *id004
          docker_image:
        - !Command
          command: *id016
          positional:
          - !Positional
            optional: false
            position: 0
            name: min_adcl
            description: ''
          - !Positional
            optional: false
            position: 1
            name: placefile
            description: ''
          named:
          - !Flag
            optional: true
            synonyms:
            - --point-mass
            description: Treat every pquery as a point mass concentrated on the highest-weight
              placement.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --pp
            description: Use posterior probability for the weight.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -c
            description: Reference package path.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -o
            description: Specify the filename to write to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --out-dir
            description: Specify the directory to write files to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --prefix
            description: Specify a string to be prepended to filenames.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --no-csv
            description: Output the results as a padded matrix instead of csv.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --node-numbers
            description: Put the node numbers in where the bootstraps usually go.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --seed
            description: Set the random seed, an integer > 0. Default is 1.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -v
            description: If specified, write progress output to stderr.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - -t
            description: If specified, the path to write the trimmed tree to.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --leaves
            description: The maximum number of leaves to keep in the tree.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --max-adcl
            description: The maximum ADCL that a solution can have.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --algorithm
            description: Which algorithm to use to prune leaves. Choices are 'greedy',
              'full', 'force', and 'pam'. Default full.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --all-adcls-file
            description: If specified, write out a csv file containing every intermediate
              computed ADCL.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --log
            description: If specified with the full algorithm, write out a csv file
              containing solutions at every internal node.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --always-include
            description: If specified, the leaf names read from the provided file
              will not be trimmed.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --leaf-mass
            description: Fraction of mass to be distributed uniformly across leaves.
              Default 0.
            args: !EmptyFlagArg {}
          - !Flag
            optional: true
            synonyms:
            - --help
            description: Display this list of options
            args: !EmptyFlagArg {}
          parent: *id018
          subcommands: []
          usage: []
          help_flag: !Flag
            optional: true
            synonyms:
            - -help
            description: Display this list of options
            args: !EmptyFlagArg {}
          usage_flag:
          version_flag:
          help_text: "usage: min_adcl [options] placefile\n  --point-mass      Treat\
            \ every pquery as a point mass concentrated on the highest-weight placement.\n\
            \  --pp              Use posterior probability for the weight.\n  -c \
            \               Reference package path.\n  -o                Specify the\
            \ filename to write to.\n  --out-dir         Specify the directory to\
            \ write files to.\n  --prefix          Specify a string to be prepended\
            \ to filenames.\n  --no-csv          Output the results as a padded matrix\
            \ instead of csv.\n  --node-numbers    Put the node numbers in where the\
            \ bootstraps usually go.\n  --seed            Set the random seed, an\
            \ integer > 0. Default is 1.\n  -v                If specified, write\
            \ progress output to stderr.\n  -t                If specified, the path\
            \ to write the trimmed tree to.\n  --leaves          The maximum number\
            \ of leaves to keep in the tree.\n  --max-adcl        The maximum ADCL\
            \ that a solution can have.\n  --algorithm       Which algorithm to use\
            \ to prune leaves. Choices are 'greedy', 'full', 'force', and 'pam'. Default\
            \ full.\n  --all-adcls-file  If specified, write out a csv file containing\
            \ every intermediate computed ADCL.\n  --log             If specified\
            \ with the full algorithm, write out a csv file containing solutions at\
            \ every internal node.\n  --always-include  If specified, the leaf names\
            \ read from the provided file will not be trimmed.\n  --leaf-mass    \
            \   Fraction of mass to be distributed uniformly across leaves. Default\
            \ 0.\n  -help             Display this list of options\n  --help     \
            \       Display this list of options\n"
          generated_using: *id004
          docker_image:
        usage: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Here is a list of commands available using this interface:\n \
          \ rppr\n    check          checks a reference package\n    convex_taxids\
          \  determines convex tax_ids per-rank in a refpkg\n    convexify      identifies\
          \ minimal leaf set to cut for taxonomic concordance\n    infer         \
          \ infers classifications of unclassified sequences in a reference package\n\
          \    info           gives information about a reference package\n    min_adcl\
          \       finds a good collection of sequences to cut from a placefile's ref\
          \ tree\n    min_adcl_tree  finds a good collection of sequences to cut from\
          \ a tree\n    pdprune        prunes the tree to maximize PD\n    prep_db\
          \        makes SQL enabling taxonomic querying of placement results\n  \
          \  prepsim        makes a simulation by taking out taxids and turning them\
          \ into fake placements\n    reclass        reclassifies nonconvex sequences\
          \ in a reference package\n    ref_tree       writes a taxonomically annotated\
          \ reference tree and an induced taxonomic tree\n    reroot         reroots\
          \ a given reference package in place\n\nTo get more help about a given command,\
          \ type rppr COMMAND --help\n\nAdditional flags for rppr:\n  --version  Print\
          \ version and exit\n  --cmds     Print a list of the available commands.\n\
          \  --batch    Run the provided batch file of guppy commands\n  --quiet \
          \   Don't write messages to stdout (unless explicitly requested).\n  --help\
          \     Display this list of options and subcommands\n  -help      Display\
          \ this list of options and subcommands\n"
        generated_using: *id004
        docker_image:
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c              Reference\
        \ package path. Required.\n  -o              Specify the filename to write\
        \ to.\n  --out-dir       Specify the directory to write files to.\n  --prefix\
        \        Specify a string to be prepended to filenames.\n  --node-numbers\
        \  Put the node numbers in where the bootstraps usually go.\n  --painted \
        \      Use a painted tree in place of the taxonomically annotated tree.\n\
        \  --rank-colored  Include a tree for each rank with taxonomic annotations\
        \ on every edge.\n  -help           Display this list of options\n  --help\
        \          Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id005
      positional:
      - !Positional
        optional: false
        position: 0
        name: infer
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --csv
        description: Output the results as csv instead of a padded matrix.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -j
        description: 'The number of processes to run pplacer with. default: 2'
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -p
        description: Calculate posterior probabilities when doing placements.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --placefile
        description: Save the placefile generated by running pplacer to the specified
          location.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: infer [options] -c my.refpkg\n  -c           Reference package\
        \ path. Required.\n  -o           Specify the filename to write to.\n  --out-dir\
        \    Specify the directory to write files to.\n  --prefix     Specify a string\
        \ to be prepended to filenames.\n  --csv        Output the results as csv\
        \ instead of a padded matrix.\n  -j           The number of processes to run\
        \ pplacer with. default: 2\n  -p           Calculate posterior probabilities\
        \ when doing placements.\n  --placefile  Save the placefile generated by running\
        \ pplacer to the specified location.\n  -help        Display this list of\
        \ options\n  --help       Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id006
      positional:
      - !Positional
        optional: false
        position: 0
        name: info
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --csv
        description: Output the results as csv instead of a padded matrix.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --taxonomic
        description: Show by-rank taxonomic information
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: info -c my.refpkg\n  -c           Reference package path.\
        \ Required.\n  -o           Specify the filename to write to.\n  --out-dir\
        \    Specify the directory to write files to.\n  --prefix     Specify a string\
        \ to be prepended to filenames.\n  --csv        Output the results as csv\
        \ instead of a padded matrix.\n  --taxonomic  Show by-rank taxonomic information\n\
        \  -help        Display this list of options\n  --help       Display this\
        \ list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id007
      positional:
      - !Positional
        optional: false
        position: 0
        name: reclass
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --csv
        description: Output the results as csv instead of a padded matrix.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -j
        description: 'The number of processes to run pplacer with. default: 2'
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -p
        description: Calculate posterior probabilities when doing placements.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --placefile
        description: Save the placefile generated by running pplacer to the specified
          location.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -t
        description: If specified, the path to write the suggestion tree to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: reclass [options] -c my.refpkg\n  -c           Reference\
        \ package path. Required.\n  -o           Specify the filename to write to.\n\
        \  --out-dir    Specify the directory to write files to.\n  --prefix     Specify\
        \ a string to be prepended to filenames.\n  --csv        Output the results\
        \ as csv instead of a padded matrix.\n  -j           The number of processes\
        \ to run pplacer with. default: 2\n  -p           Calculate posterior probabilities\
        \ when doing placements.\n  --placefile  Save the placefile generated by running\
        \ pplacer to the specified location.\n  -t           If specified, the path\
        \ to write the suggestion tree to.\n  -help        Display this list of options\n\
        \  --help       Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id008
      positional:
      - !Positional
        optional: false
        position: 0
        name: prep_db
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --sqlite
        description: Specify the database file to use. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prep_db [options] -c <refpkg>\n  -c        Reference package\
        \ path. Required.\n  --sqlite  Specify the database file to use. Required.\n\
        \  -help     Display this list of options\n  --help    Display this list of\
        \ options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id009
      positional:
      - !Positional
        optional: false
        position: 0
        name: pdprune
        description: ''
      - !Positional
        optional: false
        position: 1
        name: tree
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --csv
        description: Output the results as csv instead of a padded matrix.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --cutoff
        description: Specify the maximum branch length to be trimmed.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --leaves
        description: Specify the maximum number of leaves to leave un-trimmed.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --names-only
        description: Only split out a list of names, rather than names and PD decrease.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --unsafe
        description: Don't perform internal checks.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --never-prune-from
        description: Provide a file containing sequence names that will not be pruned.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --never-prune-regex-from
        description: Provide a file containing regular expressions; sequence names
          matching one of these will not be pruned.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: pdprune [options] tree\n  -o                        Specify\
        \ the filename to write to.\n  --out-dir                 Specify the directory\
        \ to write files to.\n  --prefix                  Specify a string to be prepended\
        \ to filenames.\n  --csv                     Output the results as csv instead\
        \ of a padded matrix.\n  --cutoff                  Specify the maximum branch\
        \ length to be trimmed.\n  --leaves                  Specify the maximum number\
        \ of leaves to leave un-trimmed.\n  --names-only              Only split out\
        \ a list of names, rather than names and PD decrease.\n  --unsafe        \
        \          Don't perform internal checks.\n  --never-prune-from        Provide\
        \ a file containing sequence names that will not be pruned.\n  --never-prune-regex-from\
        \  Provide a file containing regular expressions; sequence names matching\
        \ one of these will not be pruned.\n  -help                     Display this\
        \ list of options\n  --help                    Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id010
      positional:
      - !Positional
        optional: false
        position: 0
        name: prepsim
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -r
        description: Comma-delimited list of tax_ids to prune.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: prepsim [options] -c my.refpkg\n  -c         Reference package\
        \ path. Required.\n  --out-dir  Specify the directory to write files to.\n\
        \  --prefix   Specify a string to be prepended to filenames. Required.\n \
        \ -r         Comma-delimited list of tax_ids to prune.\n  -help      Display\
        \ this list of options\n  --help     Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id011
      positional:
      - !Positional
        optional: false
        position: 0
        name: convex_taxids
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-csv
        description: Output the results as a padded matrix instead of csv.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: convex_taxids -c my.refpkg\n  -c         Reference package\
        \ path. Required.\n  -o         Specify the filename to write to.\n  --out-dir\
        \  Specify the directory to write files to.\n  --prefix   Specify a string\
        \ to be prepended to filenames.\n  --no-csv   Output the results as a padded\
        \ matrix instead of csv.\n  -help      Display this list of options\n  --help\
        \     Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id012
      positional:
      - !Positional
        optional: false
        position: 0
        name: rppr
        description: check          checks a reference package
      - !Positional
        optional: false
        position: 1
        name: convex_taxids
        description: determines convex tax_ids per-rank in a refpkg
      - !Positional
        optional: false
        position: 2
        name: convexify
        description: identifies minimal leaf set to cut for taxonomic concordance
      - !Positional
        optional: false
        position: 3
        name: infer
        description: infers classifications of unclassified sequences in a reference
          package
      - !Positional
        optional: false
        position: 4
        name: info
        description: gives information about a reference package
      - !Positional
        optional: false
        position: 5
        name: min_adcl
        description: finds a good collection of sequences to cut from a placefile's
          ref tree
      - !Positional
        optional: false
        position: 6
        name: min_adcl_tree
        description: finds a good collection of sequences to cut from a tree
      - !Positional
        optional: false
        position: 7
        name: pdprune
        description: prunes the tree to maximize PD
      - !Positional
        optional: false
        position: 8
        name: prep_db
        description: makes SQL enabling taxonomic querying of placement results
      - !Positional
        optional: false
        position: 9
        name: prepsim
        description: makes a simulation by taking out taxids and turning them into
          fake placements
      - !Positional
        optional: false
        position: 10
        name: reclass
        description: reclassifies nonconvex sequences in a reference package
      - !Positional
        optional: false
        position: 11
        name: ref_tree
        description: writes a taxonomically annotated reference tree and an induced
          taxonomic tree
      - !Positional
        optional: false
        position: 12
        name: reroot
        description: reroots a given reference package in place
      named: []
      parent: *id019
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Unknown rppr command: rppr\nHere is a list of commands available\
        \ using this interface:\n  rppr\n    check          checks a reference package\n\
        \    convex_taxids  determines convex tax_ids per-rank in a refpkg\n    convexify\
        \      identifies minimal leaf set to cut for taxonomic concordance\n    infer\
        \          infers classifications of unclassified sequences in a reference\
        \ package\n    info           gives information about a reference package\n\
        \    min_adcl       finds a good collection of sequences to cut from a placefile's\
        \ ref tree\n    min_adcl_tree  finds a good collection of sequences to cut\
        \ from a tree\n    pdprune        prunes the tree to maximize PD\n    prep_db\
        \        makes SQL enabling taxonomic querying of placement results\n    prepsim\
        \        makes a simulation by taking out taxids and turning them into fake\
        \ placements\n    reclass        reclassifies nonconvex sequences in a reference\
        \ package\n    ref_tree       writes a taxonomically annotated reference tree\
        \ and an induced taxonomic tree\n    reroot         reroots a given reference\
        \ package in place\n\nTo get more help about a given command, type rppr COMMAND\
        \ --help\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id013
      positional:
      - !Positional
        optional: false
        position: 0
        name: convexify
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --node-numbers
        description: Put the node numbers in where the bootstraps usually go.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --tree
        description: A tree file in newick format to work on in place of a reference
          package.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --colors
        description: A CSV file of the colors on the tree supplied with --tree.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -t
        description: If specified, the path to write the discordance tree to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --cut-seqs
        description: If specified, the path to write a CSV file of cut sequences per-rank
          to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --alternates
        description: If specified, the path to write a CSV file of alternate colors
          per-sequence to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --check-all-ranks
        description: When determining alternate colors, check all ranks instead of
          the least recent uncut rank.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --all-alternates
        description: When determining alternate colors, ignore the taxononomy and
          show all alternates.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --cutoff
        description: 'Any trees with a maximum badness over this value are skipped.
          Default: 12.'
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --limit-rank
        description: If specified, only convexify at the given ranks. Ranks are given
          as a comma-delimited list of names.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --timing
        description: If specified, save timing information for solved trees to a CSV
          file.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --rooted
        description: Strictly evaluate convexity; ensure that each color sits in its
          own rooted subtree.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --naive
        description: Use the naive convexify algorithm.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-early
        description: Don't terminate early when convexifying.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors my.csv]\n\
        \  -c                 Reference package path. Required.\n  --node-numbers\
        \     Put the node numbers in where the bootstraps usually go.\n  --tree \
        \            A tree file in newick format to work on in place of a reference\
        \ package.\n  --colors           A CSV file of the colors on the tree supplied\
        \ with --tree.\n  -t                 If specified, the path to write the discordance\
        \ tree to.\n  --cut-seqs         If specified, the path to write a CSV file\
        \ of cut sequences per-rank to.\n  --alternates       If specified, the path\
        \ to write a CSV file of alternate colors per-sequence to.\n  --check-all-ranks\
        \  When determining alternate colors, check all ranks instead of the least\
        \ recent uncut rank.\n  --all-alternates   When determining alternate colors,\
        \ ignore the taxononomy and show all alternates.\n  --cutoff           Any\
        \ trees with a maximum badness over this value are skipped. Default: 12.\n\
        \  --limit-rank       If specified, only convexify at the given ranks. Ranks\
        \ are given as a comma-delimited list of names.\n  --timing           If specified,\
        \ save timing information for solved trees to a CSV file.\n  --rooted    \
        \       Strictly evaluate convexity; ensure that each color sits in its own\
        \ rooted subtree.\n  --naive            Use the naive convexify algorithm.\n\
        \  --no-early         Don't terminate early when convexifying.\n  -help  \
        \            Display this list of options\n  --help             Display this\
        \ list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id014
      positional:
      - !Positional
        optional: false
        position: 0
        name: min_adcl_tree
        description: ''
      - !Positional
        optional: false
        position: 1
        name: newick.tre
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-csv
        description: Output the results as a padded matrix instead of csv.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --node-numbers
        description: Put the node numbers in where the bootstraps usually go.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --seed
        description: Set the random seed, an integer > 0. Default is 1.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -v
        description: If specified, write progress output to stderr.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -t
        description: If specified, the path to write the trimmed tree to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --leaves
        description: The maximum number of leaves to keep in the tree.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --max-adcl
        description: The maximum ADCL that a solution can have.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --algorithm
        description: Which algorithm to use to prune leaves. Choices are 'greedy',
          'full', 'force', and 'pam'. Default full.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --all-adcls-file
        description: If specified, write out a csv file containing every intermediate
          computed ADCL.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --log
        description: If specified with the full algorithm, write out a csv file containing
          solutions at every internal node.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --always-include
        description: If specified, the leaf names read from the provided file will
          not be trimmed.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --query-seqs
        description: A comma-separated list of leaves to turn into query sequences.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: min_adcl_tree [options] newick.tre\n  -o                Specify\
        \ the filename to write to.\n  --out-dir         Specify the directory to\
        \ write files to.\n  --prefix          Specify a string to be prepended to\
        \ filenames.\n  --no-csv          Output the results as a padded matrix instead\
        \ of csv.\n  --node-numbers    Put the node numbers in where the bootstraps\
        \ usually go.\n  --seed            Set the random seed, an integer > 0. Default\
        \ is 1.\n  -v                If specified, write progress output to stderr.\n\
        \  -t                If specified, the path to write the trimmed tree to.\n\
        \  --leaves          The maximum number of leaves to keep in the tree.\n \
        \ --max-adcl        The maximum ADCL that a solution can have.\n  --algorithm\
        \       Which algorithm to use to prune leaves. Choices are 'greedy', 'full',\
        \ 'force', and 'pam'. Default full.\n  --all-adcls-file  If specified, write\
        \ out a csv file containing every intermediate computed ADCL.\n  --log   \
        \          If specified with the full algorithm, write out a csv file containing\
        \ solutions at every internal node.\n  --always-include  If specified, the\
        \ leaf names read from the provided file will not be trimmed.\n  --query-seqs\
        \      A comma-separated list of leaves to turn into query sequences.\n  -help\
        \             Display this list of options\n  --help            Display this\
        \ list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id015
      positional:
      - !Positional
        optional: false
        position: 0
        name: reroot
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path. Required.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: reroot -c my.refpkg\n  -c         Reference package path.\
        \ Required.\n  -o         Specify the filename to write to.\n  --out-dir \
        \ Specify the directory to write files to.\n  --prefix   Specify a string\
        \ to be prepended to filenames.\n  -help      Display this list of options\n\
        \  --help     Display this list of options\n"
      generated_using: *id004
      docker_image:
    - !Command
      command: *id016
      positional:
      - !Positional
        optional: false
        position: 0
        name: min_adcl
        description: ''
      - !Positional
        optional: false
        position: 1
        name: placefile
        description: ''
      named:
      - !Flag
        optional: true
        synonyms:
        - --point-mass
        description: Treat every pquery as a point mass concentrated on the highest-weight
          placement.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --pp
        description: Use posterior probability for the weight.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -c
        description: Reference package path.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -o
        description: Specify the filename to write to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --out-dir
        description: Specify the directory to write files to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --prefix
        description: Specify a string to be prepended to filenames.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --no-csv
        description: Output the results as a padded matrix instead of csv.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --node-numbers
        description: Put the node numbers in where the bootstraps usually go.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --seed
        description: Set the random seed, an integer > 0. Default is 1.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -v
        description: If specified, write progress output to stderr.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - -t
        description: If specified, the path to write the trimmed tree to.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --leaves
        description: The maximum number of leaves to keep in the tree.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --max-adcl
        description: The maximum ADCL that a solution can have.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --algorithm
        description: Which algorithm to use to prune leaves. Choices are 'greedy',
          'full', 'force', and 'pam'. Default full.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --all-adcls-file
        description: If specified, write out a csv file containing every intermediate
          computed ADCL.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --log
        description: If specified with the full algorithm, write out a csv file containing
          solutions at every internal node.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --always-include
        description: If specified, the leaf names read from the provided file will
          not be trimmed.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --leaf-mass
        description: Fraction of mass to be distributed uniformly across leaves. Default
          0.
        args: !EmptyFlagArg {}
      - !Flag
        optional: true
        synonyms:
        - --help
        description: Display this list of options
        args: !EmptyFlagArg {}
      parent: *id019
      subcommands: []
      usage: []
      help_flag: !Flag
        optional: true
        synonyms:
        - -help
        description: Display this list of options
        args: !EmptyFlagArg {}
      usage_flag:
      version_flag:
      help_text: "usage: min_adcl [options] placefile\n  --point-mass      Treat every\
        \ pquery as a point mass concentrated on the highest-weight placement.\n \
        \ --pp              Use posterior probability for the weight.\n  -c      \
        \          Reference package path.\n  -o                Specify the filename\
        \ to write to.\n  --out-dir         Specify the directory to write files to.\n\
        \  --prefix          Specify a string to be prepended to filenames.\n  --no-csv\
        \          Output the results as a padded matrix instead of csv.\n  --node-numbers\
        \    Put the node numbers in where the bootstraps usually go.\n  --seed  \
        \          Set the random seed, an integer > 0. Default is 1.\n  -v      \
        \          If specified, write progress output to stderr.\n  -t          \
        \      If specified, the path to write the trimmed tree to.\n  --leaves  \
        \        The maximum number of leaves to keep in the tree.\n  --max-adcl \
        \       The maximum ADCL that a solution can have.\n  --algorithm       Which\
        \ algorithm to use to prune leaves. Choices are 'greedy', 'full', 'force',\
        \ and 'pam'. Default full.\n  --all-adcls-file  If specified, write out a\
        \ csv file containing every intermediate computed ADCL.\n  --log         \
        \    If specified with the full algorithm, write out a csv file containing\
        \ solutions at every internal node.\n  --always-include  If specified, the\
        \ leaf names read from the provided file will not be trimmed.\n  --leaf-mass\
        \       Fraction of mass to be distributed uniformly across leaves. Default\
        \ 0.\n  -help             Display this list of options\n  --help         \
        \   Display this list of options\n"
      generated_using: *id004
      docker_image:
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Here is a list of commands available using this interface:\n  rppr\n\
      \    check          checks a reference package\n    convex_taxids  determines\
      \ convex tax_ids per-rank in a refpkg\n    convexify      identifies minimal\
      \ leaf set to cut for taxonomic concordance\n    infer          infers classifications\
      \ of unclassified sequences in a reference package\n    info           gives\
      \ information about a reference package\n    min_adcl       finds a good collection\
      \ of sequences to cut from a placefile's ref tree\n    min_adcl_tree  finds\
      \ a good collection of sequences to cut from a tree\n    pdprune        prunes\
      \ the tree to maximize PD\n    prep_db        makes SQL enabling taxonomic querying\
      \ of placement results\n    prepsim        makes a simulation by taking out\
      \ taxids and turning them into fake placements\n    reclass        reclassifies\
      \ nonconvex sequences in a reference package\n    ref_tree       writes a taxonomically\
      \ annotated reference tree and an induced taxonomic tree\n    reroot       \
      \  reroots a given reference package in place\n\nTo get more help about a given\
      \ command, type rppr COMMAND --help\n\nAdditional flags for rppr:\n  --version\
      \  Print version and exit\n  --cmds     Print a list of the available commands.\n\
      \  --batch    Run the provided batch file of guppy commands\n  --quiet    Don't\
      \ write messages to stdout (unless explicitly requested).\n  --help     Display\
      \ this list of options and subcommands\n  -help      Display this list of options\
      \ and subcommands\n"
    generated_using: *id004
    docker_image:
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: ref_tree -o my.xml -c my.refpkg\n  -c              Reference\
    \ package path. Required.\n  -o              Specify the filename to write to.\n\
    \  --out-dir       Specify the directory to write files to.\n  --prefix      \
    \  Specify a string to be prepended to filenames.\n  --node-numbers  Put the node\
    \ numbers in where the bootstraps usually go.\n  --painted       Use a painted\
    \ tree in place of the taxonomically annotated tree.\n  --rank-colored  Include\
    \ a tree for each rank with taxonomic annotations on every edge.\n  -help    \
    \       Display this list of options\n  --help          Display this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id005
  positional:
  - !Positional
    optional: false
    position: 0
    name: infer
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --csv
    description: Output the results as csv instead of a padded matrix.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -j
    description: 'The number of processes to run pplacer with. default: 2'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    description: Calculate posterior probabilities when doing placements.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --placefile
    description: Save the placefile generated by running pplacer to the specified
      location.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: infer [options] -c my.refpkg\n  -c           Reference package\
    \ path. Required.\n  -o           Specify the filename to write to.\n  --out-dir\
    \    Specify the directory to write files to.\n  --prefix     Specify a string\
    \ to be prepended to filenames.\n  --csv        Output the results as csv instead\
    \ of a padded matrix.\n  -j           The number of processes to run pplacer with.\
    \ default: 2\n  -p           Calculate posterior probabilities when doing placements.\n\
    \  --placefile  Save the placefile generated by running pplacer to the specified\
    \ location.\n  -help        Display this list of options\n  --help       Display\
    \ this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id006
  positional:
  - !Positional
    optional: false
    position: 0
    name: info
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --csv
    description: Output the results as csv instead of a padded matrix.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --taxonomic
    description: Show by-rank taxonomic information
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: info -c my.refpkg\n  -c           Reference package path. Required.\n\
    \  -o           Specify the filename to write to.\n  --out-dir    Specify the\
    \ directory to write files to.\n  --prefix     Specify a string to be prepended\
    \ to filenames.\n  --csv        Output the results as csv instead of a padded\
    \ matrix.\n  --taxonomic  Show by-rank taxonomic information\n  -help        Display\
    \ this list of options\n  --help       Display this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id007
  positional:
  - !Positional
    optional: false
    position: 0
    name: reclass
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --csv
    description: Output the results as csv instead of a padded matrix.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -j
    description: 'The number of processes to run pplacer with. default: 2'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -p
    description: Calculate posterior probabilities when doing placements.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --placefile
    description: Save the placefile generated by running pplacer to the specified
      location.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: If specified, the path to write the suggestion tree to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: reclass [options] -c my.refpkg\n  -c           Reference package\
    \ path. Required.\n  -o           Specify the filename to write to.\n  --out-dir\
    \    Specify the directory to write files to.\n  --prefix     Specify a string\
    \ to be prepended to filenames.\n  --csv        Output the results as csv instead\
    \ of a padded matrix.\n  -j           The number of processes to run pplacer with.\
    \ default: 2\n  -p           Calculate posterior probabilities when doing placements.\n\
    \  --placefile  Save the placefile generated by running pplacer to the specified\
    \ location.\n  -t           If specified, the path to write the suggestion tree\
    \ to.\n  -help        Display this list of options\n  --help       Display this\
    \ list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id008
  positional:
  - !Positional
    optional: false
    position: 0
    name: prep_db
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --sqlite
    description: Specify the database file to use. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prep_db [options] -c <refpkg>\n  -c        Reference package\
    \ path. Required.\n  --sqlite  Specify the database file to use. Required.\n \
    \ -help     Display this list of options\n  --help    Display this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id009
  positional:
  - !Positional
    optional: false
    position: 0
    name: pdprune
    description: ''
  - !Positional
    optional: false
    position: 1
    name: tree
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --csv
    description: Output the results as csv instead of a padded matrix.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --cutoff
    description: Specify the maximum branch length to be trimmed.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --leaves
    description: Specify the maximum number of leaves to leave un-trimmed.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --names-only
    description: Only split out a list of names, rather than names and PD decrease.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --unsafe
    description: Don't perform internal checks.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --never-prune-from
    description: Provide a file containing sequence names that will not be pruned.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --never-prune-regex-from
    description: Provide a file containing regular expressions; sequence names matching
      one of these will not be pruned.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: pdprune [options] tree\n  -o                        Specify the\
    \ filename to write to.\n  --out-dir                 Specify the directory to\
    \ write files to.\n  --prefix                  Specify a string to be prepended\
    \ to filenames.\n  --csv                     Output the results as csv instead\
    \ of a padded matrix.\n  --cutoff                  Specify the maximum branch\
    \ length to be trimmed.\n  --leaves                  Specify the maximum number\
    \ of leaves to leave un-trimmed.\n  --names-only              Only split out a\
    \ list of names, rather than names and PD decrease.\n  --unsafe              \
    \    Don't perform internal checks.\n  --never-prune-from        Provide a file\
    \ containing sequence names that will not be pruned.\n  --never-prune-regex-from\
    \  Provide a file containing regular expressions; sequence names matching one\
    \ of these will not be pruned.\n  -help                     Display this list\
    \ of options\n  --help                    Display this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id010
  positional:
  - !Positional
    optional: false
    position: 0
    name: prepsim
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -r
    description: Comma-delimited list of tax_ids to prune.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: prepsim [options] -c my.refpkg\n  -c         Reference package\
    \ path. Required.\n  --out-dir  Specify the directory to write files to.\n  --prefix\
    \   Specify a string to be prepended to filenames. Required.\n  -r         Comma-delimited\
    \ list of tax_ids to prune.\n  -help      Display this list of options\n  --help\
    \     Display this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id011
  positional:
  - !Positional
    optional: false
    position: 0
    name: convex_taxids
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-csv
    description: Output the results as a padded matrix instead of csv.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: convex_taxids -c my.refpkg\n  -c         Reference package path.\
    \ Required.\n  -o         Specify the filename to write to.\n  --out-dir  Specify\
    \ the directory to write files to.\n  --prefix   Specify a string to be prepended\
    \ to filenames.\n  --no-csv   Output the results as a padded matrix instead of\
    \ csv.\n  -help      Display this list of options\n  --help     Display this list\
    \ of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id012
  positional:
  - !Positional
    optional: false
    position: 0
    name: rppr
    description: check          checks a reference package
  - !Positional
    optional: false
    position: 1
    name: convex_taxids
    description: determines convex tax_ids per-rank in a refpkg
  - !Positional
    optional: false
    position: 2
    name: convexify
    description: identifies minimal leaf set to cut for taxonomic concordance
  - !Positional
    optional: false
    position: 3
    name: infer
    description: infers classifications of unclassified sequences in a reference package
  - !Positional
    optional: false
    position: 4
    name: info
    description: gives information about a reference package
  - !Positional
    optional: false
    position: 5
    name: min_adcl
    description: finds a good collection of sequences to cut from a placefile's ref
      tree
  - !Positional
    optional: false
    position: 6
    name: min_adcl_tree
    description: finds a good collection of sequences to cut from a tree
  - !Positional
    optional: false
    position: 7
    name: pdprune
    description: prunes the tree to maximize PD
  - !Positional
    optional: false
    position: 8
    name: prep_db
    description: makes SQL enabling taxonomic querying of placement results
  - !Positional
    optional: false
    position: 9
    name: prepsim
    description: makes a simulation by taking out taxids and turning them into fake
      placements
  - !Positional
    optional: false
    position: 10
    name: reclass
    description: reclassifies nonconvex sequences in a reference package
  - !Positional
    optional: false
    position: 11
    name: ref_tree
    description: writes a taxonomically annotated reference tree and an induced taxonomic
      tree
  - !Positional
    optional: false
    position: 12
    name: reroot
    description: reroots a given reference package in place
  named: []
  parent: *id020
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Unknown rppr command: rppr\nHere is a list of commands available using\
    \ this interface:\n  rppr\n    check          checks a reference package\n   \
    \ convex_taxids  determines convex tax_ids per-rank in a refpkg\n    convexify\
    \      identifies minimal leaf set to cut for taxonomic concordance\n    infer\
    \          infers classifications of unclassified sequences in a reference package\n\
    \    info           gives information about a reference package\n    min_adcl\
    \       finds a good collection of sequences to cut from a placefile's ref tree\n\
    \    min_adcl_tree  finds a good collection of sequences to cut from a tree\n\
    \    pdprune        prunes the tree to maximize PD\n    prep_db        makes SQL\
    \ enabling taxonomic querying of placement results\n    prepsim        makes a\
    \ simulation by taking out taxids and turning them into fake placements\n    reclass\
    \        reclassifies nonconvex sequences in a reference package\n    ref_tree\
    \       writes a taxonomically annotated reference tree and an induced taxonomic\
    \ tree\n    reroot         reroots a given reference package in place\n\nTo get\
    \ more help about a given command, type rppr COMMAND --help\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id013
  positional:
  - !Positional
    optional: false
    position: 0
    name: convexify
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --node-numbers
    description: Put the node numbers in where the bootstraps usually go.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --tree
    description: A tree file in newick format to work on in place of a reference package.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --colors
    description: A CSV file of the colors on the tree supplied with --tree.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: If specified, the path to write the discordance tree to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --cut-seqs
    description: If specified, the path to write a CSV file of cut sequences per-rank
      to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --alternates
    description: If specified, the path to write a CSV file of alternate colors per-sequence
      to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --check-all-ranks
    description: When determining alternate colors, check all ranks instead of the
      least recent uncut rank.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --all-alternates
    description: When determining alternate colors, ignore the taxononomy and show
      all alternates.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --cutoff
    description: 'Any trees with a maximum badness over this value are skipped. Default:
      12.'
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --limit-rank
    description: If specified, only convexify at the given ranks. Ranks are given
      as a comma-delimited list of names.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --timing
    description: If specified, save timing information for solved trees to a CSV file.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --rooted
    description: Strictly evaluate convexity; ensure that each color sits in its own
      rooted subtree.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --naive
    description: Use the naive convexify algorithm.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-early
    description: Don't terminate early when convexifying.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: convexify [-c my.refpkg | --tree my.tre --colors my.csv]\n  -c\
    \                 Reference package path. Required.\n  --node-numbers     Put\
    \ the node numbers in where the bootstraps usually go.\n  --tree             A\
    \ tree file in newick format to work on in place of a reference package.\n  --colors\
    \           A CSV file of the colors on the tree supplied with --tree.\n  -t \
    \                If specified, the path to write the discordance tree to.\n  --cut-seqs\
    \         If specified, the path to write a CSV file of cut sequences per-rank\
    \ to.\n  --alternates       If specified, the path to write a CSV file of alternate\
    \ colors per-sequence to.\n  --check-all-ranks  When determining alternate colors,\
    \ check all ranks instead of the least recent uncut rank.\n  --all-alternates\
    \   When determining alternate colors, ignore the taxononomy and show all alternates.\n\
    \  --cutoff           Any trees with a maximum badness over this value are skipped.\
    \ Default: 12.\n  --limit-rank       If specified, only convexify at the given\
    \ ranks. Ranks are given as a comma-delimited list of names.\n  --timing     \
    \      If specified, save timing information for solved trees to a CSV file.\n\
    \  --rooted           Strictly evaluate convexity; ensure that each color sits\
    \ in its own rooted subtree.\n  --naive            Use the naive convexify algorithm.\n\
    \  --no-early         Don't terminate early when convexifying.\n  -help      \
    \        Display this list of options\n  --help             Display this list\
    \ of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id014
  positional:
  - !Positional
    optional: false
    position: 0
    name: min_adcl_tree
    description: ''
  - !Positional
    optional: false
    position: 1
    name: newick.tre
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-csv
    description: Output the results as a padded matrix instead of csv.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --node-numbers
    description: Put the node numbers in where the bootstraps usually go.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --seed
    description: Set the random seed, an integer > 0. Default is 1.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -v
    description: If specified, write progress output to stderr.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: If specified, the path to write the trimmed tree to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --leaves
    description: The maximum number of leaves to keep in the tree.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --max-adcl
    description: The maximum ADCL that a solution can have.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --algorithm
    description: Which algorithm to use to prune leaves. Choices are 'greedy', 'full',
      'force', and 'pam'. Default full.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --all-adcls-file
    description: If specified, write out a csv file containing every intermediate
      computed ADCL.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log
    description: If specified with the full algorithm, write out a csv file containing
      solutions at every internal node.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --always-include
    description: If specified, the leaf names read from the provided file will not
      be trimmed.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --query-seqs
    description: A comma-separated list of leaves to turn into query sequences.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: min_adcl_tree [options] newick.tre\n  -o                Specify\
    \ the filename to write to.\n  --out-dir         Specify the directory to write\
    \ files to.\n  --prefix          Specify a string to be prepended to filenames.\n\
    \  --no-csv          Output the results as a padded matrix instead of csv.\n \
    \ --node-numbers    Put the node numbers in where the bootstraps usually go.\n\
    \  --seed            Set the random seed, an integer > 0. Default is 1.\n  -v\
    \                If specified, write progress output to stderr.\n  -t        \
    \        If specified, the path to write the trimmed tree to.\n  --leaves    \
    \      The maximum number of leaves to keep in the tree.\n  --max-adcl       \
    \ The maximum ADCL that a solution can have.\n  --algorithm       Which algorithm\
    \ to use to prune leaves. Choices are 'greedy', 'full', 'force', and 'pam'. Default\
    \ full.\n  --all-adcls-file  If specified, write out a csv file containing every\
    \ intermediate computed ADCL.\n  --log             If specified with the full\
    \ algorithm, write out a csv file containing solutions at every internal node.\n\
    \  --always-include  If specified, the leaf names read from the provided file\
    \ will not be trimmed.\n  --query-seqs      A comma-separated list of leaves to\
    \ turn into query sequences.\n  -help             Display this list of options\n\
    \  --help            Display this list of options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id015
  positional:
  - !Positional
    optional: false
    position: 0
    name: reroot
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path. Required.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: reroot -c my.refpkg\n  -c         Reference package path. Required.\n\
    \  -o         Specify the filename to write to.\n  --out-dir  Specify the directory\
    \ to write files to.\n  --prefix   Specify a string to be prepended to filenames.\n\
    \  -help      Display this list of options\n  --help     Display this list of\
    \ options\n"
  generated_using: *id004
  docker_image:
- !Command
  command: *id016
  positional:
  - !Positional
    optional: false
    position: 0
    name: min_adcl
    description: ''
  - !Positional
    optional: false
    position: 1
    name: placefile
    description: ''
  named:
  - !Flag
    optional: true
    synonyms:
    - --point-mass
    description: Treat every pquery as a point mass concentrated on the highest-weight
      placement.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --pp
    description: Use posterior probability for the weight.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -c
    description: Reference package path.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -o
    description: Specify the filename to write to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --out-dir
    description: Specify the directory to write files to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Specify a string to be prepended to filenames.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --no-csv
    description: Output the results as a padded matrix instead of csv.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --node-numbers
    description: Put the node numbers in where the bootstraps usually go.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --seed
    description: Set the random seed, an integer > 0. Default is 1.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -v
    description: If specified, write progress output to stderr.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - -t
    description: If specified, the path to write the trimmed tree to.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --leaves
    description: The maximum number of leaves to keep in the tree.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --max-adcl
    description: The maximum ADCL that a solution can have.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --algorithm
    description: Which algorithm to use to prune leaves. Choices are 'greedy', 'full',
      'force', and 'pam'. Default full.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --all-adcls-file
    description: If specified, write out a csv file containing every intermediate
      computed ADCL.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --log
    description: If specified with the full algorithm, write out a csv file containing
      solutions at every internal node.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --always-include
    description: If specified, the leaf names read from the provided file will not
      be trimmed.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --leaf-mass
    description: Fraction of mass to be distributed uniformly across leaves. Default
      0.
    args: !EmptyFlagArg {}
  - !Flag
    optional: true
    synonyms:
    - --help
    description: Display this list of options
    args: !EmptyFlagArg {}
  parent: *id020
  subcommands: []
  usage: []
  help_flag: !Flag
    optional: true
    synonyms:
    - -help
    description: Display this list of options
    args: !EmptyFlagArg {}
  usage_flag:
  version_flag:
  help_text: "usage: min_adcl [options] placefile\n  --point-mass      Treat every\
    \ pquery as a point mass concentrated on the highest-weight placement.\n  --pp\
    \              Use posterior probability for the weight.\n  -c               \
    \ Reference package path.\n  -o                Specify the filename to write to.\n\
    \  --out-dir         Specify the directory to write files to.\n  --prefix    \
    \      Specify a string to be prepended to filenames.\n  --no-csv          Output\
    \ the results as a padded matrix instead of csv.\n  --node-numbers    Put the\
    \ node numbers in where the bootstraps usually go.\n  --seed            Set the\
    \ random seed, an integer > 0. Default is 1.\n  -v                If specified,\
    \ write progress output to stderr.\n  -t                If specified, the path\
    \ to write the trimmed tree to.\n  --leaves          The maximum number of leaves\
    \ to keep in the tree.\n  --max-adcl        The maximum ADCL that a solution can\
    \ have.\n  --algorithm       Which algorithm to use to prune leaves. Choices are\
    \ 'greedy', 'full', 'force', and 'pam'. Default full.\n  --all-adcls-file  If\
    \ specified, write out a csv file containing every intermediate computed ADCL.\n\
    \  --log             If specified with the full algorithm, write out a csv file\
    \ containing solutions at every internal node.\n  --always-include  If specified,\
    \ the leaf names read from the provided file will not be trimmed.\n  --leaf-mass\
    \       Fraction of mass to be distributed uniformly across leaves. Default 0.\n\
    \  -help             Display this list of options\n  --help            Display\
    \ this list of options\n"
  generated_using: *id004
  docker_image:
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Here is a list of commands available using this interface:\n  rppr\n \
  \   check          checks a reference package\n    convex_taxids  determines convex\
  \ tax_ids per-rank in a refpkg\n    convexify      identifies minimal leaf set to\
  \ cut for taxonomic concordance\n    infer          infers classifications of unclassified\
  \ sequences in a reference package\n    info           gives information about a\
  \ reference package\n    min_adcl       finds a good collection of sequences to\
  \ cut from a placefile's ref tree\n    min_adcl_tree  finds a good collection of\
  \ sequences to cut from a tree\n    pdprune        prunes the tree to maximize PD\n\
  \    prep_db        makes SQL enabling taxonomic querying of placement results\n\
  \    prepsim        makes a simulation by taking out taxids and turning them into\
  \ fake placements\n    reclass        reclassifies nonconvex sequences in a reference\
  \ package\n    ref_tree       writes a taxonomically annotated reference tree and\
  \ an induced taxonomic tree\n    reroot         reroots a given reference package\
  \ in place\n\nTo get more help about a given command, type rppr COMMAND --help\n\
  \nAdditional flags for rppr:\n  --version  Print version and exit\n  --cmds    \
  \ Print a list of the available commands.\n  --batch    Run the provided batch file\
  \ of guppy commands\n  --quiet    Don't write messages to stdout (unless explicitly\
  \ requested).\n  --help     Display this list of options and subcommands\n  -help\
  \      Display this list of options and subcommands\n"
generated_using: *id004
docker_image:
