!Command
command:
- parseSitePAML.pl
positional:
- !Positional
  description: It was interpreted as a "" or a 0, but maybe it was a mistake.
  position: 0
  name: defined.
  optional: false
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Use of uninitialized value $nssites in pattern match (m//) at\n\t/usr/local/bin/parseSitePAML.pl\
  \ line 23 (#1)\n    (W uninitialized) An undefined value was used as if it were\
  \ already\n    defined.  It was interpreted as a \"\" or a 0, but maybe it was a\
  \ mistake.\n    To suppress this warning assign a defined value to your variables.\n\
  \    \n    To help you figure out what was undefined, perl will try to tell you\n\
  \    the name of the variable (if any) that was undefined.  In some cases\n    it\
  \ cannot do this, so it also tells you what operation you used the\n    undefined\
  \ value in.  Note, however, that perl optimizes your program\n    and the operation\
  \ displayed in the warning may not necessarily appear\n    literally in your program.\
  \  For example, \"that $foo\" is usually\n    optimized into \"that \" . $foo, and\
  \ the warning will refer to the\n    concatenation (.) operator, even though there\
  \ is no . in\n    your program.\n    \nUncaught exception from user code:\n\tNot\
  \ a directory at /usr/local/bin/parseSitePAML.pl line 27.\n"
generated_using:
- --help
