!Command
command:
- wtdbg2
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  description: Long reads sequences file (REQUIRED; can be multiple), []
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -I
  description: Error-free sequences file (can be multiple), []
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -o
  description: Prefix of output files (REQUIRED), []
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -t
  description: Number of threads, 0 for all cores, [4]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -f
  description: Force to overwrite output files
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: Choose the longest subread and drop reads shorter than <int> (5000
    recommended for PacBio) [0]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -p
  description: "Kmer psize, 0 <= p <= 25, [21]\nk + p <= 25, seed is <k-mer>+<p-homopolymer-compressed>"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -K
  description: "Filter high frequency kmers, maybe repetitive, [1000]\nif K >= 1,\
    \ take the integer value as cutoff, MUST <= 65535\nelse, mask the top fraction\
    \ part high frequency kmers"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -E
  description: Min kmer frequency, [2]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -F
  description: Filter low frequency kmers by a 4G-bytes array (max_occ=3 2-bits).
    Here, -E must greater than 1
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  description: Max number of bin(256bp) in one gap, [4]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -Y
  description: Max number of bin(256bp) in one deviation, [4]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -x
  description: penalty for BIN gap, [-7]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -y
  description: penalty for BIN deviation, [-21]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -l
  description: Min length of alignment, [2048]
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -m
  description: Min matched, [200]
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -A
  description: Keep contained reads during alignment
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: Max length variation of two aligned fragments, [0.2]
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -e
  description: Min read depth of a valid edge, [3]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -q
  description: Quiet
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: Verbose (can be multiple)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cpu
  description: 'See -t 0, default: all cores'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --input
  description: "+\nSee -i"
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --err-free-seq
  description: "+\nSee -I. Error-free sequences will be firstly token for nodes, if\
    \ --err-free-nodes is specified, only select nodes from those sequences"
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --force
  description: See -f
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --prefix
  description: See -o
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --kmer-fsize
  description: See -k 0
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --kmer-psize
  description: See -p 21
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --kmer-depth-max
  description: See -K 1000
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - --kmer-depth-min
  description: See -E
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --kmer-depth-min-filter
  description: "See -F\n`wtdbg` uses a 4 Gbytes array to counting the occurence (0-3)\
    \ of kmers in the way of counting-bloom-filter. It will reduce memory space largely\n\
    Orphaned kmers won't appear in building kbm-index"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --kmer-subampling
  description: See -S 1
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-kmer-sampling
  description: 'Select no more than n seeds in a query bin, default: 256'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --dp-max-gap
  description: See -X 4
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --dp-max-var
  description: See -Y 4
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --dp-penalty-gap
  description: See -x -7
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --dp-penalty-var
  description: See -y -21
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-min-length
  description: See -l 2048
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-min-match
  description: See -m 200. Here the num of matches counting basepair of the matched
    kmer's regions
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-max-var
  description: See -s 0.2
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - --aln-dovetail
  description: 'Retain dovetail overlaps only, the max overhang size is <--aln-dovetail>,
    -1 to disable filtering, default: 256'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-strand
  description: "1: forward, 2: reverse, 3: both. Please don't change the deault vaule\
    \ 3, unless you exactly know what you are doing"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-maxhit
  description: 'Max n hits for each read in build graph, default: 1000'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --aln-bestn
  description: "Use best n hits for each read in build graph, 0: keep all, default:\
    \ 500\n<prefix>.alignments always store all alignments"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -A
  - --aln-noskip
  description: Even a read was contained in previous alignment, still align it against
    other reads
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: "+\nSee -v. -vvvv will display the most detailed information"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --quiet
  description: See -q
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  - --tidy-reads
  description: "Default: 0. Pick longest subreads if possible. Filter reads less than\
    \ <--tidy-reads>. Rename reads into 'S%010d' format. The first read is named as\
    \ S0000000001\nSet to 0 bp to disable tidy. Suggested vaule is 5000 for pacbio\
    \ reads"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --err-free-nodes
  description: "Select nodes from error-free-sequences only. E.g. you have contigs\
    \ assembled from NGS-WGS reads, and long noisy reads.\nYou can type '--err-free-seq\
    \ your_ctg.fa --input your_long_reads.fa --err-free-nodes' to perform assembly\
    \ somehow act as long-reads scaffolding"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --limit-input
  description: Limit the input sequences to at most <int> M bp. Usually for test
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --node-len
  description: "The default value is 1024, which is times of KBM_BIN_SIZE(always equals\
    \ 256 bp). It specifies the length of intervals (or call nodes after selecting).\n\
    kbm indexs sequences into BINs of 256 bp in size, so that many parameter should\
    \ be times of 256 bp. There are: --node-len, --node-ovl, --aln-min-length, --aln-dovetail\
    \ .   Other parameters are counted in BINs, --dp-max-gap, --dp-max-var ."
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --node-matched-bins
  description: Min matched bins in a node, default:1
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --node-ovl
  description: 'Default: 256. Max overlap size between two adjacent intervals in any
    read. It is used in selecting best nodes representing reads in graph'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -e
  - --edge-min
  description: "Default: 3. The minimal depth of a valid edge is set to 3. In another\
    \ word, Valid edges must be supported by at least 3 reads\nWhen the sequence depth\
    \ is low, have a try with --edge-min 2. Or very high, try --edge-min 4"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --drop-low-cov-edges
  description: Don't attempt to rescue low coverage edges
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --node-min
  description: Min depth of a intreval to be selected as valid node. Defaultly, this
    value is automaticly the same with --edge-min.
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --node-max
  description: 'Nodes with too high depth will be regarded as repetitive, and be masked.
    Default: 200, more than 200 reads contain this node'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --ttr-cutoff-ratio
  description: ", 0.5\nTiny Tandom Repeat. A node located inside ttr will bring noisy\
    \ in graph, should be masked. The pattern of such nodes is:\ndepth >= <--ttr-cutoff-depth>,\
    \ and none of their edges have depth greater than depth * <--ttr-cutoff-ratio\
    \ 0.5>\nset --ttr-cutoff-depth 0 to disable ttr masking"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - --dump-kbm
  description: Dump kbm index into file for loaded by `kbm` or `wtdbg`
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --load-kbm
  description: "Instead of reading sequences and building kbm index, which is time-consumed,\
    \ loading kbm-index from already dumped file.\nPlease note that, once kbm-index\
    \ is mmaped by kbm -R <kbm-index> start, will just get the shared memory in minute\
    \ time.\nSee `kbm` -R <your_seqs.kbmidx> [start | stop]"
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --load-alignments
  description: "+\n`wtdbg` output reads' alignments into <--prefix>.alignments, program\
    \ can load them to fastly build assembly graph. Or you can offer\nother source\
    \ of alignments to `wtdbg`. When --load-alignment, will only reading long sequences\
    \ but skip building kbm index\nYou can type --load-alignments <file> more than\
    \ once to load alignments from many files"
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --load-clips
  description: Combined with --load-nodes. Load reads clips. You can find it in `wtdbg`'s
    <--prefix>.clps
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - --load-nodes
  description: Load dumped nodes from previous execution for fast construct the assembly
    graph, should be combined with --load-clips. You can find it in `wtdbg`'s <--prefix>.1.nodes
  args: !SimpleFlagArg
    name: sting
- !Flag
  optional: true
  synonyms:
  - --bubble-step
  description: 'Max step to search a bubble, meaning the max step from the starting
    node to the ending node. Default: 40'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --tip-step
  description: Max step to search a tip, 10
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --ctg-min-length
  description: Min length of contigs to be output, 5000
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --ctg-min-nodes
  description: Min num of nodes in a contig to be ouput, 3
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --minimal-output
  description: Will generate as less output files (<--prefix>.*) as it can
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bin-complexity-cutoff
  description: Used in filtering BINs. If a BIN has less indexed valid kmers than
    <--bin-complexity-cutoff 2>, masks it.
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --no-local-graph-analysis
  description: "Before building edges, for each node, local-graph-analysis reads all\
    \ related reads and according nodes, and builds a local graph to judge whether\
    \ to mask it\nThe analysis aims to find repetitive nodes"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-read-length-sort
  description: Defaultly, `wtdbg` sorts input sequences by length DSC. The order of
    reads affects the generating of nodes in selecting important intervals
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --keep-isolated-nodes
  description: In graph clean, `wtdbg` normally masks isolated (orphaned) nodes
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-read-clip
  description: "Defaultly, `wtdbg` clips a input sequence by analyzing its overlaps\
    \ to remove high error endings, rolling-circle repeats (see PacBio CCS), and chimera.\n\
    When building edges, clipped region won't contribute. However, `wtdbg` will use\
    \ them in the final linking of unitigs"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-chainning-clip
  description: "Defaultly, performs alignments chainning in read clipping\n** If '--aln-bestn\
    \ 0 --no-read-clip', alignments will be parsed directly, and less RAM spent on\
    \ recording alignments\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Show more options
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "WTDBG: De novo assembler for long noisy sequences\nAuthor: Jue Ruan <ruanjue@gmail.com>\n\
  Version: 2.0 (20180924)\nCompiled: Mon Sep 24 15:38:04 UTC 2018\nUsage: wtdbg2 [options]\n\
  Options:\n -i <string> Long reads sequences file (REQUIRED; can be multiple), []\n\
  \ -I <string> Error-free sequences file (can be multiple), []\n -o <string> Prefix\
  \ of output files (REQUIRED), []\n -t <int>    Number of threads, 0 for all cores,\
  \ [4]\n -f          Force to overwrite output files\n -L <int>    Choose the longest\
  \ subread and drop reads shorter than <int> (5000 recommended for PacBio) [0]\n\
  \ -k <int>    Kmer fsize, 0 <= k <= 25, [0]\n -p <int>    Kmer psize, 0 <= p <=\
  \ 25, [21]\n             k + p <= 25, seed is <k-mer>+<p-homopolymer-compressed>\n\
  \ -K <float>  Filter high frequency kmers, maybe repetitive, [1000]\n          \
  \   if K >= 1, take the integer value as cutoff, MUST <= 65535\n             else,\
  \ mask the top fraction part high frequency kmers\n -E <int>    Min kmer frequency,\
  \ [2]\n -F          Filter low frequency kmers by a 4G-bytes array (max_occ=3 2-bits).\
  \ Here, -E must greater than 1\n -S <int>    Subsampling kmers, 1/(<-S>) kmers are\
  \ indexed, [4]\n             -S is very useful in saving memeory and speeding up\n\
  \             please note that subsampling kmers will have less matched length\n\
  \ -X <int>    Max number of bin(256bp) in one gap, [4]\n -Y <int>    Max number\
  \ of bin(256bp) in one deviation, [4]\n -x <int>    penalty for BIN gap, [-7]\n\
  \ -y <int>    penalty for BIN deviation, [-21]\n -l <float>  Min length of alignment,\
  \ [2048]\n -m <float>  Min matched, [200]\n -A          Keep contained reads during\
  \ alignment\n -s <float>  Max length variation of two aligned fragments, [0.2]\n\
  \ -e <int>    Min read depth of a valid edge, [3]\n -q          Quiet\n -v     \
  \     Verbose (can be multiple)\n --help      Show more options\n ** more options\
  \ **\n --cpu <int>\n   See -t 0, default: all cores\n --input <string> +\n   See\
  \ -i\n --err-free-seq <string> +\n   See -I. Error-free sequences will be firstly\
  \ token for nodes, if --err-free-nodes is specified, only select nodes from those\
  \ sequences\n --force\n   See -f\n --prefix <string>\n   See -o\n --kmer-fsize <int>\n\
  \   See -k 0\n --kmer-psize <int>\n   See -p 21\n --kmer-depth-max <float>\n   See\
  \ -K 1000\n --kmer-depth-min <int>\n   See -E\n --kmer-depth-min-filter\n   See\
  \ -F\n   `wtdbg` uses a 4 Gbytes array to counting the occurence (0-3) of kmers\
  \ in the way of counting-bloom-filter. It will reduce memory space largely\n   \
  \ Orphaned kmers won't appear in building kbm-index\n --kmer-subampling <int>\n\
  \   See -S 1\n --aln-kmer-sampling <int>\n   Select no more than n seeds in a query\
  \ bin, default: 256\n --dp-max-gap <int>\n   See -X 4\n --dp-max-var <int>\n   See\
  \ -Y 4\n --dp-penalty-gap <int>\n   See -x -7\n --dp-penalty-var <int>\n   See -y\
  \ -21\n --aln-min-length <int>\n   See -l 2048\n --aln-min-match <int>\n   See -m\
  \ 200. Here the num of matches counting basepair of the matched kmer's regions\n\
  \ --aln-max-var <float>\n   See -s 0.2\n --aln-dovetail <int>\n   Retain dovetail\
  \ overlaps only, the max overhang size is <--aln-dovetail>, -1 to disable filtering,\
  \ default: 256\n --aln-strand <int>\n   1: forward, 2: reverse, 3: both. Please\
  \ don't change the deault vaule 3, unless you exactly know what you are doing\n\
  \ --aln-maxhit <int>\n   Max n hits for each read in build graph, default: 1000\n\
  \ --aln-bestn <int>\n   Use best n hits for each read in build graph, 0: keep all,\
  \ default: 500\n   <prefix>.alignments always store all alignments\n -A, --aln-noskip\n\
  \   Even a read was contained in previous alignment, still align it against other\
  \ reads\n --verbose +\n   See -v. -vvvv will display the most detailed information\n\
  \ --quiet\n   See -q\n -L <int>, --tidy-reads=<int>\n   Default: 0. Pick longest\
  \ subreads if possible. Filter reads less than <--tidy-reads>. Rename reads into\
  \ 'S%010d' format. The first read is named as S0000000001\n   Set to 0 bp to disable\
  \ tidy. Suggested vaule is 5000 for pacbio reads\n --err-free-nodes\n   Select nodes\
  \ from error-free-sequences only. E.g. you have contigs assembled from NGS-WGS reads,\
  \ and long noisy reads.\n   You can type '--err-free-seq your_ctg.fa --input your_long_reads.fa\
  \ --err-free-nodes' to perform assembly somehow act as long-reads scaffolding\n\
  \ --limit-input <int>\n   Limit the input sequences to at most <int> M bp. Usually\
  \ for test\n --node-len <int>\n   The default value is 1024, which is times of KBM_BIN_SIZE(always\
  \ equals 256 bp). It specifies the length of intervals (or call nodes after selecting).\n\
  \   kbm indexs sequences into BINs of 256 bp in size, so that many parameter should\
  \ be times of 256 bp. There are: --node-len, --node-ovl, --aln-min-length, --aln-dovetail\
  \ .   Other parameters are counted in BINs, --dp-max-gap, --dp-max-var .\n --node-matched-bins\
  \ <int>\n   Min matched bins in a node, default:1\n --node-ovl <int>\n   Default:\
  \ 256. Max overlap size between two adjacent intervals in any read. It is used in\
  \ selecting best nodes representing reads in graph\n -e <int>, --edge-min=<int>\n\
  \   Default: 3. The minimal depth of a valid edge is set to 3. In another word,\
  \ Valid edges must be supported by at least 3 reads\n   When the sequence depth\
  \ is low, have a try with --edge-min 2. Or very high, try --edge-min 4\n --drop-low-cov-edges\n\
  \   Don't attempt to rescue low coverage edges\n --node-min <int>\n   Min depth\
  \ of a intreval to be selected as valid node. Defaultly, this value is automaticly\
  \ the same with --edge-min.\n --node-max <int>\n   Nodes with too high depth will\
  \ be regarded as repetitive, and be masked. Default: 200, more than 200 reads contain\
  \ this node\n --ttr-cutoff-depth <int>, 0\n --ttr-cutoff-ratio <float>, 0.5\n  \
  \ Tiny Tandom Repeat. A node located inside ttr will bring noisy in graph, should\
  \ be masked. The pattern of such nodes is:\n   depth >= <--ttr-cutoff-depth>, and\
  \ none of their edges have depth greater than depth * <--ttr-cutoff-ratio 0.5>\n\
  \   set --ttr-cutoff-depth 0 to disable ttr masking\n --dump-kbm <string>\n   Dump\
  \ kbm index into file for loaded by `kbm` or `wtdbg`\n --load-kbm <string>\n   Instead\
  \ of reading sequences and building kbm index, which is time-consumed, loading kbm-index\
  \ from already dumped file.\n   Please note that, once kbm-index is mmaped by kbm\
  \ -R <kbm-index> start, will just get the shared memory in minute time.\n   See\
  \ `kbm` -R <your_seqs.kbmidx> [start | stop]\n --load-alignments <string> +\n  \
  \ `wtdbg` output reads' alignments into <--prefix>.alignments, program can load\
  \ them to fastly build assembly graph. Or you can offer\n   other source of alignments\
  \ to `wtdbg`. When --load-alignment, will only reading long sequences but skip building\
  \ kbm index\n   You can type --load-alignments <file> more than once to load alignments\
  \ from many files\n --load-clips <string>\n   Combined with --load-nodes. Load reads\
  \ clips. You can find it in `wtdbg`'s <--prefix>.clps\n --load-nodes <sting>\n \
  \  Load dumped nodes from previous execution for fast construct the assembly graph,\
  \ should be combined with --load-clips. You can find it in `wtdbg`'s <--prefix>.1.nodes\n\
  \ --bubble-step <int>\n   Max step to search a bubble, meaning the max step from\
  \ the starting node to the ending node. Default: 40\n --tip-step <int>\n   Max step\
  \ to search a tip, 10\n --ctg-min-length <int>\n   Min length of contigs to be output,\
  \ 5000\n --ctg-min-nodes <int>\n   Min num of nodes in a contig to be ouput, 3\n\
  \ --minimal-output\n   Will generate as less output files (<--prefix>.*) as it can\n\
  \ --bin-complexity-cutoff <int>\n   Used in filtering BINs. If a BIN has less indexed\
  \ valid kmers than <--bin-complexity-cutoff 2>, masks it.\n --no-local-graph-analysis\n\
  \   Before building edges, for each node, local-graph-analysis reads all related\
  \ reads and according nodes, and builds a local graph to judge whether to mask it\n\
  \   The analysis aims to find repetitive nodes\n --no-read-length-sort\n   Defaultly,\
  \ `wtdbg` sorts input sequences by length DSC. The order of reads affects the generating\
  \ of nodes in selecting important intervals\n --keep-isolated-nodes\n   In graph\
  \ clean, `wtdbg` normally masks isolated (orphaned) nodes\n --no-read-clip\n   Defaultly,\
  \ `wtdbg` clips a input sequence by analyzing its overlaps to remove high error\
  \ endings, rolling-circle repeats (see PacBio CCS), and chimera.\n   When building\
  \ edges, clipped region won't contribute. However, `wtdbg` will use them in the\
  \ final linking of unitigs\n --no-chainning-clip\n   Defaultly, performs alignments\
  \ chainning in read clipping\n   ** If '--aln-bestn 0 --no-read-clip', alignments\
  \ will be parsed directly, and less RAM spent on recording alignments\n\n"
generated_using:
- --help
docker_image:
