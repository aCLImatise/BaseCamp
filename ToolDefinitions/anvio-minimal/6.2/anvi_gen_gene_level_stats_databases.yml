!Command
command:
- anvi-gen-gene-level-stats-databases
positional:
- !Positional
  description: 'INSEQ DATA:'
  position: 0
  name: it.
  optional: false
named:
- !Flag
  description: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: Anvi'o profile database
  synonyms:
  - -p
  - --profile-db
  args: !SimpleFlagArg
    name: PROFILE_DB
  optional: true
- !Flag
  description: Collection name.
  synonyms:
  - -C
  - --collection-name
  args: !SimpleFlagArg
    name: COLLECTION_NAME
  optional: true
- !Flag
  description: Bin name you are interested in.
  synonyms:
  - -b
  - --bin-id
  args: !SimpleFlagArg
    name: BIN_NAME
  optional: true
- !Flag
  description: "Text file for bins (each line should be a unique bin\nid)."
  synonyms:
  - -B
  - --bin-ids-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: "If you want all zero coverage positions to be treated\nlike outliers\
    \ then use this flag. The reason to treat\nzero coverage as outliers is because\
    \ when mapping\nreads to a reference we could get many zero positions\ndue to\
    \ accessory genes. These positions then skew the\naverage values that we compute."
  synonyms:
  - --zeros-are-outliers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Threshold to use for the outlier detection. The\ndefault value is\
    \ '1.5'. Absolute deviation around the\nmedian is used. To read more about the\
    \ method please\nrefer to: 'How to Detect and Handle Outliers' by Boris\nIglewicz\
    \ and David Hoaglin\n(doi:10.1016/j.jesp.2013.03.013)."
  synonyms:
  - --outliers-threshold
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: Don't bother me with questions or warnings, just do
  synonyms:
  - --just-do-it
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Provide if working with INSeq/Tn-Seq genomic data.\nWith this, all\
    \ gene level coverage stats will be\ncalculated using INSeq/Tn-Seq statistical\
    \ methods.\n"
  synonyms:
  - --inseq-stats
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-gen-gene-level-stats-databases [-h] -c CONTIGS_DB -p PROFILE_DB\n\
  \                                           [-C COLLECTION_NAME] [-b BIN_NAME]\n\
  \                                           [-B FILE_PATH]\n                   \
  \                        [--zeros-are-outliers]\n                              \
  \             [--outliers-threshold NUM]\n                                     \
  \      [--just-do-it] [--inseq-stats]\n\nA program to compute genes databases for\
  \ a ginen set of bins stored in an\nanvi'o collection. Genes databases store gene-level\
  \ coverage and detection\nstatistics, and they are usually computed and generated\
  \ automatically when\nthey are required (such as running anvi-interactive with `--gene-mode`\
  \ flag).\nThis program allows you to pre-compute them if you don't want them to\
  \ be done\nall at once.\n\noptional arguments:\n  -h, --help            show this\
  \ help message and exit\n\nINPUT DATABASES:\n  Which anvi'o databases do you wish\
  \ to work today?\n\n  -c CONTIGS_DB, --contigs-db CONTIGS_DB\n                 \
  \       Anvi'o contigs database generated by 'anvi-gen-\n                      \
  \  contigs'\n  -p PROFILE_DB, --profile-db PROFILE_DB\n                        Anvi'o\
  \ profile database\n\nBIN(S) AND COLLECTION:\n  You can select a bin, multiple bins,\
  \ or you can simply focus on every bin\n  in a collection by providing only a collection\
  \ name. Once you are done\n  with your selection, anvi'o will generate an individual\
  \ genes database for\n  each of the bin it finds.\n\n  -C COLLECTION_NAME, --collection-name\
  \ COLLECTION_NAME\n                        Collection name.\n  -b BIN_NAME, --bin-id\
  \ BIN_NAME\n                        Bin name you are interested in.\n  -B FILE_PATH,\
  \ --bin-ids-file FILE_PATH\n                        Text file for bins (each line\
  \ should be a unique bin\n                        id).\n\nADDITIONAL PARAMETERS:\n\
  \  These parameters are those that are critical to identify outlier\n  nucleotide\
  \ positions and how to define what should be included in those\n  calculations.\
  \ In most cases you can leave them as is, and things are going\n  to be alright.\n\
  \n  --zeros-are-outliers  If you want all zero coverage positions to be treated\n\
  \                        like outliers then use this flag. The reason to treat\n\
  \                        zero coverage as outliers is because when mapping\n   \
  \                     reads to a reference we could get many zero positions\n  \
  \                      due to accessory genes. These positions then skew the\n \
  \                       average values that we compute.\n  --outliers-threshold\
  \ NUM\n                        Threshold to use for the outlier detection. The\n\
  \                        default value is '1.5'. Absolute deviation around the\n\
  \                        median is used. To read more about the method please\n\
  \                        refer to: 'How to Detect and Handle Outliers' by Boris\n\
  \                        Iglewicz and David Hoaglin\n                        (doi:10.1016/j.jesp.2013.03.013).\n\
  \nPARAMETERS OF CONVENIENCE:\n  They say they save lives.\n\n  --just-do-it    \
  \      Don't bother me with questions or warnings, just do\n                   \
  \     it.\n\nINSEQ DATA:\n  When analyzing INSeq/Tn-Seq data\n\n  --inseq-stats\
  \         Provide if working with INSeq/Tn-Seq genomic data.\n                 \
  \       With this, all gene level coverage stats will be\n                     \
  \   calculated using INSeq/Tn-Seq statistical methods.\n"
generated_using:
- --help
