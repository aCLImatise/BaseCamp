&id001 !Command
command:
- mmseqs
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - mmseqs
  - mergeresultsbyset
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs mergeresultsbyset <i:setDB> <i:DB> <o:DB> [options]\n\
    \ By Ruoshi Zhang, Clovis Norroy & Milot Mirdita <milot@mirdita.de>\noptions:\
    \ common:           \n --threads INT      Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT   Write compressed output [0]\n -v INT             Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: &id002
  - --help
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - clusterupdate
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-mode
    description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3:\
      \ Greedy clustering by sequence length (CDHIT) [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-iterations
    description: Maximum depth of breadth first search in connected component clustering
      [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --similarity-type
    description: 'Type of score used for clustering. 1: alignment score 2: sequence
      identity [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --single-step-clustering
    description: Switch from cascaded to simple clustering workflow [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --cluster-steps
    description: Cascaded clustering steps from 1 to -s [3]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-reassign
    description: "Cascaded clustering can cluster sequence that do not fulfill the\
      \ clustering criteria.\nCluster reassignment corrects these errors [0]"
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --include-only-extendable
    description: Include only extendable [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-seq-id
    description: Sequence ID (Uniprot, GenBank, ...) is used for identifying matches
      between the old and the new DB [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --recover-deleted
    description: Find and recover deleted sequences during updating of clustering
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs clusterupdate <i:oldSequenceDB> <i:newSequenceDB> <i:oldClustResultDB>\
    \ <o:newMappedSequenceDB> <o:newClustResultDB> <tmpDir> [options]\n By Clovis\
    \ Galiez & Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                      \n --comp-bias-corr INT             Correct for locally\
    \ biased amino acid composition (range 0-1) [1]\n --add-self-matches BOOL    \
    \      Artificially add entries of queries with themselves (for clustering) [0]\n\
    \ --seed-sub-mat TWIN              Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                         Sensitivity:\
    \ 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n -k INT                       \
    \    k-mer length (0: automatically set to optimum) [0]\n --k-score INT      \
    \              k-mer threshold for generating similar k-mer lists [2147483647]\n\
    \ --alph-size TWIN                 Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --split INT                      Split input into N equally distributed chunks.\
    \ 0: set the best split automatically [0]\n --split-mode INT                 0:\
    \ split target db; 1: split query db; 2: auto, depending on main memory [2]\n\
    \ --split-memory-limit BYTE        Set max memory per split. E.g. 800B, 5K, 10M,\
    \ 1G. Default (0) to all available system memory [0]\n --diag-score BOOL     \
    \           Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
    \ INT        Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
    \                       Mask sequences in k-mer stage: 0: w/o low complexity masking,\
    \ 1: with low complexity masking [1]\n --mask-lower-case INT            Lowercase\
    \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
    \ [0]\n --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [3]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nclust:              \
    \            \n --cluster-mode INT               0: Set-Cover (greedy)\n     \
    \                             1: Connected component (BLASTclust)\n          \
    \                        2,3: Greedy clustering by sequence length (CDHIT) [0]\n\
    \ --max-iterations INT             Maximum depth of breadth first search in connected\
    \ component clustering [1000]\n --similarity-type INT            Type of score\
    \ used for clustering. 1: alignment score 2: sequence identity [2]\n --single-step-clustering\
    \ BOOL    Switch from cascaded to simple clustering workflow [0]\n --cluster-steps\
    \ INT              Cascaded clustering steps from 1 to -s [3]\n --cluster-reassign\
    \ BOOL          Cascaded clustering can cluster sequence that do not fulfill the\
    \ clustering criteria.\n                                  Cluster reassignment\
    \ corrects these errors [0]\nkmermatcher:                    \n --kmer-per-seq\
    \ INT               k-mers per sequence [21]\n --kmer-per-seq-scale TWIN     \
    \   Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale\
    \ x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len BOOL           Adjust k-mer\
    \ length based on specificity (only for nucleotides) [0]\n --hash-shift INT  \
    \               Shift k-mer hash initialization [67]\n --include-only-extendable\
    \ BOOL   Include only extendable [0]\n --ignore-multi-kmer BOOL         Skip k-mers\
    \ occurring multiple times (>=2) [0]\nprofile:                        \n --pca\
    \ FLOAT                      Pseudo count admixture strength [1.000]\n --pcb FLOAT\
    \                      Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\n --mask-profile INT               Mask query sequence of profile\
    \ using tantan [0,1] [1]\n --e-profile DOUBLE               Include sequences\
    \ matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n --wg BOOL\
    \                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\n --use-seq-id BOOL                Sequence\
    \ ID (Uniprot, GenBank, ...) is used for identifying matches between the old and\
    \ the new DB [0]\n --recover-deleted BOOL           Find and recover deleted sequences\
    \ during updating of clustering [0]\ncommon:                         \n --sub-mat\
    \ TWIN                   Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
    \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                    Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                 Write compressed output [0]\n -v INT\
    \                           Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --mpi-runner STR                 Use MPI on compute cluster with\
    \ this MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL          \
    \     Reuse tmp filse in tmp/latest folder ignoring parameters and version changes\
    \ [0]\n --remove-tmp-files BOOL          Delete temporary files [0]\nexpert: \
    \                        \n --filter-hits BOOL               Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT               Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --create-lookup INT\
    \              Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT           Chain overlapping alignments [0]\n --merge-query INT         \
    \       Combine ORFs/split sequences to a single entry [1]\n --strand INT    \
    \                 Strand selection only works for DNA/DNA search 0: reverse, 1:\
    \ forward, 2: both [1]\n\nexamples:\n # Update clustering workflow \n # Perform\
    \ initial clustering of 5000 sequences\n mmseqs createdb <(head -n 10000 examples/DB.fasta)\
    \ sequenceDB\n mmseqs cluster sequenceDB clusterDB tmp\n \n # Use-case 1: Update\
    \ by only adding sequences\n mmseqs createdb examples/QUERY.fasta addedSequenceDB\n\
    \ mmseqs concatdbs sequenceDB addedSequenceDB allSequenceDB\n mmseqs concatdbs\
    \ sequenceDB_h addedSequenceDB_h allSequenceDB_h\n mmseqs clusterupdate sequenceDB\
    \ allSequenceDB clusterDB newSequenceDB newClusterDB tmp\n \n # Use-case 2: Update\
    \ clustering with deletions)\n # Create a FASTA file missing 500 of the original\
    \ sequences and 2500 new ones\n mmseqs createdb <(tail -n +1001 examples/DB.fasta\
    \ | head -n 15000) updateSequenceDB\n mmseqs clusterupdate sequenceDB updateSequenceDB\
    \ clusterDB newSequenceDB newClusterDB tmp\n \nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Hauser\
    \ M, Steinegger M, Soding J: MMseqs software suite for fast and deep clustering\
    \ and searching of large protein sequence sets. Bioinformatics, 32(9), 1323-1330\
    \ (2016)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - mergeclusters
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs mergeclusters <i:sequenceDB> <o:clusterDB> <i:clusterDB1>\
    \ ... <i:clusterDBn> [options]\n By Maria Hauser & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: common:           \n --threads INT      Number of CPU-cores used (all\
    \ by default) [2]\n --compressed INT   Write compressed output [0]\n -v INT  \
    \           Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
    \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
    \ 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - diffseqdbs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --use-seq-id
    description: Sequence ID (Uniprot, GenBank, ...) is used for identifying matches
      between the old and the new DB [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs diffseqdbs <i:oldSequenceDB> <i:newSequenceDB> <o:rmSeqKeysFile>\
    \ <o:keptSeqKeysFile> <o:newSeqKeysFile> [options]\n By Clovis Galiez & Martin\
    \ Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:             \n --use-seq-id\
    \ BOOL  Sequence ID (Uniprot, GenBank, ...) is used for identifying matches between\
    \ the old and the new DB [0]\ncommon:           \n --threads INT      Number of\
    \ CPU-cores used (all by default) [2]\n --compressed INT   Write compressed output\
    \ [0]\n -v INT             Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - summarizeheaders
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --header-type
    description: 'Header Type: 1: Uniclust, 2: Metaclust [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --summary-prefix
    description: Set the cluster summary prefix [cl]
    args: !SimpleFlagArg
      name: STR
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs summarizeheaders <i:queryDB> <i:targetDB> <i:resultDb>\
    \ <o:headerDB> [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: misc:\
    \                 \n --header-type INT      Header Type: 1: Uniclust, 2: Metaclust\
    \ [1]\ncommon:               \n --threads INT          Number of CPU-cores used\
    \ (all by default) [2]\n --compressed INT       Write compressed output [0]\n\
    \ -v INT                 Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\nexpert:               \n --summary-prefix STR   Set the cluster\
    \ summary prefix [cl]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita M, von den Driesch\
    \ L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases of clustered\
    \ and deeply annotated protein sequences and alignments. Nucleic Acids Research\
    \ 45(D1), D170-D176 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - maskbygff
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --gff-type
    description: Type in the GFF file to filter by []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs maskbygff <i:gff3File> <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:            \n --gff-type\
    \ STR    Type in the GFF file to filter by []\n --id-offset INT   Numeric ids\
    \ in index file are offset by this value [0]\ncommon:          \n -v INT     \
    \       Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\n\
    references:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
    \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
    \ 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2flat
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --use-fasta-header
    description: Use the id parsed from the fasta header as the index key instead
      of using incrementing numeric identifiers [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2flat <i:queryDB> <i:targetDB> <i:resultDB> <o:fastaDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:\
    \                   \n --use-fasta-header BOOL  Use the id parsed from the fasta\
    \ header as the index key instead of using incrementing numeric identifiers [0]\n\
    common:                 \n -v INT                   Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createbintaxonomy
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createbintaxonomy <i:names.dmp> <i:nodes.dmp> <i:merged.dmp>\
    \ <o:taxonomyFile> [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: common:\
    \ \n -v INT   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    \nreferences:\n - Mirdita M, Steinegger M, Breitwieser F, Soding J, Levy Karin\
    \ E: Fast and sensitive taxonomic assignment to metagenomic contigs. bioRxiv,\
    \ 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2dnamsa
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --skip-query
    description: Skip the query sequence [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2dnamsa <i:queryDB> <i:targetDB> <i:resultDB> <o:msaDB>\
    \ [options]\n By Martin Steinegger (martin.steinegger@snu.ac.kr)\noptions: common:\
    \           \n --threads INT      Number of CPU-cores used (all by default) [2]\n\
    \ --compressed INT   Write compressed output [0]\n -v INT             Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:           \n\
    \ --skip-query BOOL  Skip the query sequence [0]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - convertalis
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --format-mode
    description: 'Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length,
      3: Pretty HTML [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-output
    description: "Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
      tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
      qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
      \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]"
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs convertalis <i:queryDb> <i:targetDb> <i:alignmentDB> <o:alignmentFile>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: align:\
    \                   \n --gap-open TWIN           Gap open cost [nucl:5,aa:11]\n\
    \ --gap-extend TWIN         Gap extension cost [nucl:2,aa:1]\nmisc:          \
    \          \n --format-mode INT         Output format: 0: BLAST-TAB, 1: SAM, 2:\
    \ BLAST-TAB + query/db length, 3: Pretty HTML [0]\n --format-output STR      \
    \ Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
    \                           tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
    \                           qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
    \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]\n\
    \ --translation-table INT   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL,\
    \ 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n               \
    \            9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST,\
    \ 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n               \
    \            15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL,\
    \ 22) SCENEDESMUS_MITOCHONDRIAL\n                           23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
    \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT,\
    \ 28) CONDYLOSTOMA\n                            29) MESODINIUM, 30) PERTRICH,\
    \ 31) BLASTOCRITHIDIA [1]\n --search-type INT         Search type 0: auto 1: amino\
    \ acid, 2: translated, 3: nucleotide, 4: translated nucleotide alignment [0]\n\
    common:                  \n --sub-mat TWIN            Substitution matrix file\
    \ [nucl:nucleotide.out,aa:blosum62.out]\n --db-load-mode INT        Database preload\
    \ mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT         \
    \    Number of CPU-cores used (all by default) [2]\n --compressed INT        \
    \  Write compressed output [0]\n -v INT                    Verbosity level: 0:\
    \ quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:                  \n --db-output\
    \ BOOL          Return a result DB instead of a text file [0]\n\nexamples:\n #\
    \ Create output in BLAST M8 format (12 columns):\n #  (1,2) identifiers for query\
    \ and target sequences/profiles,\n #  (3) sequence identity, (4) alignment length,\
    \ (5) number of mismatches,\n #  (6) number of gap openings, (7-8, 9-10) alignment\
    \ start and end-position in query and in target,\n #  (11) E-value, and (12) bit\
    \ score\n mmseqs convertalis queryDB targetDB result.m8\n \n # Create a TSV containing\
    \ pairwise alignments\n mmseqs convertalis queryDB targetDB result.tsv --format-output\
    \ query,target,qaln,taln\n \n # Annotate a alignment result with taxonomy information\
    \ from targetDB\n mmseqs convertalis queryDB targetDB result.tsv --format-output\
    \ query,target,taxid,taxname,taxlineage\n \n  Create SAM output\n mmseqs convertalis\
    \ queryDB targetDB result.sam --format-mode 1\n \n # Create a TSV containing which\
    \ query file a result comes from\n mmseqs createdb euk_queries.fasta bac_queries.fasta\
    \ queryDB\n mmseqs convertalis queryDB targetDB result.tsv --format-output qset,query,target\n\
    \ \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - ungappedprefilter
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs ungappedprefilter <i:queryDB> <i:targetDB> <o:prefilterDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                \n --comp-bias-corr INT       Correct for locally biased amino\
    \ acid composition (range 0-1) [1]\n --min-ungapped-score INT   Accept only matches\
    \ with ungapped alignment score above threshold [15]\n --max-seqs INT        \
    \     Maximum results per query sequence allowed to pass the prefilter (affects\
    \ sensitivity) [300]\nalign:                    \n -c FLOAT                  \
    \ List matches above this fraction of aligned (covered) residues (see --cov-mode)\
    \ [0.000]\n -e DOUBLE                  List matches below this E-value (range\
    \ 0.0-inf) [1.000E-03]\n --cov-mode INT             0: coverage of query and target\n\
    \                            1: coverage of target\n                         \
    \   2: coverage of query\n                            3: target seq. length has\
    \ to be at least x% of query length\n                            4: query seq.\
    \ length has to be at least x% of target length\n                            5:\
    \ short seq. needs to be at least x% of the other seq. length [0]\ncommon:   \
    \                \n --sub-mat TWIN             Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT              Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT           Write compressed output [0]\n -v INT                     Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - easy-taxonomy
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --orf-filter
    description: "Prefilter query ORFs with non-selective search\nOnly used during\
      \ nucleotide-vs-protein classification\nNOTE: Consider disabling when classifying\
      \ short reads [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-filter-e
    description: E-value threshold used for query ORF prefiltering [1.000E+02]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --orf-filter-s
    description: Sensitivity used for query ORF prefiltering [2.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --lca-mode
    description: 'LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit
      [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --majority
    description: minimal fraction of agreement among taxonomically assigned sequences
      of a set [0.500]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --vote-mode
    description: 'Mode of assigning weights to compute majority. 0: uniform, 1: minus
      log E-value, 2: score [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --blacklist
    description: Comma separated list of ignored taxa in LCA computation [12908:unclassified
      sequences,28384:other sequences]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --report-mode
    description: 'Taxonomy report mode 0: Kraken 1: Krona [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-mode
    description: 'Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length,
      3: Pretty HTML [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-output
    description: "Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
      tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
      qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
      \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]"
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --first-seq-as-repr
    description: Use the first sequence of the clustering result as representative
      sequence [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --target-column
    description: Select a target column (default 1), 0 if no target id exists [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --full-header
    description: Replace DB ID by its corresponding Full Header [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --idx-seq-src
    description: '0: auto, 1: split/translated sequences, 2: input sequences [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs easy-taxonomy <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]>\
    \ <i:targetDB> <o:taxReports> <tmpDir> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                      \n --comp-bias-corr INT             Correct\
    \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
    \ BOOL          Artificially add entries of queries with themselves (for clustering)\
    \ [0]\n --seed-sub-mat TWIN              Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                         Sensitivity:\
    \ 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n -k INT                       \
    \    k-mer length (0: automatically set to optimum) [0]\n --k-score INT      \
    \              k-mer threshold for generating similar k-mer lists [2147483647]\n\
    \ --alph-size TWIN                 Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --max-seqs INT                   Maximum results per query sequence allowed\
    \ to pass the prefilter (affects sensitivity) [300]\n --split INT            \
    \          Split input into N equally distributed chunks. 0: set the best split\
    \ automatically [0]\n --split-mode INT                 0: split target db; 1:\
    \ split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --diag-score BOOL                Use ungapped\
    \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT        Extract\
    \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                \
    \       Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with\
    \ low complexity masking [1]\n --mask-lower-case INT            Lowercase letters\
    \ will be excluded from k-mer search 0: include region, 1: exclude region [0]\n\
    \ --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [0]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --orf-filter INT    \
    \             Prefilter query ORFs with non-selective search\n               \
    \                   Only used during nucleotide-vs-protein classification\n  \
    \                                NOTE: Consider disabling when classifying short\
    \ reads [0]\n --orf-filter-e DOUBLE            E-value threshold used for query\
    \ ORF prefiltering [1.000E+02]\n --orf-filter-s FLOAT             Sensitivity\
    \ used for query ORF prefiltering [2.000]\n --lca-mode INT                   LCA\
    \ Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit [3]\n --majority\
    \ FLOAT                 minimal fraction of agreement among taxonomically assigned\
    \ sequences of a set [0.500]\n --vote-mode INT                  Mode of assigning\
    \ weights to compute majority. 0: uniform, 1: minus log E-value, 2: score [1]\n\
    \ --lca-ranks STR                  Add column with specified ranks (',' separated)\
    \ []\n --tax-lineage INT                0: don't show, 1: add all lineage names,\
    \ 2: add all lineage taxids [0]\n --blacklist STR                  Comma separated\
    \ list of ignored taxa in LCA computation [12908:unclassified sequences,28384:other\
    \ sequences]\n --rescore-mode INT               Rescore diagonals with:\n    \
    \                              0: Hamming distance\n                         \
    \         1: local alignment (score only)\n                                  2:\
    \ local alignment\n                                  3: global alignment\n   \
    \                               4: longest alignment fulfilling window quality\
    \ criterion [0]\n --allow-deletion BOOL            Allow deletions in a MSA [0]\n\
    \ --min-length INT                 Minimum codon number in open reading frames\
    \ [30]\n --max-length INT                 Maximum codon number in open reading\
    \ frames [32734]\n --max-gaps INT                   Maximum number of codons with\
    \ gaps or unknown residues before an open reading frame is rejected [2147483647]\n\
    \ --contig-start-mode INT          Contig start can be 0: incomplete, 1: complete,\
    \ 2: both [2]\n --contig-end-mode INT            Contig end can be 0: incomplete,\
    \ 1: complete, 2: both [2]\n --orf-start-mode INT             Orf fragment can\
    \ be 0: from start to stop, 1: from any to stop, 2: from last encountered start\
    \ to stop (no start in the middle) [1]\n --forward-frames STR             Comma-separated\
    \ list of frames on the forward strand to be extracted [1,2,3]\n --reverse-frames\
    \ STR             Comma-separated list of frames on the reverse strand to be extracted\
    \ [1,2,3]\n --translation-table INT          1) CANONICAL, 2) VERT_MITOCHONDRIAL,\
    \ 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n\
    \                                  9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11)\
    \ PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                                  15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \                   23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\n --report-mode INT                Taxonomy\
    \ report mode 0: Kraken 1: Krona [0]\n --format-mode INT                Output\
    \ format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML\
    \ [0]\n --format-output STR              Choose comma separated list of output\
    \ columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
    \                                  tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
    \                                  qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
    \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]\n\
    \ --first-seq-as-repr BOOL         Use the first sequence of the clustering result\
    \ as representative sequence [0]\n --target-column INT              Select a target\
    \ column (default 1), 0 if no target id exists [1]\n --full-header BOOL      \
    \         Replace DB ID by its corresponding Full Header [0]\n --idx-seq-src INT\
    \                0: auto, 1: split/translated sequences, 2: input sequences [0]\n\
    \ --dbtype INT                     Database type 0: auto, 1: amino acid 2: nucleotides\
    \ [0]\n --shuffle BOOL                   Shuffle input database [1]\n --createdb-mode\
    \ INT              Createdb mode 0: copy data, 1: soft link data and write new\
    \ index (works only with single line fasta/q) [1]\ncommon:                   \
    \      \n --compressed INT                 Write compressed output [0]\n --threads\
    \ INT                    Number of CPU-cores used (all by default) [2]\n -v INT\
    \                           Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --sub-mat TWIN                   Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
    \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --mpi-runner STR                 Use MPI on compute cluster with this\
    \ MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL               Reuse\
    \ tmp filse in tmp/latest folder ignoring parameters and version changes [0]\n\
    \ --remove-tmp-files BOOL          Delete temporary files [1]\nexpert:       \
    \                  \n --filter-hits BOOL               Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT               Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --create-lookup INT\
    \              Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT           Chain overlapping alignments [0]\n --merge-query INT         \
    \       Combine ORFs/split sequences to a single entry [1]\n --strand INT    \
    \                 Strand selection only works for DNA/DNA search 0: reverse, 1:\
    \ forward, 2: both [1]\n --db-output BOOL                 Return a result DB instead\
    \ of a text file [0]\n --write-lookup INT               write .lookup file containing\
    \ mapping from internal id, fasta id and file number [0]\n\nexamples:\n # Assign\
    \ taxonomic labels to FASTA sequences\n   - result_tophit_aln: top hits\n   -\
    \ result_tophit_report: coverage profiles per database entry\n   - result_report:\
    \ kraken style report\n # Download a sequence database with taxonomy information\n\
    \ mmseqs databases UniProtKB/Swiss-Prot swissprotDB tmp\n \n # Assign taxonomy\
    \ based on 2bLCA hit\n mmseqs easy-taxonomy examples/DB.fasta swissprotDB result\
    \ tmp\n \n # Assign taxonomy based on top hit\n mmseqs easy-taxonomy examples/DB.fasta\
    \ swissprotDB result tmp --lca-mode 4\n \n # Assign taxonomy without ORF prefilter\n\
    \ # Classifies higher percentage for short nucleotide input (e.g. short reads)\
    \ at the cost of speed\n mmseqs easy-taxonomy queryNuclDB swissprotDB result tmp\
    \ --orf-filter 0\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n - Mirdita M, Steinegger M, Breitwieser F, Soding\
    \ J, Levy Karin E: Fast and sensitive taxonomic assignment to metagenomic contigs.\
    \ bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - enrich
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [3]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --expansion-mode
    description: 'Update score, E-value, and sequence identity by 0: input alignment
      1: rescoring the inferred backtrace [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs enrich <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: prefilter:       \
    \               \n --comp-bias-corr INT             Correct for locally biased\
    \ amino acid composition (range 0-1) [1]\n --add-self-matches BOOL          Artificially\
    \ add entries of queries with themselves (for clustering) [0]\n --seed-sub-mat\
    \ TWIN              Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n\
    \ -s FLOAT                         Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive\
    \ [4.000]\n -k INT                           k-mer length (0: automatically set\
    \ to optimum) [0]\n --k-score INT                    k-mer threshold for generating\
    \ similar k-mer lists [2147483647]\n --alph-size TWIN                 Alphabet\
    \ size (range 2-21) [nucl:5,aa:21]\n --max-seqs INT                   Maximum\
    \ results per query sequence allowed to pass the prefilter (affects sensitivity)\
    \ [300]\n --split INT                      Split input into N equally distributed\
    \ chunks. 0: set the best split automatically [0]\n --split-mode INT         \
    \        0: split target db; 1: split query db; 2: auto, depending on main memory\
    \ [2]\n --split-memory-limit BYTE        Set max memory per split. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available system memory [0]\n --diag-score BOOL\
    \                Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
    \ INT        Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
    \                       Mask sequences in k-mer stage: 0: w/o low complexity masking,\
    \ 1: with low complexity masking [1]\n --mask-lower-case INT            Lowercase\
    \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
    \ [0]\n --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [0]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [3]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\n --expansion-mode INT             Update\
    \ score, E-value, and sequence identity by 0: input alignment 1: rescoring the\
    \ inferred backtrace [1]\ncommon:                         \n --sub-mat TWIN  \
    \                 Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
    \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                    Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                 Write compressed output [0]\n -v INT\
    \                           Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --mpi-runner STR                 Use MPI on compute cluster with\
    \ this MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL          \
    \     Reuse tmp filse in tmp/latest folder ignoring parameters and version changes\
    \ [0]\n --remove-tmp-files BOOL          Delete temporary files [0]\nexpert: \
    \                        \n --filter-hits BOOL               Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT               Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --create-lookup INT\
    \              Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT           Chain overlapping alignments [0]\n --merge-query INT         \
    \       Combine ORFs/split sequences to a single entry [1]\n --strand INT    \
    \                 Strand selection only works for DNA/DNA search 0: reverse, 1:\
    \ forward, 2: both [1]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2msa
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --msa-format-mode
    description: "Format MSA as: 0: binary cA3M DB\n1: binary ca3m w. consensus DB\n\
      2: aligned FASTA DB\n3: aligned FASTA w. header summary\n4: STOCKHOLM flat file\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --summary-prefix
    description: Set the cluster summary prefix [cl]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --skip-query
    description: Skip the query sequence [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2msa <i:queryDB> <i:targetDB> <i:resultDB> <o:msaDB>\
    \ [options]\n By Martin Steinegger (martin.steinegger@snu.ac.kr) & Milot Mirdita\
    \ <milot@mirdita.de> & Clovis Galiez\noptions: prefilter:             \n --comp-bias-corr\
    \ INT    Correct for locally biased amino acid composition (range 0-1) [1]\nalign:\
    \                 \n --gap-open TWIN         Gap open cost [nucl:5,aa:11]\n --gap-extend\
    \ TWIN       Gap extension cost [nucl:2,aa:1]\nprofile:               \n --filter-msa\
    \ INT        Filter msa: 0: do not filter, 1: filter [0]\n --max-seq-id FLOAT\
    \      Reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]\
    \ [0.900]\n --qid FLOAT             Reduce diversity of output MSAs using min.seq.\
    \ identity with query sequences [0.0,1.0] [0.000]\n --qsc FLOAT             Reduce\
    \ diversity of output MSAs using min. score per aligned residue with query sequences\
    \ [-50.0,100.0] [-20.000]\n --cov FLOAT             Filter output MSAs using min.\
    \ fraction of query residues covered by matched sequences [0.0,1.0] [0.000]\n\
    \ --diff INT              Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\nmisc:\
    \                  \n --allow-deletion BOOL   Allow deletions in a MSA [0]\n --msa-format-mode\
    \ INT   Format MSA as: 0: binary cA3M DB\n                         1: binary ca3m\
    \ w. consensus DB\n                         2: aligned FASTA DB\n            \
    \             3: aligned FASTA w. header summary\n                         4:\
    \ STOCKHOLM flat file [0]\ncommon:                \n --sub-mat TWIN          Substitution\
    \ matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --threads INT          \
    \ Number of CPU-cores used (all by default) [2]\n --compressed INT        Write\
    \ compressed output [0]\n -v INT                  Verbosity level: 0: quiet, 1:\
    \ +errors, 2: +warnings, 3: +info [3]\nexpert:                \n --summary-prefix\
    \ STR    Set the cluster summary prefix [cl]\n --skip-query BOOL       Skip the\
    \ query sequence [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - cpdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs cpdb <i:srcDB> <o:dstDB> [options]\n By Milot Mirdita\
    \ <milot@mirdita.de>\noptions: common: \n -v INT   Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - convertca3m
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs convertca3m <i:ca3mDB> <o:resultDB> [options]\n By Milot\
    \ Mirdita <milot@mirdita.de>\noptions: common:           \n --threads INT    \
    \  Number of CPU-cores used (all by default) [2]\n --compressed INT   Write compressed\
    \ output [0]\n -v INT             Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - extractalignedregion
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --extract-mode
    description: 'Extract from 1: Query, 2: Target [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs extractalignedregion <i:queryDB> <i:targetDB> <i:resultDB>\
    \ <o:sequenceDB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: misc:               \n --extract-mode INT   Extract from 1: Query, 2:\
    \ Target [2]\ncommon:             \n --compressed INT     Write compressed output\
    \ [0]\n --db-load-mode INT   Database preload mode 0: auto, 1: fread, 2: mmap,\
    \ 3: mmap+touch [0]\n --threads INT        Number of CPU-cores used (all by default)\
    \ [2]\n -v INT               Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - easy-rbh
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-mode
    description: 'Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length,
      3: Pretty HTML [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-output
    description: "Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
      tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
      qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
      \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]"
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --overlap
    description: Maximum overlap of covered regions [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --greedy-best-hits
    description: Choose the best hits greedily to cover the query [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs easy-rbh <i:queryFastaFile1[.gz|.bz2]> <i:targetFastaFile[.gz|.bz2]>|<i:targetDB>\
    \ <o:alignmentFile> <tmpDir> [options]\n By Eli Levy Karin & Martin Steinegger\
    \ <martin.steinegger@snu.ac.kr>\noptions: prefilter:                      \n --comp-bias-corr\
    \ INT             Correct for locally biased amino acid composition (range 0-1)\
    \ [1]\n --add-self-matches BOOL          Artificially add entries of queries with\
    \ themselves (for clustering) [0]\n --seed-sub-mat TWIN              Substitution\
    \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
    \                         Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]\n\
    \ -k INT                           k-mer length (0: automatically set to optimum)\
    \ [0]\n --k-score INT                    k-mer threshold for generating similar\
    \ k-mer lists [2147483647]\n --alph-size TWIN                 Alphabet size (range\
    \ 2-21) [nucl:5,aa:21]\n --max-seqs INT                   Maximum results per\
    \ query sequence allowed to pass the prefilter (affects sensitivity) [300]\n --split\
    \ INT                      Split input into N equally distributed chunks. 0: set\
    \ the best split automatically [0]\n --split-mode INT                 0: split\
    \ target db; 1: split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --diag-score BOOL                Use ungapped\
    \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT        Extract\
    \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                \
    \       Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with\
    \ low complexity masking [1]\n --mask-lower-case INT            Lowercase letters\
    \ will be excluded from k-mer search 0: include region, 1: exclude region [0]\n\
    \ --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [3]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\n --format-mode INT                Output\
    \ format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML\
    \ [0]\n --format-output STR              Choose comma separated list of output\
    \ columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
    \                                  tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
    \                                  qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
    \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]\n\
    \ --overlap FLOAT                  Maximum overlap of covered regions [0.000]\n\
    \ --dbtype INT                     Database type 0: auto, 1: amino acid 2: nucleotides\
    \ [0]\n --shuffle BOOL                   Shuffle input database [1]\n --createdb-mode\
    \ INT              Createdb mode 0: copy data, 1: soft link data and write new\
    \ index (works only with single line fasta/q) [1]\n --greedy-best-hits BOOL  \
    \        Choose the best hits greedily to cover the query [0]\ncommon:       \
    \                  \n --sub-mat TWIN                   Substitution matrix file\
    \ [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len INT                Maximum\
    \ sequence length [65535]\n --db-load-mode INT               Database preload\
    \ mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT         \
    \           Number of CPU-cores used (all by default) [2]\n --compressed INT \
    \                Write compressed output [0]\n -v INT                        \
    \   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner\
    \ STR                 Use MPI on compute cluster with this MPI command (e.g. \"\
    mpirun -np 42\") []\n --force-reuse BOOL               Reuse tmp filse in tmp/latest\
    \ folder ignoring parameters and version changes [0]\n --remove-tmp-files BOOL\
    \          Delete temporary files [1]\nexpert:                         \n --filter-hits\
    \ BOOL               Filter hits by seq.id. and coverage [0]\n --sort-results\
    \ INT               Sort results: 0: no sorting, 1: sort by E-value (Alignment)\
    \ or seq.id. (Hamming) [0]\n --create-lookup INT              Create database\
    \ lookup file (can be very large) [0]\n --chain-alignments INT           Chain\
    \ overlapping alignments [0]\n --merge-query INT                Combine ORFs/split\
    \ sequences to a single entry [1]\n --strand INT                     Strand selection\
    \ only works for DNA/DNA search 0: reverse, 1: forward, 2: both [1]\n --db-output\
    \ BOOL                 Return a result DB instead of a text file [0]\n --write-lookup\
    \ INT               write .lookup file containing mapping from internal id, fasta\
    \ id and file number [0]\n\nexamples:\n # Assign reciprocal best hit\n mmseqs\
    \ easy-rbh examples/QUERY.fasta examples/DB.fasta result tmp\n \n \nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - orftocontig
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs orftocontig <i:contigsSequenceDB> <i:extractedOrfsHeadersDB>\
    \ <o:orfsAlignedToContigDB> [options]\n By Eli Levy Karin <eli.levy.karin@gmail.com>\
    \ \noptions: common:           \n --threads INT      Number of CPU-cores used\
    \ (all by default) [2]\n --compressed INT   Write compressed output [0]\n -v INT\
    \             Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
    \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
    \ 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - nrtotaxmapping
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs nrtotaxmapping <i:accession2taxid1> ... <i:accession2taxidN>\
    \ <i:seqDB> <o:tsvFile> [options]\n By Milot Mirdita <milot@mirdita.de>\noptions:\
    \ common:        \n --threads INT   Number of CPU-cores used (all by default)\
    \ [2]\n -v INT          Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Mirdita M, Steinegger M, Breitwieser F, Soding\
    \ J, Levy Karin E: Fast and sensitive taxonomic assignment to metagenomic contigs.\
    \ bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - taxonomyreport
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --report-mode
    description: 'Taxonomy report mode 0: Kraken 1: Krona [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs taxonomyreport <i:seqTaxDB> <i:taxResultDB/resultDB/sequenceDB>\
    \ <o:taxonomyReport> [options]\n By Milot Mirdita <milot@mirdita.de> & Florian\
    \ Breitwieser <florian.bw@gmail.com>\noptions: misc:              \n --report-mode\
    \ INT   Taxonomy report mode 0: Kraken 1: Krona [0]\ncommon:            \n --threads\
    \ INT       Number of CPU-cores used (all by default) [2]\n -v INT           \
    \   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
    \ - Mirdita M, Steinegger M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive\
    \ taxonomic assignment to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - filterdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-expression
    description: Specify a mathematical expression to filter lines []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --filter-column
    description: column [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --column-to-take
    description: column to take in join mode. If -1, the whole line is taken [-1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --filter-regex
    description: 'Regex to select column (example float: [0-9]*(.[0-9]+)? int:[1-9]{1}[0-9])
      [^.*$]'
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --positive-filter
    description: Used in conjunction with --filter-file. If true, out  = in \intersect
      filter ; if false, out = in - filter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-file
    description: Specify a file that contains the filtering elements []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --beats-first
    description: Filter by comparing each entry to the first entry [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --mapping-file
    description: Specify a file that translates the keys of a DB to new keys, TSV
      format []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --trim-to-one-column
    description: Output only the column specified by --filter-column [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --extract-lines
    description: Extract n lines of each entry [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --comparison-operator
    description: Filter by comparing each entry row numerically by using the le) less-than-equal,
      ge) greater-than-equal or e) equal operator []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --comparison-value
    description: Filter by comparing each entry to this value [0.000E+00]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --sort-entries
    description: 'Sort column set by --filter-column, by 0: no sorting, 1: increasing,
      2: decreasing, 3: random shuffle [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --join-db
    description: Join another database entry with respect to the database identifier
      in the chosen column []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs filterdb <i:resultDB> <o:resultDB> [options]\n By Clovis\
    \ Galiez & Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                 \n --add-self-matches BOOL     Artificially add entries of queries\
    \ with themselves (for clustering) [0]\nmisc:                      \n --filter-expression\
    \ STR     Specify a mathematical expression to filter lines []\n --filter-column\
    \ INT         column [1]\n --column-to-take INT        column to take in join\
    \ mode. If -1, the whole line is taken [-1]\n --filter-regex STR          Regex\
    \ to select column (example float: [0-9]*(.[0-9]+)? int:[1-9]{1}[0-9]) [^.*$]\n\
    \ --positive-filter BOOL      Used in conjunction with --filter-file. If true,\
    \ out  = in \\intersect filter ; if false, out = in - filter [1]\n --filter-file\
    \ STR           Specify a file that contains the filtering elements []\n --beats-first\
    \ BOOL          Filter by comparing each entry to the first entry [0]\n --mapping-file\
    \ STR          Specify a file that translates the keys of a DB to new keys, TSV\
    \ format []\n --trim-to-one-column BOOL   Output only the column specified by\
    \ --filter-column [0]\n --extract-lines INT         Extract n lines of each entry\
    \ [0]\n --comparison-operator STR   Filter by comparing each entry row numerically\
    \ by using the le) less-than-equal, ge) greater-than-equal or e) equal operator\
    \ []\n --comparison-value DOUBLE   Filter by comparing each entry to this value\
    \ [0.000E+00]\n --sort-entries INT          Sort column set by --filter-column,\
    \ by 0: no sorting, 1: increasing, 2: decreasing, 3: random shuffle [0]\n --join-db\
    \ STR               Join another database entry with respect to the database identifier\
    \ in the chosen column []\ncommon:                    \n --threads INT       \
    \        Number of CPU-cores used (all by default) [2]\n --compressed INT    \
    \        Write compressed output [0]\n -v INT                      Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nexamples:\n # Retain top\
    \ alignment for each query (alignment DBs are sorted by E-value)\n mmseqs filterdb\
    \ alignmentDB topHitAlignmentDB --extract-lines 1\n \n # Extract alignments with\
    \ Seq.id. greater than 90%\n mmseqs filterdb alignmentDB scoreGreater35AlignmentDB\
    \ --comparison-operator ge --comparison-value 0.9 --filter-column 2\n \n # Retain\
    \ all hits matching a regular expression\n mmseqs filterdb alignmentDB regexFilteredDB\
    \ --filter-regex '^[1-9].$' --filter-column 2\n \n # Remove all hits to target\
    \ keys contained in file db.index\n mmseqs filterdb --filter-file db.index --positive-filter\
    \ false\n \n # Retain all hits matching any boolean expression\n mmseqs filterdb\
    \ --filter-expression '$1 * $2 >= 200'\n \nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - easy-search
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-mode
    description: 'Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length,
      3: Pretty HTML [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-output
    description: "Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
      tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
      qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
      \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]"
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --overlap
    description: Maximum overlap of covered regions [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --greedy-best-hits
    description: Choose the best hits greedily to cover the query [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs easy-search <i:queryFastaFile1[.gz|.bz2]> ... <i:queryFastaFileN[.gz|.bz2]>|<i:stdin>\
    \ <i:targetFastaFile[.gz]>|<i:targetDB> <o:alignmentFile> <tmpDir> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                      \n --comp-bias-corr INT             Correct\
    \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
    \ BOOL          Artificially add entries of queries with themselves (for clustering)\
    \ [0]\n --seed-sub-mat TWIN              Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                         Sensitivity:\
    \ 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]\n -k INT                       \
    \    k-mer length (0: automatically set to optimum) [0]\n --k-score INT      \
    \              k-mer threshold for generating similar k-mer lists [2147483647]\n\
    \ --alph-size TWIN                 Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --max-seqs INT                   Maximum results per query sequence allowed\
    \ to pass the prefilter (affects sensitivity) [300]\n --split INT            \
    \          Split input into N equally distributed chunks. 0: set the best split\
    \ automatically [0]\n --split-mode INT                 0: split target db; 1:\
    \ split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --diag-score BOOL                Use ungapped\
    \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT        Extract\
    \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                \
    \       Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with\
    \ low complexity masking [1]\n --mask-lower-case INT            Lowercase letters\
    \ will be excluded from k-mer search 0: include region, 1: exclude region [0]\n\
    \ --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [3]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\n --format-mode INT                Output\
    \ format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML\
    \ [0]\n --format-output STR              Choose comma separated list of output\
    \ columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
    \                                  tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
    \                                  qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
    \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]\n\
    \ --overlap FLOAT                  Maximum overlap of covered regions [0.000]\n\
    \ --dbtype INT                     Database type 0: auto, 1: amino acid 2: nucleotides\
    \ [0]\n --shuffle BOOL                   Shuffle input database [1]\n --createdb-mode\
    \ INT              Createdb mode 0: copy data, 1: soft link data and write new\
    \ index (works only with single line fasta/q) [0]\n --greedy-best-hits BOOL  \
    \        Choose the best hits greedily to cover the query [0]\ncommon:       \
    \                  \n --sub-mat TWIN                   Substitution matrix file\
    \ [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len INT                Maximum\
    \ sequence length [65535]\n --db-load-mode INT               Database preload\
    \ mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT         \
    \           Number of CPU-cores used (all by default) [2]\n --compressed INT \
    \                Write compressed output [0]\n -v INT                        \
    \   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner\
    \ STR                 Use MPI on compute cluster with this MPI command (e.g. \"\
    mpirun -np 42\") []\n --force-reuse BOOL               Reuse tmp filse in tmp/latest\
    \ folder ignoring parameters and version changes [0]\n --remove-tmp-files BOOL\
    \          Delete temporary files [1]\nexpert:                         \n --filter-hits\
    \ BOOL               Filter hits by seq.id. and coverage [0]\n --sort-results\
    \ INT               Sort results: 0: no sorting, 1: sort by E-value (Alignment)\
    \ or seq.id. (Hamming) [0]\n --create-lookup INT              Create database\
    \ lookup file (can be very large) [0]\n --chain-alignments INT           Chain\
    \ overlapping alignments [0]\n --merge-query INT                Combine ORFs/split\
    \ sequences to a single entry [1]\n --strand INT                     Strand selection\
    \ only works for DNA/DNA search 0: reverse, 1: forward, 2: both [1]\n --db-output\
    \ BOOL                 Return a result DB instead of a text file [0]\n --write-lookup\
    \ INT               write .lookup file containing mapping from internal id, fasta\
    \ id and file number [0]\n\nexamples:\n # Search multiple FASTA against FASTA\
    \ (like BLASTP, TBLASTN, BLASTX, BLASTN --search-type 3, TBLASTX --search-type\
    \ 2)\n mmseqs easy-search examples/QUERY.fasta examples/QUERY.fasta examples/DB.fasta\
    \ result.m8 tmp\n \n # Iterative profile search from stdin (like PSI-BLAST)\n\
    \ cat examples/QUERY.fasta | mmseqs easy-search stdin examples/DB.fasta result.m8\
    \ tmp --num-iterations 2\n \n # Profile search against small databases (e.g. PFAM,\
    \ eggNOG)\n mmseqs databases PFAM pfam_db tmp\n mmseqs easy-search examples/QUERY.fasta\
    \ pfam_db res.m8 tmp\n \n # Exhaustive search against sequences or profiles (works\
    \ for large DBs)\n mmseqs easy-search examples/QUERY.fasta targetProfiles res.m8\
    \ tmp --slice-search\n \n # Increasing sensitivity search (from 2 to 7 in 3 steps)\n\
    \ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta result.m8 tmp --start-sens\
    \ 2 -s 7 --sens-steps 3\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita M, Steinegger M,\
    \ Soding J: MMseqs2 desktop and local web server app for fast, interactive sequence\
    \ searches. Bioinformatics, 35(16), 2856–2858 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - rbh
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [10]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs rbh <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir>\
    \ [options]\n By Eli Levy Karin\noptions: prefilter:                      \n --comp-bias-corr\
    \ INT             Correct for locally biased amino acid composition (range 0-1)\
    \ [0]\n --add-self-matches BOOL          Artificially add entries of queries with\
    \ themselves (for clustering) [0]\n --seed-sub-mat TWIN              Substitution\
    \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
    \                         Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n\
    \ -k INT                           k-mer length (0: automatically set to optimum)\
    \ [0]\n --k-score INT                    k-mer threshold for generating similar\
    \ k-mer lists [2147483647]\n --alph-size TWIN                 Alphabet size (range\
    \ 2-21) [nucl:5,aa:21]\n --max-seqs INT                   Maximum results per\
    \ query sequence allowed to pass the prefilter (affects sensitivity) [300]\n --split\
    \ INT                      Split input into N equally distributed chunks. 0: set\
    \ the best split automatically [0]\n --split-mode INT                 0: split\
    \ target db; 1: split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --diag-score BOOL                Use ungapped\
    \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT        Extract\
    \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                \
    \       Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with\
    \ low complexity masking [0]\n --mask-lower-case INT            Lowercase letters\
    \ will be excluded from k-mer search 0: include region, 1: exclude region [0]\n\
    \ --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [3]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [10]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\ncommon:                         \n --sub-mat\
    \ TWIN                   Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
    \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                    Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                 Write compressed output [0]\n -v INT\
    \                           Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --mpi-runner STR                 Use MPI on compute cluster with\
    \ this MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL          \
    \     Reuse tmp filse in tmp/latest folder ignoring parameters and version changes\
    \ [0]\n --remove-tmp-files BOOL          Delete temporary files [0]\nexpert: \
    \                        \n --filter-hits BOOL               Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT               Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --create-lookup INT\
    \              Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT           Chain overlapping alignments [0]\n --merge-query INT         \
    \       Combine ORFs/split sequences to a single entry [1]\n --strand INT    \
    \                 Strand selection only works for DNA/DNA search 0: reverse, 1:\
    \ forward, 2: both [1]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - multihitdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --stat
    description: 'One of: linecount, mean, doolittle, charges, seqlen, firstline []'
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tsv
    description: Return output in TSV format [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs multihitdb <i:fastaFile1[.gz|bz2]> ... <i:fastaFileN[.gz|bz2]>\
    \ <o:setDB> <tmpDir> [options]\n By Ruoshi Zhang, Clovis Norroy & Milot Mirdita\
    \ <milot@mirdita.de>\noptions: misc:                       \n --dbtype INT   \
    \              Database type 0: auto, 1: amino acid 2: nucleotides [0]\n --shuffle\
    \ BOOL               Shuffle input database [1]\n --createdb-mode INT        \
    \  Createdb mode 0: copy data, 1: soft link data and write new index (works only\
    \ with single line fasta/q) [0]\n --id-offset INT              Numeric ids in\
    \ index file are offset by this value [0]\n --min-length INT             Minimum\
    \ codon number in open reading frames [30]\n --max-length INT             Maximum\
    \ codon number in open reading frames [32734]\n --max-gaps INT               Maximum\
    \ number of codons with gaps or unknown residues before an open reading frame\
    \ is rejected [2147483647]\n --contig-start-mode INT      Contig start can be\
    \ 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode INT        Contig\
    \ end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode INT  \
    \       Orf fragment can be 0: from start to stop, 1: from any to stop, 2: from\
    \ last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR         Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR         Comma-separated list of frames on the\
    \ reverse strand to be extracted [1,2,3]\n --translation-table INT      1) CANONICAL,\
    \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
    \ 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \               23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                            29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL  Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --add-orf-stop BOOL          Add stop codon '*' at complete\
    \ start and end [0]\n --stat STR                   One of: linecount, mean, doolittle,\
    \ charges, seqlen, firstline []\n --tsv BOOL                   Return output in\
    \ TSV format [0]\ncommon:                     \n --compressed INT            \
    \ Write compressed output [0]\n -v INT                       Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --threads INT           \
    \     Number of CPU-cores used (all by default) [2]\nexpert:                 \
    \    \n --write-lookup INT           write .lookup file containing mapping from\
    \ internal id, fasta id and file number [1]\n --create-lookup INT          Create\
    \ database lookup file (can be very large) [0]\n\nreferences:\n - Steinegger M,\
    \ Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - aggregatetax
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs aggregatetax <i:taxSeqDB> <i:setToSeqMap> <i:taxResPerSeqDB>\
    \ <o:taxResPerSetDB> [options]\n By Eli Levy Karin <eli.levy.karin@gmail.com>\n\
    options: misc:              \n --lca-ranks STR     Add column with specified ranks\
    \ (',' separated) []\n --tax-lineage INT   0: don't show, 1: add all lineage names,\
    \ 2: add all lineage taxids [0]\ncommon:            \n --compressed INT    Write\
    \ compressed output [0]\n --threads INT       Number of CPU-cores used (all by\
    \ default) [2]\n -v INT              Verbosity level: 0: quiet, 1: +errors, 2:\
    \ +warnings, 3: +info [3]\n\nexamples:\n # Download a sequence database with taxonomy\
    \ information\n mmseqs databases UniProtKB/Swiss-Prot swissprotDB tmp\n \n # Create\
    \ a nucleotide sequence database from FASTA\n mmseqs createdb contigs.fasta contigsDb\n\
    \ \n # Extract all orfs from each contig and translate them\n mmseqs extractorfs\
    \ contigsDb orfsAaDb --translate\n \n # Assign taxonomy to each orf\n mmseqs taxonomy\
    \ orfsAaDb swissprotDB taxPerOrf tmp\n \n # Aggregate taxonomic assignments on\
    \ each contig\n mmseqs aggregatetax swissprotDB orfsAaDb_h taxPerOrf taxPerContig\
    \ --majority 0.5\n \n \nreferences:\n - Mirdita M, Steinegger M, Breitwieser F,\
    \ Soding J, Levy Karin E: Fast and sensitive taxonomic assignment to metagenomic\
    \ contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - extractorfs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs extractorfs <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:                       \n\
    \ --min-length INT             Minimum codon number in open reading frames [30]\n\
    \ --max-length INT             Maximum codon number in open reading frames [32734]\n\
    \ --max-gaps INT               Maximum number of codons with gaps or unknown residues\
    \ before an open reading frame is rejected [2147483647]\n --contig-start-mode\
    \ INT      Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT        Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT         Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR         Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR         Comma-separated list of frames on the\
    \ reverse strand to be extracted [1,2,3]\n --translation-table INT      1) CANONICAL,\
    \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
    \ 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \               23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                            29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL  Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT              Numeric ids in index file\
    \ are offset by this value [0]\ncommon:                     \n --threads INT \
    \               Number of CPU-cores used (all by default) [2]\n --compressed INT\
    \             Write compressed output [0]\n -v INT                       Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:           \
    \          \n --create-lookup INT          Create database lookup file (can be\
    \ very large) [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - lca
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --blacklist
    description: Comma separated list of ignored taxa in LCA computation [12908:unclassified
      sequences,28384:other sequences]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs lca <i:targetDB> <i:resultDB> <o:taxaDB> [options]\n By\
    \ Milot Mirdita <milot@mirdita.de>\noptions: misc:              \n --lca-ranks\
    \ STR     Add column with specified ranks (',' separated) []\n --blacklist STR\
    \     Comma separated list of ignored taxa in LCA computation [12908:unclassified\
    \ sequences,28384:other sequences]\n --tax-lineage INT   0: don't show, 1: add\
    \ all lineage names, 2: add all lineage taxids [0]\ncommon:            \n --compressed\
    \ INT    Write compressed output [0]\n --threads INT       Number of CPU-cores\
    \ used (all by default) [2]\n -v INT              Verbosity level: 0: quiet, 1:\
    \ +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, Steinegger M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive taxonomic\
    \ assignment to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - splitsequence
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [10000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs splitsequence <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:         \
    \             \n --sequence-overlap INT      Overlap between sequences [300]\n\
    \ --sequence-split-mode INT   Sequence split mode 0: copy data, 1: soft link data\
    \ and write new index, [1]\n --headers-split-mode INT    Header split mode: 0:\
    \ split position, 1: original header [0]\ncommon:                    \n --max-seq-len\
    \ INT           Maximum sequence length [10000]\n --threads INT              \
    \ Number of CPU-cores used (all by default) [2]\n --compressed INT           \
    \ Write compressed output [0]\n -v INT                      Verbosity level: 0:\
    \ quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:                    \n\
    \ --create-lookup INT         Create database lookup file (can be very large)\
    \ [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - translateaa
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs translateaa <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: common:       \
    \    \n --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - msa2result
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --match-mode
    description: '0: Columns that have a residue in the first sequence are kept, 1:
      columns that have a residue in --match-ratio of all sequences are kept [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --match-ratio
    description: Columns that have a residue in this ratio of all sequences are kept
      [0.500]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --msa-type
    description: 'MSA Type: 0: cA3M, 1: A3M, 2: FASTA [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --skip-query
    description: Skip the query sequence [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs msa2result <i:msaDB> <o:seqDB> <o:profileDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: prefilter:            \n --comp-bias-corr\
    \ INT   Correct for locally biased amino acid composition (range 0-1) [1]\nalign:\
    \                \n --gap-open TWIN        Gap open cost [nucl:5,aa:11]\n --gap-extend\
    \ TWIN      Gap extension cost [nucl:2,aa:1]\nprofile:              \n --match-mode\
    \ INT       0: Columns that have a residue in the first sequence are kept, 1:\
    \ columns that have a residue in --match-ratio of all sequences are kept [0]\n\
    \ --match-ratio FLOAT    Columns that have a residue in this ratio of all sequences\
    \ are kept [0.500]\n --pca FLOAT            Pseudo count admixture strength [0.000]\n\
    \ --pcb FLOAT            Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\n --wg BOOL              Use global sequence weighting for\
    \ profile calculation [0]\n --filter-msa INT       Filter msa: 0: do not filter,\
    \ 1: filter [1]\n --cov FLOAT            Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --qid FLOAT\
    \            Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT            Reduce diversity of output\
    \ MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --max-seq-id FLOAT     Reduce redundancy of output MSA using max.\
    \ pairwise sequence identity [0.0,1.0] [0.900]\n --diff INT             Filter\
    \ MSAs by selecting most diverse set of sequences, keeping at least this many\
    \ seqs in each MSA block of length 50 [1000]\nmisc:                 \n --msa-type\
    \ INT         MSA Type: 0: cA3M, 1: A3M, 2: FASTA [2]\ncommon:               \n\
    \ --sub-mat TWIN         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT          Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT       Write compressed output [0]\n -v INT                 Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:               \n --skip-query\
    \ BOOL      Skip the query sequence [0]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, Steinegger M, Soding J: MMseqs2 desktop and local web server app for fast,\
    \ interactive sequence searches. Bioinformatics, 35(16), 2856–2858 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - linsearch
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [2]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --pick-n-sim-kmer
    description: Add N similar k-mers to search [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --result-direction
    description: 'result is 0: query, 1: target centric [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs linsearch <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                   \n --comp-bias-corr INT          Correct for locally biased\
    \ amino acid composition (range 0-1) [1]\n --add-self-matches BOOL       Artificially\
    \ add entries of queries with themselves (for clustering) [0]\n --seed-sub-mat\
    \ TWIN           Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --mask INT                    Mask sequences in k-mer stage: 0: w/o low complexity\
    \ masking, 1: with low complexity masking [0]\n --mask-lower-case INT        \
    \ Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude\
    \ region [0]\n --split-memory-limit BYTE     Set max memory per split. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available system memory [0]\nalign:        \
    \               \n -a BOOL                       Add backtrace string (convert\
    \ to alignments with mmseqs convertalis module) [0]\n --alignment-mode INT   \
    \       How to compute the alignment:\n                               0: automatic\n\
    \                               1: only score and end_pos\n                  \
    \             2: also start_pos and cov\n                               3: also\
    \ seq.id\n                               4: only ungapped alignment [2]\n --alignment-output-mode\
    \ INT   How to compute the alignment:\n                               0: automatic\n\
    \                               1: only score and end_pos\n                  \
    \             2: also start_pos and cov\n                               3: also\
    \ seq.id\n                               4: only ungapped alignment\n        \
    \                       5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL        Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT            List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT             Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT             0: alignment\
    \ length 1: shorter, 2: longer sequence [0]\n --alt-ali INT                 Show\
    \ up to this many alternative alignments [0]\n -c FLOAT                      List\
    \ matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]\n\
    \ --cov-mode INT                0: coverage of query and target\n            \
    \                   1: coverage of target\n                               2: coverage\
    \ of query\n                               3: target seq. length has to be at\
    \ least x% of query length\n                               4: query seq. length\
    \ has to be at least x% of target length\n                               5: short\
    \ seq. needs to be at least x% of the other seq. length [0]\n --max-rejected INT\
    \            Maximum rejected alignments before alignment calculation for a query\
    \ is stopped [2147483647]\n --max-accept INT              Maximum accepted alignments\
    \ before alignment calculation for a query is stopped [2147483647]\n --score-bias\
    \ FLOAT            Score bias when computing SW alignment (in bits) [0.000]\n\
    \ --realign BOOL                Compute more conservative, shorter alignments\
    \ (scores and E-values not changed) [0]\n --realign-score-bias FLOAT    Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT        Maximum\
    \ number of results to return in realignment [2147483647]\n --gap-open TWIN  \
    \             Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN             Gap\
    \ extension cost [nucl:2,aa:1]\n --zdrop INT                   Maximal allowed\
    \ difference between score values before alignment is truncated  (nucleotide alignment\
    \ only) [40]\nkmermatcher:                 \n --kmer-per-seq INT            k-mers\
    \ per sequence [21]\n --kmer-per-seq-scale TWIN     Scale k-mer per sequence based\
    \ on sequence length as kmer-per-seq val + scale x seqlen [nucl:0.200,aa:0.000]\n\
    \ --pick-n-sim-kmer INT         Add N similar k-mers to search [1]\n --result-direction\
    \ INT        result is 0: query, 1: target centric [1]\nprofile:             \
    \        \n --pca FLOAT                   Pseudo count admixture strength [1.000]\n\
    \ --pcb FLOAT                   Pseudo counts: Neff at half of maximum admixture\
    \ (range 0.0-inf) [1.500]\nmisc:                        \n --min-length INT  \
    \            Minimum codon number in open reading frames [30]\n --max-length INT\
    \              Maximum codon number in open reading frames [32734]\n --max-gaps\
    \ INT                Maximum number of codons with gaps or unknown residues before\
    \ an open reading frame is rejected [2147483647]\n --contig-start-mode INT   \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT         Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT          Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR          Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR          Comma-separated list of frames on the\
    \ reverse strand to be extracted [1,2,3]\n --translation-table INT       1) CANONICAL,\
    \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
    \ 6) CILIATE\n                               9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                               15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \                23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                             29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT               Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL   Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT               Numeric ids in index file\
    \ are offset by this value [0]\n --add-orf-stop BOOL           Add stop codon\
    \ '*' at complete start and end [0]\n --search-type INT             Search type\
    \ 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide\
    \ alignment [0]\ncommon:                      \n --sub-mat TWIN              \
    \  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
    \ INT             Maximum sequence length [65535]\n --db-load-mode INT       \
    \     Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads\
    \ INT                 Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT              Write compressed output [0]\n -v INT                      \
    \  Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner\
    \ STR              Use MPI on compute cluster with this MPI command (e.g. \"mpirun\
    \ -np 42\") []\n --force-reuse BOOL            Reuse tmp filse in tmp/latest folder\
    \ ignoring parameters and version changes [0]\n --remove-tmp-files BOOL      \
    \ Delete temporary files [0]\nexpert:                      \n --create-lookup\
    \ INT           Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT        Chain overlapping alignments [0]\n --merge-query INT            \
    \ Combine ORFs/split sequences to a single entry [1]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2stats
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --stat
    description: 'One of: linecount, mean, doolittle, charges, seqlen, firstline []'
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tsv
    description: Return output in TSV format [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2stats <i:queryDB> <i:targetDB> <i:resultDB> <o:statsDB>\
    \ [options]\n By Clovis Galiez & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: misc:             \n --stat STR         One of: linecount, mean, doolittle,\
    \ charges, seqlen, firstline []\n --tsv BOOL         Return output in TSV format\
    \ [0]\ncommon:           \n --compressed INT   Write compressed output [0]\n --threads\
    \ INT      Number of CPU-cores used (all by default) [2]\n -v INT            \
    \ Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - kmermatcher
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:13]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.800]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --include-only-extendable
    description: Include only extendable [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs kmermatcher <i:sequenceDB> <o:prefilterDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:    \
    \                 \n --alph-size TWIN                Alphabet size (range 2-21)\
    \ [nucl:5,aa:13]\n --spaced-kmer-mode INT          0: use consecutive positions\
    \ in k-mers; 1: use spaced k-mers [0]\n --spaced-kmer-pattern STR       User-specified\
    \ spaced k-mer pattern []\n --mask INT                      Mask sequences in\
    \ k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [0]\n\
    \ --mask-lower-case INT           Lowercase letters will be excluded from k-mer\
    \ search 0: include region, 1: exclude region [0]\n -k INT                   \
    \       k-mer length (0: automatically set to optimum) [0]\n --split-memory-limit\
    \ BYTE       Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\nalign:                         \n --min-seq-id\
    \ FLOAT              List matches above this sequence identity (for clustering)\
    \ (range 0.0-1.0) [0.000]\n --cov-mode INT                  0: coverage of query\
    \ and target\n                                 1: coverage of target\n       \
    \                          2: coverage of query\n                            \
    \     3: target seq. length has to be at least x% of query length\n          \
    \                       4: query seq. length has to be at least x% of target length\n\
    \                                 5: short seq. needs to be at least x% of the\
    \ other seq. length [0]\n -c FLOAT                        List matches above this\
    \ fraction of aligned (covered) residues (see --cov-mode) [0.800]\nkmermatcher:\
    \                   \n --kmer-per-seq INT              k-mers per sequence [0]\n\
    \ --kmer-per-seq-scale TWIN       Scale k-mer per sequence based on sequence length\
    \ as kmer-per-seq val + scale x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len\
    \ BOOL          Adjust k-mer length based on specificity (only for nucleotides)\
    \ [0]\n --hash-shift INT                Shift k-mer hash initialization [67]\n\
    \ --include-only-extendable BOOL  Include only extendable [0]\n --ignore-multi-kmer\
    \ BOOL        Skip k-mers occurring multiple times (>=2) [0]\ncommon:        \
    \                \n --sub-mat TWIN                  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT               Maximum sequence length [65535]\n --threads\
    \ INT                   Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT                Write compressed output [0]\n -v INT                    \
    \      Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - rescorediagonal
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs rescorediagonal <i:queryDB> <i:targetDB> <i:prefilterDB>\
    \ <o:resultDB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:              \n --add-self-matches BOOL  Artificially add\
    \ entries of queries with themselves (for clustering) [0]\nalign:            \
    \      \n --wrapped-scoring BOOL   Double the (nucleotide) query sequence during\
    \ the scoring process to allow wrapped diagonal scoring around end and start [0]\n\
    \ -e DOUBLE                List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ -c FLOAT                 List matches above this fraction of aligned (covered)\
    \ residues (see --cov-mode) [0.000]\n -a BOOL                  Add backtrace string\
    \ (convert to alignments with mmseqs convertalis module) [0]\n --cov-mode INT\
    \           0: coverage of query and target\n                          1: coverage\
    \ of target\n                          2: coverage of query\n                \
    \          3: target seq. length has to be at least x% of query length\n     \
    \                     4: query seq. length has to be at least x% of target length\n\
    \                          5: short seq. needs to be at least x% of the other\
    \ seq. length [0]\n --min-seq-id FLOAT       List matches above this sequence\
    \ identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT      \
    \  Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT        0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\nmisc:                 \
    \  \n --rescore-mode INT       Rescore diagonals with:\n                     \
    \     0: Hamming distance\n                          1: local alignment (score\
    \ only)\n                          2: local alignment\n                      \
    \    3: global alignment\n                          4: longest alignment fulfilling\
    \ window quality criterion [0]\ncommon:                 \n --sub-mat TWIN    \
    \       Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --db-load-mode\
    \ INT       Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n\
    \ --threads INT            Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT         Write compressed output [0]\n -v INT                   Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:           \
    \      \n --filter-hits BOOL       Filter hits by seq.id. and coverage [0]\n --sort-results\
    \ INT       Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.\
    \ (Hamming) [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - extractframes
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs extractframes <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr> \noptions: misc:        \
    \         \n --forward-frames STR   Comma-separated list of frames on the forward\
    \ strand to be extracted [1,2,3]\n --reverse-frames STR   Comma-separated list\
    \ of frames on the reverse strand to be extracted [1,2,3]\ncommon:           \
    \    \n --threads INT          Number of CPU-cores used (all by default) [2]\n\
    \ --compressed INT       Write compressed output [0]\n -v INT                \
    \ Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert: \
    \              \n --create-lookup INT    Create database lookup file (can be very\
    \ large) [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - taxonomy
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [2.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E+00]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [5]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --orf-filter
    description: "Prefilter query ORFs with non-selective search\nOnly used during\
      \ nucleotide-vs-protein classification\nNOTE: Consider disabling when classifying\
      \ short reads [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-filter-e
    description: E-value threshold used for query ORF prefiltering [1.000E+02]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --orf-filter-s
    description: Sensitivity used for query ORF prefiltering [2.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --lca-mode
    description: 'LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit
      [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --tax-output-mode
    description: '0: output LCA, 1: output alignment 2: output both [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --majority
    description: minimal fraction of agreement among taxonomically assigned sequences
      of a set [0.500]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --vote-mode
    description: 'Mode of assigning weights to compute majority. 0: uniform, 1: minus
      log E-value, 2: score [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --blacklist
    description: Comma separated list of ignored taxa in LCA computation [12908:unclassified
      sequences,28384:other sequences]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs taxonomy <i:queryDB> <i:targetDB> <o:taxaDB> <tmpDir>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\
    \ & Eli Levy Karin <eli.levy.karin@gmail.com>\noptions: prefilter:           \
    \           \n --comp-bias-corr INT             Correct for locally biased amino\
    \ acid composition (range 0-1) [1]\n --add-self-matches BOOL          Artificially\
    \ add entries of queries with themselves (for clustering) [0]\n --seed-sub-mat\
    \ TWIN              Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n\
    \ -s FLOAT                         Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive\
    \ [2.000]\n -k INT                           k-mer length (0: automatically set\
    \ to optimum) [0]\n --k-score INT                    k-mer threshold for generating\
    \ similar k-mer lists [2147483647]\n --alph-size TWIN                 Alphabet\
    \ size (range 2-21) [nucl:5,aa:21]\n --max-seqs INT                   Maximum\
    \ results per query sequence allowed to pass the prefilter (affects sensitivity)\
    \ [300]\n --split INT                      Split input into N equally distributed\
    \ chunks. 0: set the best split automatically [0]\n --split-mode INT         \
    \        0: split target db; 1: split query db; 2: auto, depending on main memory\
    \ [2]\n --split-memory-limit BYTE        Set max memory per split. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available system memory [0]\n --diag-score BOOL\
    \                Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
    \ INT        Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
    \                       Mask sequences in k-mer stage: 0: w/o low complexity masking,\
    \ 1: with low complexity masking [1]\n --mask-lower-case INT            Lowercase\
    \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
    \ [0]\n --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [1]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E+00]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [5]\n --max-accept\
    \ INT                 Maximum accepted alignments before alignment calculation\
    \ for a query is stopped [30]\n --score-bias FLOAT               Score bias when\
    \ computing SW alignment (in bits) [0.000]\n --realign BOOL                  \
    \ Compute more conservative, shorter alignments (scores and E-values not changed)\
    \ [0]\n --realign-score-bias FLOAT       Additional bias when computing realignment\
    \ [-0.200]\n --realign-max-seqs INT           Maximum number of results to return\
    \ in realignment [2147483647]\n --gap-open TWIN                  Gap open cost\
    \ [nucl:5,aa:11]\n --gap-extend TWIN                Gap extension cost [nucl:2,aa:1]\n\
    \ --zdrop INT                      Maximal allowed difference between score values\
    \ before alignment is truncated  (nucleotide alignment only) [40]\n --exhaustive-search-filter\
    \ INT   Filter result during search: 0: do not filter, 1: filter [0]\nprofile:\
    \                        \n --pca FLOAT                      Pseudo count admixture\
    \ strength [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half\
    \ of maximum admixture (range 0.0-inf) [1.500]\n --mask-profile INT          \
    \     Mask query sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE\
    \               Include sequences matches with < E-value thr. into the profile\
    \ (>=0.0) [1.000E-03]\n --wg BOOL                        Use global sequence weighting\
    \ for profile calculation [0]\n --filter-msa INT                 Filter msa: 0:\
    \ do not filter, 1: filter [1]\n --max-seq-id FLOAT               Reduce redundancy\
    \ of output MSA using max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid\
    \ FLOAT                      Reduce diversity of output MSAs using min.seq. identity\
    \ with query sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce\
    \ diversity of output MSAs using min. score per aligned residue with query sequences\
    \ [-50.0,100.0] [-20.000]\n --cov FLOAT                      Filter output MSAs\
    \ using min. fraction of query residues covered by matched sequences [0.0,1.0]\
    \ [0.000]\n --diff INT                       Filter MSAs by selecting most diverse\
    \ set of sequences, keeping at least this many seqs in each MSA block of length\
    \ 50 [1000]\n --num-iterations INT             Number of iterative profile search\
    \ iterations [1]\n --exhaustive-search BOOL         For bigger profile DB, run\
    \ iteratively the search by greedily swapping the search results [0]\n --lca-search\
    \ BOOL                Efficient search for LCA candidates [0]\nmisc:         \
    \                  \n --orf-filter INT                 Prefilter query ORFs with\
    \ non-selective search\n                                  Only used during nucleotide-vs-protein\
    \ classification\n                                  NOTE: Consider disabling when\
    \ classifying short reads [1]\n --orf-filter-e DOUBLE            E-value threshold\
    \ used for query ORF prefiltering [1.000E+02]\n --orf-filter-s FLOAT         \
    \    Sensitivity used for query ORF prefiltering [2.000]\n --lca-mode INT    \
    \               LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top\
    \ hit [3]\n --tax-output-mode INT            0: output LCA, 1: output alignment\
    \ 2: output both [0]\n --majority FLOAT                 minimal fraction of agreement\
    \ among taxonomically assigned sequences of a set [0.500]\n --vote-mode INT  \
    \                Mode of assigning weights to compute majority. 0: uniform, 1:\
    \ minus log E-value, 2: score [1]\n --lca-ranks STR                  Add column\
    \ with specified ranks (',' separated) []\n --tax-lineage INT                0:\
    \ don't show, 1: add all lineage names, 2: add all lineage taxids [0]\n --blacklist\
    \ STR                  Comma separated list of ignored taxa in LCA computation\
    \ [12908:unclassified sequences,28384:other sequences]\n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\ncommon:                         \n --compressed\
    \ INT                 Write compressed output [0]\n --threads INT            \
    \        Number of CPU-cores used (all by default) [2]\n -v INT              \
    \             Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    \ --sub-mat TWIN                   Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
    \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --mpi-runner STR                 Use MPI on compute cluster with this\
    \ MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL               Reuse\
    \ tmp filse in tmp/latest folder ignoring parameters and version changes [0]\n\
    \ --remove-tmp-files BOOL          Delete temporary files [0]\nexpert:       \
    \                  \n --filter-hits BOOL               Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT               Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --create-lookup INT\
    \              Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT           Chain overlapping alignments [0]\n --merge-query INT         \
    \       Combine ORFs/split sequences to a single entry [1]\n --strand INT    \
    \                 Strand selection only works for DNA/DNA search 0: reverse, 1:\
    \ forward, 2: both [1]\n\nexamples:\n # Download a sequence database with taxonomy\
    \ information\n mmseqs databases UniProtKB/Swiss-Prot swissprotDB tmp\n \n # Assign\
    \ taxonomy based on 2bLCA\n mmseqs taxonomy queryDB swissprotDB result tmp\n \n\
    \ # Assign taxonomy based on top hit\n mmseqs taxonomy queryDB swissprotDB result\
    \ tmp --lca-mode 4\n \n # Assign taxonomy without ORF prefilter\n # Classifies\
    \ higher percentage for short nucleotide input (e.g. short reads) at the cost\
    \ of speed\n mmseqs taxonomy queryNuclDB swissprotDB result tmp --orf-filter 0\n\
    \ \n # Create a Krona report\n mmseqs taxonomyreport swissprotDB result report.html\
    \ --report-mode 1\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita M, Steinegger M,\
    \ Breitwieser F, Soding J, Levy Karin E: Fast and sensitive taxonomic assignment\
    \ to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2repseq
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2repseq <i:sequenceDB> <i:resultDB> <o:sequenceDb>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: common:             \n --db-load-mode INT   Database preload mode 0:\
    \ auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --compressed INT     Write compressed\
    \ output [0]\n --threads INT        Number of CPU-cores used (all by default)\
    \ [2]\n -v INT               Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - mvdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs mvdb <i:srcDB> <o:dstDB> [options]\n By Martin Steinegger\
    \ <martin.steinegger@snu.ac.kr>\noptions: common: \n -v INT   Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [1]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createdb <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]>|<i:stdin>\
    \ <o:sequenceDB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: misc:                \n --dbtype INT          Database type 0: auto,\
    \ 1: amino acid 2: nucleotides [0]\n --shuffle BOOL        Shuffle input database\
    \ [1]\n --createdb-mode INT   Createdb mode 0: copy data, 1: soft link data and\
    \ write new index (works only with single line fasta/q) [0]\n --id-offset INT\
    \       Numeric ids in index file are offset by this value [0]\ncommon:      \
    \        \n --compressed INT      Write compressed output [0]\n -v INT       \
    \         Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    expert:              \n --write-lookup INT    write .lookup file containing mapping\
    \ from internal id, fasta id and file number [1]\n\nexamples:\n # Create a sequence\
    \ database from multiple FASTA files\n mmseqs createdb file1.fa file2.fa.gz file3.fa\
    \ sequenceDB\n \n # Create a seqDB from stdin\n cat seq.fasta | mmseqs createdb\
    \ stdin sequenceDB\n \n # Create a seqDB by indexing existing FASTA/Q (for single\
    \ line fasta entries only)\n mmseqs createdb seq.fasta sequenceDB --createdb-mode\
    \ 1\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - alignall
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs alignall <i:sequenceDB> <i:resultDB> <o:alignmentDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:    \
    \          \n --comp-bias-corr INT     Correct for locally biased amino acid composition\
    \ (range 0-1) [1]\n --add-self-matches BOOL  Artificially add entries of queries\
    \ with themselves (for clustering) [0]\nalign:                  \n -a BOOL   \
    \               Add backtrace string (convert to alignments with mmseqs convertalis\
    \ module) [0]\n --alignment-mode INT     How to compute the alignment:\n     \
    \                     0: automatic\n                          1: only score and\
    \ end_pos\n                          2: also start_pos and cov\n             \
    \             3: also seq.id [0]\n -e DOUBLE                List matches below\
    \ this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id FLOAT       List matches\
    \ above this sequence identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len\
    \ INT        Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT\
    \        0: alignment length 1: shorter, 2: longer sequence [0]\n -c FLOAT   \
    \              List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT           0: coverage of query and\
    \ target\n                          1: coverage of target\n                  \
    \        2: coverage of query\n                          3: target seq. length\
    \ has to be at least x% of query length\n                          4: query seq.\
    \ length has to be at least x% of target length\n                          5:\
    \ short seq. needs to be at least x% of the other seq. length [0]\n --score-bias\
    \ FLOAT       Score bias when computing SW alignment (in bits) [0.000]\n --gap-open\
    \ TWIN          Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN        Gap extension\
    \ cost [nucl:2,aa:1]\n --zdrop INT              Maximal allowed difference between\
    \ score values before alignment is truncated  (nucleotide alignment only) [40]\n\
    profile:                \n --pca FLOAT              Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT              Pseudo counts: Neff at half of maximum admixture\
    \ (range 0.0-inf) [1.500]\ncommon:                 \n --sub-mat TWIN         \
    \  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
    \ INT        Maximum sequence length [65535]\n --db-load-mode INT       Database\
    \ preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT \
    \           Number of CPU-cores used (all by default) [2]\n --compressed INT \
    \        Write compressed output [0]\n -v INT                   Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - subtractdbs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs subtractdbs <i:resultDBLeft> <i:resultDBRight> <o:resultDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: align:\
    \            \n -e DOUBLE          List matches below this E-value (range 0.0-inf)\
    \ [1.000E-03]\nprofile:          \n --e-profile DOUBLE Include sequences matches\
    \ with < E-value thr. into the profile (>=0.0) [1.000E-03]\ncommon:          \
    \ \n --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - gff2db
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --gff-type
    description: Type in the GFF file to filter by []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs gff2db <i:gff3File> <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:            \n --gff-type\
    \ STR    Type in the GFF file to filter by []\n --id-offset INT   Numeric ids\
    \ in index file are offset by this value [0]\ncommon:          \n -v INT     \
    \       Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\n\
    references:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
    \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
    \ 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - countkmer
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [5]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs countkmer <i:sequenceDB>  [options]\n By Martin Steinegger\
    \ <martin.steinegger@snu.ac.kr>\noptions: prefilter:                 \n -k INT\
    \                      k-mer length (0: automatically set to optimum) [5]\n --spaced-kmer-mode\
    \ INT      0: use consecutive positions in k-mers; 1: use spaced k-mers [0]\n\
    \ --spaced-kmer-pattern STR   User-specified spaced k-mer pattern []\ncommon:\
    \                    \n --threads INT               Number of CPU-cores used (all\
    \ by default) [2]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - clust
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --cluster-mode
    description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3:\
      \ Greedy clustering by sequence length (CDHIT) [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-iterations
    description: Maximum depth of breadth first search in connected component clustering
      [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --similarity-type
    description: 'Type of score used for clustering. 1: alignment score 2: sequence
      identity [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs clust <i:sequenceDB> <i:resultDB> <o:clusterDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr> & Lars von den Driesch &\
    \ Maria Hauser\noptions: clust:                 \n --cluster-mode INT      0:\
    \ Set-Cover (greedy)\n                         1: Connected component (BLASTclust)\n\
    \                         2,3: Greedy clustering by sequence length (CDHIT) [0]\n\
    \ --max-iterations INT    Maximum depth of breadth first search in connected component\
    \ clustering [1000]\n --similarity-type INT   Type of score used for clustering.\
    \ 1: alignment score 2: sequence identity [2]\ncommon:                \n --threads\
    \ INT           Number of CPU-cores used (all by default) [2]\n --compressed INT\
    \        Write compressed output [0]\n -v INT                  Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Hauser\
    \ M, Steinegger M, Soding J: MMseqs software suite for fast and deep clustering\
    \ and searching of large protein sequence sets. Bioinformatics, 32(9), 1323-1330\
    \ (2016)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - transitivealign
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs transitivealign <i:sequenceDB> <i:alignmentDB> <o:alignmentDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                   \n --comp-bias-corr INT          Correct for locally biased\
    \ amino acid composition (range 0-1) [1]\n --add-self-matches BOOL       Artificially\
    \ add entries of queries with themselves (for clustering) [0]\nalign:        \
    \               \n -a BOOL                       Add backtrace string (convert\
    \ to alignments with mmseqs convertalis module) [0]\n --alignment-mode INT   \
    \       How to compute the alignment:\n                               0: automatic\n\
    \                               1: only score and end_pos\n                  \
    \             2: also start_pos and cov\n                               3: also\
    \ seq.id\n                               4: only ungapped alignment [0]\n --alignment-output-mode\
    \ INT   How to compute the alignment:\n                               0: automatic\n\
    \                               1: only score and end_pos\n                  \
    \             2: also start_pos and cov\n                               3: also\
    \ seq.id\n                               4: only ungapped alignment\n        \
    \                       5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL        Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT            List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT             Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT             0: alignment\
    \ length 1: shorter, 2: longer sequence [0]\n --alt-ali INT                 Show\
    \ up to this many alternative alignments [0]\n -c FLOAT                      List\
    \ matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]\n\
    \ --cov-mode INT                0: coverage of query and target\n            \
    \                   1: coverage of target\n                               2: coverage\
    \ of query\n                               3: target seq. length has to be at\
    \ least x% of query length\n                               4: query seq. length\
    \ has to be at least x% of target length\n                               5: short\
    \ seq. needs to be at least x% of the other seq. length [0]\n --max-rejected INT\
    \            Maximum rejected alignments before alignment calculation for a query\
    \ is stopped [2147483647]\n --max-accept INT              Maximum accepted alignments\
    \ before alignment calculation for a query is stopped [2147483647]\n --score-bias\
    \ FLOAT            Score bias when computing SW alignment (in bits) [0.000]\n\
    \ --realign BOOL                Compute more conservative, shorter alignments\
    \ (scores and E-values not changed) [0]\n --realign-score-bias FLOAT    Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT        Maximum\
    \ number of results to return in realignment [2147483647]\n --gap-open TWIN  \
    \             Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN             Gap\
    \ extension cost [nucl:2,aa:1]\n --zdrop INT                   Maximal allowed\
    \ difference between score values before alignment is truncated  (nucleotide alignment\
    \ only) [40]\nprofile:                     \n --pca FLOAT                   Pseudo\
    \ count admixture strength [1.000]\n --pcb FLOAT                   Pseudo counts:\
    \ Neff at half of maximum admixture (range 0.0-inf) [1.500]\ncommon:         \
    \             \n --sub-mat TWIN                Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT             Maximum sequence length [65535]\n --db-load-mode\
    \ INT            Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                 Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT              Write compressed output [0]\n -v INT   \
    \                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - clusthash
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:3]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.990]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs clusthash <i:sequenceDB> <o:alignmentDB> [options]\n By\
    \ Martin Steinegger <martin.steinegger@snu.ac.kr> \noptions: prefilter:      \
    \    \n --alph-size TWIN     Alphabet size (range 2-21) [nucl:5,aa:3]\nalign:\
    \              \n --min-seq-id FLOAT   List matches above this sequence identity\
    \ (for clustering) (range 0.0-1.0) [0.990]\ncommon:             \n --sub-mat TWIN\
    \       Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
    \ INT    Maximum sequence length [65535]\n --db-load-mode INT   Database preload\
    \ mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT        Number\
    \ of CPU-cores used (all by default) [2]\n --compressed INT     Write compressed\
    \ output [0]\n -v INT               Verbosity level: 0: quiet, 1: +errors, 2:\
    \ +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - swapdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs swapdb <i:resultDB> <o:resultDB> [options]\n By Martin\
    \ Steinegger <martin.steinegger@snu.ac.kr>, Clovis Galiez & Eli Levy Karin\noptions:\
    \ prefilter:                \n --split-memory-limit BYTE  Set max memory per split.\
    \ E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]\ncommon:\
    \                   \n --threads INT              Number of CPU-cores used (all\
    \ by default) [2]\n --compressed INT           Write compressed output [0]\n -v\
    \ INT                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - suffixid
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Use this prefix for all entries []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --mapping-file
    description: Specify a file that translates the keys of a DB to new keys, TSV
      format []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tsv
    description: Return output in TSV format [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs suffixid <i:resultDB> <o:resultDB> [options]\n By Milot\
    \ Mirdita <milot@mirdita.de>\noptions: misc:               \n --prefix STR   \
    \      Use this prefix for all entries []\n --mapping-file STR   Specify a file\
    \ that translates the keys of a DB to new keys, TSV format []\n --tsv BOOL   \
    \        Return output in TSV format [0]\ncommon:             \n --threads INT\
    \        Number of CPU-cores used (all by default) [2]\n --compressed INT    \
    \ Write compressed output [0]\n -v INT               Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - besthitperset
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --simple-best-hit
    description: Update the p-value by a single best hit, or by best and second best
      hits [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs besthitperset  <i:targetSetDB> <i:resultDB> <o:resultDB>\
    \ [options]\n By Ruoshi Zhang, Clovis Norroy & Milot Mirdita <milot@mirdita.de>\n\
    options: misc:                  \n --simple-best-hit BOOL  Update the p-value\
    \ by a single best hit, or by best and second best hits [1]\ncommon:         \
    \       \n --threads INT           Number of CPU-cores used (all by default) [2]\n\
    \ --compressed INT        Write compressed output [0]\n -v INT               \
    \   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - msa2profile
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --match-mode
    description: '0: Columns that have a residue in the first sequence are kept, 1:
      columns that have a residue in --match-ratio of all sequences are kept [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --match-ratio
    description: Columns that have a residue in this ratio of all sequences are kept
      [0.500]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --msa-type
    description: 'MSA Type: 0: cA3M, 1: A3M, 2: FASTA [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --skip-query
    description: Skip the query sequence [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs msa2profile <i:msaDB> <o:profileDB> [options]\n By Milot\
    \ Mirdita <milot@mirdita.de>\noptions: prefilter:            \n --comp-bias-corr\
    \ INT   Correct for locally biased amino acid composition (range 0-1) [1]\nalign:\
    \                \n --gap-open TWIN        Gap open cost [nucl:5,aa:11]\n --gap-extend\
    \ TWIN      Gap extension cost [nucl:2,aa:1]\nprofile:              \n --match-mode\
    \ INT       0: Columns that have a residue in the first sequence are kept, 1:\
    \ columns that have a residue in --match-ratio of all sequences are kept [0]\n\
    \ --match-ratio FLOAT    Columns that have a residue in this ratio of all sequences\
    \ are kept [0.500]\n --pca FLOAT            Pseudo count admixture strength [0.000]\n\
    \ --pcb FLOAT            Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\n --wg BOOL              Use global sequence weighting for\
    \ profile calculation [0]\n --filter-msa INT       Filter msa: 0: do not filter,\
    \ 1: filter [1]\n --cov FLOAT            Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --qid FLOAT\
    \            Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT            Reduce diversity of output\
    \ MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --max-seq-id FLOAT     Reduce redundancy of output MSA using max.\
    \ pairwise sequence identity [0.0,1.0] [0.900]\n --diff INT             Filter\
    \ MSAs by selecting most diverse set of sequences, keeping at least this many\
    \ seqs in each MSA block of length 50 [1000]\nmisc:                 \n --msa-type\
    \ INT         MSA Type: 0: cA3M, 1: A3M, 2: FASTA [2]\ncommon:               \n\
    \ --sub-mat TWIN         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT          Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT       Write compressed output [0]\n -v INT                 Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\nexpert:               \n --skip-query\
    \ BOOL      Skip the query sequence [0]\n\nexamples:\n # Convert globally aligned\
    \ MSAs to profiles\n # Defines columns as match columns if more than 50% of residues\
    \ are not gaps\n # Non-match columns are discarded\n mmseqs msa2profile msaDB\
    \ profileDB --match-mode 1 --match-ratio 0.5\n \n # Assign match-columns through\
    \ the first sequence\n # Gaps in query sequence define non-match columns and are\
    \ discarded\n mmseqs msa2profile msaDB profileDB --match-mode 0\n \nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n - Mirdita M, Steinegger M, Soding J: MMseqs2 desktop and local web\
    \ server app for fast, interactive sequence searches. Bioinformatics, 35(16),\
    \ 2856–2858 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createsubdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --subdb-mode
    description: 'Subdb mode 0: copy data 1: soft link data and write index [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createsubdb <i:subsetFile|DB> <i:DB> <o:DB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:             \n --subdb-mode\
    \ INT   Subdb mode 0: copy data 1: soft link data and write index [0]\ncommon:\
    \           \n -v INT             Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nexamples:\n # Create a new sequenceDB from sequenceDB entries\
    \ with keys 1, 2 and 3\n mmseqs createsubdb <(printf '1\n 2\n 3\n ') sequenceDB\
    \ oneTwoThreeDB\n \n # Create a new sequence database with representatives of\
    \ clusterDB\n mmseqs cluster sequenceDB clusterDB tmp\n mmseqs createsubdb clusterDB\
    \ sequenceDB representativesDB\n \nreferences:\n - Steinegger M, Soding J: MMseqs2\
    \ enables sensitive protein sequence searching for the analysis of massive data\
    \ sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - splitdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-aa
    description: Try to find the best split boundaries by entry lengths [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs splitdb <i:DB> <o:DB> [options]\n By Milot Mirdita <milot@mirdita.de>\n\
    options: prefilter:        \n --split INT        Split input into N equally distributed\
    \ chunks. 0: set the best split automatically [0]\ncommon:           \n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\nexpert:           \n --split-aa BOOL\
    \    Try to find the best split boundaries by entry lengths [0]\n\nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - reverseseq
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs reverseseq <i:sequenceDB> <o:revSequenceDB> [options]\n\
    \ By Eli Levy Karin <eli.levy.karin@gmail.com> \noptions: common:           \n\
    \ --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - lcaalign
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs lcaalign <i:queryDB> <i:targetDB> <i:resultDB> <o:alignmentDB>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: prefilter:       \
    \            \n --comp-bias-corr INT          Correct for locally biased amino\
    \ acid composition (range 0-1) [1]\n --add-self-matches BOOL       Artificially\
    \ add entries of queries with themselves (for clustering) [0]\nalign:        \
    \               \n -a BOOL                       Add backtrace string (convert\
    \ to alignments with mmseqs convertalis module) [0]\n --alignment-mode INT   \
    \       How to compute the alignment:\n                               0: automatic\n\
    \                               1: only score and end_pos\n                  \
    \             2: also start_pos and cov\n                               3: also\
    \ seq.id [0]\n --alignment-output-mode INT   How to compute the alignment:\n \
    \                              0: automatic\n                               1:\
    \ only score and end_pos\n                               2: also start_pos and\
    \ cov\n                               3: also seq.id\n                       \
    \        4: only ungapped alignment\n                               5: score only\
    \ (output) cluster format [0]\n --wrapped-scoring BOOL        Double the (nucleotide)\
    \ query sequence during the scoring process to allow wrapped diagonal scoring\
    \ around end and start [0]\n -e DOUBLE                     List matches below\
    \ this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id FLOAT            List\
    \ matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]\n\
    \ --min-aln-len INT             Minimum alignment length (range 0-INT_MAX) [0]\n\
    \ --seq-id-mode INT             0: alignment length 1: shorter, 2: longer sequence\
    \ [0]\n --alt-ali INT                 Show up to this many alternative alignments\
    \ [0]\n -c FLOAT                      List matches above this fraction of aligned\
    \ (covered) residues (see --cov-mode) [0.000]\n --cov-mode INT               \
    \ 0: coverage of query and target\n                               1: coverage\
    \ of target\n                               2: coverage of query\n           \
    \                    3: target seq. length has to be at least x% of query length\n\
    \                               4: query seq. length has to be at least x% of\
    \ target length\n                               5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT            Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT              Maximum accepted alignments before alignment calculation\
    \ for a query is stopped [2147483647]\n --score-bias FLOAT            Score bias\
    \ when computing SW alignment (in bits) [0.000]\n --realign BOOL             \
    \   Compute more conservative, shorter alignments (scores and E-values not changed)\
    \ [0]\n --realign-score-bias FLOAT    Additional bias when computing realignment\
    \ [-0.200]\n --realign-max-seqs INT        Maximum number of results to return\
    \ in realignment [2147483647]\n --gap-open TWIN               Gap open cost [nucl:5,aa:11]\n\
    \ --gap-extend TWIN             Gap extension cost [nucl:2,aa:1]\n --zdrop INT\
    \                   Maximal allowed difference between score values before alignment\
    \ is truncated  (nucleotide alignment only) [40]\nprofile:                   \
    \  \n --pca FLOAT                   Pseudo count admixture strength [1.000]\n\
    \ --pcb FLOAT                   Pseudo counts: Neff at half of maximum admixture\
    \ (range 0.0-inf) [1.500]\ncommon:                      \n --sub-mat TWIN    \
    \            Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT             Maximum sequence length [65535]\n --db-load-mode\
    \ INT            Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                 Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT              Write compressed output [0]\n -v INT   \
    \                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Mirdita M, Steinegger M, Breitwieser F, Soding\
    \ J, Levy Karin E: Fast and sensitive taxonomic assignment to metagenomic contigs.\
    \ bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - easy-cluster
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [20]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.800]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-mode
    description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3:\
      \ Greedy clustering by sequence length (CDHIT) [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-iterations
    description: Maximum depth of breadth first search in connected component clustering
      [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --similarity-type
    description: 'Type of score used for clustering. 1: alignment score 2: sequence
      identity [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --single-step-clustering
    description: Switch from cascaded to simple clustering workflow [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --cluster-steps
    description: Cascaded clustering steps from 1 to -s [3]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-reassign
    description: "Cascaded clustering can cluster sequence that do not fulfill the\
      \ clustering criteria.\nCluster reassignment corrects these errors [0]"
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --include-only-extendable
    description: Include only extendable [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs easy-cluster <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]>\
    \ <o:clusterPrefix> <tmpDir> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                     \n --seed-sub-mat TWIN             Substitution\
    \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
    \                        Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n\
    \ -k INT                          k-mer length (0: automatically set to optimum)\
    \ [0]\n --k-score INT                   k-mer threshold for generating similar\
    \ k-mer lists [2147483647]\n --alph-size TWIN                Alphabet size (range\
    \ 2-21) [nucl:5,aa:21]\n --max-seqs INT                  Maximum results per query\
    \ sequence allowed to pass the prefilter (affects sensitivity) [20]\n --split\
    \ INT                     Split input into N equally distributed chunks. 0: set\
    \ the best split automatically [0]\n --split-mode INT                0: split\
    \ target db; 1: split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE       Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --comp-bias-corr INT            Correct for\
    \ locally biased amino acid composition (range 0-1) [1]\n --diag-score BOOL  \
    \             Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
    \ INT       Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
    \                      Mask sequences in k-mer stage: 0: w/o low complexity masking,\
    \ 1: with low complexity masking [1]\n --mask-lower-case INT           Lowercase\
    \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
    \ [0]\n --min-ungapped-score INT        Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --add-self-matches BOOL         Artificially add\
    \ entries of queries with themselves (for clustering) [0]\n --spaced-kmer-mode\
    \ INT          0: use consecutive positions in k-mers; 1: use spaced k-mers [1]\n\
    \ --spaced-kmer-pattern STR       User-specified spaced k-mer pattern []\n --local-tmp\
    \ STR                 Path where some of the temporary files will be created []\n\
    align:                         \n -c FLOAT                        List matches\
    \ above this fraction of aligned (covered) residues (see --cov-mode) [0.800]\n\
    \ --cov-mode INT                  0: coverage of query and target\n          \
    \                       1: coverage of target\n                              \
    \   2: coverage of query\n                                 3: target seq. length\
    \ has to be at least x% of query length\n                                 4: query\
    \ seq. length has to be at least x% of target length\n                       \
    \          5: short seq. needs to be at least x% of the other seq. length [0]\n\
    \ -a BOOL                         Add backtrace string (convert to alignments\
    \ with mmseqs convertalis module) [0]\n --alignment-mode INT            How to\
    \ compute the alignment:\n                                 0: automatic\n    \
    \                             1: only score and end_pos\n                    \
    \             2: also start_pos and cov\n                                 3: also\
    \ seq.id\n                                 4: only ungapped alignment [3]\n --alignment-output-mode\
    \ INT     How to compute the alignment:\n                                 0: automatic\n\
    \                                 1: only score and end_pos\n                \
    \                 2: also start_pos and cov\n                                \
    \ 3: also seq.id\n                                 4: only ungapped alignment\n\
    \                                 5: score only (output) cluster format [0]\n\
    \ --wrapped-scoring BOOL          Double the (nucleotide) query sequence during\
    \ the scoring process to allow wrapped diagonal scoring around end and start [0]\n\
    \ -e DOUBLE                       List matches below this E-value (range 0.0-inf)\
    \ [1.000E-03]\n --min-seq-id FLOAT              List matches above this sequence\
    \ identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT      \
    \         Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT \
    \              0: alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali\
    \ INT                   Show up to this many alternative alignments [0]\n --max-rejected\
    \ INT              Maximum rejected alignments before alignment calculation for\
    \ a query is stopped [2147483647]\n --max-accept INT                Maximum accepted\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --score-bias FLOAT              Score bias when computing SW alignment (in bits)\
    \ [0.000]\n --realign BOOL                  Compute more conservative, shorter\
    \ alignments (scores and E-values not changed) [0]\n --realign-score-bias FLOAT\
    \      Additional bias when computing realignment [-0.200]\n --realign-max-seqs\
    \ INT          Maximum number of results to return in realignment [2147483647]\n\
    \ --gap-open TWIN                 Gap open cost [nucl:5,aa:11]\n --gap-extend\
    \ TWIN               Gap extension cost [nucl:2,aa:1]\n --zdrop INT          \
    \           Maximal allowed difference between score values before alignment is\
    \ truncated  (nucleotide alignment only) [40]\nclust:                        \
    \ \n --cluster-mode INT              0: Set-Cover (greedy)\n                 \
    \                1: Connected component (BLASTclust)\n                       \
    \          2,3: Greedy clustering by sequence length (CDHIT) [0]\n --max-iterations\
    \ INT            Maximum depth of breadth first search in connected component\
    \ clustering [1000]\n --similarity-type INT           Type of score used for clustering.\
    \ 1: alignment score 2: sequence identity [2]\n --single-step-clustering BOOL\
    \   Switch from cascaded to simple clustering workflow [0]\n --cluster-steps INT\
    \             Cascaded clustering steps from 1 to -s [3]\n --cluster-reassign\
    \ BOOL         Cascaded clustering can cluster sequence that do not fulfill the\
    \ clustering criteria.\n                                 Cluster reassignment\
    \ corrects these errors [0]\nkmermatcher:                   \n --kmer-per-seq\
    \ INT              k-mers per sequence [21]\n --kmer-per-seq-scale TWIN      \
    \ Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale\
    \ x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len BOOL          Adjust k-mer\
    \ length based on specificity (only for nucleotides) [0]\n --hash-shift INT  \
    \              Shift k-mer hash initialization [67]\n --include-only-extendable\
    \ BOOL  Include only extendable [0]\n --ignore-multi-kmer BOOL        Skip k-mers\
    \ occurring multiple times (>=2) [0]\nprofile:                       \n --pca\
    \ FLOAT                     Pseudo count admixture strength [1.000]\n --pcb FLOAT\
    \                     Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\nmisc:                          \n --rescore-mode INT     \
    \         Rescore diagonals with:\n                                 0: Hamming\
    \ distance\n                                 1: local alignment (score only)\n\
    \                                 2: local alignment\n                       \
    \          3: global alignment\n                                 4: longest alignment\
    \ fulfilling window quality criterion [0]\n --dbtype INT                    Database\
    \ type 0: auto, 1: amino acid 2: nucleotides [0]\n --shuffle BOOL            \
    \      Shuffle input database [1]\n --createdb-mode INT             Createdb mode\
    \ 0: copy data, 1: soft link data and write new index (works only with single\
    \ line fasta/q) [1]\n --id-offset INT                 Numeric ids in index file\
    \ are offset by this value [0]\ncommon:                        \n --sub-mat TWIN\
    \                  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT               Maximum sequence length [65535]\n --db-load-mode\
    \ INT              Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                   Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                Write compressed output [0]\n -v INT \
    \                         Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --remove-tmp-files BOOL         Delete temporary files [1]\n\
    \ --force-reuse BOOL              Reuse tmp filse in tmp/latest folder ignoring\
    \ parameters and version changes [0]\n --mpi-runner STR                Use MPI\
    \ on compute cluster with this MPI command (e.g. \"mpirun -np 42\") []\nexpert:\
    \                        \n --filter-hits BOOL              Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT              Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --write-lookup INT\
    \              write .lookup file containing mapping from internal id, fasta id\
    \ and file number [0]\n\nexamples:\n mmseqs easy-cluster examples/DB.fasta result\
    \ tmp\n # Cluster output\n #  - result_rep_seq.fasta: Representatives\n #  - result_all_seq.fasta:\
    \ FASTA-like per cluster\n #  - result_cluster.tsv:   Adjacency list\n \n # Important\
    \ parameter: --min-seq-id, --cov-mode and -c \n #                  --cov-mode\
    \ \n #                  0    1    2\n # Q: MAVGTACRPA  60%  IGN  60%\n # T: -AVGTAC---\
    \  60% 100%  IGN\n #        -c 0.7    -    +    -\n #        -c 0.6    +    +\
    \    +\n \n # Cascaded clustering with reassignment\n # - Corrects criteria-violoations\
    \ of cascaded merging\n # - Produces more clusters and is a bit slower\n mmseqs\
    \ easy-cluster examples/DB.fasta result tmp --cluster-reassign\n \nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n - Steinegger M, Soding J: Clustering huge protein sequence sets in\
    \ linear time. Nature Communications, 9(1), 2542 (2018)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - sortresult
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs sortresult <i:resultbDB> <o:resultDB> [options]\n By Milot\
    \ Mirdita <milot@mirdita.de>\noptions: common:           \n --compressed INT \
    \  Write compressed output [0]\n --threads INT      Number of CPU-cores used (all\
    \ by default) [2]\n -v INT             Verbosity level: 0: quiet, 1: +errors,\
    \ 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2\
    \ enables sensitive protein sequence searching for the analysis of massive data\
    \ sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - alignbykmer
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Rescore diagonals.\nusage: mmseqs alignbykmer <i:queryDB> <i:targetDB>\
    \ <i:resultDB> <o:resultDB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                 \n -k INT                      k-mer length\
    \ (0: automatically set to optimum) [0]\n --spaced-kmer-mode INT      0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \ User-specified spaced k-mer pattern []\n --alph-size TWIN            Alphabet\
    \ size (range 2-21) [nucl:5,aa:21]\n --add-self-matches BOOL     Artificially\
    \ add entries of queries with themselves (for clustering) [0]\nalign:        \
    \             \n -c FLOAT                    List matches above this fraction\
    \ of aligned (covered) residues (see --cov-mode) [0.000]\n -e DOUBLE         \
    \          List matches below this E-value (range 0.0-inf) [1.000E-03]\n --cov-mode\
    \ INT              0: coverage of query and target\n                         \
    \    1: coverage of target\n                             2: coverage of query\n\
    \                             3: target seq. length has to be at least x% of query\
    \ length\n                             4: query seq. length has to be at least\
    \ x% of target length\n                             5: short seq. needs to be\
    \ at least x% of the other seq. length [0]\n --min-seq-id FLOAT          List\
    \ matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]\n\
    \ --min-aln-len INT           Minimum alignment length (range 0-INT_MAX) [0]\n\
    \ --gap-open TWIN             Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN\
    \           Gap extension cost [nucl:2,aa:1]\ncommon:                    \n --sub-mat\
    \ TWIN              Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT               Number of CPU-cores used (all by default) [2]\n\
    \ --compressed INT            Write compressed output [0]\n -v INT           \
    \           Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    expert:                    \n --filter-hits BOOL          Filter hits by seq.id.\
    \ and coverage [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - kmersearch
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.800]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --pick-n-sim-kmer
    description: Add N similar k-mers to search [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --result-direction
    description: 'result is 0: query, 1: target centric [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs kmersearch <i:queryDB> <i:kmerIndexDB> <o:prefilterDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                \n --seed-sub-mat TWIN        Substitution matrix file for k-mer\
    \ generation [nucl:nucleotide.out,aa:VTML80.out]\n --mask INT                \
    \ Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity\
    \ masking [0]\n --mask-lower-case INT      Lowercase letters will be excluded\
    \ from k-mer search 0: include region, 1: exclude region [0]\n --split-memory-limit\
    \ BYTE  Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available\
    \ system memory [0]\nalign:                    \n --cov-mode INT             0:\
    \ coverage of query and target\n                            1: coverage of target\n\
    \                            2: coverage of query\n                          \
    \  3: target seq. length has to be at least x% of query length\n             \
    \               4: query seq. length has to be at least x% of target length\n\
    \                            5: short seq. needs to be at least x% of the other\
    \ seq. length [0]\n -c FLOAT                   List matches above this fraction\
    \ of aligned (covered) residues (see --cov-mode) [0.800]\nkmermatcher:       \
    \       \n --kmer-per-seq INT         k-mers per sequence [0]\n --kmer-per-seq-scale\
    \ TWIN  Scale k-mer per sequence based on sequence length as kmer-per-seq val\
    \ + scale x seqlen [nucl:0.200,aa:0.000]\n --pick-n-sim-kmer INT      Add N similar\
    \ k-mers to search [1]\n --result-direction INT     result is 0: query, 1: target\
    \ centric [1]\ncommon:                   \n --max-seq-len INT          Maximum\
    \ sequence length [65535]\n --threads INT              Number of CPU-cores used\
    \ (all by default) [2]\n --compressed INT           Write compressed output [0]\n\
    \ -v INT                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - align
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs align <i:queryDB> <i:targetDB> <i:resultDB> <o:alignmentDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr> & Maria Hauser\n\
    options: prefilter:                   \n --comp-bias-corr INT          Correct\
    \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
    \ BOOL       Artificially add entries of queries with themselves (for clustering)\
    \ [0]\nalign:                       \n -a BOOL                       Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT          How to compute the alignment:\n                               0:\
    \ automatic\n                               1: only score and end_pos\n      \
    \                         2: also start_pos and cov\n                        \
    \       3: also seq.id [0]\n --alignment-output-mode INT   How to compute the\
    \ alignment:\n                               0: automatic\n                  \
    \             1: only score and end_pos\n                               2: also\
    \ start_pos and cov\n                               3: also seq.id\n         \
    \                      4: only ungapped alignment\n                          \
    \     5: score only (output) cluster format [0]\n --wrapped-scoring BOOL     \
    \   Double the (nucleotide) query sequence during the scoring process to allow\
    \ wrapped diagonal scoring around end and start [0]\n -e DOUBLE              \
    \       List matches below this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id\
    \ FLOAT            List matches above this sequence identity (for clustering)\
    \ (range 0.0-1.0) [0.000]\n --min-aln-len INT             Minimum alignment length\
    \ (range 0-INT_MAX) [0]\n --seq-id-mode INT             0: alignment length 1:\
    \ shorter, 2: longer sequence [0]\n --alt-ali INT                 Show up to this\
    \ many alternative alignments [0]\n -c FLOAT                      List matches\
    \ above this fraction of aligned (covered) residues (see --cov-mode) [0.000]\n\
    \ --cov-mode INT                0: coverage of query and target\n            \
    \                   1: coverage of target\n                               2: coverage\
    \ of query\n                               3: target seq. length has to be at\
    \ least x% of query length\n                               4: query seq. length\
    \ has to be at least x% of target length\n                               5: short\
    \ seq. needs to be at least x% of the other seq. length [0]\n --max-rejected INT\
    \            Maximum rejected alignments before alignment calculation for a query\
    \ is stopped [2147483647]\n --max-accept INT              Maximum accepted alignments\
    \ before alignment calculation for a query is stopped [2147483647]\n --score-bias\
    \ FLOAT            Score bias when computing SW alignment (in bits) [0.000]\n\
    \ --realign BOOL                Compute more conservative, shorter alignments\
    \ (scores and E-values not changed) [0]\n --realign-score-bias FLOAT    Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT        Maximum\
    \ number of results to return in realignment [2147483647]\n --gap-open TWIN  \
    \             Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN             Gap\
    \ extension cost [nucl:2,aa:1]\n --zdrop INT                   Maximal allowed\
    \ difference between score values before alignment is truncated  (nucleotide alignment\
    \ only) [40]\nprofile:                     \n --pca FLOAT                   Pseudo\
    \ count admixture strength [1.000]\n --pcb FLOAT                   Pseudo counts:\
    \ Neff at half of maximum admixture (range 0.0-inf) [1.500]\ncommon:         \
    \             \n --sub-mat TWIN                Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT             Maximum sequence length [65535]\n --db-load-mode\
    \ INT            Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                 Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT              Write compressed output [0]\n -v INT   \
    \                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - swapresults
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs swapresults <i:queryDB> <i:targetDB> <i:resultDB> <o:resultDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>, Clovis Galiez\
    \ & Eli Levy Karin\noptions: prefilter:                \n --split-memory-limit\
    \ BYTE  Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available\
    \ system memory [0]\nalign:                    \n -e DOUBLE                  List\
    \ matches below this E-value (range 0.0-inf) [1.000E-03]\n --gap-open TWIN   \
    \         Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN          Gap extension\
    \ cost [nucl:2,aa:1]\ncommon:                   \n --sub-mat TWIN            \
    \ Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --threads INT\
    \              Number of CPU-cores used (all by default) [2]\n --compressed INT\
    \           Write compressed output [0]\n --db-load-mode INT         Database\
    \ preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n -v INT        \
    \             Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
    \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
    \ 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - prefixid
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --prefix
    description: Use this prefix for all entries []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --mapping-file
    description: Specify a file that translates the keys of a DB to new keys, TSV
      format []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tsv
    description: Return output in TSV format [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs prefixid <i:DB> <o:DB> [options]\n By Milot Mirdita <milot@mirdita.de>\n\
    options: misc:               \n --prefix STR         Use this prefix for all entries\
    \ []\n --mapping-file STR   Specify a file that translates the keys of a DB to\
    \ new keys, TSV format []\n --tsv BOOL           Return output in TSV format [0]\n\
    common:             \n --threads INT        Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT     Write compressed output [0]\n -v INT            \
    \   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - linclust
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [2]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.800]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-mode
    description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3:\
      \ Greedy clustering by sequence length (CDHIT) [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-iterations
    description: Maximum depth of breadth first search in connected component clustering
      [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --similarity-type
    description: 'Type of score used for clustering. 1: alignment score 2: sequence
      identity [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --include-only-extendable
    description: Include only extendable [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs linclust <i:sequenceDB> <o:clusterDB> <tmpDir> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:    \
    \                 \n --comp-bias-corr INT            Correct for locally biased\
    \ amino acid composition (range 0-1) [1]\n --add-self-matches BOOL         Artificially\
    \ add entries of queries with themselves (for clustering) [0]\n --alph-size TWIN\
    \                Alphabet size (range 2-21) [nucl:5,aa:21]\n --spaced-kmer-mode\
    \ INT          0: use consecutive positions in k-mers; 1: use spaced k-mers [0]\n\
    \ --spaced-kmer-pattern STR       User-specified spaced k-mer pattern []\n --mask\
    \ INT                      Mask sequences in k-mer stage: 0: w/o low complexity\
    \ masking, 1: with low complexity masking [0]\n --mask-lower-case INT        \
    \   Lowercase letters will be excluded from k-mer search 0: include region, 1:\
    \ exclude region [0]\n -k INT                          k-mer length (0: automatically\
    \ set to optimum) [0]\n --split-memory-limit BYTE       Set max memory per split.\
    \ E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]\nalign:\
    \                         \n -a BOOL                         Add backtrace string\
    \ (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT            How to compute the alignment:\n                             \
    \    0: automatic\n                                 1: only score and end_pos\n\
    \                                 2: also start_pos and cov\n                \
    \                 3: also seq.id\n                                 4: only ungapped\
    \ alignment [2]\n --alignment-output-mode INT     How to compute the alignment:\n\
    \                                 0: automatic\n                             \
    \    1: only score and end_pos\n                                 2: also start_pos\
    \ and cov\n                                 3: also seq.id\n                 \
    \                4: only ungapped alignment\n                                \
    \ 5: score only (output) cluster format [0]\n --wrapped-scoring BOOL         \
    \ Double the (nucleotide) query sequence during the scoring process to allow wrapped\
    \ diagonal scoring around end and start [0]\n -e DOUBLE                      \
    \ List matches below this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id FLOAT\
    \              List matches above this sequence identity (for clustering) (range\
    \ 0.0-1.0) [0.900]\n --min-aln-len INT               Minimum alignment length\
    \ (range 0-INT_MAX) [0]\n --seq-id-mode INT               0: alignment length\
    \ 1: shorter, 2: longer sequence [0]\n --alt-ali INT                   Show up\
    \ to this many alternative alignments [0]\n -c FLOAT                        List\
    \ matches above this fraction of aligned (covered) residues (see --cov-mode) [0.800]\n\
    \ --cov-mode INT                  0: coverage of query and target\n          \
    \                       1: coverage of target\n                              \
    \   2: coverage of query\n                                 3: target seq. length\
    \ has to be at least x% of query length\n                                 4: query\
    \ seq. length has to be at least x% of target length\n                       \
    \          5: short seq. needs to be at least x% of the other seq. length [0]\n\
    \ --max-rejected INT              Maximum rejected alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --max-accept INT         \
    \       Maximum accepted alignments before alignment calculation for a query is\
    \ stopped [2147483647]\n --score-bias FLOAT              Score bias when computing\
    \ SW alignment (in bits) [0.000]\n --realign BOOL                  Compute more\
    \ conservative, shorter alignments (scores and E-values not changed) [0]\n --realign-score-bias\
    \ FLOAT      Additional bias when computing realignment [-0.200]\n --realign-max-seqs\
    \ INT          Maximum number of results to return in realignment [2147483647]\n\
    \ --gap-open TWIN                 Gap open cost [nucl:5,aa:11]\n --gap-extend\
    \ TWIN               Gap extension cost [nucl:2,aa:1]\n --zdrop INT          \
    \           Maximal allowed difference between score values before alignment is\
    \ truncated  (nucleotide alignment only) [40]\nclust:                        \
    \ \n --cluster-mode INT              0: Set-Cover (greedy)\n                 \
    \                1: Connected component (BLASTclust)\n                       \
    \          2,3: Greedy clustering by sequence length (CDHIT) [0]\n --max-iterations\
    \ INT            Maximum depth of breadth first search in connected component\
    \ clustering [1000]\n --similarity-type INT           Type of score used for clustering.\
    \ 1: alignment score 2: sequence identity [2]\nkmermatcher:                  \
    \ \n --kmer-per-seq INT              k-mers per sequence [21]\n --kmer-per-seq-scale\
    \ TWIN       Scale k-mer per sequence based on sequence length as kmer-per-seq\
    \ val + scale x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len BOOL        \
    \  Adjust k-mer length based on specificity (only for nucleotides) [0]\n --hash-shift\
    \ INT                Shift k-mer hash initialization [67]\n --include-only-extendable\
    \ BOOL  Include only extendable [0]\n --ignore-multi-kmer BOOL        Skip k-mers\
    \ occurring multiple times (>=2) [0]\nprofile:                       \n --pca\
    \ FLOAT                     Pseudo count admixture strength [1.000]\n --pcb FLOAT\
    \                     Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\nmisc:                          \n --rescore-mode INT     \
    \         Rescore diagonals with:\n                                 0: Hamming\
    \ distance\n                                 1: local alignment (score only)\n\
    \                                 2: local alignment\n                       \
    \          3: global alignment\n                                 4: longest alignment\
    \ fulfilling window quality criterion [0]\ncommon:                        \n --threads\
    \ INT                   Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT                Write compressed output [0]\n -v INT                    \
    \      Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --sub-mat\
    \ TWIN                  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT               Maximum sequence length [65535]\n --db-load-mode\
    \ INT              Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --remove-tmp-files BOOL         Delete temporary files [0]\n --force-reuse\
    \ BOOL              Reuse tmp filse in tmp/latest folder ignoring parameters and\
    \ version changes [0]\n --mpi-runner STR                Use MPI on compute cluster\
    \ with this MPI command (e.g. \"mpirun -np 42\") []\nexpert:                 \
    \       \n --filter-hits BOOL              Filter hits by seq.id. and coverage\
    \ [0]\n --sort-results INT              Sort results: 0: no sorting, 1: sort by\
    \ E-value (Alignment) or seq.id. (Hamming) [0]\n\nexamples:\n # Linear-time clustering\
    \ of FASTA file\n mmseqs linclust sequenceDB clusterDB tmp\n \n              \
    \      --cov-mode \n # Sequence         0    1    2\n # Q: MAVGTACRPA  60%  IGN\
    \  60%\n # T: -AVGTAC---  60% 100%  IGN\n # Cutoff -c 0.7    -    +    -\n # \
    \       -c 0.6    +    +    +\n \n # Cluster nucleotide sequences \n mmseqs easy-linclust\
    \ nucl.fasta result tmp --kmer-per-seq-scale 0.3\n \nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Steinegger\
    \ M, Soding J: Clustering huge protein sequence sets in linear time. Nature Communications,\
    \ 9(1), 2542 (2018)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - translatenucs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs translatenucs <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:                    \n --translation-table\
    \ INT   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                           9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                           15) BLEPHARISMA, 16)\
    \ CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                           23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                         29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]\n\
    \ --add-orf-stop BOOL       Add stop codon '*' at complete start and end [0]\n\
    common:                  \n -v INT                    Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n --compressed INT          Write compressed\
    \ output [0]\n --threads INT             Number of CPU-cores used (all by default)\
    \ [2]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - lndb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs lndb <i:srcDB> <o:dstDB> [options]\n By Milot Mirdita\
    \ <milot@mirdita.de>\noptions: common: \n -v INT   Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - multihitsearch
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [2]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E+02]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --simple-best-hit
    description: Update the p-value by a single best hit, or by best and second best
      hits [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs multihitsearch <i:querySetDB> <i:targetSetDB> <o:resultDB>\
    \ <tmpDir> [options]\n By Ruoshi Zhang, Clovis Norroy & Milot Mirdita <milot@mirdita.de>\n\
    options: prefilter:                      \n --comp-bias-corr INT             Correct\
    \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
    \ BOOL          Artificially add entries of queries with themselves (for clustering)\
    \ [0]\n --seed-sub-mat TWIN              Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                         Sensitivity:\
    \ 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]\n -k INT                       \
    \    k-mer length (0: automatically set to optimum) [0]\n --k-score INT      \
    \              k-mer threshold for generating similar k-mer lists [2147483647]\n\
    \ --alph-size TWIN                 Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --max-seqs INT                   Maximum results per query sequence allowed\
    \ to pass the prefilter (affects sensitivity) [300]\n --split INT            \
    \          Split input into N equally distributed chunks. 0: set the best split\
    \ automatically [0]\n --split-mode INT                 0: split target db; 1:\
    \ split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --diag-score BOOL                Use ungapped\
    \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT        Extract\
    \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                \
    \       Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with\
    \ low complexity masking [1]\n --mask-lower-case INT            Lowercase letters\
    \ will be excluded from k-mer search 0: include region, 1: exclude region [0]\n\
    \ --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [2]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E+02]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\n --simple-best-hit BOOL           Update\
    \ the p-value by a single best hit, or by best and second best hits [1]\ncommon:\
    \                         \n --sub-mat TWIN                   Substitution matrix\
    \ file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len INT             \
    \   Maximum sequence length [65535]\n --db-load-mode INT               Database\
    \ preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT \
    \                   Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT                 Write compressed output [0]\n -v INT                   \
    \        Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner\
    \ STR                 Use MPI on compute cluster with this MPI command (e.g. \"\
    mpirun -np 42\") []\n --force-reuse BOOL               Reuse tmp filse in tmp/latest\
    \ folder ignoring parameters and version changes [0]\n --remove-tmp-files BOOL\
    \          Delete temporary files [0]\nexpert:                         \n --filter-hits\
    \ BOOL               Filter hits by seq.id. and coverage [0]\n --sort-results\
    \ INT               Sort results: 0: no sorting, 1: sort by E-value (Alignment)\
    \ or seq.id. (Hamming) [0]\n --create-lookup INT              Create database\
    \ lookup file (can be very large) [0]\n --chain-alignments INT           Chain\
    \ overlapping alignments [0]\n --merge-query INT                Combine ORFs/split\
    \ sequences to a single entry [1]\n --strand INT                     Strand selection\
    \ only works for DNA/DNA search 0: reverse, 1: forward, 2: both [1]\n\nreferences:\n\
    \ - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - rmdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs rmdb <i:DB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: common: \n -v INT   Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - cluster
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [20]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.800]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-mode
    description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3:\
      \ Greedy clustering by sequence length (CDHIT) [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-iterations
    description: Maximum depth of breadth first search in connected component clustering
      [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --similarity-type
    description: 'Type of score used for clustering. 1: alignment score 2: sequence
      identity [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --single-step-clustering
    description: Switch from cascaded to simple clustering workflow [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --cluster-steps
    description: Cascaded clustering steps from 1 to -s [3]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-reassign
    description: "Cascaded clustering can cluster sequence that do not fulfill the\
      \ clustering criteria.\nCluster reassignment corrects these errors [0]"
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --include-only-extendable
    description: Include only extendable [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs cluster <i:sequenceDB> <o:clusterDB> <tmpDir> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr> & Lars von den Driesch\n\
    options: prefilter:                     \n --seed-sub-mat TWIN             Substitution\
    \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
    \                        Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n\
    \ -k INT                          k-mer length (0: automatically set to optimum)\
    \ [0]\n --k-score INT                   k-mer threshold for generating similar\
    \ k-mer lists [2147483647]\n --alph-size TWIN                Alphabet size (range\
    \ 2-21) [nucl:5,aa:21]\n --max-seqs INT                  Maximum results per query\
    \ sequence allowed to pass the prefilter (affects sensitivity) [20]\n --split\
    \ INT                     Split input into N equally distributed chunks. 0: set\
    \ the best split automatically [0]\n --split-mode INT                0: split\
    \ target db; 1: split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE       Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --comp-bias-corr INT            Correct for\
    \ locally biased amino acid composition (range 0-1) [1]\n --diag-score BOOL  \
    \             Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
    \ INT       Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
    \                      Mask sequences in k-mer stage: 0: w/o low complexity masking,\
    \ 1: with low complexity masking [1]\n --mask-lower-case INT           Lowercase\
    \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
    \ [0]\n --min-ungapped-score INT        Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --add-self-matches BOOL         Artificially add\
    \ entries of queries with themselves (for clustering) [0]\n --spaced-kmer-mode\
    \ INT          0: use consecutive positions in k-mers; 1: use spaced k-mers [1]\n\
    \ --spaced-kmer-pattern STR       User-specified spaced k-mer pattern []\n --local-tmp\
    \ STR                 Path where some of the temporary files will be created []\n\
    align:                         \n -c FLOAT                        List matches\
    \ above this fraction of aligned (covered) residues (see --cov-mode) [0.800]\n\
    \ --cov-mode INT                  0: coverage of query and target\n          \
    \                       1: coverage of target\n                              \
    \   2: coverage of query\n                                 3: target seq. length\
    \ has to be at least x% of query length\n                                 4: query\
    \ seq. length has to be at least x% of target length\n                       \
    \          5: short seq. needs to be at least x% of the other seq. length [0]\n\
    \ -a BOOL                         Add backtrace string (convert to alignments\
    \ with mmseqs convertalis module) [0]\n --alignment-mode INT            How to\
    \ compute the alignment:\n                                 0: automatic\n    \
    \                             1: only score and end_pos\n                    \
    \             2: also start_pos and cov\n                                 3: also\
    \ seq.id\n                                 4: only ungapped alignment [3]\n --alignment-output-mode\
    \ INT     How to compute the alignment:\n                                 0: automatic\n\
    \                                 1: only score and end_pos\n                \
    \                 2: also start_pos and cov\n                                \
    \ 3: also seq.id\n                                 4: only ungapped alignment\n\
    \                                 5: score only (output) cluster format [0]\n\
    \ --wrapped-scoring BOOL          Double the (nucleotide) query sequence during\
    \ the scoring process to allow wrapped diagonal scoring around end and start [0]\n\
    \ -e DOUBLE                       List matches below this E-value (range 0.0-inf)\
    \ [1.000E-03]\n --min-seq-id FLOAT              List matches above this sequence\
    \ identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT      \
    \         Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT \
    \              0: alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali\
    \ INT                   Show up to this many alternative alignments [0]\n --max-rejected\
    \ INT              Maximum rejected alignments before alignment calculation for\
    \ a query is stopped [2147483647]\n --max-accept INT                Maximum accepted\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --score-bias FLOAT              Score bias when computing SW alignment (in bits)\
    \ [0.000]\n --realign BOOL                  Compute more conservative, shorter\
    \ alignments (scores and E-values not changed) [0]\n --realign-score-bias FLOAT\
    \      Additional bias when computing realignment [-0.200]\n --realign-max-seqs\
    \ INT          Maximum number of results to return in realignment [2147483647]\n\
    \ --gap-open TWIN                 Gap open cost [nucl:5,aa:11]\n --gap-extend\
    \ TWIN               Gap extension cost [nucl:2,aa:1]\n --zdrop INT          \
    \           Maximal allowed difference between score values before alignment is\
    \ truncated  (nucleotide alignment only) [40]\nclust:                        \
    \ \n --cluster-mode INT              0: Set-Cover (greedy)\n                 \
    \                1: Connected component (BLASTclust)\n                       \
    \          2,3: Greedy clustering by sequence length (CDHIT) [0]\n --max-iterations\
    \ INT            Maximum depth of breadth first search in connected component\
    \ clustering [1000]\n --similarity-type INT           Type of score used for clustering.\
    \ 1: alignment score 2: sequence identity [2]\n --single-step-clustering BOOL\
    \   Switch from cascaded to simple clustering workflow [0]\n --cluster-steps INT\
    \             Cascaded clustering steps from 1 to -s [3]\n --cluster-reassign\
    \ BOOL         Cascaded clustering can cluster sequence that do not fulfill the\
    \ clustering criteria.\n                                 Cluster reassignment\
    \ corrects these errors [0]\nkmermatcher:                   \n --kmer-per-seq\
    \ INT              k-mers per sequence [21]\n --kmer-per-seq-scale TWIN      \
    \ Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale\
    \ x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len BOOL          Adjust k-mer\
    \ length based on specificity (only for nucleotides) [0]\n --hash-shift INT  \
    \              Shift k-mer hash initialization [67]\n --include-only-extendable\
    \ BOOL  Include only extendable [0]\n --ignore-multi-kmer BOOL        Skip k-mers\
    \ occurring multiple times (>=2) [0]\nprofile:                       \n --pca\
    \ FLOAT                     Pseudo count admixture strength [1.000]\n --pcb FLOAT\
    \                     Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\nmisc:                          \n --rescore-mode INT     \
    \         Rescore diagonals with:\n                                 0: Hamming\
    \ distance\n                                 1: local alignment (score only)\n\
    \                                 2: local alignment\n                       \
    \          3: global alignment\n                                 4: longest alignment\
    \ fulfilling window quality criterion [0]\ncommon:                        \n --sub-mat\
    \ TWIN                  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT               Maximum sequence length [65535]\n --db-load-mode\
    \ INT              Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                   Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                Write compressed output [0]\n -v INT \
    \                         Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --remove-tmp-files BOOL         Delete temporary files [0]\n\
    \ --force-reuse BOOL              Reuse tmp filse in tmp/latest folder ignoring\
    \ parameters and version changes [0]\n --mpi-runner STR                Use MPI\
    \ on compute cluster with this MPI command (e.g. \"mpirun -np 42\") []\nexpert:\
    \                        \n --filter-hits BOOL              Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT              Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n\nexamples:\n # Cascaded\
    \ clustering of FASTA file\n mmseqs cluster sequenceDB clusterDB tmp\n \n #  \
    \                --cov-mode \n # Sequence         0    1    2\n # Q: MAVGTACRPA\
    \  60%  IGN  60%\n # T: -AVGTAC---  60% 100%  IGN\n # Cutoff -c 0.7    -    +\
    \    -\n #        -c 0.6    +    +    +\n \n # Cascaded clustering with reassignment\n\
    \ # - Corrects criteria-violoations of cascaded merging\n # - Produces more clusters\
    \ and is a bit slower\n mmseqs cluster sequenceDB clusterDB tmp --cluster-reassign\n\
    \ \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n - Hauser M, Steinegger M, Soding J: MMseqs software\
    \ suite for fast and deep clustering and searching of large protein sequence sets.\
    \ Bioinformatics, 32(9), 1323-1330 (2016)\n - Steinegger M, Soding J: Clustering\
    \ huge protein sequence sets in linear time. Nature Communications, 9(1), 2542\
    \ (2018)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - profile2repseq
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs profile2repseq <i:profileDB> <o:sequenceDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: common:            \n --sub-mat\
    \ TWIN      Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
    \ INT   Maximum sequence length [65535]\n --threads INT       Number of CPU-cores\
    \ used (all by default) [2]\n --compressed INT    Write compressed output [0]\n\
    \ -v INT              Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - apply
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs apply <i:DB> <o:DB> -- program [args...] [options]\n By\
    \ Milot Mirdita <milot@mirdita.de>\noptions: common:           \n --threads INT\
    \      Number of CPU-cores used (all by default) [2]\n --compressed INT   Write\
    \ compressed output [0]\n -v INT             Verbosity level: 0: quiet, 1: +errors,\
    \ 2: +warnings, 3: +info [3]\n\nexamples:\n # Gather all sequences from a cluster\
    \ DB\n mmseqs createseqfiledb sequenceDB clusterDB unalignedDB --min-sequences\
    \ 2\n # Build MSAs with Clustal-Omega\n mmseqs apply unalignedDB msaDB -- clustalo\
    \ -i - -o stdout --threads=1\n \n # Count lines in each DB entry inefficiently\
    \ (result2stats is way faster)\n mmseqs apply DB wcDB -- awk '{ counter++; } END\
    \ { print counter; }'\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - databases
  positional:
  - !Positional
    optional: false
    position: 0
    name: Name
    description: 'Type            Taxonomy        Url                                                           '
  named:
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs databases <name> <o:sequenceDB> <tmpDir> [options]\n By\
    \ Milot Mirdita <milot@mirdita.de>\n\n  Name                \tType      \tTaxonomy\t\
    Url                                                           \n- UniRef100  \
    \         \tAminoacid \t     yes\thttps://www.uniprot.org/help/uniref\n  The UniProt\
    \ Reference Clusters provide clustered sets of sequences from the UniProt Knowledgebase.\n\
    \  Cite: Suzek et al: UniRef: comprehensive and non-redundant UniProt reference\
    \ clusters. Bioinformatics 23(10), 1282–1288 (2007)\n\n- UniRef90            \t\
    Aminoacid \t     yes\thttps://www.uniprot.org/help/uniref\n  The UniProt Reference\
    \ Clusters provide clustered sets of sequences from the UniProt Knowledgebase.\n\
    \  Cite: Suzek et al: UniRef: comprehensive and non-redundant UniProt reference\
    \ clusters. Bioinformatics 23(10), 1282–1288 (2007)\n\n- UniRef50            \t\
    Aminoacid \t     yes\thttps://www.uniprot.org/help/uniref\n  The UniProt Reference\
    \ Clusters provide clustered sets of sequences from the UniProt Knowledgebase.\n\
    \  Cite: Suzek et al: UniRef: comprehensive and non-redundant UniProt reference\
    \ clusters. Bioinformatics 23(10), 1282–1288 (2007)\n\n- UniProtKB           \t\
    Aminoacid \t     yes\thttps://www.uniprot.org/help/uniprotkb\n  The UniProt Knowledgebase\
    \ is the central hub for the collection of functional information on proteins,\
    \ with accurate, consistent and rich annotation.\n  Cite: The UniProt Consortium:\
    \ UniProt: a worldwide hub of protein knowledge. Nucleic Acids Res 47(D1), D506-515\
    \ (2019)\n\n- UniProtKB/TrEMBL    \tAminoacid \t     yes\thttps://www.uniprot.org/help/uniprotkb\n\
    \  UniProtKB/TrEMBL (unreviewed) contains protein sequences associated with computationally\
    \ generated annotation and large-scale functional characterization.\n  Cite: The\
    \ UniProt Consortium: UniProt: a worldwide hub of protein knowledge. Nucleic Acids\
    \ Res 47(D1), D506-515 (2019)\n\n- UniProtKB/Swiss-Prot\tAminoacid \t     yes\t\
    https://uniprot.org\n  UniProtKB/Swiss-Prot (reviewed) is a high quality manually\
    \ annotated and non-redundant protein sequence database, which brings together\
    \ experimental results, computed features and scientific conclusions.\n  Cite:\
    \ The UniProt Consortium: UniProt: a worldwide hub of protein knowledge. Nucleic\
    \ Acids Res 47(D1), D506-515 (2019)\n\n- NR                  \tAminoacid \t  \
    \   yes\thttps://ftp.ncbi.nlm.nih.gov/blast/db/FASTA\n  Non-redundant protein\
    \ sequences from GenPept, Swissprot, PIR, PDF, PDB, and NCBI RefSeq.\n  Cite:\
    \ NCBI Resource Coordinators: Database resources of the National Center for Biotechnology\
    \ Information. Nucleic Acids Res 46(D1), D8-D13 (2018)\n\n- NT               \
    \   \tNucleotide\t       -\thttps://ftp.ncbi.nlm.nih.gov/blast/db/FASTA\n  Partially\
    \ non-redundant nucleotide sequences from all traditional divisions of GenBank,\
    \ EMBL, and DDBJ excluding GSS, STS, PAT, EST, HTG, and WGS.\n  Cite: NCBI Resource\
    \ Coordinators: Database resources of the National Center for Biotechnology Information.\
    \ Nucleic Acids Res 46(D1), D8-D13 (2018)\n\n- GTDB                \tAminoacid\
    \ \t     yes\thttps://gtdb.ecogenomic.org\n  Genome Taxonomy Database is a phylogenetically\
    \ consistent, genome-based taxonomy that provides rank-normalized classifications\
    \ for ~150,000 bacterial and archaeal genomes from domain to genus.\n  Cite: Parks\
    \ et al: A complete domain-to-species taxonomy for Bacteria and Archaea. Nat Biotechnol\
    \ 38(9), 1079–1086 (2020)\n\n- PDB                 \tAminoacid \t       -\thttps://www.rcsb.org\n\
    \  The Protein Data Bank is the single worldwide archive of structural data of\
    \ biological macromolecules.\n  Cite: Berman et al: The Protein Data Bank. Nucleic\
    \ Acids Res 28(1), 235-242 (2000)\n\n- PDB70               \tProfile   \t    \
    \   -\thttps://github.com/soedinglab/hh-suite\n  PDB clustered to 70% sequence\
    \ identity and enriched using HHblits with Uniclust sequences.\n  Cite: Steinegger\
    \ et al: HH-suite3 for fast remote homology detection and deep protein annotation.\
    \ BMC Bioinform 20(1), 473 (2019)\n\n- Pfam-A.full         \tProfile   \t    \
    \   -\thttps://pfam.xfam.org\n  The Pfam database is a large collection of protein\
    \ families, each represented by multiple sequence alignments and hidden Markov\
    \ models.\n  Cite: El-Gebali and Mistry et al: The Pfam protein families database\
    \ in 2019. Nucleic Acids Res 47(D1), D427-D432 (2019)\n\n- Pfam-A.seed       \
    \  \tProfile   \t       -\thttps://pfam.xfam.org\n  The Pfam database is a large\
    \ collection of protein families, each represented by multiple sequence alignments\
    \ and hidden Markov models.\n  Cite: El-Gebali and Mistry et al: The Pfam protein\
    \ families database in 2019. Nucleic Acids Res 47(D1), D427-D432 (2019)\n\n- Pfam-B\
    \              \tProfile   \t       -\thttps://xfam.wordpress.com/2020/06/30/a-new-pfam-b-is-released\n\
    \  Pfam-B is a large automatically generated supplement to the Pfam database.\n\
    \  Cite: Sonnhammer et al: A new Pfam-B is released. Xfam Blog (2020)\n\n- CDD\
    \                 \tProfile   \t       -\thttps://www.ncbi.nlm.nih.gov/Structure/cdd/cdd.shtml\n\
    \  Conserved Domain Database is a protein annotation resource consisting of well-annotated\
    \ MSAs for ancient domains and full-length proteins.\n  Cite: Lu et al: CDD/SPARCLE:\
    \ the conserved domain database in 2020. Nucleic Acids Res 48(D1), D265–D268 (2020)\n\
    \n- eggNOG              \tProfile   \t       -\thttp://eggnog5.embl.de\n  eggNOG\
    \ is a hierarchical, functionally and phylogenetically annotated orthology resource\n\
    \  Cite: Huerta-Cepas et al: eggNOG 5.0: a hierarchical, functionally and phylogenetically\
    \ annotated orthology resource based on 5090 organisms and 2502 viruses. Nucleic\
    \ Acids Res 47(D1), D309–D314 (2019)\n\n- dbCAN2              \tProfile   \t \
    \      -\thttp://bcb.unl.edu/dbCAN2\n  dbCAN2 is a database of carbohydrate-active\
    \ enzymes.\n  Cite: Zhang et al: dbCAN2: a meta server for automated carbohydrate-active\
    \ enzyme annotation. Nucleic Acids Res 46(W1), W95-W101 (2018)\n\n- SILVA    \
    \           \tNucleotide\t     yes\thttps://www.arb-silva.de\n  SILVA provides\
    \ datasets of aligned small and large subunit ribosomal RNA sequences for all\
    \ three domains of life.\n  Cite: Yilmaz et al: The SILVA and \"All-species Living\
    \ Tree Project (LTP)\" taxonomic frameworks. Nucleic Acids Res 42(D1), D643-D648\
    \ (2014)\n\n- Resfinder           \tNucleotide\t       -\thttps://cge.cbs.dtu.dk/services/ResFinder\n\
    \  ResFinder is a database that captures antimicrobial resistance genes from whole-genome\
    \ data sets.\n  Cite: Zankari et al: Identification of acquired antimicrobial\
    \ resistance genes. J Antimicrob Chemother 67(11), 2640-2644 (2012)\n\n- Kalamari\
    \            \tNucleotide\t     yes\thttps://github.com/lskatz/Kalamari\n  Kalamari\
    \ contains over 250 genomes chosen to be representative of agents tracked by genome-based\
    \ foodborne disease surveillance, common contaminants, and diverse phyla and bacterial\
    \ genera.\n  Cite: Katz et al: Kraken with Kalamari: Contamination Detection.\
    \ ASM Poster, 270 (2018)\n\noptions:                         \n --force-reuse\
    \ BOOL       Reuse tmp filse in tmp/latest folder ignoring parameters and version\
    \ changes [0]\n --remove-tmp-files BOOL  Delete temporary files [0]\n --compressed\
    \ INT         Write compressed output [0]\n --threads INT            Number of\
    \ CPU-cores used (all by default) [2]\n -v INT                   Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, Steinegger M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive taxonomic\
    \ assignment to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - tsv2db
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --output-dbtype
    description: 'Set database type for resulting database: Amino acid sequences 0,
      Nucl. seq. 1, Profiles 2, Alignment result 5, Clustering result 6, Prefiltering
      result 7, Taxonomy result 8, Indexed database 9, cA3M MSAs 10, FASTA or A3M
      MSAs 11, Generic database 12, Omit dbtype file 13, Bi-directional prefiltering
      result 14, Offsetted headers 15 [12]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs tsv2db <i:tsvFile> <o:resultDB> [options]\n By Milot Mirdita\
    \ <milot@mirdita.de>\noptions: prefilter:              \n --add-self-matches BOOL\
    \  Artificially add entries of queries with themselves (for clustering) [0]\n\
    misc:                   \n --output-dbtype INT      Set database type for resulting\
    \ database: Amino acid sequences 0, Nucl. seq. 1, Profiles 2, Alignment result\
    \ 5, Clustering result 6, Prefiltering result 7, Taxonomy result 8, Indexed database\
    \ 9, cA3M MSAs 10, FASTA or A3M MSAs 11, Generic database 12, Omit dbtype file\
    \ 13, Bi-directional prefiltering result 14, Offsetted headers 15 [12]\ncommon:\
    \                 \n --compressed INT         Write compressed output [0]\n -v\
    \ INT                   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - tar2db
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --output-dbtype
    description: 'Set database type for resulting database: Amino acid sequences 0,
      Nucl. seq. 1, Profiles 2, Alignment result 5, Clustering result 6, Prefiltering
      result 7, Taxonomy result 8, Indexed database 9, cA3M MSAs 10, FASTA or A3M
      MSAs 11, Generic database 12, Omit dbtype file 13, Bi-directional prefiltering
      result 14, Offsetted headers 15 [12]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --tar-include
    description: Include file names based on this regex [.*]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tar-exclude
    description: Exclude file names based on this regex [^$]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs tar2db <i:tar[.gz]> ... <i:tar[.gz]> <o:resultDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:                \n --output-dbtype\
    \ INT   Set database type for resulting database: Amino acid sequences 0, Nucl.\
    \ seq. 1, Profiles 2, Alignment result 5, Clustering result 6, Prefiltering result\
    \ 7, Taxonomy result 8, Indexed database 9, cA3M MSAs 10, FASTA or A3M MSAs 11,\
    \ Generic database 12, Omit dbtype file 13, Bi-directional prefiltering result\
    \ 14, Offsetted headers 15 [12]\n --tar-include STR     Include file names based\
    \ on this regex [.*]\n --tar-exclude STR     Exclude file names based on this\
    \ regex [^$]\ncommon:              \n --compressed INT      Write compressed output\
    \ [0]\n --threads INT         Number of CPU-cores used (all by default) [2]\n\
    \ -v INT                Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nexamples:\n # Assuming tar archive containing three aligned FASTA\
    \ files:\n #  * folder/msa1.fa.gz  * folder/msa2.fa  * folder/msa3.fa\n # Create\
    \ a msaDB with three DB entries each containing a separate MSA\n mmseqs tar2db\
    \ archive.tar.gz msaDB --output-dbtype 11\n \nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - prefilter
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs prefilter <i:queryDB> <i:targetDB> <o:prefilterDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr> & Maria Hauser\noptions:\
    \ prefilter:                 \n --seed-sub-mat TWIN         Substitution matrix\
    \ file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT   \
    \                 Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n -k\
    \ INT                      k-mer length (0: automatically set to optimum) [0]\n\
    \ --k-score INT               k-mer threshold for generating similar k-mer lists\
    \ [2147483647]\n --alph-size TWIN            Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --max-seqs INT              Maximum results per query sequence allowed to pass\
    \ the prefilter (affects sensitivity) [300]\n --split INT                 Split\
    \ input into N equally distributed chunks. 0: set the best split automatically\
    \ [0]\n --split-mode INT            0: split target db; 1: split query db; 2:\
    \ auto, depending on main memory [2]\n --split-memory-limit BYTE   Set max memory\
    \ per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory\
    \ [0]\n --comp-bias-corr INT        Correct for locally biased amino acid composition\
    \ (range 0-1) [1]\n --diag-score BOOL           Use ungapped diagonal scoring\
    \ during prefilter [1]\n --exact-kmer-matching INT   Extract only exact k-mers\
    \ for matching (range 0-1) [0]\n --mask INT                  Mask sequences in\
    \ k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]\n\
    \ --mask-lower-case INT       Lowercase letters will be excluded from k-mer search\
    \ 0: include region, 1: exclude region [0]\n --min-ungapped-score INT    Accept\
    \ only matches with ungapped alignment score above threshold [15]\n --add-self-matches\
    \ BOOL     Artificially add entries of queries with themselves (for clustering)\
    \ [0]\n --spaced-kmer-mode INT      0: use consecutive positions in k-mers; 1:\
    \ use spaced k-mers [1]\n --spaced-kmer-pattern STR   User-specified spaced k-mer\
    \ pattern []\n --local-tmp STR             Path where some of the temporary files\
    \ will be created []\nalign:                     \n -c FLOAT                 \
    \   List matches above this fraction of aligned (covered) residues (see --cov-mode)\
    \ [0.000]\n --cov-mode INT              0: coverage of query and target\n    \
    \                         1: coverage of target\n                            \
    \ 2: coverage of query\n                             3: target seq. length has\
    \ to be at least x% of query length\n                             4: query seq.\
    \ length has to be at least x% of target length\n                            \
    \ 5: short seq. needs to be at least x% of the other seq. length [0]\nprofile:\
    \                   \n --pca FLOAT                 Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                 Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\ncommon:                    \n --sub-mat TWIN\
    \              Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT           Maximum sequence length [65535]\n --db-load-mode\
    \ INT          Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT               Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT            Write compressed output [0]\n -v INT     \
    \                 Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info\
    \ [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - summarizetabs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --overlap
    description: Maximum overlap of covered regions [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs summarizetabs <i:blastTabDB> <i:lengthFile> <o:summarizedBlastTabDB>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: align:            \n -e DOUBLE          List matches below this E-value\
    \ (range 0.0-inf) [1.000E-03]\n -c FLOAT           List matches above this fraction\
    \ of aligned (covered) residues (see --cov-mode) [0.000]\nmisc:             \n\
    \ --overlap FLOAT    Maximum overlap of covered regions [0.000]\ncommon:     \
    \      \n --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases\
    \ of clustered and deeply annotated protein sequences and alignments. Nucleic\
    \ Acids Research 45(D1), D170-D176 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - view
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --id-list
    description: Entries to be printed separated by ',' []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --idx-entry-type
    description: '0: sequence, 1: src sequence, 2: header, 3: src header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs view <i:DB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: misc:                 \n --id-list STR          Entries to be printed\
    \ separated by ',' []\n --idx-entry-type INT   0: sequence, 1: src sequence, 2:\
    \ header, 3: src header [0]\ncommon:               \n -v INT                 Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nexamples:\n # Print\
    \ entries with keys 1, 2 and 3 from a sequence DB to stdout\n mmseqs view sequenecDB\
    \ --id-list 1,2,3\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
    \ sensitive protein sequence searching for the analysis of massive data sets.\
    \ Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createseqfiledb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --min-sequences
    description: Minimum number of sequences a cluster may contain [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-sequences
    description: Maximum number of sequences a cluster may contain [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --hh-format
    description: Format entries to use with hhsuite (for singleton clusters) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createseqfiledb <i:sequenceDB> <i:resultDB> <o:fastaDB>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: misc:            \
    \    \n --min-sequences INT   Minimum number of sequences a cluster may contain\
    \ [1]\n --max-sequences INT   Maximum number of sequences a cluster may contain\
    \ [2147483647]\n --hh-format BOOL      Format entries to use with hhsuite (for\
    \ singleton clusters) [0]\ncommon:              \n --db-load-mode INT    Database\
    \ preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT \
    \        Number of CPU-cores used (all by default) [2]\n --compressed INT    \
    \  Write compressed output [0]\n -v INT                Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nexamples:\n # Gather all sequences\
    \ from a cluster DB\n mmseqs createseqfiledb sequenceDB clusterDB unalignedDB\
    \ --min-sequences 2\n # Build MSAs with Clustal-Omega\n mmseqs apply unalignedDB\
    \ msaDB -- clustalo -i - -o stdout --threads=1\n \nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - summarizeresult
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --overlap
    description: Maximum overlap of covered regions [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs summarizeresult <i:alignmentDB> <o:alignmentDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: align:            \n -a BOOL            Add backtrace string (convert\
    \ to alignments with mmseqs convertalis module) [0]\n -c FLOAT           List\
    \ matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]\n\
    misc:             \n --overlap FLOAT    Maximum overlap of covered regions [0.000]\n\
    common:           \n --threads INT      Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT   Write compressed output [0]\n -v INT             Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases\
    \ of clustered and deeply annotated protein sequences and alignments. Nucleic\
    \ Acids Research 45(D1), D170-D176 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - search
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --disk-space-limit
    description: Set max disk space to use for reverse profile searches. E.g. 800B,
      5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [2]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search-filter
    description: 'Filter result during search: 0: do not filter, 1: filter [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-01]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --num-iterations
    description: Number of iterative profile search iterations [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --exhaustive-search
    description: For bigger profile DB, run iteratively the search by greedily swapping
      the search results [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --lca-search
    description: Efficient search for LCA candidates [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs search <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \                      \n --comp-bias-corr INT             Correct for locally\
    \ biased amino acid composition (range 0-1) [1]\n --add-self-matches BOOL    \
    \      Artificially add entries of queries with themselves (for clustering) [0]\n\
    \ --seed-sub-mat TWIN              Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                         Sensitivity:\
    \ 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]\n -k INT                       \
    \    k-mer length (0: automatically set to optimum) [0]\n --k-score INT      \
    \              k-mer threshold for generating similar k-mer lists [2147483647]\n\
    \ --alph-size TWIN                 Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --max-seqs INT                   Maximum results per query sequence allowed\
    \ to pass the prefilter (affects sensitivity) [300]\n --split INT            \
    \          Split input into N equally distributed chunks. 0: set the best split\
    \ automatically [0]\n --split-mode INT                 0: split target db; 1:\
    \ split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to\
    \ all available system memory [0]\n --diag-score BOOL                Use ungapped\
    \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT        Extract\
    \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                \
    \       Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with\
    \ low complexity masking [1]\n --mask-lower-case INT            Lowercase letters\
    \ will be excluded from k-mer search 0: include region, 1: exclude region [0]\n\
    \ --min-ungapped-score INT         Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --spaced-kmer-mode INT           0: use consecutive\
    \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR  \
    \      User-specified spaced k-mer pattern []\n --local-tmp STR              \
    \    Path where some of the temporary files will be created []\n --disk-space-limit\
    \ BYTE          Set max disk space to use for reverse profile searches. E.g. 800B,\
    \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
    align:                          \n -a BOOL                          Add backtrace\
    \ string (convert to alignments with mmseqs convertalis module) [0]\n --alignment-mode\
    \ INT             How to compute the alignment:\n                            \
    \      0: automatic\n                                  1: only score and end_pos\n\
    \                                  2: also start_pos and cov\n               \
    \                   3: also seq.id\n                                  4: only\
    \ ungapped alignment [2]\n --alignment-output-mode INT      How to compute the\
    \ alignment:\n                                  0: automatic\n               \
    \                   1: only score and end_pos\n                              \
    \    2: also start_pos and cov\n                                  3: also seq.id\n\
    \                                  4: only ungapped alignment\n              \
    \                    5: score only (output) cluster format [0]\n --wrapped-scoring\
    \ BOOL           Double the (nucleotide) query sequence during the scoring process\
    \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE     \
    \                   List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
    \ --min-seq-id FLOAT               List matches above this sequence identity (for\
    \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
    \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0:\
    \ alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali INT        \
    \            Show up to this many alternative alignments [0]\n -c FLOAT      \
    \                   List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT                   0: coverage of query\
    \ and target\n                                  1: coverage of target\n      \
    \                            2: coverage of query\n                          \
    \        3: target seq. length has to be at least x% of query length\n       \
    \                           4: query seq. length has to be at least x% of target\
    \ length\n                                  5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT               Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                 Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \        Score bias when computing SW alignment (in bits) [0.000]\n --realign\
    \ BOOL                   Compute more conservative, shorter alignments (scores\
    \ and E-values not changed) [0]\n --realign-score-bias FLOAT       Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT          \
    \ Maximum number of results to return in realignment [2147483647]\n --gap-open\
    \ TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN     \
    \           Gap extension cost [nucl:2,aa:1]\n --zdrop INT                   \
    \   Maximal allowed difference between score values before alignment is truncated\
    \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter\
    \ result during search: 0: do not filter, 1: filter [0]\nprofile:            \
    \            \n --pca FLOAT                      Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                      Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query\
    \ sequence of profile using tantan [0,1] [1]\n --e-profile DOUBLE            \
    \   Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-01]\n\
    \ --wg BOOL                        Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT                 Filter msa: 0: do not filter, 1: filter\
    \ [1]\n --max-seq-id FLOAT               Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            \
    \          Reduce diversity of output MSAs using min.seq. identity with query\
    \ sequences [0.0,1.0] [0.000]\n --qsc FLOAT                      Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT                      Filter output MSAs using min. fraction\
    \ of query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT\
    \                       Filter MSAs by selecting most diverse set of sequences,\
    \ keeping at least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
    \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
    \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
    \ the search results [0]\n --lca-search BOOL                Efficient search for\
    \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT  \
    \             Rescore diagonals with:\n                                  0: Hamming\
    \ distance\n                                  1: local alignment (score only)\n\
    \                                  2: local alignment\n                      \
    \            3: global alignment\n                                  4: longest\
    \ alignment fulfilling window quality criterion [0]\n --allow-deletion BOOL  \
    \          Allow deletions in a MSA [0]\n --min-length INT                 Minimum\
    \ codon number in open reading frames [30]\n --max-length INT                \
    \ Maximum codon number in open reading frames [32734]\n --max-gaps INT       \
    \            Maximum number of codons with gaps or unknown residues before an\
    \ open reading frame is rejected [2147483647]\n --contig-start-mode INT      \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT            Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT             Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR             Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR             Comma-separated list of frames on\
    \ the reverse strand to be extracted [1,2,3]\n --translation-table INT       \
    \   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL,\
    \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
    \ ALT_FLATWORM_MITOCHONDRIAL\n                                  15) BLEPHARISMA,\
    \ 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n\
    \                                  23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                                29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index\
    \ file are offset by this value [0]\n --add-orf-stop BOOL              Add stop\
    \ codon '*' at complete start and end [0]\n --sequence-overlap INT           Overlap\
    \ between sequences [0]\n --sequence-split-mode INT        Sequence split mode\
    \ 0: copy data, 1: soft link data and write new index, [1]\n --headers-split-mode\
    \ INT         Header split mode: 0: split position, 1: original header [0]\n --search-type\
    \ INT                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
    \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
    \ performed from --start-sens to -s [1]\ncommon:                         \n --sub-mat\
    \ TWIN                   Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
    \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT                    Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                 Write compressed output [0]\n -v INT\
    \                           Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --mpi-runner STR                 Use MPI on compute cluster with\
    \ this MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL          \
    \     Reuse tmp filse in tmp/latest folder ignoring parameters and version changes\
    \ [0]\n --remove-tmp-files BOOL          Delete temporary files [0]\nexpert: \
    \                        \n --filter-hits BOOL               Filter hits by seq.id.\
    \ and coverage [0]\n --sort-results INT               Sort results: 0: no sorting,\
    \ 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n --create-lookup INT\
    \              Create database lookup file (can be very large) [0]\n --chain-alignments\
    \ INT           Chain overlapping alignments [0]\n --merge-query INT         \
    \       Combine ORFs/split sequences to a single entry [1]\n --strand INT    \
    \                 Strand selection only works for DNA/DNA search 0: reverse, 1:\
    \ forward, 2: both [1]\n\nexamples:\n # Search multiple FASTA against FASTA (like\
    \ BLASTP, TBLASTN, BLASTX, BLASTN --search-type 3, TBLASTX --search-type 2)\n\
    \ mmseqs search queryDB targetDB resultDB tmp\n mmseqs convertalis queryDB targetDB\
    \ resultDB result.m8\n \n # Iterative profile search (like PSI-BLAST)\n mmseqs\
    \ search queryDB targetDB resultDB tmp --num-iterations 2\n \n # Profile search\
    \ against small databases (e.g. PFAM, eggNOG)\n mmseqs databases PFAM pfam_db\
    \ tmp\n mmseqs search queryDB pfam_db resultDB tmp\n \n # Exhaustive search against\
    \ sequences or profiles (works for large DBs)\n mmseqs search queryDB targetDB\
    \ resultDB tmp --slice-search\n \n # Increasing sensitivity search (from 2 to\
    \ 7 in 3 steps)\n mmseqs search queryDB targetDB resultDB --start-sens 2 -s 7\
    \ --sens-steps 3\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - profile2cs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs profile2cs <i:profileDB> <o:csDB> [options]\n By Martin\
    \ Steinegger <martin.steinegger@snu.ac.kr>\noptions: profile:          \n --pca\
    \ FLOAT        Pseudo count admixture strength [1.000]\n --pcb FLOAT        Pseudo\
    \ counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]\ncommon: \
    \          \n --sub-mat TWIN     Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - filtertaxdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --taxon-list
    description: Taxonomy ID, possibly multiple values separated by ',' []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs filtertaxdb <i:targetDB> <i:taxDB> <o:taxDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:         \
    \    \n --taxon-list STR   Taxonomy ID, possibly multiple values separated by\
    \ ',' []\ncommon:           \n --compressed INT   Write compressed output [0]\n\
    \ --threads INT      Number of CPU-cores used (all by default) [2]\n -v INT  \
    \           Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
    \nexamples:\n # Download a sequence database with taxonomy information\n mmseqs\
    \ databases UniProtKB/Swiss-Prot swissprotDB tmp\n # Annotate a queryDB with taxonomy\
    \ information\n mmseqs taxonomy queryDB swissprotDB taxDB tmp\n \n # Retain all\
    \ unclassified hits\n mmseqs filtertaxdb swissprotDB taxDB filteredTaxDB --taxon-list\
    \ 0\n mmseqs createsubdb <(awk '$3 == 1' filteredTaxDB.index) queryDB queryUnclassifiedDB\n\
    \ \n # Retain all eukaryotic hits except fungi\n mmseqs filtertaxdb swissprotDB\
    \ taxDB filteredTaxDB --taxon-list '2759&&!4751'\n \n # Retain all human and chlamydia\
    \ hits\n mmseqs filtertaxdb swissprotDB taxDB filteredTaxDB --taxon-list '9606||810'\n\
    \ \nreferences:\n - Mirdita M, Steinegger M, Breitwieser F, Soding J, Levy Karin\
    \ E: Fast and sensitive taxonomic assignment to metagenomic contigs. bioRxiv,\
    \ 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - convert2fasta
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --use-header-file
    description: use the sequence header DB instead of the body to map the entry keys
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs convert2fasta <i:sequenceDB> <o:fastaFile> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:                  \n --use-header-file\
    \ BOOL  use the sequence header DB instead of the body to map the entry keys [0]\n\
    common:                \n -v INT                  Verbosity level: 0: quiet, 1:\
    \ +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - filterresult
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs filterresult <i:queryDB> <i:targetDB> <i:resultDB> <o:resultDB>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: prefilter:       \
    \     \n --comp-bias-corr INT   Correct for locally biased amino acid composition\
    \ (range 0-1) [1]\nalign:                \n --gap-open TWIN        Gap open cost\
    \ [nucl:5,aa:11]\n --gap-extend TWIN      Gap extension cost [nucl:2,aa:1]\nprofile:\
    \              \n --max-seq-id FLOAT     Reduce redundancy of output MSA using\
    \ max. pairwise sequence identity [0.0,1.0] [0.900]\n --qid FLOAT            Reduce\
    \ diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]\
    \ [0.000]\n --qsc FLOAT            Reduce diversity of output MSAs using min.\
    \ score per aligned residue with query sequences [-50.0,100.0] [-20.000]\n --cov\
    \ FLOAT            Filter output MSAs using min. fraction of query residues covered\
    \ by matched sequences [0.0,1.0] [0.000]\n --diff INT             Filter MSAs\
    \ by selecting most diverse set of sequences, keeping at least this many seqs\
    \ in each MSA block of length 50 [1000]\nmisc:                 \n --allow-deletion\
    \ BOOL  Allow deletions in a MSA [0]\ncommon:               \n --sub-mat TWIN\
    \         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --threads\
    \ INT          Number of CPU-cores used (all by default) [2]\n --compressed INT\
    \       Write compressed output [0]\n -v INT                 Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createtaxdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --ncbi-tax-dump
    description: NCBI tax dump directory. The tax dump can be downloaded here "ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz"
      []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-mapping-file
    description: File to map sequence identifier to taxonomical identifier []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-mapping-mode
    description: 'Map taxonomy based on sequence database 0: .lookup file 1: .source
      file [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --tax-db-mode
    description: 'Create taxonomy database as: 0: .dmp flat files (human readable)
      1: binary dump (faster readin) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createtaxdb <i:sequenceDB> <tmpDir> [options]\n By Martin\
    \ Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:                   \n\
    \ --ncbi-tax-dump STR      NCBI tax dump directory. The tax dump can be downloaded\
    \ here \"ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz\" []\n --tax-mapping-file\
    \ STR   File to map sequence identifier to taxonomical identifier []\n --tax-mapping-mode\
    \ INT   Map taxonomy based on sequence database 0: .lookup file 1: .source file\
    \ [0]\n --tax-db-mode INT        Create taxonomy database as: 0: .dmp flat files\
    \ (human readable) 1: binary dump (faster readin) [1]\ncommon:               \
    \  \n --threads INT            Number of CPU-cores used (all by default) [2]\n\
    \ -v INT                   Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Mirdita M, Steinegger M, Breitwieser F, Soding\
    \ J, Levy Karin E: Fast and sensitive taxonomic assignment to metagenomic contigs.\
    \ bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - easy-linsearch
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --pick-n-sim-kmer
    description: Add N similar k-mers to search [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --result-direction
    description: 'result is 0: query, 1: target centric [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-mode
    description: 'Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length,
      3: Pretty HTML [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --format-output
    description: "Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
      tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
      qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
      \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]"
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs easy-linsearch <i:queryFastaFile1[.gz|.bz2]> ... <i:queryFastaFileN[.gz|.bz2]>\
    \ <i:targetFastaFile[.gz|.bz2]>|<i:targetDB> <o:alignmentFile> <tmpDir> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                   \n --comp-bias-corr INT          Correct\
    \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
    \ BOOL       Artificially add entries of queries with themselves (for clustering)\
    \ [0]\n --seed-sub-mat TWIN           Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n --mask INT                    Mask sequences\
    \ in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking\
    \ [1]\n --mask-lower-case INT         Lowercase letters will be excluded from\
    \ k-mer search 0: include region, 1: exclude region [0]\n --split-memory-limit\
    \ BYTE     Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all\
    \ available system memory [0]\nalign:                       \n -a BOOL       \
    \                Add backtrace string (convert to alignments with mmseqs convertalis\
    \ module) [0]\n --alignment-mode INT          How to compute the alignment:\n\
    \                               0: automatic\n                               1:\
    \ only score and end_pos\n                               2: also start_pos and\
    \ cov\n                               3: also seq.id\n                       \
    \        4: only ungapped alignment [3]\n --alignment-output-mode INT   How to\
    \ compute the alignment:\n                               0: automatic\n      \
    \                         1: only score and end_pos\n                        \
    \       2: also start_pos and cov\n                               3: also seq.id\n\
    \                               4: only ungapped alignment\n                 \
    \              5: score only (output) cluster format [0]\n --wrapped-scoring BOOL\
    \        Double the (nucleotide) query sequence during the scoring process to\
    \ allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE        \
    \             List matches below this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id\
    \ FLOAT            List matches above this sequence identity (for clustering)\
    \ (range 0.0-1.0) [0.000]\n --min-aln-len INT             Minimum alignment length\
    \ (range 0-INT_MAX) [0]\n --seq-id-mode INT             0: alignment length 1:\
    \ shorter, 2: longer sequence [0]\n --alt-ali INT                 Show up to this\
    \ many alternative alignments [0]\n -c FLOAT                      List matches\
    \ above this fraction of aligned (covered) residues (see --cov-mode) [0.000]\n\
    \ --cov-mode INT                0: coverage of query and target\n            \
    \                   1: coverage of target\n                               2: coverage\
    \ of query\n                               3: target seq. length has to be at\
    \ least x% of query length\n                               4: query seq. length\
    \ has to be at least x% of target length\n                               5: short\
    \ seq. needs to be at least x% of the other seq. length [0]\n --max-rejected INT\
    \            Maximum rejected alignments before alignment calculation for a query\
    \ is stopped [2147483647]\n --max-accept INT              Maximum accepted alignments\
    \ before alignment calculation for a query is stopped [2147483647]\n --score-bias\
    \ FLOAT            Score bias when computing SW alignment (in bits) [0.000]\n\
    \ --realign BOOL                Compute more conservative, shorter alignments\
    \ (scores and E-values not changed) [0]\n --realign-score-bias FLOAT    Additional\
    \ bias when computing realignment [-0.200]\n --realign-max-seqs INT        Maximum\
    \ number of results to return in realignment [2147483647]\n --gap-open TWIN  \
    \             Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN             Gap\
    \ extension cost [nucl:2,aa:1]\n --zdrop INT                   Maximal allowed\
    \ difference between score values before alignment is truncated  (nucleotide alignment\
    \ only) [40]\nkmermatcher:                 \n --kmer-per-seq INT            k-mers\
    \ per sequence [21]\n --kmer-per-seq-scale TWIN     Scale k-mer per sequence based\
    \ on sequence length as kmer-per-seq val + scale x seqlen [nucl:0.200,aa:0.000]\n\
    \ --pick-n-sim-kmer INT         Add N similar k-mers to search [1]\n --result-direction\
    \ INT        result is 0: query, 1: target centric [1]\nprofile:             \
    \        \n --pca FLOAT                   Pseudo count admixture strength [1.000]\n\
    \ --pcb FLOAT                   Pseudo counts: Neff at half of maximum admixture\
    \ (range 0.0-inf) [1.500]\nmisc:                        \n --min-length INT  \
    \            Minimum codon number in open reading frames [30]\n --max-length INT\
    \              Maximum codon number in open reading frames [32734]\n --max-gaps\
    \ INT                Maximum number of codons with gaps or unknown residues before\
    \ an open reading frame is rejected [2147483647]\n --contig-start-mode INT   \
    \    Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT         Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT          Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR          Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR          Comma-separated list of frames on the\
    \ reverse strand to be extracted [1,2,3]\n --translation-table INT       1) CANONICAL,\
    \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
    \ 6) CILIATE\n                               9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                               15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \                23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                             29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT               Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL   Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT               Numeric ids in index file\
    \ are offset by this value [0]\n --add-orf-stop BOOL           Add stop codon\
    \ '*' at complete start and end [0]\n --search-type INT             Search type\
    \ 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide\
    \ alignment [0]\n --format-mode INT             Output format: 0: BLAST-TAB, 1:\
    \ SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML [0]\n --format-output STR\
    \           Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
    \                               tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
    \                               qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
    \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]\n\
    common:                      \n --sub-mat TWIN                Substitution matrix\
    \ file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len INT             Maximum\
    \ sequence length [65535]\n --db-load-mode INT            Database preload mode\
    \ 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT              \
    \   Number of CPU-cores used (all by default) [2]\n --compressed INT         \
    \     Write compressed output [0]\n -v INT                        Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner STR        \
    \      Use MPI on compute cluster with this MPI command (e.g. \"mpirun -np 42\"\
    ) []\n --force-reuse BOOL            Reuse tmp filse in tmp/latest folder ignoring\
    \ parameters and version changes [0]\n --remove-tmp-files BOOL       Delete temporary\
    \ files [1]\nexpert:                      \n --create-lookup INT           Create\
    \ database lookup file (can be very large) [0]\n --chain-alignments INT      \
    \  Chain overlapping alignments [0]\n --merge-query INT             Combine ORFs/split\
    \ sequences to a single entry [1]\n --db-output BOOL              Return a result\
    \ DB instead of a text file [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2\
    \ enables sensitive protein sequence searching for the analysis of massive data\
    \ sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Steinegger M, Soding\
    \ J: Clustering huge protein sequence sets in linear time. Nature Communications,\
    \ 9(1), 2542 (2018)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - proteinaln2nucl
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs proteinaln2nucl <i:nuclQueryDB> <i:nuclTargetDB> <i:aaQueryDB>\
    \ <i:aaTargetDB> <i:alnDB> <o:alnDB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\
    \ \noptions: align:            \n --gap-open TWIN    Gap open cost [nucl:5,aa:11]\n\
    \ --gap-extend TWIN  Gap extension cost [nucl:2,aa:1]\ncommon:           \n --sub-mat\
    \ TWIN     Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --threads\
    \ INT      Number of CPU-cores used (all by default) [2]\n --compressed INT  \
    \ Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - map
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [2.000]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-mode
    description: '0: split target db; 1: split query db; 2: auto, depending on main
      memory [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --diag-score
    description: Use ungapped diagonal scoring during prefilter [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --exact-kmer-matching
    description: Extract only exact k-mers for matching (range 0-1) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-ungapped-score
    description: Accept only matches with ungapped alignment score above threshold
      [15]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --local-tmp
    description: Path where some of the temporary files will be created []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.950]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [2]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [2]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [10]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --start-sens
    description: Start sensitivity [4.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --sens-steps
    description: Number of search steps performed from --start-sens to -s [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs map <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                  \n --seed-sub-mat TWIN          Substitution\
    \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
    \                     Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [2.000]\n\
    \ -k INT                       k-mer length (0: automatically set to optimum)\
    \ [0]\n --k-score INT                k-mer threshold for generating similar k-mer\
    \ lists [2147483647]\n --alph-size TWIN             Alphabet size (range 2-21)\
    \ [nucl:5,aa:21]\n --max-seqs INT               Maximum results per query sequence\
    \ allowed to pass the prefilter (affects sensitivity) [300]\n --split INT    \
    \              Split input into N equally distributed chunks. 0: set the best\
    \ split automatically [0]\n --split-mode INT             0: split target db; 1:\
    \ split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
    \ BYTE    Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all\
    \ available system memory [0]\n --comp-bias-corr INT         Correct for locally\
    \ biased amino acid composition (range 0-1) [0]\n --diag-score BOOL          \
    \  Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
    \ INT    Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT \
    \                  Mask sequences in k-mer stage: 0: w/o low complexity masking,\
    \ 1: with low complexity masking [0]\n --mask-lower-case INT        Lowercase\
    \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
    \ [0]\n --min-ungapped-score INT     Accept only matches with ungapped alignment\
    \ score above threshold [15]\n --add-self-matches BOOL      Artificially add entries\
    \ of queries with themselves (for clustering) [0]\n --spaced-kmer-mode INT   \
    \    0: use consecutive positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern\
    \ STR    User-specified spaced k-mer pattern []\n --local-tmp STR            \
    \  Path where some of the temporary files will be created []\nalign:         \
    \             \n -c FLOAT                     List matches above this fraction\
    \ of aligned (covered) residues (see --cov-mode) [0.950]\n --cov-mode INT    \
    \           0: coverage of query and target\n                              1:\
    \ coverage of target\n                              2: coverage of query\n   \
    \                           3: target seq. length has to be at least x% of query\
    \ length\n                              4: query seq. length has to be at least\
    \ x% of target length\n                              5: short seq. needs to be\
    \ at least x% of the other seq. length [2]\n --wrapped-scoring BOOL       Double\
    \ the (nucleotide) query sequence during the scoring process to allow wrapped\
    \ diagonal scoring around end and start [0]\n -e DOUBLE                    List\
    \ matches below this E-value (range 0.0-inf) [1.000E-03]\n -a BOOL           \
    \           Add backtrace string (convert to alignments with mmseqs convertalis\
    \ module) [0]\n --min-seq-id FLOAT           List matches above this sequence\
    \ identity (for clustering) (range 0.0-1.0) [0.900]\n --min-aln-len INT      \
    \      Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT    \
    \        0: alignment length 1: shorter, 2: longer sequence [0]\nprofile:    \
    \                \n --pca FLOAT                  Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                  Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\nmisc:                       \n --rescore-mode\
    \ INT           Rescore diagonals with:\n                              0: Hamming\
    \ distance\n                              1: local alignment (score only)\n  \
    \                            2: local alignment\n                            \
    \  3: global alignment\n                              4: longest alignment fulfilling\
    \ window quality criterion [2]\n --min-length INT             Minimum codon number\
    \ in open reading frames [10]\n --max-length INT             Maximum codon number\
    \ in open reading frames [32734]\n --max-gaps INT               Maximum number\
    \ of codons with gaps or unknown residues before an open reading frame is rejected\
    \ [2147483647]\n --contig-start-mode INT      Contig start can be 0: incomplete,\
    \ 1: complete, 2: both [2]\n --contig-end-mode INT        Contig end can be 0:\
    \ incomplete, 1: complete, 2: both [2]\n --orf-start-mode INT         Orf fragment\
    \ can be 0: from start to stop, 1: from any to stop, 2: from last encountered\
    \ start to stop (no start in the middle) [1]\n --forward-frames STR         Comma-separated\
    \ list of frames on the forward strand to be extracted [1,2,3]\n --reverse-frames\
    \ STR         Comma-separated list of frames on the reverse strand to be extracted\
    \ [1,2,3]\n --translation-table INT      1) CANONICAL, 2) VERT_MITOCHONDRIAL,\
    \ 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n\
    \                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE,\
    \ 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \               23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                            29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL  Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT              Numeric ids in index file\
    \ are offset by this value [0]\n --add-orf-stop BOOL          Add stop codon '*'\
    \ at complete start and end [0]\n --start-sens FLOAT           Start sensitivity\
    \ [4.000]\n --sens-steps INT             Number of search steps performed from\
    \ --start-sens to -s [1]\ncommon:                     \n --sub-mat TWIN      \
    \         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
    \ INT            Maximum sequence length [65535]\n --db-load-mode INT        \
    \   Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads\
    \ INT                Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT             Write compressed output [0]\n -v INT                       Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner STR \
    \            Use MPI on compute cluster with this MPI command (e.g. \"mpirun -np\
    \ 42\") []\n --force-reuse BOOL           Reuse tmp filse in tmp/latest folder\
    \ ignoring parameters and version changes [0]\n --remove-tmp-files BOOL      Delete\
    \ temporary files [0]\nexpert:                     \n --filter-hits BOOL     \
    \      Filter hits by seq.id. and coverage [0]\n --sort-results INT          \
    \ Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming)\
    \ [1]\n --create-lookup INT          Create database lookup file (can be very\
    \ large) [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n - Steinegger M, Mirdita M, Soding J: Protein-level\
    \ assembly increases protein sequence recovery from metagenomic samples manyfold.\
    \ Nature Methods, 16(7), 603-606 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - unpackdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs unpackdb <i:DB> <o:outDir> [options]\n By Milot Mirdita\
    \ <milot@mirdita.de>\noptions: common: \n -v INT   Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - touchdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs touchdb <i:DB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\
    \ \noptions: common:        \n --threads INT   Number of CPU-cores used (all by\
    \ default) [2]\n -v INT          Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - expand2profile
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --expansion-mode
    description: 'Update score, E-value, and sequence identity by 0: input alignment
      1: rescoring the inferred backtrace [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs expand2profile <i:queryDB> <i:targetDB> <i:resultDB> <i:resultDB|ca3mDB>\
    \ <o:profileDB> [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: prefilter:\
    \            \n --comp-bias-corr INT   Correct for locally biased amino acid composition\
    \ (range 0-1) [1]\nalign:                \n --gap-open TWIN        Gap open cost\
    \ [nucl:5,aa:11]\n --gap-extend TWIN      Gap extension cost [nucl:2,aa:1]\n --score-bias\
    \ FLOAT     Score bias when computing SW alignment (in bits) [0.000]\n -c FLOAT\
    \               List matches above this fraction of aligned (covered) residues\
    \ (see --cov-mode) [0.000]\n --cov-mode INT         0: coverage of query and target\n\
    \                        1: coverage of target\n                        2: coverage\
    \ of query\n                        3: target seq. length has to be at least x%\
    \ of query length\n                        4: query seq. length has to be at least\
    \ x% of target length\n                        5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\nprofile:              \n --e-profile DOUBLE\
    \     Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n\
    \ --mask-profile INT     Mask query sequence of profile using tantan [0,1] [1]\n\
    \ --wg BOOL              Use global sequence weighting for profile calculation\
    \ [0]\n --filter-msa INT       Filter msa: 0: do not filter, 1: filter [1]\n --max-seq-id\
    \ FLOAT     Reduce redundancy of output MSA using max. pairwise sequence identity\
    \ [0.0,1.0] [0.900]\n --qid FLOAT            Reduce diversity of output MSAs using\
    \ min.seq. identity with query sequences [0.0,1.0] [0.000]\n --qsc FLOAT     \
    \       Reduce diversity of output MSAs using min. score per aligned residue with\
    \ query sequences [-50.0,100.0] [-20.000]\n --cov FLOAT            Filter output\
    \ MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]\
    \ [0.000]\n --diff INT             Filter MSAs by selecting most diverse set of\
    \ sequences, keeping at least this many seqs in each MSA block of length 50 [1000]\n\
    \ --pca FLOAT            Pseudo count admixture strength [0.000]\n --pcb FLOAT\
    \            Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)\
    \ [1.500]\nmisc:                 \n --expansion-mode INT   Update score, E-value,\
    \ and sequence identity by 0: input alignment 1: rescoring the inferred backtrace\
    \ [0]\n --allow-deletion BOOL  Allow deletions in a MSA [0]\ncommon:         \
    \      \n --sub-mat TWIN         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT      Maximum sequence length [65535]\n --compressed INT  \
    \     Write compressed output [0]\n --threads INT          Number of CPU-cores\
    \ used (all by default) [2]\n -v INT                 Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - combinepvalperset
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --alpha
    description: Set alpha for combining p-values during aggregation [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --aggregation-mode
    description: 'Combined P-values computed from 0: multi-hit, 1: minimum of all
      P-values, 2: product-of-P-values, 3: truncated product [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs combinepvalperset <i:querySetDB> <i:targetSetDB> <i:resultDB>\
    \ <o:pvalDB> [options]\n By Ruoshi Zhang, Clovis Norroy & Milot Mirdita <milot@mirdita.de>\n\
    options: misc:                   \n --alpha FLOAT            Set alpha for combining\
    \ p-values during aggregation [1.000]\n --aggregation-mode INT   Combined P-values\
    \ computed from 0: multi-hit, 1: minimum of all P-values, 2: product-of-P-values,\
    \ 3: truncated product [0]\ncommon:                 \n --threads INT         \
    \   Number of CPU-cores used (all by default) [2]\n --compressed INT         Write\
    \ compressed output [0]\n -v INT                   Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createtsv
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --first-seq-as-repr
    description: Use the first sequence of the clustering result as representative
      sequence [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --target-column
    description: Select a target column (default 1), 0 if no target id exists [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --full-header
    description: Replace DB ID by its corresponding Full Header [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --idx-seq-src
    description: '0: auto, 1: split/translated sequences, 2: input sequences [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createtsv <i:queryDB> [<i:targetDB>] <i:resultDB> <o:tsvFile>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:\
    \                    \n --first-seq-as-repr BOOL  Use the first sequence of the\
    \ clustering result as representative sequence [0]\n --target-column INT     \
    \  Select a target column (default 1), 0 if no target id exists [1]\n --full-header\
    \ BOOL        Replace DB ID by its corresponding Full Header [0]\n --idx-seq-src\
    \ INT         0: auto, 1: split/translated sequences, 2: input sequences [0]\n\
    common:                  \n --threads INT             Number of CPU-cores used\
    \ (all by default) [2]\n --compressed INT          Write compressed output [0]\n\
    \ -v INT                    Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\nexpert:                  \n --db-output BOOL          Return a\
    \ result DB instead of a text file [0]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - filtertaxseqdb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --taxon-list
    description: Taxonomy ID, possibly multiple values separated by ',' []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --subdb-mode
    description: 'Subdb mode 0: copy data 1: soft link data and write index [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs filtertaxseqdb <i:taxSeqDB> <o:taxSeqDB> [options]\n By\
    \ Eli Levy Karin <eli.levy.karin@gmail.com> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: misc:             \n --taxon-list STR   Taxonomy ID, possibly multiple\
    \ values separated by ',' []\n --subdb-mode INT   Subdb mode 0: copy data 1: soft\
    \ link data and write index [0]\ncommon:           \n --compressed INT   Write\
    \ compressed output [0]\n --threads INT      Number of CPU-cores used (all by\
    \ default) [2]\n -v INT             Verbosity level: 0: quiet, 1: +errors, 2:\
    \ +warnings, 3: +info [3]\n\nexamples:\n # Download a sequence database with taxonomy\
    \ information\n mmseqs databases UniProtKB/Swiss-Prot swissprotDB tmp\n \n # Retain\
    \ all bacterial sequences\n mmseqs filtertaxseqdb swissprotDB swissprotDB_only_bac\
    \ --taxon-list 2\n \n # Retain all eukaryotic sequences except fungi\n mmseqs\
    \ filtertaxseqdb swissprotDB swissprotDB_euk_wo_fungi --taxon-list '2759&&!4751'\n\
    \ \n # Retain all human and chlamydia sequences\n mmseqs filtertaxseqdb swissprotDB\
    \ swissprotDB_human_and_chlamydia --taxon-list '9606||810'\n \n \nreferences:\n\
    \ - Mirdita M, Steinegger M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive\
    \ taxonomic assignment to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - offsetalignment
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --chain-alignments
    description: Chain overlapping alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --merge-query
    description: Combine ORFs/split sequences to a single entry [1]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs offsetalignment <i:queryDB> <i:queryOrfDB> <i:targetDB>\
    \ <i:targetOrfDB> <i:alnDB> <o:alnDB> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: misc:                   \n --search-type INT        Search type 0: auto\
    \ 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide alignment\
    \ [0]\ncommon:                 \n --threads INT            Number of CPU-cores\
    \ used (all by default) [2]\n --compressed INT         Write compressed output\
    \ [0]\n --db-load-mode INT       Database preload mode 0: auto, 1: fread, 2: mmap,\
    \ 3: mmap+touch [0]\n -v INT                   Verbosity level: 0: quiet, 1: +errors,\
    \ 2: +warnings, 3: +info [3]\nexpert:                 \n --chain-alignments INT\
    \   Chain overlapping alignments [0]\n --merge-query INT        Combine ORFs/split\
    \ sequences to a single entry [1]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2\
    \ enables sensitive protein sequence searching for the analysis of massive data\
    \ sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - mergedbs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --prefixes
    description: Comma separated list of prefixes for each entry []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --merge-stop-empty
    description: Don't continue merging entries after an empty entry [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs mergedbs <i:DB> <o:DB> <i:DB1> ... <i:DBn> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: common:       \
    \          \n --compressed INT         Write compressed output [0]\n -v INT  \
    \                 Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info\
    \ [3]\nexpert:                 \n --prefixes STR           Comma separated list\
    \ of prefixes for each entry []\n --merge-stop-empty BOOL  Don't continue merging\
    \ entries after an empty entry [0]\n\nreferences:\n - Steinegger M, Soding J:\
    \ MMseqs2 enables sensitive protein sequence searching for the analysis of massive\
    \ data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - convertprofiledb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs convertprofiledb <i:hhsuiteHHMDB> <o:profileDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: common:       \
    \    \n --sub-mat TWIN     Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - summarizealis
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs summarizealis <i:alignmentDB> <o:summerizedDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: common:       \
    \    \n --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases\
    \ of clustered and deeply annotated protein sequences and alignments. Nucleic\
    \ Acids Research 45(D1), D170-D176 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - extractdomains
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --msa-type
    description: 'MSA Type: 0: cA3M, 1: A3M, 2: FASTA [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs extractdomains <i:alignmentDb> <i:msaDB> <o:domainDB>\
    \ [options]\n By Milot Mirdita <milot@mirdita.de> & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: align:            \n -e DOUBLE          List matches below this E-value\
    \ (range 0.0-inf) [1.000E-03]\n -c FLOAT           List matches above this fraction\
    \ of aligned (covered) residues (see --cov-mode) [0.000]\nmisc:             \n\
    \ --msa-type INT     MSA Type: 0: cA3M, 1: A3M, 2: FASTA [2]\ncommon:        \
    \   \n --sub-mat TWIN     Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Mirdita\
    \ M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases\
    \ of clustered and deeply annotated protein sequences and alignments. Nucleic\
    \ Acids Research 45(D1), D170-D176 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createlinindex
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --check-compatible
    description: '0: Always recreate index, 1: Check if recreating index is needed,
      2: Fail if index is incompatible [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createlinindex <i:sequenceDB> <tmpDir> [options]\n By\
    \ Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:       \
    \           \n --seed-sub-mat TWIN          Substitution matrix file for k-mer\
    \ generation [nucl:nucleotide.out,aa:blosum62.out]\n -k INT                  \
    \     k-mer length (0: automatically set to optimum) [0]\n --split-memory-limit\
    \ BYTE    Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all\
    \ available system memory [0]\n --alph-size TWIN             Alphabet size (range\
    \ 2-21) [nucl:5,aa:21]\n --mask INT                   Mask sequences in k-mer\
    \ stage: 0: w/o low complexity masking, 1: with low complexity masking [0]\n --mask-lower-case\
    \ INT        Lowercase letters will be excluded from k-mer search 0: include region,\
    \ 1: exclude region [0]\n --spaced-kmer-mode INT       0: use consecutive positions\
    \ in k-mers; 1: use spaced k-mers [0]\n --spaced-kmer-pattern STR    User-specified\
    \ spaced k-mer pattern []\nalign:                      \n --min-seq-id FLOAT \
    \          List matches above this sequence identity (for clustering) (range 0.0-1.0)\
    \ [0.000]\nkmermatcher:                \n --hash-shift INT             Shift k-mer\
    \ hash initialization [67]\n --kmer-per-seq INT           k-mers per sequence\
    \ [21]\n --kmer-per-seq-scale TWIN    Scale k-mer per sequence based on sequence\
    \ length as kmer-per-seq val + scale x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len\
    \ BOOL       Adjust k-mer length based on specificity (only for nucleotides) [0]\n\
    \ --ignore-multi-kmer BOOL     Skip k-mers occurring multiple times (>=2) [0]\n\
    misc:                       \n --check-compatible INT       0: Always recreate\
    \ index, 1: Check if recreating index is needed, 2: Fail if index is incompatible\
    \ [0]\n --search-type INT            Search type 0: auto 1: amino acid, 2: translated,\
    \ 3: nucleotide, 4: translated nucleotide alignment [0]\n --min-length INT   \
    \          Minimum codon number in open reading frames [30]\n --max-length INT\
    \             Maximum codon number in open reading frames [32734]\n --max-gaps\
    \ INT               Maximum number of codons with gaps or unknown residues before\
    \ an open reading frame is rejected [2147483647]\n --contig-start-mode INT   \
    \   Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
    \ INT        Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
    \ INT         Orf fragment can be 0: from start to stop, 1: from any to stop,\
    \ 2: from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR         Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR         Comma-separated list of frames on the\
    \ reverse strand to be extracted [1,2,3]\n --translation-table INT      1) CANONICAL,\
    \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
    \ 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \               23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                            29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL  Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT              Numeric ids in index file\
    \ are offset by this value [0]\n --add-orf-stop BOOL          Add stop codon '*'\
    \ at complete start and end [0]\ncommon:                     \n --max-seq-len\
    \ INT            Maximum sequence length [65535]\n -v INT                    \
    \   Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --threads\
    \ INT                Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT             Write compressed output [0]\n --remove-tmp-files BOOL      Delete\
    \ temporary files [0]\nexpert:                     \n --create-lookup INT    \
    \      Create database lookup file (can be very large) [0]\n\nreferences:\n -\
    \ Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching\
    \ for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028\
    \ (2017)\n - Mirdita M, Steinegger M, Soding J: MMseqs2 desktop and local web\
    \ server app for fast, interactive sequence searches. Bioinformatics, 35(16),\
    \ 2856–2858 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - majoritylca
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --majority
    description: minimal fraction of agreement among taxonomically assigned sequences
      of a set [0.500]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --vote-mode
    description: 'Mode of assigning weights to compute majority. 0: uniform, 1: minus
      log E-value, 2: score [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --blacklist
    description: Comma separated list of ignored taxa in LCA computation [12908:unclassified
      sequences,28384:other sequences]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs majoritylca <i:targetDB> <i:resultDB> <o:taxaDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:              \n --majority\
    \ FLOAT    minimal fraction of agreement among taxonomically assigned sequences\
    \ of a set [0.500]\n --vote-mode INT     Mode of assigning weights to compute\
    \ majority. 0: uniform, 1: minus log E-value, 2: score [1]\n --lca-ranks STR \
    \    Add column with specified ranks (',' separated) []\n --blacklist STR    \
    \ Comma separated list of ignored taxa in LCA computation [12908:unclassified\
    \ sequences,28384:other sequences]\n --tax-lineage INT   0: don't show, 1: add\
    \ all lineage names, 2: add all lineage taxids [0]\ncommon:            \n --compressed\
    \ INT    Write compressed output [0]\n --threads INT       Number of CPU-cores\
    \ used (all by default) [2]\n -v INT              Verbosity level: 0: quiet, 1:\
    \ +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Mirdita M, Steinegger\
    \ M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive taxonomic assignment\
    \ to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2rbh
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2rbh <i:resultDB> <o:resultDB> [options]\n By Eli\
    \ Levy Karin\noptions: common:           \n --threads INT      Number of CPU-cores\
    \ used (all by default) [2]\n --compressed INT   Write compressed output [0]\n\
    \ -v INT             Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info\
    \ [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2profile
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --mask-profile
    description: Mask query sequence of profile using tantan [0,1] [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --wg
    description: Use global sequence weighting for profile calculation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --filter-msa
    description: 'Filter msa: 0: do not filter, 1: filter [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-id
    description: Reduce redundancy of output MSA using max. pairwise sequence identity
      [0.0,1.0] [0.900]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qid
    description: Reduce diversity of output MSAs using min.seq. identity with query
      sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --qsc
    description: Reduce diversity of output MSAs using min. score per aligned residue
      with query sequences [-50.0,100.0] [-20.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov
    description: Filter output MSAs using min. fraction of query residues covered
      by matched sequences [0.0,1.0] [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --diff
    description: Filter MSAs by selecting most diverse set of sequences, keeping at
      least this many seqs in each MSA block of length 50 [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --allow-deletion
    description: Allow deletions in a MSA [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2profile <i:queryDB> <i:targetDB> <i:resultDB> <o:profileDB>\
    \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
    \            \n --comp-bias-corr INT   Correct for locally biased amino acid composition\
    \ (range 0-1) [1]\nalign:                \n -e DOUBLE              List matches\
    \ below this E-value (range 0.0-inf) [1.000E-03]\n --gap-open TWIN        Gap\
    \ open cost [nucl:5,aa:11]\n --gap-extend TWIN      Gap extension cost [nucl:2,aa:1]\n\
    profile:              \n --mask-profile INT     Mask query sequence of profile\
    \ using tantan [0,1] [1]\n --e-profile DOUBLE     Include sequences matches with\
    \ < E-value thr. into the profile (>=0.0) [1.000E-03]\n --wg BOOL            \
    \  Use global sequence weighting for profile calculation [0]\n --filter-msa INT\
    \       Filter msa: 0: do not filter, 1: filter [1]\n --max-seq-id FLOAT     Reduce\
    \ redundancy of output MSA using max. pairwise sequence identity [0.0,1.0] [0.900]\n\
    \ --qid FLOAT            Reduce diversity of output MSAs using min.seq. identity\
    \ with query sequences [0.0,1.0] [0.000]\n --qsc FLOAT            Reduce diversity\
    \ of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]\
    \ [-20.000]\n --cov FLOAT            Filter output MSAs using min. fraction of\
    \ query residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT \
    \            Filter MSAs by selecting most diverse set of sequences, keeping at\
    \ least this many seqs in each MSA block of length 50 [1000]\n --pca FLOAT   \
    \         Pseudo count admixture strength [0.000]\n --pcb FLOAT            Pseudo\
    \ counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]\nmisc:   \
    \              \n --allow-deletion BOOL  Allow deletions in a MSA [0]\ncommon:\
    \               \n --sub-mat TWIN         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --db-load-mode INT     Database preload mode 0: auto, 1: fread, 2: mmap, 3:\
    \ mmap+touch [0]\n --threads INT          Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT       Write compressed output [0]\n -v INT          \
    \       Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\n\
    references:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
    \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
    \ 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - expandaln
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --expansion-mode
    description: 'Update score, E-value, and sequence identity by 0: input alignment
      1: rescoring the inferred backtrace [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs expandaln <i:queryDB> <i:targetDB> <i:resultDB> <i:resultDB|ca3mDB>\
    \ <o:alignmentDB> [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: prefilter:\
    \            \n --comp-bias-corr INT   Correct for locally biased amino acid composition\
    \ (range 0-1) [1]\nalign:                \n --gap-open TWIN        Gap open cost\
    \ [nucl:5,aa:11]\n --gap-extend TWIN      Gap extension cost [nucl:2,aa:1]\n --score-bias\
    \ FLOAT     Score bias when computing SW alignment (in bits) [0.000]\n -e DOUBLE\
    \              List matches below this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id\
    \ FLOAT     List matches above this sequence identity (for clustering) (range\
    \ 0.0-1.0) [0.000]\n -c FLOAT               List matches above this fraction of\
    \ aligned (covered) residues (see --cov-mode) [0.000]\n --cov-mode INT       \
    \  0: coverage of query and target\n                        1: coverage of target\n\
    \                        2: coverage of query\n                        3: target\
    \ seq. length has to be at least x% of query length\n                        4:\
    \ query seq. length has to be at least x% of target length\n                 \
    \       5: short seq. needs to be at least x% of the other seq. length [0]\nprofile:\
    \              \n --pca FLOAT            Pseudo count admixture strength [0.000]\n\
    \ --pcb FLOAT            Pseudo counts: Neff at half of maximum admixture (range\
    \ 0.0-inf) [1.500]\nmisc:                 \n --expansion-mode INT   Update score,\
    \ E-value, and sequence identity by 0: input alignment 1: rescoring the inferred\
    \ backtrace [0]\ncommon:               \n --sub-mat TWIN         Substitution\
    \ matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len INT      Maximum\
    \ sequence length [65535]\n --compressed INT       Write compressed output [0]\n\
    \ --threads INT          Number of CPU-cores used (all by default) [2]\n -v INT\
    \                 Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info\
    \ [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - result2pp
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --e-profile
    description: Include sequences matches with < E-value thr. into the profile (>=0.0)
      [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs result2pp <i:queryDB> <i:targetDB> <i:resultDB> <o:profileDB>\
    \ [options]\n By Clovis Galiez & Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: profile:            \n --e-profile DOUBLE   Include sequences matches\
    \ with < E-value thr. into the profile (>=0.0) [1.000E-03]\ncommon:          \
    \   \n --sub-mat TWIN       Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --db-load-mode INT   Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --threads INT        Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT     Write compressed output [0]\n -v INT               Verbosity level:\
    \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - easy-linclust
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-self-matches
    description: Artificially add entries of queries with themselves (for clustering)
      [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - -a
    description: Add backtrace string (convert to alignments with mmseqs convertalis
      module) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --alignment-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alignment-output-mode
    description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
      2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
      \ only (output) cluster format [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --wrapped-scoring
    description: Double the (nucleotide) query sequence during the scoring process
      to allow wrapped diagonal scoring around end and start [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - -e
    description: List matches below this E-value (range 0.0-inf) [1.000E-03]
    args: !SimpleFlagArg
      name: DOUBLE
  - !Flag
    optional: true
    synonyms:
    - --min-seq-id
    description: List matches above this sequence identity (for clustering) (range
      0.0-1.0) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --min-aln-len
    description: Minimum alignment length (range 0-INT_MAX) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --seq-id-mode
    description: '0: alignment length 1: shorter, 2: longer sequence [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alt-ali
    description: Show up to this many alternative alignments [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -c
    description: List matches above this fraction of aligned (covered) residues (see
      --cov-mode) [0.800]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --cov-mode
    description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
      \ of query\n3: target seq. length has to be at least x% of query length\n4:\
      \ query seq. length has to be at least x% of target length\n5: short seq. needs\
      \ to be at least x% of the other seq. length [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-rejected
    description: Maximum rejected alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-accept
    description: Maximum accepted alignments before alignment calculation for a query
      is stopped [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --score-bias
    description: Score bias when computing SW alignment (in bits) [0.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign
    description: Compute more conservative, shorter alignments (scores and E-values
      not changed) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --realign-score-bias
    description: Additional bias when computing realignment [-0.200]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --realign-max-seqs
    description: Maximum number of results to return in realignment [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --gap-open
    description: Gap open cost [nucl:5,aa:11]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --gap-extend
    description: Gap extension cost [nucl:2,aa:1]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --zdrop
    description: Maximal allowed difference between score values before alignment
      is truncated  (nucleotide alignment only) [40]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --cluster-mode
    description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3:\
      \ Greedy clustering by sequence length (CDHIT) [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-iterations
    description: Maximum depth of breadth first search in connected component clustering
      [1000]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --similarity-type
    description: 'Type of score used for clustering. 1: alignment score 2: sequence
      identity [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq
    description: k-mers per sequence [21]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --kmer-per-seq-scale
    description: Scale k-mer per sequence based on sequence length as kmer-per-seq
      val + scale x seqlen [nucl:0.200,aa:0.000]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --adjust-kmer-len
    description: Adjust k-mer length based on specificity (only for nucleotides) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --hash-shift
    description: Shift k-mer hash initialization [67]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --include-only-extendable
    description: Include only extendable [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --ignore-multi-kmer
    description: Skip k-mers occurring multiple times (>=2) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --pca
    description: Pseudo count admixture strength [1.000]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --pcb
    description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
      [1.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --rescore-mode
    description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment\
      \ (score only)\n2: local alignment\n3: global alignment\n4: longest alignment\
      \ fulfilling window quality criterion [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --dbtype
    description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --shuffle
    description: Shuffle input database [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --createdb-mode
    description: 'Createdb mode 0: copy data, 1: soft link data and write new index
      (works only with single line fasta/q) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-load-mode
    description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
      [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [1]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --force-reuse
    description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
      changes [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --mpi-runner
    description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
      42") []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --filter-hits
    description: Filter hits by seq.id. and coverage [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sort-results
    description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
      (Hamming) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --write-lookup
    description: write .lookup file containing mapping from internal id, fasta id
      and file number [0]
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]>\
    \ <o:clusterPrefix> <tmpDir> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
    options: prefilter:                     \n --comp-bias-corr INT            Correct\
    \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
    \ BOOL         Artificially add entries of queries with themselves (for clustering)\
    \ [0]\n --alph-size TWIN                Alphabet size (range 2-21) [nucl:5,aa:21]\n\
    \ --spaced-kmer-mode INT          0: use consecutive positions in k-mers; 1: use\
    \ spaced k-mers [0]\n --spaced-kmer-pattern STR       User-specified spaced k-mer\
    \ pattern []\n --mask INT                      Mask sequences in k-mer stage:\
    \ 0: w/o low complexity masking, 1: with low complexity masking [1]\n --mask-lower-case\
    \ INT           Lowercase letters will be excluded from k-mer search 0: include\
    \ region, 1: exclude region [0]\n -k INT                          k-mer length\
    \ (0: automatically set to optimum) [0]\n --split-memory-limit BYTE       Set\
    \ max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system\
    \ memory [0]\nalign:                         \n -a BOOL                      \
    \   Add backtrace string (convert to alignments with mmseqs convertalis module)\
    \ [0]\n --alignment-mode INT            How to compute the alignment:\n      \
    \                           0: automatic\n                                 1:\
    \ only score and end_pos\n                                 2: also start_pos and\
    \ cov\n                                 3: also seq.id\n                     \
    \            4: only ungapped alignment [0]\n --alignment-output-mode INT    \
    \ How to compute the alignment:\n                                 0: automatic\n\
    \                                 1: only score and end_pos\n                \
    \                 2: also start_pos and cov\n                                \
    \ 3: also seq.id\n                                 4: only ungapped alignment\n\
    \                                 5: score only (output) cluster format [0]\n\
    \ --wrapped-scoring BOOL          Double the (nucleotide) query sequence during\
    \ the scoring process to allow wrapped diagonal scoring around end and start [0]\n\
    \ -e DOUBLE                       List matches below this E-value (range 0.0-inf)\
    \ [1.000E-03]\n --min-seq-id FLOAT              List matches above this sequence\
    \ identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT      \
    \         Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT \
    \              0: alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali\
    \ INT                   Show up to this many alternative alignments [0]\n -c FLOAT\
    \                        List matches above this fraction of aligned (covered)\
    \ residues (see --cov-mode) [0.800]\n --cov-mode INT                  0: coverage\
    \ of query and target\n                                 1: coverage of target\n\
    \                                 2: coverage of query\n                     \
    \            3: target seq. length has to be at least x% of query length\n   \
    \                              4: query seq. length has to be at least x% of target\
    \ length\n                                 5: short seq. needs to be at least\
    \ x% of the other seq. length [0]\n --max-rejected INT              Maximum rejected\
    \ alignments before alignment calculation for a query is stopped [2147483647]\n\
    \ --max-accept INT                Maximum accepted alignments before alignment\
    \ calculation for a query is stopped [2147483647]\n --score-bias FLOAT       \
    \       Score bias when computing SW alignment (in bits) [0.000]\n --realign BOOL\
    \                  Compute more conservative, shorter alignments (scores and E-values\
    \ not changed) [0]\n --realign-score-bias FLOAT      Additional bias when computing\
    \ realignment [-0.200]\n --realign-max-seqs INT          Maximum number of results\
    \ to return in realignment [2147483647]\n --gap-open TWIN                 Gap\
    \ open cost [nucl:5,aa:11]\n --gap-extend TWIN               Gap extension cost\
    \ [nucl:2,aa:1]\n --zdrop INT                     Maximal allowed difference between\
    \ score values before alignment is truncated  (nucleotide alignment only) [40]\n\
    clust:                         \n --cluster-mode INT              0: Set-Cover\
    \ (greedy)\n                                 1: Connected component (BLASTclust)\n\
    \                                 2,3: Greedy clustering by sequence length (CDHIT)\
    \ [0]\n --max-iterations INT            Maximum depth of breadth first search\
    \ in connected component clustering [1000]\n --similarity-type INT           Type\
    \ of score used for clustering. 1: alignment score 2: sequence identity [2]\n\
    kmermatcher:                   \n --kmer-per-seq INT              k-mers per sequence\
    \ [21]\n --kmer-per-seq-scale TWIN       Scale k-mer per sequence based on sequence\
    \ length as kmer-per-seq val + scale x seqlen [nucl:0.200,aa:0.000]\n --adjust-kmer-len\
    \ BOOL          Adjust k-mer length based on specificity (only for nucleotides)\
    \ [0]\n --hash-shift INT                Shift k-mer hash initialization [67]\n\
    \ --include-only-extendable BOOL  Include only extendable [0]\n --ignore-multi-kmer\
    \ BOOL        Skip k-mers occurring multiple times (>=2) [0]\nprofile:       \
    \                \n --pca FLOAT                     Pseudo count admixture strength\
    \ [1.000]\n --pcb FLOAT                     Pseudo counts: Neff at half of maximum\
    \ admixture (range 0.0-inf) [1.500]\nmisc:                          \n --rescore-mode\
    \ INT              Rescore diagonals with:\n                                 0:\
    \ Hamming distance\n                                 1: local alignment (score\
    \ only)\n                                 2: local alignment\n               \
    \                  3: global alignment\n                                 4: longest\
    \ alignment fulfilling window quality criterion [0]\n --dbtype INT           \
    \         Database type 0: auto, 1: amino acid 2: nucleotides [0]\n --shuffle\
    \ BOOL                  Shuffle input database [1]\n --createdb-mode INT     \
    \        Createdb mode 0: copy data, 1: soft link data and write new index (works\
    \ only with single line fasta/q) [1]\n --id-offset INT                 Numeric\
    \ ids in index file are offset by this value [0]\ncommon:                    \
    \    \n --threads INT                   Number of CPU-cores used (all by default)\
    \ [2]\n --compressed INT                Write compressed output [0]\n -v INT \
    \                         Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --sub-mat TWIN                  Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT               Maximum sequence length [65535]\n --db-load-mode\
    \ INT              Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
    \ [0]\n --remove-tmp-files BOOL         Delete temporary files [1]\n --force-reuse\
    \ BOOL              Reuse tmp filse in tmp/latest folder ignoring parameters and\
    \ version changes [0]\n --mpi-runner STR                Use MPI on compute cluster\
    \ with this MPI command (e.g. \"mpirun -np 42\") []\nexpert:                 \
    \       \n --filter-hits BOOL              Filter hits by seq.id. and coverage\
    \ [0]\n --sort-results INT              Sort results: 0: no sorting, 1: sort by\
    \ E-value (Alignment) or seq.id. (Hamming) [0]\n --write-lookup INT          \
    \    write .lookup file containing mapping from internal id, fasta id and file\
    \ number [0]\n\nexamples:\n mmseqs easy-linclust examples/DB.fasta result tmp\n\
    \ \n # Linclust output\n #  - result_rep_seq.fasta: Representatives\n #  - result_all_seq.fasta:\
    \ FASTA-like per cluster\n #  - result_cluster.tsv:   Adjecency list\n \n # Important\
    \ parameter: --min-seq-id, --cov-mode and -c \n #                  --cov-mode\
    \ \n #                  0    1    2\n # Q: MAVGTACRPA  60%  IGN  60%\n # T: -AVGTAC---\
    \  60% 100%  IGN\n #        -c 0.7    -    +    -\n #        -c 0.6    +    +\
    \    +\n \n # Cluster nucleotide sequences \n mmseqs easy-linclust examples/DB.fasta\
    \ result tmp --kmer-per-seq-scale 0.3\n \nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n - Steinegger\
    \ M, Soding J: Clustering huge protein sequence sets in linear time. Nature Communications,\
    \ 9(1), 2542 (2018)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - concatdbs
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --preserve-keys
    description: The keys of the two DB should be distinct, and they will be preserved
      in the concatenation [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --take-larger-entry
    description: Only keep the larger entry (dataSize >) in the concatenation, both
      databases need the same keys in the index [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs concatdbs <i:DB> <i:DB> <o:DB> [options]\n By Clovis Galiez,\
    \ Eli Levy Karin & Martin Steinegger (martin.steinegger@snu.ac.kr)\noptions: misc:\
    \                    \n --preserve-keys BOOL      The keys of the two DB should\
    \ be distinct, and they will be preserved in the concatenation [0]\n --take-larger-entry\
    \ BOOL  Only keep the larger entry (dataSize >) in the concatenation, both databases\
    \ need the same keys in the index [0]\ncommon:                  \n --compressed\
    \ INT          Write compressed output [0]\n --threads INT             Number\
    \ of CPU-cores used (all by default) [1]\n -v INT                    Verbosity\
    \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nexamples:\n # Download\
    \ two sequences databases and concat them\n mmseqs databases PDB pdbDB tmp\n mmseqs\
    \ UniProtKB/Swiss-Prot swissprotDB tmp\n # Works only single threaded since seq.\
    \ and header DB need the same ordering\n mmseqs concatdbs pdbDB swissprotDB pdbAndSwissprotDB\
    \ --threads 1\n mmseqs concatdbs pdbDB_h swissprotDB_h pdbAndSwissprotDB_h --threads\
    \ 1\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - createindex
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --seed-sub-mat
    description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - -k
    description: 'k-mer length (0: automatically set to optimum) [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --alph-size
    description: Alphabet size (range 2-21) [nucl:5,aa:21]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seqs
    description: Maximum results per query sequence allowed to pass the prefilter
      (affects sensitivity) [300]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask
    description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1:
      with low complexity masking [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --mask-lower-case
    description: 'Lowercase letters will be excluded from k-mer search 0: include
      region, 1: exclude region [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-mode
    description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --spaced-kmer-pattern
    description: User-specified spaced k-mer pattern []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - -s
    description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [7.500]'
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --k-score
    description: k-mer threshold for generating similar k-mer lists [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split
    description: 'Split input into N equally distributed chunks. 0: set the best split
      automatically [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --split-memory-limit
    description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
      all available system memory [0]
    args: !SimpleFlagArg
      name: BYTE
  - !Flag
    optional: true
    synonyms:
    - --check-compatible
    description: '0: Always recreate index, 1: Check if recreating index is needed,
      2: Fail if index is incompatible [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --search-type
    description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
      4: translated nucleotide alignment [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --min-length
    description: Minimum codon number in open reading frames [30]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-length
    description: Maximum codon number in open reading frames [32734]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-gaps
    description: Maximum number of codons with gaps or unknown residues before an
      open reading frame is rejected [2147483647]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-start-mode
    description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --contig-end-mode
    description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --orf-start-mode
    description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
      2: from last encountered start to stop (no start in the middle) [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --forward-frames
    description: Comma-separated list of frames on the forward strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --reverse-frames
    description: Comma-separated list of frames on the reverse strand to be extracted
      [1,2,3]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --translation-table
    description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)\
      \ MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL,\
      \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)\
      \ ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
      \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)\
      \ KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --translate
    description: Translate ORF to amino acid [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --use-all-table-starts
    description: Use all alternatives for a start codon in the genetic table, if false
      - only ATG (AUG) [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --id-offset
    description: Numeric ids in index file are offset by this value [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --add-orf-stop
    description: Add stop codon '*' at complete start and end [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --sequence-overlap
    description: Overlap between sequences [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sequence-split-mode
    description: 'Sequence split mode 0: copy data, 1: soft link data and write new
      index, [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --headers-split-mode
    description: 'Header split mode: 0: split position, 1: original header [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --remove-tmp-files
    description: Delete temporary files [0]
    args: !SimpleFlagArg
      name: BOOL
  - !Flag
    optional: true
    synonyms:
    - --create-lookup
    description: Create database lookup file (can be very large) [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --strand
    description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
      2: both [1]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs createindex <i:sequenceDB> <tmpDir> [options]\n By Martin\
    \ Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:              \
    \    \n --seed-sub-mat TWIN          Substitution matrix file for k-mer generation\
    \ [nucl:nucleotide.out,aa:VTML80.out]\n -k INT                       k-mer length\
    \ (0: automatically set to optimum) [0]\n --alph-size TWIN             Alphabet\
    \ size (range 2-21) [nucl:5,aa:21]\n --comp-bias-corr INT         Correct for\
    \ locally biased amino acid composition (range 0-1) [1]\n --max-seqs INT     \
    \          Maximum results per query sequence allowed to pass the prefilter (affects\
    \ sensitivity) [300]\n --mask INT                   Mask sequences in k-mer stage:\
    \ 0: w/o low complexity masking, 1: with low complexity masking [1]\n --mask-lower-case\
    \ INT        Lowercase letters will be excluded from k-mer search 0: include region,\
    \ 1: exclude region [0]\n --spaced-kmer-mode INT       0: use consecutive positions\
    \ in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR    User-specified\
    \ spaced k-mer pattern []\n -s FLOAT                     Sensitivity: 1.0 faster;\
    \ 4.0 fast; 7.5 sensitive [7.500]\n --k-score INT                k-mer threshold\
    \ for generating similar k-mer lists [0]\n --split INT                  Split\
    \ input into N equally distributed chunks. 0: set the best split automatically\
    \ [0]\n --split-memory-limit BYTE    Set max memory per split. E.g. 800B, 5K,\
    \ 10M, 1G. Default (0) to all available system memory [0]\nmisc:             \
    \          \n --check-compatible INT       0: Always recreate index, 1: Check\
    \ if recreating index is needed, 2: Fail if index is incompatible [0]\n --search-type\
    \ INT            Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
    \ 4: translated nucleotide alignment [0]\n --min-length INT             Minimum\
    \ codon number in open reading frames [30]\n --max-length INT             Maximum\
    \ codon number in open reading frames [32734]\n --max-gaps INT               Maximum\
    \ number of codons with gaps or unknown residues before an open reading frame\
    \ is rejected [2147483647]\n --contig-start-mode INT      Contig start can be\
    \ 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode INT        Contig\
    \ end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode INT  \
    \       Orf fragment can be 0: from start to stop, 1: from any to stop, 2: from\
    \ last encountered start to stop (no start in the middle) [1]\n --forward-frames\
    \ STR         Comma-separated list of frames on the forward strand to be extracted\
    \ [1,2,3]\n --reverse-frames STR         Comma-separated list of frames on the\
    \ reverse strand to be extracted [1,2,3]\n --translation-table INT      1) CANONICAL,\
    \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
    \ 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
    \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n               \
    \               23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n   \
    \                            29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
    \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
    \ BOOL  Use all alternatives for a start codon in the genetic table, if false\
    \ - only ATG (AUG) [0]\n --id-offset INT              Numeric ids in index file\
    \ are offset by this value [0]\n --add-orf-stop BOOL          Add stop codon '*'\
    \ at complete start and end [0]\n --sequence-overlap INT       Overlap between\
    \ sequences [0]\n --sequence-split-mode INT    Sequence split mode 0: copy data,\
    \ 1: soft link data and write new index, [1]\n --headers-split-mode INT     Header\
    \ split mode: 0: split position, 1: original header [0]\ncommon:             \
    \        \n --max-seq-len INT            Maximum sequence length [65535]\n -v\
    \ INT                       Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n --threads INT                Number of CPU-cores used (all by\
    \ default) [2]\n --compressed INT             Write compressed output [0]\n --remove-tmp-files\
    \ BOOL      Delete temporary files [0]\nexpert:                     \n --create-lookup\
    \ INT          Create database lookup file (can be very large) [0]\n --strand\
    \ INT                 Strand selection only works for DNA/DNA search 0: reverse,\
    \ 1: forward, 2: both [1]\n\nexamples:\n # Create protein sequence index\n mmseqs\
    \ createindex sequenceDB tmp\n \n # Create TBLASTX/N index from nucleotide sequences\n\
    \ mmseqs createindex sequenceDB tmp --search-type 2\n \n # Create BLASTN index\
    \ from nucleotide sequences\n mmseqs createindex sequenceDB tmp --search-type\
    \ 3\n \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n - Mirdita M, Steinegger M, Soding J: MMseqs2 desktop\
    \ and local web server app for fast, interactive sequence searches. Bioinformatics,\
    \ 35(16), 2856–2858 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - masksequence
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs masksequence <i:sequenceDB> <o:sequenceDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: common:       \
    \    \n --threads INT      Number of CPU-cores used (all by default) [2]\n --compressed\
    \ INT   Write compressed output [0]\n -v INT             Verbosity level: 0: quiet,\
    \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding\
    \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of\
    \ massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - aggregatetaxweights
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --majority
    description: minimal fraction of agreement among taxonomically assigned sequences
      of a set [0.500]
    args: !SimpleFlagArg
      name: FLOAT
  - !Flag
    optional: true
    synonyms:
    - --vote-mode
    description: 'Mode of assigning weights to compute majority. 0: uniform, 1: minus
      log E-value, 2: score [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs aggregatetaxweights <i:taxSeqDB> <i:setToSeqMap> <i:taxResPerSeqDB>\
    \ <i:taxAlnResPerSeqDB> <o:taxResPerSetDB> [options]\n By Eli Levy Karin <eli.levy.karin@gmail.com>\n\
    options: misc:              \n --majority FLOAT    minimal fraction of agreement\
    \ among taxonomically assigned sequences of a set [0.500]\n --vote-mode INT  \
    \   Mode of assigning weights to compute majority. 0: uniform, 1: minus log E-value,\
    \ 2: score [1]\n --lca-ranks STR     Add column with specified ranks (',' separated)\
    \ []\n --tax-lineage INT   0: don't show, 1: add all lineage names, 2: add all\
    \ lineage taxids [0]\ncommon:            \n --compressed INT    Write compressed\
    \ output [0]\n --threads INT       Number of CPU-cores used (all by default) [2]\n\
    \ -v INT              Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nexamples:\n # Download a sequence database with taxonomy information\n\
    \ mmseqs databases UniProtKB/Swiss-Prot swissprotDB tmp\n \n # Create a nucleotide\
    \ sequence database from FASTA\n mmseqs createdb contigs.fasta contigsDb\n \n\
    \ # Extract all orfs from each contig and translate them\n mmseqs extractorfs\
    \ contigsDb orfsAaDb --translate\n \n # Assign taxonomy to each orf\n mmseqs taxonomy\
    \ orfsAaDb swissprotDB taxPerOrf tmp --tax-output-mode 2\n \n # Aggregate taxonomic\
    \ assignments on each contig\n mmseqs aggregatetaxweights swissprotDB orfsAaDb_h\
    \ taxPerOrf taxPerOrf_aln taxPerContig --majority 0.5\n \n \nreferences:\n - Mirdita\
    \ M, Steinegger M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive taxonomic\
    \ assignment to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - profile2consensus
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs profile2consensus <i:profileDB> <o:sequenceDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: common:            \n --sub-mat\
    \ TWIN      Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
    \ INT   Maximum sequence length [65535]\n --threads INT       Number of CPU-cores\
    \ used (all by default) [2]\n --compressed INT    Write compressed output [0]\n\
    \ -v INT              Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - renamedbkeys
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --subdb-mode
    description: 'Subdb mode 0: copy data 1: soft link data and write index [0]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs renamedbkeys <i:idMapFile|stdin> <i:DB> <o:DB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: misc:             \n --subdb-mode\
    \ INT   Subdb mode 0: copy data 1: soft link data and write index [0]\ncommon:\
    \           \n --threads INT      Number of CPU-cores used (all by default) [2]\n\
    \ -v INT             Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info\
    \ [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - convertkb
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --mapping-file
    description: Specify a file that translates the keys of a DB to new keys, TSV
      format []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --kb-columns
    description: list of indices of UniprotKB columns to be extracted [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs convertkb <i:uniprotkb.dat[.gz]> ... <i:uniprotkb.dat[.gz]>\
    \ <o:uniprotkbDB> [options]\n By Milot Mirdita <milot@mirdita.de>\noptions: misc:\
    \               \n --mapping-file STR   Specify a file that translates the keys\
    \ of a DB to new keys, TSV format []\n --kb-columns STR     list of indices of\
    \ UniprotKB columns to be extracted [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\n\
    common:             \n --compressed INT     Write compressed output [0]\n -v INT\
    \               Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info\
    \ [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein\
    \ sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - addtaxonomy
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --tax-lineage
    description: "0: don't show, 1: add all lineage names, 2: add all lineage taxids\
      \ [0]"
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --lca-ranks
    description: Add column with specified ranks (',' separated) []
    args: !SimpleFlagArg
      name: STR
  - !Flag
    optional: true
    synonyms:
    - --pick-id-from
    description: Query 1, Target 2 [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs addtaxonomy <i:targetDB> <i:resultDB> <o:resultDB> [options]\n\
    \ By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: misc:         \
    \      \n --tax-lineage INT    0: don't show, 1: add all lineage names, 2: add\
    \ all lineage taxids [0]\n --lca-ranks STR      Add column with specified ranks\
    \ (',' separated) []\n --pick-id-from INT   Query 1, Target 2 [2]\ncommon:   \
    \          \n --compressed INT     Write compressed output [0]\n --threads INT\
    \        Number of CPU-cores used (all by default) [2]\n -v INT              \
    \ Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
    \ - Mirdita M, Steinegger M, Breitwieser F, Soding J, Levy Karin E: Fast and sensitive\
    \ taxonomic assignment to metagenomic contigs. bioRxiv, 2020.11.27.401018 (2020)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - compress
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs compress <i:DB> <o:DB> [options]\n By Milot Mirdita <milot@mirdita.de>\n\
    options: common:        \n --threads INT   Number of CPU-cores used (all by default)\
    \ [2]\n -v INT          Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
    \ +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - convertmsa
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --identifier-field
    description: 'Field from STOCKHOLM comments for choosing the MSA identifier: 0:
      ID, 1: AC. If the respective comment does not exist, the name of the first sequence
      will become the identifier [1]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs convertmsa <i:msaFile.sto[.gz]> <o:msaDB> [options]\n\
    \ By Milot Mirdita <milot@mirdita.de>\noptions: common:                 \n --identifier-field\
    \ INT   Field from STOCKHOLM comments for choosing the MSA identifier: 0: ID,\
    \ 1: AC. If the respective comment does not exist, the name of the first sequence\
    \ will become the identifier [1]\n --compressed INT         Write compressed output\
    \ [0]\n -v INT                   Verbosity level: 0: quiet, 1: +errors, 2: +warnings,\
    \ 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive\
    \ protein sequence searching for the analysis of massive data sets. Nature Biotechnology,\
    \ 35(11), 1026-1028 (2017)\n - Mirdita M, Steinegger M, Soding J: MMseqs2 desktop\
    \ and local web server app for fast, interactive sequence searches. Bioinformatics,\
    \ 35(16), 2856–2858 (2019)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - decompress
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs decompress <i:DB> <o:DB> [options]\n By Milot Mirdita\
    \ <milot@mirdita.de>\noptions: common:        \n --threads INT   Number of CPU-cores\
    \ used (all by default) [2]\n -v INT          Verbosity level: 0: quiet, 1: +errors,\
    \ 2: +warnings, 3: +info [3]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2\
    \ enables sensitive protein sequence searching for the analysis of massive data\
    \ sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
- !Command
  command:
  - mmseqs
  - profile2pssm
  positional: []
  named:
  - !Flag
    optional: true
    synonyms:
    - --comp-bias-corr
    description: Correct for locally biased amino acid composition (range 0-1) [1]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --sub-mat
    description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
    args: !SimpleFlagArg
      name: TWIN
  - !Flag
    optional: true
    synonyms:
    - --max-seq-len
    description: Maximum sequence length [65535]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --threads
    description: Number of CPU-cores used (all by default) [2]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --compressed
    description: Write compressed output [0]
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - -v
    description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
    args: !SimpleFlagArg
      name: INT
  - !Flag
    optional: true
    synonyms:
    - --db-output
    description: Return a result DB instead of a text file [0]
    args: !SimpleFlagArg
      name: BOOL
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: mmseqs profile2pssm <i:profileDB> <o:pssmFile> [options]\n By\
    \ Milot Mirdita <milot@mirdita.de>\noptions: prefilter:            \n --comp-bias-corr\
    \ INT   Correct for locally biased amino acid composition (range 0-1) [1]\ncommon:\
    \               \n --sub-mat TWIN         Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
    \ --max-seq-len INT      Maximum sequence length [65535]\n --threads INT     \
    \     Number of CPU-cores used (all by default) [2]\n --compressed INT       Write\
    \ compressed output [0]\n -v INT                 Verbosity level: 0: quiet, 1:\
    \ +errors, 2: +warnings, 3: +info [3]\nexpert:               \n --db-output BOOL\
    \       Return a result DB instead of a text file [0]\n\nreferences:\n - Steinegger\
    \ M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
    \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
  generated_using: *id002
  docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "MMseqs2 (Many against Many sequence searching) is an open-source software\
  \ suite for very fast, \nparallelized protein sequence searches and clustering of\
  \ huge protein sequence data sets.\n\nPlease cite: M. Steinegger and J. Soding.\
  \ MMseqs2 enables sensitive protein sequence searching for the analysis of massive\
  \ data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017).\n\nMMseqs2 Version:\
  \ 13.45111\n© Martin Steinegger (martin.steinegger@snu.ac.kr)\n\nusage: mmseqs <command>\
  \ [<args>]\n\nEasy workflows for plain text input/output\n  easy-search       \t\
  Sensitive homology search\n  easy-linsearch    \tFast, less sensitive homology search\n\
  \  easy-cluster      \tSlower, sensitive clustering\n  easy-linclust     \tFast\
  \ linear time cluster, less sensitive clustering\n  easy-taxonomy     \tTaxonomic\
  \ classification\n  easy-rbh          \tFind reciprocal best hit\n\nMain workflows\
  \ for database input/output\n  search            \tSensitive homology search\n \
  \ linsearch         \tFast, less sensitive homology search\n  map              \
  \ \tMap nearly identical sequences\n  rbh               \tReciprocal best hit search\n\
  \  linclust          \tFast, less sensitive clustering\n  cluster           \tSlower,\
  \ sensitive clustering\n  clusterupdate     \tUpdate previous clustering with new\
  \ sequences\n  taxonomy          \tTaxonomic classification\n\nInput database creation\n\
  \  databases         \tList and download databases\n  createdb          \tConvert\
  \ FASTA/Q file(s) to a sequence DB\n  createindex       \tStore precomputed index\
  \ on disk to reduce search overhead\n  createlinindex    \tCreate linsearch index\n\
  \  convertmsa        \tConvert Stockholm/PFAM MSA file to a MSA DB\n  tsv2db   \
  \         \tConvert a TSV file to any DB\n  tar2db            \tConvert content\
  \ of tar archives to any DB\n  msa2profile       \tConvert a MSA DB to a profile\
  \ DB\n\nHandle databases on storage and memory\n  compress          \tCompress DB\
  \ entries\n  decompress        \tDecompress DB entries\n  rmdb              \tRemove\
  \ a DB\n  mvdb              \tMove a DB\n  cpdb              \tCopy a DB\n  lndb\
  \              \tSymlink a DB\n  unpackdb          \tUnpack a DB into separate files\n\
  \  touchdb           \tPreload DB into memory (page cache)\n\nUnite and intersect\
  \ databases\n  createsubdb       \tCreate a subset of a DB from list of DB keys\n\
  \  concatdbs         \tConcatenate two DBs, giving new IDs to entries from 2nd DB\n\
  \  splitdb           \tSplit DB into subsets\n  mergedbs          \tMerge entries\
  \ from multiple DBs\n  subtractdbs       \tRemove all entries from first DB occurring\
  \ in second DB by key\n\nFormat conversion for downstream processing\n  convertalis\
  \       \tConvert alignment DB to BLAST-tab, SAM or custom format\n  createtsv \
  \        \tConvert result DB to tab-separated flat file\n  convert2fasta     \t\
  Convert sequence DB to FASTA format\n  result2flat       \tCreate flat file by adding\
  \ FASTA headers to DB entries\n  createseqfiledb   \tCreate a DB of unaligned FASTA\
  \ entries\n  taxonomyreport    \tCreate a taxonomy report in Kraken or Krona format\n\
  \nSequence manipulation/transformation\n  extractorfs       \tSix-frame extraction\
  \ of open reading frames\n  extractframes     \tExtract frames from a nucleotide\
  \ sequence DB\n  orftocontig       \tWrite ORF locations in alignment format\n \
  \ reverseseq        \tReverse (without complement) sequences\n  translatenucs  \
  \   \tTranslate nucleotides to proteins\n  translateaa       \tTranslate proteins\
  \ to lexicographically lowest codons\n  splitsequence     \tSplit sequences by length\n\
  \  masksequence      \tSoft mask sequence DB using tantan\n  extractalignedregion\t\
  Extract aligned sequence region from query\n\nResult manipulation \n  swapresults\
  \       \tTranspose prefilter/alignment DB\n  result2rbh        \tFilter a merged\
  \ result DB to retain only reciprocal best hits\n  result2msa        \tCompute MSA\
  \ DB from a result DB\n  result2dnamsa     \tCompute MSA DB with out insertions\
  \ in the query for DNA sequences\n  result2stats      \tCompute statistics for each\
  \ entry in a DB\n  filterresult      \tPairwise alignment result filter\n  offsetalignment\
  \   \tOffset alignment by ORF start position\n  proteinaln2nucl   \tTransform protein\
  \ alignments to nucleotide alignments\n  result2repseq     \tGet representative\
  \ sequences from result DB\n  sortresult        \tSort a result DB in the same order\
  \ as the prefilter or align module\n  summarizealis     \tSummarize alignment result\
  \ to one row (uniq. cov., cov., avg. seq. id.)\n  summarizeresult   \tExtract annotations\
  \ from alignment DB\n\nTaxonomy assignment \n  createtaxdb       \tAdd taxonomic\
  \ labels to sequence DB\n  createbintaxonomy \tCreate binary taxonomy from NCBI\
  \ input\n  addtaxonomy       \tAdd taxonomic labels to result DB\n  taxonomyreport\
  \    \tCreate a taxonomy report in Kraken or Krona format\n  filtertaxdb       \t\
  Filter taxonomy result database\n  filtertaxseqdb    \tFilter taxonomy sequence\
  \ database\n  aggregatetax      \tAggregate multiple taxon labels to a single label\n\
  \  aggregatetaxweights\tAggregate multiple taxon labels to a single label\n  lcaalign\
  \          \tEfficient gapped alignment for lca computation\n  lca             \
  \  \tCompute the lowest common ancestor\n  majoritylca       \tCompute the lowest\
  \ common ancestor using majority voting\n\nMulti-hit search    \n  multihitdb  \
  \      \tCreate sequence DB for multi hit searches\n  multihitsearch    \tSearch\
  \ with a grouped set of sequences against another grouped set\n  besthitperset \
  \    \tFor each set of sequences compute the best element and update p-value\n \
  \ combinepvalperset \tFor each set compute the combined p-value\n  mergeresultsbyset\
  \ \tMerge results from multiple ORFs back to their respective contig\n\nPrefiltering\
  \        \n  prefilter         \tDouble consecutive diagonal k-mer search\n  ungappedprefilter\
  \ \tOptimal diagonal score search\n  kmermatcher       \tFind bottom-m-hashed k-mer\
  \ matches within sequence DB\n  kmersearch        \tFind bottom-m-hashed k-mer matches\
  \ between target and query DB\n\nAlignment           \n  align             \tOptimal\
  \ gapped local alignment\n  alignall          \tWithin-result all-vs-all gapped\
  \ local alignment\n  transitivealign   \tTransfer alignments via transitivity\n\
  \  rescorediagonal   \tCompute sequence identity for diagonal\n  alignbykmer   \
  \    \tHeuristic gapped local k-mer based alignment\n\nClustering          \n  clust\
  \             \tCluster result by Set-Cover/Connected-Component/Greedy-Incremental\n\
  \  clusthash         \tHash-based clustering of equal length sequences\n  mergeclusters\
  \     \tMerge multiple cascaded clustering steps\n\nProfile databases   \n  result2profile\
  \    \tCompute profile DB from a result DB\n  msa2result        \tConvert a MSA\
  \ DB to a profile DB\n  msa2profile       \tConvert a MSA DB to a profile DB\n \
  \ profile2pssm      \tConvert a profile DB to a tab-separated PSSM file\n  profile2consensus\
  \ \tExtract consensus sequence DB from a profile DB\n  profile2repseq    \tExtract\
  \ representative sequence DB from a profile DB\n  convertprofiledb  \tConvert a\
  \ HH-suite HHM DB to a profile DB\n\nProfile-profile databases\n  enrich       \
  \     \tBoost diversity of search result\n  result2pp         \tMerge two profile\
  \ DBs by shared hits\n  profile2cs        \tConvert a profile DB into a column state\
  \ sequence DB\n  convertca3m       \tConvert a cA3M DB to a result DB\n  expandaln\
  \         \tExpand an alignment result based on another\n  expand2profile    \t\
  Expand an alignment result based on another and create a profile\n\nUtility modules\
  \ to manipulate DBs\n  view              \tPrint DB entries given in --id-list to\
  \ stdout\n  apply             \tExecute given program on each DB entry\n  filterdb\
  \          \tDB filtering by given conditions\n  swapdb            \tTranspose DB\
  \ with integer values in first column\n  prefixid          \tFor each entry in a\
  \ DB prepend the entry key to the entry itself\n  suffixid          \tFor each entry\
  \ in a DB append the entry key to the entry itself\n  renamedbkeys      \tCreate\
  \ a new DB with original keys renamed\n\nSpecial-purpose utilities\n  diffseqdbs\
  \        \tCompute diff of two sequence DBs\n  summarizetabs     \tExtract annotations\
  \ from HHblits BLAST-tab-formatted results\n  gff2db            \tExtract regions\
  \ from a sequence database based on a GFF3 file\n  maskbygff         \tMask out\
  \ sequence regions in a sequence DB by features selected from a GFF3 file\n  convertkb\
  \         \tConvert UniProtKB data to a DB\n  summarizeheaders  \tSummarize FASTA\
  \ headers of result DB\n  nrtotaxmapping    \tCreate taxonomy mapping for NR database\n\
  \  extractdomains    \tExtract highest scoring alignment regions for each sequence\
  \ from BLAST-tab file\n  countkmer         \tCount k-mers\n\nBash completion for\
  \ modules and parameters can be installed by adding \"source MMSEQS_HOME/util/bash-completion.sh\"\
  \ to your \"$HOME/.bash_profile\".\nInclude the location of the MMseqs2 binary in\
  \ your \"$PATH\" environment variable.\n"
generated_using: *id002
docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
