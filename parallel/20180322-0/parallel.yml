!Command
command:
- parallel
positional:
- !Positional
  description: ''
  position: 0
  name: command
  optional: true
- !Positional
  description: ''
  position: 1
  name: arguments
  optional: true
named:
- !Flag
  description: Run n jobs in parallel
  synonyms:
  - -j
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: Keep same order
  synonyms:
  - -k
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Multiple arguments with context replace
  synonyms:
  - -X
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Split input on regexp for positional replacements
  synonyms:
  - --colsep
  args: !SimpleFlagArg
    name: regexp
  optional: true
- !Flag
  description: 'Example: foo@server.example.com'
  synonyms:
  - -S
  args: !SimpleFlagArg
    name: sshlogin
  optional: true
- !Flag
  description: ..        Use ~/.parallel/sshloginfile as the list of sshlogins
  synonyms:
  - --slf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: .bar    Shorthand for --transfer --return {}.bar --cleanup
  synonyms:
  - --trc
  args: !ChoiceFlagArg
    choices: !!set {}
  optional: true
- !Flag
  description: Run the given command with argument on all sshlogins
  synonyms:
  - --onall
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Run the given command with no arguments on all sshlogins
  synonyms:
  - --nonall
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Split stdin (standard input) to multiple jobs.
  synonyms:
  - --pipe
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Record end separator for --pipe.
  synonyms:
  - --recend
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: Record start separator for --pipe.
  synonyms:
  - --recstart
  args: !SimpleFlagArg
    name: str
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage:\n\nparallel [options] [command [arguments]] < list_of_arguments\n\
  parallel [options] [command [arguments]] (::: arguments|:::: argfile(s))...\ncat\
  \ ... | parallel --pipe [options] [command [arguments]]\n\n-j n            Run n\
  \ jobs in parallel\n-k              Keep same order\n-X              Multiple arguments\
  \ with context replace\n--colsep regexp Split input on regexp for positional replacements\n\
  {} {.} {/} {/.} {#} {%} {= perl code =} Replacement strings\n{3} {3.} {3/} {3/.}\
  \ {=3 perl code =}    Positional replacement strings\nWith --plus:    {} = {+/}/{/}\
  \ = {.}.{+.} = {+/}/{/.}.{+.} = {..}.{+..} =\n                {+/}/{/..}.{+..} =\
  \ {...}.{+...} = {+/}/{/...}.{+...}\n\n-S sshlogin     Example: foo@server.example.com\n\
  --slf ..        Use ~/.parallel/sshloginfile as the list of sshlogins\n--trc {}.bar\
  \    Shorthand for --transfer --return {}.bar --cleanup\n--onall         Run the\
  \ given command with argument on all sshlogins\n--nonall        Run the given command\
  \ with no arguments on all sshlogins\n\n--pipe          Split stdin (standard input)\
  \ to multiple jobs.\n--recend str    Record end separator for --pipe.\n--recstart\
  \ str  Record start separator for --pipe.\n\nSee 'man parallel' for details\n\n\
  Academic tradition requires you to cite works you base your article on.\nIf you\
  \ use programs that use GNU Parallel to process data for an article in a\nscientific\
  \ publication, please cite:\n\n  O. Tange (2011): GNU Parallel - The Command-Line\
  \ Power Tool,\n  ;login: The USENIX Magazine, February 2011:42-47.\n\nThis helps\
  \ funding further development; AND IT WON'T COST YOU A CENT.\nIf you pay 10000 EUR\
  \ you should feel free to use GNU Parallel without citing.\n\n"
generated_using:
- --help
