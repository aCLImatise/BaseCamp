&id003 !Command
positional: []
named:
- !Flag
  description: Specify the path to the pipeline report JSON file.
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: REPORT_FILE
  optional: true
- !Flag
  description: Specify the URL to where the data should be broadcast
  synonyms:
  - -u
  - --url
  args: !SimpleFlagArg
    name: URL
  optional: true
- !Flag
  description: Specify the nextflow trace file. Only applicable in combination with
    --watch option.
  synonyms:
  - --trace-file
  args: !SimpleFlagArg
    name: TRACE_FILE
  optional: true
- !Flag
  description: Specify the nextflow log file. Only applicable in combination with
    --watch option.
  synonyms:
  - --log-file
  args: !SimpleFlagArg
    name: LOG_FILE
  optional: true
- !Flag
  description: Run the report in watch mode. This option will track the generation
    of reports during the execution of the pipeline, allowing for the visualization
    of the reports in real-time
  synonyms:
  - -w
  - --watch
  args: !EmptyFlagArg {}
  optional: true
command:
- flowcraft
- report
parent: &id001 !Command
  positional: []
  named:
  - !Flag
    description: Set log to debug mode
    synonyms:
    - --debug
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  command:
  - flowcraft
  parent:
  subcommands:
  - !Command
    positional: []
    named:
    - !Flag
      description: Space separated tasks of the pipeline
      synonyms:
      - -t
      - --tasks
      args: !SimpleFlagArg
        name: TASKS
      optional: true
    - !Flag
      description: Use one of the available recipes
      synonyms:
      - -r
      - --recipe
      args: !SimpleFlagArg
        name: RECIPE
      optional: true
    - !Flag
      description: Name of the pipeline file
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: OUTPUT_NF
      optional: true
    - !Flag
      description: Provide a name for your pipeline.
      synonyms:
      - -n
      args: !SimpleFlagArg
        name: PIPELINE_NAME
      optional: true
    - !Flag
      description: Merges identical parameters from multiple components into the same
        one. Otherwise, the parameters will be separated and unique to each component.
      synonyms:
      - --merge-params
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Write only the pipeline files and not the templates, bin, and lib
        folders.
      synonyms:
      - --pipeline-only
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Do not automatically add dependencies to the pipeline.
      synonyms:
      - -nd
      - --no-dependecy
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Check only the validity of the pipeline string and exit.
      synonyms:
      - -c
      - --check-pipeline
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Print a detailed description for all the currently available processes.
      synonyms:
      - -L
      - --component-list
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Print a short list of the currently available processes.
      synonyms:
      - -l
      - --component-list-short
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Print a short list of the currently available recipes.
      synonyms:
      - --recipe-list
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Print a condensed list of the currently available recipes
      synonyms:
      - --recipe-list-short
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Check tasks that the recipe contain and their flow. This option
        might be useful if a user wants to change some components of a given recipe,
        by using the -t option.
      synonyms:
      - -cr
      - --check-recipe
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Only export the parameters for the provided components (via -t
        option) in JSON format to stdout. No pipeline will be generated with this
        option.
      synonyms:
      - --export-params
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Only export the directives for the provided components (via -t
        option) in JSON format to stdout. No pipeline will be generated with this
        option.
      synonyms:
      - --export-directives
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Allows to fetch all docker tags for the components listed with
        the -t flag.
      synonyms:
      - -ft
      - --fetch-tags
      args: !EmptyFlagArg {}
      optional: true
    command:
    - flowcraft
    - build
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: flowcraft build [-h] [-t TASKS] [-r RECIPE] [-o OUTPUT_NF]\n\
      \                       [-n PIPELINE_NAME] [--merge-params] [--pipeline-only]\n\
      \                       [-nd] [-c]\n                       [-L | -l | --recipe-list\
      \ | --recipe-list-short] [-cr]\n                       [--export-params] [--export-directives]\
      \ [-ft]\n\noptional arguments:\n  -h, --help            show this help message\
      \ and exit\n  -t TASKS, --tasks TASKS\n                        Space separated\
      \ tasks of the pipeline\n  -r RECIPE, --recipe RECIPE\n                    \
      \    Use one of the available recipes\n  -o OUTPUT_NF          Name of the pipeline\
      \ file\n  -n PIPELINE_NAME      Provide a name for your pipeline.\n  --merge-params\
      \        Merges identical parameters from multiple components\n            \
      \            into the same one. Otherwise, the parameters will be\n        \
      \                separated and unique to each component.\n  --pipeline-only\
      \       Write only the pipeline files and not the templates,\n             \
      \           bin, and lib folders.\n  -nd, --no-dependecy   Do not automatically\
      \ add dependencies to the pipeline.\n  -c, --check-pipeline  Check only the\
      \ validity of the pipeline string and\n                        exit.\n  -L,\
      \ --component-list  Print a detailed description for all the currently\n   \
      \                     available processes.\n  -l, --component-list-short\n \
      \                       Print a short list of the currently available\n    \
      \                    processes.\n  --recipe-list         Print a short list\
      \ of the currently available recipes.\n  --recipe-list-short   Print a condensed\
      \ list of the currently available\n                        recipes\n  -cr, --check-recipe\
      \   Check tasks that the recipe contain and their flow.\n                  \
      \      This option might be useful if a user wants to change\n             \
      \           some components of a given recipe, by using the -t\n           \
      \             option.\n  --export-params       Only export the parameters for\
      \ the provided components\n                        (via -t option) in JSON format\
      \ to stdout. No pipeline\n                        will be generated with this\
      \ option.\n  --export-directives   Only export the directives for the provided\
      \ components\n                        (via -t option) in JSON format to stdout.\
      \ No pipeline\n                        will be generated with this option.\n\
      \  -ft, --fetch-tags     Allows to fetch all docker tags for the components\n\
      \                        listed with the -t flag.\n"
    generated_using: &id002
    - --help
  - !Command
    positional: []
    named:
    - !Flag
      description: Specify the nextflow trace file.
      synonyms:
      - -i
      args: !SimpleFlagArg
        name: TRACE_FILE
      optional: true
    - !Flag
      description: Set the refresh frequency for the continuous inspect functions
      synonyms:
      - -r
      args: !SimpleFlagArg
        name: REFRESH_RATE
      optional: true
    - !Flag
      description: Specify the inspection run mode.
      synonyms:
      - -m
      - --mode
      args: !ChoiceFlagArg
        choices: !!set
          ? overview
          ? broadcast
      optional: true
    - !Flag
      description: Specify the URL to where the data should be broadcast
      synonyms:
      - -u
      - --url
      args: !SimpleFlagArg
        name: URL
      optional: true
    - !Flag
      description: Pretty inspection mode that removes usual reporting processes.
      synonyms:
      - --pretty
      args: !EmptyFlagArg {}
      optional: true
    command:
    - flowcraft
    - inspect
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: flowcraft inspect [-h] [-i TRACE_FILE] [-r REFRESH_RATE]\n\
      \                         [-m {overview,broadcast}] [-u URL] [--pretty]\n\n\
      optional arguments:\n  -h, --help            show this help message and exit\n\
      \  -i TRACE_FILE         Specify the nextflow trace file.\n  -r REFRESH_RATE\
      \       Set the refresh frequency for the continuous inspect\n             \
      \           functions\n  -m {overview,broadcast}, --mode {overview,broadcast}\n\
      \                        Specify the inspection run mode.\n  -u URL, --url URL\
      \     Specify the URL to where the data should be broadcast\n  --pretty    \
      \          Pretty inspection mode that removes usual reporting\n           \
      \             processes.\n"
    generated_using: *id002
  - *id003
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show version and exit.
    synonyms:
    - -v
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: flowcraft [-h] [--debug] [-v] {build,inspect,report} ...\n\n\
    A Nextflow pipeline generator\n\npositional arguments:\n  {build,inspect,report}\n\
    \                        Select which mode to run\n    build               Build\
    \ a nextflow pipeline\n    inspect             Inspect the progress of a pipeline\
    \ execution\n    report              Broadcast the report of a pipeline\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --debug\
    \               Set log to debug mode\n  -v, --version         Show version and\
    \ exit.\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: flowcraft report [-h] [-i REPORT_FILE] [-u URL]\n             \
  \           [--trace-file TRACE_FILE] [--log-file LOG_FILE] [-w]\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  -i REPORT_FILE     \
  \   Specify the path to the pipeline report JSON file.\n  -u URL, --url URL    \
  \ Specify the URL to where the data should be broadcast\n  --trace-file TRACE_FILE\n\
  \                        Specify the nextflow trace file. Only applicable in\n \
  \                       combination with --watch option.\n  --log-file LOG_FILE\
  \   Specify the nextflow log file. Only applicable in\n                        combination\
  \ with --watch option.\n  -w, --watch           Run the report in watch mode. This\
  \ option will track\n                        the generation of reports during the\
  \ execution of the\n                        pipeline, allowing for the visualization\
  \ of the\n                        reports in real-time\n"
generated_using: *id002
