!Command
positional:
- !Positional
  description: ''
  position: 0
  name: file
  optional: false
named:
- !Flag
  description: '... Detect alignment formats only.'
  synonyms:
  - -A
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '... Detect sequence formats only.'
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '... Convert into format <fmt>.'
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: fmt
  optional: true
- !Flag
  description: '... Assume input format <fmt>.'
  synonyms:
  - -f
  args: !SimpleFlagArg
    name: fmt
  optional: true
- !Flag
  description: '... List all supported formats.'
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '... Count and report entries number.'
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '... Disable strict format checks.'
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '... Display version information and exit.'
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
command:
- squizz
parent:
subcommands: []
help_flag: !Flag
  description: '... Display help message and exit.'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "squizz: invalid option -- '-'\nusage: squizz [options] <file>\n\noptions:\n\
  \  -A       ... Detect alignment formats only.\n  -S       ... Detect sequence formats\
  \ only.\n  -c <fmt> ... Convert into format <fmt>.\n  -f <fmt> ... Assume input\
  \ format <fmt>.\n  -h       ... Display help message and exit.\n  -l       ... List\
  \ all supported formats.\n  -n       ... Count and report entries number.\n  -s\
  \       ... Disable strict format checks.\n  -v       ... Display version information\
  \ and exit.\n"
generated_using:
- --help
