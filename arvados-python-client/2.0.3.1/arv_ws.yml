!Command
positional: []
named:
- !Flag
  description: Filter events on object_uuid
  synonyms:
  - -u
  - --uuid
  args: !SimpleFlagArg
    name: UUID
  optional: true
- !Flag
  description: Arvados query filter to apply to log events (JSON encoded)
  synonyms:
  - -f
  - --filters
  args: !SimpleFlagArg
    name: FILTERS
  optional: true
- !Flag
  description: 'Arvados query filter to fetch log events created at or after this
    time. This will be server time in UTC. Allowed format: YYYY-MM-DD or YYYY-MM-DD
    hh:mm:ss'
  synonyms:
  - -s
  - --start-time
  args: !SimpleFlagArg
    name: START_TIME
  optional: true
- !Flag
  description: Start from given log id.
  synonyms:
  - -i
  - --id
  args: !SimpleFlagArg
    name: ID
  optional: true
- !Flag
  description: If websockets is not available, specify the polling interval, default
    is every 15 seconds
  synonyms:
  - --poll-interval
  args: !SimpleFlagArg
    name: POLL_INTERVAL
  optional: true
- !Flag
  description: Do not poll if websockets are not available, just fail
  synonyms:
  - --no-poll
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Supply pipeline uuid, print log output from pipeline and its jobs
  synonyms:
  - -p
  - --pipeline
  args: !SimpleFlagArg
    name: PIPELINE
  optional: true
- !Flag
  description: Supply job uuid, print log output from jobs
  synonyms:
  - -j
  - --job
  args: !SimpleFlagArg
    name: JOB
  optional: true
command:
- arv-ws
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: arv-ws [-h] [--version] [-u UUID] [-f FILTERS] [-s START_TIME]\
  \ [-i ID]\n              [--poll-interval POLL_INTERVAL | --no-poll]\n         \
  \     [-p PIPELINE | -j JOB]\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  --version             Print version and exit.\n\
  \  -u UUID, --uuid UUID  Filter events on object_uuid\n  -f FILTERS, --filters FILTERS\n\
  \                        Arvados query filter to apply to log events (JSON\n   \
  \                     encoded)\n  -s START_TIME, --start-time START_TIME\n     \
  \                   Arvados query filter to fetch log events created at or\n   \
  \                     after this time. This will be server time in UTC.\n      \
  \                  Allowed format: YYYY-MM-DD or YYYY-MM-DD hh:mm:ss\n  -i ID, --id\
  \ ID        Start from given log id.\n  --poll-interval POLL_INTERVAL\n        \
  \                If websockets is not available, specify the polling\n         \
  \               interval, default is every 15 seconds\n  --no-poll             Do\
  \ not poll if websockets are not available, just fail\n  -p PIPELINE, --pipeline\
  \ PIPELINE\n                        Supply pipeline uuid, print log output from\
  \ pipeline\n                        and its jobs\n  -j JOB, --job JOB     Supply\
  \ job uuid, print log output from jobs\n"
generated_using:
- --help
