!Command
command:
- fprotpars
positional:
- !Positional
  description: '[-intreefile]        tree       Phylip tree file (optional)'
  position: 0
  name: alignments
  optional: false
- !Positional
  description: 'Additional (Optional) qualifiers (* if not always prompted):'
  position: 0
  name: file
  optional: false
named:
- !Flag
  description: properties Phylip weights file (optional)
  synonyms:
  - -weights
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "integer    [0] Species number to use as outgroup\n(Integer 0 or more)"
  synonyms:
  - -outgrno
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: toggle     [N] Use threshold parsimony
  synonyms:
  - -dothreshold
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "menu       [Universal] Use which genetic code (Values:\nU (Universal);\
    \ M (Mitochondrial); V\n(Vertebrate mitochondrial); F (Fly\nmitochondrial); Y\
    \ (Yeast mitochondrial))"
  synonyms:
  - -whichcode
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: boolean    [N] Print data at start of run
  synonyms:
  - -printdata
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: boolean    [N] Print steps at each site
  synonyms:
  - -stepbox
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: boolean    [N] Print sequences at all nodes of tree
  synonyms:
  - -ancseq
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "boolean    Report command line options and exit. More\ninformation\
    \ on associated and general\nqualifiers can be found with -help -verbose\n"
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Protein parsimony algorithm\nVersion: EMBOSS:6.5.7.0 PHYLIPNEW:3.69.650\n\
  \n   Standard (Mandatory) qualifiers:\n  [-sequence]          seqsetall  File containing\
  \ one or more sequence\n                                  alignments\n  [-intreefile]\
  \        tree       Phylip tree file (optional)\n  [-outfile]           outfile\
  \    [*.fprotpars] Phylip protpars program output\n                            \
  \      file\n\n   Additional (Optional) qualifiers (* if not always prompted):\n\
  \   -weights            properties Phylip weights file (optional)\n*  -njumble \
  \           integer    [0] Number of times to randomise (Integer 0\n           \
  \                       or more)\n*  -seed               integer    [1] Random number\
  \ seed between 1 and 32767\n                                  (must be odd) (Integer\
  \ from 1 to 32767)\n   -outgrno            integer    [0] Species number to use\
  \ as outgroup\n                                  (Integer 0 or more)\n   -dothreshold\
  \        toggle     [N] Use threshold parsimony\n*  -threshold          float  \
  \    [1] Threshold value (Number 1.000 or more)\n   -whichcode          menu   \
  \    [Universal] Use which genetic code (Values:\n                             \
  \     U (Universal); M (Mitochondrial); V\n                                  (Vertebrate\
  \ mitochondrial); F (Fly\n                                  mitochondrial); Y (Yeast\
  \ mitochondrial))\n   -[no]trout          toggle     [Y] Write out trees to tree\
  \ file\n*  -outtreefile        outfile    [*.fprotpars] Phylip tree output file\n\
  \                                  (optional)\n   -printdata          boolean  \
  \  [N] Print data at start of run\n   -[no]progress       boolean    [Y] Print indications\
  \ of progress of run\n   -[no]treeprint      boolean    [Y] Print out tree\n   -stepbox\
  \            boolean    [N] Print steps at each site\n   -ancseq             boolean\
  \    [N] Print sequences at all nodes of tree\n*  -[no]dotdiff        boolean  \
  \  [Y] Use dot differencing to display results\n\n   Advanced (Unprompted) qualifiers:\
  \ (none)\n   General qualifiers:\n   -help               boolean    Report command\
  \ line options and exit. More\n                                  information on\
  \ associated and general\n                                  qualifiers can be found\
  \ with -help -verbose\n\n"
generated_using:
- --help
