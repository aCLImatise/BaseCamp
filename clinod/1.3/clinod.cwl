class: CommandLineTool
id: ../../../../home/ubuntu/BiocondaCli/clinod.cwl
inputs:
- id: in
  doc: '- required, absolute path to the input file.  The input file expected to contain
    the list of  FASTA formatted sequences.  '
  type: string
  inputBinding:
    prefix: -in
- id: out
  doc: '- optional, by default the system prints the  output to the console. If the
    file exists it  will be overridden. The order of the predictions in the output
    is  guaranteed to be the same as the order of the  sequences in the input. This
    means that the  prediction for the tenth sequence from the input  will be the
    tenth prediction in the output,  unless -nonols parameter was used to suppress  reporting
    predictions with no NOLS detected     '
  type: string
  inputBinding:
    prefix: -out
- id: optional_defaults_medium
  doc: '- optional, defaults to MEDIUM. Possible values COMPLETE, FULL, MEDIUM, SHORT
    and MINIMAL (case sensitive) Where MINIMAL - contains the sequence name and the
    number of NOLS detected.   Where MINIMAL_TAB - same as MINIMAL but the  fields
    in the output are tab delimited and only  the first word of the sequence name
    is output.   SHORT - same as MINIMAL plus coordinates of  the NOLS  MEDIUM - same
    as SHORT plus NOLS reported  separately   MEDIUM_TAB - same as MEDIUM but the
    fields in  the output are tab delimited and only the first  word of the sequence
    name is output.   FULL - same as MEDIUM plus scores for each  position of the
    sequence. The scores are  reported for every window of size 20 in the full sequence,
    one score per line. The scores are  associate with the first residue of the window.  Windows
    with a score above 0.8 are predicted as  NoLSs.          COMPLETE - same as FULL
    plus the original  sequence                           '
  type: string
  inputBinding:
    prefix: -f
- id: optional_defaults_system
  doc: '- optional, defaults to the system temp directory (defined by the "java.io.tmpdir"
    environmental  variable) If the directory does not exist, it  will be created.
    However the parent directory  must exist. For example if working directory is  set
    to /home/tmp and home directory does not  exist then the execution will be terminated.  If
    the home directory exist but tmp directory  does not, the tmp directory will be
    created.  If the /home/tmp directory exist then it will  be used. If the /home/tmp
    directory is not  empty, then any files with the same name as  generated by the
    program will be overridden.    '
  type: string
  inputBinding:
    prefix: -d
- id: optional_defaults_number
  doc: '- optional, defaults to the number of cores  available on the computer. Maximum
    number of  threads cannot be greater than twice the number  of available cores.
    However, we have not  observed any significant gains from increasing  the number
    of threads beyond the number of CPU cores actually available on the computer. '
  type: string
  inputBinding:
    prefix: -t
- id: bm
  doc: '- optional, an absolute path to the Batchman  executable. By default this
    path is searched in  the environmental variable called BATCHMAN_PATH.  If it is
    not found there, then clinod attempts  to locate the batchman executable in the
    same  directory as the clinod jar file. In order to be  found there the batchman
    executable must be  called the "batchman.exe" on Windows systems and  the "batchman"
    on all other operating systems. If neither of those paths are valid then the  execution
    fails.   If several paths are valid then clinod uses them in the following order:   1)
    Path from the command line parameter 2) Path from the environmental variable 3)
    Local directory path '
  type: string
  inputBinding:
    prefix: -bm
- id: non_ols
  doc: '- optional, suppresses reporting of the proteins  with no NOLS detected if
    specified. '
  type: boolean
  inputBinding:
    prefix: -nonols
- id: clean_sequence
  doc: '- optional, if specified causes the predictor to  automatically remove all
    non-protein characters  from the sequences that contains them. The predictor only
    works with unambiguous  protein sequences. Only the following characters considered
    to be valid: ARNDCQEGHILKMFPSTWYV.  If any other character is detected in the  sequence
    the predictor stops the execution and  raises the exception unless this flag is  specified.
    In this case, the predictor removes  invalid characters from the sequence and
    writes the information about it into the log file. '
  type: boolean
  inputBinding:
    prefix: -clean_sequence
- id: jar
  doc: ''
  type: string
  inputBinding:
    prefix: -jar
- id: java
  doc: ''
  type: string
  inputBinding:
    position: 0
outputs: []
cwlVersion: v1.1
baseCommand:
- clinod
