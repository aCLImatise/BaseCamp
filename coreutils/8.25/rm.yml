!Command
positional:
- !Positional
  description: ''
  position: 0
  name: OPTION
  optional: true
named:
- !Flag
  description: ignore nonexistent files and arguments, never prompt
  synonyms:
  - -f
  - --force
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: prompt before every removal
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: prompt once before removing more than three files, or when removing
    recursively; less intrusive than -i, while still giving protection against most
    mistakes
  synonyms:
  - -I
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=WHEN]  prompt according to WHEN: never, once (-I), or always (-i);
    without WHEN, prompt always'
  synonyms:
  - --interactive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: when removing a hierarchy recursively, skip any directory that is on
    a file system different from that of the corresponding command line argument
  synonyms:
  - --one-file-system
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: do not treat '/' specially
  synonyms:
  - --no-preserve-root
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: do not remove '/' (default)
  synonyms:
  - --preserve-root
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: remove directories and their contents recursively
  synonyms:
  - -r
  - -R
  - --recursive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: remove empty directories
  synonyms:
  - -d
  - --dir
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: explain what is being done
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
command:
- rm
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: rm [OPTION]... [FILE]...\nRemove (unlink) the FILE(s).\n\n  -f,\
  \ --force           ignore nonexistent files and arguments, never prompt\n  -i \
  \                   prompt before every removal\n  -I                    prompt\
  \ once before removing more than three files, or\n                          when\
  \ removing recursively; less intrusive than -i,\n                          while\
  \ still giving protection against most mistakes\n      --interactive[=WHEN]  prompt\
  \ according to WHEN: never, once (-I), or\n                          always (-i);\
  \ without WHEN, prompt always\n      --one-file-system  when removing a hierarchy\
  \ recursively, skip any\n                          directory that is on a file system\
  \ different from\n                          that of the corresponding command line\
  \ argument\n      --no-preserve-root  do not treat '/' specially\n      --preserve-root\
  \   do not remove '/' (default)\n  -r, -R, --recursive   remove directories and\
  \ their contents recursively\n  -d, --dir             remove empty directories\n\
  \  -v, --verbose         explain what is being done\n      --help display this help\
  \ and exit\n      --version output version information and exit\n\nBy default, rm\
  \ does not remove directories. Use the --recursive (-r or -R)\noption to remove\
  \ each listed directory, too, along with all of its contents.\n\nTo remove a file\
  \ whose name starts with a '-', for example '-foo',\nuse one of these commands:\n\
  \  rm -- -foo\n\n  rm ./-foo\n\nNote that if you use rm to remove a file, it might\
  \ be possible to recover\nsome of its contents, given sufficient expertise and/or\
  \ time.  For greater\nassurance that the contents are truly unrecoverable, consider\
  \ using shred.\n\nGNU coreutils online help: <http://www.gnu.org/software/coreutils/>\n\
  Full documentation at: <http://www.gnu.org/software/coreutils/rm>\nor available\
  \ locally via: info '(coreutils) rm invocation'\n"
generated_using:
- --help
