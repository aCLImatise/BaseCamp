!Command
positional:
- !Positional
  description: ''
  position: 0
  name: OPTION
  optional: true
named:
- !Flag
  description: use printf style floating-point FORMAT
  synonyms:
  - -f
  - --format
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: 'use STRING to separate numbers (default: \n)'
  synonyms:
  - -s
  - --separator
  args: !SimpleFlagArg
    name: STRING
  optional: true
- !Flag
  description: equalize width by padding with leading zeroes
  synonyms:
  - -w
  - --equal-width
  args: !EmptyFlagArg {}
  optional: true
command:
- seq
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: seq [OPTION]... LAST\n  or: seq [OPTION]... FIRST LAST\n  or: seq\
  \ [OPTION]... FIRST INCREMENT LAST\nPrint numbers from FIRST to LAST, in steps of\
  \ INCREMENT.\n\nMandatory arguments to long options are mandatory for short options\
  \ too.\n  -f, --format=FORMAT      use printf style floating-point FORMAT\n  -s,\
  \ --separator=STRING   use STRING to separate numbers (default: \\n)\n  -w, --equal-width\
  \        equalize width by padding with leading zeroes\n      --help display this\
  \ help and exit\n      --version output version information and exit\n\nIf FIRST\
  \ or INCREMENT is omitted, it defaults to 1.  That is, an\nomitted INCREMENT defaults\
  \ to 1 even when LAST is smaller than FIRST.\nThe sequence of numbers ends when\
  \ the sum of the current number and\nINCREMENT would become greater than LAST.\n\
  FIRST, INCREMENT, and LAST are interpreted as floating point values.\nINCREMENT\
  \ is usually positive if FIRST is smaller than LAST, and\nINCREMENT is usually negative\
  \ if FIRST is greater than LAST.\nFORMAT must be suitable for printing one argument\
  \ of type 'double';\nit defaults to %.PRECf if FIRST, INCREMENT, and LAST are all\
  \ fixed point\ndecimal numbers with maximum precision PREC, and to %g otherwise.\n\
  \nGNU coreutils online help: <http://www.gnu.org/software/coreutils/>\nFull documentation\
  \ at: <http://www.gnu.org/software/coreutils/seq>\nor available locally via: info\
  \ '(coreutils) seq invocation'\n"
generated_using:
- --help
