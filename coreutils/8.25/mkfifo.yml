!Command
positional:
- !Positional
  description: ''
  position: 0
  name: OPTION
  optional: true
named:
- !Flag
  description: set file permission bits to MODE, not a=rw - umask
  synonyms:
  - -m
  - --mode
  args: !SimpleFlagArg
    name: MODE
  optional: true
- !Flag
  description: set the SELinux security context to default type
  synonyms:
  - -Z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=CTX]  like -Z, or if CTX is specified then set the SELinux or SMACK
    security context to CTX'
  synonyms:
  - --context
  args: !EmptyFlagArg {}
  optional: true
command:
- mkfifo
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: mkfifo [OPTION]... NAME...\nCreate named pipes (FIFOs) with the\
  \ given NAMEs.\n\nMandatory arguments to long options are mandatory for short options\
  \ too.\n  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\n\
  \  -Z                   set the SELinux security context to default type\n     \
  \ --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\n      \
  \                   or SMACK security context to CTX\n      --help display this\
  \ help and exit\n      --version output version information and exit\n\nGNU coreutils\
  \ online help: <http://www.gnu.org/software/coreutils/>\nFull documentation at:\
  \ <http://www.gnu.org/software/coreutils/mkfifo>\nor available locally via: info\
  \ '(coreutils) mkfifo invocation'\n"
generated_using:
- --help
