!Command
positional:
- !Positional
  description: ''
  position: 0
  name: OPTION
  optional: true
named:
- !Flag
  description: treat LINK_NAME as a normal file always
  synonyms:
  - -T
  - --no-target-directory
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print name of each linked file
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
command:
- ln
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: ln [OPTION]... [-T] TARGET LINK_NAME   (1st form)\n  or:  ln [OPTION]...\
  \ TARGET                  (2nd form)\n  or:  ln [OPTION]... TARGET... DIRECTORY\
  \     (3rd form)\n  or:  ln [OPTION]... -t DIRECTORY TARGET...  (4th form)\nIn the\
  \ 1st form, create a link to TARGET with the name LINK_NAME.\nIn the 2nd form, create\
  \ a link to TARGET in the current directory.\nIn the 3rd and 4th forms, create links\
  \ to each TARGET in DIRECTORY.\nCreate hard links by default, symbolic links with\
  \ --symbolic.\nBy default, each destination (name of new link) should not already\
  \ exist.\nWhen creating hard links, each TARGET must exist.  Symbolic links\ncan\
  \ hold arbitrary text; if later resolved, a relative link is\ninterpreted in relation\
  \ to its parent directory.\n\nMandatory arguments to long options are mandatory\
  \ for short options too.\n      --backup[=CONTROL] make a backup of each existing\
  \ destination file\n  -b like --backup but does not accept an argument\n  -d, -F,\
  \ --directory allow the superuser to attempt to hard link\n                    \
  \            directories (note: will probably fail due to\n                    \
  \            system restrictions, even for the superuser)\n  -f, --force remove\
  \ existing destination files\n  -i, --interactive           prompt whether to remove\
  \ destinations\n  -L, --logical               dereference TARGETs that are symbolic\
  \ links\n  -n, --no-dereference        treat LINK_NAME as a normal file if\n   \
  \                             it is a symbolic link to a directory\n  -P, --physical\
  \              make hard links directly to symbolic links\n  -r, --relative    \
  \          create symbolic links relative to link location\n  -s, --symbolic   \
  \           make symbolic links instead of hard links\n  -S, --suffix=SUFFIX   \
  \      override the usual backup suffix\n  -t, --target-directory=DIRECTORY  specify\
  \ the DIRECTORY in which to create\n                                the links\n\
  \  -T, --no-target-directory   treat LINK_NAME as a normal file always\n  -v, --verbose\
  \               print name of each linked file\n      --help display this help and\
  \ exit\n      --version output version information and exit\n\nThe backup suffix\
  \ is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control\
  \ method may be selected via the --backup option or through\nthe VERSION_CONTROL\
  \ environment variable.  Here are the values:\n\n  none, off never make backups\
  \ (even if --backup is given)\n  numbered, t make numbered backups\n  existing,\
  \ nil numbered if numbered backups exist, simple otherwise\n  simple, never always\
  \ make simple backups\n\nUsing -s ignores -L and -P.  Otherwise, the last option\
  \ specified controls\nbehavior when a TARGET is a symbolic link, defaulting to -P.\n\
  \nGNU coreutils online help: <http://www.gnu.org/software/coreutils/>\nFull documentation\
  \ at: <http://www.gnu.org/software/coreutils/ln>\nor available locally via: info\
  \ '(coreutils) ln invocation'\n"
generated_using:
- --help
