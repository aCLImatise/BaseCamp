!Command
positional:
- !Positional
  description: ''
  position: 0
  name: EXPRESSION
  optional: false
named: []
command:
- expr
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: expr EXPRESSION\n  or: expr OPTION\n\n      --help display this\
  \ help and exit\n      --version output version information and exit\n\nPrint the\
  \ value of EXPRESSION to standard output. A blank line below\nseparates increasing\
  \ precedence groups. EXPRESSION may be:\n\n  ARG1 | ARG2 ARG1 if it is neither null\
  \ nor 0, otherwise ARG2\n\n  ARG1 & ARG2 ARG1 if neither argument is null or 0,\
  \ otherwise 0\n\n  ARG1 < ARG2 ARG1 is less than ARG2\n  ARG1 <= ARG2 ARG1 is less\
  \ than or equal to ARG2\n  ARG1 = ARG2 ARG1 is equal to ARG2\n  ARG1 != ARG2 ARG1\
  \ is unequal to ARG2\n  ARG1 >= ARG2 ARG1 is greater than or equal to ARG2\n  ARG1\
  \ > ARG2 ARG1 is greater than ARG2\n\n  ARG1 + ARG2 arithmetic sum of ARG1 and ARG2\n\
  \  ARG1 - ARG2 arithmetic difference of ARG1 and ARG2\n\n  ARG1 * ARG2 arithmetic\
  \ product of ARG1 and ARG2\n  ARG1 / ARG2 arithmetic quotient of ARG1 divided by\
  \ ARG2\n  ARG1 % ARG2 arithmetic remainder of ARG1 divided by ARG2\n\n  STRING :\
  \ REGEXP anchored pattern match of REGEXP in STRING\n\n  match STRING REGEXP same\
  \ as STRING : REGEXP\n  substr STRING POS LENGTH substring of STRING, POS counted\
  \ from 1\n  index STRING CHARS index in STRING where any CHARS is found, or 0\n\
  \  length STRING length of STRING\n  + TOKEN                    interpret TOKEN\
  \ as a string, even if it is a\n                               keyword like 'match'\
  \ or an operator like '/'\n\n  ( EXPRESSION )             value of EXPRESSION\n\n\
  Beware that many operators need to be escaped or quoted for shells.\nComparisons\
  \ are arithmetic if both ARGs are numbers, else lexicographical.\nPattern matches\
  \ return the string matched between \\( and \\) or null; if\n\\( and \\) are not\
  \ used, they return the number of characters matched or 0.\n\nExit status is 0 if\
  \ EXPRESSION is neither null nor 0, 1 if EXPRESSION is null\nor 0, 2 if EXPRESSION\
  \ is syntactically invalid, and 3 if an error occurred.\n\nGNU coreutils online\
  \ help: <http://www.gnu.org/software/coreutils/>\nFull documentation at: <http://www.gnu.org/software/coreutils/expr>\n\
  or available locally via: info '(coreutils) expr invocation'\n"
generated_using:
- --help
