!Command
positional:
- !Positional
  description: N'th byte, character or field, counted from 1
  position: 0
  name: N
  optional: false
- !Positional
  description: from N'th byte, character or field, to end of line
  position: 1
  name: N-
  optional: false
- !Positional
  description: from N'th to M'th (included) byte, character or field
  position: 2
  name: N-M
  optional: false
named:
- !Flag
  description: line delimiter is NUL, not newline
  synonyms:
  - -z
  - --zero-terminated
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: from first to M'th (included) byte, character or field
  synonyms:
  - -M
  args: !EmptyFlagArg {}
  optional: true
command:
- cut
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: cut OPTION... [FILE]...\nPrint selected parts of lines from each\
  \ FILE to standard output.\n\nWith no FILE, or when FILE is -, read standard input.\n\
  \nMandatory arguments to long options are mandatory for short options too.\n  -b,\
  \ --bytes=LIST select only these bytes\n  -c, --characters=LIST select only these\
  \ characters\n  -d, --delimiter=DELIM use DELIM instead of TAB for field delimiter\n\
  \  -f, --fields=LIST select only these fields; also print any line\n           \
  \                 that contains no delimiter character, unless\n               \
  \             the -s option is specified\n  -n (ignored)\n      --complement   \
  \     complement the set of selected bytes, characters\n                       \
  \     or fields\n  -s, --only-delimited do not print lines not containing delimiters\n\
  \      --output-delimiter=STRING use STRING as the output delimiter\n          \
  \                  the default is to use the input delimiter\n  -z, --zero-terminated\
  \    line delimiter is NUL, not newline\n      --help display this help and exit\n\
  \      --version output version information and exit\n\nUse one, and only one of\
  \ -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by\
  \ commas.  Selected input is written\nin the same order that it is read, and is\
  \ written exactly once.\nEach range is one of:\n\n  N     N'th byte, character or\
  \ field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n\
  \  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first\
  \ to M'th (included) byte, character or field\n\nGNU coreutils online help: <http://www.gnu.org/software/coreutils/>\n\
  Full documentation at: <http://www.gnu.org/software/coreutils/cut>\nor available\
  \ locally via: info '(coreutils) cut invocation'\n"
generated_using:
- --help
