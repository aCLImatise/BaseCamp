!Command
positional:
- !Positional
  description: ''
  position: 0
  name: OPTION
  optional: true
named:
- !Flag
  description: prefix lines by the number of occurrences
  synonyms:
  - -c
  - --count
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: only print duplicate lines, one for each group
  synonyms:
  - -d
  - --repeated
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print all duplicate lines
  synonyms:
  - -D
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=METHOD]  like -D, but allow separating groups with an empty line;
    METHOD={none(default),prepend,separate}'
  synonyms:
  - --all-repeated
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: avoid comparing the first N fields
  synonyms:
  - -f
  - --skip-fields
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '[=METHOD]  show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both}'
  synonyms:
  - --group
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ignore differences in case when comparing
  synonyms:
  - -i
  - --ignore-case
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: avoid comparing the first N characters
  synonyms:
  - -s
  - --skip-chars
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: only print unique lines
  synonyms:
  - -u
  - --unique
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: line delimiter is NUL, not newline
  synonyms:
  - -z
  - --zero-terminated
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: compare no more than N characters in lines
  synonyms:
  - -w
  - --check-chars
  args: !SimpleFlagArg
    name: N
  optional: true
command:
- uniq
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: uniq [OPTION]... [INPUT [OUTPUT]]\nFilter adjacent matching lines\
  \ from INPUT (or standard input),\nwriting to OUTPUT (or standard output).\n\nWith\
  \ no options, matching lines are merged to the first occurrence.\n\nMandatory arguments\
  \ to long options are mandatory for short options too.\n  -c, --count          \
  \ prefix lines by the number of occurrences\n  -d, --repeated        only print\
  \ duplicate lines, one for each group\n  -D                    print all duplicate\
  \ lines\n      --all-repeated[=METHOD]  like -D, but allow separating groups\n \
  \                                with an empty line;\n                         \
  \        METHOD={none(default),prepend,separate}\n  -f, --skip-fields=N   avoid\
  \ comparing the first N fields\n      --group[=METHOD]  show all items, separating\
  \ groups with an empty line;\n                          METHOD={separate(default),prepend,append,both}\n\
  \  -i, --ignore-case     ignore differences in case when comparing\n  -s, --skip-chars=N\
  \    avoid comparing the first N characters\n  -u, --unique          only print\
  \ unique lines\n  -z, --zero-terminated     line delimiter is NUL, not newline\n\
  \  -w, --check-chars=N compare no more than N characters in lines\n      --help\
  \ display this help and exit\n      --version output version information and exit\n\
  \nA field is a run of blanks (usually spaces and/or TABs), then non-blank\ncharacters.\
  \  Fields are skipped before chars.\n\nNote: 'uniq' does not detect repeated lines\
  \ unless they are adjacent.\nYou may want to sort the input first, or use 'sort\
  \ -u' without 'uniq'.\nAlso, comparisons honor the rules specified by 'LC_COLLATE'.\n\
  \nGNU coreutils online help: <http://www.gnu.org/software/coreutils/>\nFull documentation\
  \ at: <http://www.gnu.org/software/coreutils/uniq>\nor available locally via: info\
  \ '(coreutils) uniq invocation'\n"
generated_using:
- --help
