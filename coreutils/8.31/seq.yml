!Command
command:
- seq
positional: []
named:
- !Flag
  description: use printf style floating-point FORMAT
  synonyms:
  - -f
  - --format
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: 'use STRING to separate numbers (default: \n)'
  synonyms:
  - -s
  - --separator
  args: !SimpleFlagArg
    name: STRING
  optional: true
- !Flag
  description: equalize width by padding with leading zeroes
  synonyms:
  - -w
  - --equal-width
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: display this help and exit
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: output version information and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: seq [OPTION]... LAST\n  or:  seq [OPTION]... FIRST LAST\n  or:\
  \  seq [OPTION]... FIRST INCREMENT LAST\nPrint numbers from FIRST to LAST, in steps\
  \ of INCREMENT.\n\nMandatory arguments to long options are mandatory for short options\
  \ too.\n  -f, --format=FORMAT      use printf style floating-point FORMAT\n  -s,\
  \ --separator=STRING   use STRING to separate numbers (default: \\n)\n  -w, --equal-width\
  \        equalize width by padding with leading zeroes\n      --help     display\
  \ this help and exit\n      --version  output version information and exit\n\nIf\
  \ FIRST or INCREMENT is omitted, it defaults to 1.  That is, an\nomitted INCREMENT\
  \ defaults to 1 even when LAST is smaller than FIRST.\nThe sequence of numbers ends\
  \ when the sum of the current number and\nINCREMENT would become greater than LAST.\n\
  FIRST, INCREMENT, and LAST are interpreted as floating point values.\nINCREMENT\
  \ is usually positive if FIRST is smaller than LAST, and\nINCREMENT is usually negative\
  \ if FIRST is greater than LAST.\nINCREMENT must not be 0; none of FIRST, INCREMENT\
  \ and LAST may be NaN.\nFORMAT must be suitable for printing one argument of type\
  \ 'double';\nit defaults to %.PRECf if FIRST, INCREMENT, and LAST are all fixed\
  \ point\ndecimal numbers with maximum precision PREC, and to %g otherwise.\n\nGNU\
  \ coreutils online help: <https://www.gnu.org/software/coreutils/>\nReport any translation\
  \ bugs to <https://translationproject.org/team/>\nFull documentation <https://www.gnu.org/software/coreutils/seq>\n\
  or available locally via: info '(coreutils) seq invocation'\n"
generated_using:
- --help
