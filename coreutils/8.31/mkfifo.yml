!Command
command:
- mkfifo
positional: []
named:
- !Flag
  description: set file permission bits to MODE, not a=rw - umask
  synonyms:
  - -m
  - --mode
  args: !SimpleFlagArg
    name: MODE
  optional: true
- !Flag
  description: set the SELinux security context to default type
  synonyms:
  - -Z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[=CTX]  like -Z, or if CTX is specified then set the SELinux\nor SMACK\
    \ security context to CTX"
  synonyms:
  - --context
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: display this help and exit
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: output version information and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: mkfifo [OPTION]... NAME...\nCreate named pipes (FIFOs) with the\
  \ given NAMEs.\n\nMandatory arguments to long options are mandatory for short options\
  \ too.\n  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\n\
  \  -Z                   set the SELinux security context to default type\n     \
  \ --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\n      \
  \                   or SMACK security context to CTX\n      --help     display this\
  \ help and exit\n      --version  output version information and exit\n\nGNU coreutils\
  \ online help: <https://www.gnu.org/software/coreutils/>\nReport any translation\
  \ bugs to <https://translationproject.org/team/>\nFull documentation <https://www.gnu.org/software/coreutils/mkfifo>\n\
  or available locally via: info '(coreutils) mkfifo invocation'\n"
generated_using:
- --help
