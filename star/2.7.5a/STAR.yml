!Command
command:
- STAR
positional:
- !Positional
  description: '... map reads'
  position: 0
  name: alignReads
  optional: false
- !Positional
  description: '... generate genome files'
  position: 1
  name: genomeGenerate
  optional: false
- !Positional
  description: '... lift-over of GTF files (--sjdbGTFfile) between genome assemblies
    using chain file(s) from --genomeChainFiles.'
  position: 0
  name: liftOver
  optional: false
- !Positional
  description: '... all-read/write/execute (same as chmod 777)'
  position: 0
  name: All_RWX
  optional: false
- !Positional
  description: '... load genome into shared and keep it in memory after run'
  position: 0
  name: LoadAndKeep
  optional: false
- !Positional
  description: '... load genome into shared but remove it after run'
  position: 1
  name: LoadAndRemove
  optional: false
- !Positional
  description: '... load genome into shared memory and exit, keeping the genome in
    memory for future runs'
  position: 2
  name: LoadAndExit
  optional: false
- !Positional
  description: '... do not map anything, just remove loaded genome from memory'
  position: 3
  name: Remove
  optional: false
- !Positional
  description: '... do not use shared memory, each job will have its own private copy
    of the genome'
  position: 4
  name: NoSharedMemory
  optional: false
- !Positional
  description: '... full (normal) genome'
  position: 0
  name: Full
  optional: false
- !Positional
  description: '... genome consists of transcript sequences'
  position: 1
  name: Transcriptome
  optional: false
- !Positional
  description: '... genome consists of superTranscript sequences'
  position: 2
  name: SuperTransriptome
  optional: false
- !Positional
  description: '... no transformation'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... replace reference alleles with alternative alleles from VCF file
    (e.g. consensus allele)'
  position: 1
  name: Haploid
  optional: false
- !Positional
  description: '... create two haplotypes for each chromosome listed in VCF file,
    for genotypes 1|2, assumes perfect phasing (e.g. personal genome)'
  position: 2
  name: Diploid
  optional: false
- !Positional
  description: '... all files including big Genome, SA and SAindex - this will create
    a complete genome directory'
  position: 0
  name: All
  optional: false
- !Positional
  description: '... FASTA or FASTQ'
  position: 0
  name: Fastx
  optional: false
- !Positional
  description: '... log messages'
  position: 0
  name: Log
  optional: false
- !Positional
  description: '... alignments in SAM format (which normally are output to Aligned.out.sam
    file), normal standard output will go into Log.std.out'
  position: 1
  name: SAM
  optional: false
- !Positional
  description: '... alignments in BAM format, unsorted. Requires --outSAMtype BAM
    Unsorted'
  position: 2
  name: BAM_Unsorted
  optional: false
- !Positional
  description: '... alignments to transcriptome in BAM format, unsorted. Requires
    --quantMode TranscriptomeSAM'
  position: 0
  name: BAM_Quant
  optional: false
- !Positional
  description: '... no output'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... output in separate fasta/fastq files, Unmapped.out.mate1/2'
  position: 1
  name: Fastx
  optional: false
- !Positional
  description: '... quasi-random order used before 2.5.0'
  position: 0
  name: Old_2.4
  optional: false
- !Positional
  description: '... random order of alignments for each multi-mapper. Read mates (pairs)
    are always adjacent, all alignment for each read stay together. This option will
    become default in the future releases.'
  position: 1
  name: Random
  optional: false
- !Positional
  description: '... output BAM without sorting'
  position: 0
  name: BAM
  optional: false
- !Positional
  description: '... output SAM without sorting'
  position: 1
  name: SAM
  optional: false
- !Positional
  description: '... standard unsorted'
  position: 0
  name: Unsorted
  optional: false
- !Positional
  description: '... NH HI AS nM'
  position: 1
  name: Standard
  optional: false
- !Positional
  description: '... NH HI AS nM NM MD jM jI MC ch'
  position: 2
  name: All
  optional: false
- !Positional
  description: '... variant allele'
  position: 0
  name: vA
  optional: false
- !Positional
  description: '... haplotype (1/2) when mapping to the diploid genome. Requires genome
    generated with --genomeTransformType Diploid'
  position: 1
  name: ha
  optional: false
- !Positional
  description: '... genomic coordinate of the variant overlapped by the read'
  position: 2
  name: vG
  optional: false
- !Positional
  description: '... 1 - alignment passes WASP filtering; 2,3,4,5,6,7 - alignment does
    not pass WASP filtering. Requires --waspOutputMode SAMtag.'
  position: 3
  name: vW
  optional: false
- !Positional
  description: '... assessment of CB and UMI'
  position: 0
  name: sM
  optional: false
- !Positional
  description: '... sequence of the entire barcode (CB,UMI,adapter...)'
  position: 1
  name: sS
  optional: false
- !Positional
  description: '... quality of the entire barcode'
  position: 2
  name: sQ
  optional: false
- !Positional
  description: '... alignment block read/genomic coordinates'
  position: 0
  name: rB
  optional: false
- !Positional
  description: '... read coordinate of the variant'
  position: 1
  name: vR
  optional: false
- !Positional
  description: '... no output'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... read number (index) in the FASTx file'
  position: 0
  name: Number
  optional: false
- !Positional
  description: '... mark all multimappers, and duplicate unique mappers. The coordinates,
    FLAG, CIGAR must be identical'
  position: 0
  name: UniqueIdentical
  optional: false
- !Positional
  description: '... mark duplicate unique mappers but not multimappers.'
  position: 1
  name: UniqueIdenticalNotMulti
  optional: false
- !Positional
  description: '... no signal output'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... bedGraph format'
  position: 1
  name: bedGraph
  optional: false
- !Positional
  description: '... wiggle format'
  position: 2
  name: wiggle
  optional: false
- !Positional
  description: "... signal from only 5' of the 1st read, useful for CAGE/RAMPAGE etc"
  position: 0
  name: read1_5p
  optional: false
- !Positional
  description: '... signal from only 2nd read'
  position: 1
  name: read2
  optional: false
- !Positional
  description: '...  separate strands, str1 and str2'
  position: 0
  name: Stranded
  optional: false
- !Positional
  description: '... reads per million of mapped reads'
  position: 0
  name: RPM
  optional: false
- !Positional
  description: '... no normalization, "raw" counts'
  position: 1
  name: None
  optional: false
- !Positional
  description: '... standard filtering using only current alignment'
  position: 0
  name: Normal
  optional: false
- !Positional
  description: '... no filtering'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... filter out alignments that contain non-canonical junctions'
  position: 1
  name: RemoveNoncanonical
  optional: false
- !Positional
  description: '... filter out alignments that contain non-canonical unannotated junctions
    when using annotated splice junctions database. The annotated non-canonical junctions
    will be kept.'
  position: 2
  name: RemoveNoncanonicalUnannotated
  optional: false
- !Positional
  description: '... remove alignments that have junctions with inconsistent strands'
  position: 0
  name: RemoveInconsistentStrands
  optional: false
- !Positional
  description: '... no filtering'
  position: 1
  name: None
  optional: false
- !Positional
  description: and GT/AT junction penalty  (in addition to scoreGap)
  position: 0
  name: AT/AC
  optional: false
- !Positional
  description: '... standard local alignment with soft-clipping allowed'
  position: 0
  name: Local
  optional: false
- !Positional
  description: '... force end-to-end read alignment, do not soft-clip'
  position: 1
  name: EndToEnd
  optional: false
- !Positional
  description: '... fully extend only the 5p of the read1, all other ends: local alignment'
  position: 2
  name: Extend5pOfRead1
  optional: false
- !Positional
  description: '... prohibit, useful for compatibility with Cufflinks'
  position: 0
  name: No
  optional: false
- !Positional
  description: '... insertions are not flushed'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... insertions are flushed to the right'
  position: 1
  name: Right
  optional: false
- !Positional
  description: '... Chimeric.out.junction'
  position: 0
  name: Junctions
  optional: false
- !Positional
  description: '... output old SAM into separate Chimeric.out.sam file'
  position: 1
  name: SeparateSAMold
  optional: false
- !Positional
  description: '... output into main aligned BAM files (Aligned.*.bam)'
  position: 2
  name: WithinBAM
  optional: false
- !Positional
  description: '... count reads per gene'
  position: 0
  name: GeneCounts
  optional: false
- !Positional
  description: '... prohibit indels, soft clipping and single-end alignments - compatible
    with RSEM'
  position: 0
  name: IndelSoftclipSingleend
  optional: false
- !Positional
  description: '... prohibit single-end alignments'
  position: 1
  name: Singleend
  optional: false
- !Positional
  description: '... 1-pass mapping'
  position: 0
  name: None
  optional: false
- !Positional
  description: '... basic 2-pass mapping, with all 1st pass junctions inserted into
    the genome indices on the fly'
  position: 1
  name: Basic
  optional: false
- !Positional
  description: '... add WASP tags to the alignments that pass WASP filtering'
  position: 0
  name: SAMtag
  optional: false
- !Positional
  description: '... (a.k.a. Droplet) one UMI and one Cell Barcode of fixed length
    in read2, e.g. Drop-seq and 10X Chromium.'
  position: 0
  name: CB_UMI_Simple
  optional: false
- !Positional
  description: '... one UMI of fixed length, but multiple Cell Barcodes of varying
    length, as well as adapters sequences are allowed in read2 only, e.g. inDrop.'
  position: 1
  name: CB_UMI_Complex
  optional: false
- !Positional
  description: '... output Cell Barcode as CR and/or CB SAm tag. No UMI counting.
    --readFilesIn cDNA_read1 [cDNA_read2 if paired-end] CellBarcode_read . Requires
    --outSAMtype BAM Unsorted [and/or SortedByCoordinate]'
  position: 2
  name: CB_samTagOut
  optional: false
- !Positional
  description: '... Smart-seq: each cell in a separate FASTQ (paired- or single-end),
    barcodes are corresponding read-groups, no UMI sequences, alignments deduplicated
    according to alignment start and end (after extending soft-clipped bases)'
  position: 3
  name: SmartSeq
  optional: false
- !Positional
  description: '... no whitelist: all cell barcodes are allowed'
  position: 0
  name: None
  optional: false
- !Positional
  description: "position of the UMI on the barcode read, same as soloCBposition\n\
    Example: inDrop (Zilionis et al, Nat. Protocols, 2017):\n--soloCBposition  3_9_3_14"
  position: 0
  name: string
  optional: false
- !Positional
  description: '... only exact matches allowed'
  position: 0
  name: Exact
  optional: false
- !Positional
  description: '... only one match in whitelist with 1 mismatched base allowed. Allowed
    CBs have to have at least one read with exact match.'
  position: 1
  name: 1MM
  optional: false
- !Positional
  description: "... multiple matches in whitelist with 1 mismatched base allowed,\
    \ posterior probability calculation is used choose one of the matches.\nAllowed\
    \ CBs have to have at least one read with exact match. Similar to CellRanger 2.2.0"
  position: 2
  name: 1MM_multi
  optional: false
- !Positional
  description: "... same as 1MM_Multi, but pseudocounts of 1 are added to all whitelist\
    \ barcodes.\nSimilar to CellRanger 3.x.x"
  position: 3
  name: 1MM_multi_pseudocounts
  optional: false
- !Positional
  description: '... no strand information'
  position: 0
  name: Unstranded
  optional: false
- !Positional
  description: '... read strand same as the original RNA molecule'
  position: 1
  name: Forward
  optional: false
- !Positional
  description: '... read strand opposite to the original RNA molecule'
  position: 2
  name: Reverse
  optional: false
- !Positional
  description: '... genes: reads match the gene transcript'
  position: 0
  name: Gene
  optional: false
- !Positional
  description: '... splice junctions: reported in SJ.out.tab'
  position: 1
  name: SJ
  optional: false
- !Positional
  description: "... full genes: count all reads overlapping genes' exons and introns"
  position: 2
  name: GeneFull
  optional: false
- !Positional
  description: "... quantification of transcript for 3' protocols"
  position: 0
  name: Transcript3p
  optional: false
- !Positional
  description: '... all UMIs with 1 mismatch distance to each other are collapsed
    (i.e. counted once)'
  position: 0
  name: 1MM_All
  optional: false
- !Positional
  description: '... follows the "directional" method from the UMI-tools by Smith,
    Heger and Sudbery (Genome Research 2017).'
  position: 1
  name: 1MM_Directional
  optional: false
- !Positional
  description: '... only exactly matching UMIs are collapsed'
  position: 2
  name: Exact
  optional: false
- !Positional
  description: '... no deduplication of UMIs, count all reads. Allowed for --soloType
    SmartSeq'
  position: 3
  name: NoDedup
  optional: false
- !Positional
  description: '... remove lower-count UMIs that map to more than one gene (introduced
    in CellRanger 3.x.x)'
  position: 0
  name: MultiGeneUMI
  optional: false
- !Positional
  description: gene_names   barcode_sequences   cell_feature_count_matrix
  position: 0
  name: file_name_prefix
  optional: false
- !Positional
  description: '... simple filtering of CellRanger 2.2, followed by three numbers:
    number of expected cells, robust maximum percentile for UMI count, maximum to
    minimum ratio for UMI count'
  position: 0
  name: CellRanger2.2
  optional: false
- !Positional
  description: '... only report top cells by UMI count, followed by the exact number
    of cells'
  position: 1
  name: TopCells
  optional: false
- !Positional
  description: '... do not output filtered cells'
  position: 2
  name: None
  optional: false
named:
- !Flag
  description: ': map all reads'
  synonyms:
  - '-1'
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: :xxx , ID:zzz "DS:z z" , ID:yyy DS:yyyy
  synonyms:
  - --outSAMattrRGline
  args: !SimpleFlagArg
    name: ID
  optional: true
- !Flag
  description: 0_0_2_-1  3_1_3_8
  synonyms:
  - --soloCBposition
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: STAR  [options]... --genomeDir /path/to/genome/index/   --readFilesIn\
  \ R1.fq R2.fq\nSpliced Transcripts Alignment to a Reference (c) Alexander Dobin,\
  \ 2009-2020\n\nSTAR version=2.7.5a\nSTAR compilation time,server,dir=Tue Jun 16\
  \ 12:17:16 EDT 2020 vega:/home/dobin/data/STAR/STARcode/STAR.master/source\nFor\
  \ more details see:\n<https://github.com/alexdobin/STAR>\n<https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf>\n\
  ### versions\nversionGenome           2.7.4a\n    string: earliest genome index\
  \ version compatible with this STAR release. Please do not change this value!\n\n\
  ### Parameter Files\nparametersFiles          -\n    string: name of a user-defined\
  \ parameters file, \"-\": none. Can only be defined on the command line.\n\n###\
  \ System\nsysShell            -\n    string: path to the shell binary, preferably\
  \ bash, e.g. /bin/bash.\n                    - ... the default shell is executed,\
  \ typically /bin/sh. This was reported to fail on some Ubuntu systems - then you\
  \ need to specify path to bash.\n\n### Run Parameters\nrunMode                 \
  \        alignReads\n    string: type of the run.\n\n                          \
  \      alignReads             ... map reads\n                                genomeGenerate\
  \         ... generate genome files\n                                inputAlignmentsFromBAM\
  \ ... input alignments from BAM. Presently only works with --outWigType and --bamRemoveDuplicates.\n\
  \                                liftOver               ... lift-over of GTF files\
  \ (--sjdbGTFfile) between genome assemblies using chain file(s) from --genomeChainFiles.\n\
  \nrunThreadN                      1\n    int: number of threads to run STAR\n\n\
  runDirPerm                      User_RWX\n    string: permissions for the directories\
  \ created at the run-time.\n                                User_RWX ... user-read/write/execute\n\
  \                                All_RWX  ... all-read/write/execute (same as chmod\
  \ 777)\n\nrunRNGseed                      777\n    int: random number generator\
  \ seed.\n\n\n### Genome Parameters\ngenomeDir                   ./GenomeDir/\n \
  \   string: path to the directory where genome files are stored (for --runMode alignReads)\
  \ or will be generated (for --runMode generateGenome)\n\ngenomeLoad            \
  \    NoSharedMemory\n    string: mode of shared memory usage for the genome files.\
  \ Only used with --runMode alignReads.\n                          LoadAndKeep  \
  \   ... load genome into shared and keep it in memory after run\n              \
  \            LoadAndRemove   ... load genome into shared but remove it after run\n\
  \                          LoadAndExit     ... load genome into shared memory and\
  \ exit, keeping the genome in memory for future runs\n                         \
  \ Remove          ... do not map anything, just remove loaded genome from memory\n\
  \                          NoSharedMemory  ... do not use shared memory, each job\
  \ will have its own private copy of the genome\n\ngenomeFastaFiles            -\n\
  \    string(s): path(s) to the fasta files with the genome sequences, separated\
  \ by spaces. These files should be plain text FASTA files, they *cannot* be zipped.\n\
  \                            Required for the genome generation (--runMode genomeGenerate).\
  \ Can also be used in the mapping (--runMode alignReads) to add extra (new) sequences\
  \ to the genome (e.g. spike-ins).\n\ngenomeChainFiles            -\n    string:\
  \ chain files for genomic liftover. Only used with --runMode liftOver .\n\ngenomeFileSizes\
  \             0\n    uint(s)>0: genome files exact sizes in bytes. Typically, this\
  \ should not be defined by the user.\n\ngenomeConsensusFile         -\n    string:\
  \ VCF file with consensus SNPs (i.e. alternative allele is the major (AF>0.5) allele)\n\
  \n### Genome Indexing Parameters - only used with --runMode genomeGenerate\ngenomeChrBinNbits\
  \           18\n    int: =log2(chrBin), where chrBin is the size of the bins for\
  \ genome storage: each chromosome will occupy an integer number of bins. For a genome\
  \ with large number of contigs, it is recommended to scale this parameter as min(18,\
  \ log2[max(GenomeLength/NumberOfReferences,ReadLength)]).\n\ngenomeSAindexNbases\
  \         14\n    int: length (bases) of the SA pre-indexing string. Typically between\
  \ 10 and 15. Longer strings will use much more memory, but allow faster searches.\
  \ For small genomes, the parameter --genomeSAindexNbases must be scaled down to\
  \ min(14, log2(GenomeLength)/2 - 1).\n\ngenomeSAsparseD             1\n    int>0:\
  \ suffux array sparsity, i.e. distance between indices: use bigger numbers to decrease\
  \ needed RAM at the cost of mapping speed reduction\n\ngenomeSuffixLengthMax   \
  \    -1\n    int: maximum length of the suffixes, has to be longer than read length.\
  \ -1 = infinite.\n\n#####UnderDevelopment_begin : not supported - do not use\ngenomeType\
  \                  Full\n    string: type of genome to generate\n              \
  \              Full                ... full (normal) genome\n                  \
  \          Transcriptome       ... genome consists of transcript sequences\n   \
  \                         SuperTransriptome   ... genome consists of superTranscript\
  \ sequences\n\ngenomeTransformType         None\n    string: type of genome transformation\n\
  \                            None       ... no transformation\n                \
  \            Haploid    ... replace reference alleles with alternative alleles from\
  \ VCF file (e.g. consensus allele)\n                            Diploid    ... create\
  \ two haplotypes for each chromosome listed in VCF file, for genotypes 1|2, assumes\
  \ perfect phasing (e.g. personal genome)\n\ngenomeTransformVCF          -\n    string:\
  \ path to VCF file for genome transformation\n#####UnderDevelopment_end\n\n### Splice\
  \ Junctions Database\nsjdbFileChrStartEnd                     -\n    string(s):\
  \ path to the files with genomic coordinates (chr <tab> start <tab> end <tab> strand)\
  \ for the splice junction introns. Multiple files can be supplied wand will be concatenated.\n\
  \nsjdbGTFfile                             -\n    string: path to the GTF file with\
  \ annotations\n\nsjdbGTFchrPrefix                        -\n    string: prefix for\
  \ chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL annotations with\
  \ UCSC genomes)\n\nsjdbGTFfeatureExon                      exon\n    string: feature\
  \ type in GTF file to be used as exons for building transcripts\n\nsjdbGTFtagExonParentTranscript\
  \          transcript_id\n    string: GTF attribute name for parent transcript ID\
  \ (default \"transcript_id\" works for GTF files)\n\nsjdbGTFtagExonParentGene  \
  \              gene_id\n    string: GTF attribute name for parent gene ID (default\
  \ \"gene_id\" works for GTF files)\n\nsjdbGTFtagExonParentGeneName            gene_name\n\
  \    string(s): GTF attrbute name for parent gene name\n\nsjdbGTFtagExonParentGeneType\
  \            gene_type gene_biotype\n    string(s): GTF attrbute name for parent\
  \ gene type\n\nsjdbOverhang                            100\n    int>0: length of\
  \ the donor/acceptor sequence on each side of the junctions, ideally = (mate_length\
  \ - 1)\n\nsjdbScore                               2\n    int: extra alignment score\
  \ for alignments that cross database junctions\n\nsjdbInsertSave               \
  \           Basic\n    string: which files to save when sjdb junctions are inserted\
  \ on the fly at the mapping step\n\t\t\t\t\tBasic ... only small junction / transcript\
  \ files\n\t\t\t\t\tAll   ... all files including big Genome, SA and SAindex - this\
  \ will create a complete genome directory\n\n### Variation parameters\nvarVCFfile\
  \                              -\n    string: path to the VCF file that contains\
  \ variation data. The 10th column should contain the genotype information, e.g.\
  \ 0/1\n\n### Input Files\ninputBAMfile                -\n    string: path to BAM\
  \ input file, to be used with --runMode inputAlignmentsFromBAM\n\n### Read Parameters\n\
  readFilesType               Fastx\n    string: format of input read files\n    \
  \                        Fastx       ... FASTA or FASTQ\n                      \
  \      SAM SE      ... SAM or BAM single-end reads; for BAM use --readFilesCommand\
  \ samtools view\n                            SAM PE      ... SAM or BAM paired-end\
  \ reads; for BAM use --readFilesCommand samtools view\n\nreadFilesIn           \
  \      Read1 Read2\n    string(s): paths to files that contain input read1 (and,\
  \ if needed,  read2)\n\nreadFilesManifest           -\n    string: path to the \"\
  manifest\" file with the names of read files. The manifest file should contain 3\
  \ tab-separated columns:\n            paired-end reads: read1_file_name $tab$ read2_file_name\
  \ $tab$ read_group_line.\n            single-end reads: read1_file_name $tab$ -\
  \               $tab$ read_group_line.\n            Spaces, but not tabs are allowed\
  \ in file names.\n            If read_group_line does not start with ID:, it can\
  \ only contain one ID field, and ID: will be added to it.\n            If read_group_line\
  \ starts with ID:, it can contain several fields separated by $tab$, and all fields\
  \ will be be copied verbatim into SAM @RG header line.\n                       \
  \     -\n\nreadFilesPrefix             -\n    string: prefix for the read files\
  \ names, i.e. it will be added in front of the strings in --readFilesIn\n      \
  \                      -: no prefix\n\nreadFilesCommand             -\n    string(s):\
  \ command line to execute for each of the input file. This command should generate\
  \ FASTA or FASTQ text and send it to stdout\n               For example: zcat -\
  \ to uncompress .gz files, bzcat - to uncompress .bz2 files, etc.\n\nreadMapNumber\
  \               -1\n    int: number of reads to map from the beginning of the file\n\
  \                            -1: map all reads\n\nreadMatesLengthsIn          NotEqual\n\
  \    string: Equal/NotEqual - lengths of names,sequences,qualities for both mates\
  \ are the same  / not the same. NotEqual is safe in all situations.\n\nreadNameSeparator\
  \           /\n    string(s): character(s) separating the part of the read names\
  \ that will be trimmed in output (read name after space is always trimmed)\n\nreadQualityScoreBase\
  \        33\n    int>=0: number to be subtracted from the ASCII code to get Phred\
  \ quality score\n\nclip3pNbases                 0\n    int(s): number(s) of bases\
  \ to clip from 3p of each mate. If one value is given, it will be assumed the same\
  \ for both mates.\n\nclip5pNbases                 0\n    int(s): number(s) of bases\
  \ to clip from 5p of each mate. If one value is given, it will be assumed the same\
  \ for both mates.\n\nclip3pAdapterSeq            -\n    string(s): adapter sequences\
  \ to clip from 3p of each mate.  If one value is given, it will be assumed the same\
  \ for both mates.\n\nclip3pAdapterMMp            0.1\n    double(s): max proportion\
  \ of mismatches for 3p adapter clipping for each mate.  If one value is given, it\
  \ will be assumed the same for both mates.\n\nclip3pAfterAdapterNbases    0\n  \
  \  int(s): number of bases to clip from 3p of each mate after the adapter clipping.\
  \ If one value is given, it will be assumed the same for both mates.\n\n\n### Limits\n\
  limitGenomeGenerateRAM               31000000000\n    int>0: maximum available RAM\
  \ (bytes) for genome generation\n\nlimitIObufferSize                    150000000\n\
  \    int>0: max available buffers size (bytes) for input/output, per thread\n\n\
  limitOutSAMoneReadBytes              100000\n    int>0: max size of the SAM record\
  \ (bytes) for one read. Recommended value: >(2*(LengthMate1+LengthMate2+100)*outFilterMultimapNmax\n\
  \nlimitOutSJoneRead                    1000\n    int>0: max number of junctions\
  \ for one read (including all multi-mappers)\n\nlimitOutSJcollapsed            \
  \      1000000\n    int>0: max number of collapsed junctions\n\nlimitBAMsortRAM\
  \                         0\n    int>=0: maximum available RAM (bytes) for sorting\
  \ BAM. If =0, it will be set to the genome index size. 0 value can only be used\
  \ with --genomeLoad NoSharedMemory option.\n\nlimitSjdbInsertNsj               \
  \      1000000\n    int>=0: maximum number of junction to be inserted to the genome\
  \ on the fly at the mapping stage, including those from annotations and those detected\
  \ in the 1st step of the 2-pass run\n\nlimitNreadsSoft                        -1\n\
  \    int: soft limit on the number of reads\n\n### Output: general\noutFileNamePrefix\
  \               ./\n    string: output files name prefix (including full or relative\
  \ path). Can only be defined on the command line.\n\noutTmpDir                 \
  \      -\n    string: path to a directory that will be used as temporary by STAR.\
  \ All contents of this directory will be removed!\n            - the temp directory\
  \ will default to outFileNamePrefix_STARtmp\n\noutTmpKeep                      None\n\
  \    string: whether to keep the tempporary files after STAR runs is finished\n\
  \                                None ... remove all temporary files\n         \
  \                       All .. keep all files\n\noutStd                        \
  \  Log\n    string: which output will be directed to stdout (standard out)\n   \
  \                             Log                    ... log messages\n        \
  \                        SAM                    ... alignments in SAM format (which\
  \ normally are output to Aligned.out.sam file), normal standard output will go into\
  \ Log.std.out\n                                BAM_Unsorted           ... alignments\
  \ in BAM format, unsorted. Requires --outSAMtype BAM Unsorted\n                \
  \                BAM_SortedByCoordinate ... alignments in BAM format, unsorted.\
  \ Requires --outSAMtype BAM SortedByCoordinate\n                               \
  \ BAM_Quant              ... alignments to transcriptome in BAM format, unsorted.\
  \ Requires --quantMode TranscriptomeSAM\n\noutReadsUnmapped                None\n\
  \   string: output of unmapped and partially mapped (i.e. mapped only one mate of\
  \ a paired end read) reads in separate file(s).\n                              \
  \  None    ... no output\n                                Fastx   ... output in\
  \ separate fasta/fastq files, Unmapped.out.mate1/2\n\noutQSconversionAdd       \
  \       0\n   int: add this number to the quality score (e.g. to convert from Illumina\
  \ to Sanger, use -31)\n\noutMultimapperOrder             Old_2.4\n    string: order\
  \ of multimapping alignments in the output files\n                             \
  \   Old_2.4             ... quasi-random order used before 2.5.0\n             \
  \                   Random              ... random order of alignments for each\
  \ multi-mapper. Read mates (pairs) are always adjacent, all alignment for each read\
  \ stay together. This option will become default in the future releases.\n\n###\
  \ Output: SAM and BAM\noutSAMtype                      SAM\n    strings: type of\
  \ SAM/BAM output\n                                1st word:\n                  \
  \              BAM  ... output BAM without sorting\n                           \
  \     SAM  ... output SAM without sorting\n                                None\
  \ ... no SAM/BAM output\n                                2nd, 3rd:\n           \
  \                     Unsorted           ... standard unsorted\n               \
  \                 SortedByCoordinate ... sorted by coordinate. This option will\
  \ allocate extra memory for sorting which can be specified by --limitBAMsortRAM.\n\
  \noutSAMmode                      Full\n    string: mode of SAM output\n       \
  \                         None ... no SAM output\n                             \
  \   Full ... full SAM output\n                                NoQS ... full SAM\
  \ but without quality scores\n\noutSAMstrandField               None\n    string:\
  \ Cufflinks-like strand field flag\n                                None       \
  \ ... not used\n                                intronMotif ... strand derived from\
  \ the intron motif. This option changes the output alignments: reads with inconsistent\
  \ and/or non-canonical introns are filtered out.\n\noutSAMattributes           \
  \     Standard\n    string: a string of desired SAM attributes, in the order desired\
  \ for the output SAM\n                                NH HI AS nM NM MD jM jI XS\
  \ MC ch ... any combination in any order\n                                None \
  \       ... no attributes\n                                Standard    ... NH HI\
  \ AS nM\n                                All         ... NH HI AS nM NM MD jM jI\
  \ MC ch\n                                variation:\n                          \
  \      vA          ... variant allele\n                                ha      \
  \    ... haplotype (1/2) when mapping to the diploid genome. Requires genome generated\
  \ with --genomeTransformType Diploid\n                                vG       \
  \   ... genomic coordinate of the variant overlapped by the read\n             \
  \                   vW          ... 1 - alignment passes WASP filtering; 2,3,4,5,6,7\
  \ - alignment does not pass WASP filtering. Requires --waspOutputMode SAMtag.\n\
  \                                STARsolo:\n                                CR CY\
  \ UR UY ... sequences and quality scores of cell barcodes and UMIs for the solo*\
  \ demultiplexing\n                                CB UB       ... error-corrected\
  \ cell barcodes and UMIs for solo* demultiplexing. Requires --outSAMtype BAM SortedByCoordinate.\n\
  \                                sM          ... assessment of CB and UMI\n    \
  \                            sS          ... sequence of the entire barcode (CB,UMI,adapter...)\n\
  \                                sQ          ... quality of the entire barcode\n\
  \                                GX GN       ... gene ID and gene name\n       \
  \                         Unsupported/undocumented:\n                          \
  \      rB          ... alignment block read/genomic coordinates\n              \
  \                  vR          ... read coordinate of the variant\n\noutSAMattrIHstart\
  \               1\n    int>=0:                     start value for the IH attribute.\
  \ 0 may be required by some downstream software, such as Cufflinks or StringTie.\n\
  \noutSAMunmapped                  None\n    string(s): output of unmapped reads\
  \ in the SAM format\n                                1st word:\n               \
  \                 None   ... no output\n                                Within ...\
  \ output unmapped reads within the main SAM file (i.e. Aligned.out.sam)\n      \
  \                          2nd word:\n                                KeepPairs\
  \ ... record unmapped mate for each alignment, and, in case of unsorted output,\
  \ keep it adjacent to its mapped mate. Only affects multi-mapping reads.\n\noutSAMorder\
  \                     Paired\n    string: type of sorting for the SAM output\n \
  \                               Paired: one mate after the other for all paired\
  \ alignments\n                                PairedKeepInputOrder: one mate after\
  \ the other for all paired alignments, the order is kept the same as in the input\
  \ FASTQ files\n\noutSAMprimaryFlag\t\tOneBestScore\n    string: which alignments\
  \ are considered primary - all others will be marked with 0x100 bit in the FLAG\n\
  \                                OneBestScore ... only one alignment with the best\
  \ score is primary\n                                AllBestScore ... all alignments\
  \ with the best score are primary\n\noutSAMreadID\t\t\tStandard\n    string: read\
  \ ID record type\n                                Standard ... first word (until\
  \ space) from the FASTx read ID line, removing /1,/2 from the end\n            \
  \                    Number   ... read number (index) in the FASTx file\n\noutSAMmapqUnique\
  \        255\n    int: 0 to 255: the MAPQ value for unique mappers\n\noutSAMflagOR\
  \           0\n    int: 0 to 65535: sam FLAG will be bitwise OR'd with this value,\
  \ i.e. FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set by\
  \ STAR, and after outSAMflagAND. Can be used to set specific bits that are not set\
  \ otherwise.\n\noutSAMflagAND           65535\n    int: 0 to 65535: sam FLAG will\
  \ be bitwise AND'd with this value, i.e. FLAG=FLAG & outSAMflagOR. This is applied\
  \ after all flags have been set by STAR, but before outSAMflagOR. Can be used to\
  \ unset specific bits that are not set otherwise.\n\noutSAMattrRGline        -\n\
  \    string(s): SAM/BAM read group line. The first word contains the read group\
  \ identifier and must start with \"ID:\", e.g. --outSAMattrRGline ID:xxx CN:yy \"\
  DS:z z z\".\n            xxx will be added as RG tag to each output alignment. Any\
  \ spaces in the tag values have to be double quoted.\n            Comma separated\
  \ RG lines correspons to different (comma separated) input files in --readFilesIn.\
  \ Commas have to be surrounded by spaces, e.g.\n            --outSAMattrRGline ID:xxx\
  \ , ID:zzz \"DS:z z\" , ID:yyy DS:yyyy\n\noutSAMheaderHD          -\n    strings:\
  \ @HD (header) line of the SAM header\n\noutSAMheaderPG          -\n    strings:\
  \ extra @PG (software) line of the SAM header (in addition to STAR)\n\noutSAMheaderCommentFile\
  \ -\n    string: path to the file with @CO (comment) lines of the SAM header\n\n\
  outSAMfilter            None\n    string(s): filter the output into main SAM/BAM\
  \ files\n                        KeepOnlyAddedReferences ... only keep the reads\
  \ for which all alignments are to the extra reference sequences added with --genomeFastaFiles\
  \ at the mapping stage.\n                        KeepAllAddedReferences ...  keep\
  \ all alignments to the extra reference sequences added with --genomeFastaFiles\
  \ at the mapping stage.\n\n\noutSAMmultNmax          -1\n    int: max number of\
  \ multiple alignments for a read that will be output to the SAM/BAM files. Note\
  \ that if this value is not equal to -1, the top scoring alignment will be output\
  \ first\n                        -1 ... all alignments (up to --outFilterMultimapNmax)\
  \ will be output\n\noutSAMtlen              1\n    int: calculation method for the\
  \ TLEN field in the SAM/BAM files\n                        1 ... leftmost base of\
  \ the (+)strand mate to rightmost base of the (-)mate. (+)sign for the (+)strand\
  \ mate\n                        2 ... leftmost base of any mate to rightmost base\
  \ of any mate. (+)sign for the mate with the leftmost base. This is different from\
  \ 1 for overlapping mates with protruding ends\n\noutBAMcompression       1\n  \
  \  int: -1 to 10  BAM compression level, -1=default compression (6?), 0=no compression,\
  \ 10=maximum compression\n\noutBAMsortingThreadN    0\n    int: >=0: number of threads\
  \ for BAM sorting. 0 will default to min(6,--runThreadN).\n\noutBAMsortingBinsN\
  \      50\n    int: >0:  number of genome bins fo coordinate-sorting\n\n### BAM\
  \ processing\nbamRemoveDuplicatesType  -\n    string: mark duplicates in the BAM\
  \ file, for now only works with (i) sorted BAM fed with inputBAMfile, and (ii) for\
  \ paired-end alignments only\n                        -                       ...\
  \ no duplicate removal/marking\n                        UniqueIdentical        \
  \ ... mark all multimappers, and duplicate unique mappers. The coordinates, FLAG,\
  \ CIGAR must be identical\n                        UniqueIdenticalNotMulti  ...\
  \ mark duplicate unique mappers but not multimappers.\n\nbamRemoveDuplicatesMate2basesN\
  \   0\n    int>0: number of bases from the 5' of mate 2 to use in collapsing (e.g.\
  \ for RAMPAGE)\n\n### Output Wiggle\noutWigType          None\n    string(s): type\
  \ of signal output, e.g. \"bedGraph\" OR \"bedGraph read1_5p\". Requires sorted\
  \ BAM: --outSAMtype BAM SortedByCoordinate .\n                    1st word:\n  \
  \                  None       ... no signal output\n                    bedGraph\
  \   ... bedGraph format\n                    wiggle     ... wiggle format\n    \
  \                2nd word:\n                    read1_5p   ... signal from only\
  \ 5' of the 1st read, useful for CAGE/RAMPAGE etc\n                    read2   \
  \   ... signal from only 2nd read\n\noutWigStrand        Stranded\n    string: strandedness\
  \ of wiggle/bedGraph output\n                    Stranded   ...  separate strands,\
  \ str1 and str2\n                    Unstranded ...  collapsed strands\n\noutWigReferencesPrefix\
  \    -\n    string: prefix matching reference names to include in the output wiggle\
  \ file, e.g. \"chr\", default \"-\" - include all references\n\noutWigNorm     \
  \         RPM\n    string: type of normalization for the signal\n              \
  \          RPM    ... reads per million of mapped reads\n                      \
  \  None   ... no normalization, \"raw\" counts\n\n### Output Filtering\noutFilterType\
  \                   Normal\n    string: type of filtering\n                    \
  \            Normal  ... standard filtering using only current alignment\n     \
  \                           BySJout ... keep only those reads that contain junctions\
  \ that passed filtering into SJ.out.tab\n\noutFilterMultimapScoreRange     1\n \
  \   int: the score range below the maximum score for multimapping alignments\n\n\
  outFilterMultimapNmax           10\n    int: maximum number of loci the read is\
  \ allowed to map to. Alignments (all of them) will be output only if the read maps\
  \ to no more loci than this value.\n         Otherwise no alignments will be output,\
  \ and the read will be counted as \"mapped to too many loci\" in the Log.final.out\
  \ .\n\noutFilterMismatchNmax           10\n    int: alignment will be output only\
  \ if it has no more mismatches than this value.\n\noutFilterMismatchNoverLmax  \
  \    0.3\n    real: alignment will be output only if its ratio of mismatches to\
  \ *mapped* length is less than or equal to this value.\n\noutFilterMismatchNoverReadLmax\
  \  1.0\n    real: alignment will be output only if its ratio of mismatches to *read*\
  \ length is less than or equal to this value.\n\n\noutFilterScoreMin           \
  \    0\n    int: alignment will be output only if its score is higher than or equal\
  \ to this value.\n\noutFilterScoreMinOverLread      0.66\n    real: same as outFilterScoreMin,\
  \ but  normalized to read length (sum of mates' lengths for paired-end reads)\n\n\
  outFilterMatchNmin              0\n    int: alignment will be output only if the\
  \ number of matched bases is higher than or equal to this value.\n\noutFilterMatchNminOverLread\
  \     0.66\n    real: sam as outFilterMatchNmin, but normalized to the read length\
  \ (sum of mates' lengths for paired-end reads).\n\noutFilterIntronMotifs       \
  \    None\n    string: filter alignment using their motifs\n\t\t\t\tNone       \
  \                    ... no filtering\n\t\t\t\tRemoveNoncanonical             ...\
  \ filter out alignments that contain non-canonical junctions\n\t\t\t\tRemoveNoncanonicalUnannotated\
  \  ... filter out alignments that contain non-canonical unannotated junctions when\
  \ using annotated splice junctions database. The annotated non-canonical junctions\
  \ will be kept.\n\noutFilterIntronStrands          RemoveInconsistentStrands\n \
  \   string: filter alignments\n                RemoveInconsistentStrands      ...\
  \ remove alignments that have junctions with inconsistent strands\n            \
  \    None                           ... no filtering\n\n### Output Filtering: Splice\
  \ Junctions\noutSJfilterReads                All\n    string: which reads to consider\
  \ for collapsed splice junctions output\n                All: all reads, unique-\
  \ and multi-mappers\n                Unique: uniquely mapping reads only\n\noutSJfilterOverhangMin\
  \          30  12  12  12\n    4 integers:    minimum overhang length for splice\
  \ junctions on both sides for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif,\
  \ (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that\
  \ motif\n                                does not apply to annotated junctions\n\
  \noutSJfilterCountUniqueMin       3   1   1   1\n    4 integers: minimum uniquely\
  \ mapping read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC\
  \ motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output\
  \ for that motif\n                                Junctions are output if one of\
  \ outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied\n\
  \                                does not apply to annotated junctions\n\noutSJfilterCountTotalMin\
  \     3   1   1   1\n    4 integers: minimum total (multi-mapping+unique) read count\
  \ per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG\
  \ and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif\n\
  \                                Junctions are output if one of outSJfilterCountUniqueMin\
  \ OR outSJfilterCountTotalMin conditions are satisfied\n                       \
  \         does not apply to annotated junctions\n\noutSJfilterDistToOtherSJmin \
  \    10  0   5   10\n    4 integers>=0: minimum allowed distance to other junctions'\
  \ donor/acceptor\n                                does not apply to annotated junctions\n\
  \noutSJfilterIntronMaxVsReadN        50000 100000 200000\n    N integers>=0: maximum\
  \ gap allowed for junctions supported by 1,2,3,,,N reads\n                     \
  \           i.e. by default junctions supported by 1 read can have gaps <=50000b,\
  \ by 2 reads: <=100000b, by 3 reads: <=200000. by >=4 reads any gap <=alignIntronMax\n\
  \                                does not apply to annotated junctions\n\n### Scoring\n\
  scoreGap                     0\n    int: splice junction penalty (independent on\
  \ intron motif)\n\nscoreGapNoncan               -8\n    int: non-canonical junction\
  \ penalty (in addition to scoreGap)\n\nscoreGapGCAG                 -4\n    GC/AG\
  \ and CT/GC junction penalty (in addition to scoreGap)\n\nscoreGapATAC         \
  \        -8\n    AT/AC  and GT/AT junction penalty  (in addition to scoreGap)\n\n\
  scoreGenomicLengthLog2scale   -0.25\n    extra score logarithmically scaled with\
  \ genomic length of the alignment: scoreGenomicLengthLog2scale*log2(genomicLength)\n\
  \nscoreDelOpen                 -2\n    deletion open penalty\n\nscoreDelBase   \
  \              -2\n    deletion extension penalty per base (in addition to scoreDelOpen)\n\
  \nscoreInsOpen                 -2\n    insertion open penalty\n\nscoreInsBase  \
  \               -2\n    insertion extension penalty per base (in addition to scoreInsOpen)\n\
  \nscoreStitchSJshift           1\n    maximum score reduction while searching for\
  \ SJ boundaries in the stitching step\n\n\n### Alignments and Seeding\n\nseedSearchStartLmax\
  \             50\n    int>0: defines the search start point through the read - the\
  \ read is split into pieces no longer than this value\n\nseedSearchStartLmaxOverLread\
  \    1.0\n    real: seedSearchStartLmax normalized to read length (sum of mates'\
  \ lengths for paired-end reads)\n\nseedSearchLmax       0\n    int>=0: defines the\
  \ maximum length of the seeds, if =0 seed length is not limited\n\nseedMultimapNmax\
  \      10000\n    int>0: only pieces that map fewer than this value are utilized\
  \ in the stitching procedure\n\nseedPerReadNmax       1000\n    int>0: max number\
  \ of seeds per read\n\nseedPerWindowNmax     50\n    int>0: max number of seeds\
  \ per window\n\nseedNoneLociPerWindow    10\n    int>0: max number of one seed loci\
  \ per window\n\nseedSplitMin                12\n    int>0: min length of the seed\
  \ sequences split by Ns or mate gap\n\nseedMapMin              5\n    int>0: min\
  \ length of seeds to be mapped\n\nalignIntronMin              21\n    minimum intron\
  \ size: genomic gap is considered intron if its length>=alignIntronMin, otherwise\
  \ it is considered Deletion\n\nalignIntronMax              0\n    maximum intron\
  \ size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins\n\
  \nalignMatesGapMax            0\n    maximum gap between two mates, if 0, max intron\
  \ gap will be determined by (2^winBinNbits)*winAnchorDistNbins\n\nalignSJoverhangMin\
  \          5\n    int>0: minimum overhang (i.e. block size) for spliced alignments\n\
  \nalignSJstitchMismatchNmax   0 -1 0 0\n    4*int>=0: maximum number of mismatches\
  \ for stitching of the splice junctions (-1: no limit).\n                      \
  \      (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC\
  \ motif, (4) AT/AC and GT/AT motif.\n\nalignSJDBoverhangMin        3\n    int>0:\
  \ minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments\n\n\
  alignSplicedMateMapLmin     0\n    int>0: minimum mapped length for a read mate\
  \ that is spliced\n\nalignSplicedMateMapLminOverLmate 0.66\n    real>0: alignSplicedMateMapLmin\
  \ normalized to mate length\n\nalignWindowsPerReadNmax     10000\n    int>0: max\
  \ number of windows per read\n\nalignTranscriptsPerWindowNmax       100\n    int>0:\
  \ max number of transcripts per window\n\nalignTranscriptsPerReadNmax          \
  \     10000\n    int>0: max number of different alignments per read to consider\n\
  \nalignEndsType           Local\n    string: type of read ends alignment\n     \
  \                   Local             ... standard local alignment with soft-clipping\
  \ allowed\n                        EndToEnd          ... force end-to-end read alignment,\
  \ do not soft-clip\n                        Extend5pOfRead1   ... fully extend only\
  \ the 5p of the read1, all other ends: local alignment\n                       \
  \ Extend5pOfReads12 ... fully extend only the 5p of the both read1 and read2, all\
  \ other ends: local alignment\n\nalignEndsProtrude       0    ConcordantPair\n \
  \   int, string:        allow protrusion of alignment ends, i.e. start (end) of\
  \ the +strand mate downstream of the start (end) of the -strand mate\n         \
  \               1st word: int: maximum number of protrusion bases allowed\n    \
  \                    2nd word: string:\n                                       \
  \     ConcordantPair ... report alignments with non-zero protrusion as concordant\
  \ pairs\n                                            DiscordantPair ... report alignments\
  \ with non-zero protrusion as discordant pairs\n\nalignSoftClipAtReferenceEnds \
  \   Yes\n    string: allow the soft-clipping of the alignments past the end of the\
  \ chromosomes\n                                Yes ... allow\n                 \
  \               No  ... prohibit, useful for compatibility with Cufflinks\n\nalignInsertionFlush\
  \     None\n    string: how to flush ambiguous insertion positions\n           \
  \             None    ... insertions are not flushed\n                        Right\
  \   ... insertions are flushed to the right\n\n### Paired-End reads\npeOverlapNbasesMin\
  \          0\n    int>=0:             minimum number of overlap bases to trigger\
  \ mates merging and realignment\n\npeOverlapMMp                0.01\n    real, >=0\
  \ & <1:     maximum proportion of mismatched bases in the overlap area\n\n### Windows,\
  \ Anchors, Binning\n\nwinAnchorMultimapNmax           50\n    int>0: max number\
  \ of loci anchors are allowed to map to\n\nwinBinNbits                     16\n\
  \    int>0: =log2(winBin), where winBin is the size of the bin for the windows/clustering,\
  \ each window will occupy an integer number of bins.\n\nwinAnchorDistNbins     \
  \         9\n    int>0: max number of bins between two anchors that allows aggregation\
  \ of anchors into one window\n\nwinFlankNbins                   4\n    int>0: log2(winFlank),\
  \ where win Flank is the size of the left and right flanking regions for each window\n\
  \nwinReadCoverageRelativeMin      0.5\n    real>=0: minimum relative coverage of\
  \ the read sequence by the seeds in a window, for STARlong algorithm only.\n\nwinReadCoverageBasesMin\
  \      0\n    int>0: minimum number of bases covered by the seeds in a window ,\
  \ for STARlong algorithm only.\n\n### Chimeric Alignments\nchimOutType         \
  \        Junctions\n    string(s): type of chimeric output\n                   \
  \         Junctions       ... Chimeric.out.junction\n                          \
  \  SeparateSAMold  ... output old SAM into separate Chimeric.out.sam file\n    \
  \                        WithinBAM       ... output into main aligned BAM files\
  \ (Aligned.*.bam)\n                            WithinBAM HardClip  ... (default)\
  \ hard-clipping in the CIGAR for supplemental chimeric alignments (default if no\
  \ 2nd word is present)\n                            WithinBAM SoftClip  ... soft-clipping\
  \ in the CIGAR for supplemental chimeric alignments\n\nchimSegmentMin          \
  \    0\n    int>=0: minimum length of chimeric segment length, if ==0, no chimeric\
  \ output\n\nchimScoreMin                0\n    int>=0: minimum total (summed) score\
  \ of the chimeric segments\n\nchimScoreDropMax            20\n    int>=0: max drop\
  \ (difference) of chimeric score (the sum of scores of all chimeric segments) from\
  \ the read length\n\nchimScoreSeparation         10\n    int>=0: minimum difference\
  \ (separation) between the best chimeric score and the next one\n\nchimScoreJunctionNonGTAG\
  \    -1\n    int: penalty for a non-GT/AG chimeric junction\n\nchimJunctionOverhangMin\
  \     20\n    int>=0: minimum overhang for a chimeric junction\n\nchimSegmentReadGapMax\
  \       0\n    int>=0: maximum gap in the read sequence between chimeric segments\n\
  \nchimFilter                  banGenomicN\n    string(s): different filters for\
  \ chimeric alignments\n                            None ... no filtering\n     \
  \                       banGenomicN ... Ns are not allowed in the genome sequence\
  \ around the chimeric junction\n\nchimMainSegmentMultNmax        10\n    int>=1:\
  \ maximum number of multi-alignments for the main chimeric segment. =1 will prohibit\
  \ multimapping main segments.\n\nchimMultimapNmax                    0\n    int>=0:\
  \ maximum number of chimeric multi-alignments\n                                0\
  \ ... use the old scheme for chimeric detection which only considered unique alignments\n\
  \nchimMultimapScoreRange          1\n    int>=0: the score range for multi-mapping\
  \ chimeras below the best chimeric score. Only works with --chimMultimapNmax > 1\n\
  \nchimNonchimScoreDropMin         20\n    int>=0: to trigger chimeric detection,\
  \ the drop in the best non-chimeric alignment score with respect to the read length\
  \ has to be greater than this value\n\nchimOutJunctionFormat           0\n    int:\
  \ formatting type for the Chimeric.out.junction file\n                         \
  \       0 ... no comment lines/headers\n                                1 ... comment\
  \ lines at the end of the file: command line and Nreads: total, unique/multi-mapping\n\
  \n### Quantification of Annotations\nquantMode                   -\n    string(s):\
  \ types of quantification requested\n                            -             \
  \   ... none\n                            TranscriptomeSAM ... output SAM/BAM alignments\
  \ to transcriptome into a separate file\n                            GeneCounts\
  \       ... count reads per gene\n\nquantTranscriptomeBAMcompression    1      \
  \ 1\n    int: -2 to 10  transcriptome BAM compression level\n                  \
  \          -2  ... no BAM output\n                            -1  ... default compression\
  \ (6?)\n                             0  ... no compression\n                   \
  \          10 ... maximum compression\n\nquantTranscriptomeBan       IndelSoftclipSingleend\n\
  \    string: prohibit various alignment type\n                            IndelSoftclipSingleend\
  \  ... prohibit indels, soft clipping and single-end alignments - compatible with\
  \ RSEM\n                            Singleend               ... prohibit single-end\
  \ alignments\n\n### 2-pass Mapping\ntwopassMode                 None\n    string:\
  \ 2-pass mapping mode.\n                            None        ... 1-pass mapping\n\
  \                            Basic       ... basic 2-pass mapping, with all 1st\
  \ pass junctions inserted into the genome indices on the fly\n\ntwopass1readsN \
  \             -1\n    int: number of reads to process for the 1st step. Use very\
  \ large number (or default -1) to map all reads in the first step.\n\n\n### WASP\
  \ parameters\nwaspOutputMode              None\n    string: WASP allele-specific\
  \ output type. This is re-implementation of the original WASP mappability filtering\
  \ by Bryce van de Geijn, Graham McVicker, Yoav Gilad & Jonathan K Pritchard. Please\
  \ cite the original WASP paper: Nature Methods 12, 1061–1063 (2015), https://www.nature.com/articles/nmeth.3582\
  \ .\n                            SAMtag      ... add WASP tags to the alignments\
  \ that pass WASP filtering\n\n### STARsolo (single cell RNA-seq) parameters\nsoloType\
  \                    None\n    string(s): type of single-cell RNA-seq\n        \
  \                    CB_UMI_Simple   ... (a.k.a. Droplet) one UMI and one Cell Barcode\
  \ of fixed length in read2, e.g. Drop-seq and 10X Chromium.\n                  \
  \          CB_UMI_Complex  ... one UMI of fixed length, but multiple Cell Barcodes\
  \ of varying length, as well as adapters sequences are allowed in read2 only, e.g.\
  \ inDrop.\n                            CB_samTagOut    ... output Cell Barcode as\
  \ CR and/or CB SAm tag. No UMI counting. --readFilesIn cDNA_read1 [cDNA_read2 if\
  \ paired-end] CellBarcode_read . Requires --outSAMtype BAM Unsorted [and/or SortedByCoordinate]\n\
  \                            SmartSeq        ... Smart-seq: each cell in a separate\
  \ FASTQ (paired- or single-end), barcodes are corresponding read-groups, no UMI\
  \ sequences, alignments deduplicated according to alignment start and end (after\
  \ extending soft-clipped bases)\n\nsoloCBwhitelist             -\n    string(s):\
  \ file(s) with whitelist(s) of cell barcodes. Only --soloType CB_UMI_Complex allows\
  \ more than one whitelist file.\n                            None            ...\
  \ no whitelist: all cell barcodes are allowed\n\nsoloCBstart                 1\n\
  \    int>0: cell barcode start base\n\nsoloCBlen                   16\n    int>0:\
  \ cell barcode length\n\nsoloUMIstart                17\n    int>0: UMI start base\n\
  \nsoloUMIlen                  10\n    int>0: UMI length\n\nsoloBarcodeReadLength\
  \       1\n    int: length of the barcode read\n                            1  \
  \ ... equal to sum of soloCBlen+soloUMIlen\n                            0   ...\
  \ not defined, do not check\n\nsoloCBposition              -\n    strings(s)   \
  \           position of Cell Barcode(s) on the barcode read.\n                 \
  \           Presently only works with --soloType CB_UMI_Complex, and barcodes are\
  \ assumed to be on Read2.\n                            Format for each barcode:\
  \ startAnchor_startPosition_endAnchor_endPosition\n                            start(end)Anchor\
  \ defines the Anchor Base for the CB: 0: read start; 1: read end; 2: adapter start;\
  \ 3: adapter end\n                            start(end)Position is the 0-based\
  \ position with of the CB start(end) with respect to the Anchor Base\n         \
  \                   String for different barcodes are separated by space.\n    \
  \                        Example: inDrop (Zilionis et al, Nat. Protocols, 2017):\n\
  \                            --soloCBposition  0_0_2_-1  3_1_3_8\n\nsoloUMIposition\
  \             -\n    string                  position of the UMI on the barcode\
  \ read, same as soloCBposition\n                            Example: inDrop (Zilionis\
  \ et al, Nat. Protocols, 2017):\n                            --soloCBposition  3_9_3_14\n\
  \nsoloAdapterSequence         -\n    string:                 adapter sequence to\
  \ anchor barcodes.\n\nsoloAdapterMismatchesNmax   1\n    int>0:                \
  \  maximum number of mismatches allowed in adapter sequence.\n\nsoloCBmatchWLtype\
  \           1MM_multi\n    string:                 matching the Cell Barcodes to\
  \ the WhiteList\n                            Exact                   ... only exact\
  \ matches allowed\n                            1MM                     ... only\
  \ one match in whitelist with 1 mismatched base allowed. Allowed CBs have to have\
  \ at least one read with exact match.\n                            1MM_multi   \
  \            ... multiple matches in whitelist with 1 mismatched base allowed, posterior\
  \ probability calculation is used choose one of the matches.\n                 \
  \                                       Allowed CBs have to have at least one read\
  \ with exact match. Similar to CellRanger 2.2.0\n                            1MM_multi_pseudocounts\
  \  ... same as 1MM_Multi, but pseudocounts of 1 are added to all whitelist barcodes.\n\
  \                                                        Similar to CellRanger 3.x.x\n\
  \nsoloStrand                  Forward\n    string: strandedness of the solo libraries:\n\
  \                            Unstranded  ... no strand information\n           \
  \                 Forward     ... read strand same as the original RNA molecule\n\
  \                            Reverse     ... read strand opposite to the original\
  \ RNA molecule\n\nsoloFeatures                Gene\n    string(s):             \
  \ genomic features for which the UMI counts per Cell Barcode are collected\n   \
  \                         Gene            ... genes: reads match the gene transcript\n\
  \                            SJ              ... splice junctions: reported in SJ.out.tab\n\
  \                            GeneFull        ... full genes: count all reads overlapping\
  \ genes' exons and introns\n\n#####UnderDevelopment_begin : not supported - do not\
  \ use\n                            Transcript3p    ... quantification of transcript\
  \ for 3' protocols\n#####UnderDevelopment_end\n\nsoloUMIdedup                1MM_All\n\
  \    string(s):              type of UMI deduplication (collapsing) algorithm\n\
  \                            1MM_All             ... all UMIs with 1 mismatch distance\
  \ to each other are collapsed (i.e. counted once)\n                            1MM_Directional\
  \     ... follows the \"directional\" method from the UMI-tools by Smith, Heger\
  \ and Sudbery (Genome Research 2017).\n                            Exact       \
  \        ... only exactly matching UMIs are collapsed\n                        \
  \    NoDedup             ... no deduplication of UMIs, count all reads. Allowed\
  \ for --soloType SmartSeq\n\nsoloUMIfiltering            -\n    string(s)      \
  \         type of UMI filtering\n                            -               ...\
  \ basic filtering: remove UMIs with N and homopolymers (similar to CellRanger 2.2.0)\n\
  \                            MultiGeneUMI    ... remove lower-count UMIs that map\
  \ to more than one gene (introduced in CellRanger 3.x.x)\n\nsoloOutFileNames   \
  \         Solo.out/          features.tsv barcodes.tsv        matrix.mtx\n    string(s)\
  \               file names for STARsolo output:\n                            file_name_prefix\
  \   gene_names   barcode_sequences   cell_feature_count_matrix\n\nsoloCellFilter\
  \              CellRanger2.2 3000 0.99 10\n    string(s):              cell filtering\
  \ type and parameters\n                            CellRanger2.2   ... simple filtering\
  \ of CellRanger 2.2, followed by three numbers: number of expected cells, robust\
  \ maximum percentile for UMI count, maximum to minimum ratio for UMI count\n   \
  \                         TopCells        ... only report top cells by UMI count,\
  \ followed by the exact number of cells\n                            None      \
  \      ... do not output filtered cells\n\nsoloOutFormatFeaturesGeneField3\t\"Gene\
  \ Expression\"\n\tstring(s):\t\t\t\tfield 3 in the Gene features.tsv file. If \"\
  -\", then no 3rd field is output.\n\n#####UnderDevelopment_begin : not supported\
  \ - do not use\nsoloClusterCBfile           -\n    string:                 file\
  \ containing the cluster information for cell barcodes, two columns: CB cluster_index.\
  \ Only used with --soloFeatures Transcript3p\n#####UnderDevelopment_end\n"
generated_using:
- --help
