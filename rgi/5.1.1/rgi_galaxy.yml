&id003 !Command
command:
- rgi
- galaxy
positional: []
named:
- !Flag
  description: path to CARD data and blast databases
  synonyms:
  - --galaxy_database
  args: !SimpleFlagArg
    name: GALAXY_DATABASE
  optional: true
- !Flag
  description: debug mode
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - rgi
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - rgi
    - tab
    positional: []
    named:
    - !Flag
      description: "must be a rgi json result file\n"
      synonyms:
      - -i
      - --afile
      args: !SimpleFlagArg
        name: AFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi tab [-h] -i AFILE\n\nResistance Gene Identifier - 5.1.1\
      \ - Tab-delimited\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  -i AFILE, --afile AFILE\n                       \
      \ must be a rgi json result file\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - rgi
    - kmer_query
    positional:
    - !Positional
      description: ''
      position: 0
      name: rgi
      optional: false
    named:
    - !Flag
      description: '[--local] [--debug]'
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "Input file (bam file from RGI*BWT, json file of RGI\nresults,\
        \ fasta file of sequences)"
      synonyms:
      - -i
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: "Specify if the input file for analysis is a bam file\ngenerated\
        \ from RGI*BWT"
      synonyms:
      - --bwt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify if the input file is a RGI results json file
      synonyms:
      - --rgi
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify if the input file is a fasta file of sequences
      synonyms:
      - --fasta
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: length of k
      synonyms:
      - -k
      - --kmer_size
      args: !SimpleFlagArg
        name: K
      optional: true
    - !Flag
      description: "Minimum number of kmers in the called category for the\nclassification\
        \ to be made (default=10)."
      synonyms:
      - -m
      - --minimum
      args: !SimpleFlagArg
        name: MIN
      optional: true
    - !Flag
      description: number of threads (CPUs) to use (default=1)
      synonyms:
      - -n
      - --threads
      args: !SimpleFlagArg
        name: THREADS
      optional: true
    - !Flag
      description: Output file name.
      synonyms:
      - -o
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "use local database (default: uses database in\nexecutable directory)"
      synonyms:
      - --local
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi [-h] -i INPUT [--bwt] [--rgi] [--fasta] -k K [-m MIN] [-n\
      \ THREADS]\n           -o OUTPUT [--local] [--debug]\n\nTests sequenes using\
      \ CARD*kmers\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -i INPUT, --input INPUT\n                        Input\
      \ file (bam file from RGI*BWT, json file of RGI\n                        results,\
      \ fasta file of sequences)\n  --bwt                 Specify if the input file\
      \ for analysis is a bam file\n                        generated from RGI*BWT\n\
      \  --rgi                 Specify if the input file is a RGI results json file\n\
      \  --fasta               Specify if the input file is a fasta file of sequences\n\
      \  -k K, --kmer_size K   length of k\n  -m MIN, --minimum MIN\n            \
      \            Minimum number of kmers in the called category for the\n      \
      \                  classification to be made (default=10).\n  -n THREADS, --threads\
      \ THREADS\n                        number of threads (CPUs) to use (default=1)\n\
      \  -o OUTPUT, --output OUTPUT\n                        Output file name.\n \
      \ --local               use local database (default: uses database in\n    \
      \                    executable directory)\n  --debug               debug mode\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - load
    positional: []
    named:
    - !Flag
      description: must be a card database json file
      synonyms:
      - -i
      - --card_json
      args: !SimpleFlagArg
        name: CARD_JSON
      optional: true
    - !Flag
      description: annotated reference FASTA
      synonyms:
      - --card_annotation
      args: !SimpleFlagArg
        name: CARD_ANNOTATION
      optional: true
    - !Flag
      description: annotated reference FASTA
      synonyms:
      - --wildcard_annotation
      args: !SimpleFlagArg
        name: WILDCARD_ANNOTATION
      optional: true
    - !Flag
      description: wildcard index file (index-for-model-sequences.txt)
      synonyms:
      - --wildcard_index
      args: !SimpleFlagArg
        name: WILDCARD_INDEX
      optional: true
    - !Flag
      description: specify variants version used
      synonyms:
      - --wildcard_version
      args: !SimpleFlagArg
        name: WILDCARD_VERSION
      optional: true
    - !Flag
      description: annotated reference FASTA
      synonyms:
      - --baits_annotation
      args: !SimpleFlagArg
        name: BAITS_ANNOTATION
      optional: true
    - !Flag
      description: baits index file (baits-probes-with-sequence-info.txt)
      synonyms:
      - --baits_index
      args: !SimpleFlagArg
        name: BAITS_INDEX
      optional: true
    - !Flag
      description: json of kmer database
      synonyms:
      - --kmer_database
      args: !SimpleFlagArg
        name: KMER_DATABASE
      optional: true
    - !Flag
      description: txt file of all amr kmers
      synonyms:
      - --amr_kmers
      args: !SimpleFlagArg
        name: AMR_KMERS
      optional: true
    - !Flag
      description: kmer size if loading kmer files
      synonyms:
      - --kmer_size
      args: !SimpleFlagArg
        name: KMER_SIZE
      optional: true
    - !Flag
      description: "use local database (default: uses database in\nexecutable directory)"
      synonyms:
      - --local
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi load [-h] [-i CARD_JSON] [--card_annotation CARD_ANNOTATION]\n\
      \                [--wildcard_annotation WILDCARD_ANNOTATION]\n             \
      \   [--wildcard_index WILDCARD_INDEX]\n                [--wildcard_version WILDCARD_VERSION]\n\
      \                [--baits_annotation BAITS_ANNOTATION]\n                [--baits_index\
      \ BAITS_INDEX] [--kmer_database KMER_DATABASE]\n                [--amr_kmers\
      \ AMR_KMERS] [--kmer_size KMER_SIZE] [--local]\n                [--debug]\n\n\
      Resistance Gene Identifier - 5.1.1 - Load\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  -i CARD_JSON, --card_json CARD_JSON\n\
      \                        must be a card database json file\n  --card_annotation\
      \ CARD_ANNOTATION\n                        annotated reference FASTA\n  --wildcard_annotation\
      \ WILDCARD_ANNOTATION\n                        annotated reference FASTA\n \
      \ --wildcard_index WILDCARD_INDEX\n                        wildcard index file\
      \ (index-for-model-sequences.txt)\n  --wildcard_version WILDCARD_VERSION\n \
      \                       specify variants version used\n  --baits_annotation\
      \ BAITS_ANNOTATION\n                        annotated reference FASTA\n  --baits_index\
      \ BAITS_INDEX\n                        baits index file (baits-probes-with-sequence-info.txt)\n\
      \  --kmer_database KMER_DATABASE\n                        json of kmer database\n\
      \  --amr_kmers AMR_KMERS\n                        txt file of all amr kmers\n\
      \  --kmer_size KMER_SIZE\n                        kmer size if loading kmer\
      \ files\n  --local               use local database (default: uses database\
      \ in\n                        executable directory)\n  --debug             \
      \  debug mode\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - rgi
    - card_annotation
    positional: []
    named:
    - !Flag
      description: card.json file
      synonyms:
      - -i
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: adds ncbi accession to FASTA headers
      synonyms:
      - --ncbi
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi card_annotation [-h] -i INPUT [--ncbi]\n\nCreates card\
      \ annotations for RGI BWT from card.json\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  -i INPUT, --input INPUT\n  \
      \                      card.json file\n  --ncbi                adds ncbi accession\
      \ to FASTA headers\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - tm
    positional:
    - !Positional
      description: -o OUTPUT_FILE, --output_file OUTPUT_FILE
      position: 0
      name: input_file
      optional: false
    - !Positional
      description: -t FILTER_TEMPERATURE, --filter_temperature FILTER_TEMPERATURE
      position: 1
      name: output_file
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -i
      - --input_file
      args: !SimpleFlagArg
        name: INPUT_FILE
      optional: true
    - !Flag
      description: removes temporary files
      synonyms:
      - --clean
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -t
      args: !SimpleFlagArg
        name: FILTER_TEMPERATURE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: OUTPUT_FILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi tm [-h] [-i INPUT_FILE] [-o OUTPUT_FILE] [-t FILTER_TEMPERATURE]\n\
      \              [--clean] [--debug]\n\nTM\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  -i INPUT_FILE, --input_file\
      \ INPUT_FILE\n                        input_file\n  -o OUTPUT_FILE, --output_file\
      \ OUTPUT_FILE\n                        output_file\n  -t FILTER_TEMPERATURE,\
      \ --filter_temperature FILTER_TEMPERATURE\n                        desired melting\
      \ temperature (default=65).\n  --clean               removes temporary files\n\
      \  --debug               debug mode\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - kmer_build
    positional:
    - !Positional
      description: -n THREADS, --threads THREADS
      position: 0
      name: sequences.
      optional: false
    named:
    - !Flag
      description: input directory of prevalence data
      synonyms:
      - -i
      - --input_directory
      args: !SimpleFlagArg
        name: INPUT_DIRECTORY
      optional: true
    - !Flag
      description: "fasta file of CARD reference sequences. If missing,\nrun 'rgi\
        \ card_annotation' to generate."
      synonyms:
      - -c
      - --card
      args: !SimpleFlagArg
        name: CARD_FASTA
      optional: true
    - !Flag
      description: k-mer size (e.g., 61)
      synonyms:
      - -k
      args: !SimpleFlagArg
        name: K
      optional: true
    - !Flag
      description: skips the concatenation and splitting of the CARD*R*V
      synonyms:
      - --skip
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "number of kmers to query at a time using pyahocorasick\n--the\
        \ greater the number the more memory usage\n(default=100,000)\n"
      synonyms:
      - --batch_size
      args: !SimpleFlagArg
        name: BATCH_SIZE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -n
      args: !SimpleFlagArg
        name: THREADS
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi [-h] [-i INPUT_DIRECTORY] -c CARD_FASTA -k K [--skip] [-n\
      \ THREADS]\n           [--batch_size BATCH_SIZE]\n\nBuilds the kmer sets for\
      \ CARD*kmers\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n\
      \                        input directory of prevalence data\n  -c CARD_FASTA,\
      \ --card CARD_FASTA\n                        fasta file of CARD reference sequences.\
      \ If missing,\n                        run 'rgi card_annotation' to generate.\n\
      \  -k K                  k-mer size (e.g., 61)\n  --skip                skips\
      \ the concatenation and splitting of the CARD*R*V\n                        sequences.\n\
      \  -n THREADS, --threads THREADS\n                        number of threads\
      \ (CPUs) to use (default=1)\n  --batch_size BATCH_SIZE\n                   \
      \     number of kmers to query at a time using pyahocorasick\n             \
      \           --the greater the number the more memory usage\n               \
      \         (default=100,000)\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - baits_annotation
    positional: []
    named:
    - !Flag
      description: "index file with baits information\n"
      synonyms:
      - --index_file
      args: !SimpleFlagArg
        name: INDEX_FILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi baits_annotation [-h] --index_file INDEX_FILE\n\nCreates\
      \ baits annotations for RGI BWT from baits\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  --index_file INDEX_FILE\n  \
      \                      index file with baits information\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - heatmap
    positional: []
    named:
    - !Flag
      description: Directory containing the RGI .json files (REQUIRED)
      synonyms:
      - -i
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: "The option to organize resistance genes based on a\ncategory."
      synonyms:
      - -cat
      - --category
      args: !ChoiceFlagArg
        choices: !!set
          ? gene_family
          ? resistance_mechanism
          ? drug_class
      optional: true
    - !Flag
      description: Represent samples based on resistance profile.
      synonyms:
      - -f
      - --frequency
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Name for the output EPS and PNG files. The number of\nfiles run\
        \ will automatically be appended to the end of\nthe file name. (default=RGI_heatmap)"
      synonyms:
      - -o
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "Option to use SciPy's hiearchical clustering algorithm\nto cluster\
        \ rows (AMR genes) or columns (samples)."
      synonyms:
      - -clus
      - --cluster
      args: !ChoiceFlagArg
        choices: !!set
          ? both
          ? genes
          ? samples
      optional: true
    - !Flag
      description: "Specify display options for categories\n(deafult=plain)."
      synonyms:
      - -d
      - --display
      args: !ChoiceFlagArg
        choices: !!set
          ? fill
          ? plain
          ? text
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi heatmap [-h] -i INPUT\n                   [-cat {drug_class,resistance_mechanism,gene_family}]\
      \ [-f]\n                   [-o OUTPUT] [-clus {samples,genes,both}]\n      \
      \             [-d {plain,fill,text}] [--debug]\n\nCreates a heatmap when given\
      \ multiple RGI results.\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  -i INPUT, --input INPUT\n                  \
      \      Directory containing the RGI .json files (REQUIRED)\n  -cat {drug_class,resistance_mechanism,gene_family},\
      \ --category {drug_class,resistance_mechanism,gene_family}\n               \
      \         The option to organize resistance genes based on a\n             \
      \           category.\n  -f, --frequency       Represent samples based on resistance\
      \ profile.\n  -o OUTPUT, --output OUTPUT\n                        Name for the\
      \ output EPS and PNG files. The number of\n                        files run\
      \ will automatically be appended to the end of\n                        the\
      \ file name. (default=RGI_heatmap)\n  -clus {samples,genes,both}, --cluster\
      \ {samples,genes,both}\n                        Option to use SciPy's hiearchical\
      \ clustering algorithm\n                        to cluster rows (AMR genes)\
      \ or columns (samples).\n  -d {plain,fill,text}, --display {plain,fill,text}\n\
      \                        Specify display options for categories\n          \
      \              (deafult=plain).\n  --debug               debug mode\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - remove_duplicates
    positional: []
    named:
    - !Flag
      description: input fasta file
      synonyms:
      - -i
      - --input
      args: !SimpleFlagArg
        name: INPUT_FASTA_FILE
      optional: true
    - !Flag
      description: card_annotation input fasta file
      synonyms:
      - --card_annotation
      args: !SimpleFlagArg
        name: CARD_ANNOTATION
      optional: true
    - !Flag
      description: output fasta file
      synonyms:
      - -o
      - --output
      args: !SimpleFlagArg
        name: OUTPUT_FASTA_FILE
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi remove_duplicates [-h] -i INPUT_FASTA_FILE --card_annotation\n\
      \                             CARD_ANNOTATION -o OUTPUT_FASTA_FILE [--debug]\n\
      \nRemoves duplicates sequences from annotationed fasta file\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -i INPUT_FASTA_FILE,\
      \ --input INPUT_FASTA_FILE\n                        input fasta file\n  --card_annotation\
      \ CARD_ANNOTATION\n                        card_annotation input fasta file\n\
      \  -o OUTPUT_FASTA_FILE, --output OUTPUT_FASTA_FILE\n                      \
      \  output fasta file\n  --debug               debug mode\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - Metagenomic
    positional:
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Database
      optional: false
    - !Positional
      description: Loads CARD database, annotations and k-mer database
      position: 1
      name: load
      optional: false
    - !Positional
      description: Removes BLAST databases and temporary files
      position: 2
      name: clean
      optional: false
    - !Positional
      description: Galaxy project wrapper
      position: 0
      name: galaxy
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Genomic
      optional: false
    - !Positional
      description: Runs rgi application
      position: 1
      name: main
      optional: false
    - !Positional
      description: Creates a Tab-delimited from rgi results
      position: 2
      name: tab
      optional: false
    - !Positional
      description: Creates categorical JSON files RGI wheel visualization
      position: 3
      name: parser
      optional: false
    - !Positional
      description: Heatmap for multiple analysis
      position: 4
      name: heatmap
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Metagenomic
      optional: false
    - !Positional
      description: Align reads to CARD and in silico predicted allelic variants (beta)
      position: 1
      name: bwt
      optional: false
    - !Positional
      description: Baits Melting Temperature
      position: 0
      name: tm
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Annotations
      optional: false
    - !Positional
      description: Create fasta files with annotations from card.json
      position: 1
      name: card_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from variants
      position: 2
      name: wildcard_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from baits (experimental)
      position: 3
      name: baits_annotation
      optional: false
    - !Positional
      description: Removes duplicate sequences (experimental)
      position: 4
      name: remove_duplicates
      optional: false
    - !Positional
      description: Build AMR specific k-mers database used for pathogen of origin
        (beta)
      position: 0
      name: kmer_build
      optional: false
    - !Positional
      description: Query sequences against AMR k-mers database to predict pathogen
        of origin (beta)
      position: 1
      name: kmer_query
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: rgi <command> [<args>]\n            commands are:\n       \
      \        ---------------------------------------------------------------------------------------\n\
      \               Database\n               ---------------------------------------------------------------------------------------\n\
      \n               load     Loads CARD database, annotations and k-mer database\n\
      \               clean    Removes BLAST databases and temporary files\n     \
      \          database Information on installed card database\n               galaxy\
      \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
      \               Genomic\n               ---------------------------------------------------------------------------------------\n\
      \n               main     Runs rgi application\n               tab      Creates\
      \ a Tab-delimited from rgi results\n               parser   Creates categorical\
      \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
      \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
      \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
      \               bwt                   Align reads to CARD and in silico predicted\
      \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
      \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
      \               tm                    Baits Melting Temperature\n\n        \
      \       ---------------------------------------------------------------------------------------\n\
      \               Annotations\n               ---------------------------------------------------------------------------------------\n\
      \               card_annotation       Create fasta files with annotations from\
      \ card.json\n               wildcard_annotation   Create fasta files with annotations\
      \ from variants\n               baits_annotation      Create fasta files with\
      \ annotations from baits (experimental)\n               remove_duplicates  \
      \   Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
      \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
      \               \n               kmer_build            Build AMR specific k-mers\
      \ database used for pathogen of origin (beta)\n               kmer_query   \
      \         Query sequences against AMR k-mers database to predict pathogen of\
      \ origin (beta)\n\n               \nrgi: error: argument command: invalid choice:\
      \ 'Metagenomic' (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy',\
      \ 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation',\
      \ 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - Annotations
    positional:
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Database
      optional: false
    - !Positional
      description: Loads CARD database, annotations and k-mer database
      position: 1
      name: load
      optional: false
    - !Positional
      description: Removes BLAST databases and temporary files
      position: 2
      name: clean
      optional: false
    - !Positional
      description: Galaxy project wrapper
      position: 0
      name: galaxy
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Genomic
      optional: false
    - !Positional
      description: Runs rgi application
      position: 1
      name: main
      optional: false
    - !Positional
      description: Creates a Tab-delimited from rgi results
      position: 2
      name: tab
      optional: false
    - !Positional
      description: Creates categorical JSON files RGI wheel visualization
      position: 3
      name: parser
      optional: false
    - !Positional
      description: Heatmap for multiple analysis
      position: 4
      name: heatmap
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Metagenomic
      optional: false
    - !Positional
      description: Align reads to CARD and in silico predicted allelic variants (beta)
      position: 1
      name: bwt
      optional: false
    - !Positional
      description: Baits Melting Temperature
      position: 0
      name: tm
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Annotations
      optional: false
    - !Positional
      description: Create fasta files with annotations from card.json
      position: 1
      name: card_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from variants
      position: 2
      name: wildcard_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from baits (experimental)
      position: 3
      name: baits_annotation
      optional: false
    - !Positional
      description: Removes duplicate sequences (experimental)
      position: 4
      name: remove_duplicates
      optional: false
    - !Positional
      description: Build AMR specific k-mers database used for pathogen of origin
        (beta)
      position: 0
      name: kmer_build
      optional: false
    - !Positional
      description: Query sequences against AMR k-mers database to predict pathogen
        of origin (beta)
      position: 1
      name: kmer_query
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: rgi <command> [<args>]\n            commands are:\n       \
      \        ---------------------------------------------------------------------------------------\n\
      \               Database\n               ---------------------------------------------------------------------------------------\n\
      \n               load     Loads CARD database, annotations and k-mer database\n\
      \               clean    Removes BLAST databases and temporary files\n     \
      \          database Information on installed card database\n               galaxy\
      \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
      \               Genomic\n               ---------------------------------------------------------------------------------------\n\
      \n               main     Runs rgi application\n               tab      Creates\
      \ a Tab-delimited from rgi results\n               parser   Creates categorical\
      \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
      \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
      \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
      \               bwt                   Align reads to CARD and in silico predicted\
      \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
      \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
      \               tm                    Baits Melting Temperature\n\n        \
      \       ---------------------------------------------------------------------------------------\n\
      \               Annotations\n               ---------------------------------------------------------------------------------------\n\
      \               card_annotation       Create fasta files with annotations from\
      \ card.json\n               wildcard_annotation   Create fasta files with annotations\
      \ from variants\n               baits_annotation      Create fasta files with\
      \ annotations from baits (experimental)\n               remove_duplicates  \
      \   Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
      \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
      \               \n               kmer_build            Build AMR specific k-mers\
      \ database used for pathogen of origin (beta)\n               kmer_query   \
      \         Query sequences against AMR k-mers database to predict pathogen of\
      \ origin (beta)\n\n               \nrgi: error: argument command: invalid choice:\
      \ 'Annotations' (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy',\
      \ 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation',\
      \ 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - wildcard_annotation
    positional: []
    named:
    - !Flag
      description: input directory for wildcard
      synonyms:
      - -i
      - --input_directory
      args: !SimpleFlagArg
        name: INPUT_DIRECTORY
      optional: true
    - !Flag
      description: "card.json file\n"
      synonyms:
      - -j
      - --card_json
      args: !SimpleFlagArg
        name: CARD_JSON
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: VERSION
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: specify version downloaded for wildcard / variants
      synonyms:
      - -v
      - --version
      args: !SimpleFlagArg
        name: VERSION
      optional: true
    help_text: "usage: rgi wildcard_annotation [-h] -i INPUT_DIRECTORY -v VERSION\
      \ -j CARD_JSON\n\nCreates card annotations for RGI BWT from Variants or Wilcard\
      \ data\n\noptional arguments:\n  -h, --help            show this help message\
      \ and exit\n  -i INPUT_DIRECTORY, --input_directory INPUT_DIRECTORY\n      \
      \                  input directory for wildcard\n  -v VERSION, --version VERSION\n\
      \                        specify version downloaded for wildcard / variants\n\
      \  -j CARD_JSON, --card_json CARD_JSON\n                        card.json file\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - bwt
    positional:
    - !Positional
      description: -n THREADS, --threads THREADS
      position: 0
      name: aligner
      optional: false
    named:
    - !Flag
      description: raw read one (qc and trimmied)
      synonyms:
      - '-1'
      - --read_one
      args: !SimpleFlagArg
        name: READ_ONE
      optional: true
    - !Flag
      description: raw read two (qc and trimmied)
      synonyms:
      - '-2'
      - --read_two
      args: !SimpleFlagArg
        name: READ_TWO
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -a
      - --aligner
      args: !ChoiceFlagArg
        choices: !!set
          ? bwa
          ? kma
          ? bowtie2
      optional: true
    - !Flag
      description: name of output filename(s)
      synonyms:
      - -o
      - --output_file
      args: !SimpleFlagArg
        name: OUTPUT_FILE
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: removes temporary files
      synonyms:
      - --clean
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "use local database (default: uses database in\nexecutable directory)"
      synonyms:
      - --local
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: include wildcard
      synonyms:
      - --include_wildcard
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: include baits
      synonyms:
      - --include_baits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: filter reads based on MAPQ score
      synonyms:
      - --mapq
      args: !SimpleFlagArg
        name: MAPQ
      optional: true
    - !Flag
      description: filter reads based on mapped reads
      synonyms:
      - --mapped
      args: !SimpleFlagArg
        name: MAPPED
      optional: true
    - !Flag
      description: filter reads based on coverage of reference sequence
      synonyms:
      - --coverage
      args: !SimpleFlagArg
        name: COVERAGE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi bwt [-h] -1 READ_ONE [-2 READ_TWO] [-a {bowtie2,bwa,kma}]\n\
      \               [-n THREADS] -o OUTPUT_FILE [--debug] [--clean] [--local]\n\
      \               [--include_wildcard] [--include_baits] [--mapq MAPQ]\n     \
      \          [--mapped MAPPED] [--coverage COVERAGE]\n\nAligns metagenomic reads\
      \ to CARD and wildCARD reference using bowtie or bwa\nand provide reports.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -1 READ_ONE, --read_one READ_ONE\n                        raw read one (qc\
      \ and trimmied)\n  -2 READ_TWO, --read_two READ_TWO\n                      \
      \  raw read two (qc and trimmied)\n  -a {bowtie2,bwa,kma}, --aligner {bowtie2,bwa,kma}\n\
      \                        aligner\n  -n THREADS, --threads THREADS\n        \
      \                number of threads (CPUs) to use (default=8)\n  -o OUTPUT_FILE,\
      \ --output_file OUTPUT_FILE\n                        name of output filename(s)\n\
      \  --debug               debug mode\n  --clean               removes temporary\
      \ files\n  --local               use local database (default: uses database\
      \ in\n                        executable directory)\n  --include_wildcard  \
      \  include wildcard\n  --include_baits       include baits\n  --mapq MAPQ  \
      \         filter reads based on MAPQ score\n  --mapped MAPPED       filter reads\
      \ based on mapped reads\n  --coverage COVERAGE   filter reads based on coverage\
      \ of reference sequence\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - Genomic
    positional:
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Database
      optional: false
    - !Positional
      description: Loads CARD database, annotations and k-mer database
      position: 1
      name: load
      optional: false
    - !Positional
      description: Removes BLAST databases and temporary files
      position: 2
      name: clean
      optional: false
    - !Positional
      description: Galaxy project wrapper
      position: 0
      name: galaxy
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Genomic
      optional: false
    - !Positional
      description: Runs rgi application
      position: 1
      name: main
      optional: false
    - !Positional
      description: Creates a Tab-delimited from rgi results
      position: 2
      name: tab
      optional: false
    - !Positional
      description: Creates categorical JSON files RGI wheel visualization
      position: 3
      name: parser
      optional: false
    - !Positional
      description: Heatmap for multiple analysis
      position: 4
      name: heatmap
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Metagenomic
      optional: false
    - !Positional
      description: Align reads to CARD and in silico predicted allelic variants (beta)
      position: 1
      name: bwt
      optional: false
    - !Positional
      description: Baits Melting Temperature
      position: 0
      name: tm
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Annotations
      optional: false
    - !Positional
      description: Create fasta files with annotations from card.json
      position: 1
      name: card_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from variants
      position: 2
      name: wildcard_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from baits (experimental)
      position: 3
      name: baits_annotation
      optional: false
    - !Positional
      description: Removes duplicate sequences (experimental)
      position: 4
      name: remove_duplicates
      optional: false
    - !Positional
      description: Build AMR specific k-mers database used for pathogen of origin
        (beta)
      position: 0
      name: kmer_build
      optional: false
    - !Positional
      description: Query sequences against AMR k-mers database to predict pathogen
        of origin (beta)
      position: 1
      name: kmer_query
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: rgi <command> [<args>]\n            commands are:\n       \
      \        ---------------------------------------------------------------------------------------\n\
      \               Database\n               ---------------------------------------------------------------------------------------\n\
      \n               load     Loads CARD database, annotations and k-mer database\n\
      \               clean    Removes BLAST databases and temporary files\n     \
      \          database Information on installed card database\n               galaxy\
      \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
      \               Genomic\n               ---------------------------------------------------------------------------------------\n\
      \n               main     Runs rgi application\n               tab      Creates\
      \ a Tab-delimited from rgi results\n               parser   Creates categorical\
      \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
      \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
      \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
      \               bwt                   Align reads to CARD and in silico predicted\
      \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
      \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
      \               tm                    Baits Melting Temperature\n\n        \
      \       ---------------------------------------------------------------------------------------\n\
      \               Annotations\n               ---------------------------------------------------------------------------------------\n\
      \               card_annotation       Create fasta files with annotations from\
      \ card.json\n               wildcard_annotation   Create fasta files with annotations\
      \ from variants\n               baits_annotation      Create fasta files with\
      \ annotations from baits (experimental)\n               remove_duplicates  \
      \   Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
      \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
      \               \n               kmer_build            Build AMR specific k-mers\
      \ database used for pathogen of origin (beta)\n               kmer_query   \
      \         Query sequences against AMR k-mers database to predict pathogen of\
      \ origin (beta)\n\n               \nrgi: error: argument command: invalid choice:\
      \ 'Genomic' (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy',\
      \ 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation',\
      \ 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - clean
    positional: []
    named:
    - !Flag
      description: "use local database (default: uses database in executable\ndirectory)"
      synonyms:
      - --local
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi clean [-h] [--local] [--debug]\n\nResistance Gene Identifier\
      \ - 5.1.1 - Clean\n\noptional arguments:\n  -h, --help  show this help message\
      \ and exit\n  --local     use local database (default: uses database in executable\n\
      \              directory)\n  --debug     debug mode\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - main
    positional:
    - !Positional
      description: --exclude_nudge       exclude hits nudged from loose to strict
        hits
      position: 0
      name: hits
      optional: false
    named:
    - !Flag
      description: "input file must be in either FASTA (contig and\nprotein) or gzip\
        \ format! e.g myFile.fasta,\nmyFasta.fasta.gz"
      synonyms:
      - -i
      - --input_sequence
      args: !SimpleFlagArg
        name: INPUT_SEQUENCE
      optional: true
    - !Flag
      description: output folder and base filename
      synonyms:
      - -o
      - --output_file
      args: !SimpleFlagArg
        name: OUTPUT_FILE
      optional: true
    - !Flag
      description: specify data input type (default = contig)
      synonyms:
      - -t
      - --input_type
      args: !ChoiceFlagArg
        choices: !!set
          ? contig
          ? protein
      optional: true
    - !Flag
      description: specify alignment tool (default = BLAST)
      synonyms:
      - -a
      - --alignment_tool
      args: !ChoiceFlagArg
        choices: !!set
          ? DIAMOND
          ? BLAST
      optional: true
    - !Flag
      description: "number of threads (CPUs) to use in the BLAST search\n(default=8)"
      synonyms:
      - -n
      - --num_threads
      args: !SimpleFlagArg
        name: THREADS
      optional: true
    - !Flag
      description: include loose hits in addition to strict and perfect
      synonyms:
      - --include_loose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "use local database (default: uses database in\nexecutable directory)"
      synonyms:
      - --local
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: removes temporary files
      synonyms:
      - --clean
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: debug mode
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: use for short contigs to predict partial genes
      synonyms:
      - --low_quality
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: specify a data-type (default = NA)
      synonyms:
      - -d
      - --data
      args: !ChoiceFlagArg
        choices: !!set
          ? chromosome
          ? plasmid
          ? wgs
          ? NA
      optional: true
    - !Flag
      description: "run multiple prodigal jobs simultaneously for contigs\nin a fasta\
        \ file\n"
      synonyms:
      - --split_prodigal_jobs
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: prints software version number
      synonyms:
      - -v
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: rgi main [-h] -i INPUT_SEQUENCE -o OUTPUT_FILE [-t {contig,protein}]\n\
      \                [-a {DIAMOND,BLAST}] [-n THREADS] [--include_loose]\n     \
      \           [--exclude_nudge] [--local] [--clean] [--debug]\n              \
      \  [--low_quality] [-d {wgs,plasmid,chromosome,NA}] [-v]\n                [--split_prodigal_jobs]\n\
      \nResistance Gene Identifier - 5.1.1 - Main\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  -i INPUT_SEQUENCE, --input_sequence\
      \ INPUT_SEQUENCE\n                        input file must be in either FASTA\
      \ (contig and\n                        protein) or gzip format! e.g myFile.fasta,\n\
      \                        myFasta.fasta.gz\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n\
      \                        output folder and base filename\n  -t {contig,protein},\
      \ --input_type {contig,protein}\n                        specify data input\
      \ type (default = contig)\n  -a {DIAMOND,BLAST}, --alignment_tool {DIAMOND,BLAST}\n\
      \                        specify alignment tool (default = BLAST)\n  -n THREADS,\
      \ --num_threads THREADS\n                        number of threads (CPUs) to\
      \ use in the BLAST search\n                        (default=8)\n  --include_loose\
      \       include loose hits in addition to strict and perfect\n             \
      \           hits\n  --exclude_nudge       exclude hits nudged from loose to\
      \ strict hits\n  --local               use local database (default: uses database\
      \ in\n                        executable directory)\n  --clean             \
      \  removes temporary files\n  --debug               debug mode\n  --low_quality\
      \         use for short contigs to predict partial genes\n  -d {wgs,plasmid,chromosome,NA},\
      \ --data {wgs,plasmid,chromosome,NA}\n                        specify a data-type\
      \ (default = NA)\n  -v, --version         prints software version number\n \
      \ --split_prodigal_jobs\n                        run multiple prodigal jobs\
      \ simultaneously for contigs\n                        in a fasta file\n"
    generated_using: *id002
  - &id004 !Command
    command:
    - rgi
    - parser
    positional: []
    named:
    - !Flag
      description: RGI results in a .json file
      synonyms:
      - -i
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: Name/identifier for the output categorical .json files
      synonyms:
      - -o
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: Include loose hits in addition to strict and perfect
      synonyms:
      - --include_loose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -t
      args: !SimpleFlagArg
        name: TYPE
      optional: true
    parent: *id001
    subcommands:
    - !Command
      command:
      - rgi
      - parser
      - hits
      positional:
      - !Positional
        description: ''
        position: 0
        name: rgi
        optional: false
      - !Positional
        description: ''
        position: 1
        name: parser
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - -t
        args: !SimpleFlagArg
          name: TYPE
        optional: true
      - !Flag
        description: ''
        synonyms:
        - --include_loose
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -o
        args: !SimpleFlagArg
          name: OUTPUT
        optional: true
      - !Flag
        description: ''
        synonyms:
        - -i
        args: !SimpleFlagArg
          name: INPUT
        optional: true
      parent: *id004
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose] [-t\
        \ TYPE]\nrgi parser: error: the following arguments are required: -i/--input\n"
      generated_using: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: rgi parser [-h] -i INPUT [-o OUTPUT] [--include_loose] [-t\
      \ TYPE]\n\nCreates categorical .json files RGI wheel visualization. An input\
      \ .json file\ncontaining the RGI results must be input.\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -i INPUT, --input\
      \ INPUT\n                        RGI results in a .json file\n  -o OUTPUT, --output\
      \ OUTPUT\n                        Name/identifier for the output categorical\
      \ .json files\n  --include_loose       Include loose hits in addition to strict\
      \ and perfect\n                        hits\n  -t TYPE, --type TYPE  type of\
      \ input sequence: contig, protein or read\n"
    generated_using: *id002
  - !Command
    command:
    - rgi
    - Database
    positional:
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Database
      optional: false
    - !Positional
      description: Loads CARD database, annotations and k-mer database
      position: 1
      name: load
      optional: false
    - !Positional
      description: Removes BLAST databases and temporary files
      position: 2
      name: clean
      optional: false
    - !Positional
      description: Galaxy project wrapper
      position: 0
      name: galaxy
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Genomic
      optional: false
    - !Positional
      description: Runs rgi application
      position: 1
      name: main
      optional: false
    - !Positional
      description: Creates a Tab-delimited from rgi results
      position: 2
      name: tab
      optional: false
    - !Positional
      description: Creates categorical JSON files RGI wheel visualization
      position: 3
      name: parser
      optional: false
    - !Positional
      description: Heatmap for multiple analysis
      position: 4
      name: heatmap
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Metagenomic
      optional: false
    - !Positional
      description: Align reads to CARD and in silico predicted allelic variants (beta)
      position: 1
      name: bwt
      optional: false
    - !Positional
      description: Baits Melting Temperature
      position: 0
      name: tm
      optional: false
    - !Positional
      description: '---------------------------------------------------------------------------------------'
      position: 0
      name: Annotations
      optional: false
    - !Positional
      description: Create fasta files with annotations from card.json
      position: 1
      name: card_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from variants
      position: 2
      name: wildcard_annotation
      optional: false
    - !Positional
      description: Create fasta files with annotations from baits (experimental)
      position: 3
      name: baits_annotation
      optional: false
    - !Positional
      description: Removes duplicate sequences (experimental)
      position: 4
      name: remove_duplicates
      optional: false
    - !Positional
      description: Build AMR specific k-mers database used for pathogen of origin
        (beta)
      position: 0
      name: kmer_build
      optional: false
    - !Positional
      description: Query sequences against AMR k-mers database to predict pathogen
        of origin (beta)
      position: 1
      name: kmer_query
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: rgi <command> [<args>]\n            commands are:\n       \
      \        ---------------------------------------------------------------------------------------\n\
      \               Database\n               ---------------------------------------------------------------------------------------\n\
      \n               load     Loads CARD database, annotations and k-mer database\n\
      \               clean    Removes BLAST databases and temporary files\n     \
      \          database Information on installed card database\n               galaxy\
      \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
      \               Genomic\n               ---------------------------------------------------------------------------------------\n\
      \n               main     Runs rgi application\n               tab      Creates\
      \ a Tab-delimited from rgi results\n               parser   Creates categorical\
      \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
      \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
      \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
      \               bwt                   Align reads to CARD and in silico predicted\
      \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
      \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
      \               tm                    Baits Melting Temperature\n\n        \
      \       ---------------------------------------------------------------------------------------\n\
      \               Annotations\n               ---------------------------------------------------------------------------------------\n\
      \               card_annotation       Create fasta files with annotations from\
      \ card.json\n               wildcard_annotation   Create fasta files with annotations\
      \ from variants\n               baits_annotation      Create fasta files with\
      \ annotations from baits (experimental)\n               remove_duplicates  \
      \   Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
      \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
      \               \n               kmer_build            Build AMR specific k-mers\
      \ database used for pathogen of origin (beta)\n               kmer_query   \
      \         Query sequences against AMR k-mers database to predict pathogen of\
      \ origin (beta)\n\n               \nrgi: error: argument command: invalid choice:\
      \ 'Database' (choose from 'main', 'tab', 'parser', 'load', 'clean', 'galaxy',\
      \ 'database', 'bwt', 'tm', 'card_annotation', 'wildcard_annotation', 'baits_annotation',\
      \ 'remove_duplicates', 'heatmap', 'kmer_build', 'kmer_query')\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: rgi <command> [<args>]\n            commands are:\n         \
    \      ---------------------------------------------------------------------------------------\n\
    \               Database\n               ---------------------------------------------------------------------------------------\n\
    \n               load     Loads CARD database, annotations and k-mer database\n\
    \               clean    Removes BLAST databases and temporary files\n       \
    \        database Information on installed card database\n               galaxy\
    \   Galaxy project wrapper\n\n               ---------------------------------------------------------------------------------------\n\
    \               Genomic\n               ---------------------------------------------------------------------------------------\n\
    \n               main     Runs rgi application\n               tab      Creates\
    \ a Tab-delimited from rgi results\n               parser   Creates categorical\
    \ JSON files RGI wheel visualization\n               heatmap  Heatmap for multiple\
    \ analysis\n\n               ---------------------------------------------------------------------------------------\n\
    \               Metagenomic\n               ---------------------------------------------------------------------------------------\n\
    \               bwt                   Align reads to CARD and in silico predicted\
    \ allelic variants (beta)\n               \n               ---------------------------------------------------------------------------------------\n\
    \               Baits validation\n               ---------------------------------------------------------------------------------------\n\
    \               tm                    Baits Melting Temperature\n\n          \
    \     ---------------------------------------------------------------------------------------\n\
    \               Annotations\n               ---------------------------------------------------------------------------------------\n\
    \               card_annotation       Create fasta files with annotations from\
    \ card.json\n               wildcard_annotation   Create fasta files with annotations\
    \ from variants\n               baits_annotation      Create fasta files with\
    \ annotations from baits (experimental)\n               remove_duplicates    \
    \ Removes duplicate sequences (experimental)\n\n               ---------------------------------------------------------------------------------------\n\
    \               Pathogen of origin\n               ---------------------------------------------------------------------------------------\n\
    \               \n               kmer_build            Build AMR specific k-mers\
    \ database used for pathogen of origin (beta)\n               kmer_query     \
    \       Query sequences against AMR k-mers database to predict pathogen of origin\
    \ (beta)\n\n               \n\nResistance Gene Identifier - 5.1.1\n\npositional\
    \ arguments:\n  {main,tab,parser,load,clean,galaxy,database,bwt,tm,card_annotation,wildcard_annotation,baits_annotation,remove_duplicates,heatmap,kmer_build,kmer_query}\n\
    \                        Subcommand to run\n\noptional arguments:\n  -h, --help\
    \            show this help message and exit\n\nUse the Resistance Gene Identifier\
    \ to predict resistome(s) from protein or\nnucleotide data based on homology and\
    \ SNP models. Check\nhttps://card.mcmaster.ca/download for software and data updates.\
    \ Receive email\nnotification of monthly CARD updates via the CARD Mailing List\n\
    (https://mailman.mcmaster.ca/mailman/listinfo/card-l)\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: rgi galaxy [-h] --galaxy_database GALAXY_DATABASE [--debug]\n\n\
  Resistance Gene Identifier - 5.1.1 - Galaxy project wrapper\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --galaxy_database GALAXY_DATABASE\n\
  \                        path to CARD data and blast databases\n  --debug      \
  \         debug mode\n\nGALAXY_DATABASE must contain the following: data files (card.json,\n\
  proteindb.fsa),diamond blast database (protein.db.dmnd), ncbi blast database\n(protein.db.phr,\
  \ protein.db.pin, protein.db.psq)\n"
generated_using: *id002
