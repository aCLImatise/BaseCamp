&id001 !Command
command:
- arrow
positional: []
named:
- !Flag
  description: Enables verbose mode.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: name of apollo instance from /root/.apollo-
  synonyms:
  - -a
  - --apollo_instance
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "[debug|info|warn|error|critical]\nLogging level  [default: warn]"
  synonyms:
  - -l
  - --log-level
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands:
- !Command
  command:
  - arrow
  - arrow.yml
  positional:
  - !Positional
    description: ''
    position: 0
    name: arrow
    optional: false
  - !Positional
    description: ''
    position: 1
    name: COMMAND
    optional: false
  - !Positional
    description: ''
    position: 2
    name: ARGS
    optional: true
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Problem loading command arrow.yml, exception No module named 'arrow.commands.cmd_arrow'\n\
    Usage: arrow [OPTIONS] COMMAND [ARGS]...\nTry 'arrow -h' for help.\n\nError: No\
    \ such command 'arrow.yml'.\n"
  generated_using: &id003
  - --help
- &id002 !Command
  command:
  - arrow
  - status
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - arrow
    - status
    - add_status
    positional:
    - !Positional
      description: ''
      position: 0
      name: STATUS
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status add_status [OPTIONS] STATUS\n\n  Add a status\
      \ value\n\n  Output:\n\n      A dictionnary containing status description\n\n\
      Options:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - findStatusById
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status findStatusById [OPTIONS] ID_NUMBER\n\n  TODO:\
      \ Undocumented\n\n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - updateStatus
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    - !Positional
      description: ''
      position: 1
      name: NEW_VALUE
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status updateStatus [OPTIONS] ID_NUMBER NEW_VALUE\n\n\
      \  TODO: Undocumented\n\n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show\
      \ this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - update_status
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    - !Positional
      description: ''
      position: 1
      name: NEW_VALUE
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status update_status [OPTIONS] ID_NUMBER NEW_VALUE\n\n\
      \  Update a status name\n\n  Output:\n\n      an empty dictionary\n\nOptions:\n\
      \  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - show_status
    positional:
    - !Positional
      description: ''
      position: 0
      name: STATUS
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status show_status [OPTIONS] STATUS\n\n  Get a specific\
      \ status\n\n  Output:\n\n      A dictionnary containing status description\n\
      \nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - delete_status
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status delete_status [OPTIONS] ID_NUMBER\n\n  Delete\
      \ a status\n\n  Output:\n\n      an empty dictionary\n\nOptions:\n  -h, --help\
      \  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - deleteStatus
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status deleteStatus [OPTIONS] ID_NUMBER\n\n  TODO: Undocumented\n\
      \n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - findStatusByValue
    positional:
    - !Positional
      description: ''
      position: 0
      name: VALUE
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status findStatusByValue [OPTIONS] VALUE\n\n  TODO: Undocumented\n\
      \n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - status
    - addStatus
    positional:
    - !Positional
      description: ''
      position: 0
      name: VALUE
      optional: false
    named: []
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow status addStatus [OPTIONS] VALUE\n\n  TODO: Undocumented\n\
      \n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: arrow status [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h, --help\
    \  Show this message and exit.\n\nCommands:\n  addStatus          TODO: Undocumented\
    \ Output: ???\n  add_status         Add a status value Output: A dictionnary containing...\n\
    \  deleteStatus       TODO: Undocumented Output: ???\n  delete_status      Delete\
    \ a status Output: an empty dictionary\n  findAllStatuses    TODO: Undocumented\
    \ Output: ???\n  findStatusById     TODO: Undocumented Output: ???\n  findStatusByValue\
    \  TODO: Undocumented Output: ???\n  get_statuses       Get all statuses available\
    \ in this Apollo instance...\n  show_status        Get a specific status Output:\
    \ A dictionnary containing...\n  updateStatus       TODO: Undocumented Output:\
    \ ???\n  update_status      Update a status name Output: an empty dictionary\n"
  generated_using: *id003
- &id004 !Command
  command:
  - arrow
  - groups
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - arrow
    - groups
    - update_group
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: NEW_NAME
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups update_group [OPTIONS] GROUP_ID NEW_NAME\n\n \
      \ Update the name of a group\n\n  Output:\n\n      a dictionary containing group\
      \ information\n\nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - get_group_creator
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups get_group_creator [OPTIONS] GROUP\n\n  Get the\
      \ group's creator\n\n  Output:\n\n      creator userId\n\nOptions:\n  -h, --help\
      \  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - update_organism_permissions
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP
      optional: false
    - !Positional
      description: ''
      position: 1
      name: ORGANISM_NAME
      optional: false
    named:
    - !Flag
      description: Should the group have administrate privileges
      synonyms:
      - --administrate
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Should the group have write privileges
      synonyms:
      - --write
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Should the group have read privileges
      synonyms:
      - --read
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Should the group have export privileges
      synonyms:
      - --export
      args: !EmptyFlagArg {}
      optional: true
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups update_organism_permissions [OPTIONS] GROUP ORGANISM_NAME\n\
      \n  Update the group's permissions on an organism\n\n  Output:\n\n      list\
      \ of group organism permissions\n\nOptions:\n  --administrate  Should the group\
      \ have administrate privileges\n  --write         Should the group have write\
      \ privileges\n  --read          Should the group have read privileges\n  --export\
      \        Should the group have export privileges\n  -h, --help      Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - get_group_admin
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups get_group_admin [OPTIONS] GROUP\n\n  Get the group's\
      \ admins\n\n  Output:\n\n      a list containing group admins\n\nOptions:\n\
      \  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - get_groups
    positional: []
    named:
    - !Flag
      description: Only return group(s) with given name
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups get_groups [OPTIONS]\n\n  Get all the groups\n\
      \n  Output:\n\n      list of a dictionaries containing group information\n\n\
      Options:\n  --name TEXT  Only return group(s) with given name\n  -h, --help\
      \   Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - update_group_admin
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP_ID
      optional: false
    named:
    - !Flag
      description: List of emails
      synonyms:
      - --users
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups update_group_admin [OPTIONS] GROUP_ID\n\n  Update\
      \ the group's admins\n\n  Output:\n\n      dictionary of group information\n\
      \nOptions:\n  --users TEXT  List of emails\n  -h, --help    Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - get_organism_permissions
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups get_organism_permissions [OPTIONS] GROUP\n\n \
      \ Get the group's organism permissions\n\n  Output:\n\n      a list containing\
      \ organism permissions (if any)\n\nOptions:\n  -h, --help  Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - delete_group
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups delete_group [OPTIONS] GROUP\n\n  Delete a group\n\
      \n  Output:\n\n      an empty dictionary\n\nOptions:\n  -h, --help  Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - update_membership
    positional: []
    named:
    - !Flag
      description: Group ID Number
      synonyms:
      - --group_id
      args: !SimpleFlagArg
        name: INTEGER
      optional: true
    - !Flag
      description: List of emails
      synonyms:
      - --users
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: "Bulk memberships to update of the form: [ {groupId:\n<groupId>,users:\
        \ [\"user1\", \"user2\", \"user3\"]},\n{groupId:<another-groupId>, users:\
        \ [\"user2\", \"user8\"]}\n(users and groupId will be ignored)"
      synonyms:
      - --memberships
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups update_membership [OPTIONS]\n\n  Update the group's\
      \ membership\n\n  Output:\n\n      dictionary of group information\n\nOptions:\n\
      \  --group_id INTEGER  Group ID Number\n  --users TEXT        List of emails\n\
      \  --memberships TEXT  Bulk memberships to update of the form: [ {groupId:\n\
      \                      <groupId>,users: [\"user1\", \"user2\", \"user3\"]},\n\
      \                      {groupId:<another-groupId>, users: [\"user2\", \"user8\"\
      ]}\n                      (users and groupId will be ignored)\n\n  -h, --help\
      \          Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - create_group
    positional:
    - !Positional
      description: ''
      position: 0
      name: NAME
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups create_group [OPTIONS] NAME\n\n  Create a new\
      \ group\n\n  Output:\n\n      Group information dictionary\n\nOptions:\n  -h,\
      \ --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - groups
    - show_group
    positional:
    - !Positional
      description: ''
      position: 0
      name: GROUP_ID
      optional: false
    named: []
    parent: *id004
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow groups show_group [OPTIONS] GROUP_ID\n\n  Get information\
      \ about a group\n\n  Output:\n\n      a dictionary containing group information\n\
      \nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: arrow groups [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h, --help\
    \  Show this message and exit.\n\nCommands:\n  create_group                 Create\
    \ a new group Output: Group information...\n  delete_group                 Delete\
    \ a group Output: an empty dictionary\n  get_group_admin              Get the\
    \ group's admins Output: a list...\n  get_group_creator            Get the group's\
    \ creator Output: creator...\n  get_groups                   Get all the groups\
    \ Output: list of a...\n  get_organism_permissions     Get the group's organism\
    \ permissions Output:...\n  show_group                   Get information about\
    \ a group Output: a...\n  update_group                 Update the name of a group\
    \ Output: a...\n  update_group_admin           Update the group's admins Output:\
    \ dictionary...\n  update_membership            Update the group's membership\
    \ Output:...\n  update_organism_permissions  Update the group's permissions on\
    \ an\n                               organism...\n"
  generated_using: *id003
- &id005 !Command
  command:
  - arrow
  - cannedkeys
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - arrow
    - cannedkeys
    - deleteKey
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys deleteKey [OPTIONS] ID_NUMBER\n\n  TODO: Undocumented\n\
      \n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - findKeyById
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys findKeyById [OPTIONS] ID_NUMBER\n\n  TODO:\
      \ Undocumented\n\n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - delete_key
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys delete_key [OPTIONS] ID_NUMBER\n\n  Update\
      \ a canned key\n\n  Output:\n\n      an empty dictionary\n\nOptions:\n  -h,\
      \ --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - show_key
    positional:
    - !Positional
      description: ''
      position: 0
      name: VALUE
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys show_key [OPTIONS] VALUE\n\n  Get a specific\
      \ canned key\n\n  Output:\n\n      A dictionnary containing canned key description\n\
      \nOptions:\n  -h, --help  Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - update_key
    positional:
    - !Positional
      description: ''
      position: 0
      name: ID_NUMBER
      optional: false
    - !Positional
      description: ''
      position: 1
      name: NEW_KEY
      optional: false
    named:
    - !Flag
      description: Optional metadata
      synonyms:
      - --metadata
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys update_key [OPTIONS] ID_NUMBER NEW_KEY\n\n\
      \  Update a canned key\n\n  Output:\n\n      an empty dictionary\n\nOptions:\n\
      \  --metadata TEXT  Optional metadata\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - add_key
    positional:
    - !Positional
      description: ''
      position: 0
      name: KEY
      optional: false
    named:
    - !Flag
      description: Optional metadata
      synonyms:
      - --metadata
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys add_key [OPTIONS] KEY\n\n  Add a canned key\n\
      \n  Output:\n\n      A dictionnary containing canned key description\n\nOptions:\n\
      \  --metadata TEXT  Optional metadata\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - containing...
    positional:
    - !Positional
      description: ''
      position: 0
      name: arrow
      optional: false
    - !Positional
      description: ''
      position: 1
      name: cannedkeys
      optional: false
    - !Positional
      description: ''
      position: 2
      name: COMMAND
      optional: false
    - !Positional
      description: ''
      position: 3
      name: ARGS
      optional: true
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys [OPTIONS] COMMAND [ARGS]...\nTry 'arrow cannedkeys\
      \ -h' for help.\n\nError: No such command 'containing...'.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - findKeyByValue
    positional:
    - !Positional
      description: ''
      position: 0
      name: VALUE
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys findKeyByValue [OPTIONS] VALUE\n\n  TODO:\
      \ Undocumented\n\n  Output:\n\n      ???\n\nOptions:\n  -h, --help  Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - cannedkeys
    - addKey
    positional:
    - !Positional
      description: ''
      position: 0
      name: KEY
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --metadata
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow cannedkeys addKey [OPTIONS] KEY\n\n  TODO: Undocumented\n\
      \n  Output:\n\n      ???\n\nOptions:\n  --metadata TEXT\n  -h, --help      \
      \ Show this message and exit.\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: arrow cannedkeys [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h,\
    \ --help  Show this message and exit.\n\nCommands:\n  addKey          TODO: Undocumented\
    \ Output: ???\n  add_key         Add a canned key Output: A dictionnary containing\
    \ canned...\n  deleteKey       TODO: Undocumented Output: ???\n  delete_key  \
    \    Update a canned key Output: an empty dictionary\n  findAllKeys     TODO:\
    \ Undocumented Output: ???\n  findKeyById     TODO: Undocumented Output: ???\n\
    \  findKeyByValue  TODO: Undocumented Output: ???\n  get_keys        Get all canned\
    \ keys available in this Apollo instance...\n  show_key        Get a specific\
    \ canned key Output: A dictionnary\n                  containing...\n\n  updateKey\
    \       TODO: Undocumented Output: ???\n  update_key      Update a canned key\
    \ Output: an empty dictionary\n"
  generated_using: *id003
- &id006 !Command
  command:
  - arrow
  - metrics
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - arrow
    - metrics
    - COMMAND
    positional:
    - !Positional
      description: ''
      position: 0
      name: ARGS
      optional: true
    named: []
    parent: *id006
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow metrics [OPTIONS] COMMAND [ARGS]...\nTry 'arrow metrics\
      \ -h' for help.\n\nError: No such command 'COMMAND'.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - metrics
    - ARGS
    positional:
    - !Positional
      description: ''
      position: 0
      name: arrow
      optional: false
    - !Positional
      description: ''
      position: 1
      name: metrics
      optional: false
    - !Positional
      description: ''
      position: 2
      name: COMMAND
      optional: false
    - !Positional
      description: ''
      position: 3
      name: ARGS
      optional: true
    named: []
    parent: *id006
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow metrics [OPTIONS] COMMAND [ARGS]...\nTry 'arrow metrics\
      \ -h' for help.\n\nError: No such command 'ARGS'.\n"
    generated_using: *id003
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: arrow metrics [OPTIONS] COMMAND [ARGS]...\nTry 'arrow metrics\
    \ -h' for help.\n\nError: no such option: --usage\n"
  generated_using:
  - --usage
- !Command
  command:
  - arrow
  - scripts.
  positional:
  - !Positional
    description: ''
    position: 0
    name: arrow
    optional: false
  - !Positional
    description: ''
    position: 1
    name: COMMAND
    optional: false
  - !Positional
    description: ''
    position: 2
    name: ARGS
    optional: true
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Problem loading command scripts., exception No module named 'arrow.commands.cmd_scripts'\n\
    Usage: arrow [OPTIONS] COMMAND [ARGS]...\nTry 'arrow -h' for help.\n\nError: No\
    \ such command 'scripts.'.\n"
  generated_using: *id003
- &id007 !Command
  command:
  - arrow
  - annotations
  positional: []
  named: []
  parent: *id001
  subcommands:
  - !Command
    command:
    - arrow
    - annotations
    - merge_exons
    positional:
    - !Positional
      description: ''
      position: 0
      name: EXON_A
      optional: false
    - !Positional
      description: ''
      position: 1
      name: EXON_B
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations merge_exons [OPTIONS] EXON_A EXON_B\n\n \
      \ Merge two exons\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - set_sequence
    positional:
    - !Positional
      description: ''
      position: 0
      name: ORGANISM
      optional: false
    - !Positional
      description: ''
      position: 1
      name: SEQUENCE
      optional: false
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations set_sequence [OPTIONS] ORGANISM SEQUENCE\n\
      Try 'arrow annotations set_sequence -h' for help.\n\nError: Missing argument\
      \ 'ORGANISM'.\n"
    generated_using: []
  - !Command
    command:
    - arrow
    - annotations
    - load_gff3
    positional:
    - !Positional
      description: ''
      position: 0
      name: ORGANISM
      optional: false
    - !Positional
      description: ''
      position: 1
      name: GFF3
      optional: false
    named:
    - !Flag
      description: URL where the input dataset can be found.
      synonyms:
      - --source
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: 'Size of batches before writing  [default: 1]'
      synonyms:
      - --batch_size
      args: !SimpleFlagArg
        name: INTEGER
      optional: true
    - !Flag
      description: Run in dry run mode
      synonyms:
      - --test
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Use the given name instead of generating one.
      synonyms:
      - --use_name
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Disable CDS recalculation and instead use the\none provided"
      synonyms:
      - --disable_cds_recalculation
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output loading performance metrics
      synonyms:
      - --timing
      args: !EmptyFlagArg {}
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations load_gff3 [OPTIONS] ORGANISM GFF3\n\n  Load\
      \ a full GFF3 into annotation track\n\n  Output:\n\n      Loading report\n\n\
      Options:\n  --source TEXT                URL where the input dataset can be\
      \ found.\n  --batch_size INTEGER         Size of batches before writing  [default:\
      \ 1]\n  --test                       Run in dry run mode\n  --use_name     \
      \              Use the given name instead of generating one.\n  --disable_cds_recalculation\
      \  Disable CDS recalculation and instead use the\n                         \
      \      one provided\n\n  --timing                     Output loading performance\
      \ metrics\n  -h, --help                   Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - set_translation_start
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: START
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations set_translation_start [OPTIONS] FEATURE_ID\
      \ START\n\n  Set the translation start of a feature\n\n  Output:\n\n      A\
      \ standard apollo feature dictionary ({\"features\": [{...}]})\n\nOptions:\n\
      \  --organism TEXT  Organism Common Name\n  --sequence TEXT  Sequence Name\n\
      \  -h, --help       Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - delete_dbxref
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: DB
      optional: false
    - !Positional
      description: ''
      position: 2
      name: ACCESSION
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations delete_dbxref [OPTIONS] FEATURE_ID DB ACCESSION\n\
      \n  Delete a dbxref from a feature\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - get_comments
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations get_comments [OPTIONS] FEATURE_ID\n\n  Get\
      \ a feature's comments\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - add_comment
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Feature comments
      synonyms:
      - --comments
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations add_comment [OPTIONS] FEATURE_ID\n\n  Set\
      \ a feature's description\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --comments TEXT  Feature comments\n\
      \  --organism TEXT  Organism Common Name\n  --sequence TEXT  Sequence Name\n\
      \  -h, --help       Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - update_attribute
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: ATTRIBUTE_KEY
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations update_attribute [OPTIONS] FEATURE_ID ATTRIBUTE_KEY\n\
      \                                          OLD_VALUE NEW_VALUE\n\n  Delete an\
      \ attribute from a feature\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - update_dbxref
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: OLD_DB
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations update_dbxref [OPTIONS] FEATURE_ID OLD_DB\n\
      \                                       OLD_ACCESSION NEW_DB NEW_ACCESSION\n\
      \n  Delete a dbxref from a feature\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - load_legacy_gff3
    positional:
    - !Positional
      description: ''
      position: 0
      name: ORGANISM
      optional: false
    - !Positional
      description: ''
      position: 1
      name: GFF3
      optional: false
    named:
    - !Flag
      description: URL where the input dataset can be found.
      synonyms:
      - --source
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations load_legacy_gff3 [OPTIONS] ORGANISM GFF3\n\
      \n  Load a full GFF3 into annotation track (legacy version, kept for\n  compatibility\
      \ only)\n\n  Output:\n\n      Loading report\n\nOptions:\n  --source TEXT  URL\
      \ where the input dataset can be found.\n  -h, --help     Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - get_gff3
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations get_gff3 [OPTIONS] FEATURE_ID\n\n  Get the\
      \ GFF3 associated with a feature\n\n  Output:\n\n      GFF3 text content\n\n\
      Options:\n  --organism TEXT  Organism Common Name\n  --sequence TEXT  Sequence\
      \ Name\n  -h, --help       Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - A...
    positional:
    - !Positional
      description: ''
      position: 0
      name: arrow
      optional: false
    - !Positional
      description: ''
      position: 1
      name: annotations
      optional: false
    - !Positional
      description: ''
      position: 2
      name: COMMAND
      optional: false
    - !Positional
      description: ''
      position: 3
      name: ARGS
      optional: true
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations [OPTIONS] COMMAND [ARGS]...\nTry 'arrow annotations\
      \ -h' for help.\n\nError: No such command 'A...'.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - standard...
    positional:
    - !Positional
      description: ''
      position: 0
      name: arrow
      optional: false
    - !Positional
      description: ''
      position: 1
      name: annotations
      optional: false
    - !Positional
      description: ''
      position: 2
      name: COMMAND
      optional: false
    - !Positional
      description: ''
      position: 3
      name: ARGS
      optional: true
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations [OPTIONS] COMMAND [ARGS]...\nTry 'arrow annotations\
      \ -h' for help.\n\nError: No such command 'standard...'.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - add_transcripts
    positional: []
    named:
    - !Flag
      description: Transcript data
      synonyms:
      - --transcripts
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Suppress the history of this operation
      synonyms:
      - --suppress_history
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress instant update of the user interface
      synonyms:
      - --suppress_events
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations add_transcripts [OPTIONS]\n\n  Add a list\
      \ of transcript annotations\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --transcripts TEXT  Transcript\
      \ data\n  --suppress_history  Suppress the history of this operation\n  --suppress_events\
      \   Suppress instant update of the user interface\n  --organism TEXT     Organism\
      \ Common Name\n  --sequence TEXT     Sequence Name\n  -h, --help          Show\
      \ this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - delete_sequence_alteration
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations delete_sequence_alteration [OPTIONS] FEATURE_ID\n\
      \n  [UNTESTED] Delete a specific feature alteration\n\n  Output:\n\n      A\
      \ list of sequence alterations(?)\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - add_attribute
    positional:
    - !Positional
      description: Add an attribute to a feature
      position: 0
      name: ATTRIBUTE_VALUE
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations add_attribute [OPTIONS] FEATURE_ID ATTRIBUTE_KEY\n\
      \                                       ATTRIBUTE_VALUE\n\n  Add an attribute\
      \ to a feature\n\n  Output:\n\n      A standard apollo feature dictionary ({\"\
      features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common Name\n\
      \  --sequence TEXT  Sequence Name\n  -h, --help       Show this message and\
      \ exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - get_sequence_alterations
    positional: []
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations get_sequence_alterations [OPTIONS]\n\n  [UNTESTED]\
      \ Get all of the sequence's alterations\n\n  Output:\n\n      A list of sequence\
      \ alterations(?)\n\nOptions:\n  --organism TEXT  Organism Common Name\n  --sequence\
      \ TEXT  Sequence Name\n  -h, --help       Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - set_status
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: STATUS
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations set_status [OPTIONS] FEATURE_ID STATUS\n\n\
      \  Set a feature's description\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - set_boundaries
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: START
      optional: false
    - !Positional
      description: ''
      position: 2
      name: END
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations set_boundaries [OPTIONS] FEATURE_ID START\
      \ END\n\n  Set the boundaries of a genomic feature\n\n  Output:\n\n      A standard\
      \ apollo feature dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism\
      \ TEXT  Organism Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help\
      \       Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - add_feature
    positional: []
    named:
    - !Flag
      description: Feature information
      synonyms:
      - --feature
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations add_feature [OPTIONS]\n\n  Add a single feature\n\
      \n  Output:\n\n      A standard apollo feature dictionary ({\"features\": [{...}]})\n\
      \nOptions:\n  --feature TEXT   Feature information\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - get_feature_sequence
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations get_feature_sequence [OPTIONS] FEATURE_ID\n\
      \n  [CURRENTLY BROKEN] Get the sequence of a feature\n\n  Output:\n\n      A\
      \ standard apollo feature dictionary ({\"features\": [{...}]})\n\nOptions:\n\
      \  --organism TEXT  Organism Common Name\n  --sequence TEXT  Sequence Name\n\
      \  -h, --help       Show this message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - flip_strand
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations flip_strand [OPTIONS] FEATURE_ID\n\n  Flip\
      \ the strand of a feature\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - get_features
    positional: []
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations get_features [OPTIONS]\n\n  Get the features\
      \ for an organism / sequence\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - set_description
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: DESCRIPTION
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations set_description [OPTIONS] FEATURE_ID DESCRIPTION\n\
      \n  Set a feature's description\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - delete_feature
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations delete_feature [OPTIONS] FEATURE_ID\n\n \
      \ Delete a feature\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - set_name
    positional:
    - !Positional
      description: ''
      position: 0
      name: FEATURE_ID
      optional: false
    - !Positional
      description: ''
      position: 1
      name: NAME
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations set_name [OPTIONS] FEATURE_ID NAME\n\n  Set\
      \ a feature's name\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism Common\
      \ Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this message\
      \ and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - apollo...
    positional:
    - !Positional
      description: ''
      position: 0
      name: arrow
      optional: false
    - !Positional
      description: ''
      position: 1
      name: annotations
      optional: false
    - !Positional
      description: ''
      position: 2
      name: COMMAND
      optional: false
    - !Positional
      description: ''
      position: 3
      name: ARGS
      optional: true
    named: []
    parent: *id007
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations [OPTIONS] COMMAND [ARGS]...\nTry 'arrow annotations\
      \ -h' for help.\n\nError: No such command 'apollo...'.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - duplicate_transcript
    positional:
    - !Positional
      description: ''
      position: 0
      name: TRANSCRIPT_ID
      optional: false
    named:
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations duplicate_transcript [OPTIONS] TRANSCRIPT_ID\n\
      \n  Duplicate a transcripte\n\n  Output:\n\n      A standard apollo feature\
      \ dictionary ({\"features\": [{...}]})\n\nOptions:\n  --organism TEXT  Organism\
      \ Common Name\n  --sequence TEXT  Sequence Name\n  -h, --help       Show this\
      \ message and exit.\n"
    generated_using: *id003
  - !Command
    command:
    - arrow
    - annotations
    - add_transcript
    positional: []
    named:
    - !Flag
      description: Transcript data
      synonyms:
      - --transcript
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Suppress the history of this operation
      synonyms:
      - --suppress_history
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress instant update of the user interface
      synonyms:
      - --suppress_events
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Organism Common Name
      synonyms:
      - --organism
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: Sequence Name
      synonyms:
      - --sequence
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    parent: *id007
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: arrow annotations add_transcript [OPTIONS]\n\n  Add a single\
      \ transcript annotation\n\n  Output:\n\n      A standard apollo feature dictionary\
      \ ({\"features\": [{...}]})\n\nOptions:\n  --transcript TEXT   Transcript data\n\
      \  --suppress_history  Suppress the history of this operation\n  --suppress_events\
      \   Suppress instant update of the user interface\n  --organism TEXT     Organism\
      \ Common Name\n  --sequence TEXT     Sequence Name\n  -h, --help          Show\
      \ this message and exit.\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: arrow annotations [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n \
    \ -h, --help  Show this message and exit.\n\nCommands:\n  add_attribute      \
    \         Add an attribute to a feature Output: A...\n  add_comment          \
    \       Set a feature's description Output: A\n                              standard...\n\
    \n  add_dbxref                  Add a dbxref to a feature Output: A standard...\n\
    \  add_feature                 Add a single feature Output: A standard\n     \
    \                         apollo...\n\n  add_features                Add a list\
    \ of feature Output: A standard...\n  add_transcript              Add a single\
    \ transcript annotation Output: A...\n  add_transcripts             Add a list\
    \ of transcript annotations Output:\n                              A...\n\n  delete_attribute\
    \            Delete an attribute from a feature Output: A...\n  delete_dbxref\
    \               Delete a dbxref from a feature Output: A...\n  delete_feature\
    \              Delete a feature Output: A standard apollo...\n  delete_sequence_alteration\
    \  [UNTESTED] Delete a specific feature...\n  duplicate_transcript        Duplicate\
    \ a transcripte Output: A standard...\n  flip_strand                 Flip the\
    \ strand of a feature Output: A...\n  get_comments                Get a feature's\
    \ comments Output: A standard...\n  get_feature_sequence        [CURRENTLY BROKEN]\
    \ Get the sequence of a...\n  get_features                Get the features for\
    \ an organism / sequence...\n  get_gff3                    Get the GFF3 associated\
    \ with a feature\n                              Output:...\n\n  get_search_tools\
    \            Get the search tools available Output:...\n  get_sequence_alterations\
    \    [UNTESTED] Get all of the sequence's...\n  load_gff3                   Load\
    \ a full GFF3 into annotation track\n                              Output:...\n\
    \n  load_legacy_gff3            Load a full GFF3 into annotation track\n     \
    \                         (legacy...\n\n  merge_exons                 Merge two\
    \ exons Output: A standard apollo...\n  set_boundaries              Set the boundaries\
    \ of a genomic feature...\n  set_description             Set a feature's description\
    \ Output: A\n                              standard...\n\n  set_longest_orf  \
    \           Automatically pick the longest ORF in a...\n  set_name           \
    \         Set a feature's name Output: A standard\n                          \
    \    apollo...\n\n  set_readthrough_stop_codon  Set the feature to read through\
    \ the first...\n  set_sequence                Set the sequence for subsequent\
    \ requests.\n  set_status                  Set a feature's description Output:\
    \ A\n                              standard...\n\n  set_symbol               \
    \   Set a feature's description Output: A\n                              standard...\n\
    \n  set_translation_end         Set a feature's end Output: A standard apollo...\n\
    \  set_translation_start       Set the translation start of a feature\n      \
    \                        Output:...\n\n  update_attribute            Delete an\
    \ attribute from a feature Output: A...\n  update_dbxref               Delete\
    \ a dbxref from a feature Output: A...\n"
  generated_using: *id003
usage: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show the version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: arrow [OPTIONS] COMMAND [ARGS]...\n\n  Command line wrappers around\
  \ Apollo functions. While this sounds\n  unexciting, with arrow and jq you can easily\
  \ build powerful command line\n  scripts.\n\nOptions:\n  --version             \
  \          Show the version and exit.\n  -v, --verbose                   Enables\
  \ verbose mode.\n  -a, --apollo_instance TEXT      name of apollo instance from\
  \ /root/.apollo-\n                                  arrow.yml  [default: __default;\
  \ required]\n\n  -l, --log-level [debug|info|warn|error|critical]\n            \
  \                      Logging level  [default: warn]\n  -h, --help            \
  \          Show this message and exit.\n\nCommands:\n  init            Help initialize\
  \ global configuration (in home directory)\n  annotations\n  cannedcomments\n  cannedkeys\n\
  \  cannedvalues\n  groups\n  io\n  metrics\n  organisms\n  status\n  users\n  remote\n"
generated_using: *id003
