!Command
positional:
- !Positional
  description: ''
  position: 0
  name: cat|write
  optional: false
- !Positional
  description: ''
  position: 1
  name: FILE
  optional: false
- !Positional
  description: ''
  position: 2
  name: FILE...
  optional: true
named:
- !Flag
  description: number of records to print
  synonyms:
  - -n
  - --count
  args: !SimpleFlagArg
    name: COUNT
  optional: true
- !Flag
  description: number of records to skip
  synonyms:
  - -s
  - --skip
  args: !SimpleFlagArg
    name: SKIP
  optional: true
- !Flag
  description: record format
  synonyms:
  - -f
  - --format
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: print CSV header
  synonyms:
  - --header
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: filter records (e.g. r['age']>1)
  synonyms:
  - --filter
  args: !SimpleFlagArg
    name: FILTER
  optional: true
- !Flag
  description: print schema
  synonyms:
  - --print-schema
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: fields to show, comma separated (show all by default)
  synonyms:
  - --fields
  args: !SimpleFlagArg
    name: FIELDS
  optional: true
- !Flag
  description: schema file (required)
  synonyms:
  - --schema
  args: !SimpleFlagArg
    name: SCHEMA
  optional: true
- !Flag
  description: input file(s) type (json or csv)
  synonyms:
  - --input-type
  args: !SimpleFlagArg
    name: INPUT_TYPE
  optional: true
- !Flag
  description: output file
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
command:
- avro
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: avro cat|write [options] FILE [FILE...]\n\nDisplay/write for Avro\
  \ files\n\nOptions:\n  --version             show program's version number and exit\n\
  \  -h, --help            show this help message and exit\n\n  cat options:\n   \
  \ -n COUNT, --count=COUNT\n                        number of records to print\n\
  \    -s SKIP, --skip=SKIP\n                        number of records to skip\n \
  \   -f FORMAT, --format=FORMAT\n                        record format\n    --header\
  \            print CSV header\n    --filter=FILTER     filter records (e.g. r['age']>1)\n\
  \    --print-schema      print schema\n    --fields=FIELDS     fields to show, comma\
  \ separated (show all by default)\n\n  write options:\n    --schema=SCHEMA     schema\
  \ file (required)\n    --input-type=INPUT_TYPE\n                        input file(s)\
  \ type (json or csv)\n    -o OUTPUT, --output=OUTPUT\n                        output\
  \ file\n"
generated_using:
- --help
