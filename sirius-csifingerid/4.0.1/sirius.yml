!Command
positional:
- !Positional
  description: ''
  position: 0
  name: ARGUMENTS...
  optional: false
named: []
command:
- sirius
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: [options] ARGUMENTS...\n\t[--auto-charge -Z] : Use this option\
  \ if the adduct type and/or ion mode of your compounds is unknown and you do not\
  \ want to assume [M+H]+/[M-H]- as default. With the option enabled, SIRIUS will\
  \ also search for other adduct types (e.g. [M+NH3+H]+ or even other ion modes (e.g.\
  \ [M+Na]+) if no ion mode is specified.\n\t[--cite]\n\t[--database -d value] : search\
  \ formulas in given database: all, pubchem, bio, kegg, hmdb\n\t[--elements -e value]\
  \ : The allowed elements. Write CHNOPSCl to allow the elements C, H, N, O, P, S\
  \ and Cl. Add numbers in brackets to restrict the minimal and maximal allowed occurence\
  \ of these elements: CHNOP[5]S[8]Cl[1-2]. When one number is given then it is interpreted\
  \ as upperbound.\n\t[--fingerid-db --fingerid_db value] : search structure in given\
  \ database. By default the same database for molecular formula search is also used\
  \ for structure search. If no database is used for molecular formula search, PubChem\
  \ is used for structure search. Accepts also a filepath to a valid database directory.\n\
  \t[--fingerid -F] : search structure with CSI:FingerID\n\t[--webservice-info -W]\
  \ : information about connection of CSI:FingerID Webservice\n\t[--formula --formulas\
  \ -f value...] : specify the neutral molecular formula of the measured compound\
  \ to compute its tree or a list of candidate formulas the method should discriminate.\
  \ Omit this option if you want to consider all possible molecular formulas\n\t[--generate-custom-db\
  \ value] : EXPERIMENTAL FEATURE: generate a custom compound database. Ignore all\
  \ other options. Import compounds from all given files. Usage: sirius --generate-custom-db\
  \ [DATABASENAME] [INPUTFILE1] [INPUTFILE2] ...\n\t[--help -h]\n\t[--compound-timeout\
  \ value] : Maximal computation time in seconds for a single compound. 0 for an infinite\
  \ amount of time. Default: 0\n\t[--ion -i value...] : the ionization/adduct of the\
  \ MS/MS data. Example: [M+H]+, [M-H]-, [M+Cl]-, [M+Na]+, [M]+. You can also provide\
  \ a comma separated list of adducts.\n\t[--isotope -s value] : how to handle isotope\
  \ pattern data. Use 'score' to use them for ranking or 'filter' if you just want\
  \ to remove candidates with bad isotope pattern. With 'both' you can use isotopes\
  \ for filtering and scoring (default). Use 'omit' to ignore isotope pattern.\n\t\
  [--max-compound-buffer value] : Maxmimal number of compounds that will be buffered\
  \ in Memory. A larger buffer ensures that there are enough compounds available to\
  \ use all cores efficiently during computation. A smaller buffer saves Memory. For\
  \ Infinite buffer size set it to 0. Default: 2 * --initial_intance_buffer\n\t[--maxmz\
  \ value] : Just consider compounds with a precursor mz lower or equal this maximum\
  \ mz. All other compounds in the input file are ignored.\n\t[--noise value] : median\
  \ intensity of noise peaks\n\t[--initial-compound-buffer value] : Number of compounds\
  \ that will be loaded initially into the Memory. A larger buffer ensures that there\
  \ are enough compounds available to use all cores efficiently during computation.\
  \ A smaller buffer saves Memory. To load all compounds immediately set it to 0.\
  \ Default: 2 * --cores\n\t[--mostintense-ms2] : Only use the fragmentation spectrum\
  \ with the most intense precursor peak (for each compound).\n\t[--ms1 -1 value...]\
  \ : MS1 spectrum file name\n\t[--ms2 -2 value...] : MS2 spectra file names\n\t[--naming-convention\
  \ value] : Specify a format for compounds' output directorys. Default %index_%filename_%compoundname\n\
  \t[--no-recalibration]\n\t[--processors --cores value] : Number of cpu cores to\
  \ use. If not specified Sirius uses all available cores.\n\t[--candidates -c value]\
  \ : Number of candidates in the output\n\t[--output -o value] : output directory.\n\
  \t[--ppm-max value] : allowed ppm for decomposing masses\n\t[--ppm-max-ms2 value]\
  \ : allowed ppm for decomposing masses in MS2. If not specified, the same value\
  \ as for the MS1\n\t[--parentmass --precursor --mz -z value] : the mass of the parent\
  \ ion\n\t[--fingerid-predictors -P value...] : Predictors used to search structure\
  \ with CSI:FingerID\n\t[--profile -p value] : name of the configuration profile.\
  \ Some of the default profiles are: 'qtof', 'orbitrap', 'fticr'.\n\t[--quiet -q]\
  \ : surpress shell output\n\t[--sirius --workspace -w value] : store workspace into\
  \ given file, such that it can be loaded by SIRIUS GUI afterwards\n\t[--tree-timeout\
  \ value] : Time out in seconds per fragmentation tree computations. 0 for an infinite\
  \ amount of time. Default: 0\n\t[--trust-ion-prediction] : By default we use MS1\
  \ information to select additional ionizations ([M+Na]+,[M+K]+,[M+Cl]-,[M+Br]-)\
  \ for considerations. With this parameter we trust the MS1 prediction and only consider\
  \ these found ionizations.\n\t[--version]\n\nPlease cite the following paper when\
  \ using our method:\nKai DÃ¼hrkop and Sebastian BÃ¶cker\nFragmentation trees reloaded.\n\
  In Proc. of Research in Computational Molecular Biology (RECOMB 2015), volume 9029\
  \ of Lect Notes Comput Sci, pages 65-79. 2015.\n\nSebastian BÃ¶cker, Matthias Letzel,\
  \ Zsuzsanna LiptÃ¡k and Anton Pervukhin\nSIRIUS: Decomposing isotope patterns for\
  \ metabolite identification.\nBioinformatics, 25(2):218-224, 2009.\n\nSebastian\
  \ BÃ¶cker and Florian Rasche\nTowards de novo identification of metabolites by analyzing\
  \ tandem mass spectra.\nBioinformatics, 24:I49-I55, 2008. Proc. of European Conference\
  \ on Computational Biology (ECCB 2008).\n"
generated_using:
- --help
