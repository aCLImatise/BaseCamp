!Command
command:
- create_newcase
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --res
  description: '[--machine MACHINE] [--compiler COMPILER]'
  args: !SimpleFlagArg
    name: GRID
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: Print debug information (very verbose) to file /create_newcase.log
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Add additional context (time and file) to log messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --silent
  description: Print only warnings and error messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --case
  - -case
  description: "(required) Specify the case name.\nIf this is simply a name (not a\
    \ path), the case directory is created in the current working directory.\nThis\
    \ can also be a relative or absolute path specifying where the case should be\
    \ created;\nwith this usage, the name of the case will be the last component of\
    \ the path."
  args: !SimpleFlagArg
    name: CASENAME
- !Flag
  optional: true
  synonyms:
  - --compset
  - -compset
  description: "(required) Specify a compset.\nTo see list of current compsets, use\
    \ the utility ./query_config --compsets in this directory."
  args: !SimpleFlagArg
    name: COMPSET
- !Flag
  optional: true
  synonyms:
  - --machine
  - -mach
  description: "Specify a machine. The default value is the match to NODENAME_REGEX\
    \ in config_machines.xml. To see\nthe list of current machines, invoke ./query_config\
    \ --machines."
  args: !SimpleFlagArg
    name: MACHINE
- !Flag
  optional: true
  synonyms:
  - --compiler
  - -compiler
  description: "Specify a compiler.\nTo see list of supported compilers for each machine,\
    \ use the utility\n./query_config --machines in this directory.\nThe default value\
    \ will be the first one listed."
  args: !SimpleFlagArg
    name: COMPILER
- !Flag
  optional: true
  synonyms:
  - --multi-driver
  description: "Specify that --ninst should modify the number of driver/coupler instances.\n\
    The default is to have one driver/coupler supporting multiple component instances."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ninst
  description: "Specify number of model ensemble instances.\nThe default is multiple\
    \ components and one driver/coupler.\nUse --multi-driver to run multiple driver/couplers\
    \ in the ensemble."
  args: !SimpleFlagArg
    name: NINST
- !Flag
  optional: true
  synonyms:
  - --mpilib
  - -mpilib
  description: "Specify the MPI library. To see list of supported mpilibs for each\
    \ machine, invoke ./query_config --machines.\nThe default is the first listing\
    \ in MPILIBS in config_machines.xml."
  args: !SimpleFlagArg
    name: MPILIB
- !Flag
  optional: true
  synonyms:
  - --project
  - -project
  description: Specify a project id as used in batch system accounting.
  args: !SimpleFlagArg
    name: PROJECT
- !Flag
  optional: true
  synonyms:
  - --pecount
  - -pecount
  description: "Specify a target size description for the number of cores.\nThis is\
    \ used to query the appropriate config_pes.xml file and find the\noptimal PE-layout\
    \ for your case - if it exists there.\nAllowed options are  ('S','M','L','X1','X2','[0-9]x[0-9]','[0-9]')."
  args: !SimpleFlagArg
    name: PECOUNT
- !Flag
  optional: true
  synonyms:
  - --user-mods-dir
  description: "Full pathname to a directory containing any combination of user_nl_*\
    \ files\nand a shell_commands script (typically containing xmlchange commands).\n\
    The directory can also contain an SourceMods/ directory with the same structure\n\
    as would be found in a case directory."
  args: !SimpleFlagArg
    name: USER_MODS_DIR
- !Flag
  optional: true
  synonyms:
  - --pesfile
  description: "Full pathname of an optional pes specification file.\nThe file can\
    \ follow either the config_pes.xml or the env_mach_pes.xml format."
  args: !SimpleFlagArg
    name: PESFILE
- !Flag
  optional: true
  synonyms:
  - --gridfile
  description: "Full pathname of config grid file to use.\nThis should be a copy of\
    \ config/config_grids.xml with the new user grid changes added to it."
  args: !SimpleFlagArg
    name: GRIDFILE
- !Flag
  optional: true
  synonyms:
  - --srcroot
  description: Alternative pathname for source root directory. The default is cimeroot/../
  args: !SimpleFlagArg
    name: SRCROOT
- !Flag
  optional: true
  synonyms:
  - --output-root
  description: Alternative pathname for the directory where case output is written.
  args: !SimpleFlagArg
    name: OUTPUT_ROOT
- !Flag
  optional: true
  synonyms:
  - --walltime
  description: "Set the wallclock limit for this case in the format (the usual format\
    \ is HH:MM:SS).\nYou may use env var CIME_GLOBAL_WALLTIME to set this.\nIf CIME_GLOBAL_WALLTIME\
    \ is not defined in the environment, then the walltime\nwill be the maximum allowed\
    \ time defined for the queue in config_batch.xml."
  args: !SimpleFlagArg
    name: WALLTIME
- !Flag
  optional: true
  synonyms:
  - -q
  - --queue
  description: Force batch system to use the specified queue.
  args: !SimpleFlagArg
    name: QUEUE
- !Flag
  optional: true
  synonyms:
  - --handle-preexisting-dirs
  description: "Do not query how to handle pre-existing bld/exe dirs.\nValid options\
    \ are (a)bort (r)eplace or (u)se existing.\nThis can be useful if you need to\
    \ run create_newcase non-iteractively."
  args: !ChoiceFlagArg
    choices: !!set
      u:
      a:
      r:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input-dir
  description: "Use a non-default location for input files. This will change the xml\
    \ value of DIN_LOC_ROOT.\n"
  args: !SimpleFlagArg
    name: INPUT_DIR
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: create_newcase [-h] [-d] [-v] [-s] --case CASENAME --compset COMPSET\n\
  \                      --res GRID [--machine MACHINE] [--compiler COMPILER]\n  \
  \                    [--multi-driver] [--ninst NINST] [--mpilib MPILIB]\n      \
  \                [--project PROJECT] [--pecount PECOUNT]\n                     \
  \ [--user-mods-dir USER_MODS_DIR] [--pesfile PESFILE]\n                      [--gridfile\
  \ GRIDFILE] [--srcroot SRCROOT]\n                      [--output-root OUTPUT_ROOT]\
  \ [--walltime WALLTIME]\n                      [-q QUEUE] [--handle-preexisting-dirs\
  \ {a,r,u}]\n                      [-i INPUT_DIR]\n\nScript to create a new CIME\
  \ Case Control System (CSS) experimental case.\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -d, --debug           Print debug\
  \ information (very verbose) to file /create_newcase.log\n  -v, --verbose      \
  \   Add additional context (time and file) to log messages\n  -s, --silent     \
  \     Print only warnings and error messages\n  --case CASENAME, -case CASENAME\n\
  \                        (required) Specify the case name. \n                  \
  \      If this is simply a name (not a path), the case directory is created in the\
  \ current working directory.\n                        This can also be a relative\
  \ or absolute path specifying where the case should be created;\n              \
  \          with this usage, the name of the case will be the last component of the\
  \ path.\n  --compset COMPSET, -compset COMPSET\n                        (required)\
  \ Specify a compset. \n                        To see list of current compsets,\
  \ use the utility ./query_config --compsets in this directory.\n  --res GRID, -res\
  \ GRID\n                        (required) Specify a model grid resolution. \n \
  \                       To see list of current model resolutions, use the utility\
  \ \n                        ./query_config --grids in this directory.\n  --machine\
  \ MACHINE, -mach MACHINE\n                        Specify a machine. The default\
  \ value is the match to NODENAME_REGEX in config_machines.xml. To see \n       \
  \                 the list of current machines, invoke ./query_config --machines.\n\
  \  --compiler COMPILER, -compiler COMPILER\n                        Specify a compiler.\
  \ \n                        To see list of supported compilers for each machine,\
  \ use the utility \n                        ./query_config --machines in this directory.\
  \ \n                        The default value will be the first one listed.\n  --multi-driver\
  \        Specify that --ninst should modify the number of driver/coupler instances.\
  \ \n                        The default is to have one driver/coupler supporting\
  \ multiple component instances.\n  --ninst NINST         Specify number of model\
  \ ensemble instances. \n                        The default is multiple components\
  \ and one driver/coupler. \n                        Use --multi-driver to run multiple\
  \ driver/couplers in the ensemble.\n  --mpilib MPILIB, -mpilib MPILIB\n        \
  \                Specify the MPI library. To see list of supported mpilibs for each\
  \ machine, invoke ./query_config --machines.\n                        The default\
  \ is the first listing in MPILIBS in config_machines.xml.\n  --project PROJECT,\
  \ -project PROJECT\n                        Specify a project id as used in batch\
  \ system accounting.\n  --pecount PECOUNT, -pecount PECOUNT\n                  \
  \      Specify a target size description for the number of cores. \n           \
  \             This is used to query the appropriate config_pes.xml file and find\
  \ the \n                        optimal PE-layout for your case - if it exists there.\
  \ \n                        Allowed options are  ('S','M','L','X1','X2','[0-9]x[0-9]','[0-9]').\n\
  \  --user-mods-dir USER_MODS_DIR\n                        Full pathname to a directory\
  \ containing any combination of user_nl_* files \n                        and a\
  \ shell_commands script (typically containing xmlchange commands). \n          \
  \              The directory can also contain an SourceMods/ directory with the\
  \ same structure \n                        as would be found in a case directory.\n\
  \  --pesfile PESFILE     Full pathname of an optional pes specification file. \n\
  \                        The file can follow either the config_pes.xml or the env_mach_pes.xml\
  \ format.\n  --gridfile GRIDFILE   Full pathname of config grid file to use. \n\
  \                        This should be a copy of config/config_grids.xml with the\
  \ new user grid changes added to it. \n  --srcroot SRCROOT     Alternative pathname\
  \ for source root directory. The default is cimeroot/../\n  --output-root OUTPUT_ROOT\n\
  \                        Alternative pathname for the directory where case output\
  \ is written.\n  --walltime WALLTIME   Set the wallclock limit for this case in\
  \ the format (the usual format is HH:MM:SS). \n                        You may use\
  \ env var CIME_GLOBAL_WALLTIME to set this. \n                        If CIME_GLOBAL_WALLTIME\
  \ is not defined in the environment, then the walltime\n                       \
  \ will be the maximum allowed time defined for the queue in config_batch.xml.\n\
  \  -q QUEUE, --queue QUEUE\n                        Force batch system to use the\
  \ specified queue. \n  --handle-preexisting-dirs {a,r,u}\n                     \
  \   Do not query how to handle pre-existing bld/exe dirs. \n                   \
  \     Valid options are (a)bort (r)eplace or (u)se existing. \n                \
  \        This can be useful if you need to run create_newcase non-iteractively.\n\
  \  -i INPUT_DIR, --input-dir INPUT_DIR\n                        Use a non-default\
  \ location for input files. This will change the xml value of DIN_LOC_ROOT.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/noresm:2.0.2--py37pl5262h736fc29_0
