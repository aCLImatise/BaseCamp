from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Cameo_Design_V0_1_0 = CommandToolBuilder(tool="cameo_design", base_command=["cameo", "design"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output filename. Multiple output files can\nbe provided (pair with respective format\noptions).")), ToolInput(tag="in_format", input_type=File(optional=True), prefix="--format", doc=InputDocumentation(doc="[xlsx|csv|tsv|pickle]\nOutput file format (default csv).")), ToolInput(tag="in_anaerobic", input_type=Boolean(optional=True), prefix="--anaerobic", doc=InputDocumentation(doc="Make oxygen available to the host organism\n(default).")), ToolInput(tag="in_cores", input_type=Int(optional=True), prefix="--cores", doc=InputDocumentation(doc="RANGE           Number of CPU cores to use (default 1).")), ToolInput(tag="in_no_differential_fva", input_type=Boolean(optional=True), prefix="--no-differential-fva", doc=InputDocumentation(doc="Perform differential flux variability\nanalysis to determine flux modulation\ntargets (default).")), ToolInput(tag="in_no_heuristic_optimization", input_type=Boolean(optional=True), prefix="--no-heuristic-optimization", doc=InputDocumentation(doc="Find gene knockout targets through heuristic\noptimization (default).")), ToolInput(tag="in_max_pathway_predictions", input_type=Int(optional=True), prefix="--max-pathway-predictions", doc=InputDocumentation(doc="Maximum number of heterologous pathways to\npredict (default 1).")), ToolInput(tag="in_differential_fva_points", input_type=Int(optional=True), prefix="--differential-fva-points", doc=InputDocumentation(doc="Grid points for differential FVA (default\n10).")), ToolInput(tag="in_pathway_prediction_timeout", input_type=Int(optional=True), prefix="--pathway-prediction-timeout", doc=InputDocumentation(doc="Time limit (min) for individual pathway\npredictions (default 10 min).")), ToolInput(tag="in_heuristic_optimization_timeout", input_type=Int(optional=True), prefix="--heuristic-optimization-timeout", doc=InputDocumentation(doc="Time limit (min) on individual heuristic\noptimizations (default 45 min).")), ToolInput(tag="in_logging", input_type=Boolean(optional=True), prefix="--logging", doc=InputDocumentation(doc="[CRITICAL|ERROR|WARNING|INFO|DEBUG]\nLogging level (default WARNING).")), ToolInput(tag="in_product", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output filename. Multiple output files can\nbe provided (pair with respective format\noptions).")), ToolOutput(tag="out_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_format", type_hint=File()), doc=OutputDocumentation(doc="[xlsx|csv|tsv|pickle]\nOutput file format (default csv)."))], container="quay.io/biocontainers/cameo:0.13.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cameo_Design_V0_1_0().translate("wdl")

