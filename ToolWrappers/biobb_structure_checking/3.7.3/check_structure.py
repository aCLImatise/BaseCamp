from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Check_Structure_V0_1_0 = CommandToolBuilder(tool="check_structure", base_command=["check_structure"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Input structure. Formats PDB|mmCIF. Remote pdb:{pdbid}")), ToolInput(tag="in_file_format", input_type=File(optional=True), prefix="--file_format", doc=InputDocumentation(doc="Format for retrieving structures\n(default=mmCif|pdb|xml)")), ToolInput(tag="in_sequence", input_type=File(optional=True), prefix="--sequence", doc=InputDocumentation(doc="Canonical sequence in FASTA format, pdb_chain[,chain]\nin header")), ToolInput(tag="in_pdb_server", input_type=String(optional=True), prefix="--pdb_server", doc=InputDocumentation(doc="Server for retrieving structures (default|MMB)")), ToolInput(tag="in_cache_dir", input_type=File(optional=True), prefix="--cache_dir", doc=InputDocumentation(doc="Path for structure's cache directory (default:\n./tmpPDB)")), ToolInput(tag="in_modeller_key", input_type=String(optional=True), prefix="--modeller_key", doc=InputDocumentation(doc="User key for modeller, required for backbone fix,\nregister at\nhttps://salilab.org/modeller/registration.html")), ToolInput(tag="in_res_lib", input_type=File(optional=True), prefix="--res_lib", doc=InputDocumentation(doc="Override settings default residue library (AMBER prep\nformat)")), ToolInput(tag="in_data_lib", input_type=File(optional=True), prefix="--data_lib", doc=InputDocumentation(doc="Override settings default data library")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output structure. Format PDB")), ToolInput(tag="in_rename_terms", input_type=Boolean(optional=True), prefix="--rename_terms", doc=InputDocumentation(doc="Renames terminal residues to NXXX, CXXX")), ToolInput(tag="in_json", input_type=File(optional=True), prefix="--json", doc=InputDocumentation(doc="Summary checking results on a json file")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Reduces output, removing labels and progress info")), ToolInput(tag="in_limit", input_type=Int(optional=True), prefix="--limit", doc=InputDocumentation(doc="Limit on number of atoms,0:nolimit")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Add debug information")), ToolInput(tag="in_force_save", input_type=File(optional=True), prefix="--force_save", doc=InputDocumentation(doc="Force saving an output file even if no modification")), ToolInput(tag="in_check_only", input_type=Boolean(optional=True), prefix="--check_only", doc=InputDocumentation(doc="Perform checks only, structure is not modified")), ToolInput(tag="in_non_interactive", input_type=Boolean(optional=True), prefix="--non_interactive", doc=InputDocumentation(doc="Do not prompt for missing parameters")), ToolInput(tag="in_command", input_type=String(), position=0, doc=InputDocumentation(doc="Command to execute (help: check_structure commands)")), ToolInput(tag="in_options", input_type=String(), position=1, doc=InputDocumentation(doc="Specific command options"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output structure. Format PDB")), ToolOutput(tag="out_json", output_type=File(optional=True), selector=InputSelector(input_to_select="in_json", type_hint=File()), doc=OutputDocumentation(doc="Summary checking results on a json file")), ToolOutput(tag="out_force_save", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force_save", type_hint=File()), doc=OutputDocumentation(doc="Force saving an output file even if no modification"))], container="quay.io/biocontainers/biobb_structure_checking:3.7.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Check_Structure_V0_1_0().translate("wdl")

