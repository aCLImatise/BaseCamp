from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int

Idfilter_V0_1_0 = CommandToolBuilder(tool="IDFilter", base_command=["IDFilter"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="*                                               Input file  (valid formats: 'idXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                                              Output file  (valid formats: 'idXML')")), ToolInput(tag="in_length", input_type=Boolean(optional=True), prefix="-length", doc=InputDocumentation(doc="[min]:[max]                                       Keep only peptide hits with a sequence length in this range. (default: ':')")), ToolInput(tag="in_charge", input_type=Boolean(optional=True), prefix="-charge", doc=InputDocumentation(doc="[min]:[max]                                       Keep only peptide hits with charge states in this range. (default: ':')")), ToolInput(tag="in_var_mods", input_type=Boolean(optional=True), prefix="-var_mods", doc=InputDocumentation(doc="Keep only peptide hits with variable modifications (as defined in the 'SearchParameters' section of the input file).")), ToolInput(tag="in_unique", input_type=Boolean(optional=True), prefix="-unique", doc=InputDocumentation(doc="If a peptide hit occurs more than once per peptide ID, only one instance is kept.")), ToolInput(tag="in_unique_per_protein", input_type=Boolean(optional=True), prefix="-unique_per_protein", doc=InputDocumentation(doc="Only peptides matching exactly one protein are kept. Remember that isoforms count as different proteins!")), ToolInput(tag="in_keep_unreferenced_protein_hits", input_type=Boolean(optional=True), prefix="-keep_unreferenced_protein_hits", doc=InputDocumentation(doc="Proteins not referenced by a peptide are retained in the IDs.")), ToolInput(tag="in_remove_decoys", input_type=Boolean(optional=True), prefix="-remove_decoys", doc=InputDocumentation(doc="Remove proteins according to the information in the user parameters. Usually used in combination with 'delete_unreferenced_peptide_hits'.")), ToolInput(tag="in_delete_unreferenced_peptide_hits", input_type=Boolean(optional=True), prefix="-delete_unreferenced_peptide_hits", doc=InputDocumentation(doc="Peptides not referenced by any protein are deleted in the IDs. Usually used in combination with 'score:prot' or 'thresh:prot'.")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                                              Output file  (valid formats: 'idXML')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Idfilter_V0_1_0().translate("wdl", allow_empty_container=True)

