from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Float, Int, Boolean

Rtmodel_V0_1_0 = CommandToolBuilder(tool="RTModel", base_command=["RTModel"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="This is the name of the input file (RT prediction). It is assumed that the file type is idXML. Alternatively you can provide a .txt file having a sequence and the corresponding rt per line.\n(valid formats: 'idXML', 'txt')")), ToolInput(tag="in_in_positive", input_type=File(optional=True), prefix="-in_positive", doc=InputDocumentation(doc="Input file with positive examples (peptide separation prediction)\n(valid formats: 'idXML')")), ToolInput(tag="in_in_negative", input_type=File(optional=True), prefix="-in_negative", doc=InputDocumentation(doc="Input file with negative examples (peptide separation prediction)\n(valid formats: 'idXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                    Output file: the model in libsvm format (valid formats: 'txt')")), ToolInput(tag="in_out_oligo_params", input_type=File(optional=True), prefix="-out_oligo_params", doc=InputDocumentation(doc="Output file with additional model parameters when using the OLIGO kernel (valid formats: 'paramXML')")), ToolInput(tag="in_out_oligo_train_set", input_type=File(optional=True), prefix="-out_oligo_trainset", doc=InputDocumentation(doc="Output file with the used training dataset when using the OLIGO kernel (valid formats: 'txt')")), ToolInput(tag="in_svm_type", input_type=String(optional=True), prefix="-svm_type", doc=InputDocumentation(doc="The type of the svm (NU_SVR or EPSILON_SVR for RT prediction, automatically set\nto C_SVC for separation prediction)\n(default: 'NU_SVR' valid: 'NU_SVR', 'NU_SVC', 'EPSILON_SVR', 'C_SVC')")), ToolInput(tag="in_nu", input_type=Float(optional=True), prefix="-nu", doc=InputDocumentation(doc="The nu parameter [0..1] of the svm (for nu-SVR) (default: '0.5' min: '0' max: '1')")), ToolInput(tag="in_epsilon_parameter_svm", input_type=Float(optional=True), prefix="-p", doc=InputDocumentation(doc="The epsilon parameter of the svm (for epsilon-SVR) (default: '0.1')")), ToolInput(tag="in_penalty_parameter_svm", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc="The penalty parameter of the svm (default: '1')")), ToolInput(tag="in_kernel_type", input_type=String(optional=True), prefix="-kernel_type", doc=InputDocumentation(doc="The kernel type of the svm (default: 'OLIGO' valid: 'LINEAR', 'RBF', 'POLY', 'OLIGO')")), ToolInput(tag="in_degree", input_type=Int(optional=True), prefix="-degree", doc=InputDocumentation(doc="The degree parameter of the kernel function of the svm (POLY kernel)\n(default: '1' min: '1')")), ToolInput(tag="in_border_length", input_type=Int(optional=True), prefix="-border_length", doc=InputDocumentation(doc="Length of the POBK (default: '22' min: '1')")), ToolInput(tag="in_max_std", input_type=Float(optional=True), prefix="-max_std", doc=InputDocumentation(doc="Max standard deviation for a peptide to be included (if there are several ones for one peptide string)(median is taken) (default: '10' min: '0')")), ToolInput(tag="in_k_mer_length", input_type=Int(optional=True), prefix="-k_mer_length", doc=InputDocumentation(doc="K_mer length of the POBK (default: '1' min: '1')")), ToolInput(tag="in_sigma", input_type=Float(optional=True), prefix="-sigma", doc=InputDocumentation(doc="Sigma of the POBK (default: '5')")), ToolInput(tag="in_total_gradient_time", input_type=Int(optional=True), prefix="-total_gradient_time", doc=InputDocumentation(doc="The time (in seconds) of the gradient (only for RT prediction) (default: '1' min: '1e-05')")), ToolInput(tag="in_first_dim_rt", input_type=Boolean(optional=True), prefix="-first_dim_rt", doc=InputDocumentation(doc="If set the model will be built for first_dim_rt")), ToolInput(tag="in_additive_cv", input_type=Boolean(optional=True), prefix="-additive_cv", doc=InputDocumentation(doc="If the step sizes should be interpreted additively (otherwise the actual value is multiplied\nwith the step size to get the new value")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                    Output file: the model in libsvm format (valid formats: 'txt')")), ToolOutput(tag="out_out_oligo_params", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_oligo_params", type_hint=File()), doc=OutputDocumentation(doc="Output file with additional model parameters when using the OLIGO kernel (valid formats: 'paramXML')")), ToolOutput(tag="out_out_oligo_train_set", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_oligo_train_set", type_hint=File()), doc=OutputDocumentation(doc="Output file with the used training dataset when using the OLIGO kernel (valid formats: 'txt')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rtmodel_V0_1_0().translate("wdl", allow_empty_container=True)

