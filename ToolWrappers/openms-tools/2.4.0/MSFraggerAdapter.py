from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean

Msfraggeradapter_V0_1_0 = CommandToolBuilder(tool="MSFraggerAdapter", base_command=["MSFraggerAdapter"], inputs=[ToolInput(tag="in_java_executable", input_type=File(optional=True), prefix="-java_executable", doc=InputDocumentation(doc="The Java executable. Usually Java is on the system PATH. If Java is not found, use this parameter to specify the full path to Java")), ToolInput(tag="in_java_heap_memory", input_type=Int(optional=True), prefix="-java_heapmemory", doc=InputDocumentation(doc="Maximum Java heap size (in MB) (default: '3500')")), ToolInput(tag="in_executable", input_type=File(optional=True), prefix="-executable", doc=InputDocumentation(doc="Path to the MSFragger executable to use; may be empty if the executable is globally available.")), ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="*                                                              Input File with specta for MSFragger (valid formats: 'mzML', 'mzXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                                                             MSFragger output file (valid formats: 'idXML')")), ToolInput(tag="in_opt_out", input_type=File(optional=True), prefix="-opt_out", doc=InputDocumentation(doc="MSFragger optional output file (valid formats: 'pepXML')")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="-database", doc=InputDocumentation(doc="*                                               Protein FASTA database file path (valid formats: 'FASTA', 'fasta', 'fa', 'fas')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                                                             MSFragger output file (valid formats: 'idXML')")), ToolOutput(tag="out_opt_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_opt_out", type_hint=File()), doc=OutputDocumentation(doc="MSFragger optional output file (valid formats: 'pepXML')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msfraggeradapter_V0_1_0().translate("wdl", allow_empty_container=True)

