from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Boolean, Int, File

Bioconda_Utils_Update_Pinning_V0_1_0 = CommandToolBuilder(tool="bioconda_utils_update_pinning", base_command=["bioconda-utils", "update-pinning"], inputs=[ToolInput(tag="in_packages", input_type=Array(t=String(), optional=True), prefix="--packages", doc=InputDocumentation(doc="Glob for package[s] to update, as needed due to a\nchange in pinnings (default: '*')")), ToolInput(tag="in_skip_additional_channels", input_type=Boolean(optional=True), prefix="--skip-additional-channels", doc=InputDocumentation(doc="[SKIP_ADDITIONAL_CHANNELS [SKIP_ADDITIONAL_CHANNELS ...]]\nSkip updating/bumping packges that are already built\nwith compatible pinnings in one of the given channels\nin addition to those listed in 'config'. (default: -)")), ToolInput(tag="in_skip_variants", input_type=Boolean(optional=True), prefix="--skip-variants", doc=InputDocumentation(doc="[SKIP_VARIANTS [SKIP_VARIANTS ...]]\nSkip packages that use one of the given variant keys.\n(default: -)")), ToolInput(tag="in_max_bumps", input_type=Int(optional=True), prefix="--max-bumps", doc=InputDocumentation(doc="Maximum number of recipes that will be updated.\n(default: -)")), ToolInput(tag="in_no_leaves", input_type=Boolean(optional=True), prefix="--no-leaves", doc=InputDocumentation(doc="Only update recipes with dependent packages. (default:\nFalse)")), ToolInput(tag="in_cache", input_type=File(optional=True), prefix="--cache", doc=InputDocumentation(doc="To speed up debugging, use repodata cached locally in\nthe provided filename. If the file does not exist, it\nwill be created the first time. (default: -)")), ToolInput(tag="in_pdb", input_type=Boolean(optional=True), prefix="--pdb", doc=InputDocumentation(doc="Drop into debugger on exception (default: False)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Limit maximum number of processes used. (default: 16)")), ToolInput(tag="in_loglevel", input_type=String(optional=True), prefix="--loglevel", doc=InputDocumentation(doc="Set logging level (debug, info, warning, error,\ncritical) (default: 'info')")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Write log to file (default: -)")), ToolInput(tag="in_log_file_level", input_type=File(optional=True), prefix="--logfile-level", doc=InputDocumentation(doc="Log level for log file (default: 'debug')")), ToolInput(tag="in_log_command_max_lines", input_type=Int(optional=True), prefix="--log-command-max-lines", doc=InputDocumentation(doc="Limit lines emitted for commands executed (default: -)\n")), ToolInput(tag="in_recipe_folder", input_type=String(), position=0, doc=InputDocumentation(doc="Path to folder containing recipes (default: recipes/)\n(default: -)")), ToolInput(tag="in_config", input_type=String(), position=1, doc=InputDocumentation(doc="Path to Bioconda config (default: config.yml)\n(default: -)"))], outputs=[], container="quay.io/biocontainers/bioconda-utils:0.17.5--pyhdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bioconda_Utils_Update_Pinning_V0_1_0().translate("wdl")

