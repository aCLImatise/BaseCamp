from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Cassiopee_V0_1_0 = CommandToolBuilder(tool="cassiopee", base_command=["cassiopee"], inputs=[ToolInput(tag="in_maximum_index_depth", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": maximum index depth / max pattern size")), ToolInput(tag="in_save_index_later", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc=": save index for later use")), ToolInput(tag="in__sequence_index", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": sequence to index")), ToolInput(tag="in__pattern_search", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc=": pattern to search")), ToolInput(tag="in_file_containing_pattern", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": file containing pattern to search")), ToolInput(tag="in__output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": output file")), ToolInput(tag="in_apply_tree_reduction", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": apply tree reduction")), ToolInput(tag="in_search_mode_dna", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": search mode: 0=DNA, 1=RNA, 2=Protein")), ToolInput(tag="in_allow_ambiguity_search", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": allow alphabet ambiguity search")), ToolInput(tag="in_max_consecutive_n", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc=": max consecutive N allowed matches in search")), ToolInput(tag="in_max_substitution_allowed", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=": max substitution allowed matches in search")), ToolInput(tag="in_max_indel_allowed", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": max indel allowed matches in search")), ToolInput(tag="in_generates_dot_file", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc=": generates a dot file of the graph")), ToolInput(tag="in_max_depth_graph", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": max depth of the graph")), ToolInput(tag="in_output_format_tsv", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": output format: 0:tsv (default), 1:json")), ToolInput(tag="in_minimum_position_sequence", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": minimum position in sequence")), ToolInput(tag="in_maximum_position_sequence", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc=": maximum position in sequence")), ToolInput(tag="in_apply_morphisms_pattern", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc=": apply morphisms to pattern")), ToolInput(tag="in__show_version", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": show version"))], outputs=[ToolOutput(tag="out__output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in__output_file", type_hint=File()), doc=OutputDocumentation(doc=": output file"))], container="quay.io/biocontainers/cassiopee:1.0.9--h77ca1fd_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cassiopee_V0_1_0().translate("wdl")

