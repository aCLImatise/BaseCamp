from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File

Str8Rzr_V0_1_0 = CommandToolBuilder(tool="str8rzr", base_command=["str8rzr"], inputs=[ToolInput(tag="in_reverse_complement_", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="(no reverse complement-- this turns off the default behavior of reverse-complementing matches on the negative strand)")), ToolInput(tag="in_verbose_prints_additional", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="(verbose ; prints out additional diagnostic information)")), ToolInput(tag="in_include_anchors_includes", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="(Include anchors ; includes the Anchor sequences in the reported haplotypes)")), ToolInput(tag="in_default_maximum_anchor", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="(default 1; the maximum Hamming distance used with anchor search. can only be 0, 1 or 2)")), ToolInput(tag="in_default_maximum_motif", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="(default 0; the maximum Hamming distance used with motif search. can only be 0 or 1)")), ToolInput(tag="in_required_locus_file", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="(REQUIRED; the locus config file used to define the STRs)")), ToolInput(tag="in_number_processorscpus_used", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="(The number of processors/cpus used)")), ToolInput(tag="in_filters_type_autosomes", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="(This filters on Type, e.g. AUTOSOMES; ie, it restricts the output to STRs that have the same type as specified in column 2 of the config file)")), ToolInput(tag="in_writes_output_filename", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="(This writes the output to filename, as opposed to standard out)")), ToolInput(tag="in_min_match_causes", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="(Min match; this causes haplotypes with less than f occurences to be omitted from the final output file"))], outputs=[ToolOutput(tag="out_filters_type_autosomes", output_type=File(optional=True), selector=InputSelector(input_to_select="in_filters_type_autosomes", type_hint=File()), doc=OutputDocumentation(doc="(This filters on Type, e.g. AUTOSOMES; ie, it restricts the output to STRs that have the same type as specified in column 2 of the config file)")), ToolOutput(tag="out_writes_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_writes_output_filename", type_hint=File()), doc=OutputDocumentation(doc="(This writes the output to filename, as opposed to standard out)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Str8Rzr_V0_1_0().translate("wdl", allow_empty_container=True)

