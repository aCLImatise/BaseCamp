from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Run_Mapsembler2_Pipeline_Sh_V0_1_0 = CommandToolBuilder(tool="run_mapsembler2_pipeline.sh", base_command=["run_mapsembler2_pipeline.sh"], inputs=[ToolInput(tag="in_file_containing_starters", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": file containing starters (fasta)")), ToolInput(tag="in_reads_separated_space", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="of reads separated by space, surrounded by the ''' character. Note that reads may be in fasta or fastq format, gzipped or not. Example: -r 'data_sample/reads_sequence1.fasta   data_sample/reads_sequence2.fasta.gz'.")), ToolInput(tag="in_kind_assembly_unitig", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": kind of assembly: 1=unitig (fasta), 2=contig (fasta), 3=unitig (graph), 4=contig(graph)")), ToolInput(tag="in_out_files_start", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="All out files will start with this prefix. Example: -p my_prefix")), ToolInput(tag="in_set_length_used", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Set the length of used kmers. Must fit the compiled value. Default=31. Example -k 31")), ToolInput(tag="in_set_minimal_coverage", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Set the minimal coverage. Default=5. Example -c 5")), ToolInput(tag="in_set_number_reads", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Set the number of authorized substitutions used while mapping reads on found SNPs. Default=1. Example: -d 1")), ToolInput(tag="in_estimated_genome_size", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="Estimated genome size. Used only to control memory usage. e.g. 3 billion (3000000000) uses 4Gb of RAM. Default=10 million. Example: -d 10000000")), ToolInput(tag="in_set_process_example", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="Set the process of search in the graph (1=Breadth  and 2=Depth). Default=1. Example: -f 1")), ToolInput(tag="in_set_nodes_length", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="Set the maximal nodes length . Default=40. Example: -x 40")), ToolInput(tag="in_set_graph_depth", input_type=Int(optional=True), prefix="-y", doc=InputDocumentation(doc="Set the maximal graph depth . Default=10000. Example: -y 10000")), ToolInput(tag="in_this_message_exist", input_type=String(optional=True), prefix="-h", doc=InputDocumentation(doc="this message and exist"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Mapsembler2_Pipeline_Sh_V0_1_0().translate("wdl", allow_empty_container=True)

