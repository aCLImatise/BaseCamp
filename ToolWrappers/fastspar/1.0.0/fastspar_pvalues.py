from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Fastspar_Pvalues_V0_1_0 = CommandToolBuilder(tool="fastspar_pvalues", base_command=["fastspar_pvalues"], inputs=[ToolInput(tag="in_otu_table", input_type=File(optional=True), prefix="--otu_table", doc=InputDocumentation(doc="OTU input table used to generated correlations")), ToolInput(tag="in_correlation", input_type=File(optional=True), prefix="--correlation", doc=InputDocumentation(doc="Correlation table generated by FastSpar")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Prefix output of bootstrap output files")), ToolInput(tag="in_permutations", input_type=Int(optional=True), prefix="--permutations", doc=InputDocumentation(doc="Number of permutations/ bootstraps")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Output p-value matrix filename")), ToolInput(tag="in_pseudo", input_type=Boolean(optional=True), prefix="--pseudo", doc=InputDocumentation(doc="Calculate pseudo p-values rather than exact p-values (default: false)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (default: 1)"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="Output p-value matrix filename"))], container="quay.io/biocontainers/fastspar:1.0.0--h7f8d780_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fastspar_Pvalues_V0_1_0().translate("wdl")

