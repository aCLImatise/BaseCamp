from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Float, String

Shiptv_V0_1_0 = CommandToolBuilder(tool="shiptv", base_command=["shiptv"], inputs=[ToolInput(tag="in_newick", input_type=File(optional=True), prefix="--newick", doc=InputDocumentation(doc="Phylogenetic tree Newick file  [required]")), ToolInput(tag="in_output_html", input_type=File(optional=True), prefix="--output-html", doc=InputDocumentation(doc="Output HTML tree path  [required]")), ToolInput(tag="in_output_newick", input_type=File(optional=True), prefix="--output-newick", doc=InputDocumentation(doc="Output Newick file")), ToolInput(tag="in_ref_genomes_genbank", input_type=File(optional=True), prefix="--ref-genomes-genbank", doc=InputDocumentation(doc="Reference genome sequences Genbank file")), ToolInput(tag="in_output_metadata_table", input_type=File(optional=True), prefix="--output-metadata-table", doc=InputDocumentation(doc="Output metadata table path")), ToolInput(tag="in_leaf_list", input_type=File(optional=True), prefix="--leaflist", doc=InputDocumentation(doc="Optional leaf names to select from\nphylogenetic tree for pruned tree\nvisualization. One leaf name per line.")), ToolInput(tag="in_genbank_metadata_fields", input_type=File(optional=True), prefix="--genbank-metadata-fields", doc=InputDocumentation(doc="Optional fields to extract from Genbank\nsource metadata. One field per line.")), ToolInput(tag="in_metadata", input_type=File(optional=True), prefix="--metadata", doc=InputDocumentation(doc="Optional tab-delimited metadata for user\nsamples to join with metadata derived from\nreference genome sequences Genbank file.\nSample IDs must be in the first column.")), ToolInput(tag="in_metadata_fields_in_order", input_type=File(optional=True), prefix="--metadata-fields-in-order", doc=InputDocumentation(doc="Optional list of fields in order to output\nin metadata table and HTML tree\nvisualization. One field per line.")), ToolInput(tag="in_no_fix_metadata", input_type=Boolean(optional=True), prefix="--no-fix-metadata", doc=InputDocumentation(doc="Try to automatically fix metadata from\nreference Genbank file.  [default: True]")), ToolInput(tag="in_collapse_support", input_type=Float(optional=True), prefix="--collapse-support", doc=InputDocumentation(doc="Collapse internal branches below specified\nbootstrap support value (default -1 for no\ncollapsing)  [default: -1.0]")), ToolInput(tag="in_no_highlight_user_samples", input_type=Boolean(optional=True), prefix="--no-highlight-user-samples", doc=InputDocumentation(doc="Highlight user samples with metadata field\nin tree.  [default: False]")), ToolInput(tag="in_out_group", input_type=String(optional=True), prefix="--outgroup", doc=InputDocumentation(doc="Tree outgroup taxa")), ToolInput(tag="in_no_midpoint_root", input_type=Boolean(optional=True), prefix="--no-midpoint-root", doc=InputDocumentation(doc="Set midpoint root  [default: False]")), ToolInput(tag="in_no_verbose", input_type=Boolean(optional=True), prefix="--no-verbose", doc=InputDocumentation(doc="Verbose logs  [default: False]")), ToolInput(tag="in_install_completion", input_type=Boolean(optional=True), prefix="--install-completion", doc=InputDocumentation(doc="Install completion for the current shell.")), ToolInput(tag="in_show_completion", input_type=Boolean(optional=True), prefix="--show-completion", doc=InputDocumentation(doc="Show completion for the current shell, to\ncopy it or customize the installation."))], outputs=[ToolOutput(tag="out_output_html", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_html", type_hint=File()), doc=OutputDocumentation(doc="Output HTML tree path  [required]")), ToolOutput(tag="out_output_newick", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_newick", type_hint=File()), doc=OutputDocumentation(doc="Output Newick file")), ToolOutput(tag="out_output_metadata_table", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_metadata_table", type_hint=File()), doc=OutputDocumentation(doc="Output metadata table path"))], container="quay.io/biocontainers/shiptv:0.4.0--pyh5e36f6f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Shiptv_V0_1_0().translate("wdl")

