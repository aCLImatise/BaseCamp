from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File

Yasm_V0_1_0 = CommandToolBuilder(tool="yasm", base_command=["yasm"], inputs=[ToolInput(tag="in_license", input_type=Boolean(optional=True), prefix="--license", doc=InputDocumentation(doc="show license text")), ToolInput(tag="in_arch", input_type=String(optional=True), prefix="--arch", doc=InputDocumentation(doc="select architecture (list with -a help)")), ToolInput(tag="in_parser", input_type=String(optional=True), prefix="--parser", doc=InputDocumentation(doc="select parser (list with -p help)")), ToolInput(tag="in_preproc", input_type=String(optional=True), prefix="--preproc", doc=InputDocumentation(doc="select preprocessor (list with -r help)")), ToolInput(tag="in_o_format", input_type=String(optional=True), prefix="--oformat", doc=InputDocumentation(doc="select object format (list with -f help)")), ToolInput(tag="in_d_format", input_type=String(optional=True), prefix="--dformat", doc=InputDocumentation(doc="select debugging format (list with -g help)")), ToolInput(tag="in_l_format", input_type=String(optional=True), prefix="--lformat", doc=InputDocumentation(doc="select list format (list with -L help)")), ToolInput(tag="in_list", input_type=File(optional=True), prefix="--list", doc=InputDocumentation(doc="name of list-file output")), ToolInput(tag="in_objfile", input_type=File(optional=True), prefix="--objfile", doc=InputDocumentation(doc="name of object-file output")), ToolInput(tag="in_map_file", input_type=File(optional=True), prefix="--mapfile", doc=InputDocumentation(doc="name of map-file output")), ToolInput(tag="in_machine", input_type=String(optional=True), prefix="--machine", doc=InputDocumentation(doc="select machine (list with -m help)")), ToolInput(tag="in_force_strict", input_type=String(optional=True), prefix="--force-strict", doc=InputDocumentation(doc="treat all sized operands as if `strict' was used")), ToolInput(tag="in_inhibits_warning_messages", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="inhibits warning messages")), ToolInput(tag="in_enablesdisables_warning", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="enables/disables warning")), ToolInput(tag="in_generate_makefile_dependencies", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="generate Makefile dependencies on stdout")), ToolInput(tag="in_redirect_error_messages_file", input_type=File(optional=True), prefix="-E", doc=InputDocumentation(doc="redirect error messages to file")), ToolInput(tag="in_redirect_error_messages_stdout", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="redirect error messages to stdout")), ToolInput(tag="in_preproc_only", input_type=Boolean(optional=True), prefix="--preproc-only", doc=InputDocumentation(doc="preprocess only (writes output to stdout by default)")), ToolInput(tag="in_var_18", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="add include path")), ToolInput(tag="in_var_19", input_type=File(optional=True), prefix="-I", doc=InputDocumentation(doc="add include path")), ToolInput(tag="in_preinclude_file", input_type=File(optional=True), prefix="-P", doc=InputDocumentation(doc="pre-include file")), ToolInput(tag="in_var_21", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="<macro[=value]>      pre-define a macro, optionally to value")), ToolInput(tag="in_var_22", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="<macro[=value]>      pre-define a macro, optionally to value")), ToolInput(tag="in_var_23", input_type=String(optional=True), prefix="-u", doc=InputDocumentation(doc="undefine a macro")), ToolInput(tag="in_var_24", input_type=String(optional=True), prefix="-U", doc=InputDocumentation(doc="undefine a macro")), ToolInput(tag="in_select_errorwarning_message", input_type=String(optional=True), prefix="-X", doc=InputDocumentation(doc="select error/warning message style (`gnu' or `vc')")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="prepend argument to name of all external symbols")), ToolInput(tag="in_suffix", input_type=String(optional=True), prefix="--suffix", doc=InputDocumentation(doc="append argument to name of all external symbols")), ToolInput(tag="in_postfix", input_type=String(optional=True), prefix="--postfix", doc=InputDocumentation(doc="append argument to name of all external symbols"))], outputs=[ToolOutput(tag="out_list", output_type=File(optional=True), selector=InputSelector(input_to_select="in_list", type_hint=File()), doc=OutputDocumentation(doc="name of list-file output")), ToolOutput(tag="out_objfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_objfile", type_hint=File()), doc=OutputDocumentation(doc="name of object-file output")), ToolOutput(tag="out_map_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_map_file", type_hint=File()), doc=OutputDocumentation(doc="name of map-file output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Yasm_V0_1_0().translate("wdl", allow_empty_container=True)

