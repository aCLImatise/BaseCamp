!Command
command:
- vsyasm
positional: []
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag: !Flag
  description: "show version text\n--license               show license text\n-h,\
    \ --help              show help text\n--arch=<arch>           select architecture\
    \ (list with -a help)\n-a <arch>\n--parser=<parser>       select parser (list\
    \ with -p help)\n-p <parser>\n--preproc=<preproc>     select preprocessor (list\
    \ with -r help)\n-r <preproc>\n--oformat=<format>      select object format (list\
    \ with -f help)\n-f <format>\n--dformat=<debug>       select debugging format\
    \ (list with -g help)\n-g <debug>\n--lformat=<list>        select list format\
    \ (list with -L help)\n-L <list>\n--list=<pathname>       name of list-file output\
    \ directory\n-l <pathname>\n--objdir=<pathname>     name of object-file output\
    \ directory\n-o <pathname>\n--mapdir=<pathname>     name of map-file output directory\n\
    --listext=<ext>         list-file extension (default `lst')\n--objext=<ext>  \
    \        object-file extension (default is by object format)\n--mapext=<ext> \
    \         map-file extension (default `map')\n--machine=<machine>     select machine\
    \ (list with -m help)\n-m <machine>\n--force-strict          treat all sized operands\
    \ as if `strict' was used\n-w                      inhibits warning messages\n\
    -W                      enables/disables warning\n-E <file>               redirect\
    \ error messages to file\n-s                      redirect error messages to stdout\n\
    -i <path>               add include path\n-I <path>               add include\
    \ path\n-P <filename>           pre-include file\n-d <macro[=value]>      pre-define\
    \ a macro, optionally to value\n-D <macro[=value]>      pre-define a macro, optionally\
    \ to value\n-u <macro>              undefine a macro\n-U <macro>             \
    \ undefine a macro\n-X <style>              select error/warning message style\
    \ (`gnu' or `vc')\n--prefix=<prefix>       prepend argument to name of all external\
    \ symbols\n--suffix=<suffix>       append argument to name of all external symbols\n\
    --postfix=<suffix>      append argument to name of all external symbols"
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: vsyasm [option]* file...\nOptions:\n    --version             \
  \  show version text\n    --license               show license text\n    -h, --help\
  \              show help text\n    --arch=<arch>           select architecture (list\
  \ with -a help)\n     -a <arch>\n    --parser=<parser>       select parser (list\
  \ with -p help)\n     -p <parser>\n    --preproc=<preproc>     select preprocessor\
  \ (list with -r help)\n     -r <preproc>\n    --oformat=<format>      select object\
  \ format (list with -f help)\n     -f <format>\n    --dformat=<debug>       select\
  \ debugging format (list with -g help)\n     -g <debug>\n    --lformat=<list>  \
  \      select list format (list with -L help)\n     -L <list>\n    --list=<pathname>\
  \       name of list-file output directory\n     -l <pathname>\n    --objdir=<pathname>\
  \     name of object-file output directory\n     -o <pathname>\n    --mapdir=<pathname>\
  \     name of map-file output directory\n    --listext=<ext>         list-file extension\
  \ (default `lst')\n    --objext=<ext>          object-file extension (default is\
  \ by object format)\n    --mapext=<ext>          map-file extension (default `map')\n\
  \    --machine=<machine>     select machine (list with -m help)\n     -m <machine>\n\
  \    --force-strict          treat all sized operands as if `strict' was used\n\
  \    -w                      inhibits warning messages\n    -W                 \
  \     enables/disables warning\n    -E <file>               redirect error messages\
  \ to file\n    -s                      redirect error messages to stdout\n    -i\
  \ <path>               add include path\n    -I <path>               add include\
  \ path\n    -P <filename>           pre-include file\n    -d <macro[=value]>   \
  \   pre-define a macro, optionally to value\n    -D <macro[=value]>      pre-define\
  \ a macro, optionally to value\n    -u <macro>              undefine a macro\n \
  \   -U <macro>              undefine a macro\n    -X <style>              select\
  \ error/warning message style (`gnu' or `vc')\n    --prefix=<prefix>       prepend\
  \ argument to name of all external symbols\n    --suffix=<suffix>       append argument\
  \ to name of all external symbols\n    --postfix=<suffix>      append argument to\
  \ name of all external symbols\n\nFiles are asm sources to be assembled.\n\nSample\
  \ invocation:\n   vsyasm -f win64 -o objdir source1.asm source2.asm\n\nAll options\
  \ apply to all files.\n\nReport bugs to bug-yasm@tortall.net\n"
generated_using:
- --help
