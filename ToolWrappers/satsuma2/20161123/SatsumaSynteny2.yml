!Command
command:
- SatsumaSynteny2
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -q
  description: '<string> : query fasta sequence'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nInvalid command-line arg: --help\n\nSatsumaSynteny2: Wrapper around\
  \ high-sensitivity alignments.\n\n\nAvailable arguments:\n\n-q<string> : query fasta\
  \ sequence\n\0-t<string> : target fasta sequence\n\0-o<string> : output directory\n\
  \0-l<int> : minimum alignment length (def=0)\n\0-t_chunk<int> : target chunk size\
  \ (def=4096)\n\0-q_chunk<int> : query chunk size (def=4096)\n\0-sl_mem<int> : memory\
  \ requirement for slaves (Gb) (def=100)\n\0-do_refine<bool> : refinement steps (def=0)\n\
  \0-min_prob<double> : minimum probability to keep match (def=0.99999)\n\0-cutoff<double>\
  \ : signal cutoff (def=1.8)\n\0-prob_table<bool> : approximate match prob using\
  \ a table lookup in slaves (def=0)\n\0-min_matches<int> : minimum matches per target\
  \ to keep iterating (def=20)\n\0-m<int> : number of jobs per block (def=4)\n\0-slaves<int>\
  \ : number of processing slaves (def=1)\n\0-threads<int> : number of working threads\
  \ per processing slave (def=1)\n\0-km_mem<int> : memory required for kmatch (Gb)\
  \ (def=100)\n\0-km_sync<bool> : run kmatch jobs synchronously (def=1)\n\0-seed<string>\
  \ : loads seeds and runs from there (kmatch files prefix) (def=)\n\0-min_seed_length<int>\
  \ : minimum length for kmatch seeds (after collapsing) (def=24)\n\0-max_seed_kmer_freq<int>\
  \ : maximum frequency for kmatch seed kmers (def=1)\n\0-old_seed<string> : loads\
  \ seeds and runs from there (xcorr*data) (def=)\n\0-pixel<int> : number of blocks\
  \ per pixel (def=24)\n\0-nofilter<bool> : do not pre-filter seeds (slower runtime)\
  \ (def=0)\n\0-dups<bool> : allow for duplications in the query sequence (def=0)\n\
  \0-dump_cycle_matches<bool> : dump matches on each cycle (for debug/testing) (def=0)\n\
  \0\n"
generated_using:
- --help
docker_image:
