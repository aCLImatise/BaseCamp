!Command
command:
- bam2starch-megarow
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --keep-header
  description: to preserve the header data from the SAM input as
  args: !SimpleFlagArg
    name: option
- !Flag
  optional: true
  synonyms:
  - --all-reads
  description: "(-a)\nInclude both unmapped and mapped reads in output"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --split
  description: "(-s)\nSplit reads with 'N' CIGAR operations into separate BED\nelements"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --split-with-deletions
  description: "(-S)\nSplit reads with 'N' and 'D' CIGAR operations into\nseparate\
    \ elements"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --reduced
  description: "(-R)\nOnly print first six columns of output"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --do-not-sort
  description: "(-d)\nDo not sort BED output with sort-bed (not compatible with --output=starch)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-mem
  description: "(-m <val>)\nSets aside <value> memory for sorting BED output. For\
    \ example, <value> can\nbe 8G, 8000M or 8000000000 to specify 8 GB of memory (default\
    \ is 2G)"
  args: !SimpleFlagArg
    name: value
- !Flag
  optional: true
  synonyms:
  - --sort-tmpdir
  description: "(-r <dir>)\nOptionally sets [dir] as temporary directory for sort\
    \ data, when used in\nconjunction with --max-mem=[value], instead of the host's\
    \ operating system\ndefault temporary directory"
  args: !SimpleFlagArg
    name: dir
- !Flag
  optional: true
  synonyms:
  - --starch-bzip2
  description: "(-z)\nUsed with --output=starch, the compressed output explicitly\
    \ applies the bzip2\nalgorithm to compress intermediate data (default is bzip2)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --starch-gzip
  description: "(-g)\nUsed with --output=starch, the compressed output applies gzip\
    \ compression on\nintermediate data"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --starch-note
  description: "=\"xyz...\" (-e \"xyz...\")\nUsed with --output=starch, this adds\
    \ a note to the Starch archive metadata"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  - --help
  description: "[-bam|-gff|-gtf|-gvf|-psl|-rmsk|-sam|-vcf|-wig] (-h | -h <fmt>)\n\
    Show general help message (or detailed help for a specified input format)"
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: "(-w)\nShow application version\n"
  args: !EmptyFlagArg {}
help_text: "convert2bed -i bam\n  version:  2.4.39\n  author:   Alex Reynolds\n\n\
  \  Converts 0-based, half-open [a-1,b) headered or headerless BAM input\n  into\
  \ 0-based, half-open [a-1,b) extended BED or BEDOPS Starch\n\n  Usage:\n\n  $ bam2bed\
  \ < foo.bam > sorted-foo.bam.bed\n  $ bam2starch < foo.bam > sorted-foo.bam.starch\n\
  \n  Or:\n\n  $ convert2bed -i bam < foo.bam > sorted-foo.bam.bed\n  $ convert2bed\
  \ -i bam -o starch < foo.bam > sorted-foo.bam.starch\n\n  We make no assumptions\
  \ about sort order from converted output. Apply\n  the usage case displayed to pass\
  \ data to the BEDOPS sort-bed application,\n  which generates lexicographically-sorted\
  \ BED data as output.\n\n  If you want to skip sorting, use the --do-not-sort option:\n\
  \n  $ bam2bed --do-not-sort < foo.bam > unsorted-foo.bam.bed\n\n  The BAM format\
  \ is an indexed, binary representation of a SAM (Sequence\n  Alignment/Map) file.\
  \ Internally, it is a 0-based, half-open [a-1,b)\n  file, but printing it to text\
  \ via samtools turns it into a SAM file, which\n  is 1-based, closed [a,b]. We convert\
  \ this indexing back to 0-based, half-\n  open when creating BED output.\n\n  We\
  \ process SAM columns from mappable reads (as described by \n  http://samtools.github.io/hts-specs/SAMv1.pdf)\
  \ converting them into the first\n  six UCSC BED columns as follows:\n\n  - RNAME\
  \                     <-->   chromosome (1st column)\n  - POS - 1              \
  \     <-->   start (2nd column)\n  - POS + length(SEQ) - 1     <-->   stop (3rd\
  \ column)\n  - QNAME                     <-->   id (4th column)\n  - FLAG      \
  \                <-->   score (5th column)\n  - 16 & FLAG                 <--> \
  \  strand (6th column)\n\n  The remaining SAM columns are mapped intact, in order,\
  \ to adjacent BED\n  columns:\n\n  - MAPQ\n  - CIGAR\n  - RNEXT\n  - PNEXT\n  -\
  \ TLEN\n  - SEQ\n  - QUAL\n\n  Because we have mapped all columns, we can translate\
  \ converted BED data back\n  to headerless SAM reads with a simple awk statement\
  \ or other script that\n  calculates 1-based coordinates and permutes columns.\n\
  \n  By default, we only process mapped reads. If you also want to convert unmapped\n\
  \  reads, add the --all-reads option.\n\n  In the case of RNA-seq data with skipped\
  \ regions ('N' components in the\n  read's CIGAR string), the --split option will\
  \ split the read into two or more\n  separate BED elements.\n\n  The header section\
  \ is normally stripped from the output. You can use the\n  --keep-header option\
  \ to preserve the header data from the SAM input as\n  pseudo-BED elements that\
  \ use the \"_header\" chromosome name.\n\n  BAM conversion options:\n\n  --all-reads\
  \ (-a)\n      Include both unmapped and mapped reads in output\n  --keep-header\
  \ (-k)\n      Preserve header section as pseudo-BED elements\n  --split (-s)\n \
  \     Split reads with 'N' CIGAR operations into separate BED\n      elements\n\
  \  --split-with-deletions (-S)\n      Split reads with 'N' and 'D' CIGAR operations\
  \ into\n      separate elements\n  --reduced (-R)\n      Only print first six columns\
  \ of output\n\n  Other processing options:\n\n  --do-not-sort (-d)\n      Do not\
  \ sort BED output with sort-bed (not compatible with --output=starch)\n  --max-mem=<value>\
  \ (-m <val>)\n      Sets aside <value> memory for sorting BED output. For example,\
  \ <value> can\n      be 8G, 8000M or 8000000000 to specify 8 GB of memory (default\
  \ is 2G)\n  --sort-tmpdir=<dir> (-r <dir>)\n      Optionally sets [dir] as temporary\
  \ directory for sort data, when used in\n      conjunction with --max-mem=[value],\
  \ instead of the host's operating system\n      default temporary directory\n  --starch-bzip2\
  \ (-z)\n      Used with --output=starch, the compressed output explicitly applies\
  \ the bzip2\n      algorithm to compress intermediate data (default is bzip2)\n\
  \  --starch-gzip (-g)\n      Used with --output=starch, the compressed output applies\
  \ gzip compression on\n      intermediate data\n  --starch-note=\"xyz...\" (-e \"\
  xyz...\")\n      Used with --output=starch, this adds a note to the Starch archive\
  \ metadata\n  --help | --help[-bam|-gff|-gtf|-gvf|-psl|-rmsk|-sam|-vcf|-wig] (-h\
  \ | -h <fmt>)\n      Show general help message (or detailed help for a specified\
  \ input format)\n  --version (-w)\n      Show application version\n\n"
generated_using:
- --help
docker_image:
