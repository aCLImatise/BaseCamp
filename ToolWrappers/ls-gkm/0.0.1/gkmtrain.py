from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, String

Gkmtrain_V0_1_0 = CommandToolBuilder(tool="gkmtrain", base_command=["gkmtrain"], inputs=[ToolInput(tag="in_set_kernel_function", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="<0 ~ 5>   set kernel function (default: 4 wgkm)\nNOTE: RBF kernels (3 and 5) work best with -c 10 -g 2\n0 -- gapped-kmer\n1 -- estimated l-mer with full filter\n2 -- estimated l-mer with truncated filter (gkm)\n3 -- gkm + RBF (gkmrbf)\n4 -- gkm + center weighted (wgkm)\n[weight = max(M, floor(M*exp(-ln(2)*D/H)+1))]\n5 -- gkm + center weighted + RBF (wgkmrbf)")), ToolInput(tag="in_set_l_default", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="set word length, 3<=l<=12 (default: 11)")), ToolInput(tag="in_set_number_informative", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="set number of informative column, k<=l (default: 7)")), ToolInput(tag="in_set_maximum_number", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="set maximum number of mismatches to consider, d<=4 (default: 3)")), ToolInput(tag="in_set_gamma_default", input_type=Float(optional=True), prefix="-g", doc=InputDocumentation(doc="set gamma for RBF kernel. -t 3 or 5 only (default: 1.0)")), ToolInput(tag="in_set_initial_value", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="set the initial value (M) of the exponential decay function\nfor wgkm-kernels. max=255, -t 4 or 5 only (default: 50)")), ToolInput(tag="in_set_parameter_h", input_type=Float(optional=True), prefix="-H", doc=InputDocumentation(doc="set the half-life parameter (H) that is the distance (D) required\nto fall to half of its initial value in the exponential decay\nfunction for wgkm-kernels. -t 4 or 5 only (default: 50)")), ToolInput(tag="in_set_svmc_default", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc="set the regularization parameter SVM-C (default: 1.0)")), ToolInput(tag="in_set_epsilon_default", input_type=Float(optional=True), prefix="-e", doc=InputDocumentation(doc="set the precision parameter epsilon (default: 0.001)")), ToolInput(tag="in_set_parameter_svmc", input_type=Float(optional=True), prefix="-w", doc=InputDocumentation(doc="set the parameter SVM-C to w*C for the positive set (default: 1.0)")), ToolInput(tag="in_set_cache_size", input_type=Float(optional=True), prefix="-m", doc=InputDocumentation(doc="set cache memory size in MB (default: 100.0)\nNOTE: Large cache signifcantly reduces runtime. >4Gb is recommended")), ToolInput(tag="in_set_use_heuristics", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="if set, use the shrinking heuristics")), ToolInput(tag="in_set_nfold_cross", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="set N-fold cross validation mode (default: no cross validation)")), ToolInput(tag="in_run_cross_validation", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="run i-th cross validation only 1<=i<=ncv (default: all)")), ToolInput(tag="in_set_random_seed", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="set random seed for shuffling in cross validation mode (default: 1)")), ToolInput(tag="in_set_level_", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="<0 ~ 4>   set the level of verbosity (default: 2)\n0 -- error msgs only (ERROR)\n1 -- warning msgs (WARN)\n2 -- progress msgs at coarse-grained level (INFO)\n3 -- progress msgs at fine-grained level (DEBUG)\n4 -- progress msgs at finer-grained level (TRACE)")), ToolInput(tag="in_set_number_default", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="set the number of threads for parallel calculation, 1, 4, or 16\n(default: 1)\n")), ToolInput(tag="in_pos_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_neg_file", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_out_prefix", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gkmtrain_V0_1_0().translate("wdl", allow_empty_container=True)

