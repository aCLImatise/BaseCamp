from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Preprocess_Dataset_V0_1_0 = CommandToolBuilder(tool="preprocess_dataset", base_command=["preprocess_dataset"], inputs=[ToolInput(tag="in_disable_filtering", input_type=Boolean(optional=True), prefix="--disable_filtering", doc=InputDocumentation(doc="skip the filtering step")), ToolInput(tag="in_disable_rna_shapes", input_type=Boolean(optional=True), prefix="--disable_RNAshapes", doc=InputDocumentation(doc="skip secondary structure prediction with RNAshapes")), ToolInput(tag="in_disable_rna_structure", input_type=Boolean(optional=True), prefix="--disable_RNAstructure", doc=InputDocumentation(doc="skip secondary structure prediction with RNAstructures")), ToolInput(tag="in_generate_negative", input_type=Boolean(optional=True), prefix="--generate_negative", doc=InputDocumentation(doc="generate a negative set for classification")), ToolInput(tag="in_min_score", input_type=Int(optional=True), prefix="--min_score", doc=InputDocumentation(doc="filtering: minimum score for binding site (default:\n0.0)")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min_length", doc=InputDocumentation(doc="filtering: minimum binding site length (default: 8)")), ToolInput(tag="in_max_length", input_type=Int(optional=True), prefix="--max_length", doc=InputDocumentation(doc="filtering: maximum binding site length (default: 75)")), ToolInput(tag="in_elongation", input_type=Int(optional=True), prefix="--elongation", doc=InputDocumentation(doc="elongation: span for up- and downstream elongation of\nbinding sites (default: 20)")), ToolInput(tag="in_genome_genes", input_type=String(optional=True), prefix="--genome_genes", doc=InputDocumentation(doc="negative set generation: gene boundaries")), ToolInput(tag="in_skip_check", input_type=Boolean(optional=True), prefix="--skip_check", doc=InputDocumentation(doc="skip check for installed prerequisites")), ToolInput(tag="in_working_dir", input_type=String(), position=0, doc=InputDocumentation(doc="working/output directory")), ToolInput(tag="in_dataset_name", input_type=String(), position=1, doc=InputDocumentation(doc="dataset name")), ToolInput(tag="in_input", input_type=String(), position=2, doc=InputDocumentation(doc="input file in .bed format")), ToolInput(tag="in_genome", input_type=String(), position=3, doc=InputDocumentation(doc="reference genome in FASTA format")), ToolInput(tag="in_genome_sizes", input_type=String(), position=4, doc=InputDocumentation(doc="chromosome sizes of reference genome (e.g. from http:/\n/hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.\nchrom.sizes)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Preprocess_Dataset_V0_1_0().translate("wdl", allow_empty_container=True)

