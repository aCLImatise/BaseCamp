from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String

Dram_Setup_Py_Set_Database_Locations_V0_1_0 = CommandToolBuilder(tool="DRAM_setup.py_set_database_locations", base_command=["DRAM-setup.py", "set_database_locations"], inputs=[ToolInput(tag="in_kegg_db_loc", input_type=File(optional=True), prefix="--kegg_db_loc", doc=InputDocumentation(doc="mmseqs2 database file from kegg .pep file (default:\nNone)")), ToolInput(tag="in_k_of_am_hmm_loc", input_type=File(optional=True), prefix="--kofam_hmm_loc", doc=InputDocumentation(doc="hmm file for KOfam, already processed withhmmpress\n(default: None)")), ToolInput(tag="in_k_of_am_ko_list_loc", input_type=File(optional=True), prefix="--kofam_ko_list_loc", doc=InputDocumentation(doc="KOfam ko list file (default: None)")), ToolInput(tag="in_uniref_db_loc", input_type=File(optional=True), prefix="--uniref_db_loc", doc=InputDocumentation(doc="mmseqs2 database file from uniref .faa (default: None)")), ToolInput(tag="in_pfam_db_loc", input_type=File(optional=True), prefix="--pfam_db_loc", doc=InputDocumentation(doc="mmseqs2 database file from pfam .hmm (default: None)")), ToolInput(tag="in_pfam_hmm_dat", input_type=File(optional=True), prefix="--pfam_hmm_dat", doc=InputDocumentation(doc="pfam hmm .dat file to get PF descriptions (default:\nNone)")), ToolInput(tag="in_db_can_db_loc", input_type=File(optional=True), prefix="--dbcan_db_loc", doc=InputDocumentation(doc="hmm file for dbcan, already processed with hmmpress\n(default: None)")), ToolInput(tag="in_db_can_fam_activities", input_type=File(optional=True), prefix="--dbcan_fam_activities", doc=InputDocumentation(doc="CAZY family activities file (default: None)")), ToolInput(tag="in_vo_gdb_db_loc", input_type=File(optional=True), prefix="--vogdb_db_loc", doc=InputDocumentation(doc="hmm file for vogdb, already processed with hmmpress\n(default: None)")), ToolInput(tag="in_vog_annotations", input_type=File(optional=True), prefix="--vog_annotations", doc=InputDocumentation(doc="vog annotations file (default: None)")), ToolInput(tag="in_viral_db_loc", input_type=File(optional=True), prefix="--viral_db_loc", doc=InputDocumentation(doc="mmseqs2 database file from ref seq viral gene\ncollection (default: None)")), ToolInput(tag="in_peptidase_db_loc", input_type=File(optional=True), prefix="--peptidase_db_loc", doc=InputDocumentation(doc="mmseqs2 database file from MEROPS database (default:\nNone)")), ToolInput(tag="in_description_db_loc", input_type=String(optional=True), prefix="--description_db_loc", doc=InputDocumentation(doc="Location to write description sqlite db (default:\nNone)")), ToolInput(tag="in_genome_summary_form_loc", input_type=File(optional=True), prefix="--genome_summary_form_loc", doc=InputDocumentation(doc="File path to genome summary form (default: None)")), ToolInput(tag="in_module_step_form_loc", input_type=File(optional=True), prefix="--module_step_form_loc", doc=InputDocumentation(doc="File path to module step form (default: None)")), ToolInput(tag="in_etc_module_database_loc", input_type=File(optional=True), prefix="--etc_module_database_loc", doc=InputDocumentation(doc="File path to etc module database (default: None)")), ToolInput(tag="in_function_heat_map_form_loc", input_type=File(optional=True), prefix="--function_heatmap_form_loc", doc=InputDocumentation(doc="File path to function heatmap form (default: None)")), ToolInput(tag="in_amg_database_loc", input_type=File(optional=True), prefix="--amg_database_loc", doc=InputDocumentation(doc="File path to amg database (default: None)"))], outputs=[], container="quay.io/biocontainers/dram:1.1.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dram_Setup_Py_Set_Database_Locations_V0_1_0().translate("wdl")

