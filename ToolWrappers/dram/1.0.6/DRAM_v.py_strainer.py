from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Dram_V_Py_Strainer_V0_1_0 = CommandToolBuilder(tool="DRAM_v.py_strainer", base_command=["DRAM-v.py", "strainer"], inputs=[ToolInput(tag="in_input_annotations", input_type=File(optional=True), prefix="--input_annotations", doc=InputDocumentation(doc="annotations file to pull genes from (default: None)")), ToolInput(tag="in_input_fast_a", input_type=File(optional=True), prefix="--input_fasta", doc=InputDocumentation(doc="fasta file to filter (default: None)")), ToolInput(tag="in_output_fast_a", input_type=String(optional=True), prefix="--output_fasta", doc=InputDocumentation(doc="location to write filtered fasta (default:\npull_genes.fasta)")), ToolInput(tag="in_fast_as", input_type=Boolean(optional=True), prefix="--fastas", doc=InputDocumentation(doc="[FASTAS [FASTAS ...]]\nspace separated list of fastas to keep (default: None)")), ToolInput(tag="in_scaffolds", input_type=Boolean(optional=True), prefix="--scaffolds", doc=InputDocumentation(doc="[SCAFFOLDS [SCAFFOLDS ...]]\nspace separated list of scaffolds to keep (default:\nNone)")), ToolInput(tag="in_genes", input_type=Boolean(optional=True), prefix="--genes", doc=InputDocumentation(doc="[GENES [GENES ...]]\nspace separated list of genes to keep (default: None)")), ToolInput(tag="in_identifiers", input_type=Boolean(optional=True), prefix="--identifiers", doc=InputDocumentation(doc="[IDENTIFIERS [IDENTIFIERS ...]]\ndatabase identifiers to keep (default: None)")), ToolInput(tag="in_categories", input_type=Boolean(optional=True), prefix="--categories", doc=InputDocumentation(doc="[CATEGORIES [CATEGORIES ...]]\ndistillate categories to keep genes from (default:\nNone)")), ToolInput(tag="in_amg_flags", input_type=String(optional=True), prefix="--amg_flags", doc=InputDocumentation(doc="AMG flags to keep, if any one is present then it will\nbe kept (default: None)")), ToolInput(tag="in_aux_scores", input_type=Boolean(optional=True), prefix="--aux_scores", doc=InputDocumentation(doc="[AUX_SCORES [AUX_SCORES ...]]\nspace separate list of auxiliary scores to keep\n(default: None)")), ToolInput(tag="in_vir_sorter_category", input_type=Boolean(optional=True), prefix="--virsorter_category", doc=InputDocumentation(doc="[VIRSORTER_CATEGORY [VIRSORTER_CATEGORY ...]]\nspace separate list of virsorter categories to keep\n(default: None)")), ToolInput(tag="in_putative_a_mgs", input_type=Boolean(optional=True), prefix="--putative_amgs", doc=InputDocumentation(doc="Only keep genes considered putative AMGs (default:\nFalse)")), ToolInput(tag="in_max_auxiliary_score", input_type=Int(optional=True), prefix="--max_auxiliary_score", doc=InputDocumentation(doc="Maximum auxiliary score to consider gene as potential\nAMG (default: 3)")), ToolInput(tag="in_remove_transposons", input_type=Boolean(optional=True), prefix="--remove_transposons", doc=InputDocumentation(doc="Do not consider genes on scaffolds with transposons as\npotential AMGs (default: False)")), ToolInput(tag="in_remove_fs", input_type=Boolean(optional=True), prefix="--remove_fs", doc=InputDocumentation(doc="Do not consider genes near ends of scaffolds as\npotential AMGs (default: False)")), ToolInput(tag="in_remove_js", input_type=Boolean(optional=True), prefix="--remove_js", doc=InputDocumentation(doc="Do not consider genes on possible non-viral contigs as\npotential AMGs (default: False)\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dram_V_Py_Strainer_V0_1_0().translate("wdl", allow_empty_container=True)

