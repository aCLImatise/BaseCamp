!Command
command:
- mixcr
- exportReadsForClones
positional:
- !Positional
  optional: false
  position: 0
  name: scr
  description: ''
- !Positional
  optional: false
  position: 1
  name: exportReadsForClones
  description: ''
- !Positional
  optional: true
  position: 2
  name: ids
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: Verbose warning messages.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --force-overwrite
  description: Force overwrite of output file(s).
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -nw
  - --no-warnings
  description: Suppress all warning messages.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --separate
  description: "Create separate files for each clone. File or pair of '_R1'/'_R2'\
    \ files, with\n'_clnN' suffix, where N is clone index, will be created for each\
    \ clone\nindex.\n"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --id
  description: ''
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fs
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for command\
  \ usage.\nUsage: scr exportReadsForClones [-fs] [--verbose] [-nw] [--id [<ids>...]]...\
  \ <in> <out>\nExport reads for particular clones from \"clones & alignments\" (*.clna)\
  \ file. Output file name will\nbe transformed into '_R1'/'_R2' pair in case of paired\
  \ end reads. Use cloneId = -1 to export\nalignments not assigned to any clone (not\
  \ assembled). If no clone ids are specified (only input and\noutput filenames are\
  \ specified) all reads assigned to clonotypes will be exported.\n      <in>    \
  \             input_file.clna\n      <out>                [output_file(.fastq[.gz]|fasta)]\n\
  \      --id [<ids>...]      [cloneId1 [cloneId2 [cloneId3]]]\n      --verbose  \
  \          Verbose warning messages.\n  -f, --force-overwrite    Force overwrite\
  \ of output file(s).\n      -nw, --no-warnings   Suppress all warning messages.\n\
  \  -s, --separate           Create separate files for each clone. File or pair of\
  \ '_R1'/'_R2' files, with\n                             '_clnN' suffix, where N\
  \ is clone index, will be created for each clone\n                             index.\n"
generated_using:
- --help
docker_image:
