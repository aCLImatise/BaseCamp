from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Float, File, String, Int, Directory, Array, Boolean

Megalodon_Extras_Calibrate_Generate_Variant_Stats_V0_1_0 = CommandToolBuilder(tool="megalodon_extras_calibrate_generate_variant_stats", base_command=["megalodon_extras", "calibrate", "generate_variant_stats"], inputs=[ToolInput(tag="in_guppy_config", input_type=Float(optional=True), prefix="--guppy-config", doc=InputDocumentation(doc="Guppy config. Default:\ndna_r9.4.1_450bps_modbases_5mc_hac.cfg")), ToolInput(tag="in_guppy_server_path", input_type=File(optional=True), prefix="--guppy-server-path", doc=InputDocumentation(doc="Path to guppy server executable. Default: ./ont-\nguppy/bin/guppy_basecall_server")), ToolInput(tag="in_guppy_server_port", input_type=String(optional=True), prefix="--guppy-server-port", doc=InputDocumentation(doc="Guppy server port. Default: Guppy auto")), ToolInput(tag="in_guppy_params", input_type=String(optional=True), prefix="--guppy-params", doc=InputDocumentation(doc="Extra guppy server parameters. Main purpose for\noptimal performance based on compute environment.\nQuote parameters to avoid them being parsed by\nmegalodon.")), ToolInput(tag="in_guppy_concurrent_reads", input_type=Int(optional=True), prefix="--guppy-concurrent-reads", doc=InputDocumentation(doc="Number of reads to process concurrently within each\nworker processes. Default: 10")), ToolInput(tag="in_guppy_timeout", input_type=Float(optional=True), prefix="--guppy-timeout", doc=InputDocumentation(doc="Timeout to wait for guppy server to call a single read\nin seconds. Default: 120.000000")), ToolInput(tag="in_guppy_logs_output_directory", input_type=Directory(optional=True), prefix="--guppy-logs-output-directory", doc=InputDocumentation(doc="Directory to output guppy logs. Default: guppy_logs")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference FASTA file used for mapping called reads.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Filename to output statistics. Default:")), ToolInput(tag="in_read_ids_filename", input_type=File(optional=True), prefix="--read-ids-filename", doc=InputDocumentation(doc="File containing read ids to process (one per line).\nDefault: All reads")), ToolInput(tag="in_devices", input_type=Array(t=String(), optional=True), prefix="--devices", doc=InputDocumentation(doc="GPU devices for guppy or taiyaki basecalling backends.")), ToolInput(tag="in_not_recursive", input_type=Boolean(optional=True), prefix="--not-recursive", doc=InputDocumentation(doc="Only search for fast5 read files directly found within\nthe fast5 directory. Default: search recursively")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of parallel processes. Default: 1")), ToolInput(tag="in_suppress_progress", input_type=Boolean(optional=True), prefix="--suppress-progress", doc=InputDocumentation(doc="Suppress progress bar.")), ToolInput(tag="in_compute_false_reference_scores", input_type=Boolean(optional=True), prefix="--compute-false-reference-scores", doc=InputDocumentation(doc="Compute scores given a false reference. Default:\ncompute all scores with ground truth correct\nreference.***** Experimental feature, may contain bugs\n*****.\n")), ToolInput(tag="in_variant_calibration_statistics_dot_txt", input_type=String(), position=0, doc=InputDocumentation(doc="--num-reads NUM_READS"))], outputs=[ToolOutput(tag="out_guppy_logs_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_guppy_logs_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Directory to output guppy logs. Default: guppy_logs")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Filename to output statistics. Default:"))], container="quay.io/biocontainers/megalodon:2.3.1--py38h4a8c8d9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Megalodon_Extras_Calibrate_Generate_Variant_Stats_V0_1_0().translate("wdl")

