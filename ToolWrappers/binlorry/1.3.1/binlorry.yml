!Command
command:
- binlorry
positional: []
named:
- !Flag
  description: "FASTA/FASTQ of input reads or a directory which will\nbe recursively\
    \ searched for FASTQ files (required)."
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT_PATH
  optional: true
- !Flag
  description: "A CSV file with metadata fields for reads or a\ndirectory of csv files\
    \ that will be recursively\nsearched for names corresponding to a matching input\n\
    FASTA/FASTQ files."
  synonyms:
  - -t
  - --data
  args: !SimpleFlagArg
    name: CSV_FILE
  optional: true
- !Flag
  description: "The metadata tables are not in the same order as the\nreads - they\
    \ will all beloaded and then looked up as\nneeded (slower). (default: False)"
  synonyms:
  - -u
  - --unordered_data
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output filename (or filename prefix)
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: "Output a report along with FASTA/FASTQ. (default:\nFalse)"
  synonyms:
  - -r
  - --out-report
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Output binned/filtered files even if empty.\n(default: False)"
  synonyms:
  - -f
  - --force-output
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Level of output information: 0 = none, 1 = some, 2 =\nlots (default:\
    \ 1)"
  synonyms:
  - -v
  - --verbosity
  args: !SimpleFlagArg
    name: VERBOSITY
  optional: true
- !Flag
  description: "Specify header field(s) to bin the reads by. For\nmultiple fields\
    \ these will be nested in order\nspecified. e.g. `--bin-by barcode reference`"
  synonyms:
  - --bin-by
  args: !RepeatFlagArg
    name: FIELD
  optional: true
- !Flag
  description: "Specify header field and accepted values to filter\nthe reads by.\
    \ Multiple instances of this option can\nbe specified. e.g. `--filter-by barcode\
    \ BC01 BC02--\nfilter-by genotype Type1`"
  synonyms:
  - --filter-by
  args: !RepeatFlagArg
    name: FILTER
  optional: true
- !Flag
  description: "Filter the reads by their length, specifying the\nminimum length."
  synonyms:
  - -n
  - --min-length
  args: !SimpleFlagArg
    name: MIN
  optional: true
- !Flag
  description: "Filter the reads by their length, specifying the\nmaximum length."
  synonyms:
  - -x
  - --max-length
  args: !SimpleFlagArg
    name: MAX
  optional: true
- !Flag
  description: "Delimiters to use when searching for key:value pairs\nin FASTA/FASTQ\
    \ header. (default: =)"
  synonyms:
  - -d
  - --header-delimiters
  args: !SimpleFlagArg
    name: DELIM
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: binlorry -i INPUT_PATH [-t CSV_FILE] [-u] -o OUTPUT [-r] [-f]\n\
  \                [-v VERBOSITY] [--bin-by FIELD [FIELD ...]]\n                [--filter-by\
  \ FILTER [FILTER ...]] [-n MIN] [-x MAX] [-d DELIM]\n                [-h] [--version]\n\
  \nBinLorry: a tool for binning sequencing reads into files based on header\ninformation\
  \ or read properties.\n\nMain options:\n  -i INPUT_PATH, --input INPUT_PATH\n  \
  \                        FASTA/FASTQ of input reads or a directory which will\n\
  \                          be recursively searched for FASTQ files (required).\n\
  \  -t CSV_FILE, --data CSV_FILE\n                          A CSV file with metadata\
  \ fields for reads or a\n                          directory of csv files that will\
  \ be recursively\n                          searched for names corresponding to\
  \ a matching input\n                          FASTA/FASTQ files.\n  -u, --unordered_data\
  \    The metadata tables are not in the same order as the\n                    \
  \      reads - they will all beloaded and then looked up as\n                  \
  \        needed (slower). (default: False)\n  -o OUTPUT, --output OUTPUT\n     \
  \                     Output filename (or filename prefix)\n  -r, --out-report \
  \       Output a report along with FASTA/FASTQ. (default:\n                    \
  \      False)\n  -f, --force-output      Output binned/filtered files even if empty.\n\
  \                          (default: False)\n  -v VERBOSITY, --verbosity VERBOSITY\n\
  \                          Level of output information: 0 = none, 1 = some, 2 =\n\
  \                          lots (default: 1)\n\nBinning/Filtering options:\n  --bin-by\
  \ FIELD [FIELD ...]\n                          Specify header field(s) to bin the\
  \ reads by. For\n                          multiple fields these will be nested\
  \ in order\n                          specified. e.g. `--bin-by barcode reference`\n\
  \  --filter-by FILTER [FILTER ...]\n                          Specify header field\
  \ and accepted values to filter\n                          the reads by. Multiple\
  \ instances of this option can\n                          be specified. e.g. `--filter-by\
  \ barcode BC01 BC02--\n                          filter-by genotype Type1`\n  -n\
  \ MIN, --min-length MIN\n                          Filter the reads by their length,\
  \ specifying the\n                          minimum length.\n  -x MAX, --max-length\
  \ MAX\n                          Filter the reads by their length, specifying the\n\
  \                          maximum length.\n  -d DELIM, --header-delimiters DELIM\n\
  \                          Delimiters to use when searching for key:value pairs\n\
  \                          in FASTA/FASTQ header. (default: =)\n\nHelp:\n  -h, --help\
  \              Show this help message and exit\n  --version               Show program's\
  \ version number and exit\n"
generated_using:
- --help
