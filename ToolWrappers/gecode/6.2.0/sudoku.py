from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Sudoku_V0_1_0 = CommandToolBuilder(tool="sudoku", base_command=["sudoku"], inputs=[ToolInput(tag="in_ipl", input_type=Boolean(optional=True), prefix="-ipl", doc=InputDocumentation(doc="(def,val,bnd,dom,basic,advanced)\ndefault: dom\ninteger propagation level (comma-separated list)")), ToolInput(tag="in_decay", input_type=Boolean(optional=True), prefix="-decay", doc=InputDocumentation(doc="(double) default: 1\ndecay factor")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="-seed", doc=InputDocumentation(doc="(unsigned int) default: 1\nrandom number generator seed")), ToolInput(tag="in_step", input_type=Boolean(optional=True), prefix="-step", doc=InputDocumentation(doc="(double) default: 0\nstep distance for float optimization")), ToolInput(tag="in_solutions", input_type=Boolean(optional=True), prefix="-solutions", doc=InputDocumentation(doc="(unsigned int) default: 1\nnumber of solutions (0 = all)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="-threads", doc=InputDocumentation(doc="(double) default: 1\nnumber of threads (0 = #processing units)")), ToolInput(tag="in_c_d", input_type=Boolean(optional=True), prefix="-c-d", doc=InputDocumentation(doc="(unsigned int) default: 8\nrecomputation commit distance")), ToolInput(tag="in_a_d", input_type=Boolean(optional=True), prefix="-a-d", doc=InputDocumentation(doc="(unsigned int) default: 2\nrecomputation adaptation distance")), ToolInput(tag="in_d_l", input_type=Boolean(optional=True), prefix="-d-l", doc=InputDocumentation(doc="(unsigned int) default: 5\ndiscrepancy limit for LDS")), ToolInput(tag="in_node", input_type=Boolean(optional=True), prefix="-node", doc=InputDocumentation(doc="(unsigned int) default: 0\nnode cutoff (0 = none, solution mode)")), ToolInput(tag="in_fail", input_type=Boolean(optional=True), prefix="-fail", doc=InputDocumentation(doc="(unsigned int) default: 0\nfailure cutoff (0 = none, solution mode)")), ToolInput(tag="in_time", input_type=Boolean(optional=True), prefix="-time", doc=InputDocumentation(doc="(unsigned int) default: 0\ntime (in ms) cutoff (0 = none, solution mode)")), ToolInput(tag="in_interrupt", input_type=Boolean(optional=True), prefix="-interrupt", doc=InputDocumentation(doc="(optional: false, 0, true, 1) default: true\nwhether to catch Ctrl-C (true) or not (false)")), ToolInput(tag="in_assets", input_type=Boolean(optional=True), prefix="-assets", doc=InputDocumentation(doc="(unsigned int) default: 0\n#portfolio assets (#engines)")), ToolInput(tag="in_slice", input_type=Boolean(optional=True), prefix="-slice", doc=InputDocumentation(doc="(unsigned int) default: 250\nportfolio slice (in #failures)")), ToolInput(tag="in_restart", input_type=Boolean(optional=True), prefix="-restart", doc=InputDocumentation(doc="(none, constant, linear, luby, geometric) default: none\nrestart sequence type")), ToolInput(tag="in_restart_base", input_type=Boolean(optional=True), prefix="-restart-base", doc=InputDocumentation(doc="(double) default: 1.5\nbase for geometric restart sequence")), ToolInput(tag="in_restart_scale", input_type=Boolean(optional=True), prefix="-restart-scale", doc=InputDocumentation(doc="(unsigned int) default: 250\nscale factor for restart sequence")), ToolInput(tag="in_no_goods", input_type=Boolean(optional=True), prefix="-nogoods", doc=InputDocumentation(doc="(optional: false, 0, true, 1) default: false\nwhether to use no-goods from restarts")), ToolInput(tag="in_no_goods_limit", input_type=Boolean(optional=True), prefix="-nogoods-limit", doc=InputDocumentation(doc="(unsigned int) default: 128\ndepth limit for no-good extraction")), ToolInput(tag="in_relax", input_type=Boolean(optional=True), prefix="-relax", doc=InputDocumentation(doc="(double) default: 0\nprobability for relaxing variable")), ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="-mode", doc=InputDocumentation(doc="(solution, time, stat, gist, cpprofiler) default: solution\nhow to execute script")), ToolInput(tag="in_iterations", input_type=Boolean(optional=True), prefix="-iterations", doc=InputDocumentation(doc="(unsigned int) default: 1\niterations per sample (time mode)")), ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="-samples", doc=InputDocumentation(doc="(unsigned int) default: 1\nhow many samples (time mode)")), ToolInput(tag="in_print_last", input_type=Boolean(optional=True), prefix="-print-last", doc=InputDocumentation(doc="(optional: false, 0, true, 1) default: false\nwhether to only print the last solution (solution mode)")), ToolInput(tag="in_file_sol", input_type=Boolean(optional=True), prefix="-file-sol", doc=InputDocumentation(doc="(string) default: stdout\nwhere to print solutions (supports stdout, stdlog, stderr)")), ToolInput(tag="in_file_stat", input_type=Boolean(optional=True), prefix="-file-stat", doc=InputDocumentation(doc="(string) default: stdout\nwhere to print statistics (supports stdout, stdlog, stderr)")), ToolInput(tag="in_trace", input_type=Boolean(optional=True), prefix="-trace", doc=InputDocumentation(doc="(init,prune,fix,fail,done,propagate,commit,post,none,all,variable,general) default: none\ntrace flags (comma-separated list)")), ToolInput(tag="in_disabled", input_type=String(), position=0, doc=InputDocumentation(doc="Options for Sudoku:"))], outputs=[], container="quay.io/biocontainers/gecode:6.2.0--hb70a6f5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sudoku_V0_1_0().translate("wdl")

