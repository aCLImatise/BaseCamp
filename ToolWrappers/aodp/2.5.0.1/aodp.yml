!Command
command:
- aodp
positional:
- !Positional
  optional: false
  position: 0
  name: clado
  description: "generates an eps file from a phylogeny tree file in a Newick format.\n\
    Nodes that have names ending in \"*\" are colored red."
- !Positional
  optional: false
  position: 1
  name: clus
  description: "interprets the results of matches of experimental samples against\n\
    cluster oligo signatures generated by \"aodp\""
named:
- !Flag
  optional: true
  synonyms:
  - --strings
  description: "[=file-name]\nWrites all oligo strings grouped by sequence or group"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --positions
  description: "[=file-name]\nOutput for Array Designer (tab-separated list of oligo\
    \ sites)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ranges
  description: "[=file-name]\nAll ranges of sites of oligos grouped by sequence or\
    \ group"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fasta
  description: "[=file-name]\nAll oligos in FASTA format"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gff
  description: "[=file-name]\nAll oligos in GFF format"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --newick
  description: "[=file-name]\nWrites a phylogeny (Newick tree format), with exactly\
    \ the same\nstructure as the input tree, with generated labels for internal\n\
    nodes.\nRequires a --tree-file input"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --node-list
  description: "[=file-name]\nList of sequences for every internal node in the phylogeny\n\
    Requires a --tree-file input"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lineage
  description: "[=file-name]\nLineage of every sequence in the phylogeny\nRequires\
    \ a --tree-file input"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fold
  description: "[=file-name]\nPredicted secondary structure and calculated two-state\
    \ melting\ntemperature for all oligonucleotide signature candidates discarded\n\
    because of higher melting temperature than --max-melting\nIf the option --max-melting\
    \ is not specified, will print the\npredicted secondary structure for all oligonucleotide\
    \ candidates.\nMelting temperatures below 0C or over 100C will be indicated as\
    \ \"*\"."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cladogram
  description: "=(file-name)\nprintout in the eps format of a cladogram associated\
    \ with the\nannotated phylogeny tree. All nodes with identified oligos are\nmarked\
    \ with a \"*\" and these nodes and their descendents are coloured\nred.\nRequires\
    \ a --tree-file option and a file-name"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --time
  description: "[=file-name]\nTab-separated \"user\", \"system\", \"elapsed\" time\
    \ and maximum memory\nusage for various phases of processing"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --basename
  description: "=(name)\nAll oligos in the following formats:\n* \"name.oligo.strings\"\
    \ strings grouped by sequence and/or group\n* \"name.oligo.fasta\" FASTA\n* \"\
    name.oligo.gff\" GFF\n* \"name.oligo.tab\" tab-separated\n* \"name.oligo.positions\"\
    \ positions\n* \"name.oligo.ranges\" ranges\nIf the option --tree-file is specified\
    \ (phylogeny tree), the\nfollowing output files will also be generated:\n* \"\
    name.newick\" phylogeny tree with labeled internal nodes\n* \"name.node-list\"\
    \ list of sequences for every internal node\n* \"name.lineage\" lineage of every\
    \ sequence in the phylogeny\n* \"name.cladogram.eps\" cladogram associated with\
    \ the annotated\nphylogeny tree\nThe output options --strings, --fasta, --gff,\
    \ --tab, --positions,\n--ranges --newick, --node-list, --lineage and --cladogram\
    \ are\nincompatible with --basename."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cluster-list
  description: "[=file-name]\nGenerates the list of clusters: groupings of sequences\
    \ that can be\nidentified by at least one oligonucleotide signature (cluster\n\
    oligonucleotide signature).\nThe output contains the following tab-separated columns:\n\
    * Numeric identifier of the cluster. This is a generated value.\n* Space-separated\
    \ list of all identifiers of sequences contained in\nthe cluster\n* If the cluster\
    \ matches exactly a target node (leaf node or\ninternal phylogeny node), an additional\
    \ column with the name of\nthis node is included"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cluster-oligos
  description: "[=file-name]\nGenerates the list of all oligonucleotide signatures\
    \ for all\nclusters identified. The output contains the following tab-separated\n\
    columns:\n* Numeric identifier of the cluster. This matches the value in\n--cluster-list.\n\
    * String representation of the cluster oligonucleotide signature"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --clusters
  description: "=(name)\nGenerates a file of cluster nodes (\"name.cluster-list\"\
    ) and a file\nof cluster oligonucleotide signatures (\"name.cluster-oligos\")\n\
    The output options --cluster-list and --cluster-oligos are\nincompatible with\
    \ --clusters."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --match
  description: "=(target-FASTA-file)\nFinds the closest matching source sequence for\
    \ each sequence from\nthe target-FASTA-file. Works as follows:\n* Build the smallest\
    \ set of sequences (\"minimum-set\") that can\nexplain the largest portion of\
    \ each target sequence based on\nmatching cluster oligonucleotide signatures.\n\
    * Align (using a modified Needleman-Wunsch global alignment\nalgorithm) each sequence\
    \ in the \"minimum-set\" with the target\nsequence and calculate the percentage\
    \ similarity. Multiple source\nsequences may have the same percentage similarity\
    \ with the target\nsequence.\nFor each source sequence with maximum percentage\
    \ similarity to the\ntarget sequence, prints to standard output or to the file\
    \ specified\nby --match-output the following tab-delimited fields:\n* Target sequence\
    \ identifier\n* Source sequence identifier or - if no matching source sequence\
    \ was\nfound\n* Percentage similarity\n* Length (bp) of the portion of the target\
    \ sequence that matches\nperfectly the source sequence\n* Length of the target\
    \ sequence\n* Size of the \"minimum-set\" (affects the running time)\n* Size of\
    \ the \"maximum-set\" of sequences contained in any clusters\nmatched by the target\
    \ sequence\nSuggestion: --max-homolo=0 must be specified, otherwise matches\n\
    containing homopolymers will be ignored and the match percentage\nwill be lowered"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --match-output
  description: "=(output-file)\nRedirect the output from --match to the output file\n\
    Requires a --match input"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --oligo-size
  description: "=(size[-size])\nLook for oligonucleotide signatures of sizes within\
    \ the specified\nrange"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tree-file
  description: "=(relative-file-name)\nUse the phylogeny file in the Newick tree format\
    \ that groups the\nsequences in the input; oligos will also be sought for all\
    \ nodes in\nthe phylogeny"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --outgroup-file
  description: "=(relative-file-name)\nThe outgroup list is a case-sensitive list\
    \ of species (sequence\nnames) that are to be excluded from the final output.\
    \ They will\nstill be used in the generation of oligos, but oligos specific to\n\
    them will be omitted.\nWill terminate with an error if a sequence name in the\n\
    --outgroup-file is not found in any *fasta-sequence-file*."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --isolation-file
  description: "=(relative-file-name)\nA list of taxa or sequences to isolate (one\
    \ item per line).\nSequences whose name match (case-sensitive) as a complete substring\n\
    any of the items in the --isolation-file will be the targets of the\noligo search.\
    \ Only oligos for sequences that match items on the list\nor nodes that have sequences\
    \ that match items on the list will be\nsought. Individual entries in the --isolation-file\
    \ may match more\nthan one sequence. For example, \"carotovorum\" will match the\n\
    following sequences:\n* \"Pectobacterium_carotovorum_actinidae\"\n* \"Pectobacterium_carotovorum_brasiliense\"\
    \nWill terminate with an error if an item in the --isolation-file does\nnot match\
    \ any sequence in any *fasta-sequence-file*."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --database
  description: "=(file)\nValidate the resulting oligos against a reference database\
    \ in the\nFASTA format. This option requires specifying a corresponding\n--taxonomy\
    \ option.\nWill terminate with an error if the database file contains sequence\n\
    names that are not specified in the taxonomy file.\nRequires a --taxonomy input."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --taxonomy
  description: "=(file)\nTaxonomy information associated with the sequences in the\
    \ reference\ndatabase. Each line has tab-separated sequence name and lineage,\n\
    ending in species name (\"s__Genus_species_...\").\nThe species name (Genus species)\
    \ of all input sequences encoded as\n\"XX_9999_Genus_species_...\" will be extracted.\
    \ Oligos for input\nsequences that don't match any sequence or match only sequences\
    \ in\nthe reference database for the same species will be kept\n(super-specific\
    \ oligos); sequence oligos that match reference\nsequences with no species name\
    \ or with another species name will be\ndiscarded.\nOligos for internal nodes\
    \ (group oligos) that match reference\nsequences with a species name other than\
    \ any of the species names in\nthe group (from the input sequences) will also\
    \ be discarded.\nRequires a --database input."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore-SNP
  description: "Single polymorphism sites (SNP) will be ignored in the design of\n\
    oligos. --ignore-SNP will generate less oligos in more time"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --reverse-complement
  description: "Will take into account the reverse complement of all sequences\n(default=no):\n\
    * SO will also be generated for the reverse complement of each\nsequence\n* All\
    \ generated SO will be validated against all direct and reverse\ncomplement of\
    \ all sequences"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --crowded
  description: "=(yes/no)\nIndicates whether for the --ranges and --positions outputs\
    \ an oligo\nrange is populated with intermediary sites (default \"no\")\n|<--range\
    \ with signature oligos-->|\nmiddle of range\n=====|================|================|=====\
    \  nucleotide sequence\n*                *                *       --crowded=no\n\
    * *    *    *    *    *    *    * *       --crowded=yes>\n|                  \
    \    |\n--first-site-gap    --inter-site-gap"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --first-site-gap
  description: "=(gap-size)\nFor a --crowded display, the size of the gap between\
    \ the border of\nthe range and the first interior site (default 5)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --inter-site-gap
  description: "=(gap-size)\nFor a --crowded display, indicates the size of the gap\
    \ between sites\ninside an oligo range (default 5).\nThis parameter cannot be\
    \ set to 0."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ambiguous-sources
  description: "=(yes/no)\nWhether sequences containing ambiguities are considered\
    \ in the\nanalysis. The names of these sequences will be written to a file\ncalled\
    \ excluded.fasta in the current directory; default \"yes\""
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --threads
  description: "=(count)\nThe maximum number of threads for multiprocessor systems.\
    \ By\ndefault, aodp will detect the number of available processors/cores\n(\"\
    n\") and will use \"n-1\" threads, or one thread on single processor\nsystems."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-ambiguities
  description: "=(count)\nIndicates the maximum number of ambiguous bases (default\
    \ 5).\nSequences with more than this number of ambiguous bases will not be\nincluded\
    \ in further processing. Their names will be written to a\nfile called excluded.fasta\
    \ in the current directory. If this\nparameter is not specified, no sequences\
    \ will be filtered out based\non the number of their ambiguous bases."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-crowded-ambiguities
  description: "=(count)\nIndicates the maximum number of ambiguous bases within an\
    \ oligo\nsize. Sequences with more than this number of ambiguous bases\nanywhere\
    \ within a window will not be included in further pro\ncessing. Their names will\
    \ be written to a file called excluded.fasta\nin the current directory. If this\
    \ parameter is not specified, no\nsequences will be filtered out based on the\
    \ number of their\nambiguous bases."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ambiguous-oligos
  description: "=(yes/no)\nWhether oligos containing ambiguous bases will be sought\
    \ in the\nanalysis; default \"no\""
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-homolo
  description: "=(size)\nMaximum length of a homopolymer (e.g. only \"A\"s) in any\
    \ oligo;\ndefault 4; 0 means no oligos with homopolymers will be removed"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-melting
  description: "=(temperature-C)\nMaximum melting temperature (Celsius) for any discovered\
    \ oligo.\nOligos with higher melting temperature will be removed from the\nresult.\
    \ If this option is not specified, all oligos are reported.\nThe two-state melting\
    \ temperature is calculated using the NN model\n(SantaLucia and Hicks 2004), applied\
    \ to the most stable\nsingle-strand self-folding configuration at temperature\n\
    --max-melting.\n----------------------------------------------\n| Tm = DH x (\
    \ DS + R x ln ( CT / x )) + 273.15 |\n----------------------------------------------\n\
    (SantaLucia and Hicks 2004; eq. 3)\nUse --salt to specify the salt (NaCl) concentration\
    \ and --strand to\nspecify the strand concentration (CT). In melting temperature\n\
    calculations for oligonucleotide signatures, x is always 1.\nSince a given strand\
    \ may have a number of competing self-folding\nconfigurations, the actual melting\
    \ temperature will be consistently\nlower for multi-state coupled equlibria than\
    \ the calculated\ntwo-state melting temperature.\nThe options --max-melting and\
    \ --ambiguous-oligos=yes are\nincompatible."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --salt
  description: "=(Na+ concentration in M)\nNa+ concentration (default \"1M\"). Valid\
    \ values are between \"0.05M\"\nand \"1.1M\"\nThe Na+ concentration is used in\
    \ entropy calculations:\n-----------------------------------------------\n| DS[Na+]\
    \ = DS[1M NaCl] x 0.368 x N/2 x ln[Na+] |\n-----------------------------------------------\n\
    (SantaLucia and Hicks 2004; eq. 5)\n\"N\" is the total number of phosphates in\
    \ the folded configuration.\nFor self-folding configurations, \"N\" is the strand\
    \ length in\nnucleotides minus 1."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --strand
  description: "=(single strand concentration in \"mM\")\nstrand concentration (default\
    \ 0.1) in mM used in (SantaLucia and\nHicks 2004; eq. 3). Valid values are between\
    \ 0.01 and 100.\nIn melting temperature calculations for oligonucleotide signatures,\n\
    x is ALWAYS 1."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Display this command summary then exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Display version and copyright information
  args: !EmptyFlagArg {}
help_text: "NAME\n     aodp - Automated Oligonucleotide Design Pipeline version \"\
  2.5.0.1\"\n\nSYNOPSIS\n    aodp [*options*] *output* *fasta-sequence-file...*\n\n\
  DESCRIPTION\n    \"aodp\" generates oligonucleotide signatures for sequences in\
  \ FASTA\n    format and for all groups in a phylogeny in the Newick tree format.\n\
  \nINPUT\n    Multiple input sequence files in the FASTA format can be specified\n\
  \    anywhere on the command line. The usual file name wildcards can be used.\n\
  \    Any command line argument without the prefix \"--\" will be treated as a\n\
  \    file name.\n\n    Each FASTA file can contain multiple sequences. Sequence\
  \ identifiers are\n    read from the FASTA description lines (lines starting with\
  \ \"\">).\n    Everything on the description line following a space is ignored.\n\
  \n    Multiple occurrences of sequences with the same identifier are\n    considered\
  \ as the same sequence, with several discountiguous sections.\n\n    If any of the\
  \ specified *fasta-sequence-file*-s cannot be open or\n    completely parsed, aodp\
  \ will terminate with an error.\n\nOUTPUT\n    At least one output option is required.\
  \ For each output option, if\n    file-name is not specified, the result is written\
  \ to standard output.\n\n    --strings[=file-name]\n        Writes all oligo strings\
  \ grouped by sequence or group\n\n    --positions[=file-name]\n        Output for\
  \ Array Designer (tab-separated list of oligo sites)\n\n    --ranges[=file-name]\n\
  \        All ranges of sites of oligos grouped by sequence or group\n\n    --fasta[=file-name]\n\
  \        All oligos in FASTA format\n\n    --gff[=file-name]\n        All oligos\
  \ in GFF format\n\n    --newick[=file-name]\n        Writes a phylogeny (Newick\
  \ tree format), with exactly the same\n        structure as the input tree, with\
  \ generated labels for internal\n        nodes.\n\n        Requires a --tree-file\
  \ input\n\n    --node-list[=file-name]\n        List of sequences for every internal\
  \ node in the phylogeny\n\n        Requires a --tree-file input\n\n    --lineage[=file-name]\n\
  \        Lineage of every sequence in the phylogeny\n\n        Requires a --tree-file\
  \ input\n\n    --fold[=file-name]\n        Predicted secondary structure and calculated\
  \ two-state melting\n        temperature for all oligonucleotide signature candidates\
  \ discarded\n        because of higher melting temperature than --max-melting\n\n\
  \        If the option --max-melting is not specified, will print the\n        predicted\
  \ secondary structure for all oligonucleotide candidates.\n        Melting temperatures\
  \ below 0C or over 100C will be indicated as \"*\".\n\n    --cladogram=(file-name)\n\
  \        printout in the eps format of a cladogram associated with the\n       \
  \ annotated phylogeny tree. All nodes with identified oligos are\n        marked\
  \ with a \"*\" and these nodes and their descendents are coloured\n        red.\n\
  \n        Requires a --tree-file option and a file-name\n\n    --time[=file-name]\n\
  \        Tab-separated \"user\", \"system\", \"elapsed\" time and maximum memory\n\
  \        usage for various phases of processing\n\n    --basename=(name)\n     \
  \   All oligos in the following formats:\n\n        * \"name.oligo.strings\" strings\
  \ grouped by sequence and/or group\n\n        * \"name.oligo.fasta\" FASTA\n\n \
  \       * \"name.oligo.gff\" GFF\n\n        * \"name.oligo.tab\" tab-separated\n\
  \n        * \"name.oligo.positions\" positions\n\n        * \"name.oligo.ranges\"\
  \ ranges\n\n        If the option --tree-file is specified (phylogeny tree), the\n\
  \        following output files will also be generated:\n\n        * \"name.newick\"\
  \ phylogeny tree with labeled internal nodes\n\n        * \"name.node-list\" list\
  \ of sequences for every internal node\n\n        * \"name.lineage\" lineage of\
  \ every sequence in the phylogeny\n\n        * \"name.cladogram.eps\" cladogram\
  \ associated with the annotated\n          phylogeny tree\n\n        The output\
  \ options --strings, --fasta, --gff, --tab, --positions,\n        --ranges --newick,\
  \ --node-list, --lineage and --cladogram are\n        incompatible with --basename.\n\
  \n    --cluster-list[=file-name]\n        Generates the list of clusters: groupings\
  \ of sequences that can be\n        identified by at least one oligonucleotide signature\
  \ (cluster\n        oligonucleotide signature).\n\n        The output contains the\
  \ following tab-separated columns:\n\n        * Numeric identifier of the cluster.\
  \ This is a generated value.\n\n        * Space-separated list of all identifiers\
  \ of sequences contained in\n          the cluster\n\n        * If the cluster matches\
  \ exactly a target node (leaf node or\n          internal phylogeny node), an additional\
  \ column with the name of\n          this node is included\n\n    --cluster-oligos[=file-name]\n\
  \        Generates the list of all oligonucleotide signatures for all\n        clusters\
  \ identified. The output contains the following tab-separated\n        columns:\n\
  \n        * Numeric identifier of the cluster. This matches the value in\n     \
  \     --cluster-list.\n\n        * String representation of the cluster oligonucleotide\
  \ signature\n\n    --clusters=(name)\n        Generates a file of cluster nodes\
  \ (\"name.cluster-list\") and a file\n        of cluster oligonucleotide signatures\
  \ (\"name.cluster-oligos\")\n\n        The output options --cluster-list and --cluster-oligos\
  \ are\n        incompatible with --clusters.\n\n    --match=(target-FASTA-file)\n\
  \        Finds the closest matching source sequence for each sequence from\n   \
  \     the target-FASTA-file. Works as follows:\n\n        * Build the smallest set\
  \ of sequences (\"minimum-set\") that can\n          explain the largest portion\
  \ of each target sequence based on\n          matching cluster oligonucleotide signatures.\n\
  \n        * Align (using a modified Needleman-Wunsch global alignment\n        \
  \  algorithm) each sequence in the \"minimum-set\" with the target\n          sequence\
  \ and calculate the percentage similarity. Multiple source\n          sequences\
  \ may have the same percentage similarity with the target\n          sequence.\n\
  \n        For each source sequence with maximum percentage similarity to the\n \
  \       target sequence, prints to standard output or to the file specified\n  \
  \      by --match-output the following tab-delimited fields:\n\n        * Target\
  \ sequence identifier\n\n        * Source sequence identifier or - if no matching\
  \ source sequence was\n          found\n\n        * Percentage similarity\n\n  \
  \      * Length (bp) of the portion of the target sequence that matches\n      \
  \    perfectly the source sequence\n\n        * Length of the target sequence\n\n\
  \        * Size of the \"minimum-set\" (affects the running time)\n\n        * Size\
  \ of the \"maximum-set\" of sequences contained in any clusters\n          matched\
  \ by the target sequence\n\n        Suggestion: --max-homolo=0 must be specified,\
  \ otherwise matches\n        containing homopolymers will be ignored and the match\
  \ percentage\n        will be lowered\n\n    --match-output=(output-file)\n    \
  \    Redirect the output from --match to the output file\n\n        Requires a --match\
  \ input\n\nOPTIONS\n    Other command line parameters are optional.\n\n    --help\n\
  \        Display this command summary then exit.\n\n    --version\n        Display\
  \ version and copyright information\n\n    --oligo-size=(size[-size])\n        Look\
  \ for oligonucleotide signatures of sizes within the specified\n        range\n\n\
  \    --tree-file=(relative-file-name)\n        Use the phylogeny file in the Newick\
  \ tree format that groups the\n        sequences in the input; oligos will also\
  \ be sought for all nodes in\n        the phylogeny\n\n    --outgroup-file=(relative-file-name)\n\
  \        The outgroup list is a case-sensitive list of species (sequence\n     \
  \   names) that are to be excluded from the final output. They will\n        still\
  \ be used in the generation of oligos, but oligos specific to\n        them will\
  \ be omitted.\n\n        Will terminate with an error if a sequence name in the\n\
  \        --outgroup-file is not found in any *fasta-sequence-file*.\n\n    --isolation-file=(relative-file-name)\n\
  \        A list of taxa or sequences to isolate (one item per line).\n        Sequences\
  \ whose name match (case-sensitive) as a complete substring\n        any of the\
  \ items in the --isolation-file will be the targets of the\n        oligo search.\
  \ Only oligos for sequences that match items on the list\n        or nodes that\
  \ have sequences that match items on the list will be\n        sought. Individual\
  \ entries in the --isolation-file may match more\n        than one sequence. For\
  \ example, \"carotovorum\" will match the\n        following sequences:\n\n    \
  \    * \"Pectobacterium_carotovorum_actinidae\"\n\n        * \"Pectobacterium_carotovorum_brasiliense\"\
  \n\n        Will terminate with an error if an item in the --isolation-file does\n\
  \        not match any sequence in any *fasta-sequence-file*.\n\n    --database=(file)\n\
  \        Validate the resulting oligos against a reference database in the\n   \
  \     FASTA format. This option requires specifying a corresponding\n        --taxonomy\
  \ option.\n\n        Will terminate with an error if the database file contains\
  \ sequence\n        names that are not specified in the taxonomy file.\n\n     \
  \   Requires a --taxonomy input.\n\n    --taxonomy=(file)\n        Taxonomy information\
  \ associated with the sequences in the reference\n        database. Each line has\
  \ tab-separated sequence name and lineage,\n        ending in species name (\"s__Genus_species_...\"\
  ).\n\n        The species name (Genus species) of all input sequences encoded as\n\
  \        \"XX_9999_Genus_species_...\" will be extracted. Oligos for input\n   \
  \     sequences that don't match any sequence or match only sequences in\n     \
  \   the reference database for the same species will be kept\n        (super-specific\
  \ oligos); sequence oligos that match reference\n        sequences with no species\
  \ name or with another species name will be\n        discarded.\n\n        Oligos\
  \ for internal nodes (group oligos) that match reference\n        sequences with\
  \ a species name other than any of the species names in\n        the group (from\
  \ the input sequences) will also be discarded.\n\n        Requires a --database\
  \ input.\n\n    --ignore-SNP\n        Single polymorphism sites (SNP) will be ignored\
  \ in the design of\n        oligos. --ignore-SNP will generate less oligos in more\
  \ time\n\n    --reverse-complement\n        Will take into account the reverse complement\
  \ of all sequences\n        (default=no):\n\n        * SO will also be generated\
  \ for the reverse complement of each\n          sequence\n\n        * All generated\
  \ SO will be validated against all direct and reverse\n          complement of all\
  \ sequences\n\n    --crowded=(yes/no)\n        Indicates whether for the --ranges\
  \ and --positions outputs an oligo\n        range is populated with intermediary\
  \ sites (default \"no\")\n\n              |<--range with signature oligos-->|\n\
  \      \n                        middle of range\n         =====|================|================|=====\
  \  nucleotide sequence\n\n              *                *                *    \
  \   --crowded=no\n              * *    *    *    *    *    *    * *       --crowded=yes>\n\
  \               |                      |\n         --first-site-gap    --inter-site-gap\n\
  \n    --first-site-gap=(gap-size)\n        For a --crowded display, the size of\
  \ the gap between the border of\n        the range and the first interior site (default\
  \ 5)\n\n    --inter-site-gap=(gap-size)\n        For a --crowded display, indicates\
  \ the size of the gap between sites\n        inside an oligo range (default 5).\n\
  \n        This parameter cannot be set to 0.\n\n    --ambiguous-sources=(yes/no)\n\
  \        Whether sequences containing ambiguities are considered in the\n      \
  \  analysis. The names of these sequences will be written to a file\n        called\
  \ excluded.fasta in the current directory; default \"yes\"\n\n    --threads=(count)\n\
  \        The maximum number of threads for multiprocessor systems. By\n        default,\
  \ aodp will detect the number of available processors/cores\n        (\"n\") and\
  \ will use \"n-1\" threads, or one thread on single processor\n        systems.\n\
  \n    --max-ambiguities=(count)\n        Indicates the maximum number of ambiguous\
  \ bases (default 5).\n        Sequences with more than this number of ambiguous\
  \ bases will not be\n        included in further processing. Their names will be\
  \ written to a\n        file called excluded.fasta in the current directory. If\
  \ this\n        parameter is not specified, no sequences will be filtered out based\n\
  \        on the number of their ambiguous bases.\n\n    --max-crowded-ambiguities=(count)\n\
  \        Indicates the maximum number of ambiguous bases within an oligo\n     \
  \   size. Sequences with more than this number of ambiguous bases\n        anywhere\
  \ within a window will not be included in further pro\n        cessing. Their names\
  \ will be written to a file called excluded.fasta\n        in the current directory.\
  \ If this parameter is not specified, no\n        sequences will be filtered out\
  \ based on the number of their\n        ambiguous bases.\n\n    --ambiguous-oligos=(yes/no)\n\
  \        Whether oligos containing ambiguous bases will be sought in the\n     \
  \   analysis; default \"no\"\n\n    --max-homolo=(size)\n        Maximum length\
  \ of a homopolymer (e.g. only \"A\"s) in any oligo;\n        default 4; 0 means\
  \ no oligos with homopolymers will be removed\n\n    --max-melting=(temperature-C)\n\
  \        Maximum melting temperature (Celsius) for any discovered oligo.\n     \
  \   Oligos with higher melting temperature will be removed from the\n        result.\
  \ If this option is not specified, all oligos are reported.\n\n        The two-state\
  \ melting temperature is calculated using the NN model\n        (SantaLucia and\
  \ Hicks 2004), applied to the most stable\n        single-strand self-folding configuration\
  \ at temperature\n        --max-melting.\n\n          ----------------------------------------------\n\
  \         | Tm = DH x ( DS + R x ln ( CT / x )) + 273.15 |\n          ----------------------------------------------\n\
  \               (SantaLucia and Hicks 2004; eq. 3)\n\n        Use --salt to specify\
  \ the salt (NaCl) concentration and --strand to\n        specify the strand concentration\
  \ (CT). In melting temperature\n        calculations for oligonucleotide signatures,\
  \ x is always 1.\n\n        Since a given strand may have a number of competing\
  \ self-folding\n        configurations, the actual melting temperature will be consistently\n\
  \        lower for multi-state coupled equlibria than the calculated\n        two-state\
  \ melting temperature.\n\n        The options --max-melting and --ambiguous-oligos=yes\
  \ are\n        incompatible.\n\n    --salt=(Na+ concentration in M)\n        Na+\
  \ concentration (default \"1M\"). Valid values are between \"0.05M\"\n        and\
  \ \"1.1M\"\n\n        The Na+ concentration is used in entropy calculations:\n\n\
  \          -----------------------------------------------\n         | DS[Na+] =\
  \ DS[1M NaCl] x 0.368 x N/2 x ln[Na+] |\n          -----------------------------------------------\n\
  \               (SantaLucia and Hicks 2004; eq. 5)\n\n        \"N\" is the total\
  \ number of phosphates in the folded configuration.\n        For self-folding configurations,\
  \ \"N\" is the strand length in\n        nucleotides minus 1.\n\n    --strand=(single\
  \ strand concentration in \"mM\")\n        strand concentration (default 0.1) in\
  \ mM used in (SantaLucia and\n        Hicks 2004; eq. 3). Valid values are between\
  \ 0.01 and 100.\n\n        In melting temperature calculations for oligonucleotide\
  \ signatures,\n        x is ALWAYS 1.\n\nEXAMPLES\n    By default, output from \"\
  aodp\" is directed to the standard console:\n\n                 output type\n  \
  \                =======\n         $ aodp --strings Anisogramma.fasta\n        \
  \                  =================\n                           input database\n\
  \n    Wildcards are supported for the files in the input database:\n\n         $\
  \ aodp --strings fasta/*\n\n    By specifying a phylogeny tree in the Newick format,\
  \ oligonucleotide\n    signatures will also be sought for internal nodes of the\
  \ phylogeny:\n\n         $ aodp --strings --tree-file=Anisogramma.tre Anisogramma.fasta\n\
  \                                      ===============\n                       \
  \    phylogeny tree for input database\n\n    A number of output types (in separate\
  \ files with the same prefix) will\n    be automatically generated by using the\
  \ option \"--basename\":\n\n                           output file prefix\n    \
  \                       ==================\n         $ aodp --basename=Anisogramma.output\
  \ Anisogramma.fasta\n\n    The target oligonucleotide signature length (in base\
  \ pairs) can be\n    specified as a number:\n\n         $ aodp --strings --oligo-size=32\
  \ Anisogramma.fasta\n\n    ...or as a range:\n\n         $ aodp --strings --oligo-size=24-32\
  \ Anisogramma.fasta\n\n    Oligonucleotide signatures containing ambiguous base\
  \ pairs can be\n    sought:\n\n         $ aodp --strings --ambiguous-oligos=yes\
  \ Anisogramma.fasta\n\n    Sequences with ambiguities in the input database can\
  \ be filtered out\n    using the options --ambiguous-sources, --max-ambiguities\
  \ and\n    --max-crowded-ambiguities:\n\n         $ aodp --strings --max-crowded-ambiguities=8\
  \ Anisogramma.fasta\n\n    Specific sequences or groups of sequences can be excluded\
  \ from the\n    output using an *outgroup* file:\n\n         $ aodp --strings --outgroup-file=A.outgroup\
  \ Anisogramma.fasta\n\n    The output can be restricted to only sequences specified\
  \ within an\n    *isolation* file:\n\n         $ aodp --strings --isolation-file=A.iso\
  \ Anisogramma.fasta\n\n    The output can be filtered for maximum melting temperature\
  \ (Celsius):\n\n         $ aodp --strings --oligo-size=48 --max-melting=45 Anisogramma.fasta\n\
  \n    Additional parametes (strand concentration in mM and salt concentration\n\
  \    in M) for the calculation of the melting temperature can be included:\n\n \
  \        $ aodp --strings --oligo-size=48 --max-melting=45 Anisogramma.fasta\n \
  \               --salt=0.1 --strand=2\n\n    Actual melting temperature and folding\
  \ configuration for the resulting\n    oligonucleotide signatures can be displayed:\n\
  \n         $ aodp --strings --oligo-size=48 --max-melting=45 Anisogramma.fasta\n\
  \                --fold --salt=0.1 --strand=2\n\n    The output of \"aodp\" can\
  \ be cross-referenced against a reference\n    database, by using the --taxonomy\
  \ and --database options:\n\n         $ aodp --tree-file=Anisogramma.tre Anisogramma.fasta\n\
  \                --database=UNITE_public_mothur_full_10.09.2014\n              \
  \  --taxonomy=UNITE_public_mothur_full_10.09.2014_taxonomy.txt\n\nSEE ALSO\n   \
  \ clado\n      generates an eps file from a phylogeny tree file in a Newick format.\n\
  \      Nodes that have names ending in \"*\" are colored red.\n\n    clus\n    \
  \  interprets the results of matches of experimental samples against\n      cluster\
  \ oligo signatures generated by \"aodp\"\n\n    DNA thermodynamics\n      SantaLucia\
  \ J Jr, Hicks D. 2004. The Thermodynamics of DNA Structural\n      Motifs. Annu.\
  \ Rev. Biophys. 33:415-40\n\nCOPYRIGHT\n    This file is part of \"aodp\" (the Automated\
  \ Oligonucleotide Design\n    Pipeline)\n\n     (C) HER MAJESTY THE QUEEN IN RIGHT\
  \ OF CANADA (2014-2018)\n     (C) Manuel Zahariev mz@alumni.sfu.ca (2000-2008,2014-2018)\n\
  \n    \"aodp\" is free software: you can redistribute it and/or modify it under\n\
  \    the terms of version 3 of the GNU General Public License as published by\n\
  \    the Free Software Foundation.\n\n    This program is distributed in the hope\
  \ that it will be useful, but\n    WITHOUT ANY WARRANTY; without even the implied\
  \ warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\
  \ GNU General\n    Public License (version 3) for more details.\n\n    You should\
  \ have received a copy of the GNU General Public License\n    (version 3) along\
  \ with this program. If not, see\n    http://www.gnu.org/licenses/.\n\nAUTHORS\n\
  \    Manuel Zahariev (mz@alumni.sfu.ca) Wen Chen (wen.chen@agr.gc.ca)\n\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/aodp:2.5.0.1--pl526hc9558a2_0
