from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Float

Hypro_Py_V0_1_0 = CommandToolBuilder(tool="hypro.py", base_command=["hypro.py"], inputs=[ToolInput(tag="in_modus_hypro_decide", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="['restricted', 'full'], --modus ['restricted', 'full']\nModus of HyPro to decide either for an all\nhypothetical protein annotation or restricted (only\nfull blanks with no partial annotation). Valid\narguments: 'full' and 'restricted'")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Specify PATH to the gff file, that shall be extended.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Specify PATH to a directory. HyPro will generate all\noutput to this.")), ToolInput(tag="in_database", input_type=Int(optional=True), prefix="--database", doc=InputDocumentation(doc="Specify the target db to search in for annotation\nextension. Available options: 'uniprotkb',\n'uniref100', 'uniref90', 'uniref50', 'pdb' [uniprotkb]")), ToolInput(tag="in_mm_seqs_two", input_type=File(optional=True), prefix="--mmseqs2", doc=InputDocumentation(doc="Specify the path to the mmseqs2.sh. If using the conda\npackage, 'mmseqs2.sh' is enough. Default path is\n'./scripts/msmeqs2.sh'")), ToolInput(tag="in_custom_db", input_type=File(optional=True), prefix="--custom-db", doc=InputDocumentation(doc="Specify a path. If no database is found, HyPro will\nbuild it. Requires an according -d configuration.")), ToolInput(tag="in_evalue", input_type=Float(optional=True), prefix="--evalue", doc=InputDocumentation(doc="Include sequence matches with < e-value threshold into\nthe profile. Requires a FLOAT >= 0.0. [0.1]")), ToolInput(tag="in_min_aln_len", input_type=Int(optional=True), prefix="--min-aln-len", doc=InputDocumentation(doc="Specify the minimum alignment length as INT in range 0\nto MAX aln length. [0]")), ToolInput(tag="in_p_ident", input_type=Float(optional=True), prefix="--pident", doc=InputDocumentation(doc="List only matches above this sequence identity for\nclustering. Enter a FLOAT between 0 and 1.0. [0.0]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Define number of threads to use by mmseqs indexdb,\nmmseqs search and mmseqs convertalis. [1]\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Specify PATH to a directory. HyPro will generate all\noutput to this."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hypro_Py_V0_1_0().translate("wdl", allow_empty_container=True)

