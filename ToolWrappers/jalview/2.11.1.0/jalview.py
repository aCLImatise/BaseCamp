from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Jalview_V0_1_0 = CommandToolBuilder(tool="jalview", base_command=["jalview"], inputs=[ToolInput(tag="in_no_display", input_type=Boolean(optional=True), prefix="-nodisplay", doc=InputDocumentation(doc="Run Jalview without User Interface.")), ToolInput(tag="in_props", input_type=File(optional=True), prefix="-props", doc=InputDocumentation(doc="Use the given Jalview properties file instead of users default.")), ToolInput(tag="in_colour", input_type=String(optional=True), prefix="-colour", doc=InputDocumentation(doc="The colourscheme to be applied to the alignment")), ToolInput(tag="in_annotations", input_type=File(optional=True), prefix="-annotations", doc=InputDocumentation(doc="Add precalculated annotations to the alignment.")), ToolInput(tag="in_tree", input_type=File(optional=True), prefix="-tree", doc=InputDocumentation(doc="Load the given newick format tree file onto the alignment")), ToolInput(tag="in_features", input_type=File(optional=True), prefix="-features", doc=InputDocumentation(doc="Use the given file to mark features on the alignment.")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="-fasta", doc=InputDocumentation(doc="Create alignment file FILE in Fasta format.")), ToolInput(tag="in_clustal", input_type=File(optional=True), prefix="-clustal", doc=InputDocumentation(doc="Create alignment file FILE in Clustal format.")), ToolInput(tag="in_pfam", input_type=File(optional=True), prefix="-pfam", doc=InputDocumentation(doc="Create alignment file FILE in PFAM format.")), ToolInput(tag="in_msf", input_type=File(optional=True), prefix="-msf", doc=InputDocumentation(doc="Create alignment file FILE in MSF format.")), ToolInput(tag="in_pile_up", input_type=File(optional=True), prefix="-pileup", doc=InputDocumentation(doc="Create alignment file FILE in Pileup format")), ToolInput(tag="in_pir", input_type=File(optional=True), prefix="-pir", doc=InputDocumentation(doc="Create alignment file FILE in PIR format.")), ToolInput(tag="in_blc", input_type=File(optional=True), prefix="-blc", doc=InputDocumentation(doc="Create alignment file FILE in BLC format.")), ToolInput(tag="in_json", input_type=File(optional=True), prefix="-json", doc=InputDocumentation(doc="Create alignment file FILE in JSON format.")), ToolInput(tag="in_jalview", input_type=File(optional=True), prefix="-jalview", doc=InputDocumentation(doc="Create alignment file FILE in Jalview format.")), ToolInput(tag="in_png", input_type=File(optional=True), prefix="-png", doc=InputDocumentation(doc="Create PNG image FILE from alignment.")), ToolInput(tag="in_svg", input_type=File(optional=True), prefix="-svg", doc=InputDocumentation(doc="Create SVG image FILE from alignment.")), ToolInput(tag="in_html", input_type=File(optional=True), prefix="-html", doc=InputDocumentation(doc="Create HTML file from alignment.")), ToolInput(tag="in_bio_j_sms_a", input_type=File(optional=True), prefix="-biojsMSA", doc=InputDocumentation(doc="Create BioJS MSA Viewer HTML file from alignment.")), ToolInput(tag="in_img_map", input_type=File(optional=True), prefix="-imgMap", doc=InputDocumentation(doc="Create HTML file FILE with image map of PNG image.")), ToolInput(tag="in_eps", input_type=File(optional=True), prefix="-eps", doc=InputDocumentation(doc="Create EPS file FILE from alignment.")), ToolInput(tag="in_questionnaire", input_type=String(optional=True), prefix="-questionnaire", doc=InputDocumentation(doc="Queries the given URL for information about any Jalview user questionnaires.")), ToolInput(tag="in_no_questionnaire", input_type=Boolean(optional=True), prefix="-noquestionnaire", doc=InputDocumentation(doc="Turn off questionnaire check.")), ToolInput(tag="in_no_news", input_type=String(optional=True), prefix="-nonews", doc=InputDocumentation(doc="off check for Jalview news.")), ToolInput(tag="in_no_usage_stats", input_type=Boolean(optional=True), prefix="-nousagestats", doc=InputDocumentation(doc="Turn off google analytics tracking for this session.")), ToolInput(tag="in_no_sort_by_tree", input_type=String(optional=True), prefix="-nosortbytree", doc=InputDocumentation(doc="Enable or disable sorting of the given alignment by the given tree")), ToolInput(tag="in_jab_aws", input_type=String(optional=True), prefix="-jabaws", doc=InputDocumentation(doc="Specify URL for Jabaws services (e.g. for a local installation).")), ToolInput(tag="in_fetch_from", input_type=String(optional=True), prefix="-fetchfrom", doc=InputDocumentation(doc="Query nickname for features for the alignments and display them.")), ToolInput(tag="in_groovy", input_type=File(optional=True), prefix="-groovy", doc=InputDocumentation(doc="Execute groovy script in FILE, after all other arguments have been processed (if FILE is the text 'STDIN' then the file will be read from STDIN)")), ToolInput(tag="in_open", input_type=Boolean(optional=True), prefix="-open", doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_format", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_file", input_type=String(optional=True), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Jalview_V0_1_0().translate("wdl", allow_empty_container=True)

