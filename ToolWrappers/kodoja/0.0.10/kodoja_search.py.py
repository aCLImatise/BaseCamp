from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Kodoja_Search_Py_V0_1_0 = CommandToolBuilder(tool="kodoja_search.py", base_command=["kodoja_search.py"], inputs=[ToolInput(tag="in_output_dir", input_type=File(optional=True), prefix="--output_dir", doc=InputDocumentation(doc="Output directory path, required")), ToolInput(tag="in_kraken_db", input_type=File(optional=True), prefix="--kraken_db", doc=InputDocumentation(doc="Kraken database path, required")), ToolInput(tag="in_kaiju_db", input_type=File(optional=True), prefix="--kaiju_db", doc=InputDocumentation(doc="Kaiju database path, required")), ToolInput(tag="in_read_one", input_type=Int(optional=True), prefix="--read1", doc=InputDocumentation(doc="Read 1 file path, required")), ToolInput(tag="in_read_two", input_type=Int(optional=True), prefix="--read2", doc=InputDocumentation(doc="Read 2 file path")), ToolInput(tag="in_data_format", input_type=String(optional=True), prefix="--data_format", doc=InputDocumentation(doc="Sequence data format (default fastq)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (default 1)")), ToolInput(tag="in_host_subset", input_type=String(optional=True), prefix="--host_subset", doc=InputDocumentation(doc="Subset sequences with this tax id from results")), ToolInput(tag="in_trim_min_len", input_type=Int(optional=True), prefix="--trim_minlen", doc=InputDocumentation(doc="Trimmomatic minimum length")), ToolInput(tag="in_trim_adapt", input_type=File(optional=True), prefix="--trim_adapt", doc=InputDocumentation(doc="Illumina adapter sequence file")), ToolInput(tag="in_kraken_quick", input_type=Int(optional=True), prefix="--kraken_quick", doc=InputDocumentation(doc="Number of minium hits by Kraken")), ToolInput(tag="in_kraken_preload", input_type=Boolean(optional=True), prefix="--kraken_preload", doc=InputDocumentation(doc="Kraken preload database")), ToolInput(tag="in_kaiju_score", input_type=String(optional=True), prefix="--kaiju_score", doc=InputDocumentation(doc="Kaju alignment score")), ToolInput(tag="in_kaiju_min_len", input_type=Int(optional=True), prefix="--kaiju_minlen", doc=InputDocumentation(doc="Kaju minimum length")), ToolInput(tag="in_kaiju_mismatch", input_type=String(optional=True), prefix="--kaiju_mismatch", doc=InputDocumentation(doc="Kaju allowed mismatches"))], outputs=[ToolOutput(tag="out_output_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory path, required"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kodoja_Search_Py_V0_1_0().translate("wdl", allow_empty_container=True)

