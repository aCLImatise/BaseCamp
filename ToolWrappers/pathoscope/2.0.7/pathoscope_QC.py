from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Float, Boolean

Pathoscope_Qc_V0_1_0 = CommandToolBuilder(tool="pathoscope_QC", base_command=["pathoscope", "QC"], inputs=[ToolInput(tag="in_st_pair_read", input_type=Int(optional=True), prefix="-1", doc=InputDocumentation(doc="1st pair of read in PER or SER")), ToolInput(tag="in_nd_pair_read", input_type=Int(optional=True), prefix="-2", doc=InputDocumentation(doc="2nd pair of read in PER")), ToolInput(tag="in_let_us_know", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="let us know a mean read length (0:ignore. [1]:I want\nto know the range of read length after trimming,\ni:user_specified_mean_read_length)")), ToolInput(tag="in_specify_phred_offset", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="specify a phred offset used in encoding base\nquality(0:not sure?, [33]:phred+33, 64:phred+64)")), ToolInput(tag="in_specify_output_directory", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="specify output directory in full path")), ToolInput(tag="in_tell_us_generates", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="tell us which sequencer generates the reads\n([Illumina], PacBio, Roche454, IonTorrent)")), ToolInput(tag="in_specify_min_read", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="specify the min read length cutoff[35]")), ToolInput(tag="in_specify_adaptor_pathoqc", input_type=String(optional=True), prefix="-a", doc=InputDocumentation(doc="specify an adaptor (Y:have pathoQC detect it,\n[N]:ignore, ACGT:adaptor)")), ToolInput(tag="in_a_two", input_type=Int(optional=True), prefix="-a2", doc=InputDocumentation(doc="specify a second adaptor if it is different from the\nfirst one (Y:have pathoQC detect it, [N]:ignore,\nACGT:adaptor)")), ToolInput(tag="in_specify_cutoff_trim", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="specify a cutoff of base quality value to trim at the\nend of reads([0]:ignore, 1:let pathoQC take care of\nit, i:user_specified_cutoff_value)")), ToolInput(tag="in_set_you_want_mask", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="set to 1 if you want to mask all lower case bases that\nmay correspond to sequence tag or adaptor in Roche454\nor IonTorrent")), ToolInput(tag="in_specify_cutoff_complexityto", input_type=Float(optional=True), prefix="-e", doc=InputDocumentation(doc="specify a cutoff of entropy of low sequence complexity\nto filter out[0..100],default:30, set 0 to disable")), ToolInput(tag="in_filtering_duplicates_duplicate", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="filtering duplicates: [1] (exact duplicate), 2 (5'\nduplicate), 3 (3' duplicate), 4 (reverse complement\nexact duplicate), 5 (reverse complement 5'/3'\nduplicate)")), ToolInput(tag="in_set_you_want_add", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="Set to 1 if you want to add a valid single read into a\nreduced valid PER set. Note that this option works\nonly with PER")), ToolInput(tag="in_no_prin_seq", input_type=Boolean(optional=True), prefix="--no_prinseq", doc=InputDocumentation(doc="to force to skip prinseq module")), ToolInput(tag="in_specify_total_number", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="specify a total number of cpus to use[1]")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="working on debug mode"))], outputs=[ToolOutput(tag="out_specify_output_directory", output_type=File(optional=True), selector=InputSelector(input_to_select="in_specify_output_directory", type_hint=File()), doc=OutputDocumentation(doc="specify output directory in full path"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pathoscope_Qc_V0_1_0().translate("wdl", allow_empty_container=True)

