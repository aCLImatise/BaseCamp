!Command
command:
- porechop
positional: []
named:
- !Flag
  description: "FASTA/FASTQ of input reads or a directory which will\nbe recursively\
    \ searched for FASTQ files (required)"
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: "Filename for FASTA or FASTQ of trimmed reads (if not\nset, trimmed\
    \ reads will be printed to stdout)"
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: "Option to output a csv file with start/ end/ middle\nbarcode names\
    \ and percentage identities for each\ngiven read. (default: False)"
  synonyms:
  - --barcode_stats_csv
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Output format for the reads - if auto, the format\nwill be chosen\
    \ based on the output filename or the\ninput read format (default: auto)"
  synonyms:
  - --format
  args: !ChoiceFlagArg
    choices: !!set
      auto:
      fastq.gz:
      fasta:
      fastq:
      fasta.gz:
  optional: true
- !Flag
  description: "Level of progress information: 0 = none, 1 = some, 2\n= lots, 3 =\
    \ full - output will go to stdout if reads\nare saved to a file and stderr if\
    \ reads are printed\nto stdout (default: 1)"
  synonyms:
  - -v
  - --verbosity
  args: !SimpleFlagArg
    name: VERBOSITY
  optional: true
- !Flag
  description: "Number of threads to use for adapter alignment\n(default: 8)"
  synonyms:
  - -t
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: "Reads will be binned based on their barcode and\nsaved to separate\
    \ files in this directory\n(incompatible with --output)"
  synonyms:
  - -b
  - --barcode_dir
  args: !SimpleFlagArg
    name: BARCODE_DIR
  optional: true
- !Flag
  description: "Reads will have a label added to their header with\ntheir barcode\
    \ (default: False)"
  synonyms:
  - --barcode_labels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Reads will have an extended label added to their\nheader with the\
    \ barcode_call (if any), the best\nstart/ end barcode hit and their identities,\
    \ and\nwhether a barcode is found in middle of read.\n(Dependent on --barcode_labels).\
    \ (default: False)"
  synonyms:
  - --extended_labels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Only attempts to match the 24 native barcodes\n(default: False)"
  synonyms:
  - --native_barcodes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Only attempts to match the 96 PCR barcodes (default:\nFalse)"
  synonyms:
  - --pcr_barcodes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Only attempts to match the 12 rapid barcodes\n(default: False)"
  synonyms:
  - --rapid_barcodes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Specify a list of barcodes to look for (numbers\nrefer to native,\
    \ PCR or rapid)"
  synonyms:
  - --limit_barcodes_to
  args: !RepeatFlagArg
    name: LIMIT_BARCODES_TO
  optional: true
- !Flag
  description: CSV file containing custom barcode sequences
  synonyms:
  - --custom_barcodes
  args: !SimpleFlagArg
    name: CUSTOM_BARCODES
  optional: true
- !Flag
  description: "A read must have at least this percent identity to a\nbarcode to be\
    \ binned (default: 75.0)"
  synonyms:
  - --barcode_threshold
  args: !SimpleFlagArg
    name: BARCODE_THRESHOLD
  optional: true
- !Flag
  description: "If the difference between a read's best barcode\nidentity and its\
    \ second-best barcode identity is\nless than this value, it will not be put in\
    \ a\nbarcode bin (to exclude cases which are too close to\ncall) (default: 5.0)"
  synonyms:
  - --barcode_diff
  args: !SimpleFlagArg
    name: BARCODE_DIFF
  optional: true
- !Flag
  description: "Reads will only be put in barcode bins if they have\na strong match\
    \ for the barcode on both their start\nand end (default: a read can be binned\
    \ with a match\nat its start or end)"
  synonyms:
  - --require_two_barcodes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Bin reads but do not trim them (default: trim the\nreads)"
  synonyms:
  - --untrimmed
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Discard unassigned reads (instead of creating a\n\"none\" bin) (default:\
    \ False)"
  synonyms:
  - --discard_unassigned
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "An adapter set has to have at least this percent\nidentity to be labelled\
    \ as present and trimmed off\n(0 to 100) (default: 90.0)"
  synonyms:
  - --adapter_threshold
  args: !SimpleFlagArg
    name: ADAPTER_THRESHOLD
  optional: true
- !Flag
  description: "This many reads will be aligned to all possible\nadapters to determine\
    \ which adapter sets are present\n(default: 10000)"
  synonyms:
  - --check_reads
  args: !SimpleFlagArg
    name: CHECK_READS
  optional: true
- !Flag
  description: "Comma-delimited string of alignment scores: match,\nmismatch, gap\
    \ open, gap extend (default: 3,-6,-5,-2)"
  synonyms:
  - --scoring_scheme
  args: !SimpleFlagArg
    name: SCORING_SCHEME
  optional: true
- !Flag
  description: "The number of base pairs at each end of the read\nwhich will be searched\
    \ for adapter sequences\n(default: 150)"
  synonyms:
  - --end_size
  args: !SimpleFlagArg
    name: END_SIZE
  optional: true
- !Flag
  description: "Adapter alignments smaller than this will be ignored\n(default: 4)"
  synonyms:
  - --min_trim_size
  args: !SimpleFlagArg
    name: MIN_TRIM_SIZE
  optional: true
- !Flag
  description: "This many additional bases will be removed next to\nadapters found\
    \ at the ends of reads (default: 2)"
  synonyms:
  - --extra_end_trim
  args: !SimpleFlagArg
    name: EXTRA_END_TRIM
  optional: true
- !Flag
  description: "Adapters at the ends of reads must have at least\nthis percent identity\
    \ to be removed (0 to 100)\n(default: 75.0)"
  synonyms:
  - --end_threshold
  args: !SimpleFlagArg
    name: END_THRESHOLD
  optional: true
- !Flag
  description: "Skip splitting reads based on middle adapters\n(default: split reads\
    \ when an adapter is found in\nthe middle)"
  synonyms:
  - --no_split
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Reads with middle adapters will be discarded\n(default: reads with\
    \ middle adapters are split)\n(required for reads to be used with Nanopolish,\
    \ this\noption is on by default when outputting reads into\nbarcode bins)"
  synonyms:
  - --discard_middle
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Adapters in the middle of reads must have at least\nthis percent identity\
    \ to be found (0 to 100)\n(default: 85.0)"
  synonyms:
  - --middle_threshold
  args: !SimpleFlagArg
    name: MIDDLE_THRESHOLD
  optional: true
- !Flag
  description: "This many additional bases will be removed next to\nmiddle adapters\
    \ on their \"good\" side (default: 10)"
  synonyms:
  - --extra_middle_trim_good_side
  args: !SimpleFlagArg
    name: EXTRA_MIDDLE_TRIM_GOOD_SIDE
  optional: true
- !Flag
  description: "This many additional bases will be removed next to\nmiddle adapters\
    \ on their \"bad\" side (default: 100)"
  synonyms:
  - --extra_middle_trim_bad_side
  args: !SimpleFlagArg
    name: EXTRA_MIDDLE_TRIM_BAD_SIDE
  optional: true
- !Flag
  description: "Post-split read pieces smaller than this many base\npairs will not\
    \ be outputted (default: 1000)"
  synonyms:
  - --min_split_read_size
  args: !SimpleFlagArg
    name: MIN_SPLIT_READ_SIZE
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: porechop -i INPUT [-o OUTPUT] [--barcode_stats_csv]\n         \
  \       [--format {auto,fasta,fastq,fasta.gz,fastq.gz}] [-v VERBOSITY]\n       \
  \         [-t THREADS] [-b BARCODE_DIR] [--barcode_labels]\n                [--extended_labels]\
  \ [--native_barcodes] [--pcr_barcodes]\n                [--rapid_barcodes]\n   \
  \             [--limit_barcodes_to LIMIT_BARCODES_TO [LIMIT_BARCODES_TO ...]]\n\
  \                [--custom_barcodes CUSTOM_BARCODES]\n                [--barcode_threshold\
  \ BARCODE_THRESHOLD]\n                [--barcode_diff BARCODE_DIFF] [--require_two_barcodes]\n\
  \                [--untrimmed] [--discard_unassigned]\n                [--adapter_threshold\
  \ ADAPTER_THRESHOLD]\n                [--check_reads CHECK_READS] [--scoring_scheme\
  \ SCORING_SCHEME]\n                [--end_size END_SIZE] [--min_trim_size MIN_TRIM_SIZE]\n\
  \                [--extra_end_trim EXTRA_END_TRIM]\n                [--end_threshold\
  \ END_THRESHOLD] [--no_split]\n                [--discard_middle] [--middle_threshold\
  \ MIDDLE_THRESHOLD]\n                [--extra_middle_trim_good_side EXTRA_MIDDLE_TRIM_GOOD_SIDE]\n\
  \                [--extra_middle_trim_bad_side EXTRA_MIDDLE_TRIM_BAD_SIDE]\n   \
  \             [--min_split_read_size MIN_SPLIT_READ_SIZE] [-h] [--version]\n\nPorechop:\
  \ a tool for finding adapters in Oxford Nanopore reads, trimming them\nfrom the\
  \ ends and splitting reads with internal adapters\n\nMain options:\n  -i INPUT,\
  \ --input INPUT\n                          FASTA/FASTQ of input reads or a directory\
  \ which will\n                          be recursively searched for FASTQ files\
  \ (required)\n  -o OUTPUT, --output OUTPUT\n                          Filename for\
  \ FASTA or FASTQ of trimmed reads (if not\n                          set, trimmed\
  \ reads will be printed to stdout)\n  --barcode_stats_csv     Option to output a\
  \ csv file with start/ end/ middle\n                          barcode names and\
  \ percentage identities for each\n                          given read. (default:\
  \ False)\n  --format {auto,fasta,fastq,fasta.gz,fastq.gz}\n                    \
  \      Output format for the reads - if auto, the format\n                     \
  \     will be chosen based on the output filename or the\n                     \
  \     input read format (default: auto)\n  -v VERBOSITY, --verbosity VERBOSITY\n\
  \                          Level of progress information: 0 = none, 1 = some, 2\n\
  \                          = lots, 3 = full - output will go to stdout if reads\n\
  \                          are saved to a file and stderr if reads are printed\n\
  \                          to stdout (default: 1)\n  -t THREADS, --threads THREADS\n\
  \                          Number of threads to use for adapter alignment\n    \
  \                      (default: 8)\n\nBarcode binning settings:\n  Control the\
  \ binning of reads based on barcodes (i.e. barcode\n  demultiplexing)\n\n  -b BARCODE_DIR,\
  \ --barcode_dir BARCODE_DIR\n                          Reads will be binned based\
  \ on their barcode and\n                          saved to separate files in this\
  \ directory\n                          (incompatible with --output)\n  --barcode_labels\
  \        Reads will have a label added to their header with\n                  \
  \        their barcode (default: False)\n  --extended_labels       Reads will have\
  \ an extended label added to their\n                          header with the barcode_call\
  \ (if any), the best\n                          start/ end barcode hit and their\
  \ identities, and\n                          whether a barcode is found in middle\
  \ of read.\n                          (Dependent on --barcode_labels). (default:\
  \ False)\n  --native_barcodes       Only attempts to match the 24 native barcodes\n\
  \                          (default: False)\n  --pcr_barcodes          Only attempts\
  \ to match the 96 PCR barcodes (default:\n                          False)\n  --rapid_barcodes\
  \        Only attempts to match the 12 rapid barcodes\n                        \
  \  (default: False)\n  --limit_barcodes_to LIMIT_BARCODES_TO [LIMIT_BARCODES_TO\
  \ ...]\n                          Specify a list of barcodes to look for (numbers\n\
  \                          refer to native, PCR or rapid)\n  --custom_barcodes CUSTOM_BARCODES\n\
  \                          CSV file containing custom barcode sequences\n  --barcode_threshold\
  \ BARCODE_THRESHOLD\n                          A read must have at least this percent\
  \ identity to a\n                          barcode to be binned (default: 75.0)\n\
  \  --barcode_diff BARCODE_DIFF\n                          If the difference between\
  \ a read's best barcode\n                          identity and its second-best\
  \ barcode identity is\n                          less than this value, it will not\
  \ be put in a\n                          barcode bin (to exclude cases which are\
  \ too close to\n                          call) (default: 5.0)\n  --require_two_barcodes\
  \  Reads will only be put in barcode bins if they have\n                       \
  \   a strong match for the barcode on both their start\n                       \
  \   and end (default: a read can be binned with a match\n                      \
  \    at its start or end)\n  --untrimmed             Bin reads but do not trim them\
  \ (default: trim the\n                          reads)\n  --discard_unassigned \
  \   Discard unassigned reads (instead of creating a\n                          \"\
  none\" bin) (default: False)\n\nAdapter search settings:\n  Control how the program\
  \ determines which adapter sets are present\n\n  --adapter_threshold ADAPTER_THRESHOLD\n\
  \                          An adapter set has to have at least this percent\n  \
  \                        identity to be labelled as present and trimmed off\n  \
  \                        (0 to 100) (default: 90.0)\n  --check_reads CHECK_READS\n\
  \                          This many reads will be aligned to all possible\n   \
  \                       adapters to determine which adapter sets are present\n \
  \                         (default: 10000)\n  --scoring_scheme SCORING_SCHEME\n\
  \                          Comma-delimited string of alignment scores: match,\n\
  \                          mismatch, gap open, gap extend (default: 3,-6,-5,-2)\n\
  \nEnd adapter settings:\n  Control the trimming of adapters from read ends\n\n \
  \ --end_size END_SIZE     The number of base pairs at each end of the read\n   \
  \                       which will be searched for adapter sequences\n         \
  \                 (default: 150)\n  --min_trim_size MIN_TRIM_SIZE\n            \
  \              Adapter alignments smaller than this will be ignored\n          \
  \                (default: 4)\n  --extra_end_trim EXTRA_END_TRIM\n             \
  \             This many additional bases will be removed next to\n             \
  \             adapters found at the ends of reads (default: 2)\n  --end_threshold\
  \ END_THRESHOLD\n                          Adapters at the ends of reads must have\
  \ at least\n                          this percent identity to be removed (0 to\
  \ 100)\n                          (default: 75.0)\n\nMiddle adapter settings:\n\
  \  Control the splitting of read from middle adapters\n\n  --no_split          \
  \    Skip splitting reads based on middle adapters\n                          (default:\
  \ split reads when an adapter is found in\n                          the middle)\n\
  \  --discard_middle        Reads with middle adapters will be discarded\n      \
  \                    (default: reads with middle adapters are split)\n         \
  \                 (required for reads to be used with Nanopolish, this\n       \
  \                   option is on by default when outputting reads into\n       \
  \                   barcode bins)\n  --middle_threshold MIDDLE_THRESHOLD\n     \
  \                     Adapters in the middle of reads must have at least\n     \
  \                     this percent identity to be found (0 to 100)\n           \
  \               (default: 85.0)\n  --extra_middle_trim_good_side EXTRA_MIDDLE_TRIM_GOOD_SIDE\n\
  \                          This many additional bases will be removed next to\n\
  \                          middle adapters on their \"good\" side (default: 10)\n\
  \  --extra_middle_trim_bad_side EXTRA_MIDDLE_TRIM_BAD_SIDE\n                   \
  \       This many additional bases will be removed next to\n                   \
  \       middle adapters on their \"bad\" side (default: 100)\n  --min_split_read_size\
  \ MIN_SPLIT_READ_SIZE\n                          Post-split read pieces smaller\
  \ than this many base\n                          pairs will not be outputted (default:\
  \ 1000)\n\nHelp:\n  -h, --help              Show this help message and exit\n  --version\
  \               Show program's version number and exit\n"
generated_using:
- --help
