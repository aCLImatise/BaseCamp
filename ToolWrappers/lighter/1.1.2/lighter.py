from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Lighter_V0_1_0 = CommandToolBuilder(tool="lighter", base_command=["lighter"], inputs=[ToolInput(tag="in_seqfile_path_sequence", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc=": seq_file is the path to the sequence file. Can use multiple -r to specifiy multiple sequence files\nThe file can be fasta and fastq, and can be gzip'ed with extension *.gz.\nWhen the input file is *.gz, the corresponding output file will also be gzip'ed.")), ToolInput(tag="in_genomesize_alpha_see", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="genome_size alpha: (see README for information on setting alpha)")), ToolInput(tag="in_number_threads_use", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc=": number of threads to use (default: 1)")), ToolInput(tag="in_max_cor", input_type=Int(optional=True), prefix="-maxcor", doc=InputDocumentation(doc=": the maximum number of corrections within a 20bp window (default: 4)")), ToolInput(tag="in_trim", input_type=Boolean(optional=True), prefix="-trim", doc=InputDocumentation(doc=": allow trimming (default: false)")), ToolInput(tag="in_discard", input_type=Boolean(optional=True), prefix="-discard", doc=InputDocumentation(doc=": discard unfixable reads. Will LOSE paired-end matching when discarding (default: false)")), ToolInput(tag="in_no_qual", input_type=Boolean(optional=True), prefix="-noQual", doc=InputDocumentation(doc=": ignore the quality socre (default: false)")), ToolInput(tag="in_new_qual", input_type=String(optional=True), prefix="-newQual", doc=InputDocumentation(doc=": set the quality for the bases corrected to the specified score (default: not used)")), ToolInput(tag="in_save_trusted_km_ers", input_type=File(optional=True), prefix="-saveTrustedKmers", doc=InputDocumentation(doc=": save the trusted kmers to specified file then stop (default: not used)")), ToolInput(tag="in_load_trusted_km_ers", input_type=File(optional=True), prefix="-loadTrustedKmers", doc=InputDocumentation(doc=": directly get solid kmers from specified file (default: not used)")), ToolInput(tag="in_zlib", input_type=Int(optional=True), prefix="-zlib", doc=InputDocumentation(doc=": set the compression level(0-9) of gzip (default: 1)")), ToolInput(tag="in_print_version_information", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": print the version information and quit")), ToolInput(tag="in_or", input_type=String(), position=0, doc=InputDocumentation(doc="-K kmer_length genom_size: in this case, the genome size should be relative accurate."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Lighter_V0_1_0().translate("wdl", allow_empty_container=True)

