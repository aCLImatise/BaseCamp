from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String, Directory, Float

Octopus_V0_1_0 = CommandToolBuilder(tool="octopus", base_command=["octopus"], inputs=[ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="A config file, used to populate command\nline options")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="[=arg(='octopus_debug.log')]  Writes verbose debug information to\ndebug.log in the working directory")), ToolInput(tag="in_trace", input_type=Boolean(optional=True), prefix="--trace", doc=InputDocumentation(doc="[=arg(='octopus_trace.log')]  Writes very verbose debug information\nto trace.log in the working directory")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc="Turns off some features to improve\nruntime, at the cost of decreased\ncalling accuracy. Equivalent to '-a off\n-l minimal -x 50`")), ToolInput(tag="in_very_fast", input_type=Boolean(optional=True), prefix="--very-fast", doc=InputDocumentation(doc="The same as fast but also disables\ninactive flank scoring")), ToolInput(tag="in_arg_sets_directory", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[ --working-directory ] arg        Sets the working directory")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="[=arg(=0)]                  Maximum number of threads to be used,\nenabling this option with no argument\nlets the application decide the number\nof threads ands enables specific\nalgorithm parallelisation")), ToolInput(tag="in_arg_mbmaximum_memory", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="[ --max-reference-cache-footprint ] arg (=500MB)\nMaximum memory footprint for cached\nreference sequence")), ToolInput(tag="in_arg_gbnone_binding", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="[ --target-read-buffer-footprint ] arg (=6GB)\nNone binding request to limit the\nmemory footprint of buffered read data")), ToolInput(tag="in_max_open_read_files", input_type=Int(optional=True), prefix="--max-open-read-files", doc=InputDocumentation(doc="(=250)      Limits the number of read files that\ncan be open simultaneously")), ToolInput(tag="in_target_working_memory", input_type=String(optional=True), prefix="--target-working-memory", doc=InputDocumentation(doc="Target working memory footprint for\nanalysis not including read or\nreference footprint")), ToolInput(tag="in_temp_directory_prefix", input_type=Directory(optional=True), prefix="--temp-directory-prefix", doc=InputDocumentation(doc="(='octopus-temp')\nFile name prefix of temporary directory\nfor calling")), ToolInput(tag="in_arg_fasta_format", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="[ --reference ] arg                FASTA format reference genome file to\nbe analysed. Target regions will be\nextracted from the reference index if\nnot provded explicitly")), ToolInput(tag="in_arg_spaceseparated_list_bamcram", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="[ --reads ] arg                    Space-separated list of BAM/CRAM files\nto be analysed. May be specified\nmultiple times")), ToolInput(tag="in_arg_files_containing", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --reads-file ] arg               Files containing lists of BAM/CRAM\nfiles, one per line, to be analysed")), ToolInput(tag="in_one_based_indexing", input_type=Boolean(optional=True), prefix="--one-based-indexing", doc=InputDocumentation(doc="Notifies that input regions are given\nusing one based indexing rather than\nzero based")), ToolInput(tag="in_arg_spaceseparated_regionschrombeginend", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="[ --regions ] arg                  Space-separated list of regions\n(chrom:begin-end) to be analysed. May\nbe specified multiple times")), ToolInput(tag="in_arg_file_containing", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --regions-file ] arg             File containing a list of regions\n(chrom:begin-end), one per line, to be\nanalysed")), ToolInput(tag="in_arg_spaceseparated_list_may", input_type=Boolean(optional=True), prefix="-K", doc=InputDocumentation(doc="[ --skip-regions ] arg             Space-separated list of regions\n(chrom:begin-end) to skip May be\nspecified multiple times")), ToolInput(tag="in_arg_file_line", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[ --skip-regions-file ] arg        File of regions (chrom:begin-end), one\nper line, to skip")), ToolInput(tag="in_arg_spaceseparated_sample", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[ --samples ] arg                  Space-separated list of sample names to")), ToolInput(tag="in_ignore_unmapped_contigs", input_type=Boolean(optional=True), prefix="--ignore-unmapped-contigs", doc=InputDocumentation(doc="Ignore any contigs that are not present\nin the read files")), ToolInput(tag="in_pedigree", input_type=File(optional=True), prefix="--pedigree", doc=InputDocumentation(doc="PED file containing sample pedigree")), ToolInput(tag="in_arg_file_written", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --output ] arg                   File to where output is written. If\nunspecified, calls are written to\nstdout")), ToolInput(tag="in_contig_output_order", input_type=String(optional=True), prefix="--contig-output-order", doc=InputDocumentation(doc="(=asInReferenceIndex)\nThe order contigs should be written to\nthe output")), ToolInput(tag="in_sites_only", input_type=Boolean(optional=True), prefix="--sites-only", doc=InputDocumentation(doc="Only reports call sites (i.e. without\nsample genotype information)")), ToolInput(tag="in_legacy", input_type=Boolean(optional=True), prefix="--legacy", doc=InputDocumentation(doc="Outputs a legacy version of the final\ncallset in addition to the native\nversion")), ToolInput(tag="in_re_genotype", input_type=File(optional=True), prefix="--regenotype", doc=InputDocumentation(doc="VCF file specifying calls to\nregenotype, only sites in this files\nwill appear in the final output")), ToolInput(tag="in_bam_out", input_type=String(optional=True), prefix="--bamout", doc=InputDocumentation(doc="Output realigned BAM files")), ToolInput(tag="in_full_bam_out", input_type=Boolean(optional=True), prefix="--full-bamout", doc=InputDocumentation(doc="Output all reads when producing\nrealigned bam outputs rather than just\nvariant read minibams")), ToolInput(tag="in_data_profile", input_type=String(optional=True), prefix="--data-profile", doc=InputDocumentation(doc="Output a profile of polymorphisms and\nerrors found in the data")), ToolInput(tag="in_read_transforms", input_type=Int(optional=True), prefix="--read-transforms", doc=InputDocumentation(doc="(=1)            Enable all read transformations")), ToolInput(tag="in_mask_low_quality_tails", input_type=Boolean(optional=True), prefix="--mask-low-quality-tails", doc=InputDocumentation(doc="[=arg(=3)]   Masks read tail bases with base quality\nless than this")), ToolInput(tag="in_mask_tails", input_type=Boolean(optional=True), prefix="--mask-tails", doc=InputDocumentation(doc="[=arg(=1)]               Unconditionally mask this many read\ntail sbases")), ToolInput(tag="in_soft_clip_masking", input_type=Int(optional=True), prefix="--soft-clip-masking", doc=InputDocumentation(doc="(=1)          Turn on or off soft clip base")), ToolInput(tag="in_mask_soft_clipped_boundary_bases", input_type=Int(optional=True), prefix="--mask-soft-clipped-boundary-bases", doc=InputDocumentation(doc="(=2)\nMasks this number of adjacent non soft\nclipped bases when soft clipped bases\nare present")), ToolInput(tag="in_adapter_masking", input_type=Int(optional=True), prefix="--adapter-masking", doc=InputDocumentation(doc="(=1)            Enable adapter detection and masking")), ToolInput(tag="in_overlap_masking", input_type=Int(optional=True), prefix="--overlap-masking", doc=InputDocumentation(doc="(=1)            Enable read segment overlap masking")), ToolInput(tag="in_mask_inverted_soft_clipping", input_type=Int(optional=True), prefix="--mask-inverted-soft-clipping", doc=InputDocumentation(doc="(=0)\nMask soft clipped sequence that is an\ninverted copy of a proximate sequence")), ToolInput(tag="in_mask_three_prime_shifted_soft_clipped_heads", input_type=Int(optional=True), prefix="--mask-3prime-shifted-soft-clipped-heads", doc=InputDocumentation(doc="(=0)\nMask soft clipped read head sequence\nthat is a copy of a proximate 3'\nsequence")), ToolInput(tag="in_read_filtering", input_type=Int(optional=True), prefix="--read-filtering", doc=InputDocumentation(doc="(=1)             Enable all read filters")), ToolInput(tag="in_consider_unmapped_reads", input_type=Boolean(optional=True), prefix="--consider-unmapped-reads", doc=InputDocumentation(doc="Allows reads marked as unmapped to be\nused for calling")), ToolInput(tag="in_min_mapping_quality", input_type=Int(optional=True), prefix="--min-mapping-quality", doc=InputDocumentation(doc="(=20)       Minimum read mapping quality required\nto consider a read for calling")), ToolInput(tag="in_good_base_quality", input_type=Int(optional=True), prefix="--good-base-quality", doc=InputDocumentation(doc="(=20)         Base quality threshold used by\nmin-good-bases and min-good-base-fracti\non filters")), ToolInput(tag="in_min_good_base_fraction", input_type=Boolean(optional=True), prefix="--min-good-base-fraction", doc=InputDocumentation(doc="[=arg(=0.5)] Base quality threshold used by\nmin-good-bases filter")), ToolInput(tag="in_min_good_bases", input_type=Int(optional=True), prefix="--min-good-bases", doc=InputDocumentation(doc="(=20)            Minimum number of bases with quality\nmin-base-quality before read is\nconsidered")), ToolInput(tag="in_allow_qc_fails", input_type=Boolean(optional=True), prefix="--allow-qc-fails", doc=InputDocumentation(doc="Filters reads marked as QC failed")), ToolInput(tag="in_min_read_length", input_type=Int(optional=True), prefix="--min-read-length", doc=InputDocumentation(doc="Filters reads shorter than this")), ToolInput(tag="in_max_read_length", input_type=Int(optional=True), prefix="--max-read-length", doc=InputDocumentation(doc="Filter reads longer than this")), ToolInput(tag="in_allow_marked_duplicates", input_type=Boolean(optional=True), prefix="--allow-marked-duplicates", doc=InputDocumentation(doc="Allows reads marked as duplicate in\nalignment record")), ToolInput(tag="in_allow_octopus_duplicates", input_type=Boolean(optional=True), prefix="--allow-octopus-duplicates", doc=InputDocumentation(doc="Allows reads considered duplicates by")), ToolInput(tag="in_no_reads_with_distant_segments", input_type=Boolean(optional=True), prefix="--no-reads-with-distant-segments", doc=InputDocumentation(doc="Filter reads with template segments\nthat are on different contigs")), ToolInput(tag="in_no_adapter_contaminated_reads", input_type=Boolean(optional=True), prefix="--no-adapter-contaminated-reads", doc=InputDocumentation(doc="Filter reads with possible adapter")), ToolInput(tag="in_down_sample_above", input_type=Int(optional=True), prefix="--downsample-above", doc=InputDocumentation(doc="(=1000)        Downsample reads in regions where\ncoverage is over this")), ToolInput(tag="in_down_sample_target", input_type=Int(optional=True), prefix="--downsample-target", doc=InputDocumentation(doc="(=500)        The target coverage for the downsampler")), ToolInput(tag="in_arg_enable_candidate_generation_rawread", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --raw-cigar-candidate-generator ] arg (=1)\nEnable candidate generation from raw\nread alignments (CIGAR strings)")), ToolInput(tag="in_repeat_candidate_generator", input_type=Int(optional=True), prefix="--repeat-candidate-generator", doc=InputDocumentation(doc="(=1) Enable candidate generation from\nadjusted read alignments (CIGAR\nstrings) around tandem repeats")), ToolInput(tag="in_arg_enable_candidate_generation_using", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --assembly-candidate-generator ] arg (=1)\nEnable candidate generation using local\nre-assembly")), ToolInput(tag="in_arg_variant_paths", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --source-candidates ] arg        Variant file paths containing known\nvariants. These variants will\nautomatically become candidates")), ToolInput(tag="in_source_candidates_file", input_type=File(optional=True), prefix="--source-candidates-file", doc=InputDocumentation(doc="Files containing lists of source\ncandidate variant files")), ToolInput(tag="in_min_source_quality", input_type=Boolean(optional=True), prefix="--min-source-quality", doc=InputDocumentation(doc="[=arg(=2)]       Only variants with quality above this\nvalue are considered for candidate\ngeneration")), ToolInput(tag="in_use_filtered_source_candidates", input_type=Int(optional=True), prefix="--use-filtered-source-candidates", doc=InputDocumentation(doc="(=0)\nUse variants from source VCF records\nthat have been filtered")), ToolInput(tag="in_min_base_quality", input_type=Int(optional=True), prefix="--min-base-quality", doc=InputDocumentation(doc="(=20)          Only bases with quality above this\nvalue are considered for candidate\ngeneration")), ToolInput(tag="in_min_supporting_reads", input_type=Boolean(optional=True), prefix="--min-supporting-reads", doc=InputDocumentation(doc="[=arg(=2)]     Minimum number of reads that must\nsupport a variant if it is to be\nconsidered a candidate. By default\noctopus will automatically determine\nthis value")), ToolInput(tag="in_max_variant_size", input_type=Int(optional=True), prefix="--max-variant-size", doc=InputDocumentation(doc="(=2000)        Maximum candidate variant size to\nconsider (in region space)")), ToolInput(tag="in_km_er_sizes", input_type=Int(optional=True), prefix="--kmer-sizes", doc=InputDocumentation(doc="(=10 15 20)          Kmer sizes to use for local assembly")), ToolInput(tag="in_num_fall_back_km_ers", input_type=Int(optional=True), prefix="--num-fallback-kmers", doc=InputDocumentation(doc="(=10)        How many local assembly fallback kmer\nsizes to use if the default sizes fail")), ToolInput(tag="in_fall_back_km_er_gap", input_type=Int(optional=True), prefix="--fallback-kmer-gap", doc=InputDocumentation(doc="(=10)         The gap size used to generate local\nassembly fallback kmers")), ToolInput(tag="in_max_region_to_assemble", input_type=Int(optional=True), prefix="--max-region-to-assemble", doc=InputDocumentation(doc="(=400)   The maximum region size that can be\nused for local assembly")), ToolInput(tag="in_max_assemble_region_overlap", input_type=Int(optional=True), prefix="--max-assemble-region-overlap", doc=InputDocumentation(doc="(=200)\nThe maximum number of bases allowed to\noverlap assembly regions")), ToolInput(tag="in_assemble_all", input_type=Boolean(optional=True), prefix="--assemble-all", doc=InputDocumentation(doc="Forces all regions to be assembled")), ToolInput(tag="in_assembler_mask_base_quality", input_type=Int(optional=True), prefix="--assembler-mask-base-quality", doc=InputDocumentation(doc="(=10)\nAligned bases with quality less than\nthis will be converted to reference\nbefore being inserted into the De\nBruijn graph")), ToolInput(tag="in_min_km_er_prune", input_type=Int(optional=True), prefix="--min-kmer-prune", doc=InputDocumentation(doc="(=2)             Minimum number of read observations to\nkeep a kmer in the assembly graph\nbefore bubble extraction")), ToolInput(tag="in_max_bubbles", input_type=Int(optional=True), prefix="--max-bubbles", doc=InputDocumentation(doc="(=30)               Maximum number of bubbles to extract\nfrom the assembly graph")), ToolInput(tag="in_min_bubble_score", input_type=Int(optional=True), prefix="--min-bubble-score", doc=InputDocumentation(doc="(=2)           Minimum bubble score that will be\nextracted from the assembly graph")), ToolInput(tag="in_arg_maximum_number", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[ --max-haplotypes ] arg (=200)    Maximum number of candidate haplotypes\nthe caller may consider. If a region\ncontains more candidate haplotypes than\nthis then filtering is applied")), ToolInput(tag="in_haplotype_hold_out_threshold", input_type=Int(optional=True), prefix="--haplotype-holdout-threshold", doc=InputDocumentation(doc="(=2500)\nForces the haplotype generator to\ntemporarily hold out some alleles if\nthe number of haplotypes in a region\nexceeds this threshold")), ToolInput(tag="in_haplotype_overflow", input_type=Int(optional=True), prefix="--haplotype-overflow", doc=InputDocumentation(doc="(=200000)    Regions with more haplotypes than this\nwill be skipped")), ToolInput(tag="in_max_hold_out_depth", input_type=Int(optional=True), prefix="--max-holdout-depth", doc=InputDocumentation(doc="(=20)         Maximum number of holdout attempts the\nhaplotype generator can make before the\nregion is skipped")), ToolInput(tag="in_extension_level", input_type=String(optional=True), prefix="--extension-level", doc=InputDocumentation(doc="(=normal)       Level of haplotype extension. Possible\nvalues are: conservative, normal,\noptimistic, aggressive")), ToolInput(tag="in_arg_haplotypes_posterior", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[ --haplotype-extension-threshold ] arg (=100)\nHaplotypes with posterior probability\nless than this can be filtered before\nextension")), ToolInput(tag="in_ded_up_haplotypes_with_prior_model", input_type=Int(optional=True), prefix="--dedup-haplotypes-with-prior-model", doc=InputDocumentation(doc="(=1)\nRemove duplicate haplotypes using\nmutation prior model")), ToolInput(tag="in_protect_reference_haplotype", input_type=Int(optional=True), prefix="--protect-reference-haplotype", doc=InputDocumentation(doc="(=1)\nProtect the reference haplotype from\nfiltering")), ToolInput(tag="in_arg_population_use", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[ --caller ] arg (=population)     Which of the octopus callers to use")), ToolInput(tag="in_arg_contigs_unspecified", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="[ --organism-ploidy ] arg (=2)     All contigs with unspecified ploidies\nare assumed the organism ploidy")), ToolInput(tag="in_arg_y_chry", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --contig-ploidies ] arg (=Y=1 chrY=1 MT=1 chrM=1)\nSpace-separated list of contig\n(contig=ploidy) or sample contig\n(sample:contig=ploidy) ploidies")), ToolInput(tag="in_contig_plo_i_dies_file", input_type=File(optional=True), prefix="--contig-ploidies-file", doc=InputDocumentation(doc="File containing a list of contig\n(contig=ploidy) or sample contig\n(sample:contig=ploidy) ploidies, one\nper line")), ToolInput(tag="in_min_variant_posterior", input_type=Int(optional=True), prefix="--min-variant-posterior", doc=InputDocumentation(doc="(=1)      Report variant alleles with posterior\nprobability (phred scale) greater than\nthis")), ToolInput(tag="in_ref_call", input_type=Boolean(optional=True), prefix="--refcall", doc=InputDocumentation(doc="[=arg(=blocked)]            Caller will report reference confidence\ncalls for each position (positional),\nor in automatically sized blocks\n(blocked)")), ToolInput(tag="in_ref_call_block_merge_threshold", input_type=Int(optional=True), prefix="--refcall-block-merge-threshold", doc=InputDocumentation(doc="(=10)\nThreshold to merge adjacent refcall\npositions when using blocked refcalling")), ToolInput(tag="in_min_ref_call_posterior", input_type=Int(optional=True), prefix="--min-refcall-posterior", doc=InputDocumentation(doc="(=2)      Report reference alleles with posterior\nprobability (phred scale) greater than\nthis")), ToolInput(tag="in_arg_snp_heterozygosity", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[ --snp-heterozygosity ] arg (=0.001)\nGermline SNP heterozygosity for the\ngiven samples")), ToolInput(tag="in_snp_heterozygosity_stdev", input_type=Float(optional=True), prefix="--snp-heterozygosity-stdev", doc=InputDocumentation(doc="(=0.01)\nStandard deviation of the germline SNP\nheterozygosity used for the given\nsamples")), ToolInput(tag="in_arg_indel_heterozygosity", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="[ --indel-heterozygosity ] arg (=0.0001)\nGermline indel heterozygosity for the\ngiven samples")), ToolInput(tag="in_use_uniform_genotype_priors", input_type=Boolean(optional=True), prefix="--use-uniform-genotype-priors", doc=InputDocumentation(doc="Use a uniform prior model when\ncalculating genotype posteriors")), ToolInput(tag="in_max_genotypes", input_type=Int(optional=True), prefix="--max-genotypes", doc=InputDocumentation(doc="(=5000)           The maximum number of genotypes to")), ToolInput(tag="in_use_independent_genotype_priors", input_type=Boolean(optional=True), prefix="--use-independent-genotype-priors", doc=InputDocumentation(doc="Use independent genotype priors for\njoint calling")), ToolInput(tag="in_model_posterior", input_type=String(optional=True), prefix="--model-posterior", doc=InputDocumentation(doc="Calculate model posteriors for every")), ToolInput(tag="in_model_mapping_quality", input_type=Int(optional=True), prefix="--model-mapping-quality", doc=InputDocumentation(doc="(=1)      Include the read mapping quality in the\nhaplotype likelihood calculation")), ToolInput(tag="in_sequence_error_model", input_type=Int(optional=True), prefix="--sequence-error-model", doc=InputDocumentation(doc="(=PCR-free.HiSeq-2500)\nThe sequencer error model to use")), ToolInput(tag="in_max_vb_seeds", input_type=Int(optional=True), prefix="--max-vb-seeds", doc=InputDocumentation(doc="(=12)              Maximum number of seeds to use for\nVariational Bayes algorithms")), ToolInput(tag="in_arg_normal_level", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --phasing-level ] arg (=normal)  Level of phasing - longer range phasing\ncan improve calling accuracy at the\ncost of runtime speed. Possible values\nare: minimal, conservative, moderate,\nnormal, aggressive")), ToolInput(tag="in_min_phase_score", input_type=Int(optional=True), prefix="--min-phase-score", doc=InputDocumentation(doc="(=10)           Minimum phase score (phred scale)\nrequired to report sites as phased")), ToolInput(tag="in_arg_turn_filtering", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --call-filtering ] arg (=1)      Turn variant call filtering on or off")), ToolInput(tag="in_filter_expression", input_type=Boolean(optional=True), prefix="--filter-expression", doc=InputDocumentation(doc="(=QUAL < 10 | MQ < 10 | MP < 10 | AF < 0.05 | SB > 0.98 | BQ < 15 | DP < 1)\nBoolean expression to use to filter\nvariant calls")), ToolInput(tag="in_somatic_filter_expression", input_type=Boolean(optional=True), prefix="--somatic-filter-expression", doc=InputDocumentation(doc="(=QUAL < 2 | GQ < 20 | MQ < 30 | SMQ < 40 | SB > 0.9 | SD > 0.9 | BQ < 20 | DP < 3 | MF > 0.2 | NC > 1 | FRF > 0.5)\nBoolean expression to use to filter\nsomatic variant calls")), ToolInput(tag="in_de_novo_filter_expression", input_type=Boolean(optional=True), prefix="--denovo-filter-expression", doc=InputDocumentation(doc="(=QUAL < 50 | PP < 40 | GQ < 20 | MQ < 30 | AF < 0.1 | SB > 0.95 | BQ < 20 | DP < 10 | DC > 1 | MF > 0.2 | FRF > 0.5 | MP < 30 | MQ0 > 2)\nBoolean expression to use to filter\nsomatic variant calls")), ToolInput(tag="in_ref_call_filter_expression", input_type=Boolean(optional=True), prefix="--refcall-filter-expression", doc=InputDocumentation(doc="(=QUAL < 2 | GQ < 20 | MQ < 10 | DP < 10 | MF > 0.2)\nBoolean expression to use to filter\nhomozygous reference calls")), ToolInput(tag="in_use_calling_reads_for_filtering", input_type=Int(optional=True), prefix="--use-calling-reads-for-filtering", doc=InputDocumentation(doc="(=0)\nUse the original reads used for variant\ncalling for filtering")), ToolInput(tag="in_keep_unfiltered_calls", input_type=Boolean(optional=True), prefix="--keep-unfiltered-calls", doc=InputDocumentation(doc="Keep a copy of unfiltered calls")), ToolInput(tag="in_annotations", input_type=Boolean(optional=True), prefix="--annotations", doc=InputDocumentation(doc="[=arg(=active)]         Annotations to write to final VCF")), ToolInput(tag="in_filter_vcf", input_type=String(optional=True), prefix="--filter-vcf", doc=InputDocumentation(doc="Filter the given Octopus VCF without")), ToolInput(tag="in_somatic_forest_file", input_type=File(optional=True), prefix="--somatic-forest-file", doc=InputDocumentation(doc="Trained Ranger random forest file for\nsomatic variants\n")), ToolInput(tag="in_analyse", input_type=String(), position=0, doc=InputDocumentation(doc="-s [ --samples-file ] arg             File of sample names to analyse, one ")), ToolInput(tag="in_recalibration", input_type=String(), position=0, doc=InputDocumentation(doc="--soft-clip-mask-threshold [=arg(=3)] Only soft clipped bases with quality ")), ToolInput(tag="in_octopus", input_type=String(), position=0, doc=InputDocumentation(doc="--allow-secondary-alignments          Allows reads marked as secondary ")), ToolInput(tag="in_contamination", input_type=String(), position=0, doc=InputDocumentation(doc="--disable-downsampling                Disables downsampling")), ToolInput(tag="in_evaluate", input_type=String(), position=0, doc=InputDocumentation(doc="--max-joint-genotypes arg (=1000000)  The maximum number of joint genotype ")), ToolInput(tag="in_call", input_type=String(), position=0, doc=InputDocumentation(doc="--inactive-flank-scoring arg (=1)     Disables additional calculation to ")), ToolInput(tag="in_calling", input_type=String(), position=0, doc=InputDocumentation(doc="--forest-file arg                     Trained Ranger random forest file"))], outputs=[ToolOutput(tag="out_arg_file_written", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_file_written", type_hint=File()), doc=OutputDocumentation(doc="[ --output ] arg                   File to where output is written. If\nunspecified, calls are written to\nstdout")), ToolOutput(tag="out_re_genotype", output_type=File(optional=True), selector=InputSelector(input_to_select="in_re_genotype", type_hint=File()), doc=OutputDocumentation(doc="VCF file specifying calls to\nregenotype, only sites in this files\nwill appear in the final output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Octopus_V0_1_0().translate("wdl", allow_empty_container=True)

