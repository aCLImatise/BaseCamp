from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Bgt_View_V0_1_0 = CommandToolBuilder(tool="bgt_view", base_command=["bgt", "view"], inputs=[ToolInput(tag="in_samples_list_samplesample", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="samples list (,sample1,sample2 or a file or expr; see Notes below) [all]")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="region [all]")), ToolInput(tag="in_extract_variants_overlapping", input_type=File(optional=True), prefix="-B", doc=InputDocumentation(doc="extract variants overlapping BED FILE []")), ToolInput(tag="in_exclude_variants_overlapping", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="exclude variants overlapping BED FILE (effective with -B)")), ToolInput(tag="in_process_intth_based", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="process from the INT-th record (1-based) []")), ToolInput(tag="in_process_most_int", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="process at most INT records []")), ToolInput(tag="in_variant_annotations_fmf", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="variant annotations in FMF (to work with -a) []")), ToolInput(tag="in_load_variant_annotations", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="load variant annotations in RAM (only with -d)")), ToolInput(tag="in_alleles_list_chrbasedposreflenseq", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="alleles list chr:1basedPos:refLen:seq (,allele1,allele2 or a file or expr) []")), ToolInput(tag="in_frequency_filters", input_type=String(optional=True), prefix="-f", doc=InputDocumentation(doc="frequency filters []")), ToolInput(tag="in_bcf_output_effective", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="BCF output (effective without -S/-H)")), ToolInput(tag="in_compression_level_bcf", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="compression level for BCF [default]")), ToolInput(tag="in_equivalent_overriding_b", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="equivalent to -bl0 (overriding -b and -l)")), ToolInput(tag="in_output_sample_genotypes", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="don't output sample genotypes")), ToolInput(tag="in_write_acan_s", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="write AC/AN to the INFO field (auto applied with -f or multipl -s)")), ToolInput(tag="in_show_samples_set", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="show samples with a set of alleles (with -a)")), ToolInput(tag="in_count_haplotypes_set", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="count of haplotypes with a set of alleles (with -a)")), ToolInput(tag="in_commadelimited_list_output", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="comma-delimited list of fields to output. Accepted variables:\nAC, AN, AC#, AN#, CHROM, POS, END, REF, ALT (# for a group number)")), ToolInput(tag="in_bgt_prefix", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bgt_View_V0_1_0().translate("wdl", allow_empty_container=True)

