!Command
command:
- filedetails.pl
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --check_dir
  description: '- Str. Directory to check for files.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --man
  description: '- Bool. Display man page'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --print_dir
  description: "- Bool. Default=0. Create a directory for\nmetadata, and write details\
    \ to file\nself->check_dir/meta/file.meta Defaults to\nyes."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --print_stdout
  description: "- Bool. Default=1. Print metadata to STDOUT.\nDefault is yes."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --line_count
  description: '- Bool. Default=1. q(Get a line count per file)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: -? --usage - Bool. Display the usage message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage:\n    filedetails.pl [OPTIONS]\n\nOptions:\n     Required:\n   \
  \      --check_dir       - Str. Directory to check for files.\n     Optional:\n\
  \         --help -? --usage - Bool. Display the usage message and exit\n       \
  \  --man             - Bool. Display man page\n         --configfile      - Path|Undef.\
  \ \n         --print_dir       - Bool. Default=0. Create a directory for\n     \
  \                          metadata, and write details to file\n               \
  \                self->check_dir/meta/file.meta Defaults to\n                  \
  \             yes.\n         --print_stdout    - Bool. Default=1. Print metadata\
  \ to STDOUT.\n                               Default is yes.\n         --line_count\
  \      - Bool. Default=1. q(Get a line count per file)\n\n"
generated_using:
- --help
docker_image:
