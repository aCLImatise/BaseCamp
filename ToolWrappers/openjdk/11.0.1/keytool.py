from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Keytool_V0_1_0 = CommandToolBuilder(tool="keytool", base_command=["keytool"], inputs=[ToolInput(tag="in_cert_req", input_type=Boolean(optional=True), prefix="-certreq", doc=InputDocumentation(doc="Generates a certificate request")), ToolInput(tag="in_change_alias", input_type=Boolean(optional=True), prefix="-changealias", doc=InputDocumentation(doc="Changes an entry's alias")), ToolInput(tag="in_delete", input_type=Boolean(optional=True), prefix="-delete", doc=InputDocumentation(doc="Deletes an entry")), ToolInput(tag="in_export_cert", input_type=Boolean(optional=True), prefix="-exportcert", doc=InputDocumentation(doc="Exports certificate")), ToolInput(tag="in_gen_key_pair", input_type=Boolean(optional=True), prefix="-genkeypair", doc=InputDocumentation(doc="Generates a key pair")), ToolInput(tag="in_gen_sec_key", input_type=Boolean(optional=True), prefix="-genseckey", doc=InputDocumentation(doc="Generates a secret key")), ToolInput(tag="in_gen_cert", input_type=Boolean(optional=True), prefix="-gencert", doc=InputDocumentation(doc="Generates certificate from a certificate request")), ToolInput(tag="in_import_cert", input_type=Boolean(optional=True), prefix="-importcert", doc=InputDocumentation(doc="Imports a certificate or a certificate chain")), ToolInput(tag="in_import_pass", input_type=Boolean(optional=True), prefix="-importpass", doc=InputDocumentation(doc="Imports a password")), ToolInput(tag="in_import_keystore", input_type=Boolean(optional=True), prefix="-importkeystore", doc=InputDocumentation(doc="Imports one or all entries from another keystore")), ToolInput(tag="in_key_passwd", input_type=Boolean(optional=True), prefix="-keypasswd", doc=InputDocumentation(doc="Changes the key password of an entry")), ToolInput(tag="in_list", input_type=Boolean(optional=True), prefix="-list", doc=InputDocumentation(doc="Lists entries in a keystore")), ToolInput(tag="in_print_cert", input_type=Boolean(optional=True), prefix="-printcert", doc=InputDocumentation(doc="Prints the content of a certificate")), ToolInput(tag="in_print_cert_req", input_type=Boolean(optional=True), prefix="-printcertreq", doc=InputDocumentation(doc="Prints the content of a certificate request")), ToolInput(tag="in_print_crl", input_type=Boolean(optional=True), prefix="-printcrl", doc=InputDocumentation(doc="Prints the content of a CRL file")), ToolInput(tag="in_store_passwd", input_type=Boolean(optional=True), prefix="-storepasswd", doc=InputDocumentation(doc="Changes the store password of a keystore"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Keytool_V0_1_0().translate("wdl", allow_empty_container=True)

