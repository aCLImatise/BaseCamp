!Command
command:
- csvtk
- summary
positional: []
named:
- !Flag
  description: limit floats to N decimal points (default 2)
  synonyms:
  - -n
  - --decimal-width
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: 'operations on these fields. e.g -f 1:count,1:sum or -f colA:mean.
    available operations: collapse, count, countn, countunique, entropy, first, last,
    max, mean, median, min, prod, q1, q2, q3, rand, stdev, sum, uniq, variance'
  synonyms:
  - -f
  - --fields
  args: !SimpleFlagArg
    name: strings
  optional: true
- !Flag
  description: group via fields. e.g -f 1,2 or -f columnA,columnB
  synonyms:
  - -g
  - --groups
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ignore non-digital values like "NA" or "N/A"
  synonyms:
  - -i
  - --ignore-non-digits
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: rand seed for operation "rand" (default 11)
  synonyms:
  - -S
  - --rand-seed
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: separater for collapsed data (default "; ")
  synonyms:
  - -s
  - --separater
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: chunk size of CSV reader (default 50)
  synonyms:
  - -c
  - --chunk-size
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: lines starting with commment-character will be ignored. if your header
    row starts with '#', please assign "-C" another rare symbol, e.g. '$' (default
    "#")
  synonyms:
  - -C
  - --comment-char
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: delimiting character of the input CSV file (default ",")
  synonyms:
  - -d
  - --delimiter
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: ignore empty rows
  synonyms:
  - -E
  - --ignore-empty-row
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ignore illegal rows
  synonyms:
  - -I
  - --ignore-illegal-row
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: file of input files list (one file per line), if given, they are appended
    to files from cli arguments
  synonyms:
  - --infile-list
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: if given, a quote may appear in an unquoted field and a non-doubled
    quote may appear in a quoted field
  synonyms:
  - -l
  - --lazy-quotes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specifies that the input CSV file does not have header row
  synonyms:
  - -H
  - --no-header-row
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: number of CPUs to use (default value depends on your computer) (default
    8)
  synonyms:
  - -j
  - --num-cpus
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: delimiting character of the output CSV file, e.g., -D $'\t' for tab
    (default ",")
  synonyms:
  - -D
  - --out-delimiter
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: out file ("-" for stdout, suffix .gz for gzipped out) (default "-")
  synonyms:
  - -o
  - --out-file
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: specifies that the output is delimited with tabs. Overrides "-D"
  synonyms:
  - -T
  - --out-tabs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specifies that the input CSV file is delimited with tabs. Overrides
    "-d" and "-D"
  synonyms:
  - -t
  - --tabs
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: help for summary
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "summary statistics of selected digital fields (groupby group fields)\n\
  \nAttention:\n\n  1. Do not mix use digital fields and column names.\n\nAvailable\
  \ operations:\n \n  # numeric/statistical operations\n  # provided by github.com/gonum/stat\
  \ and github.com/gonum/floats\n  countn (count of digits), min, max, sum,\n  mean,\
  \ stdev, variance, median, q1, q2, q3,\n  entropy (Shannon entropy), \n  prod (product\
  \ of the elements)\n\n  # textual/numeric operations\n  count, first, last, rand,\
  \ unique, collapse, countunique\n\nUsage:\n  csvtk summary [flags]\n\nFlags:\n \
  \ -n, --decimal-width int   limit floats to N decimal points (default 2)\n  -f,\
  \ --fields strings      operations on these fields. e.g -f 1:count,1:sum or -f colA:mean.\
  \ available operations: collapse, count, countn, countunique, entropy, first, last,\
  \ max, mean, median, min, prod, q1, q2, q3, rand, stdev, sum, uniq, variance\n \
  \ -g, --groups string       group via fields. e.g -f 1,2 or -f columnA,columnB\n\
  \  -h, --help                help for summary\n  -i, --ignore-non-digits   ignore\
  \ non-digital values like \"NA\" or \"N/A\"\n  -S, --rand-seed int       rand seed\
  \ for operation \"rand\" (default 11)\n  -s, --separater string    separater for\
  \ collapsed data (default \"; \")\n\nGlobal Flags:\n  -c, --chunk-size int     \
  \    chunk size of CSV reader (default 50)\n  -C, --comment-char string    lines\
  \ starting with commment-character will be ignored. if your header row starts with\
  \ '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d,\
  \ --delimiter string       delimiting character of the input CSV file (default \"\
  ,\")\n  -E, --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row\
  \     ignore illegal rows\n      --infile-list string     file of input files list\
  \ (one file per line), if given, they are appended to files from cli arguments\n\
  \  -l, --lazy-quotes            if given, a quote may appear in an unquoted field\
  \ and a non-doubled quote may appear in a quoted field\n  -H, --no-header-row  \
  \        specifies that the input CSV file does not have header row\n  -j, --num-cpus\
  \ int           number of CPUs to use (default value depends on your computer) (default\
  \ 8)\n  -D, --out-delimiter string   delimiting character of the output CSV file,\
  \ e.g., -D $'\\t' for tab (default \",\")\n  -o, --out-file string        out file\
  \ (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")\n  -T, --out-tabs\
  \               specifies that the output is delimited with tabs. Overrides \"-D\"\
  \n  -t, --tabs                   specifies that the input CSV file is delimited\
  \ with tabs. Overrides \"-d\" and \"-D\"\n"
generated_using:
- --help
