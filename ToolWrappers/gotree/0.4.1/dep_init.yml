!Command
command:
- dep
- init
positional:
- !Positional
  optional: true
  position: 0
  name: root
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -gopath
  description: 'search in GOPATH for dependencies (default: false)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -no-examples
  description: "don't include example in Gopkg.toml (default: false)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -skip-tools
  description: 'skip importing configuration from other dependency managers (default:
    false)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: 'enable verbose logging (default: false)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: dep init [root]\n\nInitialize the project at filepath root by parsing\
  \ its dependencies, writing\nmanifest and lock files, and vendoring the dependencies.\
  \ If root isn't\nspecified, use the current directory.\n\nWhen configuration for\
  \ another dependency management tool is detected, it is\nimported into the initial\
  \ manifest and lock. Use the -skip-tools flag to\ndisable this behavior. The following\
  \ external tools are supported:\nglide, godep, vndr, govend, gb, gvt, govendor,\
  \ glock.\n\nAny dependencies that are not constrained by external configuration\
  \ use the\nGOPATH analysis below.\n\nBy default, the dependencies are resolved over\
  \ the network. A version will be\nselected from the versions available from the\
  \ upstream source per the following\nalgorithm:\n\n - Tags conforming to semver\
  \ (sorted by semver rules)\n - Default branch(es) (sorted lexicographically)\n -\
  \ Non-semver tags (sorted lexicographically)\n\nAn alternate mode can be activated\
  \ by passing -gopath. In this mode, the version\nof each dependency will reflect\
  \ the current state of the GOPATH. If a dependency\ndoesn't exist in the GOPATH,\
  \ a version will be selected based on the above\nnetwork version selection algorithm.\n\
  \nA Gopkg.toml file will be written with inferred version constraints for all\n\
  direct dependencies. Gopkg.lock will be written with precise versions, and\nvendor/\
  \ will be populated with the precise versions written to Gopkg.lock.\n\nFlags:\n\
  \n  -gopath       search in GOPATH for dependencies (default: false)\n  -no-examples\
  \  don't include example in Gopkg.toml (default: false)\n  -skip-tools   skip importing\
  \ configuration from other dependency managers (default: false)\n  -v          \
  \  enable verbose logging (default: false)\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/gotree:0.4.1--h375a9b1_0
