!Command
command:
- nibFrag
positional:
- !Positional
  description: ''
  position: 0
  name: file.nib
  optional: false
- !Positional
  description: ''
  position: 1
  name: start
  optional: false
- !Positional
  description: ''
  position: 2
  name: end
  optional: false
- !Positional
  description: ''
  position: 3
  name: strand
  optional: false
named:
- !Flag
  description: Use lower-case characters for bases meant to be masked out.
  synonyms:
  - -masked
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use upper-case for not masked-out, and 'N' characters for masked-out
    bases.
  synonyms:
  - -hardMasked
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use upper-case characters for all bases.
  synonyms:
  - -upper
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use given name after '>' in output sequence.
  synonyms:
  - -name
  args: !SimpleFlagArg
    name: name
  optional: true
- !Flag
  description: Add full database info to the header, with or without -name option.
  synonyms:
  - -dbHeader
  args: !SimpleFlagArg
    name: db
  optional: true
- !Flag
  description: Format header for compatibility with tba, takes database name as argument.
  synonyms:
  - -tbaHeader
  args: !SimpleFlagArg
    name: db
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "nibFrag - Extract part of a nib file as .fa (all bases/gaps lower case\
  \ by default)\nusage:\n   nibFrag [options] file.nib start end strand out.fa\nwhere\
  \ strand is + (plus) or m (minus)\noptions:\n   -masked       Use lower-case characters\
  \ for bases meant to be masked out.\n   -hardMasked   Use upper-case for not masked-out,\
  \ and 'N' characters for masked-out bases.\n   -upper        Use upper-case characters\
  \ for all bases.\n   -name=name    Use given name after '>' in output sequence.\n\
  \   -dbHeader=db  Add full database info to the header, with or without -name option.\n\
  \   -tbaHeader=db Format header for compatibility with tba, takes database name\
  \ as argument.\n\n"
generated_using: []
