!Command
command:
- arwen
positional:
- !Positional
  optional: false
  position: 0
  name: filename
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -mtmam
  description: "Search for Mammalian mitochondrial tRNA\ngenes. -tv switch set.\n\
    Mammalian mitochondrial genetic code used."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mtx
  description: "Low scoring tRNA genes are\nnot reported."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gc
  description: <num>      Use the GenBank transl_table = <num> genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcstd
  description: Use standard genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcmet
  description: Use composite Metazoan mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcvert
  description: Use Vertebrate mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcinvert
  description: Use Invertebrate mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcyeast
  description: Use Yeast mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcprot
  description: Use Mold/Protozoan/Coelenterate mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcciliate
  description: Use Ciliate genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcflatworm
  description: Use Echinoderm/Flatworm mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gceuplot
  description: Use Euplotid genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcbact
  description: Use Bacterial/Plant Chloroplast genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcaltyeast
  description: Use alternative Yeast genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcascid
  description: Use Ascidian Mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcaltflat
  description: Use alternative Flatworm Mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcblep
  description: Use Blepharisma genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcchloroph
  description: Use Chlorophycean Mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gctrem
  description: Use Trematode Mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcscen
  description: Use Scenedesmus obliquus Mitochondrial genetic code.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -gcthraust
  description: "Use Thraustochytrium Mitochondrial genetic code.\nIndividual modifications\
    \ can be appended using"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -tv
  description: "Do not search for mitochondrial TV replacement\nloop tRNA genes."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: "Assume that each sequence has a circular\ntopology. Search wraps around\
    \ each end.\nDefault setting."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: "Assume that each sequence has a linear\ntopology. Search does not\
    \ wrap."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: "Double. Search both strands of each\nsequence. Default setting."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - -s
  description: "+     Single. Do not search the complementary\n(antisense) strand\
    \ of each sequence."
  args: !SimpleFlagArg
    name: or
- !Flag
  optional: true
  synonyms:
  - -sc
  - -s-
  description: "Single complementary. Do not search the sense\nstrand of each sequence."
  args: !SimpleFlagArg
    name: or
- !Flag
  optional: true
  synonyms:
  - -rp
  description: Report low scoring genes as possible pseudogenes
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -seq
  description: Print out primary sequence.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -br
  description: "Show secondary structure of tRNA gene primary\nsequence with round\
    \ brackets."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fasta
  description: Print out primary sequence in fasta format.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fo
  description: "Print out primary sequence in fasta format only\n(no secondary structure)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  description: "Display 4-base sequence on 3' end of astem\nregardless of predicted\
    \ amino-acyl acceptor\nlength."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -jr
  description: "Allow some divergence of 3' amino-acyl acceptor\nsequence from NCCA."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -jr4
  description: "Allow some divergence of 3' amino-acyl acceptor\nsequence from NCCA,\
    \ and display 4 bases."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: "Verbose. Prints out search progress\nto STDERR."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "print output into <outfile>. If <outfile>\nexists, it is overwritten.\n\
    By default, output goes to STDOUT."
  args: !SimpleFlagArg
    name: outfile
- !Flag
  optional: true
  synonyms:
  - -w
  description: "Print out genes in batch mode.\nOutput is in the form:\nSequence name\n\
    N genes found\n1 tRNA-<species> [locus 1] <Apos> (nnn)\n.\n.\nN tRNA-<species>\
    \ [Locus N] <Apos> (nnn)\nN is the number of genes found\n<species> is the tRNA\
    \ iso-acceptor species\n<Apos> is the tRNA anticodon relative position\n(nnn)\
    \ is the tRNA anticodon base triplet\n"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mt
  description: ''
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n---------------------------\nARWEN v1.2 Dean Laslett\n---------------------------\n\
  \nPlease reference the following paper if you use this\nprogram as part of any published\
  \ research.\n\nLaslett, D. and Canback, B. (2008) ARWEN: a\nprogram to detect tRNA\
  \ genes in metazoan mitochondrial\nnucleotide sequences\nBioinformatics, 24(2);\
  \ 172-175.\n\n\nARWEN detects metazoan mitochondrial tRNA genes.\n\nUsage:\narwen\
  \ -v -s -d -c -l -a -w -j -seq -mt -tv -gc -o <outfile> <filename>\n\n<filename>\
  \ is assumed to contain one or more sequences\nin FASTA format. Results of the search\
  \ are printed to\nSTDOUT. All switches are optional and case-insensitive.\n\n  \
  \  -mtmam        Search for Mammalian mitochondrial tRNA\n                  genes.\
  \ -tv switch set.\n                  Mammalian mitochondrial genetic code used.\n\
  \    -mtx          Low scoring tRNA genes are\n                  not reported.\n\
  \    -gc<num>      Use the GenBank transl_table = <num> genetic code.\n    -gcstd\
  \        Use standard genetic code.\n    -gcmet        Use composite Metazoan mitochondrial\
  \ genetic code.\n    -gcvert       Use Vertebrate mitochondrial genetic code.\n\
  \    -gcinvert     Use Invertebrate mitochondrial genetic code.\n    -gcyeast  \
  \    Use Yeast mitochondrial genetic code.\n    -gcprot       Use Mold/Protozoan/Coelenterate\
  \ mitochondrial genetic code.\n    -gcciliate    Use Ciliate genetic code.\n   \
  \ -gcflatworm   Use Echinoderm/Flatworm mitochondrial genetic code.\n    -gceuplot\
  \     Use Euplotid genetic code.\n    -gcbact       Use Bacterial/Plant Chloroplast\
  \ genetic code.\n    -gcaltyeast   Use alternative Yeast genetic code.\n    -gcascid\
  \      Use Ascidian Mitochondrial genetic code.\n    -gcaltflat    Use alternative\
  \ Flatworm Mitochondrial genetic code.\n    -gcblep       Use Blepharisma genetic\
  \ code.\n    -gcchloroph   Use Chlorophycean Mitochondrial genetic code.\n    -gctrem\
  \       Use Trematode Mitochondrial genetic code.\n    -gcscen       Use Scenedesmus\
  \ obliquus Mitochondrial genetic code.\n    -gcthraust    Use Thraustochytrium Mitochondrial\
  \ genetic code.\n                  Individual modifications can be appended using\n\
  \    ,BBB=<aa>     B = A,C,G, or T. <aa> is the three letter\n                 \
  \ code for an amino-acid. More than one modification\n                  can be specified.\
  \ eg -gcvert,aga=Trp,agg=Trp uses\n                  the Vertebrate Mitochondrial\
  \ code and the codons\n                  AGA and AGG changed to Tryptophan.\n  \
  \  -tv           Do not search for mitochondrial TV replacement\n              \
  \    loop tRNA genes.\n    -c            Assume that each sequence has a circular\n\
  \                  topology. Search wraps around each end.\n                  Default\
  \ setting.\n    -l            Assume that each sequence has a linear\n         \
  \         topology. Search does not wrap.\n    -d            Double. Search both\
  \ strands of each\n                  sequence. Default setting.\n    -s or -s+ \
  \    Single. Do not search the complementary\n                  (antisense) strand\
  \ of each sequence.\n    -sc or -s-    Single complementary. Do not search the sense\n\
  \                  strand of each sequence.\n    -rp           Report low scoring\
  \ genes as possible pseudogenes\n    -seq          Print out primary sequence.\n\
  \    -br           Show secondary structure of tRNA gene primary\n             \
  \     sequence with round brackets.\n    -fasta        Print out primary sequence\
  \ in fasta format.\n    -fo           Print out primary sequence in fasta format\
  \ only\n                  (no secondary structure).\n    -j            Display 4-base\
  \ sequence on 3' end of astem\n                  regardless of predicted amino-acyl\
  \ acceptor\n                  length.\n    -jr           Allow some divergence of\
  \ 3' amino-acyl acceptor\n                  sequence from NCCA.\n    -jr4      \
  \    Allow some divergence of 3' amino-acyl acceptor\n                  sequence\
  \ from NCCA, and display 4 bases.\n    -v            Verbose. Prints out search\
  \ progress\n                  to STDERR.\n    -o <outfile>  print output into <outfile>.\
  \ If <outfile>\n                  exists, it is overwritten.\n                 \
  \ By default, output goes to STDOUT.\n    -w            Print out genes in batch\
  \ mode.\n                  Output is in the form:\n\n                  Sequence\
  \ name\n                  N genes found\n                  1 tRNA-<species> [locus\
  \ 1] <Apos> (nnn)\n                            .          \n                   \
  \         .          \n                  N tRNA-<species> [Locus N] <Apos> (nnn)\n\
  \n                  N is the number of genes found\n                  <species>\
  \ is the tRNA iso-acceptor species\n                  <Apos> is the tRNA anticodon\
  \ relative position\n                  (nnn) is the tRNA anticodon base triplet\n\
  \n\n"
generated_using:
- -h
docker_image: quay.io/biocontainers/mitofinder:1.4--py27h516909a_0
