from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Bunzip2_V0_1_0 = CommandToolBuilder(tool="bunzip2", base_command=["bunzip2"], inputs=[ToolInput(tag="in_decompress", input_type=Boolean(optional=True), prefix="--decompress", doc=InputDocumentation(doc="force decompression")), ToolInput(tag="in_compress", input_type=Boolean(optional=True), prefix="--compress", doc=InputDocumentation(doc="force compression")), ToolInput(tag="in_keep", input_type=Boolean(optional=True), prefix="--keep", doc=InputDocumentation(doc="keep (don't delete) input files")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="overwrite existing output files")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="--test", doc=InputDocumentation(doc="test compressed file integrity")), ToolInput(tag="in_stdout", input_type=Boolean(optional=True), prefix="--stdout", doc=InputDocumentation(doc="output to standard out")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="suppress noncritical error messages")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="be verbose (a 2nd -v gives more)")), ToolInput(tag="in_license", input_type=Boolean(optional=True), prefix="--license", doc=InputDocumentation(doc="display software version & license")), ToolInput(tag="in_small", input_type=Boolean(optional=True), prefix="--small", doc=InputDocumentation(doc="use less memory (at most 2500k)")), ToolInput(tag="in_set_block_size", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc=".. -9            set block size to 100k .. 900k")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc="alias for -1")), ToolInput(tag="in_best", input_type=Boolean(optional=True), prefix="--best", doc=InputDocumentation(doc="alias for -9")), ToolInput(tag="in_flags", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_and", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(optional=True), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(optional=True), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_in", input_type=String(optional=True), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_any", input_type=String(optional=True), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_order", input_type=String(optional=True), position=6, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/bzip2:1.0.8", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bunzip2_V0_1_0().translate("wdl")

