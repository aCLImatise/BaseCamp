!Command
command:
- flatfile-to-json.pl
positional:
- !Positional
  description: "\\\n( --gff <GFF3 file> | --bed <BED file> | --gbk <GenBank file>\
    \ )         \\\n--trackLabel <track identifier>                              \
    \           \\\n[ --trackType <JS Class> ]                                   \
    \           \\\n[ --out <output directory> ]                                 \
    \           \\\n[ --key <human-readable track name> ]                        \
    \           \\\n[ --className <CSS class name for displaying features> ]     \
    \           \\\n[ --urltemplate \"http://example.com/idlookup?id={id}\" ]    \
    \             \\\n[ --arrowheadClass <CSS class> ]                           \
    \             \\\n[ --noSubfeatures ]                                        \
    \             \\\n[ --subfeatureClasses '{ JSON-format subfeature class map }'\
    \ ]          \\\n[ --clientConfig '{ JSON-format style configuration for this\
    \ track }' ] \\\n[ --config '{ JSON-format extra configuration for this track\
    \ }' ]       \\\n[ --thinType <BAM -thin_type> ]                             \
    \            \\\n[ --thicktype <BAM -thick_type>]                            \
    \            \\\n[ --type <feature types to process> ]                       \
    \            \\\n[ --nclChunk <chunk size for generated NCLs> ]              \
    \            \\\n[ --compress ]                                              \
    \            \\\n[ --sortMem <memory in bytes to use for sorting> ]          \
    \            \\\n[ --maxLookback <maximum number of features to buffer in gff3\
    \ files> ]  \\\n[ --nameAttributes \"name,alias,id\" ]                       \
    \             \\"
  position: 0
  name: flatfile-to-json.pl
  optional: false
- !Positional
  description: "--maxLookback <integer>\nMaximum number of features to keep in memory\
    \ when parsing GFF3\nfiles. Defaults to 10000.\nIf you receive \"orphan features\"\
    \ errors when parsing a GFF3 file\nthat doesn't contain enough '###' directives\
    \ (which are important\nfor parsing), you can try setting this higher if your\
    \ machine has\nenough memory."
  position: 0
  name: GFF3-specific
  optional: false
- !Positional
  description: --thinType <type>
  position: 1
  name: BED-specific
  optional: false
named:
- !Flag
  description: "--bed <BED file>\n--gbk <GenBank file>\nProcess a GFF3, BED, or GenBank\
    \ file containing annotation data.\nThis script does not support GFF version 2\
    \ or GTF (GFF 2.5) input.\nGenBank input is limited to handling records for single\
    \ genes.\n--trackLabel <track identifier>\nUnique identifier for this track. Required."
  synonyms:
  - --gff
  args: !SimpleFlagArg
    name: GFF3 file
  optional: true
- !Flag
  description: "'<text>'\nHuman-readable track name."
  synonyms:
  - --key
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output directory to write to. Defaults to "data/".
  synonyms:
  - --out
  args: !SimpleFlagArg
    name: output directory
  optional: true
- !Flag
  description: "Optional JavaScript class to use to display this track. For backward\n\
    compatibility, this defaults to \"HTMLFeatures\".\nUnless you have some reason\
    \ to use HTMLFeatures tracks, though, it's\nrecommended to set this to \"CanvasFeatures\"\
    \ to use the newer\ncanvas-based feature track type."
  synonyms:
  - --trackType
  args: !SimpleFlagArg
    name: JBrowse/View/Track/HTMLFeatures
  optional: true
- !Flag
  description: "CSS class for features. Defaults to \"feature\". Only used by\nHTMLFeatures\
    \ tracks."
  synonyms:
  - --className
  args: !SimpleFlagArg
    name: CSS class name for displaying features
  optional: true
- !Flag
  description: "\"http://example.com/idlookup?id={id}\"\nTemplate for a URL to be\
    \ visited when features are clicked on."
  synonyms:
  - --urltemplate
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not format subfeature data. Only include top-level features.
  synonyms:
  - --noSubfeatures
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: CSS class for arrowheads. Only used by HTMLFeatures tracks.
  synonyms:
  - --arrowheadClass
  args: !SimpleFlagArg
    name: CSS class
  optional: true
- !Flag
  description: "'{ JSON-format subfeature class map }'\nCSS classes for each subfeature\
    \ type, in JSON syntax. Example:\n--subfeatureClasses '{\"CDS\": \"transcript-CDS\"\
    , \"exon\": \"transcript-exon\"}'\nOnly used by HTMLFeatures tracks."
  synonyms:
  - --subfeatureClasses
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "'{ JSON-format style configuration for this track }'\nExtra configuration\
    \ for the client, in JSON syntax. Example:\n--clientConfig '{\"featureCss\": \"\
    background-color: #668; height: 8px;\", \"histScale\": 2}'\nFor historical reasons,\
    \ this is only merged into the \"style\" section\nof the new track's configuration."
  synonyms:
  - --clientConfig
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "'{ JSON-format extra configuration for this track }'\nAdditional top-level\
    \ configuration for the client, in JSON syntax.\nExample:\n--config '{ \"glyph\"\
    : \"ProcessedTranscript\" }'\nUnlike \"--clientConfig\", this is merged into the\
    \ top level of the\nnew track configuration."
  synonyms:
  - --config
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "'{ JSON metadata }'\nMetadata about this track. Example:\n--metadata\
    \ '{\"description\": \"Genes from XYZ pipeline.\", \"category\": \"Transcripts\"\
    \ }'"
  synonyms:
  - --metadata
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Only process features of the given type. Can take either single type\n\
    names, e.g. \"mRNA\", or type names qualified by \"source\" name, for\nwhatever\
    \ definition of \"source\" your data file might have. For\nexample, \"mRNA:exonerate\"\
    \ will filter for only mRNA features that\nhave a source of \"exonerate\".\nMultiple\
    \ type names can be specified by separating the type names\nwith commas, e.g.\
    \ \"--type mRNA:exonerate,ncRNA\"."
  synonyms:
  - --type
  args: !SimpleFlagArg
    name: feature types to process
  optional: true
- !Flag
  description: "\"name,alias,id\"\nComma-separated list of feature attributes (a.k.a.\
    \ tags) that should\nbe treated as names for this features. Case insensitive.\
    \ Defaults to\n\"name,alias,id\"."
  synonyms:
  - --nameAttributes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "NCList chunk size; if you get \"json text or perl structure exceeds\n\
    maximum nesting level\" errors, try setting this lower (default:\n50,000)."
  synonyms:
  - --nclChunk
  args: !SimpleFlagArg
    name: chunk size for generated NCLs
  optional: true
- !Flag
  description: "Compress the output, making .jsonz (gzipped) JSON files. This can\n\
    save a lot of disk space, but note that web servers require some\nadditional configuration\
    \ to serve these correctly."
  synonyms:
  - --compress
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Bytes of RAM to use for sorting features. Default 512MB.\nThe JSON\
    \ NCList generation has to sort the features by reference\nsequence, start coordinate,\
    \ and end coordinate. This is how much RAM\nin bytes the sorting process is allowed\
    \ to use."
  synonyms:
  - --sortMem
  args: !SimpleFlagArg
    name: bytes
  optional: true
- !Flag
  description: "Correspond to \"<-thin_type\"> and \"<-thick_type\"> in\nBio::FeatureIO::bed.\
    \ Do \"<perldoc Bio::FeatureIO::bed\"> for details."
  synonyms:
  - --thickType
  args: !SimpleFlagArg
    name: type
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "| -h | -?\nDisplay an extended help screen."
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "NAME\n    flatfile-to-json.pl - format data into JBrowse JSON format from\
  \ an\n    annotation file\n\nUSAGE\n      flatfile-to-json.pl                  \
  \                                       \\\n          ( --gff <GFF3 file> | --bed\
  \ <BED file> | --gbk <GenBank file> )         \\\n          --trackLabel <track\
  \ identifier>                                         \\\n          [ --trackType\
  \ <JS Class> ]                                              \\\n          [ --out\
  \ <output directory> ]                                            \\\n         \
  \ [ --key <human-readable track name> ]                                   \\\n \
  \         [ --className <CSS class name for displaying features> ]             \
  \   \\\n          [ --urltemplate \"http://example.com/idlookup?id={id}\" ]    \
  \             \\\n          [ --arrowheadClass <CSS class> ]                   \
  \                     \\\n          [ --noSubfeatures ]                        \
  \                             \\\n          [ --subfeatureClasses '{ JSON-format\
  \ subfeature class map }' ]          \\\n          [ --clientConfig '{ JSON-format\
  \ style configuration for this track }' ] \\\n          [ --config '{ JSON-format\
  \ extra configuration for this track }' ]       \\\n          [ --thinType <BAM\
  \ -thin_type> ]                                         \\\n          [ --thicktype\
  \ <BAM -thick_type>]                                        \\\n          [ --type\
  \ <feature types to process> ]                                   \\\n          [\
  \ --nclChunk <chunk size for generated NCLs> ]                          \\\n   \
  \       [ --compress ]                                                         \
  \ \\\n          [ --sortMem <memory in bytes to use for sorting> ]             \
  \         \\\n          [ --maxLookback <maximum number of features to buffer in\
  \ gff3 files> ]  \\\n          [ --nameAttributes \"name,alias,id\" ]          \
  \                          \\\n\nARGUMENTS\n  Required\n    --gff <GFF3 file>\n\
  \    --bed <BED file>\n    --gbk <GenBank file>\n        Process a GFF3, BED, or\
  \ GenBank file containing annotation data.\n\n        This script does not support\
  \ GFF version 2 or GTF (GFF 2.5) input.\n        GenBank input is limited to handling\
  \ records for single genes.\n\n    --trackLabel <track identifier>\n        Unique\
  \ identifier for this track. Required.\n\n  Optional\n    --help | -h | -?\n   \
  \     Display an extended help screen.\n\n    --key '<text>'\n        Human-readable\
  \ track name.\n\n    --out <output directory>\n        Output directory to write\
  \ to. Defaults to \"data/\".\n\n    --trackType JBrowse/View/Track/HTMLFeatures\n\
  \        Optional JavaScript class to use to display this track. For backward\n\
  \        compatibility, this defaults to \"HTMLFeatures\".\n\n        Unless you\
  \ have some reason to use HTMLFeatures tracks, though, it's\n        recommended\
  \ to set this to \"CanvasFeatures\" to use the newer\n        canvas-based feature\
  \ track type.\n\n    --className <CSS class name for displaying features>\n    \
  \    CSS class for features. Defaults to \"feature\". Only used by\n        HTMLFeatures\
  \ tracks.\n\n    --urltemplate \"http://example.com/idlookup?id={id}\"\n       \
  \ Template for a URL to be visited when features are clicked on.\n\n    --noSubfeatures\n\
  \        Do not format subfeature data. Only include top-level features.\n\n   \
  \ --arrowheadClass <CSS class>\n        CSS class for arrowheads. Only used by HTMLFeatures\
  \ tracks.\n\n    --subfeatureClasses '{ JSON-format subfeature class map }'\n  \
  \      CSS classes for each subfeature type, in JSON syntax. Example:\n\n      \
  \    --subfeatureClasses '{\"CDS\": \"transcript-CDS\", \"exon\": \"transcript-exon\"\
  }'\n\n        Only used by HTMLFeatures tracks.\n\n    --clientConfig '{ JSON-format\
  \ style configuration for this track }'\n        Extra configuration for the client,\
  \ in JSON syntax. Example:\n\n          --clientConfig '{\"featureCss\": \"background-color:\
  \ #668; height: 8px;\", \"histScale\": 2}'\n\n        For historical reasons, this\
  \ is only merged into the \"style\" section\n        of the new track's configuration.\n\
  \n    --config '{ JSON-format extra configuration for this track }'\n        Additional\
  \ top-level configuration for the client, in JSON syntax.\n        Example:\n\n\
  \          --config '{ \"glyph\": \"ProcessedTranscript\" }'\n\n        Unlike \"\
  --clientConfig\", this is merged into the top level of the\n        new track configuration.\n\
  \n    --metadata '{ JSON metadata }'\n        Metadata about this track. Example:\n\
  \n          --metadata '{\"description\": \"Genes from XYZ pipeline.\", \"category\"\
  : \"Transcripts\" }'\n\n    --type <feature types to process>\n        Only process\
  \ features of the given type. Can take either single type\n        names, e.g. \"\
  mRNA\", or type names qualified by \"source\" name, for\n        whatever definition\
  \ of \"source\" your data file might have. For\n        example, \"mRNA:exonerate\"\
  \ will filter for only mRNA features that\n        have a source of \"exonerate\"\
  .\n\n        Multiple type names can be specified by separating the type names\n\
  \        with commas, e.g. \"--type mRNA:exonerate,ncRNA\".\n\n    --nameAttributes\
  \ \"name,alias,id\"\n        Comma-separated list of feature attributes (a.k.a.\
  \ tags) that should\n        be treated as names for this features. Case insensitive.\
  \ Defaults to\n        \"name,alias,id\".\n\n    --nclChunk <chunk size for generated\
  \ NCLs>\n        NCList chunk size; if you get \"json text or perl structure exceeds\n\
  \        maximum nesting level\" errors, try setting this lower (default:\n    \
  \    50,000).\n\n    --compress\n        Compress the output, making .jsonz (gzipped)\
  \ JSON files. This can\n        save a lot of disk space, but note that web servers\
  \ require some\n        additional configuration to serve these correctly.\n\n \
  \   --sortMem <bytes>\n        Bytes of RAM to use for sorting features. Default\
  \ 512MB.\n\n        The JSON NCList generation has to sort the features by reference\n\
  \        sequence, start coordinate, and end coordinate. This is how much RAM\n\
  \        in bytes the sorting process is allowed to use.\n\n  GFF3-specific\n  \
  \  --maxLookback <integer>\n        Maximum number of features to keep in memory\
  \ when parsing GFF3\n        files. Defaults to 10000.\n\n        If you receive\
  \ \"orphan features\" errors when parsing a GFF3 file\n        that doesn't contain\
  \ enough '###' directives (which are important\n        for parsing), you can try\
  \ setting this higher if your machine has\n        enough memory.\n\n  BED-specific\n\
  \    --thinType <type>\n    --thickType <type>\n        Correspond to \"<-thin_type\"\
  > and \"<-thick_type\"> in\n        Bio::FeatureIO::bed. Do \"<perldoc Bio::FeatureIO::bed\"\
  > for details.\n\nMEMORY USAGE\n    For efficient memory usage, it is very important\
  \ that large GFF3 files\n    have \"###\" lines in them periodically. For details\
  \ of what \"###\" is and\n    how it is used, see the GFF3 specification at\n  \
  \  <http://www.sequenceontology.org/gff3.shtml>.\n\n"
generated_using:
- --help
