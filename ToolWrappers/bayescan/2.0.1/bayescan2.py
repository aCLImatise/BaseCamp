from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Bayescan2_V0_1_0 = CommandToolBuilder(tool="bayescan2", base_command=["bayescan2"], inputs=[ToolInput(tag="in_optional_input_file", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="Optional input file containing list of loci to discard")), ToolInput(tag="in_snp", input_type=Boolean(optional=True), prefix="-snp", doc=InputDocumentation(doc="Use SNP genotypes matrix")), ToolInput(tag="in_od", input_type=File(optional=True), prefix="-od", doc=InputDocumentation(doc=".        Output file directory, default is the same as program file")), ToolInput(tag="in_output_file_prefix", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file prefix, default is input file without the extension")), ToolInput(tag="in_fstat", input_type=Boolean(optional=True), prefix="-fstat", doc=InputDocumentation(doc="Only estimate F-stats (no selection)")), ToolInput(tag="in_number_outputted_iterations", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="Number of outputted iterations, default is 5000")), ToolInput(tag="in_thin", input_type=Int(optional=True), prefix="-thin", doc=InputDocumentation(doc="Thinning interval size, default is 10")), ToolInput(tag="in_nbp", input_type=Int(optional=True), prefix="-nbp", doc=InputDocumentation(doc="Number of pilot runs, default is 20")), ToolInput(tag="in_pilot", input_type=Int(optional=True), prefix="-pilot", doc=InputDocumentation(doc="Length of pilot runs, default is 5000")), ToolInput(tag="in_burn", input_type=Int(optional=True), prefix="-burn", doc=InputDocumentation(doc="Burn-in length, default is 50000")), ToolInput(tag="in_pr_odds", input_type=Int(optional=True), prefix="-pr_odds", doc=InputDocumentation(doc="Prior odds for the neutral model, default is 10")), ToolInput(tag="in_lb_fis", input_type=Int(optional=True), prefix="-lb_fis", doc=InputDocumentation(doc="Lower bound for uniform prior on Fis (dominant data), default is 0")), ToolInput(tag="in_hb_fis", input_type=Int(optional=True), prefix="-hb_fis", doc=InputDocumentation(doc="Higher bound for uniform prior on Fis (dominant data), default is 1")), ToolInput(tag="in_beta_fis", input_type=Boolean(optional=True), prefix="-beta_fis", doc=InputDocumentation(doc="Optional beta prior for Fis (dominant data, m_fis and sd_fis need to be set)")), ToolInput(tag="in_m_fis", input_type=Int(optional=True), prefix="-m_fis", doc=InputDocumentation(doc="Optional mean for beta prior on Fis (dominant data with -beta_fis)")), ToolInput(tag="in_sd_fis", input_type=Int(optional=True), prefix="-sd_fis", doc=InputDocumentation(doc="Optional std. deviation for beta prior on Fis (dominant data with -beta_fis)")), ToolInput(tag="in_aflp_pc", input_type=Int(optional=True), prefix="-aflp_pc", doc=InputDocumentation(doc="Threshold for the recessive genotype as a fraction of maximum band intensity, default is 0.1")), ToolInput(tag="in_out_pilot", input_type=File(optional=True), prefix="-out_pilot", doc=InputDocumentation(doc="Optional output file for pilot runs")), ToolInput(tag="in_out_freq", input_type=File(optional=True), prefix="-out_freq", doc=InputDocumentation(doc="Optional output file for allele frequencies")), ToolInput(tag="in_alleles_dot_txt", input_type=String(), position=0, doc=InputDocumentation(doc="Name of the genotypes data input file "))], outputs=[ToolOutput(tag="out_od", output_type=File(optional=True), selector=InputSelector(input_to_select="in_od", type_hint=File()), doc=OutputDocumentation(doc=".        Output file directory, default is the same as program file")), ToolOutput(tag="out_out_pilot", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_pilot", type_hint=File()), doc=OutputDocumentation(doc="Optional output file for pilot runs")), ToolOutput(tag="out_out_freq", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_freq", type_hint=File()), doc=OutputDocumentation(doc="Optional output file for allele frequencies"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bayescan2_V0_1_0().translate("wdl", allow_empty_container=True)

