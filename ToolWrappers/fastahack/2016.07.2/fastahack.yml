!Command
command:
- fastahack
positional:
- !Positional
  optional: false
  position: 0
  name: fasta reference
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --index
  description: generate fasta index <fasta reference>.fai
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --region
  description: print the specified region
  args: !SimpleFlagArg
    name: REGION
- !Flag
  optional: true
  synonyms:
  - -c
  - --stdin
  description: "read a stream of line-delimited region specifiers on stdin\nand print\
    \ the corresponding sequence for each on stdout"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --entropy
  description: print the shannon entropy of the specified region
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --dump
  description: print the fasta file in the form 'seq_name <tab> sequence'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: fastahack [options] <fasta reference>\n\noptions:\n    -i, --index\
  \          generate fasta index <fasta reference>.fai\n    -r, --region REGION \
  \ print the specified region\n    -c, --stdin          read a stream of line-delimited\
  \ region specifiers on stdin\n                         and print the corresponding\
  \ sequence for each on stdout\n    -e, --entropy        print the shannon entropy\
  \ of the specified region\n    -d, --dump           print the fasta file in the\
  \ form 'seq_name <tab> sequence'\n\nREGION is of the form <seq>, <seq>:<start>[sep]<end>,\
  \ <seq1>:<start>[sep]<seq2>:<end>\nwhere start and end are 1-based, and the region\
  \ includes the end position.\n[sep] is \"-\" or \"..\"\n\nSpecifying a sequence\
  \ name alone will return the entire sequence, specifying\nrange will return that\
  \ range, and specifying a single coordinate pair, e.g.\n<seq>:<start> will return\
  \ just that base.\n\nauthor: Erik Garrison <erik.garrison@bc.edu>\n"
generated_using:
- --help
docker_image:
