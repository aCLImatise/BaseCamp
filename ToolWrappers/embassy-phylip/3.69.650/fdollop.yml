!Command
command:
- fdollop
positional:
- !Positional
  optional: false
  position: 0
  name: file
  description: 'Additional (Optional) qualifiers (* if not always prompted):'
named:
- !Flag
  optional: true
  synonyms:
  - -weights
  description: properties Phylip weights file (optional)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ancfile
  description: properties Ancestral states file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -method
  description: "menu       [d] Parsimony method (Values: d (Dollo); p\n(Polymorphism))"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -threshold
  description: "float      [$(infile.discretesize)] Threshold value\n(Number 0.000\
    \ or more)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -printdata
  description: boolean    [N] Print data at start of run
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ancseq
  description: boolean    [N] Print states at all nodes of tree
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -stepbox
  description: boolean    [N] Print out steps in each character
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -help
  description: "boolean    Report command line options and exit. More\ninformation\
    \ on associated and general\nqualifiers can be found with -help -verbose\n"
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Dollo and polymorphism parsimony algorithm\nVersion: EMBOSS:6.5.7.0 PHYLIPNEW:3.69.650\n\
  \n   Standard (Mandatory) qualifiers:\n  [-infile]            discretestates File\
  \ containing one or more data sets\n  [-intreefile]        tree       Phylip tree\
  \ file (optional)\n  [-outfile]           outfile    [*.fdollop] Phylip dollop program\
  \ output\n                                  file\n\n   Additional (Optional) qualifiers\
  \ (* if not always prompted):\n   -weights            properties Phylip weights\
  \ file (optional)\n   -ancfile            properties Ancestral states file\n   -method\
  \             menu       [d] Parsimony method (Values: d (Dollo); p\n          \
  \                        (Polymorphism))\n*  -njumble            integer    [0]\
  \ Number of times to randomise (Integer 0\n                                  or\
  \ more)\n*  -seed               integer    [1] Random number seed between 1 and\
  \ 32767\n                                  (must be odd) (Integer from 1 to 32767)\n\
  \   -threshold          float      [$(infile.discretesize)] Threshold value\n  \
  \                                (Number 0.000 or more)\n   -[no]trout         \
  \ toggle     [Y] Write out trees to tree file\n*  -outtreefile        outfile  \
  \  [*.fdollop] Phylip tree output file\n                                  (optional)\n\
  \   -printdata          boolean    [N] Print data at start of run\n   -[no]progress\
  \       boolean    [Y] Print indications of progress of run\n   -[no]treeprint \
  \     boolean    [Y] Print out tree\n   -ancseq             boolean    [N] Print\
  \ states at all nodes of tree\n   -stepbox            boolean    [N] Print out steps\
  \ in each character\n\n   Advanced (Unprompted) qualifiers: (none)\n   General qualifiers:\n\
  \   -help               boolean    Report command line options and exit. More\n\
  \                                  information on associated and general\n     \
  \                             qualifiers can be found with -help -verbose\n\n"
generated_using:
- --help
docker_image:
