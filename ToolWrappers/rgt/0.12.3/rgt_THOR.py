from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Directory, Float, Int, File

Rgt_Thor_V0_1_0 = CommandToolBuilder(tool="rgt_THOR", base_command=["rgt-THOR"], inputs=[ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Experiment's name and prefix for all files that are")), ToolInput(tag="in_no_merge_bin", input_type=Boolean(optional=True), prefix="--no-merge-bin", doc=InputDocumentation(doc="Merge the overlapping bin before filtering by\np-value.[default: Merging bins]")), ToolInput(tag="in_housekeeping_genes", input_type=String(optional=True), prefix="--housekeeping-genes", doc=InputDocumentation(doc="Define housekeeping genes (BED format) used for\nnormalizing. [default: none]")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Store files in output directory. [default: none]")), ToolInput(tag="in_report", input_type=Boolean(optional=True), prefix="--report", doc=InputDocumentation(doc="Generate HTML report about experiment. [default:\nFalse]")), ToolInput(tag="in_dead_zones", input_type=String(optional=True), prefix="--deadzones", doc=InputDocumentation(doc="Define blacklisted genomic regions avoided for\nanalysis (BED format). [default: none]")), ToolInput(tag="in_no_correction", input_type=Boolean(optional=True), prefix="--no-correction", doc=InputDocumentation(doc="Do not use multipe test correction for p-values\n(Benjamini/Hochberg). [default: False]")), ToolInput(tag="in_p_value", input_type=Float(optional=True), prefix="--pvalue", doc=InputDocumentation(doc="P-value cutoff for peak detection. Call only peaks\nwith p-value lower than cutoff. [default: 0.1]")), ToolInput(tag="in_exts", input_type=Int(optional=True), prefix="--exts", doc=InputDocumentation(doc="Read's extension size for BAM files (comma separated\nlist for each BAM file in config file). If option is\nnot chosen, estimate extension sizes. [default: none]")), ToolInput(tag="in_factors_inputs", input_type=File(optional=True), prefix="--factors-inputs", doc=InputDocumentation(doc="Normalization factors for input-DNA (comma separated\nlist for each BAM file in config file). If option is\nnot chosen, estimate factors. [default: none]")), ToolInput(tag="in_scaling_factors", input_type=File(optional=True), prefix="--scaling-factors", doc=InputDocumentation(doc="Scaling factor for each BAM file (not control input-\nDNA) as comma separated list for each BAM file in\nconfig file. If option is not chosen, follow\nnormalization strategy (TMM or HK approach) [default:\nnone]")), ToolInput(tag="in_save_input", input_type=Boolean(optional=True), prefix="--save-input", doc=InputDocumentation(doc="Save input-DNA file if available. [default: False]")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="Define regions (BED format) to restrict the analysis,\nthat is, where to train the HMM and search for DPs. It\nis faster, but less precise.")), ToolInput(tag="in_binsize", input_type=Int(optional=True), prefix="--binsize", doc=InputDocumentation(doc="Size of underlying bins for creating the signal.\n[default: 100]")), ToolInput(tag="in_step", input_type=Int(optional=True), prefix="--step", doc=InputDocumentation(doc="Stepsize with which the window consecutively slides\nacross the genome to create the signal. [default: 50]")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Output debug information. Warning: space consuming!\n[default: False]")), ToolInput(tag="in_no_gc_content", input_type=Boolean(optional=True), prefix="--no-gc-content", doc=InputDocumentation(doc="Do not normalize towards GC content. [default: False]")), ToolInput(tag="in_norm_regions", input_type=String(optional=True), prefix="--norm-regions", doc=InputDocumentation(doc="Restrict normalization to particular regions (BED\nformat). [default: none]")), ToolInput(tag="in_fold_change", input_type=Float(optional=True), prefix="--foldchange", doc=InputDocumentation(doc="Fold change parameter to define training set (t_1, see\npaper). [default: 1.6]")), ToolInput(tag="in_threshold", input_type=Int(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Minimum signal support for differential peaks to\ndefine training set as percentage (t_2, see paper).\n[default: 95]")), ToolInput(tag="in_size", input_type=Int(optional=True), prefix="--size", doc=InputDocumentation(doc="Number of bins the HMM's training set constists of.\n[default: 10000]")), ToolInput(tag="in_par", input_type=Int(optional=True), prefix="--par", doc=InputDocumentation(doc="Percentile for p-value postprocessing filter.\n[default: 1]")), ToolInput(tag="in_poisson", input_type=Boolean(optional=True), prefix="--poisson", doc=InputDocumentation(doc="Use binomial distribution as emmission. [default:\nFalse]")), ToolInput(tag="in_single_strand", input_type=Boolean(optional=True), prefix="--single-strand", doc=InputDocumentation(doc="Allow single strand BAM file as input. [default:\nFalse]")), ToolInput(tag="in_m_threshold", input_type=Int(optional=True), prefix="--m_threshold", doc=InputDocumentation(doc="Define the M threshold of percentile for training TMM.\n[default: 80]")), ToolInput(tag="in_a_threshold", input_type=Int(optional=True), prefix="--a_threshold", doc=InputDocumentation(doc="Define the A threshold of percentile for training TMM.\n[default: 95]")), ToolInput(tag="in_rmd_up", input_type=Boolean(optional=True), prefix="--rmdup", doc=InputDocumentation(doc="Remove the duplicate reads [default: False]")), ToolInput(tag="in_created_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-m, --merge           Merge peaks which have a distance less than the"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Store files in output directory. [default: none]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rgt_Thor_V0_1_0().translate("wdl", allow_empty_container=True)

