from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Rgt_Tdf_Get_Tts_V0_1_0 = CommandToolBuilder(tool="rgt_TDF_get_TTS", base_command=["rgt-TDF", "get_TTS"], inputs=[ToolInput(tag="in_input_bed_file", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Input BED file of the target regions")), ToolInput(tag="in_tts", input_type=File(optional=True), prefix="-tts", doc=InputDocumentation(doc="Output BED file of the TTSs")), ToolInput(tag="in_input_fasta_file", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Input FASTA file of the RNA")), ToolInput(tag="in_organism", input_type=Boolean(optional=True), prefix="-organism", doc=InputDocumentation(doc="Define the organism")), ToolInput(tag="in_define_minimum_length", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[Triplexes] Define the minimum length of triplex (default: 20)")), ToolInput(tag="in_set_maximal_errorrate", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[Triplexes] Set the maximal error-rate in % tolerated\n(default: 20)")), ToolInput(tag="in_sets_tolerated_number", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[Triplexes] Sets the tolerated number of consecutive errors\nwith respect to the canonical triplex rules as such were found\nto greatly destabilize triplexes in vitro (default: 2)")), ToolInput(tag="in_fr", input_type=Boolean(optional=True), prefix="-fr", doc=InputDocumentation(doc="[Triplexes] Activates the filtering of low complexity regions\nand repeats in the sequence data (default: off)")), ToolInput(tag="in_fm", input_type=Boolean(optional=True), prefix="-fm", doc=InputDocumentation(doc="[Triplexes] Method to quickly discard non-hits (default:\n0).'0' = greedy approach; '1' = q-gram filtering.")), ToolInput(tag="in_of", input_type=Boolean(optional=True), prefix="-of", doc=InputDocumentation(doc="[Triplexes] Define output formats of Triplexes (default: 1)")), ToolInput(tag="in_mf", input_type=Boolean(optional=True), prefix="-mf", doc=InputDocumentation(doc="[Triplexes] Merge overlapping features into a cluster and\nreport the spanning region.")), ToolInput(tag="in_rm", input_type=Boolean(optional=True), prefix="-rm", doc=InputDocumentation(doc="[Triplexes] Set the multiprocessing"))], outputs=[ToolOutput(tag="out_tts", output_type=File(optional=True), selector=InputSelector(input_to_select="in_tts", type_hint=File()), doc=OutputDocumentation(doc="Output BED file of the TTSs"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rgt_Tdf_Get_Tts_V0_1_0().translate("wdl", allow_empty_container=True)

