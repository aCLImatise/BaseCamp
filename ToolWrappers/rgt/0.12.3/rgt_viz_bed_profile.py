from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Rgt_Viz_Bed_Profile_V0_1_0 = CommandToolBuilder(tool="rgt_viz_bed_profile", base_command=["rgt-viz", "bed_profile"], inputs=[ToolInput(tag="in_input_experimental_matrix", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Input experimental matrix or Input BED file or Input\ndirectory which contains BED files")), ToolInput(tag="in_directory_name_output", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="The directory name for the output files. For example,\nproject name. (default: None)")), ToolInput(tag="in_title_shown_default", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="The title shown on the top of the plot and also the folder\nname. (default: bed_profile)")), ToolInput(tag="in_organism", input_type=Boolean(optional=True), prefix="-organism", doc=InputDocumentation(doc="Define the organism. (default: None)")), ToolInput(tag="in_biotype", input_type=Boolean(optional=True), prefix="-biotype", doc=InputDocumentation(doc="Define the directory for biotype BED files.")), ToolInput(tag="in_repeats", input_type=Boolean(optional=True), prefix="-repeats", doc=InputDocumentation(doc="Define the directory for repeats BED files.")), ToolInput(tag="in_gen_posi", input_type=Boolean(optional=True), prefix="-genposi", doc=InputDocumentation(doc="Define the directory for the generic position BED files.\n(exons, introns, and intergenic regions)")), ToolInput(tag="in_labels", input_type=Boolean(optional=True), prefix="-labels", doc=InputDocumentation(doc="Define the labels for more BED sets")), ToolInput(tag="in_sources", input_type=Boolean(optional=True), prefix="-sources", doc=InputDocumentation(doc="Define the directories for more BED sets corresponding to\nthe labels")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="-strand", doc=InputDocumentation(doc="Define whether to perform strand-specific comparison for\neach reference corresponding to the labels (T or F)")), ToolInput(tag="in_other", input_type=Boolean(optional=True), prefix="-other", doc=InputDocumentation(doc="Define whether to count 'else' for each reference\ncorresponding to the labels (T or F)")), ToolInput(tag="in_background", input_type=Boolean(optional=True), prefix="-background", doc=InputDocumentation(doc="Add the background to the first row of the figures (T or F)")), ToolInput(tag="in_coverage", input_type=Boolean(optional=True), prefix="-coverage", doc=InputDocumentation(doc="Calculate the overlapping region by coverage in bp instead\nof simple counting")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="-test", doc=InputDocumentation(doc="test script"))], outputs=[ToolOutput(tag="out_directory_name_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_directory_name_output", type_hint=File()), doc=OutputDocumentation(doc="The directory name for the output files. For example,\nproject name. (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rgt_Viz_Bed_Profile_V0_1_0().translate("wdl", allow_empty_container=True)

