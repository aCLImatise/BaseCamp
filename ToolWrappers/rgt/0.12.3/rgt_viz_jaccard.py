from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String, Int

Rgt_Viz_Jaccard_V0_1_0 = CommandToolBuilder(tool="rgt_viz_jaccard", base_command=["rgt-viz", "jaccard"], inputs=[ToolInput(tag="in_directory_name_output", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="The directory name for the output files. For example,\nproject name. (default: None)")), ToolInput(tag="in_file_name_reference", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="The file name of the reference Experimental Matrix.\nMultiple references are acceptable. (default: None)")), ToolInput(tag="in_file_name_query", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="The file name of the query Experimental Matrix. Multiple\nqueries are acceptable. (default: None)")), ToolInput(tag="in_title_shown_thefolder", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="The title shown on the top of the plot and also the\nfolder name. (default: jaccard_test)")), ToolInput(tag="in_rt", input_type=Boolean(optional=True), prefix="-rt", doc=InputDocumentation(doc="Define how many times to run the randomization.\n(default: 500)")), ToolInput(tag="in_group_data_none", input_type=String(optional=True), prefix="-g", doc=InputDocumentation(doc="Group the data by any optional column (for example,\n'cell') of experimental matrix, or None. (default: None)")), ToolInput(tag="in_color_data_optional", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="Color the data by any optional column (for example,\n'cell') of experimental matrix, or None. (default:\nregions)")), ToolInput(tag="in_organism", input_type=Int(optional=True), prefix="-organism", doc=InputDocumentation(doc="Define the organism. (default: hg19)")), ToolInput(tag="in_n_log", input_type=Boolean(optional=True), prefix="-nlog", doc=InputDocumentation(doc="Set y axis of the plot not in log scale. (default: True)")), ToolInput(tag="in_color", input_type=Boolean(optional=True), prefix="-color", doc=InputDocumentation(doc="Define the specific colors with the given column 'color'\nin experimental matrix. The color should be in the\nformat of matplotlib.colors. For example, 'r' for red,\n'b' for blue, or '(100, 35, 138)' for RGB. (default:\nFalse)")), ToolInput(tag="in_show", input_type=Boolean(optional=True), prefix="-show", doc=InputDocumentation(doc="Show the figure in the screen. (default: False)")), ToolInput(tag="in_table", input_type=Boolean(optional=True), prefix="-table", doc=InputDocumentation(doc="Store the tables of the figure in text format. (default:\nFalse)")), ToolInput(tag="in_pw", input_type=Boolean(optional=True), prefix="-pw", doc=InputDocumentation(doc="Define the width of single panel. (default: 3)")), ToolInput(tag="in_ph", input_type=Boolean(optional=True), prefix="-ph", doc=InputDocumentation(doc="Define the height of single panel. (default: 3)"))], outputs=[ToolOutput(tag="out_directory_name_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_directory_name_output", type_hint=File()), doc=OutputDocumentation(doc="The directory name for the output files. For example,\nproject name. (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rgt_Viz_Jaccard_V0_1_0().translate("wdl", allow_empty_container=True)

