from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Htsget_V0_1_0 = CommandToolBuilder(tool="htsget", base_command=["htsget"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase verbosity.")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="The format of data to request.")), ToolInput(tag="in_reference_name", input_type=Int(optional=True), prefix="--reference-name", doc=InputDocumentation(doc="The reference sequence name, for example 'chr1', '1',\nor 'chrX'. If unspecified, all data is returned.")), ToolInput(tag="in_reference_md_five", input_type=Int(optional=True), prefix="--reference-md5", doc=InputDocumentation(doc="The MD5 checksum uniquely representing the requested\nreference sequence as a lower-case hexadecimal string,\ncalculated as the MD5 of the upper-case sequence\nexcluding all whitespace characters.")), ToolInput(tag="in_start", input_type=Int(optional=True), prefix="--start", doc=InputDocumentation(doc="The start position of the range on the reference,\n0-based, inclusive. If specified, reference-name or\nreference-md5 must also be specified.")), ToolInput(tag="in_end", input_type=Int(optional=True), prefix="--end", doc=InputDocumentation(doc="The end position of the range on the reference,\n0-based exclusive. If specified, reference-name or\nreference-md5 must also be specified.")), ToolInput(tag="in_output", input_type=Int(optional=True), prefix="--output", doc=InputDocumentation(doc="The output file path. Defaults to stdout. If output is\nto stdout, the max-retries is set to zero, since\nretries are not supported when writing to this stream")), ToolInput(tag="in_max_retries", input_type=Int(optional=True), prefix="--max-retries", doc=InputDocumentation(doc="The maximum number of times to retry a failed\ntransfer.")), ToolInput(tag="in_retry_wait", input_type=Int(optional=True), prefix="--retry-wait", doc=InputDocumentation(doc="The number of seconds to wait before retrying a failed\ntransfer.")), ToolInput(tag="in_timeout", input_type=String(optional=True), prefix="--timeout", doc=InputDocumentation(doc="The socket timeout for transfers.")), ToolInput(tag="in_bearer_token", input_type=Int(optional=True), prefix="--bearer-token", doc=InputDocumentation(doc="The OAuth2 bearer token to present to the htsget\nticket server.\n")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Htsget_V0_1_0().translate("wdl", allow_empty_container=True)

