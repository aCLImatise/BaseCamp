from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Malt_Run_V0_1_0 = CommandToolBuilder(tool="malt_run", base_command=["malt-run"], inputs=[ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="--mode", doc=InputDocumentation(doc="[string]                  Program mode. Mandatory option. Legal values: Unknown, BlastN, BlastP, BlastX, Classifier")), ToolInput(tag="in_alignment_type", input_type=Boolean(optional=True), prefix="--alignmentType", doc=InputDocumentation(doc="[string]        Type of alignment to be performed. Default value: Local. Legal values: Local, SemiGlobal")), ToolInput(tag="in_in_file", input_type=Boolean(optional=True), prefix="--inFile", doc=InputDocumentation(doc="[string(s)]             Input file(s) containing queries in FastA or FastQ format (gzip or zip ok). Mandatory option.")), ToolInput(tag="in_index", input_type=Boolean(optional=True), prefix="--index", doc=InputDocumentation(doc="[string]                 Index directory as generated by MaltBuild. Mandatory option.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="[string(s)]             Output RMA file(s) or directory.")), ToolInput(tag="in_include_unaligned", input_type=File(optional=True), prefix="--includeUnaligned", doc=InputDocumentation(doc="Include unaligned queries in RMA output file. Default value: false.")), ToolInput(tag="in_alignments", input_type=File(optional=True), prefix="--alignments", doc=InputDocumentation(doc="[string(s)]         Output alignment file(s) or directory or STDOUT.")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="[string]                Alignment output format. Default value: SAM. Legal values: SAM, Tab, Text")), ToolInput(tag="in_gzip_alignments", input_type=Boolean(optional=True), prefix="--gzipAlignments", doc=InputDocumentation(doc="Compress alignments using gzip. Default value: true.")), ToolInput(tag="in_sam_soft_clip", input_type=Boolean(optional=True), prefix="--samSoftClip", doc=InputDocumentation(doc="Use soft clipping in SAM files (BlastN mode only). Default value: false.")), ToolInput(tag="in_sparse_sam", input_type=Boolean(optional=True), prefix="--sparseSAM", doc=InputDocumentation(doc="Produce sparse SAM format (smaller, faster, but only suitable for MEGAN). Default value: false.")), ToolInput(tag="in_out_aligned", input_type=File(optional=True), prefix="--outAligned", doc=InputDocumentation(doc="[string(s)]        Aligned reads output file(s) or directory or STDOUT.")), ToolInput(tag="in_gzip_aligned", input_type=Boolean(optional=True), prefix="--gzipAligned", doc=InputDocumentation(doc="Compress aligned reads output using gzip. Default value: true.")), ToolInput(tag="in_out_unaligned", input_type=File(optional=True), prefix="--outUnaligned", doc=InputDocumentation(doc="[string(s)]      Unaligned reads output file(s) or directory or STDOUT.")), ToolInput(tag="in_gzip_unaligned", input_type=Boolean(optional=True), prefix="--gzipUnaligned", doc=InputDocumentation(doc="Compress unaligned reads output using gzip. Default value: true.")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--numThreads", doc=InputDocumentation(doc="[number]            Number of worker threads. Default value: 8.")), ToolInput(tag="in_memory_mode", input_type=Boolean(optional=True), prefix="--memoryMode", doc=InputDocumentation(doc="[string]          Memory mode. Default value: load. Legal values: load, page, map")), ToolInput(tag="in_max_tables", input_type=Boolean(optional=True), prefix="--maxTables", doc=InputDocumentation(doc="[number]            Set the maximum number of seed tables to use (0=all). Default value: 0.")), ToolInput(tag="in_replicate_query_cache", input_type=Boolean(optional=True), prefix="--replicateQueryCache", doc=InputDocumentation(doc="Cache results for replicated queries. Default value: false.")), ToolInput(tag="in_min_bit_score", input_type=Boolean(optional=True), prefix="--minBitScore", doc=InputDocumentation(doc="[number]           Minimum bit score. Default value: 50.0.")), ToolInput(tag="in_max_expected", input_type=Boolean(optional=True), prefix="--maxExpected", doc=InputDocumentation(doc="[number]           Maximum expected score. Default value: 1.0.")), ToolInput(tag="in_min_percent_identity", input_type=Boolean(optional=True), prefix="--minPercentIdentity", doc=InputDocumentation(doc="[number]   Minimum percent identity. Default value: 0.0.")), ToolInput(tag="in_max_alignments_per_query", input_type=Boolean(optional=True), prefix="--maxAlignmentsPerQuery", doc=InputDocumentation(doc="[number]   Maximum number of alignments per query. Default value: 25.")), ToolInput(tag="in_max_alignments_per_ref", input_type=Boolean(optional=True), prefix="--maxAlignmentsPerRef", doc=InputDocumentation(doc="[number]   Maximum number of (non-overlapping) alignments per reference. Default value: 1.")), ToolInput(tag="in_match_score", input_type=Boolean(optional=True), prefix="--matchScore", doc=InputDocumentation(doc="[number]           Match score. Default value: 2.")), ToolInput(tag="in_mismatch_score", input_type=Boolean(optional=True), prefix="--mismatchScore", doc=InputDocumentation(doc="[number]        Mismatch score. Default value: -3.")), ToolInput(tag="in_set_lambda", input_type=Boolean(optional=True), prefix="--setLambda", doc=InputDocumentation(doc="[number]            Parameter Lambda for BLASTN statistics. Default value: 0.625.")), ToolInput(tag="in_set_k", input_type=Boolean(optional=True), prefix="--setK", doc=InputDocumentation(doc="[number]                  Parameter K for BLASTN statistics. Default value: 0.41.")), ToolInput(tag="in_submatrix", input_type=Boolean(optional=True), prefix="--subMatrix", doc=InputDocumentation(doc="[string]           Protein substitution matrix to use. Default value: BLOSUM62. Legal values: BLOSUM45, BLOSUM50, BLOSUM62, BLOSUM80, BLOSUM90")), ToolInput(tag="in_forward_only", input_type=Boolean(optional=True), prefix="--forwardOnly", doc=InputDocumentation(doc="Align query forward strand only. Default value: false.")), ToolInput(tag="in_reverse_only", input_type=Boolean(optional=True), prefix="--reverseOnly", doc=InputDocumentation(doc="Align query reverse strand only. Default value: false.")), ToolInput(tag="in_top_percent", input_type=Boolean(optional=True), prefix="--topPercent", doc=InputDocumentation(doc="[number]          Top percent value for LCA algorithm. Default value: 10.0.")), ToolInput(tag="in_min_support_percent", input_type=Boolean(optional=True), prefix="--minSupportPercent", doc=InputDocumentation(doc="[number]   Min support value for LCA algorithm as a percent of assigned reads (0==off). Default value: 0.001.")), ToolInput(tag="in_min_support", input_type=Boolean(optional=True), prefix="--minSupport", doc=InputDocumentation(doc="[number]          Min support value for LCA algorithm (overrides --minSupportPercent). Default value: 0.")), ToolInput(tag="in_min_percent_identity_lca", input_type=Boolean(optional=True), prefix="--minPercentIdentityLCA", doc=InputDocumentation(doc="[number]   Min percent identity used by LCA algorithm. Default value: 0.0.")), ToolInput(tag="in_use_min_percent_identity_filter_lca", input_type=Boolean(optional=True), prefix="--useMinPercentIdentityFilterLCA", doc=InputDocumentation(doc="Use percent identity assignment filter. Default value: false.")), ToolInput(tag="in_weighted_lca", input_type=Boolean(optional=True), prefix="--weightedLCA", doc=InputDocumentation(doc="Use the weighted LCA for taxonomic assignment. Default value: false.")), ToolInput(tag="in_lca_coverage_percent", input_type=Boolean(optional=True), prefix="--lcaCoveragePercent", doc=InputDocumentation(doc="[number]   Set the percent for the LCA to cover. Default value: 100.0.")), ToolInput(tag="in_magnitudes", input_type=Boolean(optional=True), prefix="--magnitudes", doc=InputDocumentation(doc="Reads have magnitudes (to be used in taxonomic or functional analysis). Default value: false.")), ToolInput(tag="in_con_file", input_type=Boolean(optional=True), prefix="--conFile", doc=InputDocumentation(doc="[string]              File of contaminant taxa (one Id or name per line).")), ToolInput(tag="in_max_seeds_per_frame", input_type=Boolean(optional=True), prefix="--maxSeedsPerFrame", doc=InputDocumentation(doc="[number]    Maximum number of seed matches per offset per read frame. Default value: 100.")), ToolInput(tag="in_max_seeds_per_ref", input_type=Boolean(optional=True), prefix="--maxSeedsPerRef", doc=InputDocumentation(doc="[number]      Maximum number of seed matches per read and reference. Default value: 20.")), ToolInput(tag="in_seed_shift", input_type=Boolean(optional=True), prefix="--seedShift", doc=InputDocumentation(doc="[number]            Seed shift. Default value: 1.")), ToolInput(tag="in_gap_open", input_type=Boolean(optional=True), prefix="--gapOpen", doc=InputDocumentation(doc="[number]              Gap open penalty. Default value: 11.")), ToolInput(tag="in_gap_extend", input_type=Boolean(optional=True), prefix="--gapExtend", doc=InputDocumentation(doc="[number]            Gap extension penalty. Default value: 1.")), ToolInput(tag="in_band", input_type=Boolean(optional=True), prefix="--band", doc=InputDocumentation(doc="[number]                 Band width/2 for banded alignment. Default value: 4.")), ToolInput(tag="in_replicate_query_cache_bits", input_type=Boolean(optional=True), prefix="--replicateQueryCacheBits", doc=InputDocumentation(doc="[number]   Bits used for caching replicate queries (size is then 2^bits). Default value: 20.")), ToolInput(tag="in_x_part", input_type=Boolean(optional=True), prefix="--xPart", doc=InputDocumentation(doc="Show part of the table in human readable form for debugging. Default value: false.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Echo commandline options and be verbose. Default value: false."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="[string(s)]             Output RMA file(s) or directory.")), ToolOutput(tag="out_include_unaligned", output_type=File(optional=True), selector=InputSelector(input_to_select="in_include_unaligned", type_hint=File()), doc=OutputDocumentation(doc="Include unaligned queries in RMA output file. Default value: false.")), ToolOutput(tag="out_alignments", output_type=File(optional=True), selector=InputSelector(input_to_select="in_alignments", type_hint=File()), doc=OutputDocumentation(doc="[string(s)]         Output alignment file(s) or directory or STDOUT.")), ToolOutput(tag="out_out_aligned", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_aligned", type_hint=File()), doc=OutputDocumentation(doc="[string(s)]        Aligned reads output file(s) or directory or STDOUT.")), ToolOutput(tag="out_out_unaligned", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_unaligned", type_hint=File()), doc=OutputDocumentation(doc="[string(s)]      Unaligned reads output file(s) or directory or STDOUT."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Malt_Run_V0_1_0().translate("wdl", allow_empty_container=True)

