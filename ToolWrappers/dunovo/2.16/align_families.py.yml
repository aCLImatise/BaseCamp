!Command
command:
- align-families.py
positional:
- !Positional
  optional: false
  position: 0
  name: read-families.tsv
  description: "The input reads, sorted into families. One line per read pair, 8 tab-delimited\
    \ columns:\n1. canonical barcode\n2. barcode order (\"ab\" for alpha+beta, \"\
    ba\" for beta-alpha)\n3. read 1 name\n4. read 1 sequence\n5. read 1 quality scores\n\
    6. read 2 name\n7. read 2 sequence\n8. read 2 quality scores"
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --aligner
  description: 'The multiple sequence aligner to use. Default: kalign'
  args: !ChoiceFlagArg
    choices: !!set
      kalign:
      mafft:
      dummy:
- !Flag
  optional: true
  synonyms:
  - -I
  - --no-check-ids
  description: Don't check to make sure read pairs have identical ids. By default,
    if this encounters a pair of reads in families.tsv with ids that aren't identical
    (minus an ending /1 or /2), it will throw an error.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --processes
  description: 'Number of worker subprocesses to use. If 0, no subprocesses will be
    started and everything will be done inside one process. Give "auto" to use as
    many processes as there are CPU cores. Default: 0.'
  args: !SimpleFlagArg
    name: PROCESSES
- !Flag
  optional: true
  synonyms:
  - --queue-size
  description: 'How long to go accumulating responses from worker subprocesses before
    dealing with all of them. Default: 8 * the number of worker --processes.'
  args: !SimpleFlagArg
    name: QUEUE_SIZE
- !Flag
  optional: true
  synonyms:
  - --phone-home
  description: Report helpful usage data to the developer, to better understand the
    use cases and performance of the tool. The only data which will be recorded is
    the name and version of the tool, the size of the input data, the time and memory
    taken to process it, and the IP address of the machine running it. Also, if the
    script fails, it will report the name of the exception thrown and the line of
    code it occurred in. No filenames are sent, and the only parameters reported are
    --aligner, --processes, and --queue-size, which are necessary to evaluate performance.
    All the reporting and recording code is available at https://github.com/NickSto/ET.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --galaxy
  description: Tell the script it's running on Galaxy. Currently this only affects
    data reported when phoning home.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --test
  description: If reporting usage data, mark this as a test run.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  - --log-file
  description: 'Print log messages to this file instead of to stderr. NOTE: Will overwrite
    the file.'
  args: !SimpleFlagArg
    name: LOG_FILE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Print the version number and exit.
  args: !EmptyFlagArg {}
help_text: "usage: $ align-families.py [options] families.tsv > families.msa.tsv\n\
  \       $ cat families.tsv | align-families.py [options] > families.msa.tsv\n\n\
  Read in sorted FASTQ data and do multiple sequence alignments of each family.\n\n\
  positional arguments:\n  read-families.tsv     The input reads, sorted into families.\
  \ One line per read pair, 8 tab-delimited columns:\n                        1. canonical\
  \ barcode\n                        2. barcode order (\"ab\" for alpha+beta, \"ba\"\
  \ for beta-alpha)\n                        3. read 1 name\n                    \
  \    4. read 1 sequence\n                        5. read 1 quality scores\n    \
  \                    6. read 2 name\n                        7. read 2 sequence\n\
  \                        8. read 2 quality scores\n\noptional arguments:\n  -h,\
  \ --help            show this help message and exit\n  -a {mafft,kalign,dummy},\
  \ --aligner {mafft,kalign,dummy}\n                        The multiple sequence\
  \ aligner to use. Default: kalign\n  -I, --no-check-ids    Don't check to make sure\
  \ read pairs have identical ids. By default, if this encounters a pair of reads\
  \ in families.tsv with ids that aren't identical (minus an ending /1 or /2), it\
  \ will throw an error.\n  -p PROCESSES, --processes PROCESSES\n                \
  \        Number of worker subprocesses to use. If 0, no subprocesses will be started\
  \ and everything will be done inside one process. Give \"auto\" to use as many processes\
  \ as there are CPU cores. Default: 0.\n  --queue-size QUEUE_SIZE\n             \
  \           How long to go accumulating responses from worker subprocesses before\
  \ dealing with all of them. Default: 8 * the number of worker --processes.\n  --phone-home\
  \          Report helpful usage data to the developer, to better understand the\
  \ use cases and performance of the tool. The only data which will be recorded is\
  \ the name and version of the tool, the size of the input data, the time and memory\
  \ taken to process it, and the IP address of the machine running it. Also, if the\
  \ script fails, it will report the name of the exception thrown and the line of\
  \ code it occurred in. No filenames are sent, and the only parameters reported are\
  \ --aligner, --processes, and --queue-size, which are necessary to evaluate performance.\
  \ All the reporting and recording code is available at https://github.com/NickSto/ET.\n\
  \  --galaxy              Tell the script it's running on Galaxy. Currently this\
  \ only affects data reported when phoning home.\n  --test                If reporting\
  \ usage data, mark this as a test run.\n  --version             Print the version\
  \ number and exit.\n  -L LOG_FILE, --log-file LOG_FILE\n                       \
  \ Print log messages to this file instead of to stderr. NOTE: Will overwrite the\
  \ file.\n  -q, --quiet\n  -v, --verbose\n  -D, --debug\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/dunovo:2.16--py39h38f01e4_0
