from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, Boolean, String

Consensusfixer_V0_1_0 = CommandToolBuilder(tool="ConsensusFixer", base_command=["ConsensusFixer"], inputs=[ToolInput(tag="in_alignment_file_required", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc=": Alignment file in BAM format (required).")), ToolInput(tag="in_reference_file_fasta", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc=": Reference file in FASTA format (optional).")), ToolInput(tag="in_path_output_directory", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": Path to the output directory (default: current directory).")), ToolInput(tag="in_mcc", input_type=Int(optional=True), prefix="-mcc", doc=InputDocumentation(doc=": Minimal coverage to call consensus.")), ToolInput(tag="in_mic", input_type=Int(optional=True), prefix="-mic", doc=InputDocumentation(doc=": Minimal coverage to call insertion.")), ToolInput(tag="in_plurality", input_type=Float(optional=True), prefix="-plurality", doc=InputDocumentation(doc=": Minimal relative position-wise base occurence to integrate into wobble (default: 0.05).")), ToolInput(tag="in_plurality_n", input_type=Float(optional=True), prefix="-pluralityN", doc=InputDocumentation(doc=": Minimal relative position-wise gap occurence call N (default: 0.5).")), ToolInput(tag="in_majority_vote_respecting", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": Majority vote respecting pluralityN first, otherwise allow wobbles.")), ToolInput(tag="in_only_allow_frame", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": Only allow in frame insertions in the consensus.")), ToolInput(tag="in_remove_gaps_are", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": Remove gaps if they are >= pluralityN.")), ToolInput(tag="in_mi", input_type=Boolean(optional=True), prefix="-mi", doc=InputDocumentation(doc=": Only the insertion with the maximum frequency greater than mic is incorporated.")), ToolInput(tag="in_pi", input_type=Boolean(optional=True), prefix="-pi", doc=InputDocumentation(doc=": Progressive insertion mode, respecting mic.")), ToolInput(tag="in_pis", input_type=Int(optional=True), prefix="-pis", doc=InputDocumentation(doc=": Window size for progressive insertion mode (default: 300).")), ToolInput(tag="in_dash", input_type=Boolean(optional=True), prefix="-dash", doc=InputDocumentation(doc=": Use '-' instead of bases from the reference.")), ToolInput(tag="in_single_core_mode", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": Single core mode with low memory footprint.")), ToolInput(tag="in_xx", input_type=Boolean(optional=True), prefix="-XX", doc=InputDocumentation(doc=":NewRatio=9        : Reduces the memory consumption (RECOMMENDED to use).")), ToolInput(tag="in_x_mx_one_zero_g", input_type=Boolean(optional=True), prefix="-Xmx10G", doc=InputDocumentation(doc=": Increase heap space.")), ToolInput(tag="in_jar", input_type=String(optional=True), prefix="-jar", doc=InputDocumentation(doc="")), ToolInput(tag="in_java", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_options_dot_dot_dot", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_path_output_directory", output_type=File(optional=True), selector=InputSelector(input_to_select="in_path_output_directory", type_hint=File()), doc=OutputDocumentation(doc=": Path to the output directory (default: current directory)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Consensusfixer_V0_1_0().translate("wdl", allow_empty_container=True)

