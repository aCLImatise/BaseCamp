from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Swan_V0_1_0 = CommandToolBuilder(tool="swan", base_command=["swan"], inputs=[ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="output file name (STDOUT)")), ToolInput(tag="in_fasta_file_reference", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="fasta file for reference")), ToolInput(tag="in_fasta_file_query", input_type=File(optional=True), prefix="-q", doc=InputDocumentation(doc="fasta file for query")), ToolInput(tag="in_rs", input_type=String(optional=True), prefix="-rs", doc=InputDocumentation(doc="reference string to align (displayed on top)")), ToolInput(tag="in_qs", input_type=String(optional=True), prefix="-qs", doc=InputDocumentation(doc="query string to align (displayed below)")), ToolInput(tag="in_q_len", input_type=Int(optional=True), prefix="-q-len", doc=InputDocumentation(doc="only consider sequences at least this long")), ToolInput(tag="in_r_len", input_type=Int(optional=True), prefix="-r-len", doc=InputDocumentation(doc="only consider sequences at least this long")), ToolInput(tag="in_q_string", input_type=String(optional=True), prefix="-q-string", doc=InputDocumentation(doc="e.g. hsa, mmu; only matching identifiers are considered")), ToolInput(tag="in_r_string", input_type=String(optional=True), prefix="-r-string", doc=InputDocumentation(doc="e.g. hsa, mmu; only matching identifiers are considered")), ToolInput(tag="in_identity", input_type=Int(optional=True), prefix="-identity", doc=InputDocumentation(doc="require matches with at least <int> identity (0-100)")), ToolInput(tag="in_index", input_type=Int(optional=True), prefix="-index", doc=InputDocumentation(doc="k-mer size to build index on (suggest 8 to 12; filters on k-mer match!)")), ToolInput(tag="in_n_seeds", input_type=Int(optional=True), prefix="-n-seeds", doc=InputDocumentation(doc="require <int> independent k-mer hits for a match to be considered (overlap not allowed)")), ToolInput(tag="in_w_seeds", input_type=Int(optional=True), prefix="-w-seeds", doc=InputDocumentation(doc="require two seeds spanning at least <int> bases (overlap allowed)")), ToolInput(tag="in_grep", input_type=Boolean(optional=True), prefix="--grep", doc=InputDocumentation(doc="output sequences that match the reference (requires -identity)")), ToolInput(tag="in_grep_v", input_type=Boolean(optional=True), prefix="--grepv", doc=InputDocumentation(doc="output sequences (see -grepv-o) that do not match the reference (requires -identity)")), ToolInput(tag="in_grep_v_o", input_type=File(optional=True), prefix="-grepv-o", doc=InputDocumentation(doc="output file for non-matching sequences")), ToolInput(tag="in_swp", input_type=String(optional=True), prefix="-swp", doc=InputDocumentation(doc="/S/G        match/substitution/gap : gain/cost/cost")), ToolInput(tag="in_l_srl", input_type=String(optional=True), prefix="-lsrl", doc=InputDocumentation(doc="/R         reference/left-skip / query/right-limit (adapter specific)")), ToolInput(tag="in_no_indel", input_type=Boolean(optional=True), prefix="--noindel", doc=InputDocumentation(doc="do not consider indels while aligning")), ToolInput(tag="in_skip_same_name", input_type=Boolean(optional=True), prefix="--skip-same-name", doc=InputDocumentation(doc="do not compare sequences with identical names")), ToolInput(tag="in_matrix", input_type=Boolean(optional=True), prefix="--matrix", doc=InputDocumentation(doc="dump alignment matrix")), ToolInput(tag="in_key_value", input_type=Boolean(optional=True), prefix="--key-value", doc=InputDocumentation(doc="output easily parseable line-based key-value output")), ToolInput(tag="in_excise", input_type=Boolean(optional=True), prefix="--excise", doc=InputDocumentation(doc="excise the aligned part when printing")), ToolInput(tag="in_nw", input_type=Boolean(optional=True), prefix="--nw", doc=InputDocumentation(doc="Needleman-Wunsch fill and trace (EXPERIMENTAL)")), ToolInput(tag="in_nw_fill", input_type=Boolean(optional=True), prefix="--nw-fill", doc=InputDocumentation(doc="Needleman-Wunsch fill (EXPERIMENTAL)")), ToolInput(tag="in_nw_trace", input_type=Boolean(optional=True), prefix="--nw-trace", doc=InputDocumentation(doc="Needleman-Wunsch trace (EXPERIMENTAL)")), ToolInput(tag="in_no_trim_left", input_type=Boolean(optional=True), prefix="--no-trimleft", doc=InputDocumentation(doc="Do not trim alignment")), ToolInput(tag="in_no_trim_right", input_type=Boolean(optional=True), prefix="--no-trimright", doc=InputDocumentation(doc="Do not trim alignment")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Output diagnostic information")), ToolInput(tag="in_do", input_type=Int(optional=True), prefix="-do", doc=InputDocumentation(doc="process the top <int> entries from the reference file")), ToolInput(tag="in_cell", input_type=Int(optional=True), prefix="-cell", doc=InputDocumentation(doc="align from cell <int>"))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="output file name (STDOUT)")), ToolOutput(tag="out_grep_v_o", output_type=File(optional=True), selector=InputSelector(input_to_select="in_grep_v_o", type_hint=File()), doc=OutputDocumentation(doc="output file for non-matching sequences"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Swan_V0_1_0().translate("wdl", allow_empty_container=True)

