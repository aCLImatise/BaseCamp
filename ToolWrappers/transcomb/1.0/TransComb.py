from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, Boolean

Transcomb_V0_1_0 = CommandToolBuilder(tool="TransComb", base_command=["TransComb"], inputs=[ToolInput(tag="in_bam_file_produced", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc=": BAM file produced by Tophat or Tophat2.")), ToolInput(tag="in_strandspecific_rnaseq_reads", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc=": Strand-specific RNA-Seq reads orientation.\n1) Use <unstranded> to indicate RNA-seq reads are non-strand-specific.\n2) Use <first> to indicate fr-first-stranded RNA-seq reads.\n3) Use <second> to indicate fr-second-stranded RNA-seq reads.")), ToolInput(tag="in_output_pathfile_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": Output path/file name of the assembled transcripts GTF, default: ./TransComb.gtf")), ToolInput(tag="in_minimum_expression_level", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc=": Minimum expression level estimated by abundance analysis for output, default: 0.")), ToolInput(tag="in_minimum_assembled_transcript", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc=": Minimum assembled transcript length, default: 500.")), ToolInput(tag="in_minimum_junction_coverage", input_type=Float(optional=True), prefix="-d", doc=InputDocumentation(doc=": Minimum junction coverage fraction by maximum junction coverage, default: 0.02.")), ToolInput(tag="in_minimum_farction_unbalanced", input_type=Float(optional=True), prefix="-D", doc=InputDocumentation(doc=": Minimum farction of unbalanced junction, default: 0.1.")), ToolInput(tag="in_minimum_gene_length", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc=": Minimum  gene length, default: 200.")), ToolInput(tag="in_disable_trimming_predicted", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": Disable trimming of predicted transcripts based on coverage, default: coverage trimming is enabled.")), ToolInput(tag="in_minimum_gap_length", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc=": Minimum gap length between two exons, default: 200.")), ToolInput(tag="in_minimum_seed_coverage", input_type=Int(optional=True), prefix="-F", doc=InputDocumentation(doc=": Minimum seed coverage used for generate a new transcript, default: 0.")), ToolInput(tag="in_minimum_anchor_length", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc=": Minimum anchor length for junctions, default: 1.")), ToolInput(tag="in_fraction_exon_allowed", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc=": Fraction of exon allowed to be covered by multi-hit reads, default: 1.")), ToolInput(tag="in_report_current_version", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": Report the current version of TransComb and exit."))], outputs=[ToolOutput(tag="out_output_pathfile_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_pathfile_name", type_hint=File()), doc=OutputDocumentation(doc=": Output path/file name of the assembled transcripts GTF, default: ./TransComb.gtf"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Transcomb_V0_1_0().translate("wdl", allow_empty_container=True)

