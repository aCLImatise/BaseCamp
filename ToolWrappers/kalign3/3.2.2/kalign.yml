!Command
command:
- kalign
positional: []
named:
- !Flag
  description: ': Output format. [Fasta]'
  synonyms:
  - --format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': Reformat existing alignment. [NA]'
  synonyms:
  - --reformat
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: out aln
  optional: true
- !Flag
  description: ''
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: seq file
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag: !Flag
  description: '(-V/-v)  : Prints version. [NA]'
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "\nKalign (3.2.2)\n\nCopyright (C) 2006,2019,2020 Timo Lassmann\n\nThis\
  \ program comes with ABSOLUTELY NO WARRANTY; for details type:\n`kalign -showw'.\n\
  This is free software, and you are welcome to redistribute it\nunder certain conditions;\
  \ consult the COPYING file for details.\n\nPlease cite:\n  Lassmann, Timo.\n  \"\
  Kalign 3: multiple sequence alignment of large data sets.\"\n  Bioinformatics (2019)\
  \ \n  https://doi.org/10.1093/bioinformatics/btz795\n\n\nWARNING: AVX2 instruction\
  \ set not found!\n         Kalign will not run optimally.\n\n\nUsage: kalign  -i\
  \ <seq file> -o <out aln> \n\nOptions:\n\n   --format           : Output format.\
  \ [Fasta]\n   --reformat         : Reformat existing alignment. [NA]\n   --version\
  \ (-V/-v)  : Prints version. [NA]\n\nExamples:\n\nPassing sequences via stdin:\n\
  \n   cat input.fa | kalign -f fasta > out.afa\n\nCombining multiple input files:\n\
  \n   kalign seqsA.fa seqsB.fa seqsC.fa -f fasta > combined.afa\n\n"
generated_using:
- --help
