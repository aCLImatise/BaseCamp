from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean, Float, Directory

Run_Em_Py_V0_1_0 = CommandToolBuilder(tool="run_em.py", base_command=["run_em.py"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Input FASTA file")), ToolInput(tag="in_input_two", input_type=Int(optional=True), prefix="--input2", doc=InputDocumentation(doc="Input FASTA file of negative sequences")), ToolInput(tag="in_batch_size", input_type=Int(optional=True), prefix="--batchsize", doc=InputDocumentation(doc="Input batch size for training (default: 1000)")), ToolInput(tag="in_alpha", input_type=String(optional=True), prefix="--alpha", doc=InputDocumentation(doc="Alphabet (default: dna)")), ToolInput(tag="in_rev_comp", input_type=Boolean(optional=True), prefix="--revcomp", doc=InputDocumentation(doc="Consider both the given strand and the reverse complement strand when searching for motifs in a complementable alphabet (default: consider given strand only).")), ToolInput(tag="in_model", input_type=String(optional=True), prefix="--model", doc=InputDocumentation(doc="Model (default: tcm)")), ToolInput(tag="in_erase_whole", input_type=Boolean(optional=True), prefix="--erasewhole", doc=InputDocumentation(doc="Erase an entire sequence if it contains a discovered motif (default: erase individual motif occurrences).")), ToolInput(tag="in_fudge", input_type=Float(optional=True), prefix="--fudge", doc=InputDocumentation(doc="Fudge factor to help with extremely rare motifs. Should be >0 and <=1 (default: 0.1).")), ToolInput(tag="in_width", input_type=Int(optional=True), prefix="--width", doc=InputDocumentation(doc="Motif width (default: 20).")), ToolInput(tag="in_half_length", input_type=Int(optional=True), prefix="--halflength", doc=InputDocumentation(doc="k-mer half-length for gapped k-mer search seeding (default: 6).")), ToolInput(tag="in_n_motifs", input_type=Int(optional=True), prefix="--nmotifs", doc=InputDocumentation(doc="Number of motifs to find (default: 1).")), ToolInput(tag="in_min_sites", input_type=Int(optional=True), prefix="--minsites", doc=InputDocumentation(doc="Minimum number of motif occurrences (default: 100).")), ToolInput(tag="in_max_sites", input_type=Int(optional=True), prefix="--maxsites", doc=InputDocumentation(doc="Maximum number of motif occurrences. If left unspecified, will default to number ofsequences.")), ToolInput(tag="in_n_seeds", input_type=Int(optional=True), prefix="--nseeds", doc=InputDocumentation(doc="Number of motif seeds to try. If left unspecified, will default to 100 (for gapped k-mersearch) or 1000 (for randomly sampled subsequence method).")), ToolInput(tag="in_maxiter", input_type=Int(optional=True), prefix="--maxiter", doc=InputDocumentation(doc="Maximum number of refining iterations of batch EM to run from any starting point. Batch EM is run for maxiter iterations or until convergence (see -tolerance, below) from each starting point for refining (default: 20)")), ToolInput(tag="in_tolerance", input_type=Float(optional=True), prefix="--tolerance", doc=InputDocumentation(doc="Stop iterating refining batch/on-line EM when the change in the motif probability matrix is less than tolerance. Change is defined as the euclidean distance between two successive frequency matrices (default: 1e-3).")), ToolInput(tag="in_no_cuda", input_type=Boolean(optional=True), prefix="--no_cuda", doc=InputDocumentation(doc="Disable the default CUDA training.")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="Random seed for reproducibility (default: 1337).")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--outputdir", doc=InputDocumentation(doc="The output directory. Causes error if the directory already exists.")), ToolInput(tag="in_output_dirc", input_type=Directory(optional=True), prefix="--outputdirc", doc=InputDocumentation(doc="The output directory. Will overwrite if directory already exists."))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="The output directory. Causes error if the directory already exists.")), ToolOutput(tag="out_output_dirc", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dirc", type_hint=File()), doc=OutputDocumentation(doc="The output directory. Will overwrite if directory already exists."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Em_Py_V0_1_0().translate("wdl", allow_empty_container=True)

