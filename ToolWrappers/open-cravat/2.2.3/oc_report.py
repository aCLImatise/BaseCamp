from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Array, Directory

Oc_Report_V0_1_0 = CommandToolBuilder(tool="oc_report", base_command=["oc", "report"], inputs=[ToolInput(tag="in_report_types", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="[{text,excel} ...]\nreport types")), ToolInput(tag="in_path_filter_file", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Path to filter file")), ToolInput(tag="in_name_filter_stored", input_type=String(optional=True), prefix="-F", doc=InputDocumentation(doc="Name of filter (stored in aggregator output)")), ToolInput(tag="in_path_save_file", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="Path to save file")), ToolInput(tag="in_path_conf_file", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="path to a conf file")), ToolInput(tag="in_module_name", input_type=String(optional=True), prefix="--module-name", doc=InputDocumentation(doc="report module name")), ToolInput(tag="in_no_gene_level_on_variant_level", input_type=Boolean(optional=True), prefix="--nogenelevelonvariantlevel", doc=InputDocumentation(doc="Use this option to prevent gene level result from\nbeing added to variant level result.")), ToolInput(tag="in_confs", input_type=String(optional=True), prefix="--confs", doc=InputDocumentation(doc="Configuration string")), ToolInput(tag="in_input_files", input_type=Array(t=String(), optional=True), prefix="--inputfiles", doc=InputDocumentation(doc="Original input file path")), ToolInput(tag="in_separate_sample", input_type=Boolean(optional=True), prefix="--separatesample", doc=InputDocumentation(doc="Write each variant-sample pair on a separate line")), ToolInput(tag="in_directory_output_files", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="directory for output files")), ToolInput(tag="in_do_not_change_status", input_type=Boolean(optional=True), prefix="--do-not-change-status", doc=InputDocumentation(doc="Job status in status.json will not be changed")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="Suppress output to STDOUT")), ToolInput(tag="in_system_option", input_type=Boolean(optional=True), prefix="--system-option", doc=InputDocumentation(doc="[SYSTEM_OPTION ...]\nSystem option in key=value syntax. For example,\n--system-option modules_dir=/home/user/open-\ncravat/modules")), ToolInput(tag="in_module_option", input_type=Boolean(optional=True), prefix="--module-option", doc=InputDocumentation(doc="[MODULE_OPTION ...]\nModule-specific option in module_name.key=value\nsyntax. For example, --module-option\nvcfreporter.type=separate")), ToolInput(tag="in_concise_report", input_type=Boolean(optional=True), prefix="--concise-report", doc=InputDocumentation(doc="Generate concise report with default columns defined\nby annotation modules"))], outputs=[ToolOutput(tag="out_directory_output_files", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_directory_output_files", type_hint=File()), doc=OutputDocumentation(doc="directory for output files"))], container="quay.io/biocontainers/open-cravat:2.2.3--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Oc_Report_V0_1_0().translate("wdl")

