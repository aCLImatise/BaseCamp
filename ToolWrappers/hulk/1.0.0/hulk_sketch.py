from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, Float, String, Directory

Hulk_Sketch_V0_1_0 = CommandToolBuilder(tool="hulk_sketch", base_command=["hulk", "sketch"], inputs=[ToolInput(tag="in_fast_q", input_type=File(optional=True), prefix="--fastq", doc=InputDocumentation(doc="FASTQ file(s) to sketch (can also pipe in STDIN)")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="tells HULK that the input file is actually FASTA format (.fna/.fasta/.fa), not FASTQ (experimental feature)")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--windowSize", doc=InputDocumentation(doc="minimizer window size (default 9)")), ToolInput(tag="in_interval", input_type=Int(optional=True), prefix="--interval", doc=InputDocumentation(doc="size of k-mer sampling interval (default 0 (= no interval))")), ToolInput(tag="in_sketch_size", input_type=Int(optional=True), prefix="--sketchSize", doc=InputDocumentation(doc="size of sketch (default 50)")), ToolInput(tag="in_decay_ratio", input_type=Float(optional=True), prefix="--decayRatio", doc=InputDocumentation(doc="decay ratio used for concept drift (1.0 = concept drift disabled) (default 1)")), ToolInput(tag="in_stream", input_type=Boolean(optional=True), prefix="--stream", doc=InputDocumentation(doc="prints the sketches to STDOUT after every interval is reached, whilst still writting them to disk (log file is redirected to disk))")), ToolInput(tag="in_banner_label", input_type=String(optional=True), prefix="--bannerLabel", doc=InputDocumentation(doc="adds a label to the sketch object, for use with BANNER (default 'blank')")), ToolInput(tag="in_k_hf", input_type=Boolean(optional=True), prefix="--khf", doc=InputDocumentation(doc="also generate a MinHash K-Hash Functions sketch")), ToolInput(tag="in_kmv", input_type=Boolean(optional=True), prefix="--kmv", doc=InputDocumentation(doc="also generate a MinHash K-Minimum Values (bottom-k) sketch")), ToolInput(tag="in_km_er_size", input_type=Int(optional=True), prefix="--kmerSize", doc=InputDocumentation(doc="minimizer k-mer length (default 21)")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="filename for log file, if omitted then STDOUT used by default")), ToolInput(tag="in_outfile", input_type=Directory(optional=True), prefix="--outFile", doc=InputDocumentation(doc="directory and basename for saving the outfile(s) (default './hulk-20200909212826')")), ToolInput(tag="in_processors", input_type=Int(optional=True), prefix="--processors", doc=InputDocumentation(doc="number of processors to use (default 1)")), ToolInput(tag="in_profiling", input_type=Boolean(optional=True), prefix="--profiling", doc=InputDocumentation(doc="create the files needed to profile HULK using the go tool pprof"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hulk_Sketch_V0_1_0().translate("wdl", allow_empty_container=True)

