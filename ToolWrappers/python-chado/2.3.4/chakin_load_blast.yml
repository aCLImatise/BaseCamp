!Command
command:
- chakin
- load
- blast
positional:
- !Positional
  optional: false
  position: 0
  name: module
  description: "Output:\nNumber of processed hits"
- !Positional
  optional: false
  position: 0
  name: uniquename
  description: --skip_missing        Skip lines with unknown features or GO id instead
    of
named:
- !Flag
  optional: true
  synonyms:
  - --blastdb
  description: "Name of the database blasted against (must be in the\nChado db table)"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --blastdb_id
  description: "ID of the database blasted against (must be in the\nChado db table)"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --re_name
  description: "Regular expression to extract the feature name from\nthe input file\
    \ (first capturing group will be used)."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --query_type
  description: "The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n'contig') of\
    \ the query. It must be a valid Sequence\nOntology term.  [default: polypeptide]"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --match_on_name
  description: Match features using their name instead of their
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: chakin load blast [OPTIONS] ANALYSIS_ID ORGANISM_ID INPUT\n\n \
  \ Load a blast analysis, in the same way as does the tripal_analysis_blast\n  module\n\
  \n  Output:\n\n      Number of processed hits\n\nOptions:\n  --blastdb TEXT    \
  \    Name of the database blasted against (must be in the\n                    \
  \    Chado db table)\n\n  --blastdb_id INTEGER  ID of the database blasted against\
  \ (must be in the\n                        Chado db table)\n\n  --re_name TEXT \
  \       Regular expression to extract the feature name from\n                  \
  \      the input file (first capturing group will be used).\n\n  --query_type TEXT\
  \     The feature type (e.g. 'gene', 'mRNA', 'polypeptide',\n                  \
  \      'contig') of the query. It must be a valid Sequence\n                   \
  \     Ontology term.  [default: polypeptide]\n\n  --match_on_name       Match features\
  \ using their name instead of their\n                        uniquename\n\n  --skip_missing\
  \        Skip lines with unknown features or GO id instead of\n                \
  \        aborting everything.\n\n  -h, --help            Show this message and exit.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/python-chado:2.3.4--pyh3252c3a_0
