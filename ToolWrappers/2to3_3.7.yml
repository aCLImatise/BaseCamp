!Command
command:
- 2to3-3.7
positional:
- !Positional
  description: ''
  position: 0
  name: 2to3
  optional: false
- !Positional
  description: ''
  position: 1
  name: file|dir
  optional: false
named:
- !Flag
  description: Fix up doctests only
  synonyms:
  - -d
  - --doctests_only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Each FIX specifies a transformation; default: all'
  synonyms:
  - -f
  - --fix
  args: !SimpleFlagArg
    name: FIX
  optional: true
- !Flag
  description: Run 2to3 concurrently
  synonyms:
  - -j
  - --processes
  args: !SimpleFlagArg
    name: PROCESSES
  optional: true
- !Flag
  description: Prevent a transformation from being run
  synonyms:
  - -x
  - --nofix
  args: !SimpleFlagArg
    name: NOFIX
  optional: true
- !Flag
  description: List available transformations
  synonyms:
  - -l
  - --list-fixes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Modify the grammar so that print() is a function
  synonyms:
  - -p
  - --print-function
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: More verbose logging
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Don't show diffs of the refactoring
  synonyms:
  - --no-diffs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write back modified files
  synonyms:
  - -w
  - --write
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Don't write backups for modified files
  synonyms:
  - -n
  - --nobackups
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Put output files in this directory instead of\noverwriting the input\
    \ files.  Requires -n."
  synonyms:
  - -o
  - --output-dir
  args: !SimpleFlagArg
    name: OUTPUT_DIR
  optional: true
- !Flag
  description: "Also write files even if no changes were required\n(useful with --output-dir);\
    \ implies -w."
  synonyms:
  - -W
  - --write-unchanged-files
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Append this string to all output filenames. Requires\n-n if non-empty.\
    \  ex: --add-suffix='3' will generate\n.py3 files.\n"
  synonyms:
  - --add-suffix
  args: !SimpleFlagArg
    name: ADD_SUFFIX
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: 2to3 [options] file|dir ...\n\nOptions:\n  -h, --help         \
  \   show this help message and exit\n  -d, --doctests_only   Fix up doctests only\n\
  \  -f FIX, --fix=FIX     Each FIX specifies a transformation; default: all\n  -j\
  \ PROCESSES, --processes=PROCESSES\n                        Run 2to3 concurrently\n\
  \  -x NOFIX, --nofix=NOFIX\n                        Prevent a transformation from\
  \ being run\n  -l, --list-fixes      List available transformations\n  -p, --print-function\
  \  Modify the grammar so that print() is a function\n  -v, --verbose         More\
  \ verbose logging\n  --no-diffs            Don't show diffs of the refactoring\n\
  \  -w, --write           Write back modified files\n  -n, --nobackups       Don't\
  \ write backups for modified files\n  -o OUTPUT_DIR, --output-dir=OUTPUT_DIR\n \
  \                       Put output files in this directory instead of\n        \
  \                overwriting the input files.  Requires -n.\n  -W, --write-unchanged-files\n\
  \                        Also write files even if no changes were required\n   \
  \                     (useful with --output-dir); implies -w.\n  --add-suffix=ADD_SUFFIX\n\
  \                        Append this string to all output filenames. Requires\n\
  \                        -n if non-empty.  ex: --add-suffix='3' will generate\n\
  \                        .py3 files.\n"
generated_using:
- --help
