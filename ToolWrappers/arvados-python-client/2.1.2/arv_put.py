from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Arv_Put_V0_1_0 = CommandToolBuilder(tool="arv_put", base_command=["arv-put"], inputs=[ToolInput(tag="in_normalize", input_type=Boolean(optional=True), prefix="--normalize", doc=InputDocumentation(doc="Normalize the manifest by re-ordering files and\nstreams after writing data.")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc="Don't actually upload files, but only check if any\nfile should be uploaded. Exit with code=2 when files\nare pending for upload.")), ToolInput(tag="in_as_stream", input_type=Boolean(optional=True), prefix="--as-stream", doc=InputDocumentation(doc="Synonym for --stream.")), ToolInput(tag="in_stream", input_type=Boolean(optional=True), prefix="--stream", doc=InputDocumentation(doc="Store the file content and display the resulting\nmanifest on stdout. Do not write the manifest to Keep\nor save a Collection object in Arvados.")), ToolInput(tag="in_as_manifest", input_type=Boolean(optional=True), prefix="--as-manifest", doc=InputDocumentation(doc="Synonym for --manifest.")), ToolInput(tag="in_in_manifest", input_type=Boolean(optional=True), prefix="--in-manifest", doc=InputDocumentation(doc="Synonym for --manifest.")), ToolInput(tag="in_manifest", input_type=Boolean(optional=True), prefix="--manifest", doc=InputDocumentation(doc="Store the file data and resulting manifest in Keep,\nsave a Collection object in Arvados, and display the\nmanifest locator (Collection uuid) on stdout. This is\nthe default behavior.")), ToolInput(tag="in_as_raw", input_type=Boolean(optional=True), prefix="--as-raw", doc=InputDocumentation(doc="Synonym for --raw.")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="--raw", doc=InputDocumentation(doc="Store the file content and display the data block\nlocators on stdout, separated by commas, with a\ntrailing newline. Do not store a manifest.")), ToolInput(tag="in_update_collection", input_type=String(optional=True), prefix="--update-collection", doc=InputDocumentation(doc="Update an existing collection identified by the given\nArvados collection UUID. All new local files will be\nuploaded.")), ToolInput(tag="in_use_filename", input_type=File(optional=True), prefix="--use-filename", doc=InputDocumentation(doc="Synonym for --filename.")), ToolInput(tag="in_filename", input_type=File(optional=True), prefix="--filename", doc=InputDocumentation(doc="Use the given filename in the manifest, instead of the\nname of the local file. This is useful when '-' or\n'/dev/stdin' is given as an input file. It can be used\nonly if there is exactly one path given and it is not\na directory. Implies --manifest.")), ToolInput(tag="in_portable_data_hash", input_type=Boolean(optional=True), prefix="--portable-data-hash", doc=InputDocumentation(doc="Print the portable data hash instead of the Arvados\nUUID for the collection created by the upload.")), ToolInput(tag="in_replication", input_type=Int(optional=True), prefix="--replication", doc=InputDocumentation(doc="Set the replication level for the new collection: how\nmany different physical storage devices (e.g., disks)\nshould have a copy of each data block. Default is to\nuse the server-provided default (if any) or 2.")), ToolInput(tag="in_storage_classes", input_type=String(optional=True), prefix="--storage-classes", doc=InputDocumentation(doc="Specify comma separated list of storage classes to be\nused when saving data to Keep.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Set the number of upload threads to be used. Take into\naccount that using lots of threads will increase the\nRAM requirements. Default is to use 2 threads. On high\nlatency installations, using a greater number will\nimprove overall throughput.")), ToolInput(tag="in_exclude", input_type=File(optional=True), prefix="--exclude", doc=InputDocumentation(doc="Exclude files and directories whose names match the\ngiven glob pattern. When using a path-like pattern\nlike 'subdir/*.txt', all text files inside 'subdir'\ndirectory, relative to the provided input dirs will be\nexcluded. When using a filename pattern like '*.txt',\nany text file will be excluded no matter where it is\nplaced. For the special case of needing to exclude\nonly files or dirs directly below the given input\ndirectory, you can use a pattern like\n'./exclude_this.gif'. You can specify multiple\npatterns by using this argument more than once.")), ToolInput(tag="in_follow_links", input_type=Boolean(optional=True), prefix="--follow-links", doc=InputDocumentation(doc="Follow file and directory symlinks (default).")), ToolInput(tag="in_no_follow_links", input_type=Boolean(optional=True), prefix="--no-follow-links", doc=InputDocumentation(doc="Do not follow file and directory symlinks.")), ToolInput(tag="in_trash_at", input_type=Int(optional=True), prefix="--trash-at", doc=InputDocumentation(doc=":MM\nSet the trash date of the resulting collection to an\nabsolute date in the future. The accepted format is\ndefined by the ISO 8601 standard. Examples: 20090103,\n2009-01-03, 20090103T181505, 2009-01-03T18:15:05.\nTimezone information can be added. If not, the\nprovided date/time is assumed as being in the local\nsystem's timezone.")), ToolInput(tag="in_trash_after", input_type=String(optional=True), prefix="--trash-after", doc=InputDocumentation(doc="Set the trash date of the resulting collection to an\namount of days from the date/time that the upload\nprocess finishes.")), ToolInput(tag="in_project_uuid", input_type=String(optional=True), prefix="--project-uuid", doc=InputDocumentation(doc="Store the collection in the specified project, instead\nof your Home project.")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Save the collection with the specified name.")), ToolInput(tag="in_progress", input_type=Boolean(optional=True), prefix="--progress", doc=InputDocumentation(doc="Display human-readable progress on stderr (bytes and,\nif possible, percentage of total data size). This is\nthe default behavior when stderr is a tty.")), ToolInput(tag="in_no_progress", input_type=Boolean(optional=True), prefix="--no-progress", doc=InputDocumentation(doc="Do not display human-readable progress on stderr, even\nif stderr is a tty.")), ToolInput(tag="in_batch_progress", input_type=Boolean(optional=True), prefix="--batch-progress", doc=InputDocumentation(doc="Display machine-readable progress on stderr (bytes\nand, if known, total data size).")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="Do not print any debug messages to console. (Any error\nmessages will still be displayed.)")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="Continue interrupted uploads from cached state\n(default).")), ToolInput(tag="in_no_resume", input_type=Boolean(optional=True), prefix="--no-resume", doc=InputDocumentation(doc="Do not continue interrupted uploads from cached state.")), ToolInput(tag="in_cache", input_type=Boolean(optional=True), prefix="--cache", doc=InputDocumentation(doc="Save upload state in a cache file for resuming\n(default).")), ToolInput(tag="in_no_cache", input_type=Boolean(optional=True), prefix="--no-cache", doc=InputDocumentation(doc="Do not save upload state in a cache file for resuming.")), ToolInput(tag="in_retries", input_type=Int(optional=True), prefix="--retries", doc=InputDocumentation(doc="Maximum number of times to retry server requests that\nencounter temporary failures (e.g., server down).\nDefault 3.\n")), ToolInput(tag="in_path", input_type=File(), position=0, doc=InputDocumentation(doc="Local file or directory. If path is a directory\nreference with a trailing slash, then just upload the\ndirectory's contents; otherwise upload the directory\nitself. Default: read from standard input."))], outputs=[], container="quay.io/biocontainers/arvados-python-client:2.1.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Arv_Put_V0_1_0().translate("wdl")

