from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Arv_Keepdocker_V0_1_0 = CommandToolBuilder(tool="arv_keepdocker", base_command=["arv-keepdocker"], inputs=[ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Re-upload the image even if it already exists on the")), ToolInput(tag="in_pull", input_type=Boolean(optional=True), prefix="--pull", doc=InputDocumentation(doc="Try to pull the latest image from Docker registry")), ToolInput(tag="in_no_pull", input_type=Boolean(optional=True), prefix="--no-pull", doc=InputDocumentation(doc="Use locally installed image only, don't pull image\nfrom Docker registry (default)")), ToolInput(tag="in_project_uuid", input_type=String(optional=True), prefix="--project-uuid", doc=InputDocumentation(doc="Store the collection in the specified project, instead\nof your Home project.")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Save the collection with the specified name.")), ToolInput(tag="in_progress", input_type=Boolean(optional=True), prefix="--progress", doc=InputDocumentation(doc="Display human-readable progress on stderr (bytes and,\nif possible, percentage of total data size). This is\nthe default behavior when stderr is a tty.")), ToolInput(tag="in_no_progress", input_type=Boolean(optional=True), prefix="--no-progress", doc=InputDocumentation(doc="Do not display human-readable progress on stderr, even\nif stderr is a tty.")), ToolInput(tag="in_batch_progress", input_type=Boolean(optional=True), prefix="--batch-progress", doc=InputDocumentation(doc="Display machine-readable progress on stderr (bytes\nand, if known, total data size).")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="Do not print any debug messages to console. (Any error\nmessages will still be displayed.)")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="Continue interrupted uploads from cached state\n(default).")), ToolInput(tag="in_no_resume", input_type=Boolean(optional=True), prefix="--no-resume", doc=InputDocumentation(doc="Do not continue interrupted uploads from cached state.")), ToolInput(tag="in_cache", input_type=Boolean(optional=True), prefix="--cache", doc=InputDocumentation(doc="Save upload state in a cache file for resuming\n(default).")), ToolInput(tag="in_no_cache", input_type=Boolean(optional=True), prefix="--no-cache", doc=InputDocumentation(doc="Do not save upload state in a cache file for resuming.")), ToolInput(tag="in_retries", input_type=Int(optional=True), prefix="--retries", doc=InputDocumentation(doc="Maximum number of times to retry server requests that\nencounter temporary failures (e.g., server down).\nDefault 3.\n")), ToolInput(tag="in_force_image_format", input_type=Boolean(optional=True), prefix="--force-image-format", doc=InputDocumentation(doc="")), ToolInput(tag="in_image", input_type=String(), position=0, doc=InputDocumentation(doc="Docker image to upload: repo, repo:tag, or hash")), ToolInput(tag="in_tag", input_type=String(), position=1, doc=InputDocumentation(doc="Tag of the Docker image to upload (default 'latest'),\nif image is given as an untagged repo name")), ToolInput(tag="in_server", input_type=String(), position=0, doc=InputDocumentation(doc="--force-image-format  Proceed even if the image format is not supported by"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Arv_Keepdocker_V0_1_0().translate("wdl", allow_empty_container=True)

