from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Rpsblast_V0_1_0 = CommandToolBuilder(tool="rpsblast", base_command=["rpsblast"], inputs=[ToolInput(tag="in_input_query_sequence", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Input query sequence (this parameter must be set) [File In]\ndefault = stdin")), ToolInput(tag="in_rps_blast_database", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="RPS BLAST Database [File In]")), ToolInput(tag="in_query_sequence_protein", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Query sequence is protein  [T/F]  Optional\ndefault = T")), ToolInput(tag="in_expectation_value_e", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Expectation value (E) [Real]\ndefault = 10.0")), ToolInput(tag="in_alignment_view_options", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="alignment view options:")), ToolInput(tag="in_output_file_stdout", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output File for Alignment [File Out]  Optional\ndefault = stdout")), ToolInput(tag="in_dropoff_x_default", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="Dropoff (X) for blast extensions in bits (default if zero) [Real]\ndefault = 7.0")), ToolInput(tag="in_multiple_hit_single", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="0 for multiple hit, 1 for single hit [Integer]\ndefault = 0")), ToolInput(tag="in_filter_query_sequence", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="Filter query sequence with SEG [String]\ndefault = F")), ToolInput(tag="in_x_dropoff_value_gapped", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="X dropoff value for gapped alignment (in bits) [Integer]\ndefault = 15")), ToolInput(tag="in_number_bits_trigger", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="Number of bits to trigger gapping [Real]\ndefault = 22.0")), ToolInput(tag="in_number_use_default", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Number of processors to use [Integer]\ndefault = 1")), ToolInput(tag="in_show_gis_deflines", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="Show GI's in deflines [T/F]\ndefault = F")), ToolInput(tag="in_believe_defline_default", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="Believe the query defline [T/F]\ndefault = F")), ToolInput(tag="in_x_dropoff_value_final", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="X dropoff value for final gapped alignment (in bits) [Integer]\ndefault = 25")), ToolInput(tag="in_seqalign_file_be", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc="SeqAlign file ('Believe the query defline' must be TRUE) [File Out]  Optional")), ToolInput(tag="in_number_database_sequences", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Number of database sequences to show one-line descriptions for (V) [Integer]\ndefault = 500")), ToolInput(tag="in_number_database_sequence", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Number of database sequence to show alignments for (B) [Integer]\ndefault = 250")), ToolInput(tag="in_effective_length_database", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="Effective length of the database (use zero for the real size) [Real]\ndefault = 0")), ToolInput(tag="in_effective_length_search", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="Effective length of the search space (use zero for the real size) [Real]\ndefault = 0")), ToolInput(tag="in_produce_html_output", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Produce HTML output [T/F]\ndefault = F")), ToolInput(tag="in_logfile_name_optionaldefault", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Logfile name  [File Out]  Optional\ndefault = stderr")), ToolInput(tag="in_use_case_filtering", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Use lower case filtering of FASTA sequence [T/F]  Optional\ndefault = F")), ToolInput(tag="in_range_restriction_query", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Range restriction on query sequence (Format: start,stop) blastp only\n0 in 'start' refers to the beginning of the sequence\n0 in 'stop' refers to the end of the sequence [String]  Optional\ndefault = 0,0\n"))], outputs=[ToolOutput(tag="out_output_file_stdout", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_stdout", type_hint=File()), doc=OutputDocumentation(doc="Output File for Alignment [File Out]  Optional\ndefault = stdout")), ToolOutput(tag="out_seqalign_file_be", output_type=File(optional=True), selector=InputSelector(input_to_select="in_seqalign_file_be", type_hint=File()), doc=OutputDocumentation(doc="SeqAlign file ('Believe the query defline' must be TRUE) [File Out]  Optional")), ToolOutput(tag="out_logfile_name_optionaldefault", output_type=File(optional=True), selector=InputSelector(input_to_select="in_logfile_name_optionaldefault", type_hint=File()), doc=OutputDocumentation(doc="Logfile name  [File Out]  Optional\ndefault = stderr"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rpsblast_V0_1_0().translate("wdl", allow_empty_container=True)

