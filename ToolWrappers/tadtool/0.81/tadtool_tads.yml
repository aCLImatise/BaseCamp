!Command
command:
- tadtool
- tads
positional:
- !Positional
  description: "Square Hi-C Matrix as tab-delimited or .npy file\n(created with numpy.save)\
    \ or sparse matrix format\n(each line: <row region index> <column region index>\n\
    <matrix value>)"
  position: 0
  name: matrix
  optional: false
- !Positional
  description: "BED file (no header) with regions corresponding to the\nnumber of\
    \ rows in the provided matrix. Fourth column,\nif present, denotes name field,\
    \ which is used as an\nidentifier in sparse matrix notation."
  position: 1
  name: regions
  optional: false
- !Positional
  description: Window size in base pairs
  position: 2
  name: window_size
  optional: false
- !Positional
  description: Cutoff for TAD-calling algorithm at given window size.
  position: 3
  name: cutoff
  optional: false
- !Positional
  description: Optional output file to save TADs.
  position: 4
  name: output
  optional: false
named:
- !Flag
  description: "TAD-calling algorithm. Options: insulation,\nninsulation, directionality.\
    \ Default: insulation."
  synonyms:
  - -a
  - --algorithm
  args: !SimpleFlagArg
    name: ALGORITHM
  optional: true
- !Flag
  description: "Normalisation window in number of regions. Only\naffects ninsulation\
    \ algorithm. If not specified,\nwindow will be the whole chromosome."
  synonyms:
  - -n
  - --normalisation-window
  args: !SimpleFlagArg
    name: NORMALISATION_WINDOW
  optional: true
- !Flag
  description: Write index values to file instead of TADs.
  synonyms:
  - -v
  - --write-values
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: tadtool tads [-h] [-a ALGORITHM] [-n NORMALISATION_WINDOW] [-v]\n\
  \                    matrix regions window_size cutoff [output]\n\nCall TADs with\
  \ pre-defined parameters\n\npositional arguments:\n  matrix                Square\
  \ Hi-C Matrix as tab-delimited or .npy file\n                        (created with\
  \ numpy.save) or sparse matrix format\n                        (each line: <row\
  \ region index> <column region index>\n                        <matrix value>)\n\
  \  regions               BED file (no header) with regions corresponding to the\n\
  \                        number of rows in the provided matrix. Fourth column,\n\
  \                        if present, denotes name field, which is used as an\n \
  \                       identifier in sparse matrix notation.\n  window_size   \
  \        Window size in base pairs\n  cutoff                Cutoff for TAD-calling\
  \ algorithm at given window size.\n  output                Optional output file\
  \ to save TADs.\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -a ALGORITHM, --algorithm ALGORITHM\n                        TAD-calling\
  \ algorithm. Options: insulation,\n                        ninsulation, directionality.\
  \ Default: insulation.\n  -n NORMALISATION_WINDOW, --normalisation-window NORMALISATION_WINDOW\n\
  \                        Normalisation window in number of regions. Only\n     \
  \                   affects ninsulation algorithm. If not specified,\n         \
  \               window will be the whole chromosome.\n  -v, --write-values    Write\
  \ index values to file instead of TADs.\n"
generated_using:
- --help
