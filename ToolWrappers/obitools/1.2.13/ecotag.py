from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Int

Ecotag_V0_1_0 = CommandToolBuilder(tool="ecotag", base_command=["ecotag"], inputs=[ToolInput(tag="in_sort", input_type=String(optional=True), prefix="--sort", doc=InputDocumentation(doc="> seq_tag.fasta")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--DEBUG", doc=InputDocumentation(doc="Set logging in debug mode")), ToolInput(tag="in_without_progress_bar", input_type=Boolean(optional=True), prefix="--without-progress-bar", doc=InputDocumentation(doc="desactivate progress bar")), ToolInput(tag="in_ref_database", input_type=File(optional=True), prefix="--ref-database", doc=InputDocumentation(doc="fasta file containing reference sequences")), ToolInput(tag="in_minimum_identity", input_type=String(optional=True), prefix="--minimum-identity", doc=InputDocumentation(doc="minimum identity to consider.")), ToolInput(tag="in_minimum_circle", input_type=String(optional=True), prefix="--minimum-circle", doc=InputDocumentation(doc="minimum identity considered for the assignment circle.")), ToolInput(tag="in_explain", input_type=String(optional=True), prefix="--explain", doc=InputDocumentation(doc="Add in the output CD (complementary data) record to\nexplain identification decision")), ToolInput(tag="in_uniq", input_type=Boolean(optional=True), prefix="--uniq", doc=InputDocumentation(doc="Apply a uniq filter on query sequences before")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Sort in reverse order (should be used with -S)")), ToolInput(tag="in_errors", input_type=String(optional=True), prefix="--errors", doc=InputDocumentation(doc="Tolerated rate of wrong assignation")), ToolInput(tag="in_min_matches", input_type=Int(optional=True), prefix="--min-matches", doc=InputDocumentation(doc="Minimum congruent assignation")), ToolInput(tag="in_cache_size", input_type=Int(optional=True), prefix="--cache-size", doc=InputDocumentation(doc="Cache size for the aligment score")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="ecoPCR taxonomy Database name")), ToolInput(tag="in_taxonomy_dump", input_type=File(optional=True), prefix="--taxonomy-dump", doc=InputDocumentation(doc="NCBI Taxonomy dump repository name")), ToolInput(tag="in_skip", input_type=String(optional=True), prefix="--skip", doc=InputDocumentation(doc="skip the N first sequences")), ToolInput(tag="in_only", input_type=String(optional=True), prefix="--only", doc=InputDocumentation(doc="treat only N sequences")), ToolInput(tag="in_genbank", input_type=Boolean(optional=True), prefix="--genbank", doc=InputDocumentation(doc="Input file is in genbank format")), ToolInput(tag="in_embl", input_type=Boolean(optional=True), prefix="--embl", doc=InputDocumentation(doc="Input file is in embl format")), ToolInput(tag="in_skip_on_error", input_type=Boolean(optional=True), prefix="--skip-on-error", doc=InputDocumentation(doc="Skip sequence entries with parse error")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Input file is in fasta nucleic format (including\nobitools fasta extentions)")), ToolInput(tag="in_eco_pcr", input_type=Boolean(optional=True), prefix="--ecopcr", doc=InputDocumentation(doc="Input file is in ecopcr format")), ToolInput(tag="in_raw_fast_a", input_type=Boolean(optional=True), prefix="--raw-fasta", doc=InputDocumentation(doc="Input file is in fasta format (but more tolerant to\nformat variant)")), ToolInput(tag="in_sanger", input_type=Boolean(optional=True), prefix="--sanger", doc=InputDocumentation(doc="Input file is in sanger fastq nucleic format (standard\nfastq)")), ToolInput(tag="in_solexa", input_type=Boolean(optional=True), prefix="--solexa", doc=InputDocumentation(doc="Input file is in fastq nucleic format produced by\nsolexa sequencer")), ToolInput(tag="in_eco_pcr_db", input_type=Boolean(optional=True), prefix="--ecopcrdb", doc=InputDocumentation(doc="Input file is an ecopcr database")), ToolInput(tag="in_nuc", input_type=Boolean(optional=True), prefix="--nuc", doc=InputDocumentation(doc="Input file contains nucleic sequences")), ToolInput(tag="in_prot", input_type=Boolean(optional=True), prefix="--prot", doc=InputDocumentation(doc="Input file contains protein sequences")), ToolInput(tag="in_fast_a_output", input_type=Boolean(optional=True), prefix="--fasta-output", doc=InputDocumentation(doc="Output sequences in obitools fasta format")), ToolInput(tag="in_fast_q_output", input_type=Boolean(optional=True), prefix="--fastq-output", doc=InputDocumentation(doc="Output sequences in sanger fastq format")), ToolInput(tag="in_eco_pcr_db_output", input_type=String(optional=True), prefix="--ecopcrdb-output", doc=InputDocumentation(doc="Output sequences in ecopcr database format (sequence\nrecords are not printed on standard output)")), ToolInput(tag="in_uppercase", input_type=Boolean(optional=True), prefix="--uppercase", doc=InputDocumentation(doc="Print sequences in upper case (default is lower case)")), ToolInput(tag="in_bash", input_type=String(), position=0, doc=InputDocumentation(doc="> ecotag -d embl_r113  -R ReferenceDB.fasta \")), ToolInput(tag="in_identification", input_type=String(), position=0, doc=InputDocumentation(doc="--sort=SORT           Sort output on input sequence tag"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ecotag_V0_1_0().translate("wdl", allow_empty_container=True)

