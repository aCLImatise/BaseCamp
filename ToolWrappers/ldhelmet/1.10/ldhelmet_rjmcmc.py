from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String, Float

Ldhelmet_Rjmcmc_V0_1_0 = CommandToolBuilder(tool="ldhelmet_rjmcmc", base_command=["ldhelmet", "rjmcmc"], inputs=[ToolInput(tag="in__display_version", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --version ]                      Display version.")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="(=5489)                    Seed for pseudo-random number")), ToolInput(tag="in_arg_name_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --output_file ] arg              Name of output file.")), ToolInput(tag="in_stats_thin", input_type=Int(optional=True), prefix="--stats_thin", doc=InputDocumentation(doc="(=1000)              Thinning parameter for summary")), ToolInput(tag="in_burn_in", input_type=Int(optional=True), prefix="--burn_in", doc=InputDocumentation(doc="(=1000)                 Number of iterations for burn-in (in\naddition to number of iterations to run\nrjMCMC).")), ToolInput(tag="in_arg_block_penalty", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --block_penalty ] arg (=10)      Block penalty for rjMCMC.")), ToolInput(tag="in_prior_rate", input_type=Int(optional=True), prefix="--prior_rate", doc=InputDocumentation(doc="(=1)                 Prior mean on recombination rate.")), ToolInput(tag="in_arg_sequence_file", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --seq_file ] arg                 Sequence file.")), ToolInput(tag="in_arg_twosite_likelihood", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --lk_file ] arg                  Two-site likelihood table.")), ToolInput(tag="in_arg_pade_coefficients", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --pade_file ] arg                Pade coefficients.")), ToolInput(tag="in_arg_prior_ancestral", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --prior_file ] arg               Prior on ancestral allele for each")), ToolInput(tag="in_arg_window_size", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[ --window_size ] arg (=50)        Window size.")), ToolInput(tag="in_pade_resolution", input_type=Int(optional=True), prefix="--pade_resolution", doc=InputDocumentation(doc="(=10)           Pade grid increment.")), ToolInput(tag="in_pade_max_rho", input_type=Int(optional=True), prefix="--pade_max_rho", doc=InputDocumentation(doc="(=1000)            Maximum Pade grid value.")), ToolInput(tag="in_partition_length", input_type=Int(optional=True), prefix="--partition_length", doc=InputDocumentation(doc="(=4001)        Partition length (number of SNPs).")), ToolInput(tag="in_overlap_length", input_type=Int(optional=True), prefix="--overlap_length", doc=InputDocumentation(doc="(=200)           Overlap length.")), ToolInput(tag="in_pos_file", input_type=String(optional=True), prefix="--pos_file", doc=InputDocumentation(doc="SNP positions for alternative input")), ToolInput(tag="in_max_lk_start", input_type=Float(optional=True), prefix="--max_lk_start", doc=InputDocumentation(doc="(=0.001)           Rho value to begin maximum likelihood\nestimation of background rate.")), ToolInput(tag="in_max_lk_end", input_type=Float(optional=True), prefix="--max_lk_end", doc=InputDocumentation(doc="(=0.29999999999999999)\nRho value to end maximum likelihood\nestimation of background rate.")), ToolInput(tag="in_max_lk_resolution", input_type=Float(optional=True), prefix="--max_lk_resolution", doc=InputDocumentation(doc="(=0.001)      Amount to increment by for maximum\nlikelihood estimation of background\nrate.\n")), ToolInput(tag="in_generator_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--num_threads arg (=1)                Number of threads.")), ToolInput(tag="in_statistics_dot", input_type=String(), position=1, doc=InputDocumentation(doc="-n [ --num_iter ] arg (=10000)        Number of iterations to run rjMCMC.")), ToolInput(tag="in_site_dot", input_type=String(), position=2, doc=InputDocumentation(doc="-m [ --mut_mat_file ] arg             Mutation matrix.")), ToolInput(tag="in_format_dot", input_type=String(), position=3, doc=InputDocumentation(doc="--snps_file arg                       SNPs file for alternative input format."))], outputs=[ToolOutput(tag="out_arg_name_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_name_output", type_hint=File()), doc=OutputDocumentation(doc="[ --output_file ] arg              Name of output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ldhelmet_Rjmcmc_V0_1_0().translate("wdl", allow_empty_container=True)

