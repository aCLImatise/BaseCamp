from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, Float, String

Longest_Path_V0_1_0 = CommandToolBuilder(tool="longest_path", base_command=["longest_path"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (1)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output file")), ToolInput(tag="in_dot", input_type=File(optional=True), prefix="--dot", doc=InputDocumentation(doc="Write an overlap graph (dot file)")), ToolInput(tag="in_overlap_play", input_type=Int(optional=True), prefix="--overlap-play", doc=InputDocumentation(doc="Play in overlap length between position and k-unitig lengths (1.3)")), ToolInput(tag="in_errors", input_type=Int(optional=True), prefix="--errors", doc=InputDocumentation(doc="Number of average errors slack for overlap computation (3.0)")), ToolInput(tag="in_bases", input_type=Boolean(optional=True), prefix="--bases", doc=InputDocumentation(doc="Maximize number of bases in path, not the number of mers (false)")), ToolInput(tag="in_unit_igs_lengths", input_type=File(optional=True), prefix="--unitigs-lengths", doc=InputDocumentation(doc="Length of k-unitigs")), ToolInput(tag="in_unit_igs_sequences", input_type=File(optional=True), prefix="--unitigs-sequences", doc=InputDocumentation(doc="Fasta file containing the sequence of the k-unitigs")), ToolInput(tag="in_k_mer", input_type=Int(optional=True), prefix="--k-mer", doc=InputDocumentation(doc="*Length of k-mer used to create k-unitigs")), ToolInput(tag="in_density", input_type=Float(optional=True), prefix="--density", doc=InputDocumentation(doc="Minimum density of k-mers (0.029)")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min-length", doc=InputDocumentation(doc="Minimum length of a mega-read (100.0)")), ToolInput(tag="in_tiling", input_type=String(optional=True), prefix="--tiling", doc=InputDocumentation(doc="|greedy|maximal         Option for tiling mega-reads (greedy)")), ToolInput(tag="in_trim", input_type=String(optional=True), prefix="--trim", doc=InputDocumentation(doc="|match|branch             How to trim mega-read (none)")), ToolInput(tag="in_longest_path_overlap_graph_two_cmdline", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_coords", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Longest_Path_V0_1_0().translate("wdl", allow_empty_container=True)

