from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, File, String

Exparna_P_V0_1_0 = CommandToolBuilder(tool="exparna_p", base_command=["exparna_p"], inputs=[ToolInput(tag="in_no_stacking", input_type=Boolean(optional=True), prefix="--no-stacking", doc=InputDocumentation(doc="Do not use stacking terms (otherwise needs stacking probs by RNAfold -p2)")), ToolInput(tag="in_alpha_one", input_type=Int(optional=True), prefix="--alpha_1", doc=InputDocumentation(doc="(1)\nMultiplier for sequential score")), ToolInput(tag="in_alpha_two", input_type=Int(optional=True), prefix="--alpha_2", doc=InputDocumentation(doc="(5)\nMultiplier for structural score")), ToolInput(tag="in_alpha_three", input_type=Int(optional=True), prefix="--alpha_3", doc=InputDocumentation(doc="(5)\nMultiplier for stacking score, 0 means no stacking contribution")), ToolInput(tag="in_struct_mismatch_score", input_type=Int(optional=True), prefix="--struct-mismatch-score", doc=InputDocumentation(doc="(-10)\nScore for a structural mismatch (nucleotide mismatch in an arcmatch)")), ToolInput(tag="in_min_prob", input_type=Int(optional=True), prefix="--min-prob", doc=InputDocumentation(doc="(0.01)\nMinimal probability")), ToolInput(tag="in_max_bps_length_ratio", input_type=Int(optional=True), prefix="--max-bps-length-ratio", doc=InputDocumentation(doc="(0.0)\nMaximal ratio of #base pairs divided by sequence length (default: no\neffect)")), ToolInput(tag="in_max_uil_length_ratio", input_type=Int(optional=True), prefix="--max-uil-length-ratio", doc=InputDocumentation(doc="(0.0)\nMaximal ratio of #unpaired bases in loops divided by sequence length\n(default: no effect)")), ToolInput(tag="in_max_bp_il_length_ratio", input_type=Int(optional=True), prefix="--max-bpil-length-ratio", doc=InputDocumentation(doc="(0.0)\nMaximal ratio of #base pairs in loops divided by loop length (default: no\neffect)")), ToolInput(tag="in_max_diff_am", input_type=Int(optional=True), prefix="--max-diff-am", doc=InputDocumentation(doc="(30)\nMaximal difference for sizes of matched arcs")), ToolInput(tag="in_max_diff", input_type=Int(optional=True), prefix="--max-diff", doc=InputDocumentation(doc="(-1)\nMaximal difference for alignment traces")), ToolInput(tag="in_max_diff_at_am", input_type=Int(optional=True), prefix="--max-diff-at-am", doc=InputDocumentation(doc="(-1)\nMaximal difference for alignment traces, only at arc match positions")), ToolInput(tag="in_prob_unpaired_in_loop_threshold", input_type=Float(optional=True), prefix="--prob_unpaired_in_loop_threshold", doc=InputDocumentation(doc="(0.01)\nThreshold for prob_unpaired_in_loop")), ToolInput(tag="in_prob_base_pair_in_loop_threshold", input_type=Float(optional=True), prefix="--prob_basepair_in_loop_threshold", doc=InputDocumentation(doc="(0.01)\nThreshold for prob_basepair_in_loop")), ToolInput(tag="in_out_min_prob", input_type=Int(optional=True), prefix="--out-min-prob", doc=InputDocumentation(doc="(0.0005)\nMinimal probability for output (min-prob overrides if smaller)")), ToolInput(tag="in_output_ps", input_type=Boolean(optional=True), prefix="--output-ps", doc=InputDocumentation(doc="Output best EPM chain as colored postscript")), ToolInput(tag="in_ps_file_a", input_type=File(optional=True), prefix="--PS_fileA", doc=InputDocumentation(doc="()\nPostscript output file for sequence A")), ToolInput(tag="in_ps_file_b", input_type=File(optional=True), prefix="--PS_fileB", doc=InputDocumentation(doc="()\nPostscript output file for sequence B")), ToolInput(tag="in_output_loca_rna", input_type=File(optional=True), prefix="--output-locarna", doc=InputDocumentation(doc="()\nFasta file with anchor constraints for locarna")), ToolInput(tag="in_output_anchor_pp", input_type=File(optional=True), prefix="--output-anchor-pp", doc=InputDocumentation(doc="()\nPP files <fileroot>_A.pp and <fileroot>_B.pp, merging input PPs and\nanchor constraints from chaining")), ToolInput(tag="in_output_clustal", input_type=File(optional=True), prefix="--output-clustal", doc=InputDocumentation(doc="()\nWrite file with chain as alignment in clustalw format")), ToolInput(tag="in_output_epm_list", input_type=File(optional=True), prefix="--output-epm-list", doc=InputDocumentation(doc="()\nA list of all found epms")), ToolInput(tag="in_output_chained_epm_list", input_type=File(optional=True), prefix="--output-chained-epm-list", doc=InputDocumentation(doc="()\nA list of all EPMs that are present in the chain")), ToolInput(tag="in_in_exact_struct_match", input_type=Boolean(optional=True), prefix="--inexact-struct-match", doc=InputDocumentation(doc="Allow inexact structure matches")), ToolInput(tag="in_add_filter", input_type=Boolean(optional=True), prefix="--add-filter", doc=InputDocumentation(doc="Apply an additional filter to enumerate only EPMs that are maximally\nextended (only inexact)")), ToolInput(tag="in_no_chaining", input_type=Boolean(optional=True), prefix="--no-chaining", doc=InputDocumentation(doc="Do not use the chaining algorithm to find best overall chain")), ToolInput(tag="in_sub_opt", input_type=Boolean(optional=True), prefix="--subopt", doc=InputDocumentation(doc="Use the suboptimal traceback")), ToolInput(tag="in_diff_to_opt_score", input_type=Int(optional=True), prefix="--diff-to-opt-score", doc=InputDocumentation(doc="(-1)\nThreshold for suboptimal traceback")), ToolInput(tag="in_min_score", input_type=Int(optional=True), prefix="--min-score", doc=InputDocumentation(doc="(90)\nMinimal score of a traced EPM")), ToolInput(tag="in_number_of_e_pms", input_type=Int(optional=True), prefix="--number-of-EPMs", doc=InputDocumentation(doc="(100)\nMaximal number of EPMs for the suboptimal traceback")), ToolInput(tag="in_no_lp", input_type=Boolean(optional=True), prefix="--noLP", doc=InputDocumentation(doc="use --noLP option for folding")), ToolInput(tag="in_max_bp_span", input_type=Int(optional=True), prefix="--maxBPspan", doc=InputDocumentation(doc="(-1)\nLimit maximum base pair span (default=off)")), ToolInput(tag="in_relaxed_anchors", input_type=Boolean(optional=True), prefix="--relaxed-anchors", doc=InputDocumentation(doc="Relax anchor constraints (default=off)")), ToolInput(tag="in_stopwatch", input_type=Boolean(optional=True), prefix="--stopwatch", doc=InputDocumentation(doc="Print run time information.")), ToolInput(tag="in_help", input_type=String(), position=0, doc=InputDocumentation(doc="-V,--version")), ToolInput(tag="in_quiet", input_type=String(), position=0, doc=InputDocumentation(doc="Scoring parameters:"))], outputs=[ToolOutput(tag="out_ps_file_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ps_file_a", type_hint=File()), doc=OutputDocumentation(doc="()\nPostscript output file for sequence A")), ToolOutput(tag="out_ps_file_b", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ps_file_b", type_hint=File()), doc=OutputDocumentation(doc="()\nPostscript output file for sequence B"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Exparna_P_V0_1_0().translate("wdl", allow_empty_container=True)

