class: CommandLineTool
id: hp_build_tree_NG.cwl
inputs:
- id: in_seqs
  doc: Input alignment in FASTA or PHYLIP format
  type: string?
  inputBinding:
    prefix: --seqs
- id: in_in_type
  doc: 'File format: FASTA or PHYLIP (Default is FASTA)'
  type: File?
  inputBinding:
    prefix: --in_type
- id: in_output_name
  doc: Run name for trees
  type: string?
  inputBinding:
    prefix: --output_name
- id: in_outdir
  doc: 'Output directory (default: .)'
  type: Directory?
  inputBinding:
    prefix: --outdir
- id: in_model
  doc: Substitution model OR path to partition file
  type: File?
  inputBinding:
    prefix: --model
- id: in_all
  doc: "Run bootstrap search and find best ML tree (default:\nFalse)"
  type: boolean?
  inputBinding:
    prefix: --all
- id: in_branch_length
  doc: "Branch length estimation mode: linked, scaled,\nunlinked (partitioned analysis\
    \ only)"
  type: long?
  inputBinding:
    prefix: --branch_length
- id: in_con_sense
  doc: 'Consensus tree building options: STRICT, MR, or MRE'
  type: string?
  inputBinding:
    prefix: --consense
- id: in_rand_tree
  doc: Start from a random topology
  type: string?
  inputBinding:
    prefix: --rand_tree
- id: in_pars_tree
  doc: "Start from a tree generated by the parsimony-based\nrandomized stepwise addition\
    \ algorithm"
  type: string?
  inputBinding:
    prefix: --pars_tree
- id: in_user_tree
  doc: Load a custom starting tree from the NEWICK file
  type: File?
  inputBinding:
    prefix: --user_tree
- id: in_search
  doc: 'Find best scoring ML tree (default) (default: False)'
  type: boolean?
  inputBinding:
    prefix: --search
- id: in_search_one_random
  doc: "Find best scoring ML tree with 1 random tree (default:\nFalse)"
  type: boolean?
  inputBinding:
    prefix: --search_1random
- id: in_constraint_tree
  doc: "Specify a constraint tree to e.g. enforce monophyly of\ncertain groups"
  type: string?
  inputBinding:
    prefix: --constraint_tree
- id: in_out_group
  doc: Outgroup(s) for tree
  type: string?
  inputBinding:
    prefix: --outgroup
- id: in_bs_converge
  doc: "A posteriori bootstrap convergence test (default:\nFalse)"
  type: boolean?
  inputBinding:
    prefix: --bsconverge
- id: in_bs_msa
  doc: "Generate bootstrap replicate alignments (default:\nFalse)"
  type: boolean?
  inputBinding:
    prefix: --bs_msa
- id: in_bs_trees
  doc: Number of bootstrap trees OR autoMRE
  type: long?
  inputBinding:
    prefix: --bs_trees
- id: in_bs_tree_cut_off
  doc: "Change the bootstopping cutoff value to make the test\nmore or less stringent"
  type: string?
  inputBinding:
    prefix: --bs_tree_cutoff
- id: in_bs_metric
  doc: 'Options: tbe or fbp,tbe'
  type: string?
  inputBinding:
    prefix: --bs_metric
- id: in_bootstrap
  doc: 'Run non-parametric bootstrap analysis (default: False)'
  type: boolean?
  inputBinding:
    prefix: --bootstrap
- id: in_check
  doc: "Check alignment file and remove any columns consisting\nentirely of gaps (default:\
    \ False)"
  type: boolean?
  inputBinding:
    prefix: --check
- id: in_log
  doc: "Options for output verbosity: ERROR, WARNING, RESULT,\nINFO, PROGRESS, VERBOSE,\
    \ or DEBUG"
  type: string?
  inputBinding:
    prefix: --log
- id: in_log_lh
  doc: "Compute log-likelihood of a given tree without any\noptimization (default:\
    \ False)"
  type: boolean?
  inputBinding:
    prefix: --loglh
- id: in_terrace
  doc: "Check whether a tree lies on a phylogenetic terrace\n(default: False)"
  type: boolean?
  inputBinding:
    prefix: --terrace
- id: in_seed
  doc: 'Seed for random numbers (default: 12345)'
  type: long?
  inputBinding:
    prefix: --seed
- id: in_redo
  doc: "Run even if there are existing files with the same\nname (use with caution!)\
    \ (default: False)"
  type: boolean?
  inputBinding:
    prefix: --redo
- id: in_keep_tmp
  doc: 'Keep temporary directory (default: False)'
  type: boolean?
  inputBinding:
    prefix: --keep_tmp
- id: in_quiet
  doc: "Do not write output to console (silence stdout and\nstderr) (default: False)"
  type: boolean?
  inputBinding:
    prefix: --quiet
- id: in_log_file
  doc: Append console output to this file
  type: File?
  inputBinding:
    prefix: --logfile
- id: in_n_cpu
  doc: 'Number of CPU to use (default: 1)'
  type: long?
  inputBinding:
    prefix: --ncpu
- id: in_debug
  doc: 'Print commands but do not run (default: False)'
  type: boolean?
  inputBinding:
    prefix: --debug
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_outdir
  doc: 'Output directory (default: .)'
  type: Directory?
  outputBinding:
    glob: $(inputs.in_outdir)
- id: out_log_file
  doc: Append console output to this file
  type: File?
  outputBinding:
    glob: $(inputs.in_log_file)
hints: []
cwlVersion: v1.1
baseCommand:
- hp_build_tree_NG
