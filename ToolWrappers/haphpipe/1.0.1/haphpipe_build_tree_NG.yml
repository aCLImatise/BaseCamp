!Command
command:
- haphpipe
- build_tree_NG
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --seqs
  description: Input alignment in FASTA or PHYLIP format
  args: !SimpleFlagArg
    name: SEQS
- !Flag
  optional: true
  synonyms:
  - --in_type
  description: 'File format: FASTA or PHYLIP (Default is FASTA)'
  args: !SimpleFlagArg
    name: IN_TYPE
- !Flag
  optional: true
  synonyms:
  - --output_name
  description: Run name for trees
  args: !SimpleFlagArg
    name: OUTPUT_NAME
- !Flag
  optional: true
  synonyms:
  - --outdir
  description: 'Output directory (default: .)'
  args: !SimpleFlagArg
    name: OUTDIR
- !Flag
  optional: true
  synonyms:
  - --model
  description: Substitution model OR path to partition file
  args: !SimpleFlagArg
    name: MODEL
- !Flag
  optional: true
  synonyms:
  - --all
  description: "Run bootstrap search and find best ML tree (default:\nFalse)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --branch_length
  description: "Branch length estimation mode: linked, scaled,\nunlinked (partitioned\
    \ analysis only)"
  args: !SimpleFlagArg
    name: BRANCH_LENGTH
- !Flag
  optional: true
  synonyms:
  - --consense
  description: 'Consensus tree building options: STRICT, MR, or MRE'
  args: !SimpleFlagArg
    name: CONSENSE
- !Flag
  optional: true
  synonyms:
  - --rand_tree
  description: Start from a random topology
  args: !SimpleFlagArg
    name: RAND_TREE
- !Flag
  optional: true
  synonyms:
  - --pars_tree
  description: "Start from a tree generated by the parsimony-based\nrandomized stepwise\
    \ addition algorithm"
  args: !SimpleFlagArg
    name: PARS_TREE
- !Flag
  optional: true
  synonyms:
  - --user_tree
  description: Load a custom starting tree from the NEWICK file
  args: !SimpleFlagArg
    name: USER_TREE
- !Flag
  optional: true
  synonyms:
  - --search
  description: 'Find best scoring ML tree (default) (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --search_1random
  description: "Find best scoring ML tree with 1 random tree (default:\nFalse)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --constraint_tree
  description: "Specify a constraint tree to e.g. enforce monophyly of\ncertain groups"
  args: !SimpleFlagArg
    name: CONSTRAINT_TREE
- !Flag
  optional: true
  synonyms:
  - --outgroup
  description: Outgroup(s) for tree
  args: !SimpleFlagArg
    name: OUTGROUP
- !Flag
  optional: true
  synonyms:
  - --bsconverge
  description: "A posteriori bootstrap convergence test (default:\nFalse)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bs_msa
  description: "Generate bootstrap replicate alignments (default:\nFalse)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bs_trees
  description: Number of bootstrap trees OR autoMRE
  args: !SimpleFlagArg
    name: BS_TREES
- !Flag
  optional: true
  synonyms:
  - --bs_tree_cutoff
  description: "Change the bootstopping cutoff value to make the test\nmore or less\
    \ stringent"
  args: !SimpleFlagArg
    name: BS_TREE_CUTOFF
- !Flag
  optional: true
  synonyms:
  - --bs_metric
  description: 'Options: tbe or fbp,tbe'
  args: !SimpleFlagArg
    name: BS_METRIC
- !Flag
  optional: true
  synonyms:
  - --bootstrap
  description: 'Run non-parametric bootstrap analysis (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --check
  description: "Check alignment file and remove any columns consisting\nentirely of\
    \ gaps (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --log
  description: "Options for output verbosity: ERROR, WARNING, RESULT,\nINFO, PROGRESS,\
    \ VERBOSE, or DEBUG"
  args: !SimpleFlagArg
    name: LOG
- !Flag
  optional: true
  synonyms:
  - --loglh
  description: "Compute log-likelihood of a given tree without any\noptimization (default:\
    \ False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --terrace
  description: "Check whether a tree lies on a phylogenetic terrace\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --seed
  description: 'Seed for random numbers (default: 12345)'
  args: !SimpleFlagArg
    name: SEED
- !Flag
  optional: true
  synonyms:
  - --redo
  description: "Run even if there are existing files with the same\nname (use with\
    \ caution!) (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --keep_tmp
  description: 'Keep temporary directory (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --quiet
  description: "Do not write output to console (silence stdout and\nstderr) (default:\
    \ False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --logfile
  description: Append console output to this file
  args: !SimpleFlagArg
    name: LOGFILE
- !Flag
  optional: true
  synonyms:
  - --ncpu
  description: 'Number of CPU to use (default: 1)'
  args: !SimpleFlagArg
    name: NCPU
- !Flag
  optional: true
  synonyms:
  - --debug
  description: 'Print commands but do not run (default: False)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: 'Check RAxML-NG version ONLY (default: False)'
  args: !EmptyFlagArg {}
help_text: "usage: haphpipe build_tree_NG [-h] [--seqs SEQS] [--in_type IN_TYPE]\n\
  \                              [--output_name OUTPUT_NAME] [--outdir OUTDIR]\n \
  \                             [--model MODEL] [--all]\n                        \
  \      [--branch_length BRANCH_LENGTH]\n                              [--consense\
  \ CONSENSE] [--rand_tree RAND_TREE]\n                              [--pars_tree\
  \ PARS_TREE] [--user_tree USER_TREE]\n                              [--search] [--search_1random]\n\
  \                              [--constraint_tree CONSTRAINT_TREE]\n           \
  \                   [--outgroup OUTGROUP] [--bsconverge] [--bs_msa]\n          \
  \                    [--bs_trees BS_TREES]\n                              [--bs_tree_cutoff\
  \ BS_TREE_CUTOFF]\n                              [--bs_metric BS_METRIC] [--bootstrap]\
  \ [--check]\n                              [--log LOG] [--loglh] [--terrace] [--version]\n\
  \                              [--seed SEED] [--redo] [--keep_tmp] [--quiet]\n \
  \                             [--logfile LOGFILE] [--ncpu NCPU] [--debug]\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n\nInput/Output:\n\
  \  --seqs SEQS           Input alignment in FASTA or PHYLIP format\n  --in_type\
  \ IN_TYPE     File format: FASTA or PHYLIP (Default is FASTA)\n  --output_name OUTPUT_NAME\n\
  \                        Run name for trees\n  --outdir OUTDIR       Output directory\
  \ (default: .)\n\nRAxML-NG Options:\n  --model MODEL         Substitution model\
  \ OR path to partition file\n  --all                 Run bootstrap search and find\
  \ best ML tree (default:\n                        False)\n  --branch_length BRANCH_LENGTH\n\
  \                        Branch length estimation mode: linked, scaled,\n      \
  \                  unlinked (partitioned analysis only)\n  --consense CONSENSE \
  \  Consensus tree building options: STRICT, MR, or MRE\n  --rand_tree RAND_TREE\n\
  \                        Start from a random topology\n  --pars_tree PARS_TREE\n\
  \                        Start from a tree generated by the parsimony-based\n  \
  \                      randomized stepwise addition algorithm\n  --user_tree USER_TREE\n\
  \                        Load a custom starting tree from the NEWICK file\n  --search\
  \              Find best scoring ML tree (default) (default: False)\n  --search_1random\
  \      Find best scoring ML tree with 1 random tree (default:\n                \
  \        False)\n  --constraint_tree CONSTRAINT_TREE\n                        Specify\
  \ a constraint tree to e.g. enforce monophyly of\n                        certain\
  \ groups\n  --outgroup OUTGROUP   Outgroup(s) for tree\n  --bsconverge         \
  \ A posteriori bootstrap convergence test (default:\n                        False)\n\
  \  --bs_msa              Generate bootstrap replicate alignments (default:\n   \
  \                     False)\n  --bs_trees BS_TREES   Number of bootstrap trees\
  \ OR autoMRE\n  --bs_tree_cutoff BS_TREE_CUTOFF\n                        Change\
  \ the bootstopping cutoff value to make the test\n                        more or\
  \ less stringent\n  --bs_metric BS_METRIC\n                        Options: tbe\
  \ or fbp,tbe\n  --bootstrap           Run non-parametric bootstrap analysis (default:\
  \ False)\n  --check               Check alignment file and remove any columns consisting\n\
  \                        entirely of gaps (default: False)\n  --log LOG        \
  \     Options for output verbosity: ERROR, WARNING, RESULT,\n                  \
  \      INFO, PROGRESS, VERBOSE, or DEBUG\n  --loglh               Compute log-likelihood\
  \ of a given tree without any\n                        optimization (default: False)\n\
  \  --terrace             Check whether a tree lies on a phylogenetic terrace\n \
  \                       (default: False)\n  --seed SEED           Seed for random\
  \ numbers (default: 12345)\n  --redo                Run even if there are existing\
  \ files with the same\n                        name (use with caution!) (default:\
  \ False)\n\nSettings:\n  --version             Check RAxML-NG version ONLY (default:\
  \ False)\n  --keep_tmp            Keep temporary directory (default: False)\n  --quiet\
  \               Do not write output to console (silence stdout and\n           \
  \             stderr) (default: False)\n  --logfile LOGFILE     Append console output\
  \ to this file\n  --ncpu NCPU           Number of CPU to use (default: 1)\n  --debug\
  \               Print commands but do not run (default: False)\n"
generated_using:
- --help
docker_image:
