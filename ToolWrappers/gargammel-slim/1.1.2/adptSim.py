from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File

Adptsim_V0_1_0 = CommandToolBuilder(tool="adptSim", base_command=["adptSim"], inputs=[ToolInput(tag="in_arts", input_type=Boolean(optional=True), prefix="-arts", doc=InputDocumentation(doc="[out]           Output single-end reads as ART (unzipped fasta) (Default: /dev/null)")), ToolInput(tag="in_art_p", input_type=Boolean(optional=True), prefix="-artp", doc=InputDocumentation(doc="[out]           Output reads as ART (unzipped fasta) (Default: /dev/null)\nwith wrap-around for paired-end mode")), ToolInput(tag="in_fr", input_type=Boolean(optional=True), prefix="-fr", doc=InputDocumentation(doc="[out fwdr]      Output forward read as zipped fasta (Default: )")), ToolInput(tag="in_rr", input_type=Boolean(optional=True), prefix="-rr", doc=InputDocumentation(doc="[out rwdr]      Output reverse read as zipped fasta (Default: /dev/null)")), ToolInput(tag="in_bs", input_type=Boolean(optional=True), prefix="-bs", doc=InputDocumentation(doc="[BAM out]       Read BAM and write output as a single-end BAM (Default: fasta)")), ToolInput(tag="in_bp", input_type=Boolean(optional=True), prefix="-bp", doc=InputDocumentation(doc="[BAM out]       Read BAM and write output as a single-end BAM (Default: fasta)")), ToolInput(tag="in_produce_uncompressed_bam", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="Produce uncompressed BAM (good for unix pipe)")), ToolInput(tag="in_adapter_observed_forward", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[seq]                   Adapter that is observed after the forward read (Default:  AGATCGGAAG...)")), ToolInput(tag="in_adapter_observed_reverse", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[seq]                   Adapter that is observed after the reverse read (Default:  AGATCGGAAG...)")), ToolInput(tag="in_desired_read_length", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[length]                Desired read length  (Default:  100)")), ToolInput(tag="in_name", input_type=Boolean(optional=True), prefix="-name", doc=InputDocumentation(doc="Append BAM tags or to deflines if adapters are added (Default:  not on/not used)")), ToolInput(tag="in_append_string_default", input_type=Boolean(optional=True), prefix="-tag", doc=InputDocumentation(doc="[tag]                   Append this string to deflines or BAM tags (Default:  not on/not used)")), ToolInput(tag="in_append", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_13", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_and", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_length", input_type=Int(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_seq", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_splits", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_19", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_adapter", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_desired", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_program", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_the", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_them", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_into", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_reads", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_second", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_tags", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_that", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_31", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_a", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_is", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_single", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_string", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_two", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_observed", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_records", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_after", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_def_lines", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_reverse", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_single_end", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_containing", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_if", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_mode", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_read", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_a_dna", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_adapters", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_forward", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_are", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_fragments", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_added", input_type=String(), position=9, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/gargammel-slim:1.1.2--h68ad25a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Adptsim_V0_1_0().translate("wdl")

