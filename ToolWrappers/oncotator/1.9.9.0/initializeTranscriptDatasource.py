from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File

Initializetranscriptdatasource_V0_1_0 = CommandToolBuilder(tool="initializeTranscriptDatasource", base_command=["initializeTranscriptDatasource"], inputs=[ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="name of the datasource.  For example, ensembl.  Or GENCODE")), ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc="Filter to use from ['dummy', 'basic'].  For non-GENCODE ENSEMBL, this should be set to dummy. default: basic")), ToolInput(tag="in_protein_map_file", input_type=File(optional=True), prefix="--protein-map-file", doc=InputDocumentation(doc="Protein mapping file (a tsv with transcript ID to protein ID .... Typically, for ENSEMBL or GENCODE a file with ENST to ENSP mappings).\nThis utility can require a lot of RAM (~4GB for gencode.v18).\nCreation of a gencode datasource can require as much as two hours.\nNOTE about Filter:\nPlease see the filter option.  Since this defaults to a GENCODE specific filter, which can be problematic for\nENSEMBL-only.\nUse 'dummy' for ENSEMBL-only datasources\nUse 'basic' for GENCODE datasources, unless you want to annotate using every available transcript.\nNote that all transcripts are present in a datasource, so if a filter change is needed to a datasource that has\nalready been generated, you can edit the config file, instead of re-creating the entire datasource.\nIF you wish to have HGVS support, you must provide the protein mapping file (--protein-map-file).\n")), ToolInput(tag="in_gtf_files", input_type=String(), position=0, doc=InputDocumentation(doc="Location of the gtf files.  Multiple files can be specified as a comma separated list (e.g. file1,file2) without spaces ")), ToolInput(tag="in_fast_a_files", input_type=String(), position=1, doc=InputDocumentation(doc="Location of the fasta file (cDNA) associated with the gtf files.  Multiple files can be specified as a comma separated list (e.g. file1,file2) without spaces")), ToolInput(tag="in_output_dir", input_type=String(), position=2, doc=InputDocumentation(doc="Datasource output location.  This directory should NOT already exist.")), ToolInput(tag="in_genome_build", input_type=String(), position=3, doc=InputDocumentation(doc="Genome build -- this must be specified correctly by the user.  For example, hg19.")), ToolInput(tag="in_version", input_type=String(), position=4, doc=InputDocumentation(doc="version.  For example, v18"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Initializetranscriptdatasource_V0_1_0().translate("wdl", allow_empty_container=True)

