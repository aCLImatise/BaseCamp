!Command
command:
- AMAS.py
- replicate
positional:
- !Positional
  description: -c CORES, --cores CORES
  position: 0
  name: check
  optional: false
named:
- !Flag
  description: '{fasta,phylip,nexus,phylip-int,nexus-int} -d {aa,dna}'
  synonyms:
  - -i
  - -f
  args: !RepeatFlagArg
    name: IN_FILES
  optional: true
- !Flag
  description: "REPLICATE_ARGS, --rep-aln REPLICATE_ARGS REPLICATE_ARGS\nCreate replicate\
    \ data sets for phylogenetic jackknife\n[replicates, no alignments for each replicate]"
  synonyms:
  - -r
  args: !SimpleFlagArg
    name: REPLICATE_ARGS
  optional: true
- !Flag
  description: 'File format for the output alignment. Default: fasta'
  synonyms:
  - -u
  - --out-format
  args: !ChoiceFlagArg
    choices: !!set
      nexus-int:
      fasta:
      nexus:
      phylip:
      phylip-int:
  optional: true
- !Flag
  description: 'Check if input sequences are aligned. Default: no'
  synonyms:
  - -e
  - --check-align
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Alignment files to be taken as input. You can specify\nmultiple files\
    \ using wildcards (e.g. --in-files\n*fasta)"
  synonyms:
  - -i
  - --in-files
  args: !RepeatFlagArg
    name: IN_FILES
  optional: true
- !Flag
  description: The format of input alignment
  synonyms:
  - -f
  - --in-format
  args: !ChoiceFlagArg
    choices: !!set
      nexus-int:
      fasta:
      nexus:
      phylip:
      phylip-int:
  optional: true
- !Flag
  description: "Type of data\n"
  synonyms:
  - -d
  - --data-type
  args: !ChoiceFlagArg
    choices: !!set
      dna:
      aa:
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: AMAS.py [-h] -r REPLICATE_ARGS REPLICATE_ARGS\n               [-u\
  \ {fasta,phylip,nexus,phylip-int,nexus-int}] [-e] [-c CORES]\n               -i\
  \ IN_FILES [IN_FILES ...] -f\n               {fasta,phylip,nexus,phylip-int,nexus-int}\
  \ -d {aa,dna}\n\nCreate replicate datasets for phylogenetic jackknife\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  -r REPLICATE_ARGS\
  \ REPLICATE_ARGS, --rep-aln REPLICATE_ARGS REPLICATE_ARGS\n                    \
  \    Create replicate data sets for phylogenetic jackknife\n                   \
  \     [replicates, no alignments for each replicate]\n  -u {fasta,phylip,nexus,phylip-int,nexus-int},\
  \ --out-format {fasta,phylip,nexus,phylip-int,nexus-int}\n                     \
  \   File format for the output alignment. Default: fasta\n  -e, --check-align  \
  \   Check if input sequences are aligned. Default: no\n                        check\n\
  \  -c CORES, --cores CORES\n                        Number of cores used. Default:\
  \ 1\n\nrequired arguments:\n  -i IN_FILES [IN_FILES ...], --in-files IN_FILES [IN_FILES\
  \ ...]\n                        Alignment files to be taken as input. You can specify\n\
  \                        multiple files using wildcards (e.g. --in-files\n     \
  \                   *fasta)\n  -f {fasta,phylip,nexus,phylip-int,nexus-int}, --in-format\
  \ {fasta,phylip,nexus,phylip-int,nexus-int}\n                        The format\
  \ of input alignment\n  -d {aa,dna}, --data-type {aa,dna}\n                    \
  \    Type of data\n"
generated_using:
- --help
