from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Array, Boolean, Int

Concat_V0_1_0 = CommandToolBuilder(tool="concat", base_command=["concat"], inputs=[ToolInput(tag="in_file_wildcard", input_type=File(optional=True), prefix="--file_wildcard", doc=InputDocumentation(doc="wildcard specifying where files should be found (make\nsure to surround in quotes if calling from command\nline!) (default: None)")), ToolInput(tag="in_concat_direction", input_type=String(optional=True), prefix="--concat_direction", doc=InputDocumentation(doc="which direction to concatenate (default: None)")), ToolInput(tag="in_input_file_paths", input_type=Array(t=File(), optional=True), prefix="--input_filepaths", doc=InputDocumentation(doc="full paths to gct(x) files to be concatenated\n(default: None)")), ToolInput(tag="in_out_type", input_type=String(optional=True), prefix="--out_type", doc=InputDocumentation(doc="whether to save output as a gct or gctx (default:\ngctx)")), ToolInput(tag="in_out_name", input_type=File(optional=True), prefix="--out_name", doc=InputDocumentation(doc="what to name the output file (default: concated.gctx)")), ToolInput(tag="in_fields_to_remove", input_type=Array(t=String(), optional=True), prefix="--fields_to_remove", doc=InputDocumentation(doc="fields to remove from the common metadata (default:\n[])")), ToolInput(tag="in_remove_all_metadata_fields", input_type=Boolean(optional=True), prefix="--remove_all_metadata_fields", doc=InputDocumentation(doc="remove all metadata fields during operation (default:\nFalse)")), ToolInput(tag="in_reset_ids", input_type=Boolean(optional=True), prefix="--reset_ids", doc=InputDocumentation(doc="whether to reset ids (use this flag if ids are not\nunique) (default: False)")), ToolInput(tag="in_data_null", input_type=String(optional=True), prefix="-data_null", doc=InputDocumentation(doc="how to represent missing values in the data (default:\nNaN)")), ToolInput(tag="in_metadata_null", input_type=Int(optional=True), prefix="-metadata_null", doc=InputDocumentation(doc="how to represent missing values in the metadata\n(default: -666)")), ToolInput(tag="in_filler_null", input_type=Int(optional=True), prefix="-filler_null", doc=InputDocumentation(doc="what value to use for filling the top-left filler\nblock if output is a .gct (default: -666)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="whether to print a bunch of output (default: False)")), ToolInput(tag="in_error_report_output_file", input_type=File(optional=True), prefix="--error_report_output_file", doc=InputDocumentation(doc="destination file for writing out error report -\ncurrently information about inconsistent metadata\nfields in the common dimension of the concat operation\n(default: None)\n"))], outputs=[ToolOutput(tag="out_out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_name", type_hint=File()), doc=OutputDocumentation(doc="what to name the output file (default: concated.gctx)")), ToolOutput(tag="out_error_report_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_error_report_output_file", type_hint=File()), doc=OutputDocumentation(doc="destination file for writing out error report -\ncurrently information about inconsistent metadata\nfields in the common dimension of the concat operation\n(default: None)\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Concat_V0_1_0().translate("wdl", allow_empty_container=True)

