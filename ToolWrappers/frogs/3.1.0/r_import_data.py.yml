!Command
command:
- r_import_data.py
positional:
- !Positional
  optional: true
  position: 0
  name: RANKS
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --debug
  description: Keep temporary files to debug program.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --normalization
  description: "To normalize data before analysis. Use this option if\nyou didnt do\
    \ it in FROGS Abundance normalisation.\n[Default: False]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: "[RANKS [RANKS ...]], --ranks [RANKS [RANKS ...]]\nThe ordered taxonomic\
    \ ranks levels stored in BIOM.\nEach rank is separated by one space. [Default:\n\
    ['Kingdom', 'Phylum', 'Class', 'Order', 'Family',\n'Genus', 'Species']]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -b
  - --biomfile
  description: "path to standard biom file (format: biom1). These file\nis the result\
    \ of FROGS."
  args: !SimpleFlagArg
    name: BIOMFILE
- !Flag
  optional: true
  synonyms:
  - -s
  - --samplefile
  description: 'path to sample file (format: tabular).'
  args: !SimpleFlagArg
    name: SAMPLEFILE
- !Flag
  optional: true
  synonyms:
  - -t
  - --treefile
  description: "path to tree file from FROGS Tree (format: Newich\n\"nhx\" or \"nwk\"\
    \ )."
  args: !SimpleFlagArg
    name: TREEFILE
- !Flag
  optional: true
  synonyms:
  - --rdata
  description: "path to store phyloseq-class object in Rdata file.\n[Default: phyloseq_data.Rdata]"
  args: !SimpleFlagArg
    name: RDATA
- !Flag
  optional: true
  synonyms:
  - -o
  - --html
  description: "path to store resulting html file. [Default:\nsummary.html]"
  args: !SimpleFlagArg
    name: HTML
- !Flag
  optional: true
  synonyms:
  - -l
  - --log-file
  description: "This output file will contain several information on\nexecuted commands.\n"
  args: !SimpleFlagArg
    name: LOG_FILE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: r_import_data.py [-h] [--debug] [-n] [-r [RANKS [RANKS ...]]] -b\n\
  \                        BIOMFILE -s SAMPLEFILE [-t TREEFILE] [--rdata RDATA]\n\
  \                        [-o HTML] [-l LOG_FILE]\n\nLaunch Rmardown script to import\
  \ data from 3 files: biomfile, samplefile,\ntreefile into a phyloseq object\n\n\
  optional arguments:\n  -h, --help            show this help message and exit\n \
  \ --debug               Keep temporary files to debug program.\n  -n, --normalization\
  \   To normalize data before analysis. Use this option if\n                    \
  \    you didnt do it in FROGS Abundance normalisation.\n                       \
  \ [Default: False]\n  -r [RANKS [RANKS ...]], --ranks [RANKS [RANKS ...]]\n    \
  \                    The ordered taxonomic ranks levels stored in BIOM.\n      \
  \                  Each rank is separated by one space. [Default:\n            \
  \            ['Kingdom', 'Phylum', 'Class', 'Order', 'Family',\n               \
  \         'Genus', 'Species']]\n\nInputs:\n  -b BIOMFILE, --biomfile BIOMFILE\n\
  \                        path to standard biom file (format: biom1). These file\n\
  \                        is the result of FROGS.\n  -s SAMPLEFILE, --samplefile\
  \ SAMPLEFILE\n                        path to sample file (format: tabular).\n \
  \ -t TREEFILE, --treefile TREEFILE\n                        path to tree file from\
  \ FROGS Tree (format: Newich\n                        \"nhx\" or \"nwk\" ).\n\n\
  Outputs:\n  --rdata RDATA         path to store phyloseq-class object in Rdata file.\n\
  \                        [Default: phyloseq_data.Rdata]\n  -o HTML, --html HTML\
  \  path to store resulting html file. [Default:\n                        summary.html]\n\
  \  -l LOG_FILE, --log-file LOG_FILE\n                        This output file will\
  \ contain several information on\n                        executed commands.\n"
generated_using:
- --help
docker_image:
