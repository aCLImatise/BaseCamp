!Command
command:
- sga
- scaffold2fasta
positional:
- !Positional
  description: ''
  position: 0
  name: scaffold2fasta
  optional: false
named:
- !Flag
  description: display verbose output
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: read the contig sequences from FILE
  synonyms:
  - -f
  - --contig-file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: "read the contig string graph from FILE. This supercedes --contig-file\n\
    this is usually the output from the sga-assemble step"
  synonyms:
  - -a
  - --asqg-file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: do not output scaffolds that consist of a single contig
  synonyms:
  - --no-singletons
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'write the scaffolds to FILE (default: scaffolds.fa)'
  synonyms:
  - -o
  - --outfile
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: only output scaffolds longer than N bases
  synonyms:
  - -m
  - --min-length
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: output unplaced contigs that are larger than minLength
  synonyms:
  - --write-unplaced
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: write the name of contigs contained in the scaffold in the FASTA header
  synonyms:
  - --write-names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "separate contigs by at least N bases. All predicted gaps less\nthan\
    \ N will be extended to N (default: 25)"
  synonyms:
  - --min-gap-length
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: "attempt to merge contigs using predicted overlaps.\nThis can help\
    \ close gaps in the scaffolds but comes\nwith a small risk of collapsing tandem\
    \ repeats."
  synonyms:
  - --use-overlap
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "if an ASQG file is present, attempt to resolve the links\nbetween\
    \ contigs using walks through the graph. The MODE parameter\nis a string describing\
    \ the algorithm to use.\nThe MODE parameter must be one of best-any|best-unique|unique|none.\n\
    best-any: The walk with length closest to the estimated\ndistance between the\
    \ contigs will be chosen to resolve the gap.\nIf multiple best walks are found,\
    \ the tie is broken arbitrarily.\nbest-unique: as above but if there is a tie\
    \ no walk will be chosen.\nunique: only resolve the gap if there is a single walk\
    \ between the contigs\nnone: do not resolve gaps using the graph\nThe most conservative\
    \ most is unique, then best-unique with best-any being the most\naggressive. The\
    \ default is unique"
  synonyms:
  - -g
  - --graph-resolve
  args: !SimpleFlagArg
    name: MODE
  optional: true
- !Flag
  description: "Accept a walk as correctly resolving a gap if the walk length is within\
    \ T standard\ndeviations from the estimated distance (default: 3.0f)"
  synonyms:
  - -d
  - --distanceFactor
  args: !SimpleFlagArg
    name: T
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: display this help and exit
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: scaffold2fasta [OPTION] ... [-f CONTIGSFILE | -a ASQGFILE] SCAFFOLDFILE\n\
  Write out a fasta file for the scaffolds indicated in SCAFFOLDFILE\nOne of -f CONTIGSFILE\
  \ or -a ASQGFILE must be provided. If an asqg file is provided,\nthe program can\
  \ attempt to determine the sequence linking the scaffold components by\nwalking\
  \ the graph/\n\n      --help                           display this help and exit\n\
  \      -v, --verbose                    display verbose output\n      -f, --contig-file=FILE\
  \           read the contig sequences from FILE\n      -a, --asqg-file=FILE    \
  \         read the contig string graph from FILE. This supercedes --contig-file\n\
  \                                       this is usually the output from the sga-assemble\
  \ step\n          --no-singletons              do not output scaffolds that consist\
  \ of a single contig\n      -o, --outfile=FILE               write the scaffolds\
  \ to FILE (default: scaffolds.fa)\n      -m, --min-length=N               only output\
  \ scaffolds longer than N bases\n          --write-unplaced             output unplaced\
  \ contigs that are larger than minLength\n          --write-names              \
  \  write the name of contigs contained in the scaffold in the FASTA header\n   \
  \       --min-gap-length=N           separate contigs by at least N bases. All predicted\
  \ gaps less\n                                       than N will be extended to N\
  \ (default: 25)\n          --use-overlap                attempt to merge contigs\
  \ using predicted overlaps.\n                                       This can help\
  \ close gaps in the scaffolds but comes\n                                      \
  \ with a small risk of collapsing tandem repeats.\n      -g, --graph-resolve=MODE\
  \         if an ASQG file is present, attempt to resolve the links\n           \
  \                            between contigs using walks through the graph. The\
  \ MODE parameter\n                                       is a string describing\
  \ the algorithm to use.\n                                       The MODE parameter\
  \ must be one of best-any|best-unique|unique|none.\n                           \
  \            best-any: The walk with length closest to the estimated\n         \
  \                              distance between the contigs will be chosen to resolve\
  \ the gap.\n                                       If multiple best walks are found,\
  \ the tie is broken arbitrarily.\n                                       best-unique:\
  \ as above but if there is a tie no walk will be chosen.\n                     \
  \                  unique: only resolve the gap if there is a single walk between\
  \ the contigs\n                                       none: do not resolve gaps\
  \ using the graph\n                                       The most conservative\
  \ most is unique, then best-unique with best-any being the most\n              \
  \                         aggressive. The default is unique\n      -d, --distanceFactor=T\
  \           Accept a walk as correctly resolving a gap if the walk length is within\
  \ T standard \n                                       deviations from the estimated\
  \ distance (default: 3.0f)\n\nReport bugs to js18@sanger.ac.uk\n\n"
generated_using:
- --help
