from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Directory, String

Schicdemultiplex_V0_1_0 = CommandToolBuilder(tool="scHicDemultiplex", base_command=["scHicDemultiplex"], inputs=[ToolInput(tag="in_fastq_files_demultiplex_files", input_type=Int(optional=True), prefix="--fastq", doc=InputDocumentation(doc="of fastq files to demultiplex [list of fastq files to demultiplex ...], -f list of fastq files to demultiplex [list of fastq files to demultiplex ...]\nThe fastq files to demultiplex of Nagano 2017 Cell\ncycle dynamics of chromosomal organization at single-\ncell resolutionGEO: GSE94489. Files need to have four\nFASTQ lines per read:/1 forward; /2 barcode forward;\n/3 bardcode reverse; /4 reverse read.Please be aware\nthe files can be downloaded via the command fastq-dump\nto be in the right format:fastq-dump --accession\nSRR5229025 --split-files --defline-seq\n'@$sn[_$rn]/$ri' --defline-qual '+' --split-spot\n--stdout SRR5229025 > SRR5229025.fastq (default: None)")), ToolInput(tag="in_barcode_file", input_type=File(optional=True), prefix="--barcodeFile", doc=InputDocumentation(doc="of fastq files to demultiplex. Use GSE94489_README.txt file., -bf list of fastq files to demultiplex. Use GSE94489_README.txt file.\nThe fastq files to demultiplex (default: None)")), ToolInput(tag="in_srr_to_sample_file", input_type=File(optional=True), prefix="--srrToSampleFile", doc=InputDocumentation(doc="The mappings from SRR number to sample id as given in\nthe barcode file. (default: None)")), ToolInput(tag="in_output_folder", input_type=Directory(optional=True), prefix="--outputFolder", doc=InputDocumentation(doc="Path of folder to save the demultiplexed files\n(default: demultiplexed)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads. Using the python multiprocessing\nmodule. (default: 4)")), ToolInput(tag="in_buffer_size", input_type=Int(optional=True), prefix="--bufferSize", doc=InputDocumentation(doc="Number of lines to buffer in memory, if full, write\nthe data to disk. (default: 20000000.0)")), ToolInput(tag="in_of", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_7", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_demultiplex", input_type=String(), position=4, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Schicdemultiplex_V0_1_0().translate("wdl", allow_empty_container=True)

