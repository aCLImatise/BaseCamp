from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Metaxa2_Rf_V0_1_0 = CommandToolBuilder(tool="metaxa2_rf", base_command=["metaxa2_rf"], inputs=[ToolInput(tag="in_metaxa_taxonomy_output", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc=": Metaxa taxonomy output file to process (*.taxonomy.txt)")), ToolInput(tag="in_base_name_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": Base for the name of output file(s)")), ToolInput(tag="in_include_only_classifications", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc=": Include only classifications of this type(s)\n(several can be comma-separated), default is all")), ToolInput(tag="in_reliability_cutoff_entries", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc=": Reliability cutoff, entries below cutoff will be classified as 'unknown', default = 0")), ToolInput(tag="in_length_cutoff_bp", input_type=String(optional=True), prefix="-l", doc=InputDocumentation(doc=": Length cutoff (in bp) of best hit, entries below cutoff will be classified as 'unknown', default = 50")), ToolInput(tag="in_identity_cutoff_best", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc=": Identity cutoff of best hit (in percent), entries below cutoff will be classified as 'unknown', default = 0")), ToolInput(tag="in_maximum_resolution_level", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc=": Maximum resolution level for taxonomic traversal, zero is unlimited, default = 0")), ToolInput(tag="in_minimum_resolution_level", input_type=String(optional=True), prefix="-n", doc=InputDocumentation(doc=": Minimum resolution level for taxonomic traversal, starting at level 1, default = 1")), ToolInput(tag="in_investigate_only_level", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc=": Investigate only the last taxonomic level (in good cases species resolution), default is off (F)")), ToolInput(tag="in_treat_unclassified_entries", input_type=String(optional=True), prefix="-u", doc=InputDocumentation(doc=": Treat unclassified entries as unknowns, default is off (F), which will use as much taxonomic information as possible")), ToolInput(tag="in_remove_na", input_type=String(optional=True), prefix="--remove_na", doc=InputDocumentation(doc=": Set sequence entries with no blast hits to 'Unknown', default is on (T)")), ToolInput(tag="in_model", input_type=String(optional=True), prefix="--model", doc=InputDocumentation(doc=": the model used for estimating species richness, 'all' will output data for all three models, default = bengtsson-palme (b-p)")), ToolInput(tag="in_re_samples", input_type=String(optional=True), prefix="--resamples", doc=InputDocumentation(doc=": number of resamplings, default = 1000")), ToolInput(tag="in_write", input_type=String(optional=True), prefix="--write", doc=InputDocumentation(doc=": write interval in the output, default = 1")), ToolInput(tag="in_size", input_type=String(optional=True), prefix="--size", doc=InputDocumentation(doc=": total number of sequences, by default this is set to the sum of all counts")), ToolInput(tag="in_scale", input_type=String(optional=True), prefix="--scale", doc=InputDocumentation(doc=": scales all the samples to have this number of sequences")), ToolInput(tag="in_exclude_rows", input_type=String(optional=True), prefix="--exclude_rows", doc=InputDocumentation(doc=": a comma-separated list of rows to NOT include in the analysis")), ToolInput(tag="in_ace_rare", input_type=String(optional=True), prefix="--ace_rare", doc=InputDocumentation(doc=": the rare taxa cutoff used for the ACE estimator, default = 10")), ToolInput(tag="in_summary", input_type=String(optional=True), prefix="--summary", doc=InputDocumentation(doc=": Summary of results output, on (T) by default")), ToolInput(tag="in_lists", input_type=String(optional=True), prefix="--lists", doc=InputDocumentation(doc=": Output lists of counts for different taxa, one for each traversal level, on (T) by default")), ToolInput(tag="in_separate", input_type=String(optional=True), prefix="--separate", doc=InputDocumentation(doc=": Outputs rarefaction analysis results separately for the different origins, on (T) by default")), ToolInput(tag="in_unknown", input_type=String(optional=True), prefix="--unknown", doc=InputDocumentation(doc=": Outputs a list of entries designated as unknowns, with their statistics, off (F) by default")), ToolInput(tag="in_sampled", input_type=String(optional=True), prefix="--sampled", doc=InputDocumentation(doc=": Output lists of the number of individuals sampled for different taxa, one for each traversal level, off (F) by default")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc=": displays this help message")), ToolInput(tag="in_bugs", input_type=Boolean(optional=True), prefix="--bugs", doc=InputDocumentation(doc=": displays the bug fixes and known bugs in this version of Metaxa")), ToolInput(tag="in_license", input_type=Boolean(optional=True), prefix="--license", doc=InputDocumentation(doc=": displays licensing information"))], outputs=[ToolOutput(tag="out_metaxa_taxonomy_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_metaxa_taxonomy_output", type_hint=File()), doc=OutputDocumentation(doc=": Metaxa taxonomy output file to process (*.taxonomy.txt)")), ToolOutput(tag="out_base_name_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_base_name_output", type_hint=File()), doc=OutputDocumentation(doc=": Base for the name of output file(s)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metaxa2_Rf_V0_1_0().translate("wdl", allow_empty_container=True)

