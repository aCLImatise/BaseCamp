!Command
command:
- sortmerna
positional: []
named:
- !Flag
  description: "PATH        Required  Reference file (FASTA) absolute or relative\
    \ path.\nUse mutliple times, once per a reference file"
  synonyms:
  - --ref
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "PATH        Required  Raw reads file (FASTA/FASTQ/FASTA.GZ/FASTQ.GZ).\n\
    Use twice for files with paired reads"
  synonyms:
  - --reads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "PATH        Optional  Directory for storing Reference index,     \
    \ USRDIR/sortmerna/run/\nKey-value database, and the output.\nDefault structure:\n\
    WORKDIR/\nidx/\nkvdb/\nout/"
  synonyms:
  - --workdir
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "PATH        Optional  Directory for storing Key-value database   \
    \ WORKDIR/kvdb\nKVDB is used for storing alignement results."
  synonyms:
  - --kvdb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: PATH        Optional  Directory for storing Reference index.      WORKDIR/idx
  synonyms:
  - --idx
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Output aligned reads into FASTA/FASTQ file
  synonyms:
  - --fastx
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Output SAM alignment for aligned reads.
  synonyms:
  - --sam
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Add SQ tags to the SAM file
  synonyms:
  - --SQ
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "STRING      Optional  output alignments in various Blast-like formats\n\
    '0'                    - pairwise\n'1'                    - tabular(Blast - m\
    \ 8 format)\n'1 cigar'              - tabular + column for CIGAR\n'1 cigar qcov'\
    \         - tabular + columns for CIGAR\nand query coverage\n'1 cigar qcov qstrand'\
    \ - tabular + columns for CIGAR,\nquery coverage and strand"
  synonyms:
  - --blast
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "STRING/BOOL Optional  Aligned reads file prefix [dir/][pfx]      \
    \ WORKDIR/out/aligned\nDirectory and file prefix for aligned output i.e.\neach\
    \ output file will go into the specified directory with the given prefix.\nThe\
    \ appropriate extension (fasta|fastq|blast|sam|etc) will be automatically added.\n\
    Both 'dir' and 'pfx' are optional.\nThe 'dir' can be a relative or an absolute\
    \ path.\nIf 'dir' is not specified, the output will be created in the WORKDIR/out/\n\
    If 'pfx' is not specified, the prefix 'aligned' will be used\nExamples:\n-aligned\
    \ $MYDIR/dir_1/dir_2/1 -> $MYDIR/dir_1/dir_2/1.fasta\n-aligned dir_1/apfx    \
    \       -> $PWD/dir_1/apfx.fasta\n-aligned dir_1/               -> $PWD/aligned.fasta\n\
    -aligned apfx                 -> $PWD/apfx.fasta\n-aligned  (no argument)    \
    \   -> WORKDIR/out/aligned.fasta"
  synonyms:
  - --aligned
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "STRING/BOOL Optional  Non-aligned reads file prefix [dir/][pfx]  \
    \ WORKDIR/out/other\nMust be used with 'fastx'.\nDirectory and file prefix for\
    \ non-aligned output i.e.\neach output file will go into the specified directory\
    \ with the given prefix.\nThe appropriate extension (fasta|fastq|blast|sam|etc)\
    \ will be automatically added.\nBoth 'dir' and 'pfx' are optional.\nThe 'dir'\
    \ can be a relative or an absolute path.\nIf 'dir' is not specified, the output\
    \ will be created in the WORKDIR/out/\nIf 'pfx' is not specified, the prefix 'other'\
    \ will be used\nExamples:\n-other $MYDIR/dir_1/dir_2/1 -> $MYDIR/dir_1/dir_2/1.fasta\n\
    -other dir_1/apfx           -> $PWD/dir_1/apfx.fasta\n-other dir_1/          \
    \     -> $PWD/dir_1/other.fasta\n-other apfx                 -> $PWD/apfx.fasta\n\
    -other  (no argument)       -> aligned_out/other.fasta\ni.e. the same output directory\
    \ as used\nfor aligned output"
  synonyms:
  - --other
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Positive integer (INT >=0).\nReport first INT\
    \ alignments per read reaching E-value\nIf INT = 0, all alignments will be output"
  synonyms:
  - --num_alignments
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Report INT best alignments per read reaching\
    \ E-value    1\nby searching --min_lis INT candidate alignments\nIf INT == 0:\
    \ search All candidate alignments\nIf INT > 0: search INT best alignments.\nThe\
    \ larger is the INT, the longer is the search time.\nExplanation:\nA read can\
    \ potentially be aligned (reaching E-value threshold)\nto multiple reference sequences.\n\
    The 'best' alignment is an alignment that is better\nthan the previously found\
    \ alignments.\nThe very first found alignment is automatically the best alignment\n\
    until a better one is found."
  synonyms:
  - --best
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Search all alignments having the first INT longest\
    \ LIS\nLIS stands for Longest Increasing Subsequence,\nit is computed using seeds'\
    \ positions to expand hits into\nlonger matches prior to Smith - Waterman alignment.\n\
    Requires option 'best'.\nMutually exclusive with option 'num_alignments'"
  synonyms:
  - --min_lis
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Optional  Output null alignment strings for non-aligned reads    \
    \ False\nto SAM and/or BLAST tabular files"
  synonyms:
  - --print_all_reads
  args: !SimpleFlagArg
    name: BOOL
  optional: true
- !Flag
  description: "BOOL        Optional  Indicates a Single reads file with paired reads\
    \         False\nIf a single reads file with paired reads is used,\nand neither\
    \ 'paired_in' nor 'paired_out' are specified,\nuse this option together with 'out2'\
    \ to output\nFWD and REV reads into separate files"
  synonyms:
  - --paired
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "BOOL        Optional  If one of the paired-end reads is Aligned, \
    \             False\nput both reads into Aligned FASTA/Q file\nMust be used with\
    \ 'fastx'.\nMutually exclusive with 'paired_out'."
  synonyms:
  - --paired_in
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "BOOL        Optional  If one of the paired-end reads is Non-aligned,\
    \          False\nput both reads into Non-Aligned FASTA/Q file\nMust be used with\
    \ 'fastx'.\nMutually exclusive with 'paired_in'."
  synonyms:
  - --paired_out
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "BOOL        Optional  Output paired reads into separate files.   \
    \             False\nMust be used with 'fastx'.\nIgnored without either of 'paired_in'\
    \ |\n'paired_out' | 'paired' | two 'reads'"
  synonyms:
  - --out2
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT         Optional  SW score (positive integer) for a match.                2
  synonyms:
  - --match
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT         Optional  SW penalty (negative integer) for a mismatch.          -3
  synonyms:
  - --mismatch
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT         Optional  SW penalty (positive integer) for introducing
    a gap.    5
  synonyms:
  - --gap_open
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT         Optional  SW penalty (positive integer) for extending a
    gap.      2
  synonyms:
  - --gap_ext
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "DOUBLE      Optional  E-value threshold.                         \
    \             1\nDefines the 'statistical significance' of a local alignment.\n\
    Exponentially correllates with the Minimal Alignment Score.\nHigher E-values (100,\
    \ 1000, ...) cause More reads\nto Pass the alignment threshold"
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Search only the forward strand.                         False
  synonyms:
  - -F
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "BOOL        Optional  SW penalty for ambiguous letters (N's) scored\n\
    as --mismatch"
  synonyms:
  - -N
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Search only the reverse-complementary strand.           False
  synonyms:
  - -R
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  %%id similarity threshold (the alignment   \
    \             0.97\nmust still pass the E-value threshold)."
  synonyms:
  - --id
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  %%query coverage threshold (the alignment must\
    \          0.97\nstill pass the E-value threshold)"
  synonyms:
  - --coverage
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "BOOL        Optional  FASTA/FASTQ file for reads matching database\
    \ < %%id     False\n(set using --id) and < %%cov (set using --coverage)\n(alignment\
    \ must still pass the E-value threshold)."
  synonyms:
  - --de_novo_otu
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Output OTU map (input to QIIME's make_otu_table.py).    False
  synonyms:
  - --otu_map
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT,INT,INT Optional  Three intervals at which to place the seed on\
    \ the read  L,L/2,3\n(L is the seed length)"
  synonyms:
  - --passes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Number (or percent if INT followed by %% sign)\
    \ of       4\nnucleotides to add to each edge of the read\nprior to SW local alignment"
  synonyms:
  - --edges
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "BOOL        Optional  Number of seeds matched before searching   \
    \             2\nfor candidate LIS"
  synonyms:
  - --num_seeds
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Search for all 0-error and 1-error seed    \
    \             False\nmatches in the index rather than stopping\nafter finding\
    \ a 0-error match (<1%% gain in\nsensitivity with up four-fold decrease in speed)"
  synonyms:
  - --full_search
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Add pid to output file names.                           False
  synonyms:
  - --pid
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  DEPRECATED in favour of '-threads'. Number of\
    \           numCores\nprocessing threads to use.\nAutomatically redirects to '-threads'"
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT         Optional  Number of Processing threads to use                     numCores
  synonyms:
  - --threads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'DOUBLE      Optional  Indexing: seed length.                                  18'
  synonyms:
  - -L
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "DOUBLE      Optional  Indexing: the amount of memory (in Mbytes) for\
    \ building 3072\nthe index."
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Produce verbose output when building the index          True
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Indexing: Positive integer: index every Nth\
    \ L-mer in    1\nthe reference database e.g. '-interval 2'."
  synonyms:
  - --interval
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Indexing: maximum (integer) number of positions\
    \ to store  1000\nfor each unique L-mer. If 0 all positions are stored."
  synonyms:
  - --max_pos
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional
  synonyms:
  - --dbg_put_db
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: BOOL        Optional  Launch an interactive session (command prompt)          False
  synonyms:
  - --cmd
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "INT         Optional  Processing Task:                           \
    \             4\n0 - align. Only perform alignment\n1 - post-processing (log writing)\n\
    2 - generate reports\n3 - align and post-process\n4 - all\n"
  synonyms:
  - --task
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: BOOL        Optional  Print help information
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: BOOL        Optional  Print SortMeRNA version number
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "\n[process:1369] === Options processing starts ... ===\n\nFound value:\
  \ sortmerna\nFound flag: --help\nMissing required flag: ref\nMissing required flag:\
  \ reads\n[process:1453] Processing option: help with value: \n  Usage:   sortmerna\
  \ --ref FILE [--ref FILE] --reads FWD_READS [--reads REV_READS] [OPTIONS]:\n  -------------------------------------------------------------------------------------------------------------\n\
  \  | option            type-format           description                       \
  \                     default    |\n  -------------------------------------------------------------------------------------------------------------\n\
  \n    [REQUIRED]\n    --ref             PATH        Required  Reference file (FASTA)\
  \ absolute or relative path.\n                                            Use mutliple\
  \ times, once per a reference file\n\n    --reads           PATH        Required\
  \  Raw reads file (FASTA/FASTQ/FASTA.GZ/FASTQ.GZ).\n                           \
  \                 Use twice for files with paired reads\n\n\n    [COMMON]\n    --workdir\
  \         PATH        Optional  Directory for storing Reference index,      USRDIR/sortmerna/run/\n\
  \                                            Key-value database, and the output.\n\
  \                                            Default structure:\n              \
  \                                WORKDIR/\n                                    \
  \             idx/\n                                                 kvdb/\n   \
  \                                              out/\n\n    --kvdb            PATH\
  \        Optional  Directory for storing Key-value database    WORKDIR/kvdb\n  \
  \                                          KVDB is used for storing alignement results.\n\
  \n    --idx             PATH        Optional  Directory for storing Reference index.\
  \      WORKDIR/idx\n                                            \n\n    --fastx\
  \           BOOL        Optional  Output aligned reads into FASTA/FASTQ file\n \
  \   --sam             BOOL        Optional  Output SAM alignment for aligned reads.\n\
  \n    --SQ              BOOL        Optional  Add SQ tags to the SAM file\n\n  \
  \  --blast           STRING      Optional  output alignments in various Blast-like\
  \ formats\n                                            '0'                    -\
  \ pairwise\n                                            '1'                    -\
  \ tabular(Blast - m 8 format)\n                                            '1 cigar'\
  \              - tabular + column for CIGAR\n                                  \
  \          '1 cigar qcov'         - tabular + columns for CIGAR\n              \
  \                                                       and query coverage\n   \
  \                                         '1 cigar qcov qstrand' - tabular + columns\
  \ for CIGAR,\n                                                                 \
  \    query coverage and strand\n\n    --aligned         STRING/BOOL Optional  Aligned\
  \ reads file prefix [dir/][pfx]       WORKDIR/out/aligned\n                    \
  \                        Directory and file prefix for aligned output i.e.\n   \
  \                                         each output file will go into the specified\
  \ directory with the given prefix.\n                                           \
  \ The appropriate extension (fasta|fastq|blast|sam|etc) will be automatically added.\n\
  \                                            Both 'dir' and 'pfx' are optional.\n\
  \                                            The 'dir' can be a relative or an absolute\
  \ path.\n                                            If 'dir' is not specified,\
  \ the output will be created in the WORKDIR/out/\n                             \
  \               If 'pfx' is not specified, the prefix 'aligned' will be used\n \
  \                                           Examples:\n                        \
  \                     -aligned $MYDIR/dir_1/dir_2/1 -> $MYDIR/dir_1/dir_2/1.fasta\n\
  \                                             -aligned dir_1/apfx           -> $PWD/dir_1/apfx.fasta\n\
  \                                             -aligned dir_1/               -> $PWD/aligned.fasta\n\
  \                                             -aligned apfx                 -> $PWD/apfx.fasta\n\
  \                                             -aligned  (no argument)       -> WORKDIR/out/aligned.fasta\n\
  \n    --other           STRING/BOOL Optional  Non-aligned reads file prefix [dir/][pfx]\
  \   WORKDIR/out/other\n                                            Must be used\
  \ with 'fastx'.\n                                            Directory and file\
  \ prefix for non-aligned output i.e.\n                                         \
  \   each output file will go into the specified directory with the given prefix.\n\
  \                                            The appropriate extension (fasta|fastq|blast|sam|etc)\
  \ will be automatically added.\n                                            Both\
  \ 'dir' and 'pfx' are optional.\n                                            The\
  \ 'dir' can be a relative or an absolute path.\n                               \
  \             If 'dir' is not specified, the output will be created in the WORKDIR/out/\n\
  \                                            If 'pfx' is not specified, the prefix\
  \ 'other' will be used\n                                            Examples:\n\
  \                                             -other $MYDIR/dir_1/dir_2/1 -> $MYDIR/dir_1/dir_2/1.fasta\n\
  \                                             -other dir_1/apfx           -> $PWD/dir_1/apfx.fasta\n\
  \                                             -other dir_1/               -> $PWD/dir_1/other.fasta\n\
  \                                             -other apfx                 -> $PWD/apfx.fasta\n\
  \                                             -other  (no argument)       -> aligned_out/other.fasta\n\
  \                                                                            i.e.\
  \ the same output directory as used\n                                          \
  \                                  for aligned output\n\n    --num_alignments  INT\
  \         Optional  Positive integer (INT >=0).\n                              \
  \              Report first INT alignments per read reaching E-value\n         \
  \                                   If INT = 0, all alignments will be output\n\n\
  \    --best            INT         Optional  Report INT best alignments per read\
  \ reaching E-value    1\n                                            by searching\
  \ --min_lis INT candidate alignments\n                                         \
  \   If INT == 0: search All candidate alignments\n                             \
  \               If INT > 0: search INT best alignments.\n                      \
  \                      The larger is the INT, the longer is the search time.\n \
  \                                           Explanation:\n                     \
  \                       A read can potentially be aligned (reaching E-value threshold)\n\
  \                                            to multiple reference sequences.\n\
  \                                            The 'best' alignment is an alignment\
  \ that is better\n                                            than the previously\
  \ found alignments.\n                                            The very first\
  \ found alignment is automatically the best alignment\n                        \
  \                    until a better one is found.\n\n    --min_lis         INT \
  \        Optional  Search all alignments having the first INT longest LIS\n    \
  \                                        LIS stands for Longest Increasing Subsequence,\n\
  \                                            it is computed using seeds' positions\
  \ to expand hits into\n                                            longer matches\
  \ prior to Smith - Waterman alignment.\n                                       \
  \     Requires option 'best'.\n                                            Mutually\
  \ exclusive with option 'num_alignments'\n\n    --print_all_reads BOOL        Optional\
  \  Output null alignment strings for non-aligned reads     False\n             \
  \                               to SAM and/or BLAST tabular files\n\n    --paired\
  \          BOOL        Optional  Indicates a Single reads file with paired reads\
  \         False\n                                            If a single reads file\
  \ with paired reads is used,\n                                            and neither\
  \ 'paired_in' nor 'paired_out' are specified,\n                                \
  \            use this option together with 'out2' to output\n                  \
  \                          FWD and REV reads into separate files\n\n    --paired_in\
  \       BOOL        Optional  If one of the paired-end reads is Aligned,       \
  \       False\n                                            put both reads into Aligned\
  \ FASTA/Q file\n                                            Must be used with 'fastx'.\n\
  \                                            Mutually exclusive with 'paired_out'.\n\
  \n    --paired_out      BOOL        Optional  If one of the paired-end reads is\
  \ Non-aligned,          False\n                                            put both\
  \ reads into Non-Aligned FASTA/Q file\n                                        \
  \    Must be used with 'fastx'.\n                                            Mutually\
  \ exclusive with 'paired_in'.\n\n    --out2            BOOL        Optional  Output\
  \ paired reads into separate files.                False\n                     \
  \                       Must be used with 'fastx'.\n                           \
  \                 Ignored without either of 'paired_in' |\n                    \
  \                        'paired_out' | 'paired' | two 'reads'\n\n    --match  \
  \         INT         Optional  SW score (positive integer) for a match.       \
  \         2\n\n    --mismatch        INT         Optional  SW penalty (negative\
  \ integer) for a mismatch.          -3\n\n    --gap_open        INT         Optional\
  \  SW penalty (positive integer) for introducing a gap.    5\n\n    --gap_ext  \
  \       INT         Optional  SW penalty (positive integer) for extending a gap.\
  \      2\n\n    -e                DOUBLE      Optional  E-value threshold.     \
  \                                 1\n                                          \
  \  Defines the 'statistical significance' of a local alignment.\n              \
  \                              Exponentially correllates with the Minimal Alignment\
  \ Score.\n                                            Higher E-values (100, 1000,\
  \ ...) cause More reads\n                                            to Pass the\
  \ alignment threshold\n\n    -F                BOOL        Optional  Search only\
  \ the forward strand.                         False\n\n    -N                BOOL\
  \        Optional  SW penalty for ambiguous letters (N's) scored\n             \
  \                               as --mismatch\n\n    -R                BOOL    \
  \    Optional  Search only the reverse-complementary strand.           False\n\n\
  \n    [OTU_PICKING]\n    --id              INT         Optional  %%id similarity\
  \ threshold (the alignment                0.97\n                               \
  \             must still pass the E-value threshold).\n\n    --coverage        INT\
  \         Optional  %%query coverage threshold (the alignment must          0.97\n\
  \                                            still pass the E-value threshold)\n\
  \n    --de_novo_otu     BOOL        Optional  FASTA/FASTQ file for reads matching\
  \ database < %%id     False\n                                            (set using\
  \ --id) and < %%cov (set using --coverage)\n                                   \
  \         (alignment must still pass the E-value threshold).\n\n    --otu_map  \
  \       BOOL        Optional  Output OTU map (input to QIIME's make_otu_table.py).\
  \    False\n\n\n    [ADVANCED]\n    --passes          INT,INT,INT Optional  Three\
  \ intervals at which to place the seed on the read  L,L/2,3\n                  \
  \                          (L is the seed length)\n\n    --edges           INT \
  \        Optional  Number (or percent if INT followed by %% sign) of       4\n \
  \                                           nucleotides to add to each edge of the\
  \ read\n                                            prior to SW local alignment\n\
  \n    --num_seeds       BOOL        Optional  Number of seeds matched before searching\
  \                2\n                                            for candidate LIS\n\
  \n    --full_search     INT         Optional  Search for all 0-error and 1-error\
  \ seed                 False\n                                            matches\
  \ in the index rather than stopping\n                                          \
  \  after finding a 0-error match (<1%% gain in\n                               \
  \             sensitivity with up four-fold decrease in speed)\n\n    --pid    \
  \         BOOL        Optional  Add pid to output file names.                  \
  \         False\n\n    -a                INT         Optional  DEPRECATED in favour\
  \ of '-threads'. Number of           numCores\n                                \
  \            processing threads to use.\n                                      \
  \      Automatically redirects to '-threads'\n\n    --threads         INT      \
  \   Optional  Number of Processing threads to use                     numCores\n\
  \n\n    [INDEXING]\n    -L                DOUBLE      Optional  Indexing: seed length.\
  \                                  18\n\n    -m                DOUBLE      Optional\
  \  Indexing: the amount of memory (in Mbytes) for building 3072\n              \
  \                              the index.\n\n    -v                BOOL        Optional\
  \  Produce verbose output when building the index          True\n\n    --interval\
  \        INT         Optional  Indexing: Positive integer: index every Nth L-mer\
  \ in    1\n                                            the reference database e.g.\
  \ '-interval 2'.\n\n    --max_pos         INT         Optional  Indexing: maximum\
  \ (integer) number of positions to store  1000\n                               \
  \             for each unique L-mer. If 0 all positions are stored.\n\n\n    [HELP]\n\
  \    -h                BOOL        Optional  Print help information\n\n    --version\
  \         BOOL        Optional  Print SortMeRNA version number\n\n\n    [DEVELOPER]\n\
  \    --dbg_put_db      BOOL        Optional  \n    --cmd             BOOL      \
  \  Optional  Launch an interactive session (command prompt)          False\n\n \
  \   --task            INT         Optional  Processing Task:                   \
  \                     4\n                                            0 - align.\
  \ Only perform alignment\n                                            1 - post-processing\
  \ (log writing)\n                                            2 - generate reports\n\
  \                                            3 - align and post-process\n      \
  \                                      4 - all\n\n"
generated_using:
- --help
