!Command
command:
- run_midas.py
- genes
positional:
- !Positional
  description: "Path to directory to store results. \nDirectory name should correspond\
    \ to sample identifier"
  position: 0
  name: outdir
  optional: false
named:
- !Flag
  description: "Remove intermediate files generated by MIDAS (False).\nUseful to reduce\
    \ disk space of MIDAS output"
  synonyms:
  - --remove_temp
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Build bowtie2 database of pangenomes
  synonyms:
  - --build_db
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Align reads to pangenome database
  synonyms:
  - --align
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Compute coverage of genes in pangenome database
  synonyms:
  - --call_genes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Path to reference database\nBy default, the MIDAS_DB environmental\
    \ variable is used"
  synonyms:
  - -d
  args: !SimpleFlagArg
    name: DB
  optional: true
- !Flag
  description: Include species with >X coverage (3.0)
  synonyms:
  - --species_cov
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: Include top N most abundant species
  synonyms:
  - --species_topn
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Include specified species. Separate ids with a comma
  synonyms:
  - --species_id
  args: !SimpleFlagArg
    name: CHAR
  optional: true
- !Flag
  description: "FASTA/FASTQ file containing 1st mate if using paired-end reads.\n\
    Otherwise FASTA/FASTQ containing unpaired reads.\nCan be gzip'ed (extension: .gz)\
    \ or bzip2'ed (extension: .bz2)"
  synonyms:
  - '-1'
  args: !SimpleFlagArg
    name: M1
  optional: true
- !Flag
  description: "FASTA/FASTQ file containing 2nd mate if using paired-end reads.\n\
    Can be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2)"
  synonyms:
  - '-2'
  args: !SimpleFlagArg
    name: M2
  optional: true
- !Flag
  description: FASTA/FASTQ file in -1 are paired and contain forward AND reverse reads
  synonyms:
  - --interleaved
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Alignment speed/sensitivity (very-sensitive)
  synonyms:
  - -s
  args: !ChoiceFlagArg
    choices: !!set
      fast:
      very-sensitive:
      sensitive:
      very-fast:
  optional: true
- !Flag
  description: Global/local read alignment (local)
  synonyms:
  - -m
  args: !ChoiceFlagArg
    choices: !!set
      global:
      local:
  optional: true
- !Flag
  description: '# reads to use from input file(s) (use all)'
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: MAX_READS
  optional: true
- !Flag
  description: Number of threads to use (1)
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: Discard reads with mean quality < READQ (20)
  synonyms:
  - --readq
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Discard reads with alignment identity < MAPID (94.0)
  synonyms:
  - --mapid
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: Discard reads with alignment coverage < ALN_COV (0.75)
  synonyms:
  - --aln_cov
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: Trim N base-pairs from 3'/right end of read (0)
  synonyms:
  - --trim
  args: !SimpleFlagArg
    name: INT
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Description: Map metagenomic reads to bacterial pangenomes and quantify\
  \ these genes in your data\n\nThe pipeline can be broken down into the following\
  \ steps:\n  1) build a database of pangenomes for abundance bacterial species\n\
  \  2) use local alignment to map high-quality metagenomic reads to the database\n\
  \  3) use mapped reads to quantify pangenome genes\n\nAfter completion, use 'merge_midas.py\
  \ genes' to generate pangenome matrixes\n  \nUsage: run_midas.py genes <outdir>\
  \ [options]\n\npositional arguments:\n  outdir                Path to directory\
  \ to store results. \n                        Directory name should correspond to\
  \ sample identifier\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n  --remove_temp         Remove intermediate files generated\
  \ by MIDAS (False).\n                        Useful to reduce disk space of MIDAS\
  \ output\n\nPipeline options (choose one or more; default=all):\n  --build_db  \
  \          Build bowtie2 database of pangenomes\n  --align               Align reads\
  \ to pangenome database\n  --call_genes          Compute coverage of genes in pangenome\
  \ database\n\nDatabase options (if using --build_db):\n  -d DB                 Path\
  \ to reference database\n                        By default, the MIDAS_DB environmental\
  \ variable is used\n  --species_cov FLOAT   Include species with >X coverage (3.0)\n\
  \  --species_topn INT    Include top N most abundant species\n  --species_id CHAR\
  \     Include specified species. Separate ids with a comma\n\nRead alignment options\
  \ (if using --align):\n  -1 M1                 FASTA/FASTQ file containing 1st mate\
  \ if using paired-end reads.\n                        Otherwise FASTA/FASTQ containing\
  \ unpaired reads.\n                        Can be gzip'ed (extension: .gz) or bzip2'ed\
  \ (extension: .bz2)\n  -2 M2                 FASTA/FASTQ file containing 2nd mate\
  \ if using paired-end reads.\n                        Can be gzip'ed (extension:\
  \ .gz) or bzip2'ed (extension: .bz2)\n  --interleaved         FASTA/FASTQ file in\
  \ -1 are paired and contain forward AND reverse reads\n  -s {very-fast,fast,sensitive,very-sensitive}\n\
  \                        Alignment speed/sensitivity (very-sensitive)\n  -m {local,global}\
  \     Global/local read alignment (local)\n  -n MAX_READS          # reads to use\
  \ from input file(s) (use all)\n  -t THREADS            Number of threads to use\
  \ (1)\n\nQuantify genes options (if using --call_genes):\n  --readq INT        \
  \   Discard reads with mean quality < READQ (20)\n  --mapid FLOAT         Discard\
  \ reads with alignment identity < MAPID (94.0)\n  --aln_cov FLOAT       Discard\
  \ reads with alignment coverage < ALN_COV (0.75)\n  --trim INT            Trim N\
  \ base-pairs from 3'/right end of read (0)\n\nExamples:\n1) run entire pipeline\
  \ using defaults:\nrun_midas.py genes /path/to/outdir -1 /path/to/reads_1.fq.gz\
  \ -2 /path/to/reads_2.fq.gz\n\t\t\t\n2) run entire pipeline for a specific species:\n\
  run_midas.py genes /path/to/outdir --species_id Bacteroides_vulgatus_57955 -1 /path/to/reads_1.fq.gz\
  \ -2 /path/to/reads_2.fq.gz\n\n3) use global read alignment (default is local alignment\
  \ with 75% minimum alignment coverage):\nrun_midas.py snps /path/to/outdir -1 /path/to/reads_1.fq.gz\
  \ -2 /path/to/reads_2.fq.gz -m global\n\n4) just align reads, use faster alignment,\
  \ only use the first 10M reads, use 4 CPUs:\nrun_midas.py genes /path/to/outdir\
  \ --align -1 /path/to/reads_1.fq.gz -2 /path/to/reads_2.fq.gz -s very-fast -n 10000000\
  \ -t 4\n\n5) just quantify genes, keep reads with >=95% alignment identity and reads\
  \ with an average quality-score >=30:\nrun_midas.py genes /path/to/outdir --call_genes\
  \ --mapid 95 --readq 20\n\t\n"
generated_using:
- --help
