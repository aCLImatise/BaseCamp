from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, File, Boolean, Int

Vtools_Report_Plot_Association_Manhattan_Plain_V0_1_0 = CommandToolBuilder(tool="vtools_report_plot_association_manhattan_plain", base_command=["vtools_report", "plot_association", "manhattan_plain"], inputs=[ToolInput(tag="in_chrom", input_type=Array(t=String(), optional=True), prefix="--chrom", doc=InputDocumentation(doc="Specify the particular chromosome(s) to display. Can\nbe one or multiple in this list: '1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20 21 22 X Y Un ?:?'.\nSlicing syntax '?:?' is supported. For example '1:22'\nis equivalent to displaying all autosomes; '1:Y' is\nequivalent to displaying all mapped chromosomes.\nDefault set to all including unmapped chromosomes.")), ToolInput(tag="in_chrom_prefix", input_type=String(optional=True), prefix="--chrom_prefix", doc=InputDocumentation(doc="Prefix chromosome ID with a string. Default is set to\n'chr' (X-axis will be displayed as 'chr1', 'chr2',\netc). Use 'None' for no prefix.")), ToolInput(tag="in_gene_map", input_type=File(optional=True), prefix="--gene_map", doc=InputDocumentation(doc="If the plot units are genes and the program fails to\nmap certain genes to chromosomes, you can fix it by\nproviding a text file of genomic coordinate\ninformation of these genes. Each gene in the file is a\nline of 3 columns specifying 'GENENAME CHROM\nMIDPOINT_POSITION', e.g., 'IKBKB 8 42128820'.")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Title of plot.")), ToolInput(tag="in_color", input_type=String(optional=True), prefix="--color", doc=InputDocumentation(doc="Choose a color theme from the list above to apply to\nthe plot. (via the 'RColorBrewer' package:\ncran.r-project.org/web/packages/RColorBrewer)")), ToolInput(tag="in_width_height", input_type=String(optional=True), prefix="--width_height", doc=InputDocumentation(doc="INCHES, --width-height INCHES INCHES\nThe width and height of the graphics region in inches")), ToolInput(tag="in_same_page", input_type=Boolean(optional=True), prefix="--same_page", doc=InputDocumentation(doc="Plot multiple groups of p-values on the same graph")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Specify output graph filename. Output is in pdf\nformat. It can be converted to jpg format via the\n'convert' command in Linux (e.g., convert -density 180\np.pdf p.jpg)")), ToolInput(tag="in_bonferroni", input_type=Boolean(optional=True), prefix="--bonferroni", doc=InputDocumentation(doc="Plot the horizontal line at 0.05/N on Y-axis\n(significance level after Bonferroni correction)")), ToolInput(tag="in_h_lines", input_type=Array(t=String(), optional=True), prefix="--hlines", doc=InputDocumentation(doc="Additional horizontal line(s) to be drawn on the\nY-axis.")), ToolInput(tag="in_label_top", input_type=Int(optional=True), prefix="--label_top", doc=InputDocumentation(doc="Specify how many top hits (smallest p-values by rank)\nyou want to highlight with their identifiers in text.")), ToolInput(tag="in_label_these", input_type=Array(t=String(), optional=True), prefix="--label_these", doc=InputDocumentation(doc="Specify the names of variants (chr:pos, e.g., 1:87463)\nor genes (genename, e.g., IKBKB) you want to highlight\nwith their identifiers in text.")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--font_size", doc=InputDocumentation(doc="Font size of text labels. Default set to '2.5'.\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Specify output graph filename. Output is in pdf\nformat. It can be converted to jpg format via the\n'convert' command in Linux (e.g., convert -density 180\np.pdf p.jpg)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Vtools_Report_Plot_Association_Manhattan_Plain_V0_1_0().translate("wdl", allow_empty_container=True)

