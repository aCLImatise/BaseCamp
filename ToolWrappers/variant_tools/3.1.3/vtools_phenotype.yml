!Command
command:
- vtools
- phenotype
positional:
- !Positional
  description: ''
  position: 0
  name: INPUT_FILE
  optional: true
named:
- !Flag
  description: "[INPUT_FILE [INPUT_FILE ...]], --from_file [INPUT_FILE [INPUT_FILE\
    \ ...]], --from-file [INPUT_FILE [INPUT_FILE ...]]\nImport phenotype from a tab\
    \ or space delimited file,\nwhich can be standard input if a name - is specified.\n\
    Samples are determined by sample names in the first\ncolumn, or jointly by sample\
    \ name and filename if\nthere is another column with header 'filename'. Names\n\
    of phenotype fields are determined by header of the\ninput file, or by names provided\
    \ from option --header.\nNon-alphanumeric characters in input filed names will\n\
    be replaced by '_'. If multiple samples in a project\nshare the same names, they\
    \ will shared the imported\nphenotypes. Optionally, a list of phenotypes (columns\n\
    of the file) can be specified after filename, in which\ncase only the specified\
    \ phenotypes will be imported.\nParameter --samples could be used to limit the\
    \ samples\nfor which phenotypes are imported. Values that match\nvalue of parameter\
    \ --na and cannot be converted to the\nprobed type of phenotype (e.g. '' in a\
    \ column of\nnumbers) are recorded as missing values."
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[EXPRESSION [EXPRESSION ...]]\nSet a phenotype to a constant (e.g.\
    \ --set aff=1), or\nan expression using other existing phenotypes (e.g.\n--set\
    \ ratio_qt=high_qt/all_qt (the ratio of the number\nof high quality variants to\
    \ the number of all\nvariants, where high_qt and all_qt are obtained from\nsample\
    \ statistics using parameter --from_stat).\nParameter --samples could be used\
    \ to limit the samples\nfor which genotypes will be set."
  synonyms:
  - --set
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[EXPRESSION [EXPRESSION ...]], --from-stat [EXPRESSION [EXPRESSION\
    \ ...]]\nSet a phenotype to a summary statistics of a genotype\nfield. For example,\
    \ \"num=count(*)\" sets phenotype num\nto be the number of genotypes of a sample,\n\
    \"GD=avg(DP)\" sets phenotype DP to be the average depth\n(if DP is one of the\
    \ genotype fields) of the sample.\nMultiple fields (e.g. '--from-stat \"num=count(*)\"\
    \n\"GD=avg(DP)\"') are also allowed. In addition to\nstandard SQL aggregation\
    \ functions, variant tools\nsupports special functions #(GT), #(wtGT), #(mutGT),\n\
    #(alt), #(hom), #(het) and #(other), which counts the\nnumber of genotypes (the\
    \ same as count(*)), wildtype\ngenotypes, mutant genotypes alternative alleles,\n\
    homozygotes, heterozygotes, and genotypes with two\ndifferent alternative alleles.\
    \ Parameters --genotypes\nand --samples could be used to limit the genotypes to\n\
    be considered and the samples for which genotypes will\nbe set."
  synonyms:
  - --from_stat
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[EXPRESSION [EXPRESSION ...]]\nA list of phenotype to be outputted.\
    \ SQL-compatible\nexpressions or functions such as \"DP/DP_all\" and\n\"avg(DP)\"\
    \ are also allowed"
  synonyms:
  - --output
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Allow at most N concurrent jobs to obtain sample\nstatistics for parameter\
    \ --from-stat."
  synonyms:
  - -j
  - --jobs
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: "[COND [COND ...]], --genotypes [COND [COND ...]]\nLimit the operation\
    \ to genotypes that match specified\nconditions. Use 'vtools show genotypes' to\
    \ list usable\nfields for each sample."
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[COND [COND ...]], --samples [COND [COND ...]]\nUpdate phenotype for\
    \ samples that match specified\nconditions. Use 'vtools show samples' to list\
    \ usable\nfields in the sample table."
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Output error and warning (0), info (1), debug (2) and\ntrace (3) information\
    \ to standard output (default to\n1)."
  synonyms:
  - -v
  - --verbosity
  args: !ChoiceFlagArg
    choices: !!set
      '2':
      '0':
      '3':
      '1':
  optional: true
- !Flag
  description: "[HEADER [HEADER ...]]\nA list of header names for input file if used\
    \ with\noption --from-file. Otherwise a complete header or a\nlist of names that\
    \ will be joined by a delimiter\n(parameter --delimiter), for option --output.\
    \ If a\nspecial name - is specified, the header will be read\nfrom the standard\
    \ input, which is the preferred way to\nspecify large multi-line headers (e.g.\
    \ cat myheader |\nvtools export --header -). If this parameter is given\nwithout\
    \ parameter, a default header will be derived\nfrom field names."
  synonyms:
  - --header
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Delimiter, default to tab, a popular alternative is\n',' for csv output"
  synonyms:
  - -d
  - --delimiter
  args: !SimpleFlagArg
    name: DELIMITER
  optional: true
- !Flag
  description: Input or output string for missing value..
  synonyms:
  - --na
  args: !SimpleFlagArg
    name: NA
  optional: true
- !Flag
  description: "Number of record to display. Default to all record.\n"
  synonyms:
  - -l
  - --limit
  args: !SimpleFlagArg
    name: LIMIT
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: vtools phenotype [-h] [-f [INPUT_FILE [INPUT_FILE ...]]]\n    \
  \                    [--set [EXPRESSION [EXPRESSION ...]]]\n                   \
  \     [--from_stat [EXPRESSION [EXPRESSION ...]]]\n                        [--output\
  \ [EXPRESSION [EXPRESSION ...]]] [-j N]\n                        [-g [COND [COND\
  \ ...]]] [-s [COND [COND ...]]]\n                        [--header [HEADER [HEADER\
  \ ...]]] [-d DELIMITER]\n                        [--na NA] [-l LIMIT] [-v {0,1,2,3}]\n\
  \nImport phenotypes from a file, or set phenotypes to constants, or to summary\n\
  statistics of sample genotype fields.\n\noptional arguments:\n  -h, --help     \
  \       show this help message and exit\n  -f [INPUT_FILE [INPUT_FILE ...]], --from_file\
  \ [INPUT_FILE [INPUT_FILE ...]], --from-file [INPUT_FILE [INPUT_FILE ...]]\n   \
  \                     Import phenotype from a tab or space delimited file,\n   \
  \                     which can be standard input if a name - is specified.\n  \
  \                      Samples are determined by sample names in the first\n   \
  \                     column, or jointly by sample name and filename if\n      \
  \                  there is another column with header 'filename'. Names\n     \
  \                   of phenotype fields are determined by header of the\n      \
  \                  input file, or by names provided from option --header.\n    \
  \                    Non-alphanumeric characters in input filed names will\n   \
  \                     be replaced by '_'. If multiple samples in a project\n   \
  \                     share the same names, they will shared the imported\n    \
  \                    phenotypes. Optionally, a list of phenotypes (columns\n   \
  \                     of the file) can be specified after filename, in which\n \
  \                       case only the specified phenotypes will be imported.\n \
  \                       Parameter --samples could be used to limit the samples\n\
  \                        for which phenotypes are imported. Values that match\n\
  \                        value of parameter --na and cannot be converted to the\n\
  \                        probed type of phenotype (e.g. '' in a column of\n    \
  \                    numbers) are recorded as missing values.\n  --set [EXPRESSION\
  \ [EXPRESSION ...]]\n                        Set a phenotype to a constant (e.g.\
  \ --set aff=1), or\n                        an expression using other existing phenotypes\
  \ (e.g.\n                        --set ratio_qt=high_qt/all_qt (the ratio of the\
  \ number\n                        of high quality variants to the number of all\n\
  \                        variants, where high_qt and all_qt are obtained from\n\
  \                        sample statistics using parameter --from_stat).\n     \
  \                   Parameter --samples could be used to limit the samples\n   \
  \                     for which genotypes will be set.\n  --from_stat [EXPRESSION\
  \ [EXPRESSION ...]], --from-stat [EXPRESSION [EXPRESSION ...]]\n               \
  \         Set a phenotype to a summary statistics of a genotype\n              \
  \          field. For example, \"num=count(*)\" sets phenotype num\n           \
  \             to be the number of genotypes of a sample,\n                     \
  \   \"GD=avg(DP)\" sets phenotype DP to be the average depth\n                 \
  \       (if DP is one of the genotype fields) of the sample.\n                 \
  \       Multiple fields (e.g. '--from-stat \"num=count(*)\"\n                  \
  \      \"GD=avg(DP)\"') are also allowed. In addition to\n                     \
  \   standard SQL aggregation functions, variant tools\n                        supports\
  \ special functions #(GT), #(wtGT), #(mutGT),\n                        #(alt), #(hom),\
  \ #(het) and #(other), which counts the\n                        number of genotypes\
  \ (the same as count(*)), wildtype\n                        genotypes, mutant genotypes\
  \ alternative alleles,\n                        homozygotes, heterozygotes, and\
  \ genotypes with two\n                        different alternative alleles. Parameters\
  \ --genotypes\n                        and --samples could be used to limit the\
  \ genotypes to\n                        be considered and the samples for which\
  \ genotypes will\n                        be set.\n  --output [EXPRESSION [EXPRESSION\
  \ ...]]\n                        A list of phenotype to be outputted. SQL-compatible\n\
  \                        expressions or functions such as \"DP/DP_all\" and\n  \
  \                      \"avg(DP)\" are also allowed\n  -j N, --jobs N        Allow\
  \ at most N concurrent jobs to obtain sample\n                        statistics\
  \ for parameter --from-stat.\n  -g [COND [COND ...]], --genotypes [COND [COND ...]]\n\
  \                        Limit the operation to genotypes that match specified\n\
  \                        conditions. Use 'vtools show genotypes' to list usable\n\
  \                        fields for each sample.\n  -s [COND [COND ...]], --samples\
  \ [COND [COND ...]]\n                        Update phenotype for samples that match\
  \ specified\n                        conditions. Use 'vtools show samples' to list\
  \ usable\n                        fields in the sample table.\n  -v {0,1,2,3}, --verbosity\
  \ {0,1,2,3}\n                        Output error and warning (0), info (1), debug\
  \ (2) and\n                        trace (3) information to standard output (default\
  \ to\n                        1).\n\nInput/Output options:\n  --header [HEADER [HEADER\
  \ ...]]\n                        A list of header names for input file if used with\n\
  \                        option --from-file. Otherwise a complete header or a\n\
  \                        list of names that will be joined by a delimiter\n    \
  \                    (parameter --delimiter), for option --output. If a\n      \
  \                  special name - is specified, the header will be read\n      \
  \                  from the standard input, which is the preferred way to\n    \
  \                    specify large multi-line headers (e.g. cat myheader |\n   \
  \                     vtools export --header -). If this parameter is given\n  \
  \                      without parameter, a default header will be derived\n   \
  \                     from field names.\n  -d DELIMITER, --delimiter DELIMITER\n\
  \                        Delimiter, default to tab, a popular alternative is\n \
  \                       ',' for csv output\n  --na NA               Input or output\
  \ string for missing value..\n  -l LIMIT, --limit LIMIT\n                      \
  \  Number of record to display. Default to all record.\n"
generated_using:
- --help
