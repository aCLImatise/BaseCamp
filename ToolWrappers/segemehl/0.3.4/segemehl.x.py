from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Float

Segemehl_X_V0_1_0 = CommandToolBuilder(tool="segemehl.x", base_command=["segemehl.x"], inputs=[ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="[<file>]  list of path/filename(s) of fasta database sequence(s)")), ToolInput(tag="in_query", input_type=File(optional=True), prefix="--query", doc=InputDocumentation(doc="path/filename of query sequences (default:none)")), ToolInput(tag="in_mate", input_type=File(optional=True), prefix="--mate", doc=InputDocumentation(doc="path/filename of mate pair sequences (default:none)")), ToolInput(tag="in_index", input_type=File(optional=True), prefix="--index", doc=InputDocumentation(doc="path/filename of db index (default:none)")), ToolInput(tag="in_index_two", input_type=File(optional=True), prefix="--index2", doc=InputDocumentation(doc="path/filename of second db index (default:none)")), ToolInput(tag="in_generate", input_type=File(optional=True), prefix="--generate", doc=InputDocumentation(doc="generate db index and store to disk (default:none)")), ToolInput(tag="in_generate_two", input_type=File(optional=True), prefix="--generate2", doc=InputDocumentation(doc="generate second db index and store to disk (default:none)")), ToolInput(tag="in_read_group_file", input_type=File(optional=True), prefix="--readgroupfile", doc=InputDocumentation(doc="filename to read @RG header (default:none)")), ToolInput(tag="in_read_groupid", input_type=String(optional=True), prefix="--readgroupid", doc=InputDocumentation(doc="read group id (default:none)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="start <n> threads (default:1)")), ToolInput(tag="in_outfile", input_type=String(optional=True), prefix="--outfile", doc=InputDocumentation(doc="outputfile (default:none)")), ToolInput(tag="in_bam_aba_fix_oid_a", input_type=File(optional=True), prefix="--bamabafixoida", doc=InputDocumentation(doc="generate a bam output (-o <filename> required)")), ToolInput(tag="in_no_match_filename", input_type=File(optional=True), prefix="--nomatchfilename", doc=InputDocumentation(doc="filename for unmatched reads (default:none)")), ToolInput(tag="in_brief_cigar", input_type=Boolean(optional=True), prefix="--briefcigar", doc=InputDocumentation(doc="brief cigar string (M vs X and =)")), ToolInput(tag="in_progress_bar", input_type=Boolean(optional=True), prefix="--progressbar", doc=InputDocumentation(doc="show a progress bar")), ToolInput(tag="in_file_bins", input_type=File(optional=True), prefix="--filebins", doc=InputDocumentation(doc="file bins with basename <string> for easier data handling (default:none)")), ToolInput(tag="in_me_op", input_type=Boolean(optional=True), prefix="--MEOP", doc=InputDocumentation(doc="output MEOP field for easier variance calling in SAM (XE:Z:)")), ToolInput(tag="in_bisulfite", input_type=Int(optional=True), prefix="--bisulfite", doc=InputDocumentation(doc="bisulfite aln with methylC-seq/Lister et al. (=1) or bs-seq/Cokus et al. protocol (=2) (default:0)")), ToolInput(tag="in_splits", input_type=Boolean(optional=True), prefix="--splits", doc=InputDocumentation(doc="[<basename>]       detect split/spliced reads. (default:none)")), ToolInput(tag="in_accuracy", input_type=Int(optional=True), prefix="--accuracy", doc=InputDocumentation(doc="min percentage of matches per read in semi-global alignment (default:90)")), ToolInput(tag="in_differences", input_type=Int(optional=True), prefix="--differences", doc=InputDocumentation(doc="search seeds initially with <n> differences (default:1)")), ToolInput(tag="in_evalue", input_type=Int(optional=True), prefix="--evalue", doc=InputDocumentation(doc="max evalue (default:5.000000)")), ToolInput(tag="in_hit_strategy", input_type=Boolean(optional=True), prefix="--hitstrategy", doc=InputDocumentation(doc="report only best scoring hits (=1) or all (=0) (default:1)")), ToolInput(tag="in_minsize", input_type=Int(optional=True), prefix="--minsize", doc=InputDocumentation(doc="minimum length of queries (default:12)")), ToolInput(tag="in_m_infra_glen", input_type=Int(optional=True), prefix="--minfraglen", doc=InputDocumentation(doc="min length of a spliced fragment (default:20)")), ToolInput(tag="in_min_splice_cover", input_type=Int(optional=True), prefix="--minsplicecover", doc=InputDocumentation(doc="min coverage for spliced transcripts (default:80)")), ToolInput(tag="in_min_frag_score", input_type=Int(optional=True), prefix="--minfragscore", doc=InputDocumentation(doc="min score of a spliced fragment (default:18)")), ToolInput(tag="in_splice_score_scale", input_type=Float(optional=True), prefix="--splicescorescale", doc=InputDocumentation(doc="report spliced alignment with score s only if <f>*s is larger than next best spliced alignment (default:0.900000)")), ToolInput(tag="in_max_split_evalue", input_type=Int(optional=True), prefix="--maxsplitevalue", doc=InputDocumentation(doc="max evalue for splits (default:50.000000)")), ToolInput(tag="in_drop_off", input_type=Int(optional=True), prefix="--dropoff", doc=InputDocumentation(doc="dropoff parameter for extension (default:8)")), ToolInput(tag="in_jump", input_type=Int(optional=True), prefix="--jump", doc=InputDocumentation(doc="search seeds with jump size <n> (0=automatic) (default:0)")), ToolInput(tag="in_order", input_type=Boolean(optional=True), prefix="--order", doc=InputDocumentation(doc="sorts the output by chromsome and position (might take a while!)")), ToolInput(tag="in_max_pair_insert_size", input_type=Int(optional=True), prefix="--maxpairinsertsize", doc=InputDocumentation(doc="maximum size of the inserts (paired end) in case of multiple hits (default:200000)")), ToolInput(tag="in_max_interval", input_type=Int(optional=True), prefix="--maxinterval", doc=InputDocumentation(doc="maximum width of a suffix array interval, i.e. a query seed will be omitted if it matches more than <n> times (default:100)")), ToolInput(tag="in_check_idx", input_type=Boolean(optional=True), prefix="--checkidx", doc=InputDocumentation(doc="check index")), ToolInput(tag="in_extension_penalty", input_type=Int(optional=True), prefix="--extensionpenalty", doc=InputDocumentation(doc="penalty for a mismatch during extension (default:4)")), ToolInput(tag="in_max_out", input_type=Int(optional=True), prefix="--maxout", doc=InputDocumentation(doc="maximum number of alignments that will be reported. If set to zero, all alignments will be reported (default:0)")), ToolInput(tag="in_skip_id_check", input_type=Boolean(optional=True), prefix="--skipidcheck", doc=InputDocumentation(doc="do not check whether the fastq ids of mates / paired ends match. Instead, the first mate (-q) will be used for output only.")), ToolInput(tag="in_show_align", input_type=Boolean(optional=True), prefix="--showalign", doc=InputDocumentation(doc="show alignments")), ToolInput(tag="in_no_head", input_type=Boolean(optional=True), prefix="--nohead", doc=InputDocumentation(doc="do not output header")), ToolInput(tag="in_full_name", input_type=Boolean(optional=True), prefix="--fullname", doc=InputDocumentation(doc="write full query name (no trunctation at whitespace)")), ToolInput(tag="in_be_svoc_f", input_type=Boolean(optional=True), prefix="-besVOcf", doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_basename", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_bam_aba_fix_oid_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bam_aba_fix_oid_a", type_hint=File()), doc=OutputDocumentation(doc="generate a bam output (-o <filename> required)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Segemehl_X_V0_1_0().translate("wdl", allow_empty_container=True)

