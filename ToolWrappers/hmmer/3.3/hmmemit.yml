!Command
command:
- hmmemit
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -o
  description: ': send sequence output to file <f>, not stdout'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - -N
  description: ': number of seqs to sample  [1]  (n>0)'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -a
  description: ': emit alignment'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: ': emit simple majority-rule consensus sequence'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -C
  description: ": emit fancier consensus sequence (req's --minl, --minu)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  description: ': sample sequences from profile, not core model'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: ': set expected length from profile to <n>  [400]'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --local
  description: ': configure profile in multihit local mode  [default]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --unilocal
  description: ': configure profile in unilocal mode'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --glocal
  description: ': configure profile in multihit glocal mode'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --uniglocal
  description: ': configure profile in unihit glocal mode'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --minl
  description: ": show consensus as 'any' (X/N) unless >= this fraction  [0.0]"
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --minu
  description: ': show consensus as upper case if >= this fraction  [0.0]'
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --seed
  description: ': set RNG seed to <n>  [0]  (n>=0)'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -options
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': show brief help on version and usage'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "# hmmemit :: sample sequence(s) from a profile HMM\n# HMMER 3.3 (Nov 2019);\
  \ http://hmmer.org/\n# Copyright (C) 2019 Howard Hughes Medical Institute.\n# Freely\
  \ distributed under the BSD open source license.\n# - - - - - - - - - - - - - -\
  \ - - - - - - - - - - - - - - - - - - - - - -\nUsage: hmmemit [-options] <hmmfile\
  \ (single)>\n\nCommon options are:\n  -h     : show brief help on version and usage\n\
  \  -o <f> : send sequence output to file <f>, not stdout\n  -N <n> : number of seqs\
  \ to sample  [1]  (n>0)\n\nOptions controlling what to emit:\n  -a : emit alignment\n\
  \  -c : emit simple majority-rule consensus sequence\n  -C : emit fancier consensus\
  \ sequence (req's --minl, --minu)\n  -p : sample sequences from profile, not core\
  \ model\n\nOptions controlling emission from profiles with -p:\n  -L <n>      :\
  \ set expected length from profile to <n>  [400]\n  --local     : configure profile\
  \ in multihit local mode  [default]\n  --unilocal  : configure profile in unilocal\
  \ mode\n  --glocal    : configure profile in multihit glocal mode\n  --uniglocal\
  \ : configure profile in unihit glocal mode\n\nOptions controlling fancy consensus\
  \ emission with -C:\n  --minl <x> : show consensus as 'any' (X/N) unless >= this\
  \ fraction  [0.0]\n  --minu <x> : show consensus as upper case if >= this fraction\
  \  [0.0]\n\nOther options::\n  --seed <n> : set RNG seed to <n>  [0]  (n>=0)\n"
generated_using:
- -h
docker_image:
