from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Float, Int, String

Epa_Ng_V0_1_0 = CommandToolBuilder(tool="epa_ng", base_command=["epa-ng"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Display debug output.")), ToolInput(tag="in_b_fast", input_type=File(optional=True), prefix="--bfast", doc=InputDocumentation(doc=":FILE        Convert the given fasta file to bfast format.")), ToolInput(tag="in_dump_binary", input_type=Boolean(optional=True), prefix="--dump-binary", doc=InputDocumentation(doc="Binary Dump mode: write ref. tree in binary format then exit. NOTE: not compatible with premasking!")), ToolInput(tag="in_split", input_type=File(optional=True), prefix="--split", doc=InputDocumentation(doc=":FILE ...       Takes a reference MSA (phylip/fasta/fasta.gz) and combined ref + query MSA(s) (phylip/fasta/fasta.gz) and outputs a monolithic query file (fasta), as well as a reference file (fasta), ready for use. Usage: epa-ng --split ref_alignment query_alignments+")), ToolInput(tag="in_tree", input_type=File(optional=True), prefix="--tree", doc=InputDocumentation(doc=":FILE Excludes: --binary\nPath to Reference Tree file.")), ToolInput(tag="in_ref_msa", input_type=File(optional=True), prefix="--ref-msa", doc=InputDocumentation(doc=":FILE Excludes: --binary\nPath to Reference MSA file.")), ToolInput(tag="in_binary", input_type=File(optional=True), prefix="--binary", doc=InputDocumentation(doc=":FILE Excludes: --tree --ref-msa\nPath to binary reference file, as created using --dump-binary.")), ToolInput(tag="in_query", input_type=File(optional=True), prefix="--query", doc=InputDocumentation(doc=":FILE        Path to Query MSA file.")), ToolInput(tag="in_model", input_type=File(optional=True), prefix="--model", doc=InputDocumentation(doc="=GTR+G       Description string of the model to be used, or a RAxML_info file. --model STRING | FILE See: https://github.com/amkozlov/raxml-ng/wiki/Input-data#evolutionary-model")), ToolInput(tag="in_out_dir", input_type=File(optional=True), prefix="--out-dir", doc=InputDocumentation(doc=":DIR=./\nPath to output directory.")), ToolInput(tag="in_filter_acc_lwr", input_type=Float(optional=True), prefix="--filter-acc-lwr", doc=InputDocumentation(doc=":FLOAT in [0 - 1] Excludes: --filter-min-lwr\nAccumulated likelihood weight after which further placements are discarded.")), ToolInput(tag="in_filter_min_lwr", input_type=Float(optional=True), prefix="--filter-min-lwr", doc=InputDocumentation(doc=":FLOAT in [0 - 1]=0.01 Excludes: --filter-acc-lwr\nMinimum likelihood weight below which a placement is discarded.")), ToolInput(tag="in_filter_min", input_type=Int(optional=True), prefix="--filter-min", doc=InputDocumentation(doc="=1         Minimum number of placements per sequence to include in final output.")), ToolInput(tag="in_filter_max", input_type=Int(optional=True), prefix="--filter-max", doc=InputDocumentation(doc="=7         Maximum number of placements per sequence to include in final output.")), ToolInput(tag="in_precision", input_type=Float(optional=True), prefix="--precision", doc=InputDocumentation(doc="=10         Output decimal point precision for floating point numbers.")), ToolInput(tag="in_redo", input_type=Boolean(optional=True), prefix="--redo", doc=InputDocumentation(doc="Overwrite existing files.")), ToolInput(tag="in_preserve_rooting", input_type=String(optional=True), prefix="--preserve-rooting", doc=InputDocumentation(doc=":{off,on}\nPreserve the rooting of rooted trees. When disabled, EPA-ng will print the result as an unrooted tree.")), ToolInput(tag="in_dyn_heur", input_type=Float(optional=True), prefix="--dyn-heur", doc=InputDocumentation(doc=":FLOAT in [0 - 1]=0.99999 Excludes: --fix-heur --baseball-heur --no-heur\nTwo-phase heuristic, determination of candidate edges using accumulative threshold. Enabled by default! See --no-heur for disabling it")), ToolInput(tag="in_fix_heur", input_type=Float(optional=True), prefix="--fix-heur", doc=InputDocumentation(doc=":FLOAT in [0 - 1] Excludes: --dyn-heur --baseball-heur --no-heur\nTwo-phase heuristic, determination of candidate edges by specified percentage of total edges.")), ToolInput(tag="in_baseball_heur", input_type=Int(optional=True), prefix="--baseball-heur", doc=InputDocumentation(doc=": --dyn-heur --fix-heur --no-heur\nBaseball heuristic as known from pplacer. strike_box=3,max_strikes=6,max_pitches=40.")), ToolInput(tag="in_no_heur", input_type=String(optional=True), prefix="--no-heur", doc=InputDocumentation(doc=": --dyn-heur --fix-heur --baseball-heur\nDisables heuristic preplacement completely. Overrides all other heuristic flags.")), ToolInput(tag="in_chunk_size", input_type=Int(optional=True), prefix="--chunk-size", doc=InputDocumentation(doc="=5000      Number of query sequences to be read in at a time. May influence performance.")), ToolInput(tag="in_ra_xml_blo", input_type=Boolean(optional=True), prefix="--raxml-blo", doc=InputDocumentation(doc="Employ old style of branch length optimization during thorough insertion as opposed to sliding approach. WARNING: may significantly slow down computation.")), ToolInput(tag="in_no_pre_mask", input_type=Boolean(optional=True), prefix="--no-pre-mask", doc=InputDocumentation(doc="Do NOT pre-mask sequences. Enables repeats unless --no-repeats is also specified.")), ToolInput(tag="in_rate_scalers", input_type=String(optional=True), prefix="--rate-scalers", doc=InputDocumentation(doc=":{off,on,auto}\nUse individual rate scalers. Important to avoid numerical underflow in taxa rich trees.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="=0         Number of threads to use. If 0 is passed as argument,program will run with the maximum number of threads available."))], outputs=[ToolOutput(tag="out_out_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc=":DIR=./\nPath to output directory."))], container="quay.io/biocontainers/epa-ng:0.3.8--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Epa_Ng_V0_1_0().translate("wdl")

