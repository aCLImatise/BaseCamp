from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Float, Boolean, File, String

Pslpairs_V0_1_0 = CommandToolBuilder(tool="pslPairs", base_command=["pslPairs"], inputs=[ToolInput(tag="in_max", input_type=Int(optional=True), prefix="-max", doc=InputDocumentation(doc="- maximum length of clone sequence (default=47000)")), ToolInput(tag="in_min", input_type=Int(optional=True), prefix="-min", doc=InputDocumentation(doc="- minimum length of clone sequence (default=32000)")), ToolInput(tag="in_slop_val", input_type=Int(optional=True), prefix="-slopval", doc=InputDocumentation(doc="- deviation from max/min clone lengths allowed for slop report\n- (default=5000)")), ToolInput(tag="in_near_top", input_type=Float(optional=True), prefix="-nearTop", doc=InputDocumentation(doc="- maximium deviation from best match allowed (default=0.001)")), ToolInput(tag="in_mini_d", input_type=Float(optional=True), prefix="-minId", doc=InputDocumentation(doc="- minimum pct ID of at least one end (default=0.96)")), ToolInput(tag="in_min_orphan_id", input_type=Float(optional=True), prefix="-minOrphanId", doc=InputDocumentation(doc="- minimum pct ID for orphan alignment (default=0.96)")), ToolInput(tag="in_t_insert", input_type=Int(optional=True), prefix="-tInsert", doc=InputDocumentation(doc="- maximum insert bases allowed in sequence alignment\n- (default=500)")), ToolInput(tag="in_hard_max", input_type=Int(optional=True), prefix="-hardMax", doc=InputDocumentation(doc="- absolute maximum clone length for long report (default=75000)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="- display all informational messages")), ToolInput(tag="in_no_bin", input_type=File(optional=True), prefix="-noBin", doc=InputDocumentation(doc="- do not include bin column in output file")), ToolInput(tag="in_no_random", input_type=Boolean(optional=True), prefix="-noRandom", doc=InputDocumentation(doc="- do not include placements on random portions\n- {length(chr name) < 7}")), ToolInput(tag="in_slop", input_type=Boolean(optional=True), prefix="-slop", doc=InputDocumentation(doc="- create <outFilePrefix>.slop file of pairs that fall within\n- slop length")), ToolInput(tag="in_short", input_type=Boolean(optional=True), prefix="-short", doc=InputDocumentation(doc="- create <outFilePrefix>.short file of pairs shorter than\n- min size")), ToolInput(tag="in_long", input_type=Boolean(optional=True), prefix="-long", doc=InputDocumentation(doc="- create <outFilePrefix>.long file of pairs longer than\n- max size, but less than hardMax size")), ToolInput(tag="in_mismatch", input_type=Boolean(optional=True), prefix="-mismatch", doc=InputDocumentation(doc="- create <outFilePrefix>.mismatch file of pairs with\n- bad orientation of ends")), ToolInput(tag="in_orphan", input_type=Boolean(optional=True), prefix="-orphan", doc=InputDocumentation(doc="- create <outFilePrefix>.orphan file of unmatched end sequences")), ToolInput(tag="in_psl_file", input_type=String(), position=0, doc=InputDocumentation(doc="- filtered psl alignments of ends from kluster run")), ToolInput(tag="in_pair_file", input_type=String(), position=1, doc=InputDocumentation(doc="- three column tab separated: forward reverse cloneId\n- forward and reverse columns can be comma separated end ids")), ToolInput(tag="in_psl_tablename", input_type=String(), position=2, doc=InputDocumentation(doc="- table name the psl alignments have been loaded into"))], outputs=[ToolOutput(tag="out_no_bin", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_bin", type_hint=File()), doc=OutputDocumentation(doc="- do not include bin column in output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pslpairs_V0_1_0().translate("wdl", allow_empty_container=True)

