from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, String

Plot_Orf_Density_V0_1_0 = CommandToolBuilder(tool="plot_orf_density", base_command=["plot_orf_density"], inputs=[ToolInput(tag="in_an_not_dir", input_type=Directory(optional=True), prefix="--annot_dir", doc=InputDocumentation(doc="transcripts annotation directory, generated by\nprepare_transcripts.")), ToolInput(tag="in_config_file", input_type=File(optional=True), prefix="--config_file", doc=InputDocumentation(doc="defile bam file information in this file, please refer\nto the example file in data folder.")), ToolInput(tag="in_transcript_id", input_type=String(optional=True), prefix="--transcript_id", doc=InputDocumentation(doc="the transcript id")), ToolInput(tag="in_orf_t_start", input_type=String(optional=True), prefix="--orf_tstart", doc=InputDocumentation(doc="transcript-level coordinates of start of ORF\n(orf_tstart)")), ToolInput(tag="in_orf_t_stop", input_type=String(optional=True), prefix="--orf_tstop", doc=InputDocumentation(doc="transcript-level coordinates of end of ORF (orf_tstop)")), ToolInput(tag="in_out_name", input_type=File(optional=True), prefix="--outname", doc=InputDocumentation(doc="output file name,default is\ntranscriptid_tstart_tstop.pdf"))], outputs=[ToolOutput(tag="out_out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_name", type_hint=File()), doc=OutputDocumentation(doc="output file name,default is\ntranscriptid_tstart_tstop.pdf"))], container="quay.io/biocontainers/ribocode:1.2.11--pyh145b6a8_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Plot_Orf_Density_V0_1_0().translate("wdl")

