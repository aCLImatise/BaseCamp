from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, String, Int

Metaplots_V0_1_0 = CommandToolBuilder(tool="metaplots", base_command=["metaplots"], inputs=[ToolInput(tag="in_an_not_dir", input_type=Directory(optional=True), prefix="--annot_dir", doc=InputDocumentation(doc="transcripts annotation directory, generated by\nprepare_transcripts.")), ToolInput(tag="in_rpf_mapping_file", input_type=File(optional=True), prefix="--rpf_mapping_file", doc=InputDocumentation(doc="ribo-seq BAM/SAM file aligned to the transcriptome.")), ToolInput(tag="in_input_file", input_type=File(optional=True), prefix="--input_file", doc=InputDocumentation(doc="the file list the ribo-seq BAM/SAM files aligned to\nthe transcriptome.")), ToolInput(tag="in_stranded", input_type=String(optional=True), prefix="--stranded", doc=InputDocumentation(doc="whether the data is strand-specific, reverse means\nreversed strand interpretation.(default: yes)")), ToolInput(tag="in_minimum_length", input_type=Int(optional=True), prefix="--minimum-length", doc=InputDocumentation(doc="minimum length of read to output, default 24")), ToolInput(tag="in_maximum_length", input_type=Int(optional=True), prefix="--maximum-length", doc=InputDocumentation(doc="maximum length of read to output, default 36")), ToolInput(tag="in_p_value_one_cut_off", input_type=Int(optional=True), prefix="--pvalue1_cutoff", doc=InputDocumentation(doc="pvalue cutoff of frame0 > frame2 for automatically\npredicting P-site location, default 0.001")), ToolInput(tag="in_p_value_two_cut_off", input_type=Int(optional=True), prefix="--pvalue2_cutoff", doc=InputDocumentation(doc="pvalue cutoff of frame0 > frame2 for automatically\npredicting P-site location, default 0.001")), ToolInput(tag="in_frame_zero_percent", input_type=Int(optional=True), prefix="--frame0_percent", doc=InputDocumentation(doc="proportion threshold of the number of reads in frame0,\ndefined by f0/(f0+f1+f2), default 0.65")), ToolInput(tag="in_out_name", input_type=File(optional=True), prefix="--outname", doc=InputDocumentation(doc="name of output pdf file(default: metaplots)"))], outputs=[ToolOutput(tag="out_out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_name", type_hint=File()), doc=OutputDocumentation(doc="name of output pdf file(default: metaplots)"))], container="quay.io/biocontainers/ribocode:1.2.11--pyh145b6a8_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metaplots_V0_1_0().translate("wdl")

