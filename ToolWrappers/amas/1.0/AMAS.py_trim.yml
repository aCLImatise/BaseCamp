!Command
command:
- AMAS.py
- trim
positional:
- !Positional
  optional: false
  position: 0
  name: check
  description: -c CORES, --cores CORES
named:
- !Flag
  optional: true
  synonyms:
  - -u
  - --out-format
  description: 'File format for the output alignment. Default: fasta'
  args: !ChoiceFlagArg
    choices: !!set
      nexus-int:
      fasta:
      phylip-int:
      nexus:
      phylip:
- !Flag
  optional: true
  synonyms:
  - -o
  - --trim-out
  description: "File name for the trimmed alignment when providing a\nsingle file\
    \ as input."
  args: !SimpleFlagArg
    name: TRIM_OUT
- !Flag
  optional: true
  synonyms:
  - -t
  - --trim-fraction
  description: "Columns in the alignments with occupancy lower than\nthis value will\
    \ be removed. Default: 0.6"
  args: !SimpleFlagArg
    name: TRIM_FRACTION
- !Flag
  optional: true
  synonyms:
  - -p
  - --retain-only-parsimony-sites
  description: "Only write parsimony informative columns in trimmed\nalignment Default:\
    \ write all columns"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --check-align
  description: 'Check if input sequences are aligned. Default: no'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --in-files
  description: "Alignment files to be taken as input. You can specify\nmultiple files\
    \ using wildcards (e.g. --in-files\n*fasta)"
  args: !RepeatFlagArg
    name: IN_FILES
- !Flag
  optional: true
  synonyms:
  - -f
  - --in-format
  description: The format of input alignment
  args: !ChoiceFlagArg
    choices: !!set
      nexus-int:
      fasta:
      phylip-int:
      nexus:
      phylip:
- !Flag
  optional: true
  synonyms:
  - -d
  - --data-type
  description: "Type of data\n"
  args: !ChoiceFlagArg
    choices: !!set
      aa:
      dna:
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: AMAS.py [-h] [-u {fasta,phylip,nexus,phylip-int,nexus-int}]\n \
  \              [-o TRIM_OUT] [-t TRIM_FRACTION] [-p] [-e] [-c CORES] -i\n      \
  \         IN_FILES [IN_FILES ...] -f\n               {fasta,phylip,nexus,phylip-int,nexus-int}\
  \ -d {aa,dna}\n\nTrim alignment by occupancy. Optionally removes sites that are\
  \ not parsimony\ninformative. CAUTION: when running on amino acids stop codons marked\
  \ with *\nwill be treated as missing data!\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -u {fasta,phylip,nexus,phylip-int,nexus-int},\
  \ --out-format {fasta,phylip,nexus,phylip-int,nexus-int}\n                     \
  \   File format for the output alignment. Default: fasta\n  -o TRIM_OUT, --trim-out\
  \ TRIM_OUT\n                        File name for the trimmed alignment when providing\
  \ a\n                        single file as input.\n  -t TRIM_FRACTION, --trim-fraction\
  \ TRIM_FRACTION\n                        Columns in the alignments with occupancy\
  \ lower than\n                        this value will be removed. Default: 0.6\n\
  \  -p, --retain-only-parsimony-sites\n                        Only write parsimony\
  \ informative columns in trimmed\n                        alignment Default: write\
  \ all columns\n  -e, --check-align     Check if input sequences are aligned. Default:\
  \ no\n                        check\n  -c CORES, --cores CORES\n               \
  \         Number of cores used. Default: 1\n\nrequired arguments:\n  -i IN_FILES\
  \ [IN_FILES ...], --in-files IN_FILES [IN_FILES ...]\n                        Alignment\
  \ files to be taken as input. You can specify\n                        multiple\
  \ files using wildcards (e.g. --in-files\n                        *fasta)\n  -f\
  \ {fasta,phylip,nexus,phylip-int,nexus-int}, --in-format {fasta,phylip,nexus,phylip-int,nexus-int}\n\
  \                        The format of input alignment\n  -d {aa,dna}, --data-type\
  \ {aa,dna}\n                        Type of data\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/amas:1.0--pyh864c0ab_0
