!Command
command:
- AMAS.py
- summary
positional:
- !Positional
  description: -c CORES, --cores CORES
  position: 0
  name: check
  optional: false
named:
- !Flag
  description: "File name for the alignment summary. Default:\n'summary.txt'"
  synonyms:
  - -o
  - --summary-out
  args: !SimpleFlagArg
    name: SUMMARY_OUT
  optional: true
- !Flag
  description: "In addition to alignment summary, write by\nsequence/taxon summaries.\
    \ Default: Don't write"
  synonyms:
  - -s
  - --by-taxon
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Check if input sequences are aligned. Default: no'
  synonyms:
  - -e
  - --check-align
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Alignment files to be taken as input. You can specify\nmultiple files\
    \ using wildcards (e.g. --in-files\n*fasta)"
  synonyms:
  - -i
  - --in-files
  args: !RepeatFlagArg
    name: IN_FILES
  optional: true
- !Flag
  description: The format of input alignment
  synonyms:
  - -f
  - --in-format
  args: !ChoiceFlagArg
    choices: !!set
      nexus-int:
      phylip-int:
      phylip:
      fasta:
      nexus:
  optional: true
- !Flag
  description: "Type of data\n"
  synonyms:
  - -d
  - --data-type
  args: !ChoiceFlagArg
    choices: !!set
      aa:
      dna:
  optional: true
- !Flag
  description: ''
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: CORES
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: AMAS.py [-h] [-o SUMMARY_OUT] [-s] [-e] [-c CORES] -i IN_FILES\n\
  \               [IN_FILES ...] -f {fasta,phylip,nexus,phylip-int,nexus-int} -d\n\
  \               {aa,dna}\n\nWrite alignment summary\n\noptional arguments:\n  -h,\
  \ --help            show this help message and exit\n  -o SUMMARY_OUT, --summary-out\
  \ SUMMARY_OUT\n                        File name for the alignment summary. Default:\n\
  \                        'summary.txt'\n  -s, --by-taxon        In addition to alignment\
  \ summary, write by\n                        sequence/taxon summaries. Default:\
  \ Don't write\n  -e, --check-align     Check if input sequences are aligned. Default:\
  \ no\n                        check\n  -c CORES, --cores CORES\n               \
  \         Number of cores used. Default: 1\n\nrequired arguments:\n  -i IN_FILES\
  \ [IN_FILES ...], --in-files IN_FILES [IN_FILES ...]\n                        Alignment\
  \ files to be taken as input. You can specify\n                        multiple\
  \ files using wildcards (e.g. --in-files\n                        *fasta)\n  -f\
  \ {fasta,phylip,nexus,phylip-int,nexus-int}, --in-format {fasta,phylip,nexus,phylip-int,nexus-int}\n\
  \                        The format of input alignment\n  -d {aa,dna}, --data-type\
  \ {aa,dna}\n                        Type of data\n"
generated_using:
- --help
