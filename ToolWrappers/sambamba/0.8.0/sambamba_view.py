from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Sambamba_View_V0_1_0 = CommandToolBuilder(tool="sambamba_view", base_command=["sambamba", "view"], inputs=[ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc="set custom filter for alignments")), ToolInput(tag="in_num_filter", input_type=Int(optional=True), prefix="--num-filter", doc=InputDocumentation(doc="filter flag bits; 'i1/i2' corresponds to -f i1 -F i2 samtools arguments;\neither of the numbers can be omitted")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="|bam|json|unpack\nspecify which format to use for output (default is SAM);\nunpack streams unpacked BAM")), ToolInput(tag="in_header", input_type=Boolean(optional=True), prefix="--header", doc=InputDocumentation(doc="output only header to stdout (if format=bam, the header is printed as SAM)")), ToolInput(tag="in_reference_info", input_type=Boolean(optional=True), prefix="--reference-info", doc=InputDocumentation(doc="output to stdout only reference names and lengths in JSON")), ToolInput(tag="in_regions", input_type=File(optional=True), prefix="--regions", doc=InputDocumentation(doc="output only reads overlapping one of regions from the BED file")), ToolInput(tag="in_count", input_type=Boolean(optional=True), prefix="--count", doc=InputDocumentation(doc="output to stdout only count of matching records, hHI are ignored")), ToolInput(tag="in_valid", input_type=Boolean(optional=True), prefix="--valid", doc=InputDocumentation(doc="output only valid alignments")), ToolInput(tag="in_sam_input", input_type=Boolean(optional=True), prefix="--sam-input", doc=InputDocumentation(doc="specify that input is in SAM format")), ToolInput(tag="in_ref_filename", input_type=File(optional=True), prefix="--ref-filename", doc=InputDocumentation(doc="specify reference for writing (NA)")), ToolInput(tag="in_show_progress", input_type=Boolean(optional=True), prefix="--show-progress", doc=InputDocumentation(doc="show progressbar in STDERR (works only for BAM files with no regions specified)")), ToolInput(tag="in_compression_level", input_type=Boolean(optional=True), prefix="--compression-level", doc=InputDocumentation(doc="specify compression level (from 0 to 9, works only for BAM output)")), ToolInput(tag="in_output_filename", input_type=File(optional=True), prefix="--output-filename", doc=InputDocumentation(doc="specify output filename")), ToolInput(tag="in_n_threads", input_type=Int(optional=True), prefix="--nthreads", doc=InputDocumentation(doc="maximum number of threads to use")), ToolInput(tag="in_subsample", input_type=String(optional=True), prefix="--subsample", doc=InputDocumentation(doc="subsample reads (read pairs)")), ToolInput(tag="in_subsampling_seed", input_type=String(optional=True), prefix="--subsampling-seed", doc=InputDocumentation(doc="set seed for subsampling\n")), ToolInput(tag="in_samba_mba_view", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_input_dot_bam_vertical_line_input_dots_am", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_regions", output_type=File(optional=True), selector=InputSelector(input_to_select="in_regions", type_hint=File()), doc=OutputDocumentation(doc="output only reads overlapping one of regions from the BED file")), ToolOutput(tag="out_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename", type_hint=File()), doc=OutputDocumentation(doc="specify output filename"))], container="quay.io/biocontainers/sambamba:0.8.0--h984e79f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sambamba_View_V0_1_0().translate("wdl")

