from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Array, String, Boolean

Extract_Kraken_Reads_Py_V0_1_0 = CommandToolBuilder(tool="extract_kraken_reads.py", base_command=["extract_kraken_reads.py"], inputs=[ToolInput(tag="in_kraken_output_file", input_type=File(optional=True), prefix="-k", doc=InputDocumentation(doc="Kraken output file to parse")), ToolInput(tag="in_s_one", input_type=Int(optional=True), prefix="-s1", doc=InputDocumentation(doc="FASTA/FASTQ File containing the raw sequence letters.")), ToolInput(tag="in_s_two", input_type=Int(optional=True), prefix="-s2", doc=InputDocumentation(doc="2nd FASTA/FASTQ File containing the raw sequence\nletters (paired).")), ToolInput(tag="in_taxid", input_type=Array(t=String(), optional=True), prefix="--taxid", doc=InputDocumentation(doc="Taxonomy ID[s] of reads to extract (space-delimited)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output FASTA/Q file containing the reads and sample\nIDs")), ToolInput(tag="in_output_two", input_type=File(optional=True), prefix="--output2", doc=InputDocumentation(doc="Output FASTA/Q file containig the second pair of reads\n[required for paired input]")), ToolInput(tag="in_append", input_type=File(optional=True), prefix="--append", doc=InputDocumentation(doc="Append the sequences to the end of the output FASTA\nfile specified.")), ToolInput(tag="in_no_append", input_type=Boolean(optional=True), prefix="--noappend", doc=InputDocumentation(doc="Create a new FASTA file containing sample sequences\nand IDs (rewrite if existing) [default].")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="--max", doc=InputDocumentation(doc="Maximum number of reads to save [default: 100,000,000]")), ToolInput(tag="in_report", input_type=File(optional=True), prefix="--report", doc=InputDocumentation(doc="Kraken report file. [required only if --include-\nparents/children is specified]")), ToolInput(tag="in_include_parents", input_type=Boolean(optional=True), prefix="--include-parents", doc=InputDocumentation(doc="Include reads classified at parent levels of the\nspecified taxids")), ToolInput(tag="in_include_children", input_type=Boolean(optional=True), prefix="--include-children", doc=InputDocumentation(doc="Include reads classified more specifically than the\nspecified taxids")), ToolInput(tag="in_exclude", input_type=Boolean(optional=True), prefix="--exclude", doc=InputDocumentation(doc="Instead of finding reads matching specified taxids,\nfinds all reads NOT matching specified taxids")), ToolInput(tag="in_fast_q_output", input_type=Boolean(optional=True), prefix="--fastq-output", doc=InputDocumentation(doc="Print output FASTQ reads [requires input FASTQ,\ndefault: output is FASTA]\n"))], outputs=[ToolOutput(tag="out_kraken_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_kraken_output_file", type_hint=File()), doc=OutputDocumentation(doc="Kraken output file to parse")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output FASTA/Q file containing the reads and sample\nIDs")), ToolOutput(tag="out_output_two", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_two", type_hint=File()), doc=OutputDocumentation(doc="Output FASTA/Q file containig the second pair of reads\n[required for paired input]")), ToolOutput(tag="out_append", output_type=File(optional=True), selector=InputSelector(input_to_select="in_append", type_hint=File()), doc=OutputDocumentation(doc="Append the sequences to the end of the output FASTA\nfile specified."))], container="quay.io/biocontainers/krakentools:1.0.1--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Extract_Kraken_Reads_Py_V0_1_0().translate("wdl")

