!Command
command:
- lordfast
positional:
- !Positional
  optional: false
  position: 0
  name: lordfast
  description: "D\bDE\bES\bSC\bCR\bRI\bIP\bPT\bTI\bIO\bON\bN"
- !Positional
  optional: false
  position: 1
  name: lordFAST
  description: is  a  sensitive  tool for mapping long reads with high error
- !Positional
  optional: false
  position: 0
  name: sequencing
  description: technology  but  provides  the  user  the ability to change
- !Positional
  optional: false
  position: 0
  name: Path
  description: to the reference genome file in FASTA format which is sup-
- !Positional
  optional: false
  position: 0
  name: Use
  description: "_\bI_\bN_\bT  number  of  CPU cores. Pass 0 to use all the available"
- !Positional
  optional: false
  position: 0
  name: Ignore
  description: "anchoring  positions  with more than _\bI_\bN_\bT reference hits."
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "lordFAST(1)                     lordfast Manual                    lordFAST(1)\n\
  \n\n\nN\bNA\bAM\bME\bE\n       lordfast\n\n\nD\bDE\bES\bSC\bCR\bRI\bIP\bPT\bTI\b\
  IO\bON\bN\n       lordFAST  is  a  sensitive  tool for mapping long reads with high\
  \ error\n       rates. lordFAST is specially designed for aligning  reads  from\
  \  PacBio\n       sequencing  technology  but  provides  the  user  the ability\
  \ to change\n       alignment parameters depending on the reads and application.\n\
  \n\nI\bIN\bNS\bST\bTA\bAL\bLL\bLA\bAT\bTI\bIO\bON\bN\n       lordFast can be installed\
  \ using conda  package  manager  (via  bioconda\n       channel) using the following\
  \ command:\n       $ conda install -c bioconda lordfast\n\n       In order to build\
  \ from source, please download the latest release from\n       https://github.com/vpc-ccg/lordfast/releases\n\
  \       or alternatively clone the repository by running the following command:\n\
  \       $ git clone https://github.com/vpc-ccg/lordfast.git\n\n       Now the code\
  \ can be compiled easily  by  running  \"make\"  command  line\n       which builds\
  \ the binary file \"lordfast\".\n       $ cd lordfast\n       $ make\n\n\nS\bSY\b\
  YN\bNO\bOP\bPS\bSI\bIS\bS\n       lordfast --index FILE [OPTIONS]\n       lordfast\
  \ --search FILE --seq FILE [OPTIONS]\n\n\nO\bOP\bPT\bTI\bIO\bON\bNS\bS\n   I\bIn\b\
  nd\bde\bex\bxi\bin\bng\bg o\bop\bpt\bti\bio\bon\bns\bs\n       -\b-I\bI,\b, -\b\
  --\b-i\bin\bnd\bde\bex\bx _\bS_\bT_\bR\n              Path  to the reference genome\
  \ file in FASTA format which is sup-\n              posed to be indexed. [required]\n\
  \n   M\bMa\bap\bpp\bpi\bin\bng\bg o\bop\bpt\bti\bio\bon\bns\bs\n       -\b-S\bS,\b\
  , -\b--\b-s\bse\bea\bar\brc\bch\bh _\bS_\bT_\bR\n              Path to the reference\
  \ genome file in FASTA format. [required]\n\n       -\b-s\bs,\b, -\b--\b-s\bse\b\
  eq\bq _\bS_\bT_\bR\n              Path to the file containing read sequences in\
  \  FASTA/FASTQ  for-\n              mat. [required]\n\n       -\b-o\bo,\b, -\b--\b\
  -o\bou\but\bt _\bS_\bT_\bR\n              Write output to _\bS_\bT_\bR file rather\
  \ than standard output. [stdout]\n\n       -\b-t\bt,\b, -\b--\b-t\bth\bhr\bre\b\
  ea\bad\bds\bs _\bI_\bN_\bT\n              Use  _\bI_\bN_\bT  number  of  CPU cores.\
  \ Pass 0 to use all the available\n              cores. [1]\n\n   A\bAd\bdv\bva\b\
  an\bnc\bce\bed\bd o\bop\bpt\bti\bio\bon\bns\bs\n       -\b-k\bk,\b, -\b--\b-m\b\
  mi\bin\bnA\bAn\bnc\bch\bho\bor\brL\bLe\ben\bn _\bI_\bN_\bT\n              Minimum\
  \ required length of anchors to be considered. [14]\n\n       -\b-n\bn,\b, -\b--\b\
  -n\bnu\bum\bmM\bMa\bap\bp _\bI_\bN_\bT\n              Perform alignment for at most\
  \ _\bI_\bN_\bT candidates. [10]\n\n       -\b-l\bl,\b, -\b--\b-m\bmi\bin\bnR\bRe\b\
  ea\bad\bdL\bLe\ben\bn _\bI_\bN_\bT\n              Do not try to map any read shorter\
  \ than _\bI_\bN_\bT bp and  report  them\n              as unmapped. [1000]\n\n\
  \       -\b-c\bc,\b, -\b--\b-a\ban\bnc\bch\bho\bor\brC\bCo\bou\bun\bnt\bt _\bI_\b\
  N_\bT\n              Consider _\bI_\bN_\bT anchoring positions on the long read.\
  \ [1000]\n\n       -\b-m\bm,\b, -\b--\b-m\bma\bax\bxR\bRe\bef\bfH\bHi\bit\bt _\b\
  I_\bN_\bT\n              Ignore  anchoring  positions  with more than _\bI_\bN_\b\
  T reference hits.\n              [1000]\n\n       -\b-R\bR,\b, -\b--\b-r\bre\bea\b\
  ad\bdG\bGr\bro\bou\bup\bp _\bS_\bT_\bR\n              SAM read group line in a format\
  \ like '@RGID:fooSM:bar'. []\n\n       -\b-a\ba,\b, -\b--\b-c\bch\bha\bai\bin\b\
  nA\bAl\blg\bg _\bI_\bN_\bT\n              Chaining algorithm to use. Options are\
  \ \"dp-n2\" and \"clasp\". [dp-\n              n2]\n\n       -\b--\b-n\bno\boS\b\
  Sa\bam\bmH\bHe\bea\bad\bde\ber\br\n              Do not print sam header in the\
  \ output.\n\n   O\bOt\bth\bhe\ber\br o\bop\bpt\bti\bio\bon\bns\bs\n       -\b-h\b\
  h,\b, -\b--\b-h\bhe\bel\blp\bp\n              Print this help file.\n\n       -\b\
  -v\bv,\b, -\b--\b-v\bve\ber\brs\bsi\bio\bon\bn\n              Print the version\
  \ of software.\n\n\nE\bEX\bXA\bAM\bMP\bPL\bLE\bES\bS\n       Indexing the reference\
  \ genome:\n       $ ./lordfast --index gen.fa\n\n       Mapping to the reference\
  \ genome:\n       $ ./lordfast --search gen.fa --seq reads.fastq > map.sam\n   \
  \    $ ./lordfast --search gen.fa --seq reads.fastq --threads 4 > map.sam\n\n\n\
  B\bBU\bUG\bGS\bS\n       Please report the bugs through lordfast's issues page at\n\
  \       https://github.com/vpc-ccg/lordfast/issues\n\n\nC\bCO\bON\bNT\bTA\bAC\b\
  CT\bT\n       Ehsan Haghshenas (ehaghshe@sfu.ca)\n\n\nC\bCO\bOP\bPY\bYR\bRI\bIG\b\
  GH\bHT\bT A\bAN\bND\bD L\bLI\bIC\bCE\bEN\bNS\bSE\bE\n       This software is released\
  \ under  GNU General Public License (v3.0)\n       Copyright (c) 2018 Simon Fraser\
  \ University, All rights reserved.\n\n\n\nlordFAST                  Last Updated:\
  \ June 26, 2018              lordFAST(1)\n"
generated_using:
- --help
docker_image:
