from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Int, Float

Planemo_Tool_Init_V0_1_0 = CommandToolBuilder(tool="planemo_tool_init", base_command=["planemo", "tool_init"], inputs=[ToolInput(tag="in_id", input_type=String(optional=True), prefix="--id", doc=InputDocumentation(doc="Short identifier for new tool (no whitespace)")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Overwrite existing tool if present.")), ToolInput(tag="in_tool", input_type=File(optional=True), prefix="--tool", doc=InputDocumentation(doc="Output path for new tool (default is <id>.xml)")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Name for new tool (user facing)")), ToolInput(tag="in_description", input_type=String(optional=True), prefix="--description", doc=InputDocumentation(doc="Short description for new tool (user facing)")), ToolInput(tag="in_command", input_type=String(optional=True), prefix="--command", doc=InputDocumentation(doc="Command potentially including cheetah variables\n()(e.g. 'seqtk seq -a $input > $output')")), ToolInput(tag="in_example_command", input_type=Int(optional=True), prefix="--example_command", doc=InputDocumentation(doc="Example to command with paths to build Cheetah\ntemplate from (e.g. 'seqtk seq -a 2.fastq >\n2.fasta'). Option cannot be used with --command,\nshould be used --example_input and\n--example_output.")), ToolInput(tag="in_example_input", input_type=File(optional=True), prefix="--example_input", doc=InputDocumentation(doc="For use with --example_command, replace input file\n(e.g. 2.fastq with a data input parameter).")), ToolInput(tag="in_example_output", input_type=File(optional=True), prefix="--example_output", doc=InputDocumentation(doc="For use with --example_command, replace input file\n(e.g. 2.fastq with a tool output).")), ToolInput(tag="in_named_output", input_type=Int(optional=True), prefix="--named_output", doc=InputDocumentation(doc="Create a named output for use with command block\nfor example specify --named_output=output1.bam and\nthen use '-o $output1' in your command block.")), ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="An input description (e.g. input.fasta)")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="An output location (e.g. output.bam), the Galaxy\ndatatype is inferred from the extension.")), ToolInput(tag="in_help_text", input_type=String(optional=True), prefix="--help_text", doc=InputDocumentation(doc="Help text (reStructuredText)")), ToolInput(tag="in_help_from_command", input_type=String(optional=True), prefix="--help_from_command", doc=InputDocumentation(doc="Auto populate help from supplied command.")), ToolInput(tag="in_doi", input_type=Float(optional=True), prefix="--doi", doc=InputDocumentation(doc="Supply a DOI (http://www.doi.org/) easing citation\nof the tool for Galxy users (e.g. 10.1101/014043).")), ToolInput(tag="in_cite_url", input_type=String(optional=True), prefix="--cite_url", doc=InputDocumentation(doc="Supply a URL for citation.")), ToolInput(tag="in_test_case", input_type=Boolean(optional=True), prefix="--test_case", doc=InputDocumentation(doc="For use with --example_commmand, generate a tool\ntest case from the supplied example.")), ToolInput(tag="in_macros", input_type=Boolean(optional=True), prefix="--macros", doc=InputDocumentation(doc="Generate a macros.xml for reuse across many tools.")), ToolInput(tag="in_version_command", input_type=String(optional=True), prefix="--version_command", doc=InputDocumentation(doc="Command to print version (e.g. 'seqtk --version')")), ToolInput(tag="in_requirement", input_type=Float(optional=True), prefix="--requirement", doc=InputDocumentation(doc="Add a tool requirement package (e.g. 'seqtk' or\n'seqtk@1.68').")), ToolInput(tag="in_container", input_type=String(optional=True), prefix="--container", doc=InputDocumentation(doc="Add a Docker image identifier for this tool.")), ToolInput(tag="in_cwl", input_type=Boolean(optional=True), prefix="--cwl", doc=InputDocumentation(doc="Build a CWL tool instead of a Galaxy tool."))], outputs=[ToolOutput(tag="out_tool", output_type=File(optional=True), selector=InputSelector(input_to_select="in_tool", type_hint=File()), doc=OutputDocumentation(doc="Output path for new tool (default is <id>.xml)"))], container="quay.io/biocontainers/planemo:0.74.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Planemo_Tool_Init_V0_1_0().translate("wdl")

