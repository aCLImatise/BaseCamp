from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Directory

Planemo_Shed_Init_V0_1_0 = CommandToolBuilder(tool="planemo_shed_init", base_command=["planemo", "shed_init"], inputs=[ToolInput(tag="in_from_workflow", input_type=File(optional=True), prefix="--from_workflow", doc=InputDocumentation(doc="Attempt to generate repository dependencies\nfrom specified workflow.")), ToolInput(tag="in_description", input_type=String(optional=True), prefix="--description", doc=InputDocumentation(doc="Specify repository description for\n.shed.yml.")), ToolInput(tag="in_long_description", input_type=String(optional=True), prefix="--long_description", doc=InputDocumentation(doc="Specify repository long_description for\n.shed.yml.")), ToolInput(tag="in_remote_repository_url", input_type=String(optional=True), prefix="--remote_repository_url", doc=InputDocumentation(doc="Specify repository remote_repository_url for\n.shed.yml.")), ToolInput(tag="in_homepage_url", input_type=String(optional=True), prefix="--homepage_url", doc=InputDocumentation(doc="Specify repository homepage_url for\n.shed.yml.")), ToolInput(tag="in_category", input_type=Boolean(optional=True), prefix="--category", doc=InputDocumentation(doc="[Assembly|ChIP-seq|Combinatorial Selections|Computational chemistry|Constructive Solid Geometry|Convert Formats|Data Export|Data Managers|Data Source|Entomology|Epigenetics|Fasta Manipulation|Fastq Manipulation|Flow Cytometry Analysis|Genome annotation|Genome editing|Genome-Wide Association Study|Genomic Interval Operations|Graphics|Imaging|Machine Learning|Metabolomics|Metagenomics|Micro-array Analysis|Molecular Dynamics|Next Gen Mappers|NLP|Ontology Manipulation|Phylogenetics|Proteomics|RNA|SAM|Sequence Analysis|Statistics|Systems Biology|Text Manipulation|Tool Dependency Packages|Tool Generators|Transcriptomics|Variant Analysis|Visualization|Web Services]\nSpecify repository category for .shed.yml\n(may specify multiple).")), ToolInput(tag="in_owner", input_type=String(optional=True), prefix="--owner", doc=InputDocumentation(doc="Tool Shed repository owner (username).")), ToolInput(tag="in_name", input_type=Directory(optional=True), prefix="--name", doc=InputDocumentation(doc="Tool Shed repository name (defaults to the\ninferred tool directory name).")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Overwrite existing files if present.")), ToolInput(tag="in_project", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/planemo:0.74.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Planemo_Shed_Init_V0_1_0().translate("wdl")

