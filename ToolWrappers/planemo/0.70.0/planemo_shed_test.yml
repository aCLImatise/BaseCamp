!Command
command:
- planemo
- shed_test
positional:
- !Positional
  description: --galaxy_email TEXT             E-mail address to use when launching
    single-
  position: 0
  name: Galaxy.
  optional: false
named:
- !Flag
  description: "Recursively perform command for nested\nrepository directories."
  synonyms:
  - -r
  - --recursive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "If multiple repositories are specified and\nan error occurs stop immediately\
    \ instead of\nprocessing remaining repositories."
  synonyms:
  - --fail_fast
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Tool Shed repository owner (username).
  synonyms:
  - --owner
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Tool Shed repository name (defaults to the\ninferred tool directory\
    \ name)."
  synonyms:
  - --name
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "E-mail for Tool Shed auth (required unless\nshed_key is specified)."
  synonyms:
  - --shed_email
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "API key for Tool Shed access. An API key is\nrequired unless e-mail\
    \ and password is\nspecified. This key can be specified with\neither --shed_key\
    \ or --shed_key_from_env."
  synonyms:
  - --shed_key
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Environment variable to read API key for\nTool Shed access from."
  synonyms:
  - --shed_key_from_env
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Password for Tool Shed auth (required unless\nshed_key is specified)."
  synonyms:
  - --shed_password
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Tool Shed to target (this can be 'toolshed',\n'testtoolshed', 'local'\
    \ (alias for\nhttp://localhost:9009/), an arbitrary url or\nmappings defined ~/.planemo.yml."
  synonyms:
  - -t
  - --shed_target
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Root of development galaxy directory to\nexecute command with."
  synonyms:
  - --galaxy_root
  args: !SimpleFlagArg
    name: DIRECTORY
  optional: true
- !Flag
  description: "[2|2.7|3|3.5|3.6|3.7|3.8]\nPython version to start Galaxy under"
  synonyms:
  - --galaxy_python_version
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Extra tool sources to include in Galaxy's\ntool panel (file or directory).\
    \ These will\nnot be linted/tested/etc... but they will be\navailable to workflows\
    \ and for interactive\nuse."
  synonyms:
  - --extra_tools
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "Download and configure a disposable copy of\nGalaxy from github."
  synonyms:
  - --install_galaxy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Branch of Galaxy to target (defaults to\nmaster) if a Galaxy root\
    \ isn't specified."
  synonyms:
  - --galaxy_branch
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Git source of Galaxy to target (defaults to\nthe official galaxyproject\
    \ github source if\na Galaxy root isn't specified."
  synonyms:
  - --galaxy_source
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Do not create or source a virtualenv\nenvironment for Galaxy, this\
    \ should be used\nor instance to preserve an externally\nconfigured virtual environment\
    \ or conda\nenvironment."
  synonyms:
  - --skip_venv
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Skip caching of Galaxy source and\ndependencies obtained with --install_galaxy.\n\
    Not caching this results in faster downloads\n(no git) - so is better on throw\
    \ away\ninstances such with TravisCI."
  synonyms:
  - --no_cache_galaxy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not cleanup temp files created for and by
  synonyms:
  - --no_cleanup
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: / --no_docker          Run Galaxy tools in Docker if enabled.
  synonyms:
  - --docker
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Command used to launch docker (defaults to\ndocker)."
  synonyms:
  - --docker_cmd
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "/ --no_docker_sudo\nFlag to use sudo when running docker."
  synonyms:
  - --docker_sudo
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Docker host to target when executing docker\ncommands (defaults to\
    \ localhost)."
  synonyms:
  - --docker_host
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "sudo command to use when --docker_sudo is\nenabled (defaults to sudo)."
  synonyms:
  - --docker_sudo_cmd
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Test tools against mulled containers (forces\n--docker)."
  synonyms:
  - --mulled_containers
  - --biocontainers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Job configuration file for Galaxy to target.
  synonyms:
  - --job_config_file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Tool dependency dir for Galaxy to target.
  synonyms:
  - --tool_dependency_dir
  args: !SimpleFlagArg
    name: DIRECTORY
  optional: true
- !Flag
  description: "Update test-data directory with job outputs\n(normally written to\
    \ directory\n--job_output_files if specified.)"
  synonyms:
  - --update_test_data
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "/ --no_paste_test_data_paths\nBy default Planemo will use or not use\n\
    Galaxy's path paste option to load test data\ninto a history based on the engine\
    \ type it\nis targeting. This can override the logic to\nexplicitly enable or\
    \ disable path pasting."
  synonyms:
  - --paste_test_data_paths
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Output test report (HTML - for humans)\ndefaults to tool_test_output.html."
  synonyms:
  - --test_output
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "Output test report (Basic text - for display\nin CI)"
  synonyms:
  - --test_output_text
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "Output test report (Markdown style - for\nhumans & computers)"
  synonyms:
  - --test_output_markdown
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: Output test report (xunit style - for CI
  synonyms:
  - --test_output_xunit
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: Write job outputs to specified directory.
  synonyms:
  - --job_output_files
  args: !SimpleFlagArg
    name: DIRECTORY
  optional: true
- !Flag
  description: "[none|minimal|compact]\nSummary style printed to planemo's standard\n\
    output (see output reports for more complete\nsummary). Set to 'none' to disable\n\
    completely."
  synonyms:
  - --summary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Do not install shed dependencies as part of\nrepository installation."
  synonyms:
  - --skip_dependencies
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: planemo shed_test [OPTIONS] PROJECT\n\n  Run tests of published\
  \ shed artifacts.\n\n  This command will start a Galaxy instance configured to target\
  \ the\n  specified shed, find published artifacts (tools and dependencies)\n  corresponding\
  \ to command-line arguments and ``.shed.yml`` file(s), install\n  these artifacts,\
  \ and run the tool tests for these commands.\n\n  This command requires the target\
  \ to be version 15.07 or newer.\n\nOptions:\n  -r, --recursive                 Recursively\
  \ perform command for nested\n                                  repository directories.\n\
  \  --fail_fast                     If multiple repositories are specified and\n\
  \                                  an error occurs stop immediately instead of\n\
  \                                  processing remaining repositories.\n  --owner\
  \ TEXT                    Tool Shed repository owner (username).\n  --name TEXT\
  \                     Tool Shed repository name (defaults to the\n             \
  \                     inferred tool directory name).\n  --shed_email TEXT      \
  \         E-mail for Tool Shed auth (required unless\n                         \
  \         shed_key is specified).\n  --shed_key TEXT                 API key for\
  \ Tool Shed access. An API key is\n                                  required unless\
  \ e-mail and password is\n                                  specified. This key\
  \ can be specified with\n                                  either --shed_key or\
  \ --shed_key_from_env.\n  --shed_key_from_env TEXT        Environment variable to\
  \ read API key for\n                                  Tool Shed access from.\n \
  \ --shed_password TEXT            Password for Tool Shed auth (required unless\n\
  \                                  shed_key is specified).\n  -t, --shed_target\
  \ TEXT          Tool Shed to target (this can be 'toolshed',\n                 \
  \                 'testtoolshed', 'local' (alias for\n                         \
  \         http://localhost:9009/), an arbitrary url or\n                       \
  \           mappings defined ~/.planemo.yml.\n  --galaxy_root DIRECTORY        \
  \ Root of development galaxy directory to\n                                  execute\
  \ command with.\n  --galaxy_python_version [2|2.7|3|3.5|3.6|3.7|3.8]\n         \
  \                         Python version to start Galaxy under\n  --extra_tools\
  \ PATH              Extra tool sources to include in Galaxy's\n                \
  \                  tool panel (file or directory). These will\n                \
  \                  not be linted/tested/etc... but they will be\n              \
  \                    available to workflows and for interactive\n              \
  \                    use.\n  --install_galaxy                Download and configure\
  \ a disposable copy of\n                                  Galaxy from github.\n\
  \  --galaxy_branch TEXT            Branch of Galaxy to target (defaults to\n   \
  \                               master) if a Galaxy root isn't specified.\n  --galaxy_source\
  \ TEXT            Git source of Galaxy to target (defaults to\n                \
  \                  the official galaxyproject github source if\n               \
  \                   a Galaxy root isn't specified.\n  --skip_venv              \
  \       Do not create or source a virtualenv\n                                 \
  \ environment for Galaxy, this should be used\n                                \
  \  or instance to preserve an externally\n                                  configured\
  \ virtual environment or conda\n                                  environment.\n\
  \  --no_cache_galaxy               Skip caching of Galaxy source and\n         \
  \                         dependencies obtained with --install_galaxy.\n       \
  \                           Not caching this results in faster downloads\n     \
  \                             (no git) - so is better on throw away\n          \
  \                        instances such with TravisCI.\n  --no_cleanup         \
  \           Do not cleanup temp files created for and by\n                     \
  \             Galaxy.\n  --galaxy_email TEXT             E-mail address to use when\
  \ launching single-\n                                  user Galaxy server.\n  --docker\
  \ / --no_docker          Run Galaxy tools in Docker if enabled.\n  --docker_cmd\
  \ TEXT               Command used to launch docker (defaults to\n              \
  \                    docker).\n  --docker_sudo / --no_docker_sudo\n            \
  \                      Flag to use sudo when running docker.\n  --docker_host TEXT\
  \              Docker host to target when executing docker\n                   \
  \               commands (defaults to localhost).\n  --docker_sudo_cmd TEXT    \
  \      sudo command to use when --docker_sudo is\n                             \
  \     enabled (defaults to sudo).\n  --mulled_containers, --biocontainers\n    \
  \                              Test tools against mulled containers (forces\n  \
  \                                --docker).\n  --job_config_file FILE          Job\
  \ configuration file for Galaxy to target.\n  --tool_dependency_dir DIRECTORY\n\
  \                                  Tool dependency dir for Galaxy to target.\n \
  \ --update_test_data              Update test-data directory with job outputs\n\
  \                                  (normally written to directory\n            \
  \                      --job_output_files if specified.)\n  --paste_test_data_paths\
  \ / --no_paste_test_data_paths\n                                  By default Planemo\
  \ will use or not use\n                                  Galaxy's path paste option\
  \ to load test data\n                                  into a history based on the\
  \ engine type it\n                                  is targeting. This can override\
  \ the logic to\n                                  explicitly enable or disable path\
  \ pasting.\n  --test_output PATH              Output test report (HTML - for humans)\n\
  \                                  defaults to tool_test_output.html.\n  --test_output_text\
  \ PATH         Output test report (Basic text - for display\n                  \
  \                in CI)\n  --test_output_markdown PATH     Output test report (Markdown\
  \ style - for\n                                  humans & computers)\n  --test_output_xunit\
  \ PATH        Output test report (xunit style - for CI\n                       \
  \           systems\n  --test_output_junit PATH        Output test report (jUnit\
  \ style - for CI\n                                  systems\n  --test_output_json\
  \ PATH         Output test report (planemo json) defaults\n                    \
  \              to tool_test_output.json.\n  --job_output_files DIRECTORY    Write\
  \ job outputs to specified directory.\n  --summary [none|minimal|compact]\n    \
  \                              Summary style printed to planemo's standard\n   \
  \                               output (see output reports for more complete\n \
  \                                 summary). Set to 'none' to disable\n         \
  \                         completely.\n  --skip_dependencies             Do not\
  \ install shed dependencies as part of\n                                  repository\
  \ installation.\n  --help                          Show this message and exit.\n"
generated_using:
- --help
