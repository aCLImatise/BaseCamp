from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Kronos_Run_V0_1_0 = CommandToolBuilder(tool="kronos_run", base_command=["kronos", "run"], inputs=[ToolInput(tag="in_job_scheduler", input_type=String(optional=True), prefix="--job_scheduler", doc=InputDocumentation(doc="job scheduler used to manage jobs on the cluster")), ToolInput(tag="in_components_dir", input_type=File(optional=True), prefix="--components_dir", doc=InputDocumentation(doc="path to components_dir")), ToolInput(tag="in_drmaa_library_path", input_type=File(optional=True), prefix="--drmaa_library_path", doc=InputDocumentation(doc="path of drmaa library")), ToolInput(tag="in_pipeline_name", input_type=String(optional=True), prefix="--pipeline_name", doc=InputDocumentation(doc="pipeline name")), ToolInput(tag="in_input_samples", input_type=File(optional=True), prefix="--input_samples", doc=InputDocumentation(doc="path to the input samples file")), ToolInput(tag="in_num_jobs", input_type=Int(optional=True), prefix="--num_jobs", doc=InputDocumentation(doc="maximum number of simultaneous jobs per pipeline")), ToolInput(tag="in_kronos_pipeline", input_type=File(optional=True), prefix="--kronos_pipeline", doc=InputDocumentation(doc="path to kronos-made pipeline script.")), ToolInput(tag="in_num_pipelines", input_type=Int(optional=True), prefix="--num_pipelines", doc=InputDocumentation(doc="maximum number of simultaneous running pipelines")), ToolInput(tag="in_python_installation", input_type=File(optional=True), prefix="--python_installation", doc=InputDocumentation(doc="path to python executable")), ToolInput(tag="in_qsub_options", input_type=String(optional=True), prefix="--qsub_options", doc=InputDocumentation(doc="native qsub specifications for the cluster in a single\nstring")), ToolInput(tag="in_run_id", input_type=String(optional=True), prefix="--run_id", doc=InputDocumentation(doc="pipeline run id")), ToolInput(tag="in_setup_file", input_type=File(optional=True), prefix="--setup_file", doc=InputDocumentation(doc="path to the setup file")), ToolInput(tag="in_working_dir", input_type=File(optional=True), prefix="--working_dir", doc=InputDocumentation(doc="path to the working_dir")), ToolInput(tag="in_config_file", input_type=File(optional=True), prefix="--config_file", doc=InputDocumentation(doc="path to the config_file.yaml")), ToolInput(tag="in_no_prefix", input_type=Boolean(optional=True), prefix="--no_prefix", doc=InputDocumentation(doc="switch off the prefix that is added to all the output\nfiles.\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kronos_Run_V0_1_0().translate("wdl", allow_empty_container=True)

