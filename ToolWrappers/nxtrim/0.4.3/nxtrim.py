from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int

Nxtrim_V0_1_0 = CommandToolBuilder(tool="nxtrim", base_command=["nxtrim"], inputs=[ToolInput(tag="in_one", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc="[ --r1 ] arg                 read 1 in fastq format (gzip allowed)")), ToolInput(tag="in_two", input_type=Boolean(optional=True), prefix="-2", doc=InputDocumentation(doc="[ --r2 ] arg                 read 2 in fastq format (gzip allowed)")), ToolInput(tag="in_arg_output_prefix", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="[ --output-prefix ] arg      output prefix")), ToolInput(tag="in_just_mp", input_type=Boolean(optional=True), prefix="--justmp", doc=InputDocumentation(doc="just creates a the mp/unknown libraries (reads with adapter at the start will be completely N masked)")), ToolInput(tag="in_stdout", input_type=Boolean(optional=True), prefix="--stdout", doc=InputDocumentation(doc="print trimmed reads to stdout (equivalent to justmp)")), ToolInput(tag="in_stdout_mp", input_type=Boolean(optional=True), prefix="--stdout-mp", doc=InputDocumentation(doc="print only known MP reads to stdout (good for scaffolding)")), ToolInput(tag="in_stdout_un", input_type=Boolean(optional=True), prefix="--stdout-un", doc=InputDocumentation(doc="print only unknown reads to stdout")), ToolInput(tag="in_rf", input_type=Boolean(optional=True), prefix="--rf", doc=InputDocumentation(doc="leave mate pair reads in RF orientation [by default are flipped into FR]")), ToolInput(tag="in_preserve_mp", input_type=Boolean(optional=True), prefix="--preserve-mp", doc=InputDocumentation(doc="preserve MPs even when the corresponding PE has longer reads")), ToolInput(tag="in_ignore_pf", input_type=Boolean(optional=True), prefix="--ignorePF", doc=InputDocumentation(doc="ignore chastity/purity filters in read headers")), ToolInput(tag="in_separate", input_type=Boolean(optional=True), prefix="--separate", doc=InputDocumentation(doc="output paired reads in separate files (prefix_R1/prefix_r2). Default is interleaved.")), ToolInput(tag="in_aggressive", input_type=Boolean(optional=True), prefix="--aggressive", doc=InputDocumentation(doc="more aggressive adapter search (see docs/adapter.md)")), ToolInput(tag="in_similarity", input_type=Int(optional=True), prefix="--similarity", doc=InputDocumentation(doc="(=0.85)    The minimum similarity between strings to be considered a match (Hamming distance divided by string length)")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="--minoverlap", doc=InputDocumentation(doc="(=12)      The minimum overlap to be considered for matching")), ToolInput(tag="in_minlength", input_type=Int(optional=True), prefix="--minlength", doc=InputDocumentation(doc="(=21)      The minimum read length to output (smaller reads will be filtered)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Nxtrim_V0_1_0().translate("wdl", allow_empty_container=True)

