!Command
command:
- spectrast2tsv.py
positional:
- !Positional
  optional: false
  position: 0
  name: spectrast_file
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -d
  description: Remove duplicate masses from labeling
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: Use theoretical mass
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: fasta_file    Fasta file to relate peptides to their proteins (this
    is optional).
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -g
  description: 'mass_modifs   List of allowed fragment mass modifications. Useful
    for phosphorylation and neutral losses. Example: -g -79.97,-97.98,-17.03,-18.01'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: labeling_file File containing the amino acid isotopic labeling mass
    shifts. If this option is used, heavy transitions will be generated.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  description: 'output_key    Select the output provided. Keys available: openswath,
    peakview. Default: peakview'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: 'mass_limits   Lower and upper mass limits of fragment ions. Example:
    -l 400,2000'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: mods_file     File with the modifications delta mass
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: 'int           Max number of reported ions per peptide/z. Default:
    20'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: 'int           Min number of reported ions per peptide/z. Default:
    3'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  description: 'float         Maximum error allowed at the annotation of a fragment
    ion. Default: 0.05'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: 'int            Number of processors to use (only for isoforms!). Default:
    1'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: 'ion_series    List of ion series to be used. Example: -s y,b'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: 'time-scale    Options: minutes, seconds. Default: seconds.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  description: 'unimod-code    Use this unimod code as a switching modification. Useful
    for phosphorylations. Example: -u 21'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: Verbose mode.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  description: swaths_file   File containing the swath ranges. This is used to remove
    transitions with Q3 falling in the swath mass range. (line breaks in windows/unix
    format)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  description: 'allowed_frg_z Fragment ion charge states allowed. Default: 1,2'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -y
  description: 'UIS-order     When using a switching modification, this determines
    the UIS order to be calculated. If -1 is set, all transitions for each isoform
    will be reported. Default : 2'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  description: 'outfile       Output file name (default: appends _peakview.txt)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: Display this help
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "\nspectrast2tsv.py\n---------------\nThis script is used as filter from\
  \ spectraST files to swath input files.\n\nUsage: \npython spectrast2tsv.py [options]\
  \ spectrast_file(s)\n-h                  Display this help\n-d                 \
  \ Remove duplicate masses from labeling\n-e                  Use theoretical mass\n\
  -f    fasta_file    Fasta file to relate peptides to their proteins (this is optional).\n\
  -g    mass_modifs   List of allowed fragment mass modifications. Useful for phosphorylation\
  \ and neutral losses. Example: -g -79.97,-97.98,-17.03,-18.01\n-i    labeling_file\
  \ File containing the amino acid isotopic labeling mass shifts. If this option is\
  \ used, heavy transitions will be generated.\n-k    output_key    Select the output\
  \ provided. Keys available: openswath, peakview. Default: peakview\n-l    mass_limits\
  \   Lower and upper mass limits of fragment ions. Example: -l 400,2000\n-m    mods_file\
  \     File with the modifications delta mass\n-n    int           Max number of\
  \ reported ions per peptide/z. Default: 20\n-o    int           Min number of reported\
  \ ions per peptide/z. Default: 3\n-p    float         Maximum error allowed at the\
  \ annotation of a fragment ion. Default: 0.05\n-q    int            Number of processors\
  \ to use (only for isoforms!). Default: 1\n-s    ion_series    List of ion series\
  \ to be used. Example: -s y,b\n-t    time-scale    Options: minutes, seconds. Default:\
  \ seconds.\n-u     unimod-code    Use this unimod code as a switching modification.\
  \ Useful for phosphorylations. Example: -u 21\n-v                  Verbose mode.\n\
  -w    swaths_file   File containing the swath ranges. This is used to remove transitions\
  \ with Q3 falling in the swath mass range. (line breaks in windows/unix format)\n\
  -x    allowed_frg_z Fragment ion charge states allowed. Default: 1,2\n-y    UIS-order\
  \     When using a switching modification, this determines the UIS order to be calculated.\
  \ If -1 is set, all transitions for each isoform will be reported. Default : 2\n\
  -a    outfile       Output file name (default: appends _peakview.txt)\n\n"
generated_using:
- --help
docker_image:
