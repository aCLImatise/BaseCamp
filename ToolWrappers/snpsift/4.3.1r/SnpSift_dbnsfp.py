from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Snpsift_Dbnsfp_V0_1_0 = CommandToolBuilder(tool="SnpSift_dbnsfp", base_command=["SnpSift", "dbnsfp"], inputs=[ToolInput(tag="in_annotate_fields_has", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": Annotate fields, even if the database has an empty value (annotates using '.' for empty).")), ToolInput(tag="in_collapse", input_type=Boolean(optional=True), prefix="-collapse", doc=InputDocumentation(doc=": Collapse repeated values from dbNSFP. Default: false")), ToolInput(tag="in_db", input_type=File(optional=True), prefix="-db", doc=InputDocumentation(doc=": Path to dbNSFP database file (bgzip + tabix).")), ToolInput(tag="in__genome_version", input_type=String(optional=True), prefix="-g", doc=InputDocumentation(doc=": Genome version.")), ToolInput(tag="in_no_collapse", input_type=Boolean(optional=True), prefix="-noCollapse", doc=InputDocumentation(doc=": Switch off 'collapsing' repeated values from dbNSFP. Default: true")), ToolInput(tag="in_annotate_fields_are", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": Annotate fields even if there are no database matching entries (annotates using '.').")), ToolInput(tag="in__invert_", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc=": Invert 'fields to add' selection (i.e. use all fields except the ones specified in option '-f').")), ToolInput(tag="in_comma_separated_list", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": A comma separated list of fields to add.\nDefault fields to add: Uniprot_acc, Interpro_domain, SIFT_pred, Polyphen2_HDIV_pred, Polyphen2_HVAR_pred, LRT_pred, MutationTaster_pred, GERP++_NR, GERP++_RS, phastCons100way_vertebrate, 1000Gp1_AF, 1000Gp1_AFR_AF, 1000Gp1_EUR_AF, 1000Gp1_AMR_AF, 1000Gp1_ASN_AF, ESP6500_AA_AF, ESP6500_EA_AF, MutationTaster_pred, MutationAssessor_pred, FATHMM_pred, PROVEAN_pred, CADD_phred, MetaSVM_pred, 1000Gp3_AC, 1000Gp3_AF, 1000Gp3_AFR_AC, 1000Gp3_AFR_AF, 1000Gp3_EUR_AC, 1000Gp3_EUR_AF, 1000Gp3_AMR_AC, 1000Gp3_AMR_AF, 1000Gp3_EAS_AC, 1000Gp3_EAS_AF, 1000Gp3_SAS_AC, 1000Gp3_SAS_AF, ESP6500_AA_AC, ESP6500_AA_AF, ESP6500_EA_AC, ESP6500_EA_AF, ExAC_AC, ExAC_AF, ExAC_Adj_AC, ExAC_Adj_AF, ExAC_AFR_AC, ExAC_AFR_AF, ExAC_AMR_AC, ExAC_AMR_AF, ExAC_EAS_AC, ExAC_EAS_AF, ExAC_FIN_AC, ExAC_FIN_AF, ExAC_NFE_AC, ExAC_NFE_AF, ExAC_SAS_AC, ExAC_SAS_AF")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="-config", doc=InputDocumentation(doc=": Specify config file")), ToolInput(tag="in__debug", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": Debug.")), ToolInput(tag="in_download", input_type=Boolean(optional=True), prefix="-download", doc=InputDocumentation(doc=": Download database, if not available locally. Default: true.")), ToolInput(tag="in_no_download", input_type=Boolean(optional=True), prefix="-noDownload", doc=InputDocumentation(doc=": Do not download a database, if not available locally.")), ToolInput(tag="in_no_log", input_type=Boolean(optional=True), prefix="-noLog", doc=InputDocumentation(doc=": Do not report usage statistics to server.")), ToolInput(tag="in__verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": Verbose.")), ToolInput(tag="in_jar", input_type=String(optional=True), prefix="-jar", doc=InputDocumentation(doc="")), ToolInput(tag="in_java", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_d_bnsf_p", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_file_dot_vcf", input_type=File(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Snpsift_Dbnsfp_V0_1_0().translate("wdl", allow_empty_container=True)

