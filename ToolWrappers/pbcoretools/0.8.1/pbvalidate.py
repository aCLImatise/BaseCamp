from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Pbvalidate_V0_1_0 = CommandToolBuilder(tool="pbvalidate", base_command=["pbvalidate"], inputs=[ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="Write the log to file. Default(None) will write to\nstdout. (default: None)")), ToolInput(tag="in_log_level", input_type=String(optional=True), prefix="--log-level", doc=InputDocumentation(doc="Set log level (default: CRITICAL)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Alias for setting log level to DEBUG (default: False)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Alias for setting log level to CRITICAL to suppress\noutput. (default: False)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Set the verbosity level. (default: None)")), ToolInput(tag="in_quick", input_type=Boolean(optional=True), prefix="--quick", doc=InputDocumentation(doc="Limits validation to the first 100 records (plus file\nheader); equivalent to --max-records=100 (default:\nFalse)")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="--max", doc=InputDocumentation(doc="Exit after MAX_ERRORS have been recorded (DEFAULT:\ncheck entire file) (default: None)")), ToolInput(tag="in_max_records", input_type=Int(optional=True), prefix="--max-records", doc=InputDocumentation(doc="Exit after MAX_RECORDS have been inspected (DEFAULT:\ncheck entire file) (default: None)")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Use the specified file type instead of guessing\n(default: None)")), ToolInput(tag="in_index", input_type=Boolean(optional=True), prefix="--index", doc=InputDocumentation(doc="Require index files (.fai or .pbi) (default: False)")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="--strict", doc=InputDocumentation(doc="Turn on additional validation, primarily for DataSet\nXML (default: False)")), ToolInput(tag="in_x_unit_out", input_type=String(optional=True), prefix="--xunit-out", doc=InputDocumentation(doc="Xunit test results for Jenkins (default: None)")), ToolInput(tag="in_alarms", input_type=String(optional=True), prefix="--alarms", doc=InputDocumentation(doc="alarms.json for errors (default: None)")), ToolInput(tag="in_unaligned", input_type=Boolean(optional=True), prefix="--unaligned", doc=InputDocumentation(doc="Specify that the file should contain only unmapped\nalignments (DEFAULT: no requirement) (default: None)")), ToolInput(tag="in_unmapped", input_type=Boolean(optional=True), prefix="--unmapped", doc=InputDocumentation(doc="Alias for --unaligned (default: None)")), ToolInput(tag="in_aligned", input_type=Boolean(optional=True), prefix="--aligned", doc=InputDocumentation(doc="Specify that the file should contain only mapped\nalignments (DEFAULT: no requirement) (default: None)")), ToolInput(tag="in_mapped", input_type=Boolean(optional=True), prefix="--mapped", doc=InputDocumentation(doc="Alias for --aligned (default: None)")), ToolInput(tag="in_contents", input_type=String(optional=True), prefix="--contents", doc=InputDocumentation(doc="Enforce read type (default: None)")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Path to optional reference FASTA file, used for\nadditional validation of mapped BAM records (default:\nNone)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pbvalidate_V0_1_0().translate("wdl", allow_empty_container=True)

