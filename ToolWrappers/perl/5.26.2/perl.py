from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Perl_V0_1_0 = CommandToolBuilder(tool="perl", base_command=["perl"], inputs=[ToolInput(tag="in_specify_record_separator", input_type=Boolean(optional=True), prefix="-0", doc=InputDocumentation(doc="[octal]         specify record separator (\0, if no argument)")), ToolInput(tag="in_autosplit_mode_p", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="autosplit mode with -n or -p (splits $_ into @F)")), ToolInput(tag="in_enables_unicode_features", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[number/list]   enables the listed Unicode features")), ToolInput(tag="in_check_syntax_runs", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="check syntax only (runs BEGIN and CHECK blocks)")), ToolInput(tag="in_run_program_debugger", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[:debugger]     run program under debugger")), ToolInput(tag="in_set_debugging_flags", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="[number/list]   set debugging flags (argument is a bit mask or alphabets)")), ToolInput(tag="in_one_line_program", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc="one line of program (several -e's allowed, omit programfile)")), ToolInput(tag="in_e_enables_optional", input_type=String(optional=True), prefix="-E", doc=InputDocumentation(doc="like -e, but enables all optional features")), ToolInput(tag="in_do_do_sitelibsitecustomizepl", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="don't do $sitelib/sitecustomize.pl at startup")), ToolInput(tag="in_pattern_split_pattern", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="/pattern/       split() pattern for -a switch (//'s are optional)")), ToolInput(tag="in_edit_files_place", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[extension]     edit <> files in place (makes backup if extension supplied)")), ToolInput(tag="in_i_directory", input_type=Boolean(optional=True), prefix="-Idirectory", doc=InputDocumentation(doc="specify @INC/#include directory (several -I's allowed)")), ToolInput(tag="in_enable_line_ending", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[octal]         enable line ending processing, specifies line terminator")), ToolInput(tag="in_assume_loop_program", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="assume 'while (<>) { ... }' loop around program")), ToolInput(tag="in_assume_loop_line", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="assume loop like -n but print line also, like sed")), ToolInput(tag="in_enable_rudimentary_parsing", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="enable rudimentary parsing for switches after programfile")), ToolInput(tag="in_look_programfile_using", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="look for programfile using PATH environment variable")), ToolInput(tag="in_enable_tainting_warnings", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="enable tainting warnings")), ToolInput(tag="in_enable_tainting_checks", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="enable tainting checks")), ToolInput(tag="in_dump_core_parsing", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="dump core after parsing program")), ToolInput(tag="in_allow_unsafe_operations", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="allow unsafe operations")), ToolInput(tag="in_print_version_patchlevel", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="print version, patchlevel and license")), ToolInput(tag="in_print_configuration_summary", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="[:variable]     print configuration summary (or a single Config.pm variable)")), ToolInput(tag="in_enable_many_warnings", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="enable many useful warnings")), ToolInput(tag="in_enable_all_warnings", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="enable all warnings")), ToolInput(tag="in_ignore_text_cd", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[directory]     ignore text before #!perl line (optionally cd to directory)")), ToolInput(tag="in_disable_all_warnings", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="disable all warnings")), ToolInput(tag="in_switches", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Perl_V0_1_0().translate("wdl", allow_empty_container=True)

