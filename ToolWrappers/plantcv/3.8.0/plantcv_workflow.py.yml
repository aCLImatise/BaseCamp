!Command
command:
- plantcv-workflow.py
positional: []
named:
- !Flag
  description: "Input directory containing images or snapshots.\n(default: None)"
  synonyms:
  - -d
  - --dir
  args: !SimpleFlagArg
    name: DIR
  optional: true
- !Flag
  description: "Image metadata reader adaptor. PhenoFront metadata is\nstored in a\
    \ CSV file and the image file name. For the\nfilename option, all metadata is\
    \ stored in the image\nfile name. Current adaptors: phenofront, filename\n(default:\
    \ phenofront)"
  synonyms:
  - -a
  - --adaptor
  args: !SimpleFlagArg
    name: ADAPTOR
  optional: true
- !Flag
  description: 'Workflow script file. (default: None)'
  synonyms:
  - -p
  - --workflow
  args: !SimpleFlagArg
    name: WORKFLOW
  optional: true
- !Flag
  description: 'Output database file name. (default: None)'
  synonyms:
  - -j
  - --json
  args: !SimpleFlagArg
    name: JSON
  optional: true
- !Flag
  description: "Image filename metadata structure. Comma-separated\nlist of valid\
    \ metadata terms. Valid metadata fields\nare: camera, imgtype, zoom, exposure,\
    \ gain, frame,\nlifter, timestamp, id, plantbarcode, treatment,\ncartag, measurementlabel,\
    \ other (default: None)"
  synonyms:
  - -f
  - --meta
  args: !SimpleFlagArg
    name: META
  optional: true
- !Flag
  description: "Output directory for images. Not required by all\nworkflows. (default:\
    \ .)"
  synonyms:
  - -i
  - --outdir
  args: !SimpleFlagArg
    name: OUTDIR
  optional: true
- !Flag
  description: 'Number of CPU processes to use. (default: 1)'
  synonyms:
  - -T
  - --cpu
  args: !SimpleFlagArg
    name: CPU
  optional: true
- !Flag
  description: "will overwrite an existing databaseWarning: activating\nthis option\
    \ will delete an existing database!\n(default: False)"
  synonyms:
  - -c
  - --create
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Date range. Format: YYYY-MM-DD-hh-mm-ss_YYYY-MM-DD-hh-\nmm-ss. If\
    \ the second date is excluded then the current\ndate is assumed. (default: None)"
  synonyms:
  - -D
  - --dates
  args: !SimpleFlagArg
    name: DATES
  optional: true
- !Flag
  description: 'Image format type (extension). (default: png)'
  synonyms:
  - -t
  - --type
  args: !SimpleFlagArg
    name: TYPE
  optional: true
- !Flag
  description: "Image file name metadata delimiter\ncharacter.Alternatively, a regular\
    \ expression for\nparsing filename metadata. (default: _)"
  synonyms:
  - -l
  - --delimiter
  args: !SimpleFlagArg
    name: DELIMITER
  optional: true
- !Flag
  description: "Restrict analysis to images with metadata matching\ninput criteria.\
    \ Input a metadata:value comma-separated\nlist. This is an exact match search.\
    \ E.g.\nimgtype:VIS,camera:SV,zoom:z500 (default: None)"
  synonyms:
  - -M
  - --match
  args: !SimpleFlagArg
    name: MATCH
  optional: true
- !Flag
  description: "Coprocess the specified imgtype with the imgtype\nspecified in --match\
    \ (e.g. coprocess NIR images with\nVIS). (default: None)"
  synonyms:
  - -C
  - --coprocess
  args: !SimpleFlagArg
    name: COPROCESS
  optional: true
- !Flag
  description: "a date format code compatible with strptime C library,\ne.g. \"%Y-%m-%d\
    \ %H_%M_%S\", except \"%\" symbols must be\nescaped on Windows with \"%\" e.g.\
    \ \"%%Y-%%m-%%d\n%%H_%%M_%%S\"default format code is \"%Y-%m-%d\n%H:%M:%S.%f\"\
    \ (default: %Y-%m-%d %H:%M:%S.%f)"
  synonyms:
  - -s
  - --timestampformat
  args: !SimpleFlagArg
    name: TIMESTAMPFORMAT
  optional: true
- !Flag
  description: 'Include analysis images in output. (default: False)'
  synonyms:
  - -w
  - --writeimg
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Other arguments to pass to the workflow script.\n(default: None)\n"
  synonyms:
  - -o
  - --other_args
  args: !SimpleFlagArg
    name: OTHER_ARGS
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: plantcv-workflow.py [-h] -d DIR [-a ADAPTOR] -p WORKFLOW -j JSON\
  \ -f\n                           META [-i OUTDIR] [-T CPU] [-c] [-D DATES] [-t TYPE]\n\
  \                           [-l DELIMITER] [-M MATCH] [-C COPROCESS]\n         \
  \                  [-s TIMESTAMPFORMAT] [-w] [-o OTHER_ARGS]\n\nParallel imaging\
  \ processing with PlantCV.\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  -d DIR, --dir DIR     Input directory containing\
  \ images or snapshots.\n                        (default: None)\n  -a ADAPTOR, --adaptor\
  \ ADAPTOR\n                        Image metadata reader adaptor. PhenoFront metadata\
  \ is\n                        stored in a CSV file and the image file name. For\
  \ the\n                        filename option, all metadata is stored in the image\n\
  \                        file name. Current adaptors: phenofront, filename\n   \
  \                     (default: phenofront)\n  -p WORKFLOW, --workflow WORKFLOW\n\
  \                        Workflow script file. (default: None)\n  -j JSON, --json\
  \ JSON  Output database file name. (default: None)\n  -f META, --meta META  Image\
  \ filename metadata structure. Comma-separated\n                        list of\
  \ valid metadata terms. Valid metadata fields\n                        are: camera,\
  \ imgtype, zoom, exposure, gain, frame,\n                        lifter, timestamp,\
  \ id, plantbarcode, treatment,\n                        cartag, measurementlabel,\
  \ other (default: None)\n  -i OUTDIR, --outdir OUTDIR\n                        Output\
  \ directory for images. Not required by all\n                        workflows.\
  \ (default: .)\n  -T CPU, --cpu CPU     Number of CPU processes to use. (default:\
  \ 1)\n  -c, --create          will overwrite an existing databaseWarning: activating\n\
  \                        this option will delete an existing database!\n       \
  \                 (default: False)\n  -D DATES, --dates DATES\n                \
  \        Date range. Format: YYYY-MM-DD-hh-mm-ss_YYYY-MM-DD-hh-\n              \
  \          mm-ss. If the second date is excluded then the current\n            \
  \            date is assumed. (default: None)\n  -t TYPE, --type TYPE  Image format\
  \ type (extension). (default: png)\n  -l DELIMITER, --delimiter DELIMITER\n    \
  \                    Image file name metadata delimiter\n                      \
  \  character.Alternatively, a regular expression for\n                        parsing\
  \ filename metadata. (default: _)\n  -M MATCH, --match MATCH\n                 \
  \       Restrict analysis to images with metadata matching\n                   \
  \     input criteria. Input a metadata:value comma-separated\n                 \
  \       list. This is an exact match search. E.g.\n                        imgtype:VIS,camera:SV,zoom:z500\
  \ (default: None)\n  -C COPROCESS, --coprocess COPROCESS\n                     \
  \   Coprocess the specified imgtype with the imgtype\n                        specified\
  \ in --match (e.g. coprocess NIR images with\n                        VIS). (default:\
  \ None)\n  -s TIMESTAMPFORMAT, --timestampformat TIMESTAMPFORMAT\n             \
  \           a date format code compatible with strptime C library,\n           \
  \             e.g. \"%Y-%m-%d %H_%M_%S\", except \"%\" symbols must be\n       \
  \                 escaped on Windows with \"%\" e.g. \"%%Y-%%m-%%d\n           \
  \             %%H_%%M_%%S\"default format code is \"%Y-%m-%d\n                 \
  \       %H:%M:%S.%f\" (default: %Y-%m-%d %H:%M:%S.%f)\n  -w, --writeimg        Include\
  \ analysis images in output. (default: False)\n  -o OTHER_ARGS, --other_args OTHER_ARGS\n\
  \                        Other arguments to pass to the workflow script.\n     \
  \                   (default: None)\n"
generated_using:
- --help
