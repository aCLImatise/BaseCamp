from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, Float, Boolean, String

Iva_Qc_V0_1_0 = CommandToolBuilder(tool="iva_qc", base_command=["iva_qc"], inputs=[ToolInput(tag="in_embl_dir", input_type=Directory(optional=True), prefix="--embl_dir", doc=InputDocumentation(doc="Directory of reference EMBL files. If not used, must\nuse --ref_db")), ToolInput(tag="in_ref_db", input_type=Directory(optional=True), prefix="--ref_db", doc=InputDocumentation(doc="Directory of database made by iva_qc_make_db. If not\nused, must use --embl_dir")), ToolInput(tag="in_name_forwards_reads", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="[.gz], --reads_fwd filename[.gz]\nName of forwards reads fasta or fastq file. Must be\nused with --reads_rev")), ToolInput(tag="in_name_reverse_reads", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="[.gz], --reads_rev filename[.gz]\nName of reverse reads fasta or fastq file. Must be\nused with --reads_rev")), ToolInput(tag="in_fr", input_type=File(optional=True), prefix="--fr", doc=InputDocumentation(doc="[.gz]    Name of interleaved fasta/q file")), ToolInput(tag="in_cds_min_hit_length", input_type=Int(optional=True), prefix="--cds_min_hit_length", doc=InputDocumentation(doc="Minimum hit length when running nucmer of CDS\nsequences against contigs [30]")), ToolInput(tag="in_cds_min_hit_id", input_type=Float(optional=True), prefix="--cds_min_hit_id", doc=InputDocumentation(doc="Minimum hit percent identity when running nucmer of\nCDS sequences against contigs [80]")), ToolInput(tag="in_ctg_min_hit_length", input_type=Int(optional=True), prefix="--ctg_min_hit_length", doc=InputDocumentation(doc="Minimum hit length when running nucmer of contigs\nagainst reference [100]")), ToolInput(tag="in_ctg_min_hit_id", input_type=Float(optional=True), prefix="--ctg_min_hit_id", doc=InputDocumentation(doc="Minimum hit percent identity when running nucmer of\ncontigs against reference [80]")), ToolInput(tag="in_s_malt_k", input_type=Int(optional=True), prefix="--smalt_k", doc=InputDocumentation(doc="kmer hash length in SMALT (the -k option in smalt\nindex) [15]")), ToolInput(tag="in_s_malt_s", input_type=Int(optional=True), prefix="--smalt_s", doc=InputDocumentation(doc="kmer hash step size in SMALT (the -s option in smalt\nindex) [3]")), ToolInput(tag="in_s_malt_id", input_type=Float(optional=True), prefix="--smalt_id", doc=InputDocumentation(doc="Minimum identity threshold for mapping to be reported\n(the -y option in smalt map) [0.5]")), ToolInput(tag="in_gage_mini_d", input_type=Int(optional=True), prefix="--gage_minid", doc=InputDocumentation(doc="in [0,100]\nMinimum percent identity used when GAGE runs nucmer\n[80]")), ToolInput(tag="in_kraken_preload", input_type=Boolean(optional=True), prefix="--kraken_preload", doc=InputDocumentation(doc="Use the --preload option when running kraken")), ToolInput(tag="in_ratt_config", input_type=File(optional=True), prefix="--ratt_config", doc=InputDocumentation(doc="Specify your own RATT config file [None]")), ToolInput(tag="in_ctg_layout_plot_title", input_type=String(optional=True), prefix="--ctg_layout_plot_title", doc=InputDocumentation(doc="Title to use in contig layout plot [IVA QC contig\nlayout and read depth]")), ToolInput(tag="in_min_ref_cov", input_type=Int(optional=True), prefix="--min_ref_cov", doc=InputDocumentation(doc="Minimum read coverage of the reference, on each\nstrand, to count as OK coverage [5]")), ToolInput(tag="in_no_clean", input_type=Boolean(optional=True), prefix="--noclean", doc=InputDocumentation(doc="Do not clean temporary files")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to use [1]")), ToolInput(tag="in_assembly_dot_fast_a", input_type=String(), position=0, doc=InputDocumentation(doc="Name of assembly fasta file to be compared to")), ToolInput(tag="in_reference", input_type=String(), position=1, doc=InputDocumentation(doc="prefix of output files"))], outputs=[], container="quay.io/biocontainers/iva:1.0.11--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Iva_Qc_V0_1_0().translate("wdl")

