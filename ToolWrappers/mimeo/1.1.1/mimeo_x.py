from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, String, Boolean, File, Int

Mimeo_X_V0_1_0 = CommandToolBuilder(tool="mimeo_x", base_command=["mimeo-x"], inputs=[ToolInput(tag="in_a_dir", input_type=Directory(optional=True), prefix="--adir", doc=InputDocumentation(doc="Name of directory containing sequences from A genome.")), ToolInput(tag="in_b_dir", input_type=Directory(optional=True), prefix="--bdir", doc=InputDocumentation(doc="Name of directory containing sequences from B genome.")), ToolInput(tag="in_a_fast_a", input_type=String(optional=True), prefix="--afasta", doc=InputDocumentation(doc="A genome as multifasta.")), ToolInput(tag="in_b_fast_a", input_type=String(optional=True), prefix="--bfasta", doc=InputDocumentation(doc="B genome as multifasta.")), ToolInput(tag="in_recycle", input_type=Boolean(optional=True), prefix="--recycle", doc=InputDocumentation(doc="Use existing alignment '--outfile' if found.")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Write output files to this directory. (Default: cwd)")), ToolInput(tag="in_gff_out", input_type=File(optional=True), prefix="--gffout", doc=InputDocumentation(doc="Name of GFF3 annotation file.")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Name of alignment result file.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="If set report LASTZ progress.")), ToolInput(tag="in_label", input_type=String(optional=True), prefix="--label", doc=InputDocumentation(doc="Set annotation TYPE field in gff.")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="ID prefix for B-genome repeats annotated in A-genome.")), ToolInput(tag="in_keep_temp", input_type=Boolean(optional=True), prefix="--keeptemp", doc=InputDocumentation(doc="If set do not remove temp files.")), ToolInput(tag="in_lz_path", input_type=File(optional=True), prefix="--lzpath", doc=InputDocumentation(doc="Custom path to LASTZ executable if not in $PATH.")), ToolInput(tag="in_bed_tools", input_type=File(optional=True), prefix="--bedtools", doc=InputDocumentation(doc="Custom path to bedtools executable if not in $PATH.")), ToolInput(tag="in_mini_dt", input_type=String(optional=True), prefix="--minIdt", doc=InputDocumentation(doc="Minimum alignment identity to report.")), ToolInput(tag="in_min_len", input_type=Int(optional=True), prefix="--minLen", doc=InputDocumentation(doc="Minimum alignment length to report.")), ToolInput(tag="in_min_cov", input_type=Int(optional=True), prefix="--minCov", doc=InputDocumentation(doc="Minimum depth of B-genome hits to report feature in")), ToolInput(tag="in_a_genome_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--hspthresh HSPTHRESH"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Write output files to this directory. (Default: cwd)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mimeo_X_V0_1_0().translate("wdl", allow_empty_container=True)

