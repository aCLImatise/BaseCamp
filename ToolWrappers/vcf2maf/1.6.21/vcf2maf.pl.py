from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Vcf2Maf_Pl_V0_1_0 = CommandToolBuilder(tool="vcf2maf.pl", base_command=["vcf2maf.pl"], inputs=[ToolInput(tag="in_input_vcf", input_type=Boolean(optional=True), prefix="--input-vcf", doc=InputDocumentation(doc="Path to input file in VCF format")), ToolInput(tag="in_output_maf", input_type=File(optional=True), prefix="--output-maf", doc=InputDocumentation(doc="Path to output MAF file")), ToolInput(tag="in_tmp_dir", input_type=Boolean(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Folder to retain intermediate VCFs after runtime [Default: Folder containing input VCF]")), ToolInput(tag="in_tumor_id", input_type=Boolean(optional=True), prefix="--tumor-id", doc=InputDocumentation(doc="Tumor_Sample_Barcode to report in the MAF [TUMOR]")), ToolInput(tag="in_normal_id", input_type=Boolean(optional=True), prefix="--normal-id", doc=InputDocumentation(doc="Matched_Norm_Sample_Barcode to report in the MAF [NORMAL]")), ToolInput(tag="in_vcf_tumor_id", input_type=Boolean(optional=True), prefix="--vcf-tumor-id", doc=InputDocumentation(doc="Tumor sample ID used in VCF's genotype columns [--tumor-id]")), ToolInput(tag="in_vcf_normal_id", input_type=Boolean(optional=True), prefix="--vcf-normal-id", doc=InputDocumentation(doc="Matched normal ID used in VCF's genotype columns [--normal-id]")), ToolInput(tag="in_custom_enst", input_type=Boolean(optional=True), prefix="--custom-enst", doc=InputDocumentation(doc="List of custom ENST IDs that override canonical selection")), ToolInput(tag="in_vep_path", input_type=Boolean(optional=True), prefix="--vep-path", doc=InputDocumentation(doc="Folder containing the vep script [~/miniconda3/bin]")), ToolInput(tag="in_vep_data", input_type=Boolean(optional=True), prefix="--vep-data", doc=InputDocumentation(doc="VEP's base cache/plugin directory [~/.vep]")), ToolInput(tag="in_vep_forks", input_type=Boolean(optional=True), prefix="--vep-forks", doc=InputDocumentation(doc="Number of forked processes to use when running VEP [4]")), ToolInput(tag="in_vep_custom", input_type=Boolean(optional=True), prefix="--vep-custom", doc=InputDocumentation(doc="String to pass into VEP's --custom option []")), ToolInput(tag="in_vep_config", input_type=Boolean(optional=True), prefix="--vep-config", doc=InputDocumentation(doc="Config file to pass into VEP's --config option []")), ToolInput(tag="in_vep_overwrite", input_type=Boolean(optional=True), prefix="--vep-overwrite", doc=InputDocumentation(doc="Allow VEP to overwrite output VCF if it exists")), ToolInput(tag="in_buffer_size", input_type=Boolean(optional=True), prefix="--buffer-size", doc=InputDocumentation(doc="Number of variants VEP loads at a time; Reduce this for low memory systems [5000]")), ToolInput(tag="in_any_allele", input_type=Boolean(optional=True), prefix="--any-allele", doc=InputDocumentation(doc="When reporting co-located variants, allow mismatched variant alleles too")), ToolInput(tag="in_inhibit_vep", input_type=Boolean(optional=True), prefix="--inhibit-vep", doc=InputDocumentation(doc="Skip running VEP, but extract VEP annotation in VCF if found")), ToolInput(tag="in_online", input_type=Boolean(optional=True), prefix="--online", doc=InputDocumentation(doc="Use useastdb.ensembl.org instead of local cache (supports only GRCh38 VCFs listing <100 events)")), ToolInput(tag="in_ref_fast_a", input_type=Boolean(optional=True), prefix="--ref-fasta", doc=InputDocumentation(doc="Reference FASTA file [~/.vep/homo_sapiens/102_GRCh37/Homo_sapiens.GRCh37.dna.toplevel.fa.gz]")), ToolInput(tag="in_max_sub_pop_af", input_type=Boolean(optional=True), prefix="--max-subpop-af", doc=InputDocumentation(doc="Add FILTER tag common_variant if gnomAD reports any subpopulation AFs greater than this [0.0004]")), ToolInput(tag="in_species", input_type=Boolean(optional=True), prefix="--species", doc=InputDocumentation(doc="Ensembl-friendly name of species (e.g. mus_musculus for mouse) [homo_sapiens]")), ToolInput(tag="in_ncbi_build", input_type=Boolean(optional=True), prefix="--ncbi-build", doc=InputDocumentation(doc="NCBI reference assembly of variants MAF (e.g. GRCm38 for mouse) [GRCh37]")), ToolInput(tag="in_cache_version", input_type=Boolean(optional=True), prefix="--cache-version", doc=InputDocumentation(doc="Version of offline cache to use with VEP (e.g. 75, 91, 102) [Default: Installed version]")), ToolInput(tag="in_maf_center", input_type=Boolean(optional=True), prefix="--maf-center", doc=InputDocumentation(doc="Variant calling center to report in MAF [.]")), ToolInput(tag="in_retain_info", input_type=Boolean(optional=True), prefix="--retain-info", doc=InputDocumentation(doc="Comma-delimited names of INFO fields to retain as extra columns in MAF []")), ToolInput(tag="in_retain_fmt", input_type=Boolean(optional=True), prefix="--retain-fmt", doc=InputDocumentation(doc="Comma-delimited names of FORMAT fields to retain as extra columns in MAF []")), ToolInput(tag="in_retain_ann", input_type=Boolean(optional=True), prefix="--retain-ann", doc=InputDocumentation(doc="Comma-delimited names of annotations (within the VEP CSQ/ANN) to retain as extra columns in MAF []")), ToolInput(tag="in_min_hom_vaf", input_type=Boolean(optional=True), prefix="--min-hom-vaf", doc=InputDocumentation(doc="If GT undefined in VCF, minimum allele fraction to call a variant homozygous [0.7]")), ToolInput(tag="in_remap_chain", input_type=Boolean(optional=True), prefix="--remap-chain", doc=InputDocumentation(doc="Chain file to remap variants to a different assembly before running VEP")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print more things to log progress")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Print the detailed manual"))], outputs=[ToolOutput(tag="out_output_maf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_maf", type_hint=File()), doc=OutputDocumentation(doc="Path to output MAF file"))], container="quay.io/biocontainers/vcf2maf:1.6.21--hdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Vcf2Maf_Pl_V0_1_0().translate("wdl")

