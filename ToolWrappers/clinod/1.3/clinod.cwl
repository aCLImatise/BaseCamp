class: CommandLineTool
id: clinod.cwl
inputs:
- id: in_in
  doc: "- required, absolute path to the input file.\nThe input file expected to contain\
    \ the list of\nFASTA formatted sequences."
  type: File?
  inputBinding:
    prefix: -in
- id: in_out
  doc: "- optional, by default the system prints the\noutput to the console. If the\
    \ file exists it\nwill be overridden.\nThe order of the predictions in the output\
    \ is\nguaranteed to be the same as the order of the\nsequences in the input. This\
    \ means that the\nprediction for the tenth sequence from the input\nwill be the\
    \ tenth prediction in the output,\nunless -nonols parameter was used to suppress\n\
    reporting predictions with no NOLS detected"
  type: File?
  inputBinding:
    prefix: -out
- id: in_optional_defaults_medium
  doc: "- optional, defaults to MEDIUM. Possible values\nCOMPLETE, FULL, MEDIUM, SHORT\
    \ and MINIMAL (case\nsensitive)\nWhere MINIMAL - contains the sequence name and\n\
    the number of NOLS detected.\nWhere MINIMAL_TAB - same as MINIMAL but the\nfields\
    \ in the output are tab delimited and only\nthe first word of the sequence name\
    \ is output.\nSHORT - same as MINIMAL plus coordinates of\nthe NOLS\nMEDIUM -\
    \ same as SHORT plus NOLS reported\nseparately\nMEDIUM_TAB - same as MEDIUM but\
    \ the fields in\nthe output are tab delimited and only the first\nword of the\
    \ sequence name is output.\nFULL - same as MEDIUM plus scores for each\nposition\
    \ of the sequence. The scores are\nreported for every window of size 20 in the\
    \ full\nsequence, one score per line. The scores are\nassociate with the first\
    \ residue of the window.\nWindows with a score above 0.8 are predicted as\nNoLSs.\n\
    COMPLETE - same as FULL plus the original\nsequence"
  type: long?
  inputBinding:
    prefix: -f
- id: in_optional_defaults_environmentalvariable
  doc: "- optional, defaults to the system temp directory\n(defined by the \"java.io.tmpdir\"\
    \ environmental\nvariable) If the directory does not exist, it\nwill be created.\
    \ However the parent directory\nmust exist. For example if working directory is\n\
    set to /home/tmp and home directory does not\nexist then the execution will be\
    \ terminated.\nIf the home directory exist but tmp directory\ndoes not, the tmp\
    \ directory will be created.\nIf the /home/tmp directory exist then it will\n\
    be used. If the /home/tmp directory is not\nempty, then any files with the same\
    \ name as\ngenerated by the program will be overridden."
  type: Directory?
  inputBinding:
    prefix: -d
- id: in_optional_defaults_number
  doc: "- optional, defaults to the number of cores\navailable on the computer. Maximum\
    \ number of\nthreads cannot be greater than twice the number\nof available cores.\
    \ However, we have not\nobserved any significant gains from increasing\nthe number\
    \ of threads beyond the number of CPU\ncores actually available on the computer."
  type: long?
  inputBinding:
    prefix: -t
- id: in_bm
  doc: "- optional, an absolute path to the Batchman\nexecutable. By default this\
    \ path is searched in\nthe environmental variable called BATCHMAN_PATH.\nIf it\
    \ is not found there, then clinod attempts\nto locate the batchman executable\
    \ in the same\ndirectory as the clinod jar file. In order to be\nfound there the\
    \ batchman executable must be\ncalled the \"batchman.exe\" on Windows systems\
    \ and\nthe \"batchman\" on all other operating systems.\nIf neither of those paths\
    \ are valid then the\nexecution fails.\nIf several paths are valid then clinod\
    \ uses them\nin the following order:\n1) Path from the command line parameter\n\
    2) Path from the environmental variable\n3) Local directory path"
  type: File?
  inputBinding:
    prefix: -bm
- id: in_non_ols
  doc: "- optional, suppresses reporting of the proteins\nwith no NOLS detected if\
    \ specified."
  type: boolean?
  inputBinding:
    prefix: -nonols
- id: in_clean_sequence
  doc: "- optional, if specified causes the predictor to\nautomatically remove all\
    \ non-protein characters\nfrom the sequences that contains them.\nThe predictor\
    \ only works with unambiguous\nprotein sequences. Only the following characters\n\
    considered to be valid: ARNDCQEGHILKMFPSTWYV.\nIf any other character is detected\
    \ in the\nsequence the predictor stops the execution and\nraises the exception\
    \ unless this flag is\nspecified. In this case, the predictor removes\ninvalid\
    \ characters from the sequence and writes\nthe information about it into the log\
    \ file."
  type: boolean?
  inputBinding:
    prefix: -clean_sequence
- id: in_jar
  doc: ''
  type: long?
  inputBinding:
    prefix: -jar
- id: in_console_dot
  doc: "Performance: \r"
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_out
  doc: "- optional, by default the system prints the\noutput to the console. If the\
    \ file exists it\nwill be overridden.\nThe order of the predictions in the output\
    \ is\nguaranteed to be the same as the order of the\nsequences in the input. This\
    \ means that the\nprediction for the tenth sequence from the input\nwill be the\
    \ tenth prediction in the output,\nunless -nonols parameter was used to suppress\n\
    reporting predictions with no NOLS detected"
  type: File?
  outputBinding:
    glob: $(inputs.in_out)
hints: []
cwlVersion: v1.1
baseCommand:
- clinod
