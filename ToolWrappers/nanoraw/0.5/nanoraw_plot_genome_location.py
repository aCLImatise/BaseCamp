from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Boolean, Int, File

Nanoraw_Plot_Genome_Location_V0_1_0 = CommandToolBuilder(tool="nanoraw_plot_genome_location", base_command=["nanoraw", "plot_genome_location"], inputs=[ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup (under Analyses/[corrected-group])\nwhere individual template and/or complement reads are\nstored. Default: ['BaseCalled_template']")), ToolInput(tag="in_two_d", input_type=Boolean(optional=True), prefix="--2d", doc=InputDocumentation(doc="Input contains 2D reads. Equivalent to `--basecall-\nsubgroups BaseCalled_template BaseCalled_complement`")), ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_genome_locations", input_type=Array(t=String(), optional=True), prefix="--genome-locations", doc=InputDocumentation(doc="Plot signal at specified genomic locations. Format\nlocations as 'chrm:position[:strand]\n[chrm2:position2[:strand2] ...]' (strand not\napplicable for all applications)")), ToolInput(tag="in_fast_five_based_irs_two", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs2", doc=InputDocumentation(doc="Second set of directories containing fast5 files to\ncompare.")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group to access/plot created by\ngenome_resquiggle script. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_over_plot_threshold", input_type=Int(optional=True), prefix="--overplot-threshold", doc=InputDocumentation(doc="Number of reads to trigger alternative plot type\ninstead of raw signal due to overplotting. Default: 50")), ToolInput(tag="in_over_plot_type", input_type=String(optional=True), prefix="--overplot-type", doc=InputDocumentation(doc="Plot type for regions with higher coverage. Choices:\nDownsample (default), Boxplot , Quantile, Violin")), ToolInput(tag="in_obs_per_base_filter", input_type=Array(t=String(), optional=True), prefix="--obs-per-base-filter", doc=InputDocumentation(doc="Filter reads for plotting baseed on threshold of\npercentiles of the number of observations assigned to\na base (default no filter). Format thresholds as\n'percentile:thresh [pctl2:thresh2 ...]' E.g. reads\nwith 99th pctl <200 obs and max <5k obs would be\n'99:200 100:5000'.")), ToolInput(tag="in_pdf_filename", input_type=File(optional=True), prefix="--pdf-filename", doc=InputDocumentation(doc="PDF filename to store plot(s). Default:\nNanopore_read_coverage.genome_locations.pdf")), ToolInput(tag="in_num_bases", input_type=Int(optional=True), prefix="--num-bases", doc=InputDocumentation(doc="Number of bases to plot from region. Default: 51")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Nanoraw_Plot_Genome_Location_V0_1_0().translate("wdl", allow_empty_container=True)

