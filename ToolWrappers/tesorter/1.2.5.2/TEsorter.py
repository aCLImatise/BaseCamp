from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, Directory

Tesorter_V0_1_0 = CommandToolBuilder(tool="TEsorter", base_command=["TEsorter"], inputs=[ToolInput(tag="in_hmm_database", input_type=String(optional=True), prefix="--hmm-database", doc=InputDocumentation(doc="the database used [default=rexdb]")), ToolInput(tag="in_seq_type", input_type=String(optional=True), prefix="--seq-type", doc=InputDocumentation(doc="'nucl' for DNA or 'prot' for protein [default=nucl]")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="output prefix [default='{-s}.{-db}']")), ToolInput(tag="in_force_write_hmms_can", input_type=Boolean(optional=True), prefix="--force-write-hmmscan", doc=InputDocumentation(doc="if False, will use the existed hmmscan outfile and\nskip hmmscan [default=False]")), ToolInput(tag="in_processors", input_type=Int(optional=True), prefix="--processors", doc=InputDocumentation(doc="processors to use [default=4]")), ToolInput(tag="in_tmp_dir", input_type=Directory(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="directory for temporary files [default=./tmp]")), ToolInput(tag="in_min_coverage", input_type=Int(optional=True), prefix="--min-coverage", doc=InputDocumentation(doc="mininum coverage for protein domains in HMMScan output\n[default=20]")), ToolInput(tag="in_max_evalue", input_type=Int(optional=True), prefix="--max-evalue", doc=InputDocumentation(doc="maxinum E-value for protein domains in HMMScan output\n[default=0.001]")), ToolInput(tag="in_disable_pass_two", input_type=Boolean(optional=True), prefix="--disable-pass2", doc=InputDocumentation(doc="do not further classify the unclassified sequences\n[default=False for `nucl`, True for `prot`]")), ToolInput(tag="in_pass_two_rule", input_type=Int(optional=True), prefix="--pass2-rule", doc=InputDocumentation(doc="classifying rule [identity-coverage-length] in pass-2\nbased on similarity [default=80-80-80]")), ToolInput(tag="in_no_library", input_type=Boolean(optional=True), prefix="--no-library", doc=InputDocumentation(doc="do not generate a library file for RepeatMasker\n[default=False]")), ToolInput(tag="in_no_reverse", input_type=Boolean(optional=True), prefix="--no-reverse", doc=InputDocumentation(doc="do not reverse complement sequences if they are\ndetected in minus strand [default=False]")), ToolInput(tag="in_no_cleanup", input_type=Boolean(optional=True), prefix="--no-cleanup", doc=InputDocumentation(doc="do not clean up the temporary directory\n[default=False]\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tesorter_V0_1_0().translate("wdl", allow_empty_container=True)

