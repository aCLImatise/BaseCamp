from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Directory, Int, Boolean, Float, File

Staramr_Search_V0_1_0 = CommandToolBuilder(tool="staramr_search", base_command=["staramr", "search"], inputs=[ToolInput(tag="in_point_finder_organism", input_type=String(optional=True), prefix="--pointfinder-organism", doc=InputDocumentation(doc="The organism to use for pointfinder {salmonella, campylobacter}. Defaults to disabling search for point mutations. [None].")), ToolInput(tag="in_plasmid_finder_database_type", input_type=String(optional=True), prefix="--plasmidfinder-database-type", doc=InputDocumentation(doc="The database type to use for plasmidfinder {gram_positive, enterobacteriaceae}. Defaults to using all available database types to search for plasmids. [None].")), ToolInput(tag="in_database", input_type=Directory(optional=True), prefix="--database", doc=InputDocumentation(doc="The directory containing the resfinder/pointfinder/plasmidfinder databases [/usr/local/lib/python3.7/site-packages/staramr/databases/data].")), ToolInput(tag="in_nprocs", input_type=Int(optional=True), prefix="--nprocs", doc=InputDocumentation(doc="The number of processing cores to use [8].")), ToolInput(tag="in_ignore_invalid_files", input_type=Boolean(optional=True), prefix="--ignore-invalid-files", doc=InputDocumentation(doc="Skips over invalid input files")), ToolInput(tag="in_mlst_scheme", input_type=String(optional=True), prefix="--mlst-scheme", doc=InputDocumentation(doc="Specify scheme name, visit https://github.com/tseemann/mlst/blob/master/db/scheme_species_map.tab for supported scheme genus available. [None]")), ToolInput(tag="in_genome_size_lower_bound", input_type=Int(optional=True), prefix="--genome-size-lower-bound", doc=InputDocumentation(doc="The lower bound for our genome size for the quality metrics. Defaults to 4 Mbp. [4000000].")), ToolInput(tag="in_genome_size_upper_bound", input_type=Int(optional=True), prefix="--genome-size-upper-bound", doc=InputDocumentation(doc="The upper bound for our genome size for the quality metrics. Defaults to 6 Mbp. [6000000].")), ToolInput(tag="in_minimum_n_five_zero_value", input_type=Int(optional=True), prefix="--minimum-N50-value", doc=InputDocumentation(doc="The minimum N50 value for the quality metrics. Defaults to 10000. [10000].")), ToolInput(tag="in_minimum_contig_length", input_type=Int(optional=True), prefix="--minimum-contig-length", doc=InputDocumentation(doc="The minimum contig length for the quality metrics. Defaults to 300 bp. [300].")), ToolInput(tag="in_unacceptable_number_contigs", input_type=Int(optional=True), prefix="--unacceptable-number-contigs", doc=InputDocumentation(doc="The minimum, unacceptable number of contigs which are equal to or above the minimum contig length for our quality metrics. Defaults to 1000. [1000].")), ToolInput(tag="in_pid_threshold", input_type=Float(optional=True), prefix="--pid-threshold", doc=InputDocumentation(doc="The percent identity threshold [98.0].")), ToolInput(tag="in_percent_length_overlap_res_finder", input_type=Int(optional=True), prefix="--percent-length-overlap-resfinder", doc=InputDocumentation(doc="The percent length overlap for resfinder results [60.0].")), ToolInput(tag="in_percent_length_overlap_point_finder", input_type=Int(optional=True), prefix="--percent-length-overlap-pointfinder", doc=InputDocumentation(doc="The percent length overlap for pointfinder results [95.0].")), ToolInput(tag="in_percent_length_overlap_plasmid_finder", input_type=Int(optional=True), prefix="--percent-length-overlap-plasmidfinder", doc=InputDocumentation(doc="The percent length overlap for resfinder results [60.0].")), ToolInput(tag="in_no_exclude_genes", input_type=Boolean(optional=True), prefix="--no-exclude-genes", doc=InputDocumentation(doc="Disable the default exclusion of some genes from ResFinder/PointFinder/PlasmidFinder [False].")), ToolInput(tag="in_exclude_genes_file", input_type=File(optional=True), prefix="--exclude-genes-file", doc=InputDocumentation(doc="A containing a list of ResFinder/PointFinder/PlasmidFinder gene names to exclude from results [/usr/local/lib/python3.7/site-packages/staramr/databases/exclude/data/genes_to_exclude.tsv].")), ToolInput(tag="in_exclude_negatives", input_type=Boolean(optional=True), prefix="--exclude-negatives", doc=InputDocumentation(doc="Exclude negative results (those sensitive to antimicrobials) [False].")), ToolInput(tag="in_exclude_resistance_phenotypes", input_type=Boolean(optional=True), prefix="--exclude-resistance-phenotypes", doc=InputDocumentation(doc="Exclude predicted antimicrobial resistances [False].")), ToolInput(tag="in_report_all_blast", input_type=Boolean(optional=True), prefix="--report-all-blast", doc=InputDocumentation(doc="Report all blast hits (vs. only top blast hits) [False].")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="The output directory for results [None].")), ToolInput(tag="in_output_summary", input_type=File(optional=True), prefix="--output-summary", doc=InputDocumentation(doc="The name of the output file containing the summary results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_detailed_summary", input_type=File(optional=True), prefix="--output-detailed-summary", doc=InputDocumentation(doc="The name of the output file containing the detailed summary results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_res_finder", input_type=File(optional=True), prefix="--output-resfinder", doc=InputDocumentation(doc="The name of the output file containing the resfinder results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_point_finder", input_type=File(optional=True), prefix="--output-pointfinder", doc=InputDocumentation(doc="The name of the output file containing the pointfinder results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_plasmid_finder", input_type=File(optional=True), prefix="--output-plasmidfinder", doc=InputDocumentation(doc="The name of the output file containing the plasmidfinder results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_settings", input_type=File(optional=True), prefix="--output-settings", doc=InputDocumentation(doc="The name of the output file containing the settings. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_excel", input_type=File(optional=True), prefix="--output-excel", doc=InputDocumentation(doc="The name of the output file containing the excel results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_hits_dir", input_type=Directory(optional=True), prefix="--output-hits-dir", doc=InputDocumentation(doc="The name of the directory to contain the BLAST hit files. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_output_mlst", input_type=File(optional=True), prefix="--output-mlst", doc=InputDocumentation(doc="The name of the output file containing the mlst results. Not be be used with '--output-dir'. [None]")), ToolInput(tag="in_files", input_type=String(), position=0, doc=InputDocumentation(doc="optional arguments:"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="The output directory for results [None].")), ToolOutput(tag="out_output_summary", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_summary", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the summary results. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_detailed_summary", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_detailed_summary", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the detailed summary results. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_res_finder", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_res_finder", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the resfinder results. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_point_finder", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_point_finder", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the pointfinder results. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_plasmid_finder", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_plasmid_finder", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the plasmidfinder results. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_settings", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_settings", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the settings. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_excel", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_excel", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the excel results. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_hits_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_hits_dir", type_hint=File()), doc=OutputDocumentation(doc="The name of the directory to contain the BLAST hit files. Not be be used with '--output-dir'. [None]")), ToolOutput(tag="out_output_mlst", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_mlst", type_hint=File()), doc=OutputDocumentation(doc="The name of the output file containing the mlst results. Not be be used with '--output-dir'. [None]"))], container="quay.io/biocontainers/staramr:0.7.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Staramr_Search_V0_1_0().translate("wdl")

