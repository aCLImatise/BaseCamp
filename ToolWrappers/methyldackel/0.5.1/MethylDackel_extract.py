from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File, Float

Methyldackel_Extract_V0_1_0 = CommandToolBuilder(tool="MethylDackel_extract", base_command=["MethylDackel", "extract"], inputs=[ToolInput(tag="in_minimum_mapq_threshold", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Minimum MAPQ threshold to include an alignment (default 10)")), ToolInput(tag="in_minimum_phred_threshold", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Minimum Phred threshold to include a base (default 5). This\nmust be >0.")), ToolInput(tag="in_maximum_perbase_depth", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Maximum per-base depth (default 2000)")), ToolInput(tag="in_minimum_perbase_depth", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Minimum per-base depth for reporting output. If you use")), ToolInput(tag="in_merge_context", input_type=Boolean(optional=True), prefix="--mergeContext", doc=InputDocumentation(doc=", this then applies to the merged CpG/CHG.")), ToolInput(tag="in_region_string_extract", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="Region string in which to extract methylation")), ToolInput(tag="in_bed_file_listing", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="A BED file listing regions for inclusion.")), ToolInput(tag="in_keep_strand", input_type=File(optional=True), prefix="--keepStrand", doc=InputDocumentation(doc="If a BED file is specified, then this option will cause the\nstrand column (column 6) to be utilized, if present. Thus, if\na region has a '+' in this column, then only metrics from the\ntop strand will be output. Note that the -r option can be used\nto limit the regions of -l.")), ToolInput(tag="in_mapp_ability", input_type=File(optional=True), prefix="--mappability", doc=InputDocumentation(doc="A bigWig file containing mappability data for\nfiltering reads.")), ToolInput(tag="in_mapp_ability_threshold", input_type=Float(optional=True), prefix="--mappabilityThreshold", doc=InputDocumentation(doc="If a bigWig file is provided, this sets the\nthreshold mappability value above which a base is considered\nmappable (default 0.01).")), ToolInput(tag="in_min_mappable_bases", input_type=Int(optional=True), prefix="--minMappableBases", doc=InputDocumentation(doc="If a bigWig file is provided, this sets the\nnumber of mappable bases needed for a read to be considered\nmappable (default 15).")), ToolInput(tag="in_output_bb_file", input_type=Boolean(optional=True), prefix="--outputBBFile", doc=InputDocumentation(doc="If this is specified, a Binary Bismap (.bbm) file will\nbe written with the same base name as the provided bigWig file,\nbut with the .bbm extension. Neither this option nor -N have any\neffect if a bigWig is not specified with -M.")), ToolInput(tag="in_output_bb_filename", input_type=File(optional=True), prefix="--outputBBFileName", doc=InputDocumentation(doc="If this is specified, a Binary Bismap (.bbm) file will\nbe written at the provided filename. Neither this option nor -O\nhave any effect if a bigWig is not specified with -M.")), ToolInput(tag="in_mapp_ability_bb", input_type=File(optional=True), prefix="--mappabilityBB", doc=InputDocumentation(doc="A .bbm file containing mappability data for\nfiltering reads.")), ToolInput(tag="in_at", input_type=Int(optional=True), prefix="-@", doc=InputDocumentation(doc="The number of threads to use, the default 1")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunkSize", doc=InputDocumentation(doc="The size of the genome processed by a single thread at a time.\nThe default is 1000000 bases. This value MUST be at least 1.")), ToolInput(tag="in_op_ref", input_type=File(optional=True), prefix="--opref", doc=InputDocumentation(doc="Output filename prefix. CpG/CHG/CHH context metrics will be\noutput to STR_CpG.bedGraph and so on.")), ToolInput(tag="in_keep_dupes", input_type=Boolean(optional=True), prefix="--keepDupes", doc=InputDocumentation(doc="By default, any alignment marked as a duplicate is ignored.\nThis option causes them to be incorporated. This will unset\nbit 0x400 in --ignoreFlags.")), ToolInput(tag="in_keep_singleton", input_type=Boolean(optional=True), prefix="--keepSingleton", doc=InputDocumentation(doc="By default, if only one read in a pair aligns (a singleton)\nthen it's ignored.")), ToolInput(tag="in_keep_discordant", input_type=String(optional=True), prefix="--keepDiscordant", doc=InputDocumentation(doc="default, paired-end alignments with the properly-paired bit\nunset in the FLAG field are ignored. Note that the definition\nof concordant and discordant is based on your aligner\nsettings.")), ToolInput(tag="in_ignore_flags", input_type=Boolean(optional=True), prefix="--ignoreFlags", doc=InputDocumentation(doc="By default, any alignment marked as secondary (bit 0x100),\nfailing QC (bit 0x200), a PCR/optical duplicate (0x400) or\nsupplemental (0x800) is ignored. This equates to a value of\n0xF00 or 3840 in decimal. If you would like to change that,\nyou can specify a new value here.\nignored. Specifying this causes them to be included.")), ToolInput(tag="in_require_flags", input_type=Boolean(optional=True), prefix="--requireFlags", doc=InputDocumentation(doc="Require each alignment to have all bits in this value\npresent, or else the alignment is ignored. This is equivalent\nto the -f option in samtools. The default is 0, which\nincludes all alignments.")), ToolInput(tag="in_no_cpg", input_type=Boolean(optional=True), prefix="--noCpG", doc=InputDocumentation(doc="Do not output CpG context methylation metrics")), ToolInput(tag="in_chg", input_type=Boolean(optional=True), prefix="--CHG", doc=InputDocumentation(doc="Output CHG context methylation metrics")), ToolInput(tag="in_chh", input_type=Boolean(optional=True), prefix="--CHH", doc=InputDocumentation(doc="Output CHH context methylation metrics")), ToolInput(tag="in_fraction", input_type=Boolean(optional=True), prefix="--fraction", doc=InputDocumentation(doc="Extract fractional methylation (only) at each position. This\nproduces a file with a .meth.bedGraph extension.")), ToolInput(tag="in_counts", input_type=Boolean(optional=True), prefix="--counts", doc=InputDocumentation(doc="Extract base counts (only) at each position. This produces a\nfile with a .counts.bedGraph extension.")), ToolInput(tag="in_log_it", input_type=Boolean(optional=True), prefix="--logit", doc=InputDocumentation(doc="Extract logit(M/(M+U)) (only) at each position. This produces\na file with a .logit.bedGraph extension.")), ToolInput(tag="in_min_opposite_depth", input_type=Boolean(optional=True), prefix="--minOppositeDepth", doc=InputDocumentation(doc="If you would like to exclude sites that likely contain\nSNPs, then specifying a value greater than 0 here will\nindicate the minimum depth required on the strand opposite of\na C to look for A/T/C bases. The fraction of these necessary\nto exclude a position from methylation extraction is specified\nby the --maxVariantFrac parameter. The default is 0, which\nmeans that no positions will be excluded. Note that the -p and\n-q apply here as well. Note further that if you use\n--mergeContext that a merged site will be excluded if either\nof its individual Cs would be excluded.")), ToolInput(tag="in_max_variant_frac", input_type=Float(optional=True), prefix="--maxVariantFrac", doc=InputDocumentation(doc="maximum fraction of A/T/C base calls on the strand\nopposite of a C to allow before a position is declared a\nvariant (thereby being excluded from output). The default is\n0.0. See also --minOppositeDepth.")), ToolInput(tag="in_methyl_kit", input_type=Boolean(optional=True), prefix="--methylKit", doc=InputDocumentation(doc="Output in the format required by methylKit. Note that this is\nincompatible with --mergeContext, --fraction and --counts.")), ToolInput(tag="in_cytosine_report", input_type=Boolean(optional=True), prefix="--cytosine_report", doc=InputDocumentation(doc="A per-base exhaustive report comparable to that produced\nwith the same option in Bismark's methylation extractor. The\noutput is a tab-separated file with the following columns:\nchromosome, position (1-based), strand, number of alignments\nsupporting methylation, number of alignments supporting\nunmethylation, CG/CHG/CHH, trinucleotide context. This is not\ncompatible with --fraction, --counts, --methylKit, or\n--mergeContext. The produces a single file with a\n.cytosine_report.txt extension. Note that even bases with no\ncoverage will be included in the output.")), ToolInput(tag="in_ot", input_type=Int(optional=True), prefix="--OT", doc=InputDocumentation(doc=",INT,INT,INT Inclusion bounds for methylation calls from reads/pairs\noriginating from the original top strand. Suggested values can\nbe obtained from the MBias program. Each integer represents a\n1-based position on a read. For example --OT A,B,C,D\ntranslates to, 'Include calls at positions from A through B\non read #1 and C through D on read #2'. If a 0 is used a any\nposition then that is translated to mean start/end of the\nalignment, as appropriate. For example, --OT 5,0,0,0 would\ninclude all but the first 4 bases on read #1. Users are\nstrongly advised to consult a methylation bias plot, for\nexample by using the MBias program.")), ToolInput(tag="in_ob", input_type=Int(optional=True), prefix="--OB", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_c_tot", input_type=Int(optional=True), prefix="--CTOT", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_cto_b", input_type=Int(optional=True), prefix="--CTOB", doc=InputDocumentation(doc=",INT,INT,INT As with --OT, but for the original bottom, complementary\nto the original top, and complementary to the original bottom\nstrands, respectively.")), ToolInput(tag="in_not", input_type=Int(optional=True), prefix="--nOT", doc=InputDocumentation(doc=",INT,INT,INT Like --OT, but always exclude INT bases from a given end\nfrom inclusion,regardless of the length of an alignment. This\nis useful in cases where reads may have already been trimmed\nto different lengths, but still none-the-less contain a\ncertain length bias at one or more ends.")), ToolInput(tag="in_nob", input_type=Int(optional=True), prefix="--nOB", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_nc_tot", input_type=Int(optional=True), prefix="--nCTOT", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_nc_tob", input_type=Int(optional=True), prefix="--nCTOB", doc=InputDocumentation(doc=",INT,INT,INT As with --nOT, but for the original bottom,\ncomplementary to the original top, and complementary to the\noriginal bottom strands, respectively.")), ToolInput(tag="in_ref_dot_fa", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sorted_alignments_dot_bam", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_keep_strand", output_type=File(optional=True), selector=InputSelector(input_to_select="in_keep_strand", type_hint=File()), doc=OutputDocumentation(doc="If a BED file is specified, then this option will cause the\nstrand column (column 6) to be utilized, if present. Thus, if\na region has a '+' in this column, then only metrics from the\ntop strand will be output. Note that the -r option can be used\nto limit the regions of -l.")), ToolOutput(tag="out_op_ref", output_type=File(optional=True), selector=InputSelector(input_to_select="in_op_ref", type_hint=File()), doc=OutputDocumentation(doc="Output filename prefix. CpG/CHG/CHH context metrics will be\noutput to STR_CpG.bedGraph and so on."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Methyldackel_Extract_V0_1_0().translate("wdl", allow_empty_container=True)

