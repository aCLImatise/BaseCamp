version 1.0

task Rsemrunebseq {
  input {
    File? ng_vector
    String analysis_dot
    String data_matrix_file
    String conditions
    String output_file_dot_normalized_data_matrix
    String output_file_dot_cond_means
    String matrix_dot
  }
  command <<<
    rsem_run_ebseq \
      ~{analysis_dot} \
      ~{data_matrix_file} \
      ~{conditions} \
      ~{output_file_dot_normalized_data_matrix} \
      ~{output_file_dot_cond_means} \
      ~{matrix_dot} \
      ~{if defined(ng_vector) then ("--ngvector " +  '"' + ng_vector + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    ng_vector: "This option provides the grouping information required by EBSeq for\\nisoform-level differential expression analysis. The file can be\\ngenerated by 'rsem-generate-ngvector'. Turning this option on is\\nhighly recommended for isoform-level differential expression\\nanalysis. (Default: off)"
    analysis_dot: "SYNOPSIS"
    data_matrix_file: "This file is a m by n matrix. m is the number of genes/transcripts\\nand n is the number of total samples. Each element in the matrix\\nrepresents the expected count for a particular gene/transcript in a\\nparticular sample. Users can use 'rsem-generate-data-matrix' to\\ngenerate this file from expression result files."
    conditions: "Comma-separated list of values representing the number of replicates\\nfor each condition. For example, \\\"3,3\\\" means the data set contains 2\\nconditions and each condition has 3 replicates. \\\"2,3,3\\\" means the\\ndata set contains 3 conditions, with 2, 3, and 3 replicates for each\\ncondition respectively."
    output_file_dot_normalized_data_matrix: "This file contains the median normalized version of the input data"
    output_file_dot_cond_means: "This file is only generated when there are more than 2 conditions.\\nIt gives the normalized mean count value for each gene/transcript at\\neach condition. It is formatted as a matrix with names. Each row\\nrepresents a gene/transcript and each column represent a condition.\\nThe order of genes/transcripts is the same as 'output_file'. This\\nfile can be used to calculate fold changes between conditions which\\nusers are interested in."
    matrix_dot: "2) We're interested in gene-level analysis and there are 3 conditions."
  }
  output {
    File out_stdout = stdout()
  }
}