from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, Array, String, Boolean, File

Vulcan_V0_1_0 = CommandToolBuilder(tool="vulcan", base_command=["vulcan"], inputs=[ToolInput(tag="in_work_dir", input_type=Directory(optional=True), prefix="--work_dir", doc=InputDocumentation(doc="Directory of work, store temp files, default: ./vulcan_work")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="threads, default: 1")), ToolInput(tag="in_percentile", input_type=Array(t=String(), optional=True), prefix="--percentile", doc=InputDocumentation(doc="percentile of cut-off, default: 90")), ToolInput(tag="in_full", input_type=Boolean(optional=True), prefix="--full", doc=InputDocumentation(doc="keep all temp file")), ToolInput(tag="in_dry", input_type=Boolean(optional=True), prefix="--dry", doc=InputDocumentation(doc="only generate config")), ToolInput(tag="in_raw_edit_distance", input_type=Boolean(optional=True), prefix="--raw_edit_distance", doc=InputDocumentation(doc="Use raw edit distance to do the cut-off")), ToolInput(tag="in_pac_bio_clr", input_type=Boolean(optional=True), prefix="--pacbio_clr", doc=InputDocumentation(doc="Input reads is pacbio CLR reads")), ToolInput(tag="in_pac_bio_hifi", input_type=Boolean(optional=True), prefix="--pacbio_hifi", doc=InputDocumentation(doc="Input reads is pacbio hifi reads")), ToolInput(tag="in_nano_pore", input_type=Boolean(optional=True), prefix="--nanopore", doc=InputDocumentation(doc="Input reads is Nanopore reads")), ToolInput(tag="in_any_long_read", input_type=Boolean(optional=True), prefix="--anylongread", doc=InputDocumentation(doc="Don't know which kind of long read")), ToolInput(tag="in_human_clr", input_type=Boolean(optional=True), prefix="--humanclr", doc=InputDocumentation(doc="Human pacbio CLR read")), ToolInput(tag="in_human_hifi", input_type=Boolean(optional=True), prefix="--humanhifi", doc=InputDocumentation(doc="Human pacbio hifi reads")), ToolInput(tag="in_human_nano_pore", input_type=Boolean(optional=True), prefix="--humannanopore", doc=InputDocumentation(doc="Human Nanopore reads")), ToolInput(tag="in_custom_cmd", input_type=Boolean(optional=True), prefix="--custom_cmd", doc=InputDocumentation(doc="Use minimap2 and NGMLR with user's own parameter setting")), ToolInput(tag="in_input", input_type=Array(t=String(), optional=True), prefix="--input", doc=InputDocumentation(doc="input read path, can accept multiple files")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="reference path")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="vulcan's output's prefix, the output will be prefix_{percentile}.bam\n"))], outputs=[], container="quay.io/biocontainers/vulcan:1.0.2--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Vulcan_V0_1_0().translate("wdl")

