!Command
command:
- ChorusNGSfilter
positional: []
named:
- !Flag
  description: The path where Jellyfish software installed
  synonyms:
  - -j
  - --jellyfish
  args: !SimpleFlagArg
    name: JELLYFISH
  optional: true
- !Flag
  description: "Fasta format genome file, should include all sequences\nfrom genome"
  synonyms:
  - -g
  - --genome
  args: !SimpleFlagArg
    name: GENOME
  optional: true
- !Flag
  description: "Fastq format input files contain reads from whole\ngenome shotgun\
    \ sequencing, files can be gzipped.\nMultiple files separate with \",\". For example:\n\
    1.fq.gz,2.fq.gz"
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: "Input fastq file is gzipped(gz) or uncompressed(text).\n(Default:\
    \ gz)"
  synonyms:
  - -z
  - --gzipped
  args: !ChoiceFlagArg
    choices: !!set
      text:
      gz:
  optional: true
- !Flag
  description: 'Number of threads or CPUs to use. (Default: 1)'
  synonyms:
  - -t
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: "Length of k-mer used for counting k-mers in input\nfastq files. (Default:\
    \ 17)"
  synonyms:
  - -k
  - --kmer
  args: !SimpleFlagArg
    name: KMER
  optional: true
- !Flag
  description: The bed format probe file generated by Chorus
  synonyms:
  - -p
  - --probe
  args: !SimpleFlagArg
    name: PROBE
  optional: true
- !Flag
  description: "Output bed format probe file with k-mer score.\n(Default: output.bed)"
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: ChorusNGSfilter [-h] [--version] [-j JELLYFISH] -g GENOME -i INPUT\
  \ -z\n                       {gz,text} [-t THREADS] [-k KMER] [-p PROBE] [-o OUTPUT]\n\
  \nChorusNGSfilter for counting Oligo FISH probe k-mer score using NGS data\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  --version\
  \             show program's version number and exit\n  -j JELLYFISH, --jellyfish\
  \ JELLYFISH\n                        The path where Jellyfish software installed\n\
  \  -g GENOME, --genome GENOME\n                        Fasta format genome file,\
  \ should include all sequences\n                        from genome\n  -i INPUT,\
  \ --input INPUT\n                        Fastq format input files contain reads\
  \ from whole\n                        genome shotgun sequencing, files can be gzipped.\n\
  \                        Multiple files separate with \",\". For example:\n    \
  \                    1.fq.gz,2.fq.gz\n  -z {gz,text}, --gzipped {gz,text}\n    \
  \                    Input fastq file is gzipped(gz) or uncompressed(text).\n  \
  \                      (Default: gz)\n  -t THREADS, --threads THREADS\n        \
  \                Number of threads or CPUs to use. (Default: 1)\n  -k KMER, --kmer\
  \ KMER  Length of k-mer used for counting k-mers in input\n                    \
  \    fastq files. (Default: 17)\n  -p PROBE, --probe PROBE\n                   \
  \     The bed format probe file generated by Chorus\n  -o OUTPUT, --output OUTPUT\n\
  \                        Output bed format probe file with k-mer score.\n      \
  \                  (Default: output.bed)\n\nExample:\n  ChorusNGSfilter -i 1.fq.gz,2.fq.gz\
  \ -z gz -t 4 -g TAIR10_chr_all.fas \\ \n                  -j /opt/software/jellyfish/bin/jellyfish\
  \ -p probe.bed -o output.bed\n"
generated_using:
- --help
