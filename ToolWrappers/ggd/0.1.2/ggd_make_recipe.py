from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int

Ggd_Make_Recipe_V0_1_0 = CommandToolBuilder(tool="ggd_make_recipe", base_command=["ggd", "make-recipe"], inputs=[ToolInput(tag="in_channel", input_type=String(optional=True), prefix="--channel", doc=InputDocumentation(doc="the ggd channel to use. (Default = genomics)")), ToolInput(tag="in_dependency", input_type=String(optional=True), prefix="--dependency", doc=InputDocumentation(doc="any software dependencies (in bioconda, conda-forge)\nor data-dependency (in ggd). May be as many times as\nneeded.")), ToolInput(tag="in_extra_file", input_type=File(optional=True), prefix="--extra-file", doc=InputDocumentation(doc="any files that the recipe creates that are not a *.gz\nand *.gz.tbi pair or *.fa and *.fai pair. May be used\nmore than once")), ToolInput(tag="in_platform", input_type=String(optional=True), prefix="--platform", doc=InputDocumentation(doc="Whether to use noarch as the platfrom or the system\nplatform. If set to 'none' the system platform will be\nused. (Default = noarch. Noarch means no architecture\nand is platform agnostic.)")), ToolInput(tag="in_species", input_type=String(optional=True), prefix="--species", doc=InputDocumentation(doc="The species recipe is for")), ToolInput(tag="in_genome_build", input_type=String(optional=True), prefix="--genome-build", doc=InputDocumentation(doc="The genome build the recipe is for")), ToolInput(tag="in_authors", input_type=String(optional=True), prefix="--authors", doc=InputDocumentation(doc="The author(s) of the data recipe being created, (This\nrecipe)")), ToolInput(tag="in_package_version", input_type=Int(optional=True), prefix="--package-version", doc=InputDocumentation(doc="The version of the ggd package. (First time package =\n1, updated package > 1)")), ToolInput(tag="in_data_version", input_type=Int(optional=True), prefix="--data-version", doc=InputDocumentation(doc="The version of the data (itself) being downloaded and\nprocessed (EX: dbsnp-127) If there is no data version\napparent we recommend you use the date associated with\nthe files or something else that can uniquely identify\nthe 'version' of the data")), ToolInput(tag="in_data_provider", input_type=String(optional=True), prefix="--data-provider", doc=InputDocumentation(doc="The data provider where the data was accessed.\n(Example: UCSC, Ensembl, gnomAD, etc.)")), ToolInput(tag="in_summary", input_type=String(optional=True), prefix="--summary", doc=InputDocumentation(doc="A detailed comment describing the recipe")), ToolInput(tag="in_keyword", input_type=String(optional=True), prefix="--keyword", doc=InputDocumentation(doc="A keyword to associate with the recipe. May be\nspecified more that once. Please add enough keywords\nto better describe and distinguish the recipe")), ToolInput(tag="in_coordinate_base", input_type=String(optional=True), prefix="--coordinate-base", doc=InputDocumentation(doc="The genomic coordinate basing for the file(s) in the\nrecipe. That is, the coordianances start at genomic\ncoordinate 0 or 1, and the end coordinate is either\ninclusive (everything up to and including the end\ncoordinate) or exlcusive (everthing up to but not\nincluding the end coordinate) Files that do not have\ncoordiante basing, like fasta files, specify NA for\nnot applicable.")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="The sub-name of the recipe being created. (e.g. cpg-\nislands, pfam-domains, gaps, etc.) This will not be\nthe final name of the recipe, but will describe what\ndata the recipe gets"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ggd_Make_Recipe_V0_1_0().translate("wdl", allow_empty_container=True)

