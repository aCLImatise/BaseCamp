from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Pairix_V0_1_0 = CommandToolBuilder(tool="pairix", base_command=["pairix"], inputs=[ToolInput(tag="in_preset_pairs_mergednodups", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="preset: pairs, merged_nodups, old_merged_nodups, gff, bed, sam, vcf, psltbl [gff]")), ToolInput(tag="in_sequence_name_column", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="sequence name column [1]")), ToolInput(tag="in_second_sequence_name", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="second sequence name column [null]")), ToolInput(tag="in_var_3", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="start1 column [4]")), ToolInput(tag="in_e", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="end1 column; can be identical to '-b' [5]")), ToolInput(tag="in_u", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc="start2 column [null]")), ToolInput(tag="in_v", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="end2 column; can be identical to '-u' [null or identical to the start2 specified by -u]")), ToolInput(tag="in_delimiter_space_instead", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="delimiter is space instead of tab.")), ToolInput(tag="in_query_region_string", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="query region is not a string but a file listing query regions")), ToolInput(tag="in_skip_first_lines", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="skip first INT lines [0]")), ToolInput(tag="in_symbol_commentmeta_lines", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="symbol for comment/meta lines [#]")), ToolInput(tag="in_symbol_query_region", input_type=String(optional=True), prefix="-w", doc=InputDocumentation(doc="symbol for query region separator [|]")), ToolInput(tag="in_replace_header_content", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="replace the header with the content of FILE [null]")), ToolInput(tag="in_zerobased_coordinate", input_type=Boolean(optional=True), prefix="-0", doc=InputDocumentation(doc="zero-based coordinate")), ToolInput(tag="in_print_only_lines", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="print only the header lines")), ToolInput(tag="in_print_only_number", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="print only the number of bgzf blocks for existing chromosome (pairs)")), ToolInput(tag="in_print_only_region", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="print only the region split character")), ToolInput(tag="in_only_check_occurs", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="Only check if the file is a triangle (i.e. a chromosome pair occurs only in one direction (e.g. if chr1|chr2 exists, chr2|chr1 doesn't))")), ToolInput(tag="in_list_chromosome_names", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="list chromosome names")), ToolInput(tag="in_print_only_count", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="print only the total line count (same as gunzip -c | wc -l but much faster)")), ToolInput(tag="in_force_overwrite_index", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="force to overwrite the index")), ToolInput(tag="in_autoflip_query_pair", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="autoflip query when the matching chromosome pair doesn't exist")), ToolInput(tag="in_in_dot_pairs_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pairix_V0_1_0().translate("wdl", allow_empty_container=True)

