from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, Directory

Removedup_V0_1_0 = CommandToolBuilder(tool="removeDup", base_command=["removeDup"], inputs=[ToolInput(tag="in_name_input_file", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Name of input file in SAM/BAM format.")), ToolInput(tag="in_name_including_filtered", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Name of output SAM file including filtered reads. The format is\nBAM unless '-S' is specified.")), ToolInput(tag="in_generate_format_output", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Generate the SAM format output.")), ToolInput(tag="in_specify_duplication_cutoff", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="Specify the duplication cutoff. All the reads mapped to a location\nare removed from the output if the number of reads mapped to this\nlocation is equal or higher than the cutoff. 10 by default.")), ToolInput(tag="in_directory_storing_files", input_type=Directory(optional=True), prefix="-t", doc=InputDocumentation(doc="A directory storing temporary files generated by the program."))], outputs=[ToolOutput(tag="out_name_including_filtered", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name_including_filtered", type_hint=File()), doc=OutputDocumentation(doc="Name of output SAM file including filtered reads. The format is\nBAM unless '-S' is specified."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Removedup_V0_1_0().translate("wdl", allow_empty_container=True)

