from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Beeml2Meme_V0_1_0 = CommandToolBuilder(tool="beeml2meme", base_command=["beeml2meme"], inputs=[ToolInput(tag="in_bg", input_type=File(optional=True), prefix="-bg", doc=InputDocumentation(doc="file with background frequencies of letters\ndefault: uniform background")), ToolInput(tag="in_pseudo", input_type=Int(optional=True), prefix="-pseudo", doc=InputDocumentation(doc="add <total pseudocounts> times letter\nbackground to each frequency; default: 0")), ToolInput(tag="in_sg", input_type=File(optional=True), prefix="-sg", doc=InputDocumentation(doc="specifify a file containing the contents of:\nhttp://the_brain.bwh.harvard.edu/uniprobe/browse.php\nand use the uniprobe ID as the alternate name")), ToolInput(tag="in_print_logodds_matrix", input_type=Boolean(optional=True), prefix="-logodds", doc=InputDocumentation(doc="print log-odds matrix, too;\ndefault: print frequency matrix only")), ToolInput(tag="in_url", input_type=String(optional=True), prefix="-url", doc=InputDocumentation(doc="website for the motif; The UNIPROBE ID is\nsubstituted for MOTIF_NAME; default: no url\n")), ToolInput(tag="in_add", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_and", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_default", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_http", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_matrix_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_print", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_specifi_fy", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_substituted", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_website", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_a", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_17", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_total_pseudo_counts", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_use", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_with", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_motif_name", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_background", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_matrix", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_times", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_containing", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_frequencies", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_letter", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_motif", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_unipro_be", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_id", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_the", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_as", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_contents", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_letters", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_alternate", input_type=String(), position=7, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Beeml2Meme_V0_1_0().translate("wdl", allow_empty_container=True)

