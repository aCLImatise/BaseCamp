from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, String, Int, Float, Boolean

Gomo_V0_1_0 = CommandToolBuilder(tool="gomo", base_command=["gomo"], inputs=[ToolInput(tag="in_name_directory_not", input_type=Directory(optional=True), prefix="--o", doc=InputDocumentation(doc="name of the directory for output. Will not replace\nan existing directory; default: 'gomo_out'")), ToolInput(tag="in_oc", input_type=Directory(optional=True), prefix="--oc", doc=InputDocumentation(doc="name of the directory for output. Will replace an\nexisting directory; default: 'gomo_out'")), ToolInput(tag="in_text", input_type=Directory(optional=True), prefix="--text", doc=InputDocumentation(doc="output tab separated values format to standard out\nand don't create output directory or files;\ndefault: create HTML and XML in <output dir>;")), ToolInput(tag="in_dag", input_type=File(optional=True), prefix="--dag", doc=InputDocumentation(doc="path to the optional Gene Ontology DAG file to be\nused for highlighting the specific terms in the\nGOMo HTML output; default: no highlighting")), ToolInput(tag="in_motifs", input_type=File(optional=True), prefix="--motifs", doc=InputDocumentation(doc="path to the optional motif file in MEME format\nused to generate (all of the) scoring file(s);\nused for adding sequence logos to HTML output;\ndefault: no logos in output;")), ToolInput(tag="in_motif", input_type=String(optional=True), prefix="--motif", doc=InputDocumentation(doc="limit results to specified motif; option may\nbe repeated; default: use all motifs")), ToolInput(tag="in_shuffle_scores", input_type=Int(optional=True), prefix="--shuffle_scores", doc=InputDocumentation(doc="generate empirical null by shuffling the sequence\nto score assignments and computing statistics <n>\ntimes; default: <n>=1000")), ToolInput(tag="in_qvalue_threshold_considered", input_type=Float(optional=True), prefix="--t", doc=InputDocumentation(doc="the q-value threshold considered significant;\ndefault: <q>=0.05, q >= 1.0 shows all results")), ToolInput(tag="in_score_e_thresh", input_type=String(optional=True), prefix="--score_E_thresh", doc=InputDocumentation(doc="the score E-value threshold above which the same\nrank is given to all sequences;\ndefault: no threshold")), ToolInput(tag="in_min_gene_count", input_type=Int(optional=True), prefix="--min_gene_count", doc=InputDocumentation(doc="only consider GO terms annotated with a at least\n<n> genes; default: <n> = 1).")), ToolInput(tag="in_gs", input_type=Boolean(optional=True), prefix="--gs", doc=InputDocumentation(doc="extract gene scores rather than p-values from the\nCisML input file(s); default: use CisML p-values")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="seed the random number generator; different\nvalues of <seed> will give slightly different\noutputs; default: <seed> is chosen randomly")), ToolInput(tag="in_no_status", input_type=Boolean(optional=True), prefix="--nostatus", doc=InputDocumentation(doc="don't print progress messages to stderr")), ToolInput(tag="in_verbosity", input_type=Boolean(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="[1|2|3|4] control level of progress messages;\n1 = Quiet, 2 = Normal, 3 = High, 4 = Very High;\ndefault: 2")), ToolInput(tag="in_go_term_database", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_scoring_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_name_directory_not", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_name_directory_not", type_hint=File()), doc=OutputDocumentation(doc="name of the directory for output. Will not replace\nan existing directory; default: 'gomo_out'")), ToolOutput(tag="out_oc", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_oc", type_hint=File()), doc=OutputDocumentation(doc="name of the directory for output. Will replace an\nexisting directory; default: 'gomo_out'")), ToolOutput(tag="out_text", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_text", type_hint=File()), doc=OutputDocumentation(doc="output tab separated values format to standard out\nand don't create output directory or files;\ndefault: create HTML and XML in <output dir>;")), ToolOutput(tag="out_dag", output_type=File(optional=True), selector=InputSelector(input_to_select="in_dag", type_hint=File()), doc=OutputDocumentation(doc="path to the optional Gene Ontology DAG file to be\nused for highlighting the specific terms in the\nGOMo HTML output; default: no highlighting")), ToolOutput(tag="out_motifs", output_type=File(optional=True), selector=InputSelector(input_to_select="in_motifs", type_hint=File()), doc=OutputDocumentation(doc="path to the optional motif file in MEME format\nused to generate (all of the) scoring file(s);\nused for adding sequence logos to HTML output;\ndefault: no logos in output;"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gomo_V0_1_0().translate("wdl", allow_empty_container=True)

