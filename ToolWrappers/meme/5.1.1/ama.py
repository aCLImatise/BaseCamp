from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Float, Boolean, Int, Directory

Ama_V0_1_0 = CommandToolBuilder(tool="ama", base_command=["ama"], inputs=[ToolInput(tag="in_s_dbg", input_type=File(optional=True), prefix="--sdbg", doc=InputDocumentation(doc="Use Markov background model of order <order>\nderived from the sequence to compute its\nlikelihood ratios;\noverrides --pvalues, --gcbins and --rma;\n<background file> is required unless\n--sdbg is given.")), ToolInput(tag="in_motif", input_type=String(optional=True), prefix="--motif", doc=InputDocumentation(doc="Use only the motif identified by <id>.\nThis option may be repeated.")), ToolInput(tag="in_motif_pseudo", input_type=Float(optional=True), prefix="--motif-pseudo", doc=InputDocumentation(doc="The value <float> times the background\nfrequency is added to the count of each\nletter when creating the likelihood\nratio matrix; default: 0.01")), ToolInput(tag="in_norc", input_type=Boolean(optional=True), prefix="--norc", doc=InputDocumentation(doc="Disables the scanning of the reverse\ncomplement strand for complementable\nalphabets. The switch is set automatically\nfor alphabets without complements.")), ToolInput(tag="in_scoring", input_type=Boolean(optional=True), prefix="--scoring", doc=InputDocumentation(doc="[avg-odds|max-odds]\nIndicates whether the average or\nthe maximum odds should be calculated\ndefault: avg-odds")), ToolInput(tag="in_rma", input_type=Boolean(optional=True), prefix="--rma", doc=InputDocumentation(doc="Scale motif scores to the range [0,1].\n(Relative Motif Affinity).\nMotif scores are scaled by the maximum\nscore achievable by that PWM; default:\nMotif scores are not normalized.")), ToolInput(tag="in_p_values", input_type=Boolean(optional=True), prefix="--pvalues", doc=InputDocumentation(doc="Print p-value of avg-odds score in cisml\noutput. Ignored for max-odds scoring;\ndefault: P-values are not printed.")), ToolInput(tag="in_gc_bins", input_type=Int(optional=True), prefix="--gcbins", doc=InputDocumentation(doc="Compensate p-values for GC* content of\neach sequence using given number of\nGC range bins. Recommended bins: 41.\nThis option only works with complementable\nalphabets with exactly 2 complement pairs;\ndefault: P-values are based on\nfrequencies in background file.\n* GC refers to any complement pair, not\nactually G and C except for the case of DNA.")), ToolInput(tag="in_cs", input_type=Boolean(optional=True), prefix="--cs", doc=InputDocumentation(doc="Enable combining sequences with same\nidentifier by taking the average score\nand the Sidac corrected p-value.")), ToolInput(tag="in_o_format", input_type=File(optional=True), prefix="--o-format", doc=InputDocumentation(doc="[gff|cisml]   Output file format; default: cisml.\nIgnored if --o or --oc option used,\nand then CisML (.xml) and GFF (.txt)\nfiles are both output into the\nspecified directory.")), ToolInput(tag="in_output_available_formats_todirectory_give", input_type=Directory(optional=True), prefix="--o", doc=InputDocumentation(doc="Output all available formats to\n<directory>; give up if <directory>\nexists.")), ToolInput(tag="in_oc", input_type=Directory(optional=True), prefix="--oc", doc=InputDocumentation(doc="Output all available formats to\n<directory>; If <directory> exists\noverwrite contents.")), ToolInput(tag="in_verbosity", input_type=Boolean(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="[1|2|3|4]    Controls amount of screen output;\ndefault: 2")), ToolInput(tag="in_max_seq_length", input_type=Int(optional=True), prefix="--max-seq-length", doc=InputDocumentation(doc="Set the maximum length allowed for\ninput sequences; default: 250000000")), ToolInput(tag="in_last", input_type=Int(optional=True), prefix="--last", doc=InputDocumentation(doc="Use only scores of (up to) last <n>\nsequence positions to compute AMA.")), ToolInput(tag="in_motif_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_file", input_type=File(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_background_file", input_type=File(optional=True), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_o_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_o_format", type_hint=File()), doc=OutputDocumentation(doc="[gff|cisml]   Output file format; default: cisml.\nIgnored if --o or --oc option used,\nand then CisML (.xml) and GFF (.txt)\nfiles are both output into the\nspecified directory.")), ToolOutput(tag="out_output_available_formats_todirectory_give", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_available_formats_todirectory_give", type_hint=File()), doc=OutputDocumentation(doc="Output all available formats to\n<directory>; give up if <directory>\nexists.")), ToolOutput(tag="out_oc", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_oc", type_hint=File()), doc=OutputDocumentation(doc="Output all available formats to\n<directory>; If <directory> exists\noverwrite contents."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ama_V0_1_0().translate("wdl", allow_empty_container=True)

