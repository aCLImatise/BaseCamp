from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Float, Boolean

Psiclass_V0_1_0 = CommandToolBuilder(tool="psiclass", base_command=["psiclass"], inputs=[ToolInput(tag="in_paths_alignment_bam", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc=": paths to the alignment BAM files. Use comma to separate multiple BAM files")), ToolInput(tag="in_path_trusted_used", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc=": path to the trusted splice file (default: not used)")), ToolInput(tag="in_prefix_output_files", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc=": prefix of output files (default: ./psiclass)")), ToolInput(tag="in_number_processesthreads_default", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc=": number of processes/threads (default: 1)")), ToolInput(tag="in_only_use_subexons", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc=": only use the subexons with classifier score <= than the given number (default: 0.05)")), ToolInput(tag="in_sa", input_type=Float(optional=True), prefix="--sa", doc=InputDocumentation(doc=": the minimum average number of supported read for retained introns (default: 0.5)")), ToolInput(tag="in_vd", input_type=Float(optional=True), prefix="--vd", doc=InputDocumentation(doc=": the minimum average coverage depth of a transcript to be reported (defaults: 1.0)")), ToolInput(tag="in_max_dp_constraint_size", input_type=Boolean(optional=True), prefix="--maxDpConstraintSize", doc=InputDocumentation(doc=": the number of subexons a constraint can cover in DP. (default: 7. -1 for inf)")), ToolInput(tag="in_bam_group", input_type=File(optional=True), prefix="--bamGroup", doc=InputDocumentation(doc=": path to the file listing the group id of BAMs in the --lb file (default: not used)")), ToolInput(tag="in_primary_paralog", input_type=Boolean(optional=True), prefix="--primaryParalog", doc=InputDocumentation(doc=": use primary alignment to retain paralog genes (default: use unique alignments)")), ToolInput(tag="in_stage", input_type=Int(optional=True), prefix="--stage", doc=InputDocumentation(doc=":  (default: 0)\n0-start from beginning - building splice sites for each sample\n1-start from building subexon files for each sample\n2-start from combining subexon files across samples\n3-start from assembling the transcripts for each sample\n4-start from voting the consensus transcripts across samples\n")), ToolInput(tag="in_or", input_type=String(), position=0, doc=InputDocumentation(doc="--lb STRING: path to the file listing the alignments BAM files"))], outputs=[], container="quay.io/biocontainers/psiclass:1.0.2--he1b5a44_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Psiclass_V0_1_0().translate("wdl")

