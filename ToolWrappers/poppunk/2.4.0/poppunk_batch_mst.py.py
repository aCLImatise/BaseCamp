from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean, Float

Poppunk_Batch_Mst_Py_V0_1_0 = CommandToolBuilder(tool="poppunk_batch_mst.py", base_command=["poppunk_batch_mst.py"], inputs=[ToolInput(tag="in_r_files", input_type=String(optional=True), prefix="--r-files", doc=InputDocumentation(doc="Sample names and locations (as for poppunk --r-files)")), ToolInput(tag="in_batch_file", input_type=File(optional=True), prefix="--batch-file", doc=InputDocumentation(doc="Single column list of batches to process samples in\n--r-files in")), ToolInput(tag="in_n_batches", input_type=Int(optional=True), prefix="--n-batches", doc=InputDocumentation(doc="Number of batches for process if --batch-file is not\nspecified")), ToolInput(tag="in_info_csv", input_type=String(optional=True), prefix="--info-csv", doc=InputDocumentation(doc="CSV containing information about sequences")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="Prefix for output files")), ToolInput(tag="in_previous_clustering", input_type=File(optional=True), prefix="--previous-clustering", doc=InputDocumentation(doc="CSV file with previous clusters in MST drawing")), ToolInput(tag="in_iterative_mst", input_type=Boolean(optional=True), prefix="--iterative-mst", doc=InputDocumentation(doc="Re-calculate the MST for each batch")), ToolInput(tag="in_keep_intermediates", input_type=Boolean(optional=True), prefix="--keep-intermediates", doc=InputDocumentation(doc="Retain the outputs of each batch")), ToolInput(tag="in_use_batch_names", input_type=Boolean(optional=True), prefix="--use-batch-names", doc=InputDocumentation(doc="Name the stored outputs of each batch")), ToolInput(tag="in_rank", input_type=String(optional=True), prefix="--rank", doc=InputDocumentation(doc="Comma separated ranks used to fit lineage model (list\nof ints)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads for parallelisation (int)")), ToolInput(tag="in_gpu_dist", input_type=Boolean(optional=True), prefix="--gpu-dist", doc=InputDocumentation(doc="Use GPU for distance calculations")), ToolInput(tag="in_gpu_graph", input_type=Boolean(optional=True), prefix="--gpu-graph", doc=InputDocumentation(doc="Use GPU for network analysis")), ToolInput(tag="in_deviceid", input_type=Int(optional=True), prefix="--deviceid", doc=InputDocumentation(doc="GPU device ID (int)")), ToolInput(tag="in_db_args", input_type=Int(optional=True), prefix="--db-args", doc=InputDocumentation(doc="Other arguments to pass to poppunk. e.g. '--min-k 13")), ToolInput(tag="in_model_args", input_type=String(optional=True), prefix="--model-args", doc=InputDocumentation(doc="Other arguments to pass to lineage model fit")), ToolInput(tag="in_assign_args", input_type=String(optional=True), prefix="--assign-args", doc=InputDocumentation(doc="Other arguments to pass to poppunk_assign")), ToolInput(tag="in_qc_filter", input_type=String(optional=True), prefix="--qc-filter", doc=InputDocumentation(doc="Behaviour following sequence QC step: 'stop'\n[default], 'prune' (analyse data passing QC), or\n'continue' (analyse all data)")), ToolInput(tag="in_retain_failures", input_type=Boolean(optional=True), prefix="--retain-failures", doc=InputDocumentation(doc="Retain sketches of genomes that do not pass QC filters\nin separate database [default = False]")), ToolInput(tag="in_max_a_dist", input_type=Int(optional=True), prefix="--max-a-dist", doc=InputDocumentation(doc="Maximum accessory distance to permit [default = 0.5]")), ToolInput(tag="in_length_sigma", input_type=Int(optional=True), prefix="--length-sigma", doc=InputDocumentation(doc="Number of standard deviations of length distribution\nbeyond which sequences will be excluded [default = 5]")), ToolInput(tag="in_length_range", input_type=Int(optional=True), prefix="--length-range", doc=InputDocumentation(doc="LENGTH_RANGE\nAllowed length range, outside of which sequences will\nbe excluded [two values needed - lower and upper\nbounds]")), ToolInput(tag="in_prop_n", input_type=Float(optional=True), prefix="--prop-n", doc=InputDocumentation(doc="Threshold ambiguous base proportion above which\nsequences will be excluded [default = 0.1]")), ToolInput(tag="in_upper_n", input_type=String(optional=True), prefix="--upper-n", doc=InputDocumentation(doc="Threshold ambiguous base count above which sequences\nwill be excluded")), ToolInput(tag="in_pop_punk_exe", input_type=String(optional=True), prefix="--poppunk-exe", doc=InputDocumentation(doc="Location of poppunk executable. Use 'python poppunk-\nrunner.py' to run from source tree")), ToolInput(tag="in_assign_exe", input_type=String(optional=True), prefix="--assign-exe", doc=InputDocumentation(doc="Location of poppunk_assign executable. Use 'python\npoppunk_assign-runner.py' to run from source tree")), ToolInput(tag="in_mst_exe", input_type=String(optional=True), prefix="--mst-exe", doc=InputDocumentation(doc="Location of poppunk executable. Use 'python\npoppunk_mst-runner.py' to run from source tree\n"))], outputs=[], container="quay.io/biocontainers/poppunk:2.4.0--py39h7f0572b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Poppunk_Batch_Mst_Py_V0_1_0().translate("wdl")

