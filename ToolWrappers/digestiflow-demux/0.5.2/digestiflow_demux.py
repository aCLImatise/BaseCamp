from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int, Directory

Digestiflow_Demux_V0_1_0 = CommandToolBuilder(tool="digestiflow_demux", base_command=["digestiflow-demux"], inputs=[ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Path to configuration TOML file to load.")), ToolInput(tag="in_demux_tool", input_type=String(optional=True), prefix="--demux-tool", doc=InputDocumentation(doc="Demultiplexing tool to use. Choices are Illumina's\nbcl2fastq(2) and Picard")), ToolInput(tag="in_api_url", input_type=String(optional=True), prefix="--api-url", doc=InputDocumentation(doc="URL to Digestiflow Web API")), ToolInput(tag="in_api_token", input_type=String(optional=True), prefix="--api-token", doc=InputDocumentation(doc="API token to use for Digestiflow Web API")), ToolInput(tag="in_log_api_token", input_type=Boolean(optional=True), prefix="--log-api-token", doc=InputDocumentation(doc="Create log entry with API token (debug level; use only\nwhen debugging as this has security implications)")), ToolInput(tag="in_api_read_only", input_type=Boolean(optional=True), prefix="--api-read-only", doc=InputDocumentation(doc="Do not write/update flowcell info to database")), ToolInput(tag="in_only_post_message", input_type=Boolean(optional=True), prefix="--only-post-message", doc=InputDocumentation(doc="Only create the success message.")), ToolInput(tag="in_force_demultiplexing", input_type=Boolean(optional=True), prefix="--force-demultiplexing", doc=InputDocumentation(doc="Force demultiplexing even if flow cell not marked as\nready")), ToolInput(tag="in_filter_folder_names", input_type=Boolean(optional=True), prefix="--filter-folder-names", doc=InputDocumentation(doc="Filter folder names to those containing the vendor ID\nof a flow cell that has been marked as ready for\ndemultiplexing in the server.")), ToolInput(tag="in_drmaa", input_type=String(optional=True), prefix="--drmaa", doc=InputDocumentation(doc="Pass as --drmaa argument to snakemake call (make sure\nto define environment variable DRMAA_LIBRARY_PATH).")), ToolInput(tag="in_cluster_config", input_type=String(optional=True), prefix="--cluster-config", doc=InputDocumentation(doc="Pass as --cluster-config to snakemake call.")), ToolInput(tag="in_project_uuid", input_type=String(optional=True), prefix="--project-uuid", doc=InputDocumentation(doc="Project UUID to register flowcell for")), ToolInput(tag="in_cores", input_type=String(optional=True), prefix="--cores", doc=InputDocumentation(doc="Degree of parallelism to use")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase verbosity")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Decrease verbosity")), ToolInput(tag="in_keep_work_dir", input_type=Boolean(optional=True), prefix="--keep-work-dir", doc=InputDocumentation(doc="Keep temporary working directory (useful only for\ndebugging)")), ToolInput(tag="in_max_jobs_per_second", input_type=Int(optional=True), prefix="--max-jobs-per-second", doc=InputDocumentation(doc="Max jobs per second to submit, default is 10.")), ToolInput(tag="in_work_dir", input_type=Directory(optional=True), prefix="--work-dir", doc=InputDocumentation(doc="Specify working directory (instead of using temporary\none)")), ToolInput(tag="in_job_script", input_type=File(optional=True), prefix="--jobscript", doc=InputDocumentation(doc="Optional path to the jobscript to use when using\nDRMAA.")), ToolInput(tag="in_lane", input_type=String(optional=True), prefix="--lane", doc=InputDocumentation(doc="Select individual lanes for demultiplexing; default is\nto use all for which the sample sheet provides\ninformation; provide multiple times for selecting\nmultiple lanes.")), ToolInput(tag="in_tiles", input_type=Int(optional=True), prefix="--tiles", doc=InputDocumentation(doc="Select tile regex; provide multiple times for multiple\nregexes with bcl2fastq. Picard will use the first\ntile. Conflicts with --lane\n")), ToolInput(tag="in_out_dir", input_type=String(), position=0, doc=InputDocumentation(doc="Path to output directory")), ToolInput(tag="in_seq_dir", input_type=String(), position=1, doc=InputDocumentation(doc="Path(s) to sequencer raw data directories"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Digestiflow_Demux_V0_1_0().translate("wdl", allow_empty_container=True)

