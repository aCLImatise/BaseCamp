from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Pathracer_V0_1_0 = CommandToolBuilder(tool="pathracer", base_command=["pathracer"], inputs=[ToolInput(tag="in_global", input_type=Boolean(optional=True), prefix="--global", doc=InputDocumentation(doc="perform global-local (aka glocal) HMM matching [default]")), ToolInput(tag="in_local", input_type=Boolean(optional=True), prefix="--local", doc=InputDocumentation(doc="perform local-local HMM matching")), ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc="minimal length of resultant matched sequence; if <=1 then to be multiplied on the length of the pHMM [default: 0.9]")), ToolInput(tag="in_in_del_rate", input_type=Int(optional=True), prefix="--indel-rate", doc=InputDocumentation(doc="expected rate of nucleotides indels in graph edges [default: 0]. Used for AA pHMM alignment with frame shifts")), ToolInput(tag="in_top", input_type=Int(optional=True), prefix="--top", doc=InputDocumentation(doc="extract top N paths [default: 10000]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="the number of parallel threads [default: 16]")), ToolInput(tag="in_memory", input_type=Int(optional=True), prefix="--memory", doc=InputDocumentation(doc="RAM limit for PathRacer in GB (terminates if exceeded) [default: 100]")), ToolInput(tag="in_max_size", input_type=Int(optional=True), prefix="--max-size", doc=InputDocumentation(doc="maximal component size to consider [default: INF]")), ToolInput(tag="in_hmm", input_type=Boolean(optional=True), prefix="--hmm", doc=InputDocumentation(doc="match against HMM(s) [default]")), ToolInput(tag="in_nt", input_type=Boolean(optional=True), prefix="--nt", doc=InputDocumentation(doc="match against nucleotide string(s)")), ToolInput(tag="in_aa", input_type=Boolean(optional=True), prefix="--aa", doc=InputDocumentation(doc="match agains amino acid string(s)")), ToolInput(tag="in_queries", input_type=File(optional=True), prefix="--queries", doc=InputDocumentation(doc="queries names to lookup [default: all queries from input query file]")), ToolInput(tag="in_edges", input_type=String(optional=True), prefix="--edges", doc=InputDocumentation(doc="match around particular edges [default: all graph edges]")), ToolInput(tag="in_seed_edges", input_type=Boolean(optional=True), prefix="--seed-edges", doc=InputDocumentation(doc="use graph edges as seeds")), ToolInput(tag="in_seed_scaffolds", input_type=Boolean(optional=True), prefix="--seed-scaffolds", doc=InputDocumentation(doc="use scaffolds paths as seeds")), ToolInput(tag="in_seed_edges_scaffolds", input_type=Boolean(optional=True), prefix="--seed-edges-scaffolds", doc=InputDocumentation(doc="use edges AND scaffolds paths as seeds [default]")), ToolInput(tag="in_seed_exhaustive", input_type=Boolean(optional=True), prefix="--seed-exhaustive", doc=InputDocumentation(doc="exhaustive mode, use ALL edges")), ToolInput(tag="in_seed_edges_one_by_one", input_type=Boolean(optional=True), prefix="--seed-edges-1-by-1", doc=InputDocumentation(doc="use edges as seeds (1 by 1)")), ToolInput(tag="in_seed_scaffolds_one_by_one", input_type=Boolean(optional=True), prefix="--seed-scaffolds-1-by-1", doc=InputDocumentation(doc="use scaffolds paths as seeds (1 by 1)")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="--debug", doc=InputDocumentation(doc="extensive debug output")), ToolInput(tag="in_draw", input_type=Boolean(optional=True), prefix="--draw", doc=InputDocumentation(doc="draw pictures around the interesting edges")), ToolInput(tag="in_re_score", input_type=Boolean(optional=True), prefix="--rescore", doc=InputDocumentation(doc="rescore paths via HMMer")), ToolInput(tag="in_annotate_graph", input_type=Boolean(optional=True), prefix="--annotate-graph", doc=InputDocumentation(doc="emit paths in GFA graph")), ToolInput(tag="in_acc", input_type=Boolean(optional=True), prefix="--acc", doc=InputDocumentation(doc="prefer accessions over names in output")), ToolInput(tag="in_no_ali", input_type=String(optional=True), prefix="--noali", doc=InputDocumentation(doc="'t output alignments, so output is smaller")), ToolInput(tag="in_report_sequences_evalue_threshold", input_type=String(optional=True), prefix="-E", doc=InputDocumentation(doc="report sequences <= this E-value threshold in output")), ToolInput(tag="in_report_sequences_score_threshold", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc="report sequences >= this score threshold in output")), ToolInput(tag="in_dome", input_type=String(optional=True), prefix="--domE", doc=InputDocumentation(doc="report domains <= this E-value threshold in output")), ToolInput(tag="in_do_mt", input_type=String(optional=True), prefix="--domT", doc=InputDocumentation(doc="report domains >= this score cutoff in output")), ToolInput(tag="in_ince", input_type=String(optional=True), prefix="-incE", doc=InputDocumentation(doc="consider sequences <= this E-value threshold as significant")), ToolInput(tag="in_in_ct", input_type=String(optional=True), prefix="-incT", doc=InputDocumentation(doc="consider sequences >= this score threshold as significant")), ToolInput(tag="in_inc_dome", input_type=String(optional=True), prefix="-incdomE", doc=InputDocumentation(doc="consider domains <= this E-value threshold as significant")), ToolInput(tag="in_inc_do_mt", input_type=String(optional=True), prefix="-incdomT", doc=InputDocumentation(doc="consider domains >= this score threshold as significant")), ToolInput(tag="in_cut_ga", input_type=Boolean(optional=True), prefix="--cut_ga", doc=InputDocumentation(doc="use profile's GA gathering cutoffs to set all thresholding")), ToolInput(tag="in_cut_nc", input_type=Boolean(optional=True), prefix="--cut_nc", doc=InputDocumentation(doc="use profile's NC noise cutoffs to set all thresholding")), ToolInput(tag="in_cut_tc", input_type=Boolean(optional=True), prefix="--cut_tc", doc=InputDocumentation(doc="use profile's TC trusted cutoffs to set all thresholding")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc="Turn all heuristic filters off (less speed, more power)")), ToolInput(tag="in_fone", input_type=Int(optional=True), prefix="--F1", doc=InputDocumentation(doc="Stage 1 (MSV) threshold: promote hits w/ P <= F1")), ToolInput(tag="in_f_two", input_type=Int(optional=True), prefix="--F2", doc=InputDocumentation(doc="Stage 2 (Vit) threshold: promote hits w/ P <= F2")), ToolInput(tag="in_f_three", input_type=Int(optional=True), prefix="--F3", doc=InputDocumentation(doc="Stage 3 (Fwd) threshold: promote hits w/ P <= F3")), ToolInput(tag="in_parallel_components", input_type=Boolean(optional=True), prefix="--parallel-components", doc=InputDocumentation(doc="process connected components of neighborhood subgraph in parallel [default: false]")), ToolInput(tag="in_max_insertion_length", input_type=Int(optional=True), prefix="--max-insertion-length", doc=InputDocumentation(doc="maximal allowed number of successive I-emissions [default: 30]")), ToolInput(tag="in_expand_coef", input_type=Int(optional=True), prefix="--expand-coef", doc=InputDocumentation(doc="overhang expansion coefficient for neighborhood search [default: 2]")), ToolInput(tag="in_expand_const", input_type=Int(optional=True), prefix="--expand-const", doc=InputDocumentation(doc="const addition to overhang values for neighborhood search [default: 20]")), ToolInput(tag="in_no_top_score_filter", input_type=Boolean(optional=True), prefix="--no-top-score-filter", doc=InputDocumentation(doc="disable top score Event Graph vertices filter [default: false]")), ToolInput(tag="in_no_fast_forward", input_type=Boolean(optional=True), prefix="--no-fast-forward", doc=InputDocumentation(doc="disable fast forward in I-loops processing [default: false]")), ToolInput(tag="in_known_sequences", input_type=File(optional=True), prefix="--known-sequences", doc=InputDocumentation(doc="FASTA file with known sequnces that should be definitely found")), ToolInput(tag="in_export_event_graph", input_type=Boolean(optional=True), prefix="--export-event-graph", doc=InputDocumentation(doc="export event graph in cereal format\n"))], outputs=[], container="quay.io/biocontainers/pathracer:3.15.0.dev--h2d02072_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pathracer_V0_1_0().translate("wdl")

