from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String

Halsummarizemutations_V0_1_0 = CommandToolBuilder(tool="halSummarizeMutations", base_command=["halSummarizeMutations"], inputs=[ToolInput(tag="in_cache_bytes", input_type=Int(optional=True), prefix="--cacheBytes", doc=InputDocumentation(doc=":      maximum size in bytes of regular hdf5 cache [default =\n15728640]")), ToolInput(tag="in_cache_mdc", input_type=Int(optional=True), prefix="--cacheMDC", doc=InputDocumentation(doc=":        number of metadata slots in hdf5 cache [default = 113]")), ToolInput(tag="in_cacher_dc", input_type=Int(optional=True), prefix="--cacheRDC", doc=InputDocumentation(doc=":        number of regular slots in hdf5 cache.  should be a prime\nnumber ~= 10 * DefaultCacheRDCBytes / chunk [default =\n599999]")), ToolInput(tag="in_cache_w_zero", input_type=Int(optional=True), prefix="--cacheW0", doc=InputDocumentation(doc=":         w0 parameter fro hdf5 cache [default = 0.75]")), ToolInput(tag="in_in_memory", input_type=Boolean(optional=True), prefix="--inMemory", doc=InputDocumentation(doc=":                load all data in memory (and disable hdf5 cache) [default\n= 0]")), ToolInput(tag="in_just_subs", input_type=Boolean(optional=True), prefix="--justSubs", doc=InputDocumentation(doc=":                just count substitutions.  Note results are total subs\nbetween genome  and all children, rather than branch\nresults  when using the normal interface.  For tuning  and\nperformance checking only [default = 0]")), ToolInput(tag="in_max_gap", input_type=Int(optional=True), prefix="--maxGap", doc=InputDocumentation(doc=":          maximum indel length to be considered a gap.  Gaps  can be\nnested within other rearrangements. [default = 20]")), ToolInput(tag="in_max_n_fraction", input_type=Int(optional=True), prefix="--maxNFraction", doc=InputDocumentation(doc=":    maximum fraction of Ns in a rearranged segment for it to\nnot be ignored as missing data. [default = 1]")), ToolInput(tag="in_root_genome", input_type=String(optional=True), prefix="--rootGenome", doc=InputDocumentation(doc=":      name of root genome (none if empty) [default = '']")), ToolInput(tag="in_target_genomes", input_type=String(optional=True), prefix="--targetGenomes", doc=InputDocumentation(doc=":   comma-separated (no spaces) list of target genomes (others\nare excluded) (vist all if empty) [default = '']\n")), ToolInput(tag="in_hal_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Halsummarizemutations_V0_1_0().translate("wdl", allow_empty_container=True)

