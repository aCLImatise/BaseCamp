from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dwgsim_Eval_V0_1_0 = CommandToolBuilder(tool="dwgsim_eval", base_command=["dwgsim_eval"], inputs=[ToolInput(tag="in_int_split_mapping", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="INT     split by [0]:\n0: by mapping quality\n1: by alignment score\n2: by suboptimal alignment score\n3: by alignment score - suboptimal alignment score")), ToolInput(tag="in_alignments_bwa_solid", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="alignments are from BWA (SOLiD only) [False]")), ToolInput(tag="in_color_space_alignments", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="color space alignments [False]")), ToolInput(tag="in_int_divide_score", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="INT     divide quality/alignment score by this factor [1]")), ToolInput(tag="in_gap_", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="gap 'wiggle' [5]")), ToolInput(tag="in_consecutive_alignments_end", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="consecutive alignments with the same name (and end for multi-ends) should be treated as multi-mapped reads [False]")), ToolInput(tag="in_int_number_raw", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="INT     number of raw input paired-end reads (otherwise, inferred from all SAM records present) [0]")), ToolInput(tag="in_int_consider_this", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="INT     consider only alignments with this mapping quality or greater [0]")), ToolInput(tag="in_input_contains_end", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="input contains only single end reads [False]")), ToolInput(tag="in_input_is_sam", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="input is SAM [False]")), ToolInput(tag="in_print_incorrect_alignments", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="print incorrect alignments [False]")), ToolInput(tag="in_the_specified_snps", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="INT     consider only alignments with the number of specified SNPs [-1]")), ToolInput(tag="in_the_specified_errors", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="INT     consider only alignments with the number of specified errors [-1]")), ToolInput(tag="in_consider_only_alignments", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="consider only alignments with indels [False]")), ToolInput(tag="in_string_read_prefix", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="STRING  a read prefix that was prepended to each read name [not using]")), ToolInput(tag="in_in_dots_am_slash_in_dot_bam", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dwgsim_Eval_V0_1_0().translate("wdl", allow_empty_container=True)

