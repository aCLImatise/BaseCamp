from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, String

Viewbs_Methheatmap_V0_1_0 = CommandToolBuilder(tool="ViewBS_MethHeatmap", base_command=["ViewBS", "MethHeatmap"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="- Suppress extended information or not. [Default: TRUE]")), ToolInput(tag="in_region", input_type=Boolean(optional=True), prefix="--region", doc=InputDocumentation(doc="[required*]\n- regions you want to investigate.")), ToolInput(tag="in_sample", input_type=Boolean(optional=True), prefix="--sample", doc=InputDocumentation(doc="[required]\n- Provide the sample information. [Format: methlationfile,samplename]")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--merge", doc=InputDocumentation(doc="[optional]\n- If --merge is provided (True), methylation level for different context will be genrated in one file.")), ToolInput(tag="in_min_depth", input_type=Boolean(optional=True), prefix="--minDepth", doc=InputDocumentation(doc="[optional]\n- Minimum read depth for calculating methylation level. [default: 5]")), ToolInput(tag="in_maxdepth", input_type=Boolean(optional=True), prefix="--maxDepth", doc=InputDocumentation(doc="[optional]\n- Maximum read depth for calculating methylation level. [default: 10000]")), ToolInput(tag="in_cluster_rows", input_type=Boolean(optional=True), prefix="--cluster_rows", doc=InputDocumentation(doc="[optional]\n- boolean values determining if rows should be clustered or hclust object.")), ToolInput(tag="in_cluster_cols", input_type=Boolean(optional=True), prefix="--cluster_cols", doc=InputDocumentation(doc="[optional]\n- boolean values determining if columns should be clustered or hclust object.")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="[optional]\n- Output folder. [Default: ./]")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="--prefix", doc=InputDocumentation(doc="[required]\n- Provide prefix for the output file. [Default: MethHeatmap]")), ToolInput(tag="in_height", input_type=Boolean(optional=True), prefix="--height", doc=InputDocumentation(doc="[optional]\n- Height of PDF figure (Heatmap). Unit is cm. [Default: 10]")), ToolInput(tag="in_width", input_type=Boolean(optional=True), prefix="--width", doc=InputDocumentation(doc="[optional]\n- Width of PDF figure (Heatmap). Unit is cm. [Default: 10]")), ToolInput(tag="in_height_two", input_type=Boolean(optional=True), prefix="--height2", doc=InputDocumentation(doc="[optional]\n- Height of PDF figure (Violin and boxplot). Unit is cm. [Default: 10]")), ToolInput(tag="in_width_two", input_type=Boolean(optional=True), prefix="--width2", doc=InputDocumentation(doc="[optional]\n- Width of PDF figure (Violin and boxplot). Unit is cm. [Default: 10]")), ToolInput(tag="in_random_region", input_type=Boolean(optional=True), prefix="--random_region", doc=InputDocumentation(doc="[optional]\n- The number to select the regions randomly for the give list of regions.\nWhen the given regions are too many, it may cause 'cannot allocate\nvector of size' when generating the heatmap. Then we randomly select\npart of the data to generate the heatmap. [Default: 2000]\nIf ViewBS still 'cannot allocate vector of size', please select a smaller\nnumber.\n")), ToolInput(tag="in_violin_boxplot_dot", input_type=String(), position=0, doc=InputDocumentation(doc="Required arguments"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="[optional]\n- Output folder. [Default: ./]")), ToolOutput(tag="out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix", type_hint=File()), doc=OutputDocumentation(doc="[required]\n- Provide prefix for the output file. [Default: MethHeatmap]"))], container="quay.io/biocontainers/viewbs:0.1.10--pl5262h779adbc_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Viewbs_Methheatmap_V0_1_0().translate("wdl")

