from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Directory

R_Scape_Sim_V0_1_0 = CommandToolBuilder(tool="R_scape_sim", base_command=["R-scape-sim"], inputs=[ToolInput(tag="in__be_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": be verbose")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc=": use DNA alphabet")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="--rna", doc=InputDocumentation(doc=": use RNA alphabet")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="--amino", doc=InputDocumentation(doc=": use protein alphabet")), ToolInput(tag="in_naive", input_type=Boolean(optional=True), prefix="--naive", doc=InputDocumentation(doc=": naive simulation: independent positions")), ToolInput(tag="in_rn_ass", input_type=Boolean(optional=True), prefix="--rnass", doc=InputDocumentation(doc=": simulation according to a RNA secondary structure")), ToolInput(tag="in_potts", input_type=Boolean(optional=True), prefix="--potts", doc=InputDocumentation(doc=": Metropolis-Hastins for a potts model")), ToolInput(tag="in_potts_file", input_type=File(optional=True), prefix="--pottsfile", doc=InputDocumentation(doc=": read potts params from file <f>")), ToolInput(tag="in_cnt_maxd", input_type=Int(optional=True), prefix="--cntmaxD", doc=InputDocumentation(doc=": max distance for contact definition")), ToolInput(tag="in_pdb_file", input_type=String(optional=True), prefix="--pdbfile", doc=InputDocumentation(doc=": read contacts from pdbfile <f>")), ToolInput(tag="in_pott_sigma", input_type=Int(optional=True), prefix="--pottsigma", doc=InputDocumentation(doc=": if sampling param from a N(0,sigma)")), ToolInput(tag="in_ptp_gauss", input_type=Boolean(optional=True), prefix="--ptpgauss", doc=InputDocumentation(doc=": potts param sampled from a Gaussian distribution")), ToolInput(tag="in_ptp_file", input_type=Boolean(optional=True), prefix="--ptpfile", doc=InputDocumentation(doc=": potts param from file pottsfile")), ToolInput(tag="in__length_alignment", input_type=Int(optional=True), prefix="-L", doc=InputDocumentation(doc=": length of the alignment")), ToolInput(tag="in_number_sequences_simulated", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc=": number of sequences in the simulated msa, N=0 for use all")), ToolInput(tag="in_abl", input_type=Int(optional=True), prefix="--abl", doc=InputDocumentation(doc=": tree average branch length in number of changes per site")), ToolInput(tag="in_at_bl", input_type=Int(optional=True), prefix="--atbl", doc=InputDocumentation(doc=": tree average total branch length in number of changes per site")), ToolInput(tag="in_no_indels", input_type=Boolean(optional=True), prefix="--noindels", doc=InputDocumentation(doc=": produces ungapped alignments")), ToolInput(tag="in_eq_branch", input_type=Boolean(optional=True), prefix="--eqbranch", doc=InputDocumentation(doc=": make all branch lengths equal size")), ToolInput(tag="in_star", input_type=Boolean(optional=True), prefix="--star", doc=InputDocumentation(doc=": star topology")), ToolInput(tag="in_rand", input_type=Boolean(optional=True), prefix="--rand", doc=InputDocumentation(doc=": independent sequences")), ToolInput(tag="in_given", input_type=Boolean(optional=True), prefix="--given", doc=InputDocumentation(doc=": given msa topology")), ToolInput(tag="in_sim", input_type=Boolean(optional=True), prefix="--sim", doc=InputDocumentation(doc=": simulated topology")), ToolInput(tag="in_uses_q", input_type=String(optional=True), prefix="--usesq", doc=InputDocumentation(doc=": sq from the origional msa used as root (default random)")), ToolInput(tag="in_evo_model", input_type=String(optional=True), prefix="--evomodel", doc=InputDocumentation(doc=": evolutionary model used")), ToolInput(tag="in_ribo_file", input_type=File(optional=True), prefix="--ribofile", doc=InputDocumentation(doc=": read ribosum structure from file <f>")), ToolInput(tag="in_mx", input_type=String(optional=True), prefix="--mx", doc=InputDocumentation(doc=": substitution rate matrix choice (of some built-in matrices)")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc=": specify a directory for all output files")), ToolInput(tag="in_send_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": send output to file <f>, not stdout")), ToolInput(tag="in_in_format", input_type=String(optional=True), prefix="--informat", doc=InputDocumentation(doc=": specify format")), ToolInput(tag="in_one_msa", input_type=Boolean(optional=True), prefix="--onemsa", doc=InputDocumentation(doc=": if file has more than one msa, analyze only the first one")), ToolInput(tag="in_filter_xseqcons_residues", input_type=String(optional=True), prefix="-F", doc=InputDocumentation(doc=": filter out seqs <x*seq_cons residues")), ToolInput(tag="in_var_32", input_type=String(optional=True), prefix="-I", doc=InputDocumentation(doc=": require seqs to have < <x> id")), ToolInput(tag="in_var_33", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc=": require seqs to have >= <x> id")), ToolInput(tag="in_gap_thresh", input_type=String(optional=True), prefix="--gapthresh", doc=InputDocumentation(doc=": keep columns with < <x> fraction of gaps")), ToolInput(tag="in_mini_d", input_type=String(optional=True), prefix="--minid", doc=InputDocumentation(doc=": minimum avgid of the given alignment")), ToolInput(tag="in_max_id", input_type=String(optional=True), prefix="--maxid", doc=InputDocumentation(doc=": maximum avgid of the given alignment")), ToolInput(tag="in_to_l", input_type=String(optional=True), prefix="--tol", doc=InputDocumentation(doc=": tolerance")), ToolInput(tag="in_seed", input_type=String(optional=True), prefix="--seed", doc=InputDocumentation(doc=": set RNG seed to <n>")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_msa", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc=": specify a directory for all output files")), ToolOutput(tag="out_send_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_send_output_file", type_hint=File()), doc=OutputDocumentation(doc=": send output to file <f>, not stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    R_Scape_Sim_V0_1_0().translate("wdl", allow_empty_container=True)

