!Command
command:
- fpcat
positional:
- !Positional
  description: 'input fingerprint filenames (default: use stdin)'
  position: 0
  name: filename
  optional: false
named:
- !Flag
  description: "input fingerprint format. One of fps or fps.gz.\n(default guesses\
    \ from filename or is fps)"
  synonyms:
  - --in
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: "assume the input fingerprint files are in popcount\norder and do a\
    \ merge sort"
  synonyms:
  - --merge
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: save the fingerprints to FILENAME (default=stdout)
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: FILENAME
  optional: true
- !Flag
  description: "output fingerprint format. One of fps or fps.gz.\n(default guesses\
    \ from output filename, or is 'fps')"
  synonyms:
  - --out
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: reorder the output fingerprints by popcount
  synonyms:
  - --reorder
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "save the output fingerprints in the same order as the\ninput (default\
    \ for FPS output)"
  synonyms:
  - --preserve-order
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: show progress
  synonyms:
  - --show-progress
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: fpcat [-h] [--in FORMAT] [--merge] [-o FILENAME] [--out FORMAT]\n\
  \             [--reorder] [--preserve-order] [--show-progress] [--version]\n   \
  \          [filename [filename ...]]\n\nCombine multiple fingerprint files into\
  \ a single file.\n\npositional arguments:\n  filename              input fingerprint\
  \ filenames (default: use stdin)\n\noptional arguments:\n  -h, --help          \
  \  show this help message and exit\n  --in FORMAT           input fingerprint format.\
  \ One of fps or fps.gz.\n                        (default guesses from filename\
  \ or is fps)\n  --merge               assume the input fingerprint files are in\
  \ popcount\n                        order and do a merge sort\n  -o FILENAME, --output\
  \ FILENAME\n                        save the fingerprints to FILENAME (default=stdout)\n\
  \  --out FORMAT          output fingerprint format. One of fps or fps.gz.\n    \
  \                    (default guesses from output filename, or is 'fps')\n  --reorder\
  \             reorder the output fingerprints by popcount\n  --preserve-order  \
  \    save the output fingerprints in the same order as the\n                   \
  \     input (default for FPS output)\n  --show-progress       show progress\n  --version\
  \             show program's version number and exit\n\nExamples:\n\nfpcat can be\
  \ used to merge multiple FPS files. For example, you might\nhave used GNU parallel\
  \ to generate FPS files for each of the PubChem\nfiles, which you want to merge\
  \ into a single file.:\n\n    fpcat Compound_*.fps -o pubchem.fps\n\nThe --merge\
  \ option is experimental. Use it if the input fingerprints\nare in popcount order,\
  \ because sorted output is a simple merge sort of\nthe individual sorted inputs.\
  \ However, this option opens all input\nfiles at the same time, which may exceed\
  \ your resource limit on file\ndescriptors. The current implementation also requires\
  \ a lot of disk\nseeks so is slow for many files.\n\n    \n"
generated_using:
- --help
