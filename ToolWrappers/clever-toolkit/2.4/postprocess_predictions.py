from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Postprocess_Predictions_V0_1_0 = CommandToolBuilder(tool="postprocess_predictions", base_command=["postprocess-predictions"], inputs=[ToolInput(tag="in_minimum_expected_support_discarded", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc="Minimum expected support for deletion cliques (cliques\nwith lower support are discarded).")), ToolInput(tag="in_minimum_expected_support_cliquescliques", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="Minimum expected support for insertion cliques\n(cliques with lower support are discarded).")), ToolInput(tag="in_cov_bal", input_type=String(optional=True), prefix="--covbal", doc=InputDocumentation(doc="Minimum coverage balance (=support/coverage). Filter\nis applied after merging (default: disabled).")), ToolInput(tag="in_minimum_coverage_clique", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Minimum coverage at clique center.")), ToolInput(tag="in_minimum_individual_coverage", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc="Minimum individual coverage at clique center, that is,\nonly cliques are retains for which ALL individuals\nhave at least the given coverage.")), ToolInput(tag="in_reevaluate_cliques_lead", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="Re-evaluate which cliques lead to which sets of\nindividuals (requires standard deviation to be given).")), ToolInput(tag="in_stddev", input_type=Int(optional=True), prefix="--stddev", doc=InputDocumentation(doc="Standard deviation of insert size (necessary for some\noptions).")), ToolInput(tag="in_also_store_output", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc="Also store output in separate files for each sample.\nParameter: prefix of filenames for samplewise output.")), ToolInput(tag="in_filename_read_samplenames", input_type=File(optional=True), prefix="-N", doc=InputDocumentation(doc="Filename to read samplenames from.")), ToolInput(tag="in_only_del", input_type=Boolean(optional=True), prefix="--only-del", doc=InputDocumentation(doc="Only process deletions.")), ToolInput(tag="in_only_ins", input_type=Boolean(optional=True), prefix="--only-ins", doc=InputDocumentation(doc="Only process insertions.")), ToolInput(tag="in_vcf", input_type=Boolean(optional=True), prefix="--vcf", doc=InputDocumentation(doc="Output VCF format."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Postprocess_Predictions_V0_1_0().translate("wdl", allow_empty_container=True)

