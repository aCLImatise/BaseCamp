from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String, Array, File, Int

Isoquant_Py_V0_1_0 = CommandToolBuilder(tool="isoquant.py", base_command=["isoquant.py"], inputs=[ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="output folder, will be created automatically\n[default=isoquant_output]")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Debug log output.")), ToolInput(tag="in_genedb", input_type=String(optional=True), prefix="--genedb", doc=InputDocumentation(doc="gene database in gffutils DB format or GTF/GFF format")), ToolInput(tag="in_complete_genedb", input_type=Boolean(optional=True), prefix="--complete_genedb", doc=InputDocumentation(doc="use this flag if gene annotation contains transcript\nand gene metafeatures, e.g. with official annotations,\nsuch as GENCODE; speeds up gene database conversion")), ToolInput(tag="in_reference", input_type=String(optional=True), prefix="--reference", doc=InputDocumentation(doc="reference genome in FASTA format, should be provided\nto compute some additional stats and when reads in\nFASTA/FASTQ are used as an input")), ToolInput(tag="in_index", input_type=String(optional=True), prefix="--index", doc=InputDocumentation(doc="genome index for specified aligner, should be provided\nonly when reads are used as an input")), ToolInput(tag="in_clean_start", input_type=Boolean(optional=True), prefix="--clean_start", doc=InputDocumentation(doc="Do not use previously generated index, feature db or")), ToolInput(tag="in_fast_q", input_type=Array(t=String(), optional=True), prefix="--fastq", doc=InputDocumentation(doc="input FASTQ file(s), each file will be treated as a\nseparate sample; reference genome should be provided\nwhen using reads as input")), ToolInput(tag="in_bam_list", input_type=File(optional=True), prefix="--bam_list", doc=InputDocumentation(doc="text file with list of BAM files, one file per line,\nleave empty line between samples")), ToolInput(tag="in_fast_q_list", input_type=File(optional=True), prefix="--fastq_list", doc=InputDocumentation(doc="text file with list of FASTQ files, one file per line,\nleave empty line between samples")), ToolInput(tag="in_read_assignments", input_type=Array(t=String(), optional=True), prefix="--read_assignments", doc=InputDocumentation(doc="reuse read assignments (binary format) to construct\ntranscript models")), ToolInput(tag="in_data_type", input_type=String(optional=True), prefix="--data_type", doc=InputDocumentation(doc="type of data to process, supported types are:\nassembly, pacbio_ccs, nanopore")), ToolInput(tag="in_stranded", input_type=String(optional=True), prefix="--stranded", doc=InputDocumentation(doc="reads strandness type, supported values are: forward,\nreverse, none")), ToolInput(tag="in_polya_trimmed", input_type=Boolean(optional=True), prefix="--polya_trimmed", doc=InputDocumentation(doc="set if reads were polyA trimmed; polyA tails will not\nbe required for transcript model construction")), ToolInput(tag="in_check_canonical", input_type=Boolean(optional=True), prefix="--check_canonical", doc=InputDocumentation(doc="report whether splice junctions are canonical\n(requires reference genome)")), ToolInput(tag="in_fl_data", input_type=Boolean(optional=True), prefix="--fl_data", doc=InputDocumentation(doc="reads represent FL transcripts; both ends of the read\nare considered to be reliable")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full_help", doc=InputDocumentation(doc="show full list of options")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="--test", doc=InputDocumentation(doc="run IsoQuant on toy dataset")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads to use")), ToolInput(tag="in_labels", input_type=Array(t=String(), optional=True), prefix="--labels", doc=InputDocumentation(doc="sample names to be used; input file names are used if\nnot set")), ToolInput(tag="in_read_group", input_type=File(optional=True), prefix="--read_group", doc=InputDocumentation(doc="a way to group feature counts (no grouping by\ndefault): by BAM file tag (tag:TAG), using additional\nfile (file:FILE:READ_COL:GROUP_COL:DELIM), using read\nid (read_id:DELIM)")), ToolInput(tag="in_sq_anti_output", input_type=Boolean(optional=True), prefix="--sqanti_output", doc=InputDocumentation(doc="produce SQANTI-like TSV output (requires more time)")), ToolInput(tag="in_count_exons", input_type=Boolean(optional=True), prefix="--count_exons", doc=InputDocumentation(doc="perform exon and intron counting")), ToolInput(tag="in_matching_strategy", input_type=String(optional=True), prefix="--matching_strategy", doc=InputDocumentation(doc="matching strategy to use from most strict to least")), ToolInput(tag="in_model_construction_strategy", input_type=String(optional=True), prefix="--model_construction_strategy", doc=InputDocumentation(doc="transcript model construction strategy to use\n")), ToolInput(tag="in_alignments_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--bam BAM [BAM ...]   sorted and indexed BAM file(s), each file will be"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="output folder, will be created automatically\n[default=isoquant_output]"))], container="quay.io/biocontainers/isoquant:1.2.0--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Isoquant_Py_V0_1_0().translate("wdl")

