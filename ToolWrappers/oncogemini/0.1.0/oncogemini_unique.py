from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Float, File, Boolean

Oncogemini_Unique_V0_1_0 = CommandToolBuilder(tool="oncogemini_unique", base_command=["oncogemini", "unique"], inputs=[ToolInput(tag="in_mind_p", input_type=Int(optional=True), prefix="--minDP", doc=InputDocumentation(doc="Minimum depth required in all samples default is 0)")), ToolInput(tag="in_ming_q", input_type=Int(optional=True), prefix="--minGQ", doc=InputDocumentation(doc="Minimum genotype quality required in all samples (default\nis 0)")), ToolInput(tag="in_specific", input_type=String(optional=True), prefix="--specific", doc=InputDocumentation(doc="Identify unique variants that exist only in samples from\nthis comma-separated list")), ToolInput(tag="in_max_others", input_type=Float(optional=True), prefix="--maxOthers", doc=InputDocumentation(doc="Specify a maximum sample AF to allow in other samples\n(default is 0)")), ToolInput(tag="in_patient", input_type=File(optional=True), prefix="--patient", doc=InputDocumentation(doc="Specify a patient to filter (should correspond to a\npatient_id in ped file)")), ToolInput(tag="in_samples", input_type=String(optional=True), prefix="--samples", doc=InputDocumentation(doc="Rather than including all samples in filters, a string of\ncomma-separated specified samples to use (default is\n'All')")), ToolInput(tag="in_increase", input_type=Float(optional=True), prefix="--increase", doc=InputDocumentation(doc="Add amount to increase AF filter between unique and other\nsamples (default is 0)")), ToolInput(tag="in_columns", input_type=String(optional=True), prefix="--columns", doc=InputDocumentation(doc="A list of columns that you would like returned (default\nis '*', which returns every column)")), ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc="Restrictions to apply to variants (SQL syntax)")), ToolInput(tag="in_purity", input_type=Boolean(optional=True), prefix="--purity", doc=InputDocumentation(doc="Using purity estimates in ped file, make corrections to\nAF to be used")), ToolInput(tag="in_somatic_only", input_type=Boolean(optional=True), prefix="--somatic_only", doc=InputDocumentation(doc="Only include variants that have been marked as somatic\nvia the set_somatic command")), ToolInput(tag="in_cancers", input_type=String(optional=True), prefix="--cancers", doc=InputDocumentation(doc="Restrict results to variants/genes associated with\nspecific cancer types by entering a comma-separated\nstring of cancer type abbreviations (see documents for\nabbreviations) REQUIRES that db include\ncivic_gene_abbrevations and/or cgi_gene_abbreviations\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Oncogemini_Unique_V0_1_0().translate("wdl", allow_empty_container=True)

