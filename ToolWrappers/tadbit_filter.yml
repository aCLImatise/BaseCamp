!Command
command:
- tadbit
- filter
positional: []
named:
- !Flag
  description: overwrite previously run job
  synonyms:
  - --force
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: use filters of previously run job
  synonyms:
  - --resume
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: path to working directory (generated with the tool tadbit mapper)
  synonyms:
  - -w
  - --workdir
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "[8] Maximum number of CPU cores available in the execution host. If\n\
    higher than 1, tasks with multi-threading capabilities will enabled\n(if 0 all\
    \ available) cores will be used"
  synonyms:
  - -C
  - --cpus
  args: !SimpleFlagArg
    name: CPUS
  optional: true
- !Flag
  description: no display server (X screen)
  synonyms:
  - --noX
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: if provided uses this directory to manipulate the database
  synonyms:
  - --tmpdb
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "Use as input data generated by a job under a given pathids. Use\n\
    tadbit describe to find out which. To filter an intersected file\nproduced with\
    \ tadbit map --fast_fragment only one PATHid is needed\notherwise one per read\
    \ is needed, first for read 1, second for read\n2."
  synonyms:
  - --pathids
  args: !RepeatFlagArg
    name: INT
  optional: true
- !Flag
  description: "Compress input mapped files when parsing is done. This is done in\n\
    background, while next MAP file is processed, or while reads are\nsorted."
  synonyms:
  - --compress_input
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: path samtools binary
  synonyms:
  - --samtools
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "[mid] for compression into pseudo-BAM format. Short contains only\n\
    positions of reads mapped, mid everything but restriction sites."
  synonyms:
  - --format
  args: !ChoiceFlagArg
    choices: !!set
      short:
      long:
      mid:
  optional: true
- !Flag
  description: stores only valid-pairs discards filtered out reads.
  synonyms:
  - --valid
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "remove intermediate files. WARNING: together with format \"short\"\
    \ or\nvalid options, this may results in losing data"
  synonyms:
  - --clean
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\n\
    pair of reads e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these\nnumberscorrespond\
    \ to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end, 5: too\
    \ close from RES, 6: too short, 7: too\nlarge, 8: over-represented, 9: duplicated,\
    \ 10: random breaks"
  synonyms:
  - --apply
  args: !RepeatFlagArg
    name: INT
  optional: true
- !Flag
  description: "[0.001%] percentage of restriction-enzyme (RE) genomic fragments\n\
    with more coverage to exclude (possible PCR artifact)."
  synonyms:
  - --over_represented
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: "[100000] to exclude large genomic RE fragments (probably resulting\n\
    from gaps in the reference genome)"
  synonyms:
  - --max_frag_size
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: "[50] to exclude small genomic RE fragments (smaller than sequenced\n\
    reads)"
  synonyms:
  - --min_frag_size
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: "[5] to exclude read-ends falling too close from RE site (pseudo-\n\
    dangling-ends)\n"
  synonyms:
  - --re_proximity
  args: !SimpleFlagArg
    name: NUM
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: tadbit filter [-h] [--force] [--resume] [--apply INT [INT ...]]\
  \ [-w PATH] [-C CPUS]\n                     [--noX] [--over_represented NUM] [--max_frag_size\
  \ NUM]\n                     [--min_frag_size NUM] [--re_proximity NUM] [--tmpdb\
  \ PATH]\n                     [--pathids INT [INT ...]] [--compress_input] [--format\
  \ {short,mid,long}]\n                     [--valid] [--clean] [--samtools PATH]\n\
  \nFilter parsed Hi-C reads and get valid pair of reads to work with\n\noptional\
  \ arguments:\n  -h, --help               show this help message and exit\n\nGeneral\
  \ options:\n  --force                  overwrite previously run job\n  --resume\
  \                 use filters of previously run job\n  -w PATH, --workdir PATH \
  \ path to working directory (generated with the tool tadbit mapper)\n  -C CPUS,\
  \ --cpus CPUS     [8] Maximum number of CPU cores available in the execution host.\
  \ If\n                           higher than 1, tasks with multi-threading capabilities\
  \ will enabled\n                           (if 0 all available) cores will be used\n\
  \  --noX                    no display server (X screen)\n  --tmpdb PATH       \
  \      if provided uses this directory to manipulate the database\n  --pathids INT\
  \ [INT ...]  Use as input data generated by a job under a given pathids. Use\n \
  \                          tadbit describe to find out which. To filter an intersected\
  \ file\n                           produced with tadbit map --fast_fragment only\
  \ one PATHid is needed\n                           otherwise one per read is needed,\
  \ first for read 1, second for read\n                           2.\n  --compress_input\
  \         Compress input mapped files when parsing is done. This is done in\n  \
  \                         background, while next MAP file is processed, or while\
  \ reads are\n                           sorted.\n  --samtools PATH          path\
  \ samtools binary\n\nStorage options:\n  --format {short,mid,long}\n           \
  \                [mid] for compression into pseudo-BAM format. Short contains only\n\
  \                           positions of reads mapped, mid everything but restriction\
  \ sites.\n  --valid                  stores only valid-pairs discards filtered out\
  \ reads.\n  --clean                  remove intermediate files. WARNING: together\
  \ with format \"short\" or\n                           valid options, this may results\
  \ in losing data\n\nFiltering options:\n  --apply INT [INT ...]    [[1, 2, 3, 4,\
  \ 6, 7, 9, 10]] Use filters to define a set os valid\n                         \
  \  pair of reads e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these\n                \
  \           numberscorrespond to: 1: self-circle, 2: dangling-end, 3: error, 4:\n\
  \                           extra dangling-end, 5: too close from RES, 6: too short,\
  \ 7: too\n                           large, 8: over-represented, 9: duplicated,\
  \ 10: random breaks\n  --over_represented NUM   [0.001%] percentage of restriction-enzyme\
  \ (RE) genomic fragments\n                           with more coverage to exclude\
  \ (possible PCR artifact).\n  --max_frag_size NUM      [100000] to exclude large\
  \ genomic RE fragments (probably resulting\n                           from gaps\
  \ in the reference genome)\n  --min_frag_size NUM      [50] to exclude small genomic\
  \ RE fragments (smaller than sequenced\n                           reads)\n  --re_proximity\
  \ NUM       [5] to exclude read-ends falling too close from RE site (pseudo-\n \
  \                          dangling-ends)\n"
generated_using:
- --help
