from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, Boolean, String, File

Instrain_Filter_Reads_V0_1_0 = CommandToolBuilder(tool="inStrain_filter_reads", base_command=["inStrain", "filter_reads"], inputs=[ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Location of folder to store read report(s) (default:\nNone)")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes to use (default: 6)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Make extra debugging output (default: False)")), ToolInput(tag="in_min_read_ani", input_type=Int(optional=True), prefix="--min_read_ani", doc=InputDocumentation(doc="Minimum percent identity of read pairs to consensus to\nuse the reads. Must be >, not >= (default: 0.95)")), ToolInput(tag="in_min_mapq", input_type=Int(optional=True), prefix="--min_mapq", doc=InputDocumentation(doc="Minimum mapq score of EITHER read in a pair to use\nthat pair. Must be >, not >= (default: -1)")), ToolInput(tag="in_max_insert_relative", input_type=Int(optional=True), prefix="--max_insert_relative", doc=InputDocumentation(doc="Multiplier to determine maximum insert size between\ntwo reads - default is to use 3x median insert size.\nMust be >, not >= (default: 3)")), ToolInput(tag="in_min_insert", input_type=Int(optional=True), prefix="--min_insert", doc=InputDocumentation(doc="Minimum insert size between two reads - default is 50\nbp. If two reads are 50bp each and overlap completely,\ntheir insert will be 50. Must be >, not >= (default:\n50)")), ToolInput(tag="in_pairing_filter", input_type=String(optional=True), prefix="--pairing_filter", doc=InputDocumentation(doc="How should paired reads be handled?\npaired_only = Only paired reads are retained\nnon_discordant = Keep all paired reads and singleton reads that map to a single scaffold\nall_reads = Keep all reads regardless of pairing status (NOT RECOMMENDED; See documentation for deatils)\n(default: paired_only)")), ToolInput(tag="in_priority_reads", input_type=File(optional=True), prefix="--priority_reads", doc=InputDocumentation(doc="The location of a list of reads that should be\nretained regardless of pairing status (for example\nlong reads or merged reads). This can be a .fastq file\nor text file with list of read names (will assume file\nis compressed if ends in .gz (default: None)")), ToolInput(tag="in_detailed_mapping_info", input_type=Boolean(optional=True), prefix="--detailed_mapping_info", doc=InputDocumentation(doc="Make a detailed read report indicating deatils about\neach individual mapped read (default: False)\n")), ToolInput(tag="in_bam", input_type=String(), position=0, doc=InputDocumentation(doc="Sorted .bam file")), ToolInput(tag="in_fast_a", input_type=String(), position=1, doc=InputDocumentation(doc="Fasta file the bam is mapped to"))], outputs=[], container="quay.io/biocontainers/instrain:1.5.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Instrain_Filter_Reads_V0_1_0().translate("wdl")

