from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Array, Int, File, Directory

Guessmylt_V0_1_0 = CommandToolBuilder(tool="GUESSmyLT", base_command=["GUESSmyLT"], inputs=[ToolInput(tag="in_organism", input_type=String(optional=True), prefix="--organism", doc=InputDocumentation(doc="Mandatory when no annotation provided. What organism\nare you dealing with? prokaryote or eukaryote.")), ToolInput(tag="in_reads", input_type=Array(t=String(), optional=True), prefix="--reads", doc=InputDocumentation(doc="One or two read files in .fastq or .fastq.gz format.\nFiles can be compressed or uncrompressed. Handles\ninterleaved read files and any known .fastq header\nformat.")), ToolInput(tag="in_subsample", input_type=Int(optional=True), prefix="--subsample", doc=InputDocumentation(doc="Number of subsampled reads that will be used for\nanalysis. Must be an even number.")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Mandatory when --mapped used or when no reads provided\n(--reads). Reference file in .fa/.fasta format.\nReference can be either transcriptome or genome.")), ToolInput(tag="in_mode", input_type=File(optional=True), prefix="--mode", doc=InputDocumentation(doc="Mode can be genome or transcriptome (default genome).\nIt defines how the reference fasta file will be\nhandled by BUSCO. This option is used when no\nannotation is provided (--annotation).")), ToolInput(tag="in_annotation", input_type=File(optional=True), prefix="--annotation", doc=InputDocumentation(doc="Annotation file in .gff format. Needs to contain\ngenes.")), ToolInput(tag="in_mapped", input_type=File(optional=True), prefix="--mapped", doc=InputDocumentation(doc="Mapped file in .bam format (Will be sorted). Reference\nthat reads have been mapped to has to be provided.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="The number of threads that can be used by GUESSmyLT.\nNeeds to be an integer. Defualt value is 2.")), ToolInput(tag="in_memory", input_type=Int(optional=True), prefix="--memory", doc=InputDocumentation(doc="Maximum memory that can be used by GUESSmyLT in GB.\nE.g. '10G'. Default value is 8G.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Full path to output directory. Default is working")), ToolInput(tag="in_directory_dot", input_type=Directory(), position=0, doc=InputDocumentation(doc="-n                    (Snakemake dryrun option) Allows to see the scheduling"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Full path to output directory. Default is working"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Guessmylt_V0_1_0().translate("wdl", allow_empty_container=True)

