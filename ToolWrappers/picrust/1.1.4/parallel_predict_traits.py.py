from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Parallel_Predict_Traits_Py_V0_1_0 = CommandToolBuilder(tool="parallel_predict_traits.py", base_command=["parallel_predict_traits.py"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print information during execution -- useful for\ndebugging [default: False]")), ToolInput(tag="in_calculate_accuracy_metrics", input_type=File(optional=True), prefix="--calculate_accuracy_metrics", doc=InputDocumentation(doc="if specified, calculate accuracy metrics (i.e. how\naccurate does PICRUSt expect its predictions to be?)\nand add to output file [default: False]")), ToolInput(tag="in_reconstructed_trait_table", input_type=String(optional=True), prefix="--reconstructed_trait_table", doc=InputDocumentation(doc="the input trait table describing reconstructed traits\n(from ancestral_state_reconstruction.py) in tab-\ndelimited format [default: none]")), ToolInput(tag="in_output_pre_calc_file_in_biom", input_type=File(optional=True), prefix="--output_precalc_file_in_biom", doc=InputDocumentation(doc="Instead of outputting the precalculated file in tab-\ndelimited format (with otu ids as row ids and traits\nas columns) output the data in biom format (with otu\nas SampleIds and traits as ObservationIds) [default:\nFalse]")), ToolInput(tag="in_reconstruction_confidence", input_type=String(optional=True), prefix="--reconstruction_confidence", doc=InputDocumentation(doc="the input trait table describing confidence intervals\nfor reconstructed traits (from\nancestral_state_reconstruction.py) in tab-delimited\nformat [default: none]")), ToolInput(tag="in_parallel_method", input_type=String(optional=True), prefix="--parallel_method", doc=InputDocumentation(doc="Method for parallelizaation. Valid choices are: sge,\ntorque, multithreaded [default: multithreaded]")), ToolInput(tag="in_num_jobs", input_type=Int(optional=True), prefix="--num_jobs", doc=InputDocumentation(doc="Number of jobs to be submitted. [default: 2]")), ToolInput(tag="in_delay", input_type=Int(optional=True), prefix="--delay", doc=InputDocumentation(doc="Number of seconds to pause between launching each job\n[default: 0]")), ToolInput(tag="in_already_calculated", input_type=File(optional=True), prefix="--already_calculated", doc=InputDocumentation(doc="Precalculated file that is missing some otu\npredictions. Output will contain predictions from this\nfile and the new predictions as well. [default: none]")), ToolInput(tag="in_observed_trait_table", input_type=String(optional=True), prefix="--observed_trait_table", doc=InputDocumentation(doc="the input trait table describing directly observed\ntraits (e.g. sequenced genomes) in tab-delimited\nformat [REQUIRED]")), ToolInput(tag="in_tree", input_type=String(optional=True), prefix="--tree", doc=InputDocumentation(doc="the full reference tree, in Newick format [REQUIRED]")), ToolInput(tag="in_output_trait_table", input_type=File(optional=True), prefix="--output_trait_table", doc=InputDocumentation(doc="the output filepath for trait predictions [REQUIRED]\n"))], outputs=[ToolOutput(tag="out_calculate_accuracy_metrics", output_type=File(optional=True), selector=InputSelector(input_to_select="in_calculate_accuracy_metrics", type_hint=File()), doc=OutputDocumentation(doc="if specified, calculate accuracy metrics (i.e. how\naccurate does PICRUSt expect its predictions to be?)\nand add to output file [default: False]")), ToolOutput(tag="out_output_pre_calc_file_in_biom", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_pre_calc_file_in_biom", type_hint=File()), doc=OutputDocumentation(doc="Instead of outputting the precalculated file in tab-\ndelimited format (with otu ids as row ids and traits\nas columns) output the data in biom format (with otu\nas SampleIds and traits as ObservationIds) [default:\nFalse]")), ToolOutput(tag="out_already_calculated", output_type=File(optional=True), selector=InputSelector(input_to_select="in_already_calculated", type_hint=File()), doc=OutputDocumentation(doc="Precalculated file that is missing some otu\npredictions. Output will contain predictions from this\nfile and the new predictions as well. [default: none]")), ToolOutput(tag="out_output_trait_table", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_trait_table", type_hint=File()), doc=OutputDocumentation(doc="the output filepath for trait predictions [REQUIRED]\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Parallel_Predict_Traits_Py_V0_1_0().translate("wdl", allow_empty_container=True)

