!Command
command:
- lefse-format_input.py
positional:
- !Positional
  description: "the input file, feature hierarchical level can be\nspecified with\
    \ | or . and those symbols must not be\npresent for other reasons in the input\
    \ file."
  position: 0
  name: INPUT_FILE
  optional: false
- !Positional
  description: the output file containing the data for LEfSe
  position: 1
  name: OUTPUT_FILE
  optional: false
- !Positional
  description: -c [1..n_feats]       set which feature use as class (default 1)
  position: 0
  name: columns
  optional: false
named:
- !Flag
  description: the formatted table in txt format
  synonyms:
  - --output_table
  args: !SimpleFlagArg
    name: OUTPUT_TABLE
  optional: true
- !Flag
  description: set whether the features are on rows (default) or on
  synonyms:
  - -f
  args: !ChoiceFlagArg
    choices: !!set
      c:
      r:
  optional: true
- !Flag
  description: "[1..n_feats]       set which feature use as subclass (default -1 meaning\n\
    no subclass)"
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "set the normalization value (default -1.0 meaning no\nnormalization)"
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: "[1..n_feats]       set which feature use as subject (default -1 meaning\n\
    no subject)"
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "set the policy to adopt with missin values: f removes\nthe features\
    \ with missing values, s removes samples\nwith missing values (default f)"
  synonyms:
  - -m
  args: !ChoiceFlagArg
    choices: !!set
      s:
      f:
  optional: true
- !Flag
  description: "set the minimum cardinality of each subclass\n(subclasses with low\
    \ cardinalities will be grouped\ntogether, if the cardinality is still low, no\
    \ pairwise\ncomparison will be performed with them)"
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: 'For biom input files: Set which feature use as class'
  synonyms:
  - -biom_c
  args: !SimpleFlagArg
    name: BIOM_CLASS
  optional: true
- !Flag
  description: "For biom input files: set which feature use as\nsubclass\n"
  synonyms:
  - -biom_s
  args: !SimpleFlagArg
    name: BIOM_SUBCLASS
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: lefse-format_input.py [-h] [--output_table OUTPUT_TABLE] [-f {c,r}]\n\
  \                             [-c [1..n_feats]] [-s [1..n_feats]] [-o float]\n \
  \                            [-u [1..n_feats]] [-m {f,s}] [-n int]\n           \
  \                  [-biom_c BIOM_CLASS] [-biom_s BIOM_SUBCLASS]\n              \
  \               INPUT_FILE OUTPUT_FILE\n\nLEfSe formatting modules\n\npositional\
  \ arguments:\n  INPUT_FILE            the input file, feature hierarchical level\
  \ can be\n                        specified with | or . and those symbols must not\
  \ be\n                        present for other reasons in the input file.\n  OUTPUT_FILE\
  \           the output file containing the data for LEfSe\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --output_table OUTPUT_TABLE\n\
  \                        the formatted table in txt format\n  -f {c,r}         \
  \     set whether the features are on rows (default) or on\n                   \
  \     columns\n  -c [1..n_feats]       set which feature use as class (default 1)\n\
  \  -s [1..n_feats]       set which feature use as subclass (default -1 meaning\n\
  \                        no subclass)\n  -o float              set the normalization\
  \ value (default -1.0 meaning no\n                        normalization)\n  -u [1..n_feats]\
  \       set which feature use as subject (default -1 meaning\n                 \
  \       no subject)\n  -m {f,s}              set the policy to adopt with missin\
  \ values: f removes\n                        the features with missing values, s\
  \ removes samples\n                        with missing values (default f)\n  -n\
  \ int                set the minimum cardinality of each subclass\n            \
  \            (subclasses with low cardinalities will be grouped\n              \
  \          together, if the cardinality is still low, no pairwise\n            \
  \            comparison will be performed with them)\n  -biom_c BIOM_CLASS    For\
  \ biom input files: Set which feature use as class\n  -biom_s BIOM_SUBCLASS\n  \
  \                      For biom input files: set which feature use as\n        \
  \                subclass\n"
generated_using:
- --help
