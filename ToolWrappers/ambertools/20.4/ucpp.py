from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File

Ucpp_V0_1_0 = CommandToolBuilder(tool="ucpp", base_command=["ucpp"], inputs=[ToolInput(tag="in_keep_comments_output", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="keep comments in output")), ToolInput(tag="in_keep_when_recognized", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="keep '#' when no cpp directive is recognized")), ToolInput(tag="in_do_emit_line_numbers", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="do not emit line numbers")), ToolInput(tag="in_lg", input_type=Boolean(optional=True), prefix="-lg", doc=InputDocumentation(doc="emit gcc-like line numbers")), ToolInput(tag="in_cc", input_type=Boolean(optional=True), prefix="-CC", doc=InputDocumentation(doc="disable C++-like comments")), ToolInput(tag="in_na", input_type=Boolean(optional=True), prefix="-na", doc=InputDocumentation(doc="handle (or not) assertions")), ToolInput(tag="in_disable_macros_extra", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="disable macros with extra arguments")), ToolInput(tag="in_understand_utf_", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="understand UTF-8 in source")), ToolInput(tag="in_enable_u_y", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="enable -a, -u and -Y")), ToolInput(tag="in_c_nine_zero", input_type=Boolean(optional=True), prefix="-c90", doc=InputDocumentation(doc="mimic C90 behaviour")), ToolInput(tag="in_disable_trigraph_support", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="disable trigraph support")), ToolInput(tag="in_wt", input_type=Boolean(optional=True), prefix="-wt", doc=InputDocumentation(doc="emit a final warning when trigaphs are encountered")), ToolInput(tag="in_wtt", input_type=Boolean(optional=True), prefix="-wtt", doc=InputDocumentation(doc="emit warnings for each trigaph encountered")), ToolInput(tag="in_wa", input_type=Boolean(optional=True), prefix="-wa", doc=InputDocumentation(doc="emit warnings that are usually useless")), ToolInput(tag="in_w_zero", input_type=Boolean(optional=True), prefix="-w0", doc=InputDocumentation(doc="disable standard warnings")), ToolInput(tag="in_add__before_standard_include_path", input_type=Directory(optional=True), prefix="-I", doc=InputDocumentation(doc="add 'directory' before the standard include path")), ToolInput(tag="in_add__after_standard_include_path", input_type=Directory(optional=True), prefix="-J", doc=InputDocumentation(doc="add 'directory' after the standard include path")), ToolInput(tag="in_zi", input_type=Boolean(optional=True), prefix="-zI", doc=InputDocumentation(doc="do not use the standard include path")), ToolInput(tag="in_emit_makefilelike_dependencies", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="emit Makefile-like dependencies instead of normal output")), ToolInput(tag="in_ma", input_type=Boolean(optional=True), prefix="-Ma", doc=InputDocumentation(doc="emit also dependancies for system files")), ToolInput(tag="in_store_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="store output in file")), ToolInput(tag="in_u_macro", input_type=Boolean(optional=True), prefix="-Umacro", doc=InputDocumentation(doc="undefine 'macro'")), ToolInput(tag="in_a_foo", input_type=Boolean(optional=True), prefix="-Afoo", doc=InputDocumentation(doc="(bar)      assert foo(bar)")), ToolInput(tag="in_b_foo", input_type=Boolean(optional=True), prefix="-Bfoo", doc=InputDocumentation(doc="(bar)      unassert foo(bar)")), ToolInput(tag="in_predefine_systemdependant_macros", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="predefine system-dependant macros")), ToolInput(tag="in_predefine_special_macros", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="do not predefine special macros")), ToolInput(tag="in_emit_defined_macros", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="emit defined macros")), ToolInput(tag="in_emit_assertions", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="emit assertions")), ToolInput(tag="in_print_version_number", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="print version number and settings")), ToolInput(tag="in_file", input_type=File(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_store_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_store_output_file", type_hint=File()), doc=OutputDocumentation(doc="store output in file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ucpp_V0_1_0().translate("wdl", allow_empty_container=True)

