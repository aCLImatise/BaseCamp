from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Float, String

Cpinutil_Py_V0_1_0 = CommandToolBuilder(tool="cpinutil.py", base_command=["cpinutil.py"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Enable verbose tracebacks to debug this program")), ToolInput(tag="in_old_format", input_type=File(optional=True), prefix="--old-format", doc=InputDocumentation(doc="Print output file in a format compatible with Amber 16\nand older versions")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output file. Defaults to standard output")), ToolInput(tag="in_output_prm_top", input_type=File(optional=True), prefix="--output-prmtop", doc=InputDocumentation(doc="For explicit solvent simulations, a custom set of\nradii are necessary to obtain reasonable results for\ncarboxylate pKas (e.g., AS4 and GL4 residues). If\nspecified, this file will be the prmtop compatible\nwith the reference energies in the printed cpin file.")), ToolInput(tag="in_topology_file_used", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="Topology file to be used in constant pH simulation")), ToolInput(tag="in_i_gb", input_type=Int(optional=True), prefix="-igb", doc=InputDocumentation(doc="Generalized Born model which you intend to use to\nevaluate dynamics (or protonation state swaps).\nDefault is 2.")), ToolInput(tag="in_int_diel", input_type=Float(optional=True), prefix="-intdiel", doc=InputDocumentation(doc="Internal dielectric constant to use in the evaluation\nof the GB potential. Default 1.0.")), ToolInput(tag="in_res_names", input_type=Boolean(optional=True), prefix="-resnames", doc=InputDocumentation(doc="[RES [RES ...]]\nResidue names to include in CPIN file")), ToolInput(tag="in_not_res_names", input_type=Boolean(optional=True), prefix="-notresnames", doc=InputDocumentation(doc="[RES [RES ...]]\nResidue names to exclude from CPIN file")), ToolInput(tag="in_res_nums", input_type=Boolean(optional=True), prefix="-resnums", doc=InputDocumentation(doc="[NUM [NUM ...]]\nResidue numbers to include in CPIN file")), ToolInput(tag="in_not_res_nums", input_type=Boolean(optional=True), prefix="-notresnums", doc=InputDocumentation(doc="[NUM [NUM ...]]\nResidue numbers to exclude from CPIN file")), ToolInput(tag="in_min_pka", input_type=File(optional=True), prefix="-minpKa", doc=InputDocumentation(doc="Minimum reference pKa to include in CPIN file")), ToolInput(tag="in_max_pka", input_type=File(optional=True), prefix="-maxpKa", doc=InputDocumentation(doc="Maximum reference pKa to include in CPIN file")), ToolInput(tag="in_states", input_type=Boolean(optional=True), prefix="-states", doc=InputDocumentation(doc="[NUM [NUM ...]]\nList of default states to assign to titratable\nresidues")), ToolInput(tag="in_system", input_type=String(optional=True), prefix="-system", doc=InputDocumentation(doc="Name of system to titrate. No effect on simulation.")), ToolInput(tag="in_describe", input_type=Boolean(optional=True), prefix="--describe", doc=InputDocumentation(doc="[RESNAME [RESNAME ...]]\nPrint out the details of given residues")), ToolInput(tag="in_list", input_type=Boolean(optional=True), prefix="--list", doc=InputDocumentation(doc="List all titratable residues"))], outputs=[ToolOutput(tag="out_old_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_old_format", type_hint=File()), doc=OutputDocumentation(doc="Print output file in a format compatible with Amber 16\nand older versions")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output file. Defaults to standard output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cpinutil_Py_V0_1_0().translate("wdl", allow_empty_container=True)

