!Command
command:
- gappa
- analyze
- placement-factorization
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --jplace-path
  description: ":PATH(existing)=[] ... REQUIRED\nList of jplace files or directories\
    \ to process. For directories, only files with the extension `.jplace[.gz]` are\
    \ processed."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --metadata-table-file
  description: ":FILE REQUIRED\nTabular char-separated input file."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --metadata-separator-char
  description: ":{comma,tab,space,semicolon}=comma\nSeparator char for tabular data."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --metadata-select-columns
  description: "Excludes: --metadata-ignore-columns\nSet the columns to select, by\
    \ their name in the first (header) line of the table. All others columns are ignored.\
    \ The options expects either a file with one column name per line, or an actual\
    \ list of column names separated by --metadata-separator-char"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --metadata-ignore-columns
  description: "Excludes: --metadata-select-columns\nSet the columns to ignore, by\
    \ their name in the first (header) line of the table. All others columns are selected.\
    \ The options expects either a file with one column name per line, or an actual\
    \ list of column names separated by --metadata-separator-char"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --point-mass
  description: Treat every pquery as a point mass concentrated on the highest-weight
    placement.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore-multiplicities
  description: Set the multiplicity of each pquery to 1.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --factors
  description: =5            Number of phylogenetic factors to compute.
  args: !SimpleFlagArg
    name: UINT
- !Flag
  optional: true
  synonyms:
  - --taxon-weight-tendency
  description: ":{geometric-mean,arithmetic-mean,median,none}=geometric-mean\nTendency\
    \ term to use for calculating taxon weights."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --taxon-weight-norm
  description: ":{manhattan,euclidean,maximum,aitchison,none}=euclidean\nNorm term\
    \ to use for calculating taxon weights."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --pseudo-count-summand-all
  description: "=0.65\nConstant that is added to all taxon masses to avoid zero counts."
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --pseudo-count-summand-zeros
  description: "=0\nConstant that is added to taxon masses that are zero, to avoid\
    \ zero counts."
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --out-dir
  description: =.            Directory to write files to
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --file-prefix
  description: File prefix for output files
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --file-suffix
  description: File suffix for output files
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --write-newick-tree
  description: If set, the tree is written to a Newick file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write-nexus-tree
  description: If set, the tree is written to a Nexus file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write-phyloxml-tree
  description: If set, the tree is written to a Phyloxml file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write-svg-tree
  description: If set, the tree is written to a Svg file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --svg-tree-shape
  description: ":{circular,rectangular}=circular\nShape of the tree."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --svg-tree-type
  description: ":{cladogram,phylogram}=cladogram\nType of the tree."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --svg-tree-stroke-width
  description: "=5\nSvg stroke width for the branches of the tree."
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --svg-tree-ladderize
  description: If set, the tree is ladderized.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --allow-file-overwriting
  description: Allow to overwrite existing output files instead of aborting the command.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: Produce more verbose output.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --threads
  description: =1            Number of threads to use for calculations.
  args: !SimpleFlagArg
    name: UINT
- !Flag
  optional: true
  synonyms:
  - --log-file
  description: Write all output to a log file, in addition to standard output to the
    terminal.
  args: !SimpleFlagArg
    name: TEXT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Print this help message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Perform Placement-Factorization on a set of samples.\nUsage: gappa analyze\
  \ placement-factorization [OPTIONS]\n\nInput:\n  --jplace-path TEXT:PATH(existing)=[]\
  \ ... REQUIRED\n                              List of jplace files or directories\
  \ to process. For directories, only files with the extension `.jplace[.gz]` are\
  \ processed.\n\n\nMetadata Table Input:\n  --metadata-table-file TEXT:FILE REQUIRED\n\
  \                              Tabular char-separated input file.\n  --metadata-separator-char\
  \ TEXT:{comma,tab,space,semicolon}=comma\n                              Separator\
  \ char for tabular data.\n  --metadata-select-columns TEXT Excludes: --metadata-ignore-columns\n\
  \                              Set the columns to select, by their name in the first\
  \ (header) line of the table. All others columns are ignored. The options expects\
  \ either a file with one column name per line, or an actual list of column names\
  \ separated by --metadata-separator-char\n  --metadata-ignore-columns TEXT Excludes:\
  \ --metadata-select-columns\n                              Set the columns to ignore,\
  \ by their name in the first (header) line of the table. All others columns are\
  \ selected. The options expects either a file with one column name per line, or\
  \ an actual list of column names separated by --metadata-separator-char\n\n\nSettings:\n\
  \  --point-mass                Treat every pquery as a point mass concentrated on\
  \ the highest-weight placement.\n  --ignore-multiplicities     Set the multiplicity\
  \ of each pquery to 1.\n  --factors UINT=5            Number of phylogenetic factors\
  \ to compute.\n  --taxon-weight-tendency TEXT:{geometric-mean,arithmetic-mean,median,none}=geometric-mean\n\
  \                              Tendency term to use for calculating taxon weights.\n\
  \  --taxon-weight-norm TEXT:{manhattan,euclidean,maximum,aitchison,none}=euclidean\n\
  \                              Norm term to use for calculating taxon weights.\n\
  \  --pseudo-count-summand-all FLOAT=0.65\n                              Constant\
  \ that is added to all taxon masses to avoid zero counts.\n  --pseudo-count-summand-zeros\
  \ FLOAT=0\n                              Constant that is added to taxon masses\
  \ that are zero, to avoid zero counts.\n\n\nOutput:\n  --out-dir TEXT=.        \
  \    Directory to write files to\n  --file-prefix TEXT          File prefix for\
  \ output files\n  --file-suffix TEXT          File suffix for output files\n\n\n\
  Tree Output:\n  --write-newick-tree         If set, the tree is written to a Newick\
  \ file.\n  --write-nexus-tree          If set, the tree is written to a Nexus file.\n\
  \  --write-phyloxml-tree       If set, the tree is written to a Phyloxml file.\n\
  \  --write-svg-tree            If set, the tree is written to a Svg file.\n\n\n\
  Svg Tree Output:\n  --svg-tree-shape TEXT:{circular,rectangular}=circular\n    \
  \                          Shape of the tree.\n  --svg-tree-type TEXT:{cladogram,phylogram}=cladogram\n\
  \                              Type of the tree.\n  --svg-tree-stroke-width FLOAT=5\n\
  \                              Svg stroke width for the branches of the tree.\n\
  \  --svg-tree-ladderize        If set, the tree is ladderized.\n\n\nGlobal Options:\n\
  \  --allow-file-overwriting    Allow to overwrite existing output files instead\
  \ of aborting the command.\n  --verbose                   Produce more verbose output.\n\
  \  --threads UINT=1            Number of threads to use for calculations.\n  --log-file\
  \ TEXT             Write all output to a log file, in addition to standard output\
  \ to the terminal.\n  --help                      Print this help message and exit.\n\
  \ngappa - a toolkit for analyzing and visualizing phylogenetic (placement) data\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/gappa:0.7.1--he513fc3_0
