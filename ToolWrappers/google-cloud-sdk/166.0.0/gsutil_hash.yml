!Command
command:
- gsutil
- hash
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -c
  description: Calculate a CRC32c hash for the file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: Calculate a MD5 hash for the file.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: Output hashes in hex format. By default, gsutil uses base64.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "NAME\n  hash - Calculate file hashes\n\n\nSYNOPSIS\n\n  gsutil hash [-c]\
  \ [-h] [-m] filename...\n\n\n\nDESCRIPTION\n  The hash command calculates hashes\
  \ on a local file that can be used to compare\n  with gsutil ls -L output. If a\
  \ specific hash option is not provided, this\n  command calculates all gsutil-supported\
  \ hashes for the file.\n\n  Note that gsutil automatically performs hash validation\
  \ when uploading or\n  downloading files, so this command is only needed if you\
  \ want to write a\n  script that separately checks the hash for some reason.\n\n\
  \  If you calculate a CRC32c hash for the file without a precompiled crcmod\n  installation,\
  \ hashing will be very slow. See \"gsutil help crcmod\" for details.\n\nOPTIONS\n\
  \  -c          Calculate a CRC32c hash for the file.\n\n  -h          Output hashes\
  \ in hex format. By default, gsutil uses base64.\n\n  -m          Calculate a MD5\
  \ hash for the file.\n"
generated_using:
- --help
docker_image:
