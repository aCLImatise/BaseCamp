!Command
command:
- gsutil
- notification
positional:
- !Positional
  optional: false
  position: 0
  name: generated.
  description: The optional token parameter can be used to validate notifications
    events.
named:
- !Flag
  optional: true
  synonyms:
  - -e
  description: "Specify an event type filter for this notification config. Cloud\n\
    Storage will only send notifications of this type. You may specify\nthis parameter\
    \ multiple times to allow multiple event types. If not\nspecified, Cloud Storage\
    \ will send notifications for all event\ntypes. The valid types are:\nOBJECT_FINALIZE\
    \ - An object has been created.\nOBJECT_METADATA_UPDATE - The metadata of an object\
    \ has changed.\nOBJECT_DELETE - An object has been permanently deleted.\nOBJECT_ARCHIVE\
    \ - A live Cloud Storage object has been archived."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: "Specifies the payload format of notification messages. Must be\neither\
    \ \"json\" for a payload matches the object metadata for the\nJSON API, or \"\
    none\" to specify no payload at all. In either case,\nnotification details are\
    \ available in the message attributes."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: "Specifies a key:value attribute that will be appended to the set\n\
    of attributes sent to Cloud Pub/Sub for all events associated with\nthis notification\
    \ config. You may specify this parameter multiple\ntimes to set multiple attributes."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  description: "Specifies a prefix path filter for this notification config. Cloud\n\
    Storage will only send notifications for objects in this bucket\nwhose names begin\
    \ with the specified prefix."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: "Skips creation and permission assignment of the Cloud Pub/Sub topic.\n\
    This is useful if the caller does not have permission to access\nthe topic in\
    \ question, or if the topic already exists and has the\nappropriate publish permission\
    \ assigned."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: "The Cloud Pub/Sub topic to which notifications should be sent. If\n\
    not specified, this command will choose a topic whose project is\nyour default\
    \ project and whose ID is the same as the Cloud Storage\nbucket name."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n  notification - Configure object change notification\n\n\nSYNOPSIS\n\
  \  gsutil notification create -f (json|none) [-p prefix] [-t topic] \\\n      [-m\
  \ key:value]... [-e eventType]... bucket_url\n  gsutil notification delete (notificationConfigName|bucket_url)...\n\
  \  gsutil notification list bucket_url...\n\n  gsutil notification watchbucket [-i\
  \ id] [-t token] app_url bucket_url\n  gsutil notification stopchannel channel_id\
  \ resource_id\n\n\nDESCRIPTION\n  The notification command is used to configure\
  \ Google Cloud Storage support for\n  sending notifications to Cloud Pub/Sub as\
  \ well as to configure the object\n  change notification feature.\n\nCLOUD PUB/SUB\n\
  \  The \"create\", \"list\", and \"delete\" sub-commands deal with configuring Cloud\n\
  \  Storage integration with Google Cloud Pub/Sub.\n\nCREATE\n  The create sub-command\
  \ creates a notification config on a bucket, establishing\n  a flow of event notifications\
  \ from Cloud Storage to a Cloud Pub/Sub topic. As\n  part of creating this flow,\
  \ the create command also verifies that the\n  destination Cloud Pub/Sub topic exists,\
  \ creating it if necessary, and verifies\n  that the Cloud Storage bucket has permission\
  \ to publish events to that topic,\n  granting the permission if necessary.\n\n\
  \  If a destination Cloud Pub/Sub topic is not specified with the -t flag, Cloud\n\
  \  Storage will by default choose a topic name in the default project whose ID is\n\
  \  the same the bucket name. For example, if the default project ID specified is\n\
  \  'default-project' and the bucket being configured is gs://example-bucket, the\n\
  \  create command will use the Cloud Pub/Sub topic\n  \"projects/default-project/topics/example-bucket\"\
  .\n\n  In order to enable notifications, a special Cloud Storage service account\n\
  \  unique to each project must have the IAM permission \"projects.topics.publish\"\
  .\n  This command will check to see if that permission exists and, if not, will\n\
  \  attempt to grant it.\n\n  You can create multiple notification configurations\
  \ for a bucket, but their\n  triggers cannot overlap such that a single event could\
  \ send multiple\n  notifications. Attempting to create a notification configuration\
  \ that\n  overlaps with an exisitng notification configuration results in an error.\n\
  \nCREATE EXAMPLES\n  Begin sending notifications of all changes to the bucket example-bucket\n\
  \  to the Cloud Pub/Sub topic projects/default-project/topics/example-bucket:\n\n\
  \    gsutil notification create -f json gs://example-bucket\n\n  The same as above,\
  \ but specifies the destination topic ID 'files-to-process'\n  in the default project:\n\
  \n    gsutil notification create -f json \\\n      -t files-to-process gs://example-bucket\n\
  \n  The same as above, but specifies a Cloud Pub/Sub topic belonging to the\n  specific\
  \ cloud project 'example-project':\n\n    gsutil notification create -f json \\\n\
  \      -t projects/example-project/topics/files-to-process gs://example-bucket\n\
  \n  Create a notification config that will only send an event when a new object\n\
  \  has been created:\n\n    gsutil notification create -f json -t OBJECT_FINALIZE\
  \ gs://example-bucket\n\n  Create a topic and notification config that will only\
  \ send an event when\n  an object beginning with \"photos/\" is affected:\n\n  \
  \  gsutil notification create -p photos/ gs://example-bucket\n\n  List all of the\
  \ notificationConfigs in bucket example-bucket:\n\n    gsutil notification list\
  \ gs://example-bucket\n\n  Delete all notitificationConfigs for bucket example-bucket:\n\
  \n    gsutil notification delete gs://example-bucket\n\n  Delete one specific notificationConfig\
  \ for bucket example-bucket:\n\n    gsutil notification delete \\\n      projects/_/buckets/example-bucket/notificationConfigs/1\n\
  \nOPTIONS\n  The create sub-command has the following options\n\n  -e        Specify\
  \ an event type filter for this notification config. Cloud\n            Storage\
  \ will only send notifications of this type. You may specify\n            this parameter\
  \ multiple times to allow multiple event types. If not\n            specified, Cloud\
  \ Storage will send notifications for all event\n            types. The valid types\
  \ are:\n\n              OBJECT_FINALIZE - An object has been created.\n        \
  \      OBJECT_METADATA_UPDATE - The metadata of an object has changed.\n       \
  \       OBJECT_DELETE - An object has been permanently deleted.\n              OBJECT_ARCHIVE\
  \ - A live Cloud Storage object has been archived.\n\n  -f        Specifies the\
  \ payload format of notification messages. Must be\n            either \"json\"\
  \ for a payload matches the object metadata for the\n            JSON API, or \"\
  none\" to specify no payload at all. In either case,\n            notification details\
  \ are available in the message attributes.\n\n  -m        Specifies a key:value\
  \ attribute that will be appended to the set\n            of attributes sent to\
  \ Cloud Pub/Sub for all events associated with\n            this notification config.\
  \ You may specify this parameter multiple\n            times to set multiple attributes.\n\
  \n  -p        Specifies a prefix path filter for this notification config. Cloud\n\
  \            Storage will only send notifications for objects in this bucket\n \
  \           whose names begin with the specified prefix.\n\n  -s        Skips creation\
  \ and permission assignment of the Cloud Pub/Sub topic.\n            This is useful\
  \ if the caller does not have permission to access\n            the topic in question,\
  \ or if the topic already exists and has the\n            appropriate publish permission\
  \ assigned.\n\n  -t        The Cloud Pub/Sub topic to which notifications should\
  \ be sent. If\n            not specified, this command will choose a topic whose\
  \ project is\n            your default project and whose ID is the same as the Cloud\
  \ Storage\n            bucket name.\n\nLIST\n  The list sub-command provides a list\
  \ of notification configs belonging to a\n  given bucket. The listed name of each\
  \ notification config can be used with\n  the delete sub-command to delete that\
  \ specific notification config.\n\n  No object change notifications will be listed.\
  \ Only Cloud Pub/Sub notification\n  subscription configs will be listed.\n\nLIST\
  \ EXAMPLES\n  Fetch the list of notification configs for the bucket example-bucket:\n\
  \n    gsutil notification list gs://example-bucket\n\n  Fetch the notification configs\
  \ in all buckets matching a wildcard:\n\n    gsutil notification list gs://example-*\n\
  \n  Fetch all of the notification configs for buckets in the default project:\n\n\
  \    gsutil notification list gs://*\n\nDELETE\n  The delete sub-command deletes\
  \ notification configs from a bucket. If a\n  notification config name is passed\
  \ as a parameter, that notification config\n  alone will be deleted. If a bucket\
  \ name is passed, all notification configs\n  associated with that bucket will be\
  \ deleted.\n\n  Cloud Pub/Sub topics associated with this notification config will\
  \ not be\n  deleted by this command. Those must be deleted separately, for example\
  \ with\n  the gcloud command `gcloud beta pubsub topics delete`.\n\n  Object Change\
  \ Notification subscriptions cannot be deleted with this command.\n  For that, see\
  \ the command `gsutil notification stopchannel`.\n\nDELETE EXAMPLES\n  Delete a\
  \ single notification config (with ID 3) in the bucket example-bucket:\n\n    gsutil\
  \ notification delete projects/_/buckets/example-bucket/notificationConfigs/3\n\n\
  \  Delete all notification configs in the bucket example-bucket:\n\n    gsutil notification\
  \ delete gs://example-bucket\n\nOBJECT CHANGE NOTIFICATIONS\n  For more information\
  \ on the Object Change Notification feature, please see:\n  https://cloud.google.com/storage/docs/object-change-notification\n\
  \n  The \"watchbucket\" and \"stopchannel\" sub-commands enable and disable Object\n\
  \  Change Notifications.\n\nWATCHBUCKET\n  The watchbucket sub-command can be used\
  \ to watch a bucket for object changes.\n  A service account must be used when running\
  \ this command.\n\n  The app_url parameter must be an HTTPS URL to an application\
  \ that will be\n  notified of changes to any object in the bucket. The URL endpoint\
  \ must be\n  a verified domain on your project. See\n  `Notification Authorization\
  \ <https://cloud.google.com/storage/docs/object-change-notification#_Authorization>`_\n\
  \  for details.\n\n  The optional id parameter can be used to assign a unique identifier\
  \ to the\n  created notification channel. If not provided, a random UUID string\
  \ will be\n  generated.\n\n  The optional token parameter can be used to validate\
  \ notifications events.\n  To do this, set this custom token and store it to later\
  \ verify that\n  notification events contain the client token you expect.\n\nWATCHBUCKET\
  \ EXAMPLES\n  Watch the bucket example-bucket for changes and send notifications\
  \ to an\n  application server running at example.com:\n\n    gsutil notification\
  \ watchbucket https://example.com/notify \\\n      gs://example-bucket\n\n  Assign\
  \ identifier my-channel-id to the created notification channel:\n\n    gsutil notification\
  \ watchbucket -i my-channel-id \\\n      https://example.com/notify gs://example-bucket\n\
  \n  Set a custom client token that will be included with each notification event:\n\
  \n    gsutil notification watchbucket -t my-client-token \\\n      https://example.com/notify\
  \ gs://example-bucket\n\nSTOPCHANNEL\n  The stopchannel sub-command can be used\
  \ to stop sending change events to a\n  notification channel.\n\n  The channel_id\
  \ and resource_id parameters should match the values from the\n  response of a bucket\
  \ watch request.\n\nSTOPCHANNEL EXAMPLES\n  Stop the notification event channel\
  \ with channel identifier channel1 and\n  resource identifier SoGqan08XDIFWr1Fv_nGpRJBHh8:\n\
  \n    gsutil notification stopchannel channel1 SoGqan08XDIFWr1Fv_nGpRJBHh8\n\nNOTIFICATIONS\
  \ AND PARALLEL COMPOSITE UPLOADS\n  By default, gsutil enables parallel composite\
  \ uploads for large files (see\n  \"gsutil help cp\"), which means that an upload\
  \ of a large object can result\n  in multiple temporary component objects being\
  \ uploaded before the actual\n  intended object is created. Any subscriber to notifications\
  \ for this bucket\n  will then see a notification for each of these components being\
  \ created and\n  deleted. If this is a concern for you, note that parallel composite\
  \ uploads\n  can be disabled by setting \"parallel_composite_upload_threshold =\
  \ 0\" in your\n  boto config file.\n"
generated_using:
- --help
docker_image:
