from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Array, File

Hydra_Ext_V0_1_0 = CommandToolBuilder(tool="hydra_ext", base_command=["hydra-ext"], inputs=[ToolInput(tag="in_config", input_type=Boolean(optional=True), prefix="-config", doc=InputDocumentation(doc="Configuration file.\nCol 1. Sample Id (string)\nCol 2. Mapping file (path/file)\nCol 3. Expected insert size (integer)\nCol 4. Variance (integer)\nCol 5. Num. variances (integer)")), ToolInput(tag="in_out", input_type=Boolean(optional=True), prefix="-out", doc=InputDocumentation(doc="Stub for output files.")), ToolInput(tag="in_mem", input_type=Boolean(optional=True), prefix="-mem", doc=InputDocumentation(doc="Maximum memory to use. Integer in Gb, default is 8 for 8Gb.")), ToolInput(tag="in_number_use_default", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads to use. Integer, default is 1.")), ToolInput(tag="in_ms", input_type=Boolean(optional=True), prefix="-ms", doc=InputDocumentation(doc="Minimum number of pairs required for variant to be called.\nDefault: 2")), ToolInput(tag="in_lnk", input_type=Boolean(optional=True), prefix="-lnk", doc=InputDocumentation(doc="Maximum intrachromosomal distance allowed before a\nvariant is considered to be between unlinked DNA segments.\nDefault: 1000000 (i.e., 1Mb)")), ToolInput(tag="in_is", input_type=Boolean(optional=True), prefix="-is", doc=InputDocumentation(doc="Choose most likely variant (when a tie exists) based on\nleast edit distance rather than size.")), ToolInput(tag="in_li", input_type=Boolean(optional=True), prefix="-li", doc=InputDocumentation(doc="Combine +/+ and -/- mappings when screening for inversions.\nThis increases sensitivity in low coverage.")), ToolInput(tag="in_use", input_type=Boolean(optional=True), prefix="-use", doc=InputDocumentation(doc="Which mappings should be used for each pair?\n'best'  Use the mappings with the least edit distance for each pair.\nDefault.\n'all'   Use all mappings for each pair.\n<INT>   Use the best plus those within <INT> edit distance of best.")), ToolInput(tag="in_max_mappings", input_type=Boolean(optional=True), prefix="-maxMappings", doc=InputDocumentation(doc="Maximum number of mappings in a cluster before Hydra will 'punt'.")), ToolInput(tag="in_crumbs", input_type=Boolean(optional=True), prefix="--crumbs", doc=InputDocumentation(doc="Hydra will leave temporary files.")), ToolInput(tag="in_mno", input_type=String(optional=True), prefix="-mno", doc=InputDocumentation(doc="")), ToolInput(tag="in_mld", input_type=String(optional=True), prefix="-mld", doc=InputDocumentation(doc="")), ToolInput(tag="in_in", input_type=Array(t=File(), optional=True), prefix="-in", doc=InputDocumentation(doc="")), ToolInput(tag="in_hydra", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/hydra-multi:0.5.4--py27h8b12597_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hydra_Ext_V0_1_0().translate("wdl")

