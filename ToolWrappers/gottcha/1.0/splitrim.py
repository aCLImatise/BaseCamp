from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Splitrim_V0_1_0 = CommandToolBuilder(tool="splitrim", base_command=["splitrim"], inputs=[ToolInput(tag="in_in_file", input_type=Boolean(optional=True), prefix="--inFile", doc=InputDocumentation(doc="=        string   Name of the FASTQ file containing all the single-end reads")), ToolInput(tag="in_min_l", input_type=Boolean(optional=True), prefix="--minL", doc=InputDocumentation(doc="=          int      Minimum length for a trimmed read to be considered valid [default: 0]")), ToolInput(tag="in_recycle", input_type=Boolean(optional=True), prefix="--recycle", doc=InputDocumentation(doc="bool     When --fixL is specified and a read length is not a multiple of 'fixL', this option will append any\nremaining bases (up to the maximum fixL-1 bases) to the last fragment of length 'fixL' [default: false]")), ToolInput(tag="in_ascii", input_type=Boolean(optional=True), prefix="--ascii", doc=InputDocumentation(doc="=         int      ASCII encoding (33 or 64) [default: 33]")), ToolInput(tag="in_min_q", input_type=Boolean(optional=True), prefix="--minQ", doc=InputDocumentation(doc="=          int      Minimum quality for a read to be considered valid (0-41) [default: 10]")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="=   uint     <disabled> no. of threads to use [1]")), ToolInput(tag="in_out_path", input_type=Boolean(optional=True), prefix="--outPath", doc=InputDocumentation(doc="=       string   Location output files will be placed")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="=        string   Prefix of output files")), ToolInput(tag="in_out_encoding", input_type=Boolean(optional=True), prefix="--outEncoding", doc=InputDocumentation(doc="=   int      ASCII encoding of the output (33 or 64) [default: mirrors input]")), ToolInput(tag="in_stats", input_type=Boolean(optional=True), prefix="--stats", doc=InputDocumentation(doc="=         string   Basic read statistics output [default: uses basename from --inFile]")), ToolInput(tag="in_histo", input_type=Boolean(optional=True), prefix="--histo", doc=InputDocumentation(doc="=         string   Post-trim read length histogram [default: uses basename from --inFile]")), ToolInput(tag="in_sort_lena_sc", input_type=Boolean(optional=True), prefix="--sortLenAsc", doc=InputDocumentation(doc="bool     Sort read length frequency table in ascending order [default: unordered]")), ToolInput(tag="in_sort_len_desc", input_type=Boolean(optional=True), prefix="--sortLenDesc", doc=InputDocumentation(doc="bool     Sort read length frequency table in descending order [default: unordered]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="bool     verbosity level")), ToolInput(tag="in_input", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_others", input_type=String(optional=True), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Splitrim_V0_1_0().translate("wdl", allow_empty_container=True)

