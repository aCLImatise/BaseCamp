from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Mosaikbuild_V0_1_0 = CommandToolBuilder(tool="MosaikBuild", base_command=["MosaikBuild"], inputs=[ToolInput(tag="in_fr", input_type=File(optional=True), prefix="-fr", doc=InputDocumentation(doc="the FASTA reference sequences file")), ToolInput(tag="in_ga", input_type=Int(optional=True), prefix="-ga", doc=InputDocumentation(doc="the genome assembly ID. e.g. HG18")), ToolInput(tag="in_oa", input_type=File(optional=True), prefix="-oa", doc=InputDocumentation(doc="the output reference file")), ToolInput(tag="in_sn", input_type=String(optional=True), prefix="-sn", doc=InputDocumentation(doc="the species name. e.g. 'Homo sapiens'")), ToolInput(tag="in_uri", input_type=String(optional=True), prefix="-uri", doc=InputDocumentation(doc="the URI (e.g. URL or URN)")), ToolInput(tag="in_fq", input_type=File(optional=True), prefix="-fq", doc=InputDocumentation(doc="the FASTA base qualities file")), ToolInput(tag="in_fr_two", input_type=File(optional=True), prefix="-fr2", doc=InputDocumentation(doc="the FASTA 2nd mate")), ToolInput(tag="in_fq_two", input_type=File(optional=True), prefix="-fq2", doc=InputDocumentation(doc="the FASTA BQ 2nd mate")), ToolInput(tag="in_assign_qual", input_type=String(optional=True), prefix="-assignQual", doc=InputDocumentation(doc="assigns a quality for each base")), ToolInput(tag="in_q_two", input_type=File(optional=True), prefix="-q2", doc=InputDocumentation(doc="the FASTQ 2nd mate")), ToolInput(tag="in_il", input_type=Int(optional=True), prefix="-il", doc=InputDocumentation(doc="the desired lanes e.g 5678 for lanes 5-8")), ToolInput(tag="in_split", input_type=Boolean(optional=True), prefix="-split", doc=InputDocumentation(doc="splits the read into two mates")), ToolInput(tag="in_ds", input_type=String(optional=True), prefix="-ds", doc=InputDocumentation(doc="read group description")), ToolInput(tag="in_id", input_type=Int(optional=True), prefix="-id", doc=InputDocumentation(doc="read group ID. e.g. SRR009060")), ToolInput(tag="in_ln", input_type=Int(optional=True), prefix="-ln", doc=InputDocumentation(doc="library name. e.g. g1k-sc-NA18944-JPT-1")), ToolInput(tag="in_mfl", input_type=Int(optional=True), prefix="-mfl", doc=InputDocumentation(doc="median fragment length. e.g. 150")), ToolInput(tag="in_pu", input_type=Boolean(optional=True), prefix="-pu", doc=InputDocumentation(doc="<run name & lane>             the platform unit. e.g. IL12_490_5")), ToolInput(tag="in_sam", input_type=Int(optional=True), prefix="-sam", doc=InputDocumentation(doc="sample name. e.g. NA12878")), ToolInput(tag="in_st", input_type=Int(optional=True), prefix="-st", doc=InputDocumentation(doc="sets the sequencing technology: '454',\n'helicos', 'illumina', 'illumina_long',\n'sanger' or 'solid'")), ToolInput(tag="in_tp", input_type=Boolean(optional=True), prefix="-tp", doc=InputDocumentation(doc="<# of beginning bases>        trims the first # of bases")), ToolInput(tag="in_ts", input_type=Boolean(optional=True), prefix="-ts", doc=InputDocumentation(doc="<# of end bases>              trims the last # of bases"))], outputs=[ToolOutput(tag="out_oa", output_type=File(optional=True), selector=InputSelector(input_to_select="in_oa", type_hint=File()), doc=OutputDocumentation(doc="the output reference file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mosaikbuild_V0_1_0().translate("wdl", allow_empty_container=True)

