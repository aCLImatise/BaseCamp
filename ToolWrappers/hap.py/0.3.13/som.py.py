from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String, Float

Som_Py_V0_1_0 = CommandToolBuilder(tool="som.py", base_command=["som.py"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output file prefix for statistics and feature table\n(when selected)")), ToolInput(tag="in_location", input_type=Int(optional=True), prefix="--location", doc=InputDocumentation(doc="Location for bcftools view (e.g. chr1)")), ToolInput(tag="in_restrict_regions", input_type=File(optional=True), prefix="--restrict-regions", doc=InputDocumentation(doc="Restrict analysis to given (sparse) regions (using -R\nin bcftools).")), ToolInput(tag="in_target_regions", input_type=File(optional=True), prefix="--target-regions", doc=InputDocumentation(doc="Restrict analysis to given (dense) regions (using -T\nin bcftools).")), ToolInput(tag="in_false_positives", input_type=File(optional=True), prefix="--false-positives", doc=InputDocumentation(doc="False-positive region bed file to distinguish UNK from\nFP")), ToolInput(tag="in_ambiguous", input_type=File(optional=True), prefix="--ambiguous", doc=InputDocumentation(doc="Ambiguous region bed file(s) to distinguish from FP\n(e.g. variant only observed in some replicates)")), ToolInput(tag="in_ambi_fp", input_type=Boolean(optional=True), prefix="--ambi-fp", doc=InputDocumentation(doc="Use FP calls from ambiguous region files also.")), ToolInput(tag="in_no_ambi_fp", input_type=Boolean(optional=True), prefix="--no-ambi-fp", doc=InputDocumentation(doc="Do not use FP calls from ambiguous region files also.")), ToolInput(tag="in_count_unk", input_type=Boolean(optional=True), prefix="--count-unk", doc=InputDocumentation(doc="Assume the truth set covers the whole genome and only\ncount FPs in regions specified by the truth VCF or\nambiguous/false-positive regions.")), ToolInput(tag="in_no_count_unk", input_type=Boolean(optional=True), prefix="--no-count-unk", doc=InputDocumentation(doc="Do not use FP calls from ambiguous region files also.")), ToolInput(tag="in_explain_ambiguous", input_type=Boolean(optional=True), prefix="--explain_ambiguous", doc=InputDocumentation(doc="print a table giving the number of ambiguous events\nper category")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Specify a reference file.")), ToolInput(tag="in_scratch_prefix", input_type=File(optional=True), prefix="--scratch-prefix", doc=InputDocumentation(doc="Filename prefix for scratch report output.")), ToolInput(tag="in_keep_scratch", input_type=File(optional=True), prefix="--keep-scratch", doc=InputDocumentation(doc="Filename prefix for scratch report output.")), ToolInput(tag="in_continue", input_type=Boolean(optional=True), prefix="--continue", doc=InputDocumentation(doc="Continue from scratch space (i.e. use VCFs in there if\nthey already exist).")), ToolInput(tag="in_include_non_pass", input_type=Boolean(optional=True), prefix="--include-nonpass", doc=InputDocumentation(doc="Use to include failing variants in comparison.")), ToolInput(tag="in_feature_table", input_type=String(optional=True), prefix="--feature-table", doc=InputDocumentation(doc="Select a feature table to output.")), ToolInput(tag="in_happy_stats", input_type=Boolean(optional=True), prefix="--happy-stats", doc=InputDocumentation(doc="Generate summary.csv.")), ToolInput(tag="in_bam", input_type=String(optional=True), prefix="--bam", doc=InputDocumentation(doc="pass one or more BAM files for feature table")), ToolInput(tag="in_normalize_query", input_type=Boolean(optional=True), prefix="--normalize-query", doc=InputDocumentation(doc="Enable running of bcftools norm on the query file.")), ToolInput(tag="in_normalize_all", input_type=Boolean(optional=True), prefix="--normalize-all", doc=InputDocumentation(doc="Enable running of bcftools norm on both truth and\nquery file.")), ToolInput(tag="in_add_chr_prefix", input_type=Boolean(optional=True), prefix="--fixchr-truth", doc=InputDocumentation(doc="Add chr prefix to truth file (default: true).")), ToolInput(tag="in_add_chr_true", input_type=Boolean(optional=True), prefix="--fixchr-query", doc=InputDocumentation(doc="Add chr prefix to query file (default: true).")), ToolInput(tag="in_same__fixchrtruth", input_type=Boolean(optional=True), prefix="--fix-chr-truth", doc=InputDocumentation(doc="Same as --fixchr-truth.")), ToolInput(tag="in_same__fixchrquery", input_type=Boolean(optional=True), prefix="--fix-chr-query", doc=InputDocumentation(doc="Same as --fixchr-query.")), ToolInput(tag="in_no_fix_chr_truth", input_type=Boolean(optional=True), prefix="--no-fixchr-truth", doc=InputDocumentation(doc="Disable chr replacement for truth (default: false).")), ToolInput(tag="in_no_fix_chr_query", input_type=Boolean(optional=True), prefix="--no-fixchr-query", doc=InputDocumentation(doc="Add chr prefix to query file (default: false).")), ToolInput(tag="in_no_order_check", input_type=Boolean(optional=True), prefix="--no-order-check", doc=InputDocumentation(doc="Disable checking the order of TP features (dev\nfeature).")), ToolInput(tag="in_roc", input_type=String(optional=True), prefix="--roc", doc=InputDocumentation(doc="Create a ROC-style table. This is caller specific -\nthis will override the --feature-table switch!")), ToolInput(tag="in_bin_afs", input_type=Boolean(optional=True), prefix="--bin-afs", doc=InputDocumentation(doc="Stratify into different AF buckets. This needs to have\nfeatures available for getting the AF both in truth\nand query variants.")), ToolInput(tag="in_af_binsize", input_type=Int(optional=True), prefix="--af-binsize", doc=InputDocumentation(doc="Bin size for AF binning (should be < 1). Multiple bin\nsizes can be specified using a comma, e.g.\n0.1,0.2,0.5,0.2 will split at 0.1, 0.3, 0.8 and 1.0.")), ToolInput(tag="in_af_truth", input_type=String(optional=True), prefix="--af-truth", doc=InputDocumentation(doc="Feature name to use for retrieving AF for truth\nvariants (TP and FN)")), ToolInput(tag="in_af_query", input_type=String(optional=True), prefix="--af-query", doc=InputDocumentation(doc="Feature name to use for retrieving AF for query\nvariants (FP/UNK/AMBI)")), ToolInput(tag="in_count_filtered_fn", input_type=Boolean(optional=True), prefix="--count-filtered-fn", doc=InputDocumentation(doc="Count filtered vs. absent FN numbers. This requires\nthe -P switch (to use all variants) and either the\n--feature-table or --roc switch.")), ToolInput(tag="in_fp_region_size", input_type=Int(optional=True), prefix="--fp-region-size", doc=InputDocumentation(doc="How to obtain the normalisation constant for FP rate.\nBy default, this will use the FP region bed file size\nwhen using --count-unk and the size of all reference\ncontigs that overlap with the location specified in -l\notherwise. This can be overridden with: 1) a number of\nnucleotides, or 2) 'auto' to use the lengths of all\ncontigs that have calls. The resulting value is used\nas fp.region.size.")), ToolInput(tag="in_ci_level", input_type=Float(optional=True), prefix="--ci-level", doc=InputDocumentation(doc="Confidence level for precision/recall confidence\nintervals (default: 0.95)")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Write logging information into file rather than to")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Set logging level to output errors only.")), ToolInput(tag="in_truth", input_type=String(), position=0, doc=InputDocumentation(doc="Truth VCF file")), ToolInput(tag="in_query", input_type=String(), position=1, doc=InputDocumentation(doc="Query VCF file")), ToolInput(tag="in_extraction", input_type=String(), position=0, doc=InputDocumentation(doc="--normalize-truth     Enable running of bcftools norm on the truth file.")), ToolInput(tag="in_stderr", input_type=String(), position=1, doc=InputDocumentation(doc="--verbose             Raise logging level from warning to info."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output file prefix for statistics and feature table\n(when selected)")), ToolOutput(tag="out_scratch_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_scratch_prefix", type_hint=File()), doc=OutputDocumentation(doc="Filename prefix for scratch report output.")), ToolOutput(tag="out_keep_scratch", output_type=File(optional=True), selector=InputSelector(input_to_select="in_keep_scratch", type_hint=File()), doc=OutputDocumentation(doc="Filename prefix for scratch report output."))], container="quay.io/biocontainers/hap.py:0.3.13--py27h5c5a3ab_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Som_Py_V0_1_0().translate("wdl")

