from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int

Qfy_Py_V0_1_0 = CommandToolBuilder(tool="qfy.py", base_command=["qfy.py"], inputs=[ToolInput(tag="in_adjust_conf_regions", input_type=String(optional=True), prefix="--adjust-conf-regions", doc=InputDocumentation(doc="When hap.py was run with --adjust-conf-regions, on the\noriginal VCF, then quantify needs the truthset VCF in\norder to correctly reproduce the results. This switch\nallows us to pass the truth VCF into quantify.")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Annotation format in input VCF file.")), ToolInput(tag="in_false_positives", input_type=File(optional=True), prefix="--false-positives", doc=InputDocumentation(doc="False positive / confident call regions (.bed or\n.bed.gz). Calls outside these regions will be labelled\nas UNK.")), ToolInput(tag="in_stratification", input_type=File(optional=True), prefix="--stratification", doc=InputDocumentation(doc="Stratification file list (TSV format -- first column\nis region name, second column is file name).")), ToolInput(tag="in_stratification_region", input_type=String(optional=True), prefix="--stratification-region", doc=InputDocumentation(doc="Add single stratification region, e.g.\n--stratification-region TEST:test.bed")), ToolInput(tag="in_stratification_fix_chr", input_type=Boolean(optional=True), prefix="--stratification-fixchr", doc=InputDocumentation(doc="Add chr prefix to stratification files if necessary")), ToolInput(tag="in_write_vcf", input_type=Boolean(optional=True), prefix="--write-vcf", doc=InputDocumentation(doc="Write an annotated VCF.")), ToolInput(tag="in_write_counts", input_type=Boolean(optional=True), prefix="--write-counts", doc=InputDocumentation(doc="Write advanced counts and metrics.")), ToolInput(tag="in_no_write_counts", input_type=Boolean(optional=True), prefix="--no-write-counts", doc=InputDocumentation(doc="Do not write advanced counts and metrics.")), ToolInput(tag="in_output_vtc", input_type=Boolean(optional=True), prefix="--output-vtc", doc=InputDocumentation(doc="Write VTC field in the final VCF which gives the\ncounts each position has contributed to.")), ToolInput(tag="in_preserve_info", input_type=Boolean(optional=True), prefix="--preserve-info", doc=InputDocumentation(doc="When using XCMP, preserve and merge the INFO fields in\ntruth and query. Useful for ROC computation.")), ToolInput(tag="in_roc", input_type=String(optional=True), prefix="--roc", doc=InputDocumentation(doc="Select a feature to produce a ROC on (INFO feature,\nQUAL, GQX, ...).")), ToolInput(tag="in_no_roc", input_type=Boolean(optional=True), prefix="--no-roc", doc=InputDocumentation(doc="Disable ROC computation and only output summary\nstatistics for more concise output.")), ToolInput(tag="in_roc_regions", input_type=String(optional=True), prefix="--roc-regions", doc=InputDocumentation(doc="Select a list of regions to compute ROCs in. By\ndefault, only the '*' region will produce ROC output\n(aggregate variant counts).")), ToolInput(tag="in_roc_filter", input_type=String(optional=True), prefix="--roc-filter", doc=InputDocumentation(doc="Select a filter to ignore when making ROCs.")), ToolInput(tag="in_roc_delta", input_type=String(optional=True), prefix="--roc-delta", doc=InputDocumentation(doc="Minimum spacing between ROC QQ levels.")), ToolInput(tag="in_ci_alpha", input_type=String(optional=True), prefix="--ci-alpha", doc=InputDocumentation(doc="Confidence level for Jeffrey's CI for recall,\nprecision and fraction of non-assessed calls.")), ToolInput(tag="in_no_json", input_type=File(optional=True), prefix="--no-json", doc=InputDocumentation(doc="Disable JSON file output.")), ToolInput(tag="in_report_prefix", input_type=File(optional=True), prefix="--report-prefix", doc=InputDocumentation(doc="Filename prefix for report output.")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Specify a reference file.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to use.")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Write logging information into file rather than to")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Set logging level to output errors only.")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="")), ToolInput(tag="in_stderr", input_type=String(), position=0, doc=InputDocumentation(doc="--bcf                 Use BCF internally. This is the default when the input")), ToolInput(tag="in_header_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--verbose             Raise logging level from warning to info."))], outputs=[ToolOutput(tag="out_no_json", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_json", type_hint=File()), doc=OutputDocumentation(doc="Disable JSON file output.")), ToolOutput(tag="out_report_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_report_prefix", type_hint=File()), doc=OutputDocumentation(doc="Filename prefix for report output."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Qfy_Py_V0_1_0().translate("wdl", allow_empty_container=True)

