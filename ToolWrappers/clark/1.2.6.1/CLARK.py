from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Directory, Boolean, String

Clark_V0_1_0 = CommandToolBuilder(tool="CLARK", base_command=["CLARK"], inputs=[ToolInput(tag="in_kmer_length_integer", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc=",           k-mer length:  integer, >= 2 and <= 32 (for CLARK only). The default value is 31.")), ToolInput(tag="in_minimum_kmer_frequency_targets", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc=",      minimum of k-mer frequency in targets (for CLARK only):        integer, >=0.")), ToolInput(tag="in_minimum_kmer_frequency_objects", input_type=Int(optional=True), prefix="-o", doc=InputDocumentation(doc=",     minimum of k-mer frequency in objects  (for CLARK only):       integer, >=0.")), ToolInput(tag="in_filename_targets_definition", input_type=File(optional=True), prefix="-T", doc=InputDocumentation(doc=",        filename of the targets definition:     text.")), ToolInput(tag="in_directory_name_text", input_type=Directory(optional=True), prefix="-D", doc=InputDocumentation(doc=",       directory name for the database (to load/save database files):  text.")), ToolInput(tag="in_filename_objects_list", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc=",        filename of objects (or list of objects):       text.")), ToolInput(tag="in_file_filenames_pairedend", input_type=File(optional=True), prefix="-P", doc=InputDocumentation(doc="<file2>,      filenames of paired-end reads:  texts.")), ToolInput(tag="in_filename_store_results", input_type=File(optional=True), prefix="-R", doc=InputDocumentation(doc=",        filename to store results (or corresponding list of results file):      text.")), ToolInput(tag="in_mode_default_express", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc=",               mode of execution: 0 (full), 1 (default), 2 (express) and 3 (spectrum).\nFor CLARK-S, the full and default mode are the same.")), ToolInput(tag="in_number_threads_integer", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc=",    number of threads:     integer >= 1.")), ToolInput(tag="in_long", input_type=Boolean(optional=True), prefix="--long", doc=InputDocumentation(doc=",                  to indicate that the objects files contains very long/large sequences (e.g.,\nlong contigs from genome assembly, long sequencing reads from Nanopore or Pacbio, etc.)\nand allocate more memory accordingly. This option is only for running the full mode or\nrunning CLARK-S, in the case of sequences up to 50 Mbp.")), ToolInput(tag="in_tsk", input_type=Boolean(optional=True), prefix="--tsk", doc=InputDocumentation(doc=",                   to request a detailed creation of the database (target specific k-mers files). This option is no more supported.")), ToolInput(tag="in_ldm", input_type=Boolean(optional=True), prefix="--ldm", doc=InputDocumentation(doc=",                   to request the loading of the database by memory mapped-file (in multithreaded mode, multiple parallel threads are requested).")), ToolInput(tag="in_k_so", input_type=Boolean(optional=True), prefix="--kso", doc=InputDocumentation(doc=",                   to request a preliminary k-spectrum analysis of each object (for mode 3 only).")), ToolInput(tag="in_extended", input_type=Boolean(optional=True), prefix="--extended", doc=InputDocumentation(doc=",              to request an extended output of the full mode (for CLARK only).")), ToolInput(tag="in_gap_number_nonoverlapping", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc=",          gap or number of non-overlapping k-mers to pass for the database creation (for CLARK-l only). The default value is 4.")), ToolInput(tag="in_sampling_factor_value", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc=",             sampling factor value in the default mode (for CLARK/CLARK-S only)."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Clark_V0_1_0().translate("wdl", allow_empty_container=True)

