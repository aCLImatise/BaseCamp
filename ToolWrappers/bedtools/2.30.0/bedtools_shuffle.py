from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Bedtools_Shuffle_V0_1_0 = CommandToolBuilder(tool="bedtools_shuffle", base_command=["bedtools", "shuffle"], inputs=[ToolInput(tag="in_excl", input_type=Boolean(optional=True), prefix="-excl", doc=InputDocumentation(doc="A BED/GFF/VCF file of coordinates in which features in -i\nshould not be placed (e.g. gaps.bed).")), ToolInput(tag="in_incl", input_type=Boolean(optional=True), prefix="-incl", doc=InputDocumentation(doc="Instead of randomly placing features in a genome, the -incl\noptions defines a BED/GFF/VCF file of coordinates in which\nfeatures in -i should be randomly placed (e.g. genes.bed).\nLarger -incl intervals will contain more shuffled regions.\nThis method DISABLES -chromFirst.")), ToolInput(tag="in_chrom", input_type=Boolean(optional=True), prefix="-chrom", doc=InputDocumentation(doc="Keep features in -i on the same chromosome.\n- By default, the chrom and position are randomly chosen.\n- NOTE: Forces use of -chromFirst (see below).")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="-seed", doc=InputDocumentation(doc="Supply an integer seed for the shuffling.\n- By default, the seed is chosen automatically.\n- (INTEGER)")), ToolInput(tag="in_maximum_overlap_feature", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Maximum overlap (as a fraction of the -i feature) with an -excl\nfeature that is tolerated before searching for a new,\nrandomized locus. For example, -f 0.10 allows up to 10%\nof a randomized feature to overlap with a given feature\nin the -excl file. **Cannot be used with -incl file.**\n- Default is 1E-9 (i.e., 1bp).\n- FLOAT (e.g. 0.50)")), ToolInput(tag="in_chrom_first", input_type=Boolean(optional=True), prefix="-chromFirst", doc=InputDocumentation(doc="Instead of choosing a position randomly among the entire\ngenome (the default), first choose a chrom randomly, and then\nchoose a random start coordinate on that chrom.  This leads\nto features being ~uniformly distributed among the chroms,\nas opposed to features being distribute as a function of chrom size.")), ToolInput(tag="in_bed_pe", input_type=Boolean(optional=True), prefix="-bedpe", doc=InputDocumentation(doc="Indicate that the A file is in BEDPE format.")), ToolInput(tag="in_max_tries", input_type=Boolean(optional=True), prefix="-maxTries", doc=InputDocumentation(doc="Max. number of attempts to find a home for a shuffled interval\nin the presence of -incl or -excl.\nDefault = 1000.")), ToolInput(tag="in_no_overlapping", input_type=Boolean(optional=True), prefix="-noOverlapping", doc=InputDocumentation(doc="Don't allow shuffled intervals to overlap.")), ToolInput(tag="in_allow_beyond_chrome_nd", input_type=Boolean(optional=True), prefix="-allowBeyondChromEnd", doc=InputDocumentation(doc="Allow shuffled intervals to be relocated to a position\nin which the entire original interval cannot fit w/o exceeding\nthe end of the chromosome.  In this case, the end coordinate of the\nshuffled interval will be set to the chromosome's length.\nBy default, an interval's original length must be fully-contained\nwithin the chromosome.")), ToolInput(tag="in_g", input_type=String(optional=True), prefix="-g", doc=InputDocumentation(doc="")), ToolInput(tag="in_i", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/bedtools:2.30.0--hc088bd4_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bedtools_Shuffle_V0_1_0().translate("wdl")

