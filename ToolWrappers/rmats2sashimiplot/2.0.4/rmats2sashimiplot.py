from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Directory, String, File, Boolean

Rmats2Sashimiplot_V0_1_0 = CommandToolBuilder(tool="rmats2sashimiplot", base_command=["rmats2sashimiplot"], inputs=[ToolInput(tag="in_lone", input_type=Int(optional=True), prefix="--l1", doc=InputDocumentation(doc="The label for first sample.")), ToolInput(tag="in_l_two", input_type=Int(optional=True), prefix="--l2", doc=InputDocumentation(doc="The label for second sample.")), ToolInput(tag="in_the_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="The output directory.")), ToolInput(tag="in_type_event_rmats", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Type of event from rMATS result used in the analysis.\n'SE': skipped exon, 'A5SS': alternative 5' splice\nsite, 'A3SS' alternative 3' splice site, 'MXE':\nmutually exclusive exons, 'RI': retained intron. (Only\nif using rMATS event input)")), ToolInput(tag="in_rmats_output_event", input_type=File(optional=True), prefix="-e", doc=InputDocumentation(doc="The rMATS output event file (Only if using rMATS event\ninput)")), ToolInput(tag="in_genome_region_coordinates", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="The genome region coordinates and a GFF3 (not GTF)\nannotation file of genes and transcripts. The format\nis -c\n{chromosome}:{strand}:{start}:{end}:{/path/to/gff3}\n(Only if using Coordinate and annotation input)")), ToolInput(tag="in_s_one", input_type=Int(optional=True), prefix="--s1", doc=InputDocumentation(doc="sample_1 sam files: s1_rep1.sam[,s1_rep2.sam]")), ToolInput(tag="in_s_two", input_type=Int(optional=True), prefix="--s2", doc=InputDocumentation(doc="sample_2 sam files: s2_rep1.sam[,s2_rep2.sam]")), ToolInput(tag="in_bone", input_type=Int(optional=True), prefix="--b1", doc=InputDocumentation(doc="sample_1 bam files: s1_rep1.bam[,s1_rep2.bam]")), ToolInput(tag="in_b_two", input_type=Int(optional=True), prefix="--b2", doc=InputDocumentation(doc="sample_2 bam files: s2_rep1.bam[,s2_rep2.bam]")), ToolInput(tag="in_exon_s", input_type=Int(optional=True), prefix="--exon_s", doc=InputDocumentation(doc="How much to scale down exons. Default: 1")), ToolInput(tag="in_group_info", input_type=File(optional=True), prefix="--group-info", doc=InputDocumentation(doc="The path to a *.gf file which groups the replicates.\nOne sashimi plot will be generated for each group\ninstead of the default behavior of one plot per\nreplicate")), ToolInput(tag="in_min_counts", input_type=Int(optional=True), prefix="--min-counts", doc=InputDocumentation(doc="Individual junctions with read count below --min-\ncounts will be omitted from the plot. Default: 0")), ToolInput(tag="in_color", input_type=Int(optional=True), prefix="--color", doc=InputDocumentation(doc="Specify a list of colors with one color per plot.\nWithout grouping there is one plot per replicate. With\ngrouping there is one plot per group: --color\n'#CC0011[,#FF8800]'")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--font-size", doc=InputDocumentation(doc="Set the font size. Default: 8")), ToolInput(tag="in_hide_number", input_type=Boolean(optional=True), prefix="--hide-number", doc=InputDocumentation(doc="Do not display the read count on the junctions")), ToolInput(tag="in_no_text_background", input_type=Boolean(optional=True), prefix="--no-text-background", doc=InputDocumentation(doc="Do not put a white box behind the junction read count"))], outputs=[ToolOutput(tag="out_the_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_the_output_directory", type_hint=File()), doc=OutputDocumentation(doc="The output directory."))], container="quay.io/biocontainers/rmats2sashimiplot:2.0.4--py39h6a678da_2", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rmats2Sashimiplot_V0_1_0().translate("wdl")

