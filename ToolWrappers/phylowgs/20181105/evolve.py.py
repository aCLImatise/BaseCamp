from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String

Evolve_Py_V0_1_0 = CommandToolBuilder(tool="evolve.py", base_command=["evolve.py"], inputs=[ToolInput(tag="in_output_dir", input_type=File(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Path to output directory (default: None)")), ToolInput(tag="in_write_backups_every", input_type=Int(optional=True), prefix="--write-backups-every", doc=InputDocumentation(doc="Number of iterations to go between writing backups of\nprogram state (default: 100)")), ToolInput(tag="in_write_state_every", input_type=Int(optional=True), prefix="--write-state-every", doc=InputDocumentation(doc="Number of iterations between writing program state to\ndisk. Higher values reduce IO burden at the cost of\nlosing progress made if program is interrupted.\n(default: 10)")), ToolInput(tag="in_burnin_samples", input_type=Int(optional=True), prefix="--burnin-samples", doc=InputDocumentation(doc="Number of burnin samples (default: 1000)")), ToolInput(tag="in_mcmc_samples", input_type=Int(optional=True), prefix="--mcmc-samples", doc=InputDocumentation(doc="Number of MCMC samples (default: 2500)")), ToolInput(tag="in_mh_iterations", input_type=Int(optional=True), prefix="--mh-iterations", doc=InputDocumentation(doc="Number of Metropolis-Hastings iterations (default:\n5000)")), ToolInput(tag="in_random_seed", input_type=String(optional=True), prefix="--random-seed", doc=InputDocumentation(doc="Random seed for initializing MCMC sampler (default:\nNone)")), ToolInput(tag="in_tmp_dir", input_type=File(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Path to directory for temporary files (default: None)")), ToolInput(tag="in_params", input_type=File(optional=True), prefix="--params", doc=InputDocumentation(doc="JSON file listing run parameters, generated by the\nparser (default: None)\n")), ToolInput(tag="in_ssm_file", input_type=String(), position=0, doc=InputDocumentation(doc="File listing SSMs (simple somatic mutations, i.e.,\nsingle nucleotide variants. For proper format, see\nREADME.md.")), ToolInput(tag="in_cnv_file", input_type=String(), position=1, doc=InputDocumentation(doc="File listing CNVs (copy number variations). For proper\nformat, see README.md."))], outputs=[ToolOutput(tag="out_output_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Path to output directory (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Evolve_Py_V0_1_0().translate("wdl", allow_empty_container=True)

