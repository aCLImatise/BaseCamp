!Command
command:
- rtg
- pedstats
positional:
- !Positional
  description: "the pedigree file to process, may be PED or VCF, use\n'-' to read\
    \ from stdin"
  position: 0
  name: FILE
  optional: false
named:
- !Flag
  description: output id lists using this separator (Default is \n)
  synonyms:
  - -d
  - --delimiter
  args: !SimpleFlagArg
    name: STRING
  optional: true
- !Flag
  description: "output pedigree in Graphviz format, using the supplied\ntext as a\
    \ title"
  synonyms:
  - --dot
  args: !SimpleFlagArg
    name: STRING
  optional: true
- !Flag
  description: output information about family structures
  synonyms:
  - --families
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output ids of all females
  synonyms:
  - --female-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output ids of all founders
  synonyms:
  - --founder-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output ids of all males
  synonyms:
  - --male-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output ids of maternal individuals
  synonyms:
  - --maternal-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output ids of paternal individuals
  synonyms:
  - --paternal-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output ids of all primary individuals
  synonyms:
  - --primary-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "when outputting Graphviz format, use a layout that\nlooks less like\
    \ a traditional pedigree diagram but\nworks better with large complex pedigrees"
  synonyms:
  - --simple-dot
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: print help on command-line flag usage
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: rtg pedstats [OPTION]... FILE\n\nOutput information from pedigree\
  \ files of various formats. For quick pedigree\nvisualization using Graphviz, try:\n\
  \n  dot -Tpng <(rtg pedstats --dot \"A Title\" PEDFILE) | display -\n\nor for a\
  \ larger pedigree:\n\n  dot -Tpdf -o mypedigree.pdf <(rtg pedstats --dot \"A Title\"\
  \ PEDFILE)\n\nFile Input/Output\n      FILE               the pedigree file to process,\
  \ may be PED or VCF, use\n                         '-' to read from stdin\n\nReporting\n\
  \  -d, --delimiter=STRING output id lists using this separator (Default is \\n)\n\
  \      --dot=STRING       output pedigree in Graphviz format, using the supplied\n\
  \                         text as a title\n      --families         output information\
  \ about family structures\n      --female-ids       output ids of all females\n\
  \      --founder-ids      output ids of all founders\n      --male-ids         output\
  \ ids of all males\n      --maternal-ids     output ids of maternal individuals\n\
  \      --paternal-ids     output ids of paternal individuals\n      --primary-ids\
  \      output ids of all primary individuals\n      --simple-dot       when outputting\
  \ Graphviz format, use a layout that\n                         looks less like a\
  \ traditional pedigree diagram but\n                         works better with large\
  \ complex pedigrees\n\nUtility\n  -h, --help             print help on command-line\
  \ flag usage\n\n"
generated_using:
- --help
