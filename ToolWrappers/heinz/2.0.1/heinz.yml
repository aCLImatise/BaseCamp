!Command
command:
- heinz
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -FDR
  description: Specifies fdr
  args: !SimpleFlagArg
    name: num
- !Flag
  optional: true
  synonyms:
  - -a
  description: Specifies a
  args: !SimpleFlagArg
    name: num
- !Flag
  optional: true
  synonyms:
  - -e
  description: Edge list file
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - -enum
  description: "Enumeration mode:\n0 - No enumeration\n1 - No root\n2 - Fix root\n\
    3 - No root per component (default)"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -f
  description: "Formulation of the problem:\n0 - Single Commodity Flow\n1 - Multi\
    \ Commodity Flow\n2 - Cut formulation (Flow)\n3 - Cut formulation (Flow-min)\n\
    4 - Cut formulation (Node-separator)\n5 - Cut formulation (Node-separator, BK,\
    \ default)\n6 - Tree DP\n7 - Tree DP heuristic (fixed_edge)\n8 - Tree DP heuristic\
    \ (random_edge)\n9 - Tree DP heuristic (uniform_edge)"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -lambda
  description: Specifies lambda
  args: !SimpleFlagArg
    name: num
- !Flag
  optional: true
  synonyms:
  - -m
  description: 'Specifies number of threads (default: 1)'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -maxCuts
  description: "Specifies the maximum number of cuts per step\n(only in conjuction\
    \ with -f 2, optional, default: -1)"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -n
  description: Node file
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - -o
  description: Output file
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - -p
  description: Enable preprocessing
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: Specifies the root node (optional)
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - -s
  description: STP node file
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - -t
  description: 'Time limit (in seconds, default: -1)'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbosity
  description: "Specifies the verbosity level:\n0 - No output\n1 - Only necessary\
    \ output\n2 - More verbose output (default)\n3 - Debug output"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -version
  description: "Show version number\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  - -h
  - -help
  description: Print a short help message
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage:\n  heinz [--help|-h|-help] [-FDR num] [-a num] [-e str] [-enum\
  \ int] [-f int]\n     [-lambda num] [-m int] [-maxCuts int] [-n str] [-o str] [-p]\
  \ [-r str]\n     [-s str] [-t int] [-v|--verbosity int] [-version]\nWhere:\n  --help|-h|-help\n\
  \     Print a short help message\n  -FDR num\n     Specifies fdr\n  -a num\n   \
  \  Specifies a\n  -e str\n     Edge list file\n  -enum int\n     Enumeration mode:\n\
  \     0 - No enumeration\n     1 - No root\n     2 - Fix root\n     3 - No root\
  \ per component (default)\n  -f int\n     Formulation of the problem:\n     0 -\
  \ Single Commodity Flow\n     1 - Multi Commodity Flow\n     2 - Cut formulation\
  \ (Flow) \n     3 - Cut formulation (Flow-min)\n     4 - Cut formulation (Node-separator)\n\
  \     5 - Cut formulation (Node-separator, BK, default)\n     6 - Tree DP\n    \
  \ 7 - Tree DP heuristic (fixed_edge)\n     8 - Tree DP heuristic (random_edge)\n\
  \     9 - Tree DP heuristic (uniform_edge)\n  -lambda num\n     Specifies lambda\n\
  \  -m int\n     Specifies number of threads (default: 1)\n  -maxCuts int\n     Specifies\
  \ the maximum number of cuts per step\n     (only in conjuction with -f 2, optional,\
  \ default: -1)\n  -n str\n     Node file\n  -o str\n     Output file\n  -p\n   \
  \  Enable preprocessing\n  -r str\n     Specifies the root node (optional)\n  -s\
  \ str\n     STP node file\n  -t int\n     Time limit (in seconds, default: -1)\n\
  \  -v|--verbosity int\n     Specifies the verbosity level:\n     0 - No output\n\
  \     1 - Only necessary output\n     2 - More verbose output (default)\n     3\
  \ - Debug output\n  -version\n     Show version number\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/heinz:2.0.1--he1b5a44_0
