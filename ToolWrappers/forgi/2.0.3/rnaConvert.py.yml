!Command
command:
- rnaConvert.py
positional:
- !Positional
  optional: false
  position: 0
  name: rna
  description: "One or more files containing one or more RNAs each.\nSupported Filetypes\
    \ are: pdb files, forgi cg files,\nforgi bg files, fasta files,\ndotbracketfilesAlternatively\
    \ you can supply a\ndotbracket-string (containing only the characters\n'.()[]{}&')\
    \ from the commandline."
named:
- !Flag
  optional: true
  synonyms:
  - --keep-length-one-stems
  description: "For all input formats except forgi bg/cg files, this\ncontrolls whether\
    \ stems of length one are dissolved to\nunpaired regions (default) or kept (if\
    \ this option is\npresent). In the case of input in forgi-format, the\nRNA from\
    \ the file is not modified."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -T
  - --target-type
  description: The target file-type to convert into.
  args: !ChoiceFlagArg
    choices: !!set
      element_string:
      fasta:
      forgi:
      bpseq:
      dotbracket:
      pdb:
      neato:
- !Flag
  optional: true
  synonyms:
  - --to-file
  description: "Store the converted RNA in files instead of printing\nthem to stdout.\
    \ The file-name will be the RNA's name\n(if present), otherwise 'rna001' etc."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --filename
  description: "If this is present, --to-file will automatically be\ntrue.A target\
    \ filename (or path) without extention. If\nit is a filename, use the given filename\
    \ instead of\nthe RNA's name. If more than one input-RNA is present,\nappends\
    \ automatically a increasing number.If it is a\ndirectory, create files in this\
    \ directory."
  args: !SimpleFlagArg
    name: FILENAME
- !Flag
  optional: true
  synonyms:
  - -f
  - --force
  description: "Overwrite files, if they already exist. Note: In case\nof race conditions,\
    \ files could be overwritten even if\nthis flag is not provided."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --pseudoknots
  description: "Allow pseudoknots when extracting the structure from\nPDB files."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --chains
  description: "When reading pdb-files: Only extract the given\nchain(s). Comma-seperated"
  args: !SimpleFlagArg
    name: CHAINS
- !Flag
  optional: true
  synonyms:
  - --pdb-secondary-structure
  description: "When reading a single chain from a pdb-files: Enforce\nthe secondary\
    \ structure given as dotbracket string.\n(This only works, if --chain is given!)"
  args: !SimpleFlagArg
    name: PDB_SECONDARY_STRUCTURE
- !Flag
  optional: true
  synonyms:
  - --pdb-annotation-tool
  description: "What program to use for detecting basepairs in PDB/\nMMCIF structures.\
    \ This commandline option overrides\nthe value in the config file (if present).If\
    \ this is\nnot present and no config-file is given, we try to\ndetect the installed\
    \ programs."
  args: !SimpleFlagArg
    name: PDB_ANNOTATION_TOOL
- !Flag
  optional: true
  synonyms:
  - --pdb-allow-www-query
  description: "Usually, if modified residues/ ligand with an unknown\n3-letter code\
    \ are encountered in PDB files, they are\nremoved from the chain and a log message\
    \ of severity\nINFO is issued. With this option, we first try to\nquery the PDBeChem\
    \ database for the 3-letter code, to\nsee whether or not it is a modified residue\
    \ that can\nbe converted to its standard parent and should be part\nof the chain."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: "Show verbose output (Output logged at level\nlogging.INFO)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --debug
  description: "[DEBUG]       A comma-seperated list of logger names for which debug\n\
    output will be activated.WARNING: If you misspell the\nlogger name, this argument\
    \ will be ignored"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: "[QUIET], --quiet [QUIET]\nA comma-seperated list of logger names for\
    \ which only\nmessages logged at the level 'CRITICAL' will be\nshown.Use this\
    \ without arguments if everything should\nbe quiet.\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: rnaConvert.py [-h] [--keep-length-one-stems] [--pseudoknots]\n\
  \                     [--chains CHAINS]\n                     [--pdb-secondary-structure\
  \ PDB_SECONDARY_STRUCTURE]\n                     [--pdb-annotation-tool PDB_ANNOTATION_TOOL]\n\
  \                     [--pdb-allow-www-query] [-v] [--debug [DEBUG]]\n         \
  \            [-q [QUIET]]\n                     [-T {forgi,bpseq,fasta,dotbracket,neato,element_string,pdb}]\n\
  \                     [--to-file] [--filename FILENAME] [-f]\n                 \
  \    rna [rna ...]\n\nConvert RNA files between different file formats.\n\npositional\
  \ arguments:\n  rna                   One or more files containing one or more RNAs\
  \ each.\n                        Supported Filetypes are: pdb files, forgi cg files,\n\
  \                        forgi bg files, fasta files,\n                        dotbracketfilesAlternatively\
  \ you can supply a\n                        dotbracket-string (containing only the\
  \ characters\n                        '.()[]{}&') from the commandline.\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  --keep-length-one-stems\n\
  \                        For all input formats except forgi bg/cg files, this\n\
  \                        controlls whether stems of length one are dissolved to\n\
  \                        unpaired regions (default) or kept (if this option is\n\
  \                        present). In the case of input in forgi-format, the\n \
  \                       RNA from the file is not modified.\n  -T {forgi,bpseq,fasta,dotbracket,neato,element_string,pdb},\
  \ --target-type {forgi,bpseq,fasta,dotbracket,neato,element_string,pdb}\n      \
  \                  The target file-type to convert into.\n  --to-file          \
  \   Store the converted RNA in files instead of printing\n                     \
  \   them to stdout. The file-name will be the RNA's name\n                     \
  \   (if present), otherwise 'rna001' etc.\n  --filename FILENAME   If this is present,\
  \ --to-file will automatically be\n                        true.A target filename\
  \ (or path) without extention. If\n                        it is a filename, use\
  \ the given filename instead of\n                        the RNA's name. If more\
  \ than one input-RNA is present,\n                        appends automatically\
  \ a increasing number.If it is a\n                        directory, create files\
  \ in this directory.\n  -f, --force           Overwrite files, if they already exist.\
  \ Note: In case\n                        of race conditions, files could be overwritten\
  \ even if\n                        this flag is not provided.\n\nOptions for loading\
  \ of PDB files:\n  These options only take effect, if the input RNA is in pdb file\
  \ format.\n\n  --pseudoknots         Allow pseudoknots when extracting the structure\
  \ from\n                        PDB files.\n  --chains CHAINS       When reading\
  \ pdb-files: Only extract the given\n                        chain(s). Comma-seperated\n\
  \  --pdb-secondary-structure PDB_SECONDARY_STRUCTURE\n                        When\
  \ reading a single chain from a pdb-files: Enforce\n                        the\
  \ secondary structure given as dotbracket string.\n                        (This\
  \ only works, if --chain is given!)\n  --pdb-annotation-tool PDB_ANNOTATION_TOOL\n\
  \                        What program to use for detecting basepairs in PDB/\n \
  \                       MMCIF structures. This commandline option overrides\n  \
  \                      the value in the config file (if present).If this is\n  \
  \                      not present and no config-file is given, we try to\n    \
  \                    detect the installed programs.\n  --pdb-allow-www-query\n \
  \                       Usually, if modified residues/ ligand with an unknown\n\
  \                        3-letter code are encountered in PDB files, they are\n\
  \                        removed from the chain and a log message of severity\n\
  \                        INFO is issued. With this option, we first try to\n   \
  \                     query the PDBeChem database for the 3-letter code, to\n  \
  \                      see whether or not it is a modified residue that can\n  \
  \                      be converted to its standard parent and should be part\n\
  \                        of the chain.\n\nControl verbosity of logging output:\n\
  \  -v, --verbose         Show verbose output (Output logged at level\n         \
  \               logging.INFO)\n  --debug [DEBUG]       A comma-seperated list of\
  \ logger names for which debug\n                        output will be activated.WARNING:\
  \ If you misspell the\n                        logger name, this argument will be\
  \ ignored\n  -q [QUIET], --quiet [QUIET]\n                        A comma-seperated\
  \ list of logger names for which only\n                        messages logged at\
  \ the level 'CRITICAL' will be\n                        shown.Use this without arguments\
  \ if everything should\n                        be quiet.\n"
generated_using:
- --help
docker_image:
