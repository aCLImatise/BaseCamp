from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String

Hggcpercent_V0_1_0 = CommandToolBuilder(tool="hgGcPercent", base_command=["hgGcPercent"], inputs=[ToolInput(tag="in_win", input_type=Int(optional=True), prefix="-win", doc=InputDocumentation(doc="- change windows size (default 20000)")), ToolInput(tag="in_no_load", input_type=Boolean(optional=True), prefix="-noLoad", doc=InputDocumentation(doc="- do not load mysql table - create bed file")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="-file", doc=InputDocumentation(doc="- output to <filename> (stdout OK) (implies -noLoad)")), ToolInput(tag="in_chr", input_type=String(optional=True), prefix="-chr", doc=InputDocumentation(doc="- process only chrN from the nibDir")), ToolInput(tag="in_no_random", input_type=Boolean(optional=True), prefix="-noRandom", doc=InputDocumentation(doc="- ignore randome chromosomes from the nibDir")), ToolInput(tag="in_no_dots", input_type=Boolean(optional=True), prefix="-noDots", doc=InputDocumentation(doc="- do not display ... progress during processing")), ToolInput(tag="in_do_gaps", input_type=Boolean(optional=True), prefix="-doGaps", doc=InputDocumentation(doc="- process gaps correctly (default: gaps are not counted as GC)")), ToolInput(tag="in_wig_out", input_type=Boolean(optional=True), prefix="-wigOut", doc=InputDocumentation(doc="- output wiggle ascii data ready to pipe to wigEncode")), ToolInput(tag="in_overlap", input_type=Int(optional=True), prefix="-overlap", doc=InputDocumentation(doc="- overlap windows by N bases (default 0)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="-verbose", doc=InputDocumentation(doc="- display details to stderr during processing")), ToolInput(tag="in_bed_region_in", input_type=File(optional=True), prefix="-bedRegionIn", doc=InputDocumentation(doc="Read in a bed file for GC content in specific regions and write to bedRegionsOut")), ToolInput(tag="in_bed_region_out", input_type=File(optional=True), prefix="-bedRegionOut", doc=InputDocumentation(doc="Write a bed file of GC content in specific regions from bedRegionIn")), ToolInput(tag="in_database", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_nib_dir", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file", type_hint=File()), doc=OutputDocumentation(doc="- output to <filename> (stdout OK) (implies -noLoad)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hggcpercent_V0_1_0().translate("wdl", allow_empty_container=True)

