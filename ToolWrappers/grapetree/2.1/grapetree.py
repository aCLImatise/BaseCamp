from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, Float

Grapetree_V0_1_0 = CommandToolBuilder(tool="grapetree", base_command=["grapetree"], inputs=[ToolInput(tag="in_profile", input_type=File(optional=True), prefix="--profile", doc=InputDocumentation(doc="[REQUIRED] An input filename of a file containing MLST or SNP character data, OR a fasta file containing aligned sequences.")), ToolInput(tag="in_method", input_type=Int(optional=True), prefix="--method", doc=InputDocumentation(doc="'MSTreeV2' [DEFAULT]\n'MSTree'\n'NJ': FastME V2 NJ tree\n'RapidNJ': RapidNJ for very large datasets\n'ninja': Alternative NJ algorithm for very large datasets\n'distance': allelic distance matrix in PHYLIP format.")), ToolInput(tag="in_matrix", input_type=Int(optional=True), prefix="--matrix", doc=InputDocumentation(doc="'symmetric': [DEFAULT: MSTree, NJ and RapidNJ]\n'asymmetric': [DEFAULT: MSTreeV2].\n'blockwise': (experimental for ordered loci) A different locus is given less penalty (defined by -b) if the previous locus is also different")), ToolInput(tag="in_re_craft", input_type=Boolean(optional=True), prefix="--recraft", doc=InputDocumentation(doc="Triggers local branch recrafting. [DEFAULT: MSTreeV2].")), ToolInput(tag="in_missing", input_type=Int(optional=True), prefix="--missing", doc=InputDocumentation(doc="ONLY FOR symmetric DISTANCE MATRIX.\n0: [DEFAULT] ignore missing data in pairwise comparison.\n1: Remove column with missing data.\n2: treat data as an allele.\n3: Absolute number of allelic differences.")), ToolInput(tag="in_wg_mlst", input_type=Boolean(optional=True), prefix="--wgMLST", doc=InputDocumentation(doc="[EXPERIMENTAL] a better support of wgMLST schemes.")), ToolInput(tag="in_heuristic", input_type=Int(optional=True), prefix="--heuristic", doc=InputDocumentation(doc="Tiebreak heuristic used only in MSTree and MSTreeV2\n'eBurst' [DEFAULT: MSTree]\n'harmonic' [DEFAULT: MSTreeV2]")), ToolInput(tag="in_n_proc", input_type=Int(optional=True), prefix="--n_proc", doc=InputDocumentation(doc="Number of CPU processes in parallel use. [DEFAULT]: 5.")), ToolInput(tag="in_check", input_type=Boolean(optional=True), prefix="--check", doc=InputDocumentation(doc="Only calculate the expected time/memory requirements.")), ToolInput(tag="in_block_penalty", input_type=Float(optional=True), prefix="--block_penalty", doc=InputDocumentation(doc="[DEFAULT: 0.01] The penalty that is given to a different locus if it is led by another difference. Only works for '-x blockwise'\n"))], outputs=[], container="quay.io/biocontainers/grapetree:2.1--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Grapetree_V0_1_0().translate("wdl")

