from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Readseq_V0_1_0 = CommandToolBuilder(tool="readseq", base_command=["readseq"], inputs=[ToolInput(tag="in_change_lower_case", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[aselower]        change to lower case")), ToolInput(tag="in_change_upper_case", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[ASEUPPER]        change to UPPER CASE")), ToolInput(tag="in_ch", input_type=Boolean(optional=True), prefix="-ch", doc=InputDocumentation(doc="[ecksum]         calculate & print checksum of sequences")), ToolInput(tag="in_de_gap", input_type=Boolean(optional=True), prefix="-degap", doc=InputDocumentation(doc="[=-]          remove gap symbols")), ToolInput(tag="in_select_item_numbers", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[tem=2,3,4]       select Item number(s) from several")), ToolInput(tag="in_list_sequences_only", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ist]             List sequences only")), ToolInput(tag="in_outseq_redirect_output", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[utput=]out.seq   redirect Output")), ToolInput(tag="in_pipe_command_line", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ipe]             Pipe (command line, < stdin, > stdout)")), ToolInput(tag="in_reversecomplement_input_sequence", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[everse]          reverse-complement of input sequence")), ToolInput(tag="in_use_several_tio", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ranslate=]io     translate input symbol [i] to output symbol [o]\nuse several -tio to translate several symbols")), ToolInput(tag="in__verbose_progress", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[erbose]          Verbose progress")), ToolInput(tag="in_compare", input_type=Int(optional=True), prefix="-compare", doc=InputDocumentation(doc="Compare two sequence files, reporting differences (flags=nodoc,noid,nolen,nocrc)")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="-amino", doc=InputDocumentation(doc="[translate]   translate dna to amino acids")), ToolInput(tag="in_feat", input_type=Boolean(optional=True), prefix="-feat", doc=InputDocumentation(doc="[ures]=exon,CDS...   extract sequence of selected features")), ToolInput(tag="in_no_feat", input_type=Boolean(optional=True), prefix="-nofeat", doc=InputDocumentation(doc="[ures]=repeat_region,intron... remove sequence of selected features")), ToolInput(tag="in_field", input_type=String(optional=True), prefix="-field", doc=InputDocumentation(doc=",ID...      include selected document fields in output")), ToolInput(tag="in_no_field", input_type=String(optional=True), prefix="-nofield", doc=InputDocumentation(doc=",... remove selected document fields from output")), ToolInput(tag="in_extract", input_type=Int(optional=True), prefix="-extract", doc=InputDocumentation(doc="* extract all features, sequence from given base range")), ToolInput(tag="in_pair", input_type=Int(optional=True), prefix="-pair", doc=InputDocumentation(doc="* combine features (fff,gff) and sequence files to one output")), ToolInput(tag="in_un_pair", input_type=Int(optional=True), prefix="-unpair", doc=InputDocumentation(doc="* split features,sequence from one input to two files")), ToolInput(tag="in_wid", input_type=Boolean(optional=True), prefix="-wid", doc=InputDocumentation(doc="[th]=#            sequence line width")), ToolInput(tag="in_tab", input_type=Boolean(optional=True), prefix="-tab", doc=InputDocumentation(doc="=#                left indent")), ToolInput(tag="in_col", input_type=Boolean(optional=True), prefix="-col", doc=InputDocumentation(doc="[space]=#         column space within sequence line on output")), ToolInput(tag="in_gap", input_type=Boolean(optional=True), prefix="-gap", doc=InputDocumentation(doc="[count]           count gap chars in sequence numbers")), ToolInput(tag="in_name_right", input_type=Boolean(optional=True), prefix="-nameright", doc=InputDocumentation(doc="[=#]   name on left/right side [=max width]")), ToolInput(tag="in_name_top", input_type=Boolean(optional=True), prefix="-nametop", doc=InputDocumentation(doc="name at top/bottom")), ToolInput(tag="in_num_right", input_type=Boolean(optional=True), prefix="-numright", doc=InputDocumentation(doc="seq index on left/right side")), ToolInput(tag="in_num_top", input_type=Boolean(optional=True), prefix="-numtop", doc=InputDocumentation(doc="index on top/bottom")), ToolInput(tag="in_match", input_type=Boolean(optional=True), prefix="-match", doc=InputDocumentation(doc="[=.]            use match base for 2..n species")), ToolInput(tag="in_inter", input_type=Boolean(optional=True), prefix="-inter", doc=InputDocumentation(doc="[line=#]        blank line(s) between sequence blocks")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc="-a[ll]              select All sequences")), ToolInput(tag="in_var_31", input_type=String(), position=0, doc=InputDocumentation(doc="Name             Read  Write  Int'leaf  Features  Sequence  Suffix  Content-type\n1  IG|Stanford      yes    yes        --        --       yes   .ig     biosequence/ig\n2  GenBank|gb       yes    yes        --       yes       yes   .gb     biosequence/genbank\n3  NBRF             yes    yes        --        --       yes   .nbrf   biosequence/nbrf\n4  EMBL|em          yes    yes        --       yes       yes   .embl   biosequence/embl\n5  GCG              yes    yes        --        --       yes   .gcg    biosequence/gcg\n6  DNAStrider       yes    yes        --        --       yes   .strider  biosequence/strider\n7  Fitch             --     --        --        --       yes   .fitch  biosequence/fitch\n8  Pearson|Fasta|fa   yes    yes        --        --       yes   .fasta  biosequence/fasta\n9  Zuker             --     --        --        --       yes   .zuker  biosequence/zuker")), ToolInput(tag="in_var_32", input_type=Int(), position=1, doc=InputDocumentation(doc="Olsen             --     --       yes        --       yes   .olsen  biosequence/olsen")), ToolInput(tag="in_var_33", input_type=Int(), position=2, doc=InputDocumentation(doc="Phylip3.2        yes    yes       yes        --       yes   .phylip2  biosequence/phylip2")), ToolInput(tag="in_var_34", input_type=Int(), position=3, doc=InputDocumentation(doc="Phylip|Phylip4   yes    yes       yes        --       yes   .phylip  biosequence/phylip")), ToolInput(tag="in_var_35", input_type=Int(), position=4, doc=InputDocumentation(doc="Plain|Raw        yes    yes        --        --       yes   .seq    biosequence/plain")), ToolInput(tag="in_var_36", input_type=Int(), position=5, doc=InputDocumentation(doc="PIR|CODATA       yes    yes        --        --       yes   .pir    biosequence/codata")), ToolInput(tag="in_var_37", input_type=Int(), position=6, doc=InputDocumentation(doc="MSF              yes    yes       yes        --       yes   .msf    biosequence/msf")), ToolInput(tag="in_var_38", input_type=Int(), position=7, doc=InputDocumentation(doc="ASN.1             --     --        --        --       yes   .asn    biosequence/asn1")), ToolInput(tag="in_var_39", input_type=Int(), position=8, doc=InputDocumentation(doc="PAUP|NEXUS       yes    yes       yes        --       yes   .nexus  biosequence/nexus")), ToolInput(tag="in_var_40", input_type=Int(), position=9, doc=InputDocumentation(doc="Pretty            --    yes       yes        --       yes   .pretty  biosequence/pretty")), ToolInput(tag="in_var_41", input_type=Int(), position=10, doc=InputDocumentation(doc="XML              yes    yes        --       yes       yes   .xml    biosequence/xml")), ToolInput(tag="in_var_42", input_type=Int(), position=11, doc=InputDocumentation(doc="BLAST            yes     --       yes        --       yes   .blast  biosequence/blast")), ToolInput(tag="in_var_43", input_type=Int(), position=12, doc=InputDocumentation(doc="SCF              yes     --        --        --       yes   .scf    biosequence/scf")), ToolInput(tag="in_var_44", input_type=Int(), position=13, doc=InputDocumentation(doc="Clustal          yes    yes       yes        --       yes   .aln    biosequence/clustal")), ToolInput(tag="in_var_45", input_type=Int(), position=14, doc=InputDocumentation(doc="FlatFeat|FFF     yes    yes        --       yes        --   .fff    biosequence/fff")), ToolInput(tag="in_var_46", input_type=Int(), position=15, doc=InputDocumentation(doc="GFF              yes    yes        --       yes        --   .gff    biosequence/gff")), ToolInput(tag="in_acedb__parsedreadseq", input_type=Int(), position=16, doc=InputDocumentation(doc="ACEDB            yes    yes        --        --       yes   .ace    biosequence/acedb\n(Int'leaf = interleaved format; Features = documentation/features are parsed)\nReadseq version 2.1.30 (12-May-2010)\nRead & reformat biosequences, Java command-line version\nUsage: java -cp readseq.jar run [options] input-file(s)\nFor more details: java -cp readseq.jar help more\nOptions\n-a[ll]              select All sequences\n-c[aselower]        change to lower case\n-C[ASEUPPER]        change to UPPER CASE\n-ch[ecksum]         calculate & print checksum of sequences\n-degap[=-]          remove gap symbols\n-f[ormat=]#         Format number for output,  or\n-f[ormat=]Name      Format name for output\nsee Formats   list below for names and numbers\n-inform[at]=#       input format number,  or\n-inform[at]=Name    input format name.  Assume input data is this format\n-i[tem=2,3,4]       select Item number(s) from several\n-l[ist]             List sequences only\n-o[utput=]out.seq   redirect Output\n-p[ipe]             Pipe (command line, < stdin, > stdout)\n-r[everse]          reverse-complement of input sequence\n-t[ranslate=]io     translate input symbol [i] to output symbol [o]\nuse several -tio to translate several symbols\n-v[erbose]          Verbose progress\n-compare=1          Compare two sequence files, reporting differences (flags=nodoc,noid,nolen,nocrc)\n-amino[translate]   translate dna to amino acids\nDocumentation and Feature Table extraction:\n-feat[ures]=exon,CDS...   extract sequence of selected features\n-nofeat[ures]=repeat_region,intron... remove sequence of selected features\n-field=AC,ID...      include selected document fields in output\n-nofield=COMMENT,... remove selected document fields from output\n-extract=1000..9999  * extract all features, sequence from given base range\n-subrange=-1000..10  * extract subrange of sequence for feature locations\n-subrange=1..end\n-subrange=end-10..end+99\n-pair=1              * combine features (fff,gff) and sequence files to one output\n-unpair=1            * split features,sequence from one input to two files\nPretty format options:\n-wid[th]=#            sequence line width\n-tab=#                left indent\n-col[space]=#         column space within sequence line on output\n-gap[count]           count gap chars in sequence numbers\n-nameleft, -nameright[=#]   name on left/right side [=max width]\n-nametop              name at top/bottom\n-numleft, -numright   seq index on left/right side\n-numtop, -numbot      index on top/bottom\n-match[=.]            use match base for 2..n species\n-inter[line=#]        blank line(s) between sequence blocks")), ToolInput(tag="in_var_48", input_type=String(), position=0, doc=InputDocumentation(doc="Name             Read  Write  Int'leaf  Features  Sequence  Suffix  Content-type\n1  IG|Stanford      yes    yes        --        --       yes   .ig     biosequence/ig\n2  GenBank|gb       yes    yes        --       yes       yes   .gb     biosequence/genbank\n3  NBRF             yes    yes        --        --       yes   .nbrf   biosequence/nbrf\n4  EMBL|em          yes    yes        --       yes       yes   .embl   biosequence/embl\n5  GCG              yes    yes        --        --       yes   .gcg    biosequence/gcg\n6  DNAStrider       yes    yes        --        --       yes   .strider  biosequence/strider\n7  Fitch             --     --        --        --       yes   .fitch  biosequence/fitch\n8  Pearson|Fasta|fa   yes    yes        --        --       yes   .fasta  biosequence/fasta\n9  Zuker             --     --        --        --       yes   .zuker  biosequence/zuker")), ToolInput(tag="in_var_49", input_type=Int(), position=1, doc=InputDocumentation(doc="Olsen             --     --       yes        --       yes   .olsen  biosequence/olsen")), ToolInput(tag="in_var_50", input_type=Int(), position=2, doc=InputDocumentation(doc="Phylip3.2        yes    yes       yes        --       yes   .phylip2  biosequence/phylip2")), ToolInput(tag="in_var_51", input_type=Int(), position=3, doc=InputDocumentation(doc="Phylip|Phylip4   yes    yes       yes        --       yes   .phylip  biosequence/phylip")), ToolInput(tag="in_var_52", input_type=Int(), position=4, doc=InputDocumentation(doc="Plain|Raw        yes    yes        --        --       yes   .seq    biosequence/plain")), ToolInput(tag="in_var_53", input_type=Int(), position=5, doc=InputDocumentation(doc="PIR|CODATA       yes    yes        --        --       yes   .pir    biosequence/codata")), ToolInput(tag="in_var_54", input_type=Int(), position=6, doc=InputDocumentation(doc="MSF              yes    yes       yes        --       yes   .msf    biosequence/msf")), ToolInput(tag="in_var_55", input_type=Int(), position=7, doc=InputDocumentation(doc="ASN.1             --     --        --        --       yes   .asn    biosequence/asn1")), ToolInput(tag="in_var_56", input_type=Int(), position=8, doc=InputDocumentation(doc="PAUP|NEXUS       yes    yes       yes        --       yes   .nexus  biosequence/nexus")), ToolInput(tag="in_var_57", input_type=Int(), position=9, doc=InputDocumentation(doc="Pretty            --    yes       yes        --       yes   .pretty  biosequence/pretty")), ToolInput(tag="in_var_58", input_type=Int(), position=10, doc=InputDocumentation(doc="XML              yes    yes        --       yes       yes   .xml    biosequence/xml")), ToolInput(tag="in_var_59", input_type=Int(), position=11, doc=InputDocumentation(doc="BLAST            yes     --       yes        --       yes   .blast  biosequence/blast")), ToolInput(tag="in_var_60", input_type=Int(), position=12, doc=InputDocumentation(doc="SCF              yes     --        --        --       yes   .scf    biosequence/scf")), ToolInput(tag="in_var_61", input_type=Int(), position=13, doc=InputDocumentation(doc="Clustal          yes    yes       yes        --       yes   .aln    biosequence/clustal")), ToolInput(tag="in_var_62", input_type=Int(), position=14, doc=InputDocumentation(doc="FlatFeat|FFF     yes    yes        --       yes        --   .fff    biosequence/fff")), ToolInput(tag="in_var_63", input_type=Int(), position=15, doc=InputDocumentation(doc="GFF              yes    yes        --       yes        --   .gff    biosequence/gff")), ToolInput(tag="in_features_documentationfeatures_parsed", input_type=Int(), position=16, doc=InputDocumentation(doc="ACEDB            yes    yes        --        --       yes   .ace    biosequence/acedb\n(Int'leaf = interleaved format; Features = documentation/features are parsed)\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Readseq_V0_1_0().translate("wdl", allow_empty_container=True)

