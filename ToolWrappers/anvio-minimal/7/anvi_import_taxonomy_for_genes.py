from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Boolean

Anvi_Import_Taxonomy_For_Genes_V0_1_0 = CommandToolBuilder(tool="anvi_import_taxonomy_for_genes", base_command=["anvi-import-taxonomy-for-genes"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database' (default: None)")), ToolInput(tag="in_parser", input_type=Int(optional=True), prefix="--parser", doc=InputDocumentation(doc="Parser to make sense of the input files. There are 3\nparsers readily available: ['default_matrix',\n'centrifuge', 'kaiju']. It is OK if you do not select\na parser, but in that case there will be no additional\ncontigs available except the identification of single-\ncopy genes in your contigs for later use. Using a\nparser will not prevent the analysis of single-copy\ngenes, but make anvio more powerful to help you make\nsense of your results. Please see the documentation,\nor get in touch with the developers if you have any\nquestions regarding parsers. (default: None)")), ToolInput(tag="in_s_input_files", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="(S) [FILE(S) ...], --input-files FILE(S) [FILE(S) ...]\nInput file(s) for selected parser. Each parser (except\n'blank') requires input files to process that you\ngenerate before running anvio. Please see the\ndocumentation for details. (default: None)")), ToolInput(tag="in_just_do_it", input_type=Boolean(optional=True), prefix="--just-do-it", doc=InputDocumentation(doc="Don't bother me with questions or warnings, just do\nit. (default: False)")), ToolInput(tag="in_gene_taxonomy", input_type=String(), position=0, doc=InputDocumentation(doc="üç∫ More on `anvi-import-taxonomy-for-genes`:"))], outputs=[], container="quay.io/biocontainers/anvio-minimal:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Import_Taxonomy_For_Genes_V0_1_0().translate("wdl")

