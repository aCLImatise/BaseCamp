from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Int, Float

Anvi_Display_Metabolism_V0_1_0 = CommandToolBuilder(tool="anvi_display_metabolism", base_command=["anvi-display-metabolism"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database' (default: None)")), ToolInput(tag="in_meta_genome_mode", input_type=Boolean(optional=True), prefix="--metagenome-mode", doc=InputDocumentation(doc="Treat a given contigs database as a metagenome rather\nthan treating it as a single genome. (default: False)")), ToolInput(tag="in_kegg_data_dir", input_type=File(optional=True), prefix="--kegg-data-dir", doc=InputDocumentation(doc="The directory path for your KEGG setup, which will\ninclude things like KOfam profiles and KEGG MODULE\ndata. Anvi'o will try to use the default path if you\ndo not specify anything. (default: None)")), ToolInput(tag="in_collection_name", input_type=String(optional=True), prefix="--collection-name", doc=InputDocumentation(doc="Collection name. (default: None)")), ToolInput(tag="in_bin_id", input_type=String(optional=True), prefix="--bin-id", doc=InputDocumentation(doc="Bin name you are interested in. (default: None)")), ToolInput(tag="in_bin_ids_file", input_type=File(optional=True), prefix="--bin-ids-file", doc=InputDocumentation(doc="Text file for bins (each line should be a unique bin\nid). (default: None)")), ToolInput(tag="in_module_completion_threshold", input_type=Int(optional=True), prefix="--module-completion-threshold", doc=InputDocumentation(doc="This threshold defines the point at which we consider\na KEGG module to be 'complete' or 'present' in a given\ngenome or bin. It is the fraction of steps that must\nbe complete in in order for the entire module to be\nmarked complete. The default is 0.75.")), ToolInput(tag="in_ip_address", input_type=Float(optional=True), prefix="--ip-address", doc=InputDocumentation(doc="IP address for the HTTP server. The default ip address\n(0.0.0.0) should work just fine for most.")), ToolInput(tag="in_port_number", input_type=Int(optional=True), prefix="--port-number", doc=InputDocumentation(doc="Port number to use for anvi'o services. If nothing is\ndeclared, anvi'o will try to find a suitable port\nnumber, starting from the default port number, 8080.\n(default: None)")), ToolInput(tag="in_browser_path", input_type=File(optional=True), prefix="--browser-path", doc=InputDocumentation(doc="By default, anvi'o will use your default browser to\nlaunch the interactive interface. If you would like to\nuse something else than your system default, you can\nprovide a full path for an alternative browser using\nthis parameter, and hope for the best. For instance we\nare using this parameter to call Google's experimental\nbrowser, Canary, which performs better with demanding\nvisualizations. (default: None)")), ToolInput(tag="in_server_only", input_type=Boolean(optional=True), prefix="--server-only", doc=InputDocumentation(doc="The default behavior is to start the local server, and\nfire up a browser that connects to the server. If you\nhave other plans, and want to start the server without\ncalling the browser, this is the flag you need.\n(default: False)")), ToolInput(tag="in_password_protected", input_type=Boolean(optional=True), prefix="--password-protected", doc=InputDocumentation(doc="If this flag is set, command line tool will ask you to\nenter a password and interactive interface will be\nonly accessible after entering same password. This\noption is recommended for shared machines like\nclusters or shared networks where computers are not\nisolated. (default: False)")), ToolInput(tag="in_respectively_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-p PROFILE_DB, --profile-db PROFILE_DB\nAnvi'o profile database (default: None)")), ToolInput(tag="in_interactive", input_type=String(), position=0, doc=InputDocumentation(doc="üç∫ More on `anvi-display-metabolism`:"))], outputs=[], container="quay.io/biocontainers/anvio-minimal:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Display_Metabolism_V0_1_0().translate("wdl")

