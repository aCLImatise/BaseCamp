from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean

Anvi_Estimate_Genome_Completeness_V0_1_0 = CommandToolBuilder(tool="anvi_estimate_genome_completeness", base_command=["anvi-estimate-genome-completeness"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database' (default: None)")), ToolInput(tag="in_external_genomes", input_type=File(optional=True), prefix="--external-genomes", doc=InputDocumentation(doc="A two-column TAB-delimited flat text file that lists\nanvi'o contigs databases. The first item in the header\nline should read 'name', and the second should read\n'contigs_db_path'. Each line in the file should\ndescribe a single entry, where the first column is the\nname of the genome (or MAG), and the second column is\nthe anvi'o contigs database generated for this genome.\n(default: None)")), ToolInput(tag="in_profile_db", input_type=String(optional=True), prefix="--profile-db", doc=InputDocumentation(doc="Anvi'o profile database (default: None)")), ToolInput(tag="in_collection_name", input_type=String(optional=True), prefix="--collection-name", doc=InputDocumentation(doc="Collection name. (default: None)")), ToolInput(tag="in_list_collections", input_type=Boolean(optional=True), prefix="--list-collections", doc=InputDocumentation(doc="Show available collections and exit. (default: False)")), ToolInput(tag="in_just_do_it", input_type=Boolean(optional=True), prefix="--just-do-it", doc=InputDocumentation(doc="Don't bother me with questions or warnings, just do\nit. (default: False)")), ToolInput(tag="in_concise", input_type=Boolean(optional=True), prefix="--concise", doc=InputDocumentation(doc="Don't be verbose, print less messages whenever\npossible. (default: False)")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="File path to store results. (default: None)")), ToolInput(tag="in_genes", input_type=String(), position=0, doc=InputDocumentation(doc="üßÄ Can consume: ")), ToolInput(tag="in_completion", input_type=String(), position=0, doc=InputDocumentation(doc="üç∫ More on `anvi-estimate-genome-completeness`:"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="File path to store results. (default: None)"))], container="quay.io/biocontainers/anvio-minimal:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Estimate_Genome_Completeness_V0_1_0().translate("wdl")

