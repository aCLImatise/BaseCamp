class: CommandLineTool
id: ../../../anvi_get_sequences_for_gene_calls.cwl
inputs:
- id: in_contigs_db
  doc: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  type: string
  inputBinding:
    prefix: --contigs-db
- id: in_gene_caller_ids
  doc: "Gene caller ids. Multiple of them can be declared\nseparated by a delimiter\
    \ (the default is a comma). In\nanvi-gen-variability-profile, if you declare nothing\n\
    you will get all genes matching your other filtering\ncriteria. In other programs,\
    \ you may get everything,\nnothing, or an error. It really depends on the\nsituation.\
    \ Fortunately, mistakes are cheap, so it's\nworth a try."
  type: string
  inputBinding:
    prefix: --gene-caller-ids
- id: in_delimiter
  doc: "The delimiter to parse multiple input terms. The\ndefault is ','."
  type: string
  inputBinding:
    prefix: --delimiter
- id: in_report_extended_def_lines
  doc: "When declared, the deflines in the resulting FASTA\nfile will contain more\
    \ information."
  type: boolean
  inputBinding:
    prefix: --report-extended-deflines
- id: in_wrap
  doc: "When to wrap sequences when storing them in a FASTA\nfile. The default is\
    \ '120'. A value of '0' would be\nequivalent to 'do not wrap'."
  type: File
  inputBinding:
    prefix: --wrap
- id: in_export_gff_three
  doc: If this is true, the output file will be in GFF3
  type: File
  inputBinding:
    prefix: --export-gff3
- id: in_genomes_storage
  doc: Anvi'o genomes storage file
  type: File
  inputBinding:
    prefix: --genomes-storage
- id: in_genome_names
  doc: "Genome names to 'focus'. You can use this parameter to\nlimit the genomes\
    \ included in your analysis. You can\nprovide these names as a comma-separated\
    \ list of\nnames, or you can put them in a file, where you have a\nsingle genome\
    \ name in each line, and provide the file\npath."
  type: File
  inputBinding:
    prefix: --genome-names
- id: in_output_file
  doc: "File path to store results.\n"
  type: File
  inputBinding:
    prefix: --output-file
- id: in_format_dot
  doc: --get-aa-sequences    Store amino acid sequences instead.
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_export_gff_three
  doc: If this is true, the output file will be in GFF3
  type: File
  outputBinding:
    glob: $(inputs.in_export_gff_three)
- id: out_output_file
  doc: "File path to store results.\n"
  type: File
  outputBinding:
    glob: $(inputs.in_output_file)
cwlVersion: v1.1
baseCommand:
- anvi-get-sequences-for-gene-calls
