class: CommandLineTool
id: anvi_gen_fixation_index_matrix.cwl
inputs:
- id: in_profile_db
  doc: Anvi'o profile database
  type: string?
  inputBinding:
    prefix: --profile-db
- id: in_contigs_db
  doc: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  type: string?
  inputBinding:
    prefix: --contigs-db
- id: in_structure_db
  doc: Anvi'o structure database.
  type: string?
  inputBinding:
    prefix: --structure-db
- id: in_variability_profile
  doc: "The output of anvi-gen-variability-profile, or a\ndifferent variant-calling\
    \ output that has been\nconverted to the anvi'o format."
  type: string?
  inputBinding:
    prefix: --variability-profile
- id: in_collection_name
  doc: Collection name.
  type: string?
  inputBinding:
    prefix: --collection-name
- id: in_bin_id
  doc: Bin name you are interested in.
  type: string?
  inputBinding:
    prefix: --bin-id
- id: in_splits_of_interest
  doc: "A file with split names. There should be only one\ncolumn in the file, and\
    \ each line should correspond to\na unique split name."
  type: File?
  inputBinding:
    prefix: --splits-of-interest
- id: in_genes_of_interest
  doc: "A file with anvi'o gene caller IDs. There should be\nonly one column in the\
    \ file, and each line should\ncorrespond to a unique gene caller id (without a\n\
    column header)."
  type: File?
  inputBinding:
    prefix: --genes-of-interest
- id: in_gene_caller_ids
  doc: "Gene caller ids. Multiple of them can be declared\nseparated by a delimiter\
    \ (the default is a comma). In\nanvi-gen-variability-profile, if you declare nothing\n\
    you will get all genes matching your other filtering\ncriteria. In other programs,\
    \ you may get everything,\nnothing, or an error. It really depends on the\nsituation.\
    \ Fortunately, mistakes are cheap, so it's\nworth a try."
  type: string?
  inputBinding:
    prefix: --gene-caller-ids
- id: in_only_if_structure
  doc: "If provided, your genes of interest will be further\nsubset to only include\
    \ genes with structures in your\nstructure database, and therefore must be supplied\
    \ in\nconjunction with a structure database, i.e. `-s\n<your_structure_database>`.\
    \ If you did not specify\ngenes of interest, ALL genes will be subset to those\n\
    that have structures."
  type: boolean?
  inputBinding:
    prefix: --only-if-structure
- id: in_samples_of_interest
  doc: "A file with samples names. There should be only one\ncolumn in the file, and\
    \ each line should correspond to\na unique sample name (without a column header)."
  type: File?
  inputBinding:
    prefix: --samples-of-interest
- id: in_engine
  doc: Variability engine. The default is 'NT'.
  type: string?
  inputBinding:
    prefix: --engine
- id: in_min_occurrence
  doc: "Minimum number of samples a nucleotide position should\nbe reported as variable.\
    \ Default is 1. If you set it\nto 2, for instance, each eligible variable position\n\
    will be expected to appear in at least two samples,\nwhich will reduce the impact\
    \ of stochastic, or\nunintelligible variable positions."
  type: long?
  inputBinding:
    prefix: --min-occurrence
- id: in_min_coverage_in_each_sample
  doc: "Minimum coverage of a given variable nucleotide\nposition in all samples.\
    \ If a nucleotide position is\ncovered less than this value even in one sample,\
    \ it\nwill be removed from the analysis. Default is 0."
  type: long?
  inputBinding:
    prefix: --min-coverage-in-each-sample
- id: in_output_file
  doc: File path to store results.
  type: File?
  inputBinding:
    prefix: --output-file
- id: in_keep_negatives
  doc: "Negative numbers are theoretically possible, and are\nsometimes interpreted\
    \ as out-breeding. By default, we\nset negative numbers to 0 so the results are\n\
    reflective of a standard distance metric. Provide this\nflag if you would prefer\
    \ otherwise.\n"
  type: boolean?
  inputBinding:
    prefix: --keep-negatives
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_output_file
  doc: File path to store results.
  type: File?
  outputBinding:
    glob: $(inputs.in_output_file)
hints: []
cwlVersion: v1.1
baseCommand:
- anvi-gen-fixation-index-matrix
