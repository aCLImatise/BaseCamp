from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Anvi_Profile_V0_1_0 = CommandToolBuilder(tool="anvi_profile", base_command=["anvi-profile"], inputs=[ToolInput(tag="in_input_file", input_type=File(optional=True), prefix="--input-file", doc=InputDocumentation(doc="Sorted and indexed BAM file to analyze. Takes a long\ntime depending on the length of the file and\nparameters used for profiling.")), ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs'")), ToolInput(tag="in_blank_profile", input_type=Boolean(optional=True), prefix="--blank-profile", doc=InputDocumentation(doc="If you only have contig sequences, but no mapping data\n(i.e., you found a genome and would like to take a\nlook from it), this flag will become very hand. After\ncreating a contigs database for your contigs, you can\ncreate a blank anvi'o profile database to use anvi'o\ninteractive interface with that contigs database\nwithout any mapping data.")), ToolInput(tag="in_output_dir", input_type=File(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Directory path for output files")), ToolInput(tag="in_overwrite_output_destinations", input_type=Boolean(optional=True), prefix="--overwrite-output-destinations", doc=InputDocumentation(doc="Overwrite if the output files and/or directories\nexist.")), ToolInput(tag="in_sample_name", input_type=String(optional=True), prefix="--sample-name", doc=InputDocumentation(doc="It is important to set a sample name (using only ASCII\nletters and digits and without spaces) that is unique\n(considering all others). If you do not provide one,\nanvi'o will try to make up one for you based on other\ninformation, although, you should never let the\nsoftware to decide these things).")), ToolInput(tag="in_report_variability_full", input_type=Boolean(optional=True), prefix="--report-variability-full", doc=InputDocumentation(doc="One of the things anvi-profile does is to store\ninformation about variable nucleotide positions.\nUsually it does not report every variable position,\nsince not every variable position is genuine\nvariation. Say, if you have 1,000 coverage, and all\nnucleotides at that position are Ts and only one of\nthem is a C, the confidence of that C being a real\nvariation is quite low. anvi'o has a simple algorithm\nin place to reduce the impact of noise. However, using\nthis flag you can disable it and ask profiler to\nreport every single variation (which may result in\nvery large output files and millions of reports, but\nyou are the boss). Do not forget to take a look at '--\nmin-coverage-for-variability' parameter")), ToolInput(tag="in_skip_snv_profiling", input_type=Boolean(optional=True), prefix="--skip-SNV-profiling", doc=InputDocumentation(doc="By default, anvi'o characterizes single-nucleotide\nvariation in each sample. The use of this flag will\ninstruct profiler to skip that step. Please remember\nthat parameters and flags must be identical between\ndifferent profiles using the same contigs database for\nthem to merge properly.")), ToolInput(tag="in_profile_s_cvs", input_type=Boolean(optional=True), prefix="--profile-SCVs", doc=InputDocumentation(doc="Anvi'o can perform accurate characterization of codon\nfrequencies in genes during profiling. While having\ncodon frequencies opens doors to powerful evolutionary\ninsights in downstream analyses, due to its\ncomputational complexity, this feature comes 'off' by\ndefault. Using this flag you can rise against the\nauthority, as you always should, and make anvi'o\nprofile codons.")), ToolInput(tag="in_description", input_type=File(optional=True), prefix="--description", doc=InputDocumentation(doc="A plain text file that contains some description about\nthe project. You can use Markdwon syntax. The\ndescription text will be rendered and shown in all\nrelevant interfaces, including the anvi'o interactive\ninterface, or anvi'o summary outputs.")), ToolInput(tag="in_cluster_contigs", input_type=Boolean(optional=True), prefix="--cluster-contigs", doc=InputDocumentation(doc="Single profiles are rarely used for genome binning or\nvisualization, and since clustering step increases the\nprofiling runtime for no good reason, the default\nbehavior is to not cluster contigs for individual\nruns. However, if you are planning to do binning on\none sample, you must use this flag to tell anvi'o to\nrun cluster configurations for single runs on your\nsample.")), ToolInput(tag="in_skip_hierarchical_clustering", input_type=Boolean(optional=True), prefix="--skip-hierarchical-clustering", doc=InputDocumentation(doc="If you are not planning to use the interactive\ninterface (or if you have other means to add a tree of\ncontigs in the database) you may skip the step where\nhierarchical clustering of your items are preformed\nbased on default clustering recipes matching to your\ndatabase type.")), ToolInput(tag="in_distance", input_type=String(optional=True), prefix="--distance", doc=InputDocumentation(doc="The distance metric for the hierarchical clustering.\nOnly relevant if you are using `--cluster-contigs`\nflag. The default is 'euclidean'.")), ToolInput(tag="in_linkage", input_type=String(optional=True), prefix="--linkage", doc=InputDocumentation(doc="The linkage method for the hierarchical clustering.\nJust like the distance metric this is only relevant if\nyou are using it with `--cluster-contigs` flag. The\ndefault is 'ward'.")), ToolInput(tag="in_min_contig_length", input_type=Int(optional=True), prefix="--min-contig-length", doc=InputDocumentation(doc="Minimum length of contigs in a BAM file to analyze.\nThe minimum length should be long enough for tetra-\nnucleotide frequency analysis to be meaningful. There\nis no way to define a golden number of minimum length\nthat would be applicable to genomes found in all\nenvironments, but we chose the default to be 1000, and\nhave been happy with it. You are welcome to\nexperiment, but we advise to never go below 1,000. You\nalso should remember that the lower you go, the more\ntime it will take to analyze all contigs. You can use\n--list-contigs parameter to have an idea how many\ncontigs would be discarded for a given M.")), ToolInput(tag="in_max_contig_length", input_type=Int(optional=True), prefix="--max-contig-length", doc=InputDocumentation(doc="Just like the minimum contig length parameter, but to\nset a maximum. Basically this will remove any contig\nlonger than a certain value. Why would anyone need\nthis? Who knows. But if you ever do, it is here.")), ToolInput(tag="in_min_mean_coverage", input_type=Int(optional=True), prefix="--min-mean-coverage", doc=InputDocumentation(doc="Minimum mean coverage for contigs to be kept in the\nanalysis. The default value is 0, which is for your\nbest interest if you are going to profile multiple BAM\nfiles which are then going to be merged for a cross-\nsectional or time series analysis. Do not change it if\nyou are not sure this is what you want to do.")), ToolInput(tag="in_min_coverage_for_variability", input_type=Int(optional=True), prefix="--min-coverage-for-variability", doc=InputDocumentation(doc="Minimum coverage of a nucleotide position to be\nsubjected to SNV profiling. By default, anvi'o will\nnot attempt to make sense of variation in a given\nnucleotide position if it is covered less than 10X.\nYou can change that minimum using this parameter.")), ToolInput(tag="in_list_contigs", input_type=Boolean(optional=True), prefix="--list-contigs", doc=InputDocumentation(doc="When declared, the program will list contigs in the\nBAM file and exit gracefully without any further\nanalysis.")), ToolInput(tag="in_contigs_of_interest", input_type=File(optional=True), prefix="--contigs-of-interest", doc=InputDocumentation(doc="It is possible to analyze only a group of contigs from\na given BAM file. If you provide a text file, in which\nevery contig of interest is listed line by line, the\nprofiler would engine only on those contigs in the BAM\nfile and ignore the rest. This can be used for\ndebugging purposes, or to engine on a particular group\nof contigs that were identified as relevant during the\ninteractive analysis.")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="Maximum number of threads to use for multithreading\nwhenever possible. Very conservatively, the default is\n1. It is a good idea to not exceed the number of CPUs\n/ cores on your system. Plus, please be careful with\nthis option if you are running your commands on a SGE\n--if you are clusterizing your runs, and asking for\nmultiple threads to use, you may deplete your\nresources very fast.")), ToolInput(tag="in_queue_size", input_type=Int(optional=True), prefix="--queue-size", doc=InputDocumentation(doc="The queue size for worker threads to store data to\ncommunicate to the main thread. The default is set by\nthe class based on the number of threads. If you have\n*any* hesitation about whether you know what you are\ndoing, you should not change this value.")), ToolInput(tag="in_write_buffer_size_per_thread", input_type=Int(optional=True), prefix="--write-buffer-size-per-thread", doc=InputDocumentation(doc="How many items should be kept in memory before they\nare written do the disk. The default is 500 per\nthread. So a single-threaded job would have a write\nbuffer size of 500, whereas a job with 4 threads would\nhave a write buffer size of 4*500. The larger the\nbuffer size, the less frequent the program will access\nto the disk, yet the more memory will be consumed\nsince the processed items will be cleared off the\nmemory only after they are written to the disk. The\ndefault buffer size will likely work for most cases.\nPlease keep an eye on the memory usage output to make\nsure the memory use never exceeds the size of the\nphysical memory.")), ToolInput(tag="in_force_multi", input_type=Boolean(optional=True), prefix="--force-multi", doc=InputDocumentation(doc="This is not useful to non-developers. It forces the\nmulti-process routine even when 1 thread is chosen.\n"))], outputs=[ToolOutput(tag="out_output_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Directory path for output files"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Profile_V0_1_0().translate("wdl", allow_empty_container=True)

