!Command
command:
- anvi-get-sequences-for-hmm-hits
positional: []
named:
- !Flag
  description: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: Anvi'o profile database
  synonyms:
  - -p
  - --profile-db
  args: !SimpleFlagArg
    name: PROFILE_DB
  optional: true
- !Flag
  description: Collection name.
  synonyms:
  - -C
  - --collection-name
  args: !SimpleFlagArg
    name: COLLECTION_NAME
  optional: true
- !Flag
  description: Bin name you are interested in.
  synonyms:
  - -b
  - --bin-id
  args: !SimpleFlagArg
    name: BIN_NAME
  optional: true
- !Flag
  description: "Text file for bins (each line should be a unique bin\nid)."
  synonyms:
  - -B
  - --bin-ids-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: "A two-column TAB-delimited flat text file that lists\nanvi'o contigs\
    \ databases. The first item in the header\nline should read 'name', and the second\
    \ should read\n'contigs_db_path'. Each line in the file should\ndescribe a single\
    \ entry, where the first column is the\nname of the genome (or MAG), and the second\
    \ column is\nthe anvi'o contigs database generated for this genome."
  synonyms:
  - -e
  - --external-genomes
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: "A five-column TAB-delimited flat text file. The header\nline must\
    \ contain these columns: 'name', 'bin_id',\n'collection_id', 'profile_db_path',\
    \ 'contigs_db_path'.\nEach line should list a single entry, where 'name' can\n\
    be any name to describe the anvi'o bin identified as\n'bin_id' that is stored\
    \ in a collection."
  synonyms:
  - -i
  - --internal-genomes
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: "NAME\nGet sequences for a specific list of HMM sources. You\ncan list\
    \ one or more sources by separating them from\neach other with a comma character\
    \ (i.e., '--hmm-\nsources source_1,source_2,source_3'). If you would\nlike to\
    \ see a list of available sources in the contigs\ndatabase, run this program with\
    \ '--list-hmm-sources'\nflag."
  synonyms:
  - --hmm-sources
  args: !SimpleFlagArg
    name: SOURCE
  optional: true
- !Flag
  description: "HIT NAME\nGet sequences only for a specific gene name. Each name\n\
    should be separated from each other by a comma\ncharacter. For instance, if you\
    \ want to get back only\nRecA and Ribosomal_L27, you can type '--gene-names\n\
    RecA,Ribosomal_L27', and you will get any and every\nhit that matches these names\
    \ in any source. If you\nwould like to see a list of available gene names, you\n\
    can use '--list-available-gene-names' flag."
  synonyms:
  - --gene-names
  args: !SimpleFlagArg
    name: HMM
  optional: true
- !Flag
  description: "List available HMM sources in the contigs database and\nquit."
  synonyms:
  - -l
  - --list-hmm-sources
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "List available gene names in HMM sources selection and\nquit."
  synonyms:
  - -L
  - --list-available-gene-names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: File path to store results.
  synonyms:
  - -o
  - --output-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: Do not be wrap sequences nicely in the output file.
  synonyms:
  - --no-wrap
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Store amino acid sequences instead.
  synonyms:
  - --get-aa-sequences
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Concatenate output genes in the same order to create a\nmulti-gene\
    \ alignment output that is suitable for\nphylogenomic analyses."
  synonyms:
  - --concatenate-genes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Some commonly used software for phylogenetic analyses\n(e.g., IQ-TREE,\
    \ RAxML, etc) allow users to\nspecify/test different substitution models for each\n\
    gene of a concatenated multiple sequence alignments.\nFor this, they use a special\
    \ file format called a\n'partition file', which indicates the site for each\n\
    gene in the alignment. You can use this parameter to\ndeclare an output path for\
    \ anvi'o to report a NEXUS\nformat partition file in addition to your FASTA output\n\
    (requested by Massimiliano Molari in #1333)."
  synonyms:
  - --partition-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: "This filter removes bins (or genomes) from your\nanalysis. If you\
    \ have a list of gene names, you can\nuse this parameter to omit any bin (or external\n\
    genome) that is missing more than a number of genes\nyou desire. For instance,\
    \ if you have 100 genome bins,\nand you are interested in working with 5 ribosomal\n\
    proteins, you can use '--max-num-genes-missing-from-\nbin 4' to remove the bins\
    \ that are missing more than 4\nof those 5 genes. This is especially useful for\n\
    phylogenomic analyses. Parameter 0 will remove any bin\nthat is missing any of\
    \ the genes."
  synonyms:
  - --max-num-genes-missing-from-bin
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: "This filter removes genes from your analysis. Let's\nassume you have\
    \ 100 bins to get sequences for HMM\nhits. If you want to work only with genes\
    \ among all\nthe hits that occur in at least X number of bins, and\ndiscard the\
    \ rest of them, you can use this flag. If\nyou say '--min-num-bins-gene-occurs\
    \ 90', each gene in\nthe analysis will be required at least to appear in 90\n\
    genomes. If a gene occurs in less than that number of\ngenomes, it simply will\
    \ not be reported. This is\nespecially useful for phylogenomic analyses, where\
    \ you\nmay want to only focus on genes that are prevalent\nacross the set of genomes\
    \ you wish to analyze."
  synonyms:
  - --min-num-bins-gene-occurs
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: "The multiple sequence alignment program to use when\nmultiple sequence\
    \ alignment is necessary. To see all\navailable options, use the flag `--list-aligners`."
  synonyms:
  - --align-with
  args: !SimpleFlagArg
    name: ALIGNER
  optional: true
- !Flag
  description: "A word that will be used to sepaate concatenated gene\nsequences from\
    \ each other (IF you are using this\nprogram with `--concatenate-genes` flag).\
    \ The default\nis \"XXX\" for amino acid sequences, and \"NNN\" for DNA\nsequences"
  synonyms:
  - --separator
  args: !SimpleFlagArg
    name: STRING
  optional: true
- !Flag
  description: "A bin may contain more than one hit for a gene name in\na given HMM\
    \ source. For instance, there may be\nmultiple RecA hits in a genome bin from\
    \ Campbell et\nal.. Using this flag, will go through all of the gene\nnames that\
    \ appear multiple times, and remove all but\nthe one with the lowest e-value.\
    \ Good for whenever you\nreally need to get only a single copy of single-copy\n\
    core genes from a genome bin."
  synonyms:
  - --return-best-hit
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Don't bother me with questions or warnings, just do\nit.\n"
  synonyms:
  - --just-do-it
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-get-sequences-for-hmm-hits [-h] [-c CONTIGS_DB] [-p PROFILE_DB]\n\
  \                                       [-C COLLECTION_NAME] [-b BIN_NAME]\n   \
  \                                    [-B FILE_PATH] [-e FILE_PATH]\n           \
  \                            [-i FILE_PATH]\n                                  \
  \     [--hmm-sources SOURCE NAME]\n                                       [--gene-names\
  \ HMM HIT NAME] [-l] [-L]\n                                       [-o FILE_PATH]\
  \ [--no-wrap]\n                                       [--get-aa-sequences]\n   \
  \                                    [--concatenate-genes]\n                   \
  \                    [--partition-file FILE_PATH]\n                            \
  \           [--max-num-genes-missing-from-bin INTEGER]\n                       \
  \                [--min-num-bins-gene-occurs INTEGER]\n                        \
  \               [--align-with ALIGNER]\n                                       [--separator\
  \ STRING]\n                                       [--return-best-hit] [--just-do-it]\n\
  \nGet sequences for HMM hits from many inputs to study phylogenomics.\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n\nINPUT OPTION\
  \ #1: CONTIGS DB:\n  There are multiple ways to access to sequences. Your first\
  \ option is to\n  provide a contigs database, and call it a day. In this case the\
  \ program\n  will return you everything from it.\n\n  -c CONTIGS_DB, --contigs-db\
  \ CONTIGS_DB\n                        Anvi'o contigs database generated by 'anvi-gen-\n\
  \                        contigs'\n\nINPUT OPTION #2: CONTIGS DB + PROFLIE DB:\n\
  \  You can also work with anvi'o profile databases and collections stored in\n \
  \ them. If you go this way, you still will need to provide a contigs\n  database.\
  \ If you just specify a collection name, you will get hits from\n  every bin in\
  \ it. You can also use the bin name or bin ids file parameters\n  to specify your\
  \ interest more precisely.\n\n  -p PROFILE_DB, --profile-db PROFILE_DB\n       \
  \                 Anvi'o profile database\n  -C COLLECTION_NAME, --collection-name\
  \ COLLECTION_NAME\n                        Collection name.\n  -b BIN_NAME, --bin-id\
  \ BIN_NAME\n                        Bin name you are interested in.\n  -B FILE_PATH,\
  \ --bin-ids-file FILE_PATH\n                        Text file for bins (each line\
  \ should be a unique bin\n                        id).\n\nINPUT OPTION #3: INT/EXTERNAL\
  \ GENOMES FILE:\n  Yes. You can alternatively use as input an internal or external\
  \ genomes\n  file, or both of them together. If you have multiple contigs databases\n\
  \  without any profile database, you can use the external genomes file. So if\n\
  \  you just have a bunch of FASTA files and nothing else, this is what you\n  need.\
  \ In contrast, if you want to access to genes in bins described in\n  collections\
  \ stored in anvi'o profile databases, then you can use internal\n  genomes file\
  \ route. Or you can mix the two, because why not. There is not\n  much room for\
  \ excuses here.\n\n  -e FILE_PATH, --external-genomes FILE_PATH\n              \
  \          A two-column TAB-delimited flat text file that lists\n              \
  \          anvi'o contigs databases. The first item in the header\n            \
  \            line should read 'name', and the second should read\n             \
  \           'contigs_db_path'. Each line in the file should\n                  \
  \      describe a single entry, where the first column is the\n                \
  \        name of the genome (or MAG), and the second column is\n               \
  \         the anvi'o contigs database generated for this genome.\n  -i FILE_PATH,\
  \ --internal-genomes FILE_PATH\n                        A five-column TAB-delimited\
  \ flat text file. The header\n                        line must contain these columns:\
  \ 'name', 'bin_id',\n                        'collection_id', 'profile_db_path',\
  \ 'contigs_db_path'.\n                        Each line should list a single entry,\
  \ where 'name' can\n                        be any name to describe the anvi'o bin\
  \ identified as\n                        'bin_id' that is stored in a collection.\n\
  \nHMM STUFF:\n  This is where you can specify an HMM source, and/or a list of genes\
  \ to\n  filter your results.\n\n  --hmm-sources SOURCE NAME\n                  \
  \      Get sequences for a specific list of HMM sources. You\n                 \
  \       can list one or more sources by separating them from\n                 \
  \       each other with a comma character (i.e., '--hmm-\n                     \
  \   sources source_1,source_2,source_3'). If you would\n                       \
  \ like to see a list of available sources in the contigs\n                     \
  \   database, run this program with '--list-hmm-sources'\n                     \
  \   flag.\n  --gene-names HMM HIT NAME\n                        Get sequences only\
  \ for a specific gene name. Each name\n                        should be separated\
  \ from each other by a comma\n                        character. For instance, if\
  \ you want to get back only\n                        RecA and Ribosomal_L27, you\
  \ can type '--gene-names\n                        RecA,Ribosomal_L27', and you will\
  \ get any and every\n                        hit that matches these names in any\
  \ source. If you\n                        would like to see a list of available\
  \ gene names, you\n                        can use '--list-available-gene-names'\
  \ flag.\n  -l, --list-hmm-sources\n                        List available HMM sources\
  \ in the contigs database and\n                        quit.\n  -L, --list-available-gene-names\n\
  \                        List available gene names in HMM sources selection and\n\
  \                        quit.\n\nTHE OUTPUT:\n  Where should the output go. It\
  \ will be a FASTA file, and you better give\n  it a nice name..\n\n  -o FILE_PATH,\
  \ --output-file FILE_PATH\n                        File path to store results.\n\
  \  --no-wrap             Do not be wrap sequences nicely in the output file.\n\n\
  THE ALPHABET:\n  The sequences are reported in DNA alphabet, but you can also get\
  \ them\n  translated just like all the other cool kids.\n\n  --get-aa-sequences\
  \    Store amino acid sequences instead.\n\nPHYLOGENOMICS? K!:\n  If you want, you\
  \ can get your sequences concatanated. In this case anwi'o\n  will use muscle to\
  \ align every homolog, and concatenate them the order you\n  specified using the\
  \ `gene-names` argument. Each concatenated sequence will\n  be separated from the\
  \ other ones by the `separator`.\n\n  --concatenate-genes   Concatenate output genes\
  \ in the same order to create a\n                        multi-gene alignment output\
  \ that is suitable for\n                        phylogenomic analyses.\n  --partition-file\
  \ FILE_PATH\n                        Some commonly used software for phylogenetic\
  \ analyses\n                        (e.g., IQ-TREE, RAxML, etc) allow users to\n\
  \                        specify/test different substitution models for each\n \
  \                       gene of a concatenated multiple sequence alignments.\n \
  \                       For this, they use a special file format called a\n    \
  \                    'partition file', which indicates the site for each\n     \
  \                   gene in the alignment. You can use this parameter to\n     \
  \                   declare an output path for anvi'o to report a NEXUS\n      \
  \                  format partition file in addition to your FASTA output\n    \
  \                    (requested by Massimiliano Molari in #1333).\n  --max-num-genes-missing-from-bin\
  \ INTEGER\n                        This filter removes bins (or genomes) from your\n\
  \                        analysis. If you have a list of gene names, you can\n \
  \                       use this parameter to omit any bin (or external\n      \
  \                  genome) that is missing more than a number of genes\n       \
  \                 you desire. For instance, if you have 100 genome bins,\n     \
  \                   and you are interested in working with 5 ribosomal\n       \
  \                 proteins, you can use '--max-num-genes-missing-from-\n       \
  \                 bin 4' to remove the bins that are missing more than 4\n     \
  \                   of those 5 genes. This is especially useful for\n          \
  \              phylogenomic analyses. Parameter 0 will remove any bin\n        \
  \                that is missing any of the genes.\n  --min-num-bins-gene-occurs\
  \ INTEGER\n                        This filter removes genes from your analysis.\
  \ Let's\n                        assume you have 100 bins to get sequences for HMM\n\
  \                        hits. If you want to work only with genes among all\n \
  \                       the hits that occur in at least X number of bins, and\n\
  \                        discard the rest of them, you can use this flag. If\n \
  \                       you say '--min-num-bins-gene-occurs 90', each gene in\n\
  \                        the analysis will be required at least to appear in 90\n\
  \                        genomes. If a gene occurs in less than that number of\n\
  \                        genomes, it simply will not be reported. This is\n    \
  \                    especially useful for phylogenomic analyses, where you\n  \
  \                      may want to only focus on genes that are prevalent\n    \
  \                    across the set of genomes you wish to analyze.\n  --align-with\
  \ ALIGNER  The multiple sequence alignment program to use when\n               \
  \         multiple sequence alignment is necessary. To see all\n               \
  \         available options, use the flag `--list-aligners`.\n  --separator STRING\
  \    A word that will be used to sepaate concatenated gene\n                   \
  \     sequences from each other (IF you are using this\n                       \
  \ program with `--concatenate-genes` flag). The default\n                      \
  \  is \"XXX\" for amino acid sequences, and \"NNN\" for DNA\n                  \
  \      sequences\n\nOPTIONAL:\n  Everything is optional, but some options are more\
  \ optional than others.\n\n  --return-best-hit     A bin may contain more than one\
  \ hit for a gene name in\n                        a given HMM source. For instance,\
  \ there may be\n                        multiple RecA hits in a genome bin from\
  \ Campbell et\n                        al.. Using this flag, will go through all\
  \ of the gene\n                        names that appear multiple times, and remove\
  \ all but\n                        the one with the lowest e-value. Good for whenever\
  \ you\n                        really need to get only a single copy of single-copy\n\
  \                        core genes from a genome bin.\n  --just-do-it         \
  \ Don't bother me with questions or warnings, just do\n                        it.\n"
generated_using:
- --help
