!Command
command:
- anvi-get-codon-frequencies
positional: []
named:
- !Flag
  description: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: "OK. You can declare a single gene caller ID if you\nwish, in which\
    \ case anvi'o would only return results\nfor a single gene call. If you don't\
    \ declare anything,\nwell, you must be prepared to brace yourself if you\nare\
    \ working with a very large contigs database with\nhundreds of thousands of genes."
  synonyms:
  - --gene-caller-id
  args: !SimpleFlagArg
    name: GENE_CALLER_ID
  optional: true
- !Flag
  description: "By default, anvi'o will return codon frequencies (as\nthe name suggests),\
    \ but you can ask for amino acid\nfrequencies instead, simply because you always\
    \ need\nmore data and more stuff. You're lucky this time, but\nis there an end\
    \ to this? Will you ever be satisfied\nwith what you have? Anvi'o needs answers."
  synonyms:
  - --return-AA-frequencies-instead
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: File path to store results.
  synonyms:
  - -o
  - --output-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: "Instead of actual counts, report percent-normalized\nfrequencies per\
    \ gene (because you are too lazy to do\nthings the proper way in R)."
  synonyms:
  - --percent-normalize
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "This is a flag to percent normalize codon frequenies\nwithin those\
    \ that encode for the same amino acid. It\nis different from the flag --percent-normalize,\
    \ since\nit does not percent normalize frequencies of codons\nwithin a gene based\
    \ on all codon frequencies. Clearly\nthis flag is not applicable if you wish to\
    \ work with\nboring amino acids. WHO WORKS WITH AMINO ACIDS\nANYWAYS.\n"
  synonyms:
  - --merens-codon-normalization
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-get-codon-frequencies [-h] -c CONTIGS_DB\n               \
  \                   [--gene-caller-id GENE_CALLER_ID]\n                        \
  \          [--return-AA-frequencies-instead] -o\n                              \
  \    FILE_PATH [--percent-normalize]\n                                  [--merens-codon-normalization]\n\
  \nGet amino acid or codon frequencies of genes in a contigs database.\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n\nINPUT DATABASE:\n\
  \  The contigs database. Clearly those genes must be read from somewhere.\n\n  -c\
  \ CONTIGS_DB, --contigs-db CONTIGS_DB\n                        Anvi'o contigs database\
  \ generated by 'anvi-gen-\n                        contigs'\n\nOPTIONALS:\n  Important\
  \ things to read never end. Stupid science.\n\n  --gene-caller-id GENE_CALLER_ID\n\
  \                        OK. You can declare a single gene caller ID if you\n  \
  \                      wish, in which case anvi'o would only return results\n  \
  \                      for a single gene call. If you don't declare anything,\n\
  \                        well, you must be prepared to brace yourself if you\n \
  \                       are working with a very large contigs database with\n  \
  \                      hundreds of thousands of genes.\n  --return-AA-frequencies-instead\n\
  \                        By default, anvi'o will return codon frequencies (as\n\
  \                        the name suggests), but you can ask for amino acid\n  \
  \                      frequencies instead, simply because you always need\n   \
  \                     more data and more stuff. You're lucky this time, but\n  \
  \                      is there an end to this? Will you ever be satisfied\n   \
  \                     with what you have? Anvi'o needs answers.\n  -o FILE_PATH,\
  \ --output-file FILE_PATH\n                        File path to store results.\n\
  \  --percent-normalize   Instead of actual counts, report percent-normalized\n \
  \                       frequencies per gene (because you are too lazy to do\n \
  \                       things the proper way in R).\n  --merens-codon-normalization\n\
  \                        This is a flag to percent normalize codon frequenies\n\
  \                        within those that encode for the same amino acid. It\n\
  \                        is different from the flag --percent-normalize, since\n\
  \                        it does not percent normalize frequencies of codons\n \
  \                       within a gene based on all codon frequencies. Clearly\n\
  \                        this flag is not applicable if you wish to work with\n\
  \                        boring amino acids. WHO WORKS WITH AMINO ACIDS\n      \
  \                  ANYWAYS.\n"
generated_using:
- --help
