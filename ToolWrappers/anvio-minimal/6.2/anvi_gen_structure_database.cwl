class: CommandLineTool
id: anvi_gen_structure_database.cwl
inputs:
- id: in_contigs_db
  doc: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  type: string
  inputBinding:
    prefix: --contigs-db
- id: in_pdb_db
  doc: "By default, this program accesses the structure files\nit needs from an internal\
    \ anvi'o database that can be\nset up with anvi-setup-pdb-database. If a required\n\
    structure is not in this database, it will instead be\ndownloaded from the RCSB\
    \ PDB server. This parameter\nexists only if a) you created a database and b)\
    \ it\nexists in a custom location. In this case, please\nprovide that path here.\
    \ Otherwise we vibing."
  type: File
  inputBinding:
    prefix: --pdb-db
- id: in_genes_of_interest
  doc: "A file with anvi'o gene caller IDs. There should be\nonly one column in the\
    \ file, and each line should\ncorrespond to a unique gene caller id (without a\n\
    column header)."
  type: File
  inputBinding:
    prefix: --genes-of-interest
- id: in_gene_caller_ids
  doc: "Gene caller ids. Multiple of them can be declared\nseparated by a delimiter\
    \ (the default is a comma). In\nanvi-gen-variability-profile, if you declare nothing\n\
    you will get all genes matching your other filtering\ncriteria. In other programs,\
    \ you may get everything,\nnothing, or an error. It really depends on the\nsituation.\
    \ Fortunately, mistakes are cheap, so it's\nworth a try."
  type: string
  inputBinding:
    prefix: --gene-caller-ids
- id: in_output_db_path
  doc: Output file path for the new database.
  type: File
  inputBinding:
    prefix: --output-db-path
- id: in_dump_dir
  doc: "Modeling and annotating structures requires a lot of\nmoving parts, each which\
    \ have their own outputs. The\noutput of this program is a structure database\n\
    containing the pertinent results of this computation,\nhowever a lot of stuff\
    \ doesn't make the cut. By\nproviding a directory for this parameter you will\
    \ get,\nin addition to the structure database, a directory\ncontaining the raw\
    \ output for everything."
  type: Directory
  inputBinding:
    prefix: --dump-dir
- id: in_num_models
  doc: "This parameter determines the number of predicted\nstructures that are solved\
    \ for a given protein. The\noriginal atomic positions for each model are perturbed\n\
    by an amount defined by --deviation, which leads to\ndifferences between each\
    \ model. Therefore, whichever\nof the N models is chosen to be the \"best\" model\
    \ is\nmore likely to be accurate when --num-models is high,\nsince more of the\
    \ solution space is searched. It\nshould be kept in mind that the largest determinant\
    \ of\na model's accuracy is determined by the protein\ntemplates used, so no need\
    \ to go overboard with an\nexcessively large --num-models. The default is 1."
  type: long
  inputBinding:
    prefix: --num-models
- id: in_deviation
  doc: Deviation (angstroms)
  type: string
  inputBinding:
    prefix: --deviation
- id: in_modeller_database
  doc: "Which database do you want to search the structures\nof? Default is \"pdb_95\"\
    . If you have your own database\nit must have either the extension .bin or .pir.\
    \ If you\ndon't have a database or don't know what this means,\ndon't worry, we\
    \ will both inform you and take care of\nyou."
  type: long
  inputBinding:
    prefix: --modeller-database
- id: in_scoring_method
  doc: "How should the best model be decided? The metric used\ncould be any of GA341_score,\
    \ DOPE_score, and molpdf.\nGA341 is an absolute measure, where a good model will\n\
    have a score near 1.0, whereas anything below 0.6 can\nbe considered bad. DOPE\
    \ and molpdf scores are relative\nenergy measures, where lower scores are better.\
    \ DOPE\nhas been generally shown to be a better distinguisher\nbetween good and\
    \ bad models than molpdf. By default,\nDOPE is used. To learn more see the MODELLER\
    \ tutorial:\nhttps://salilab.org/modeller/tutorial/basic.html."
  type: double
  inputBinding:
    prefix: --scoring-method
- id: in_very_fast
  doc: "If provided, a very fast optimization is done for each\nmodel at the cost\
    \ of accuracy. It is recommended to\nuse a --num-models of 1, since the optimization\
    \ is so\ncrude that all models will likely converge to the same\nsolution."
  type: boolean
  inputBinding:
    prefix: --very-fast
- id: in_percent_identical_cut_off
  doc: "If a protein in the database has a proper percent\nidentity to the gene of\
    \ interest that is greater than\nor equal to --percent-identical-cutoff, then\
    \ it is\nused as a template. Otherwise it is not. Here we\ndefine proper percent\
    \ identity as the percentage of\namino acids in the gene of interest that are\
    \ identical\nto an entry in the database given the sequence length\nof the gene\
    \ of interest. For example, if there is 100%\nidentity between the gene of interest\
    \ and the template\nover the length of the alignment, but the alignment\nlength\
    \ is only half of the gene of interest sequence\nlength, then the proper percent\
    \ identical is 50%.\n(This helps us avoid the inflation of identity scores\ndue\
    \ to only partially good matches). The default is\n30."
  type: long
  inputBinding:
    prefix: --percent-identical-cutoff
- id: in_max_number_templates
  doc: "Generally speaking it is best to use as many templates\nas possible given\
    \ that they have high proper percent\nidentity to the gene of interest. Taken\
    \ from https://s\nalilab.org/modeller/methenz/andras/node4.html: 'The\nuse of\
    \ several templates generally increases the model\naccuracy. One strength of MODELLER\
    \ is that it can\ncombine information from multiple template structures,\nin two\
    \ ways. First, multiple template structures may\nbe aligned with different domains\
    \ of the target, with\nlittle overlap between them, in which case the\nmodeling\
    \ procedure can construct a homology-based\nmodel of the whole target sequence.\
    \ Second, the\ntemplate structures may be aligned with the same part\nof the target,\
    \ in which case the modeling procedure is\nlikely to automatically build the model\
    \ on the locally\nbest template [43,44]. In general, it is frequently\nbeneficial\
    \ to include in the modeling process all the\ntemplates that differ substantially\
    \ from each other,\nif they share approximately the same overall\nsimilarity to\
    \ the target sequence.' The default is 5."
  type: long
  inputBinding:
    prefix: --max-number-templates
- id: in_skip_dssp
  doc: "Dictionary of Secondary Structure of Proteins (DSSP)\nis a program that takes\
    \ as its input a protein\nstructure file and outputs predicted secondary\nstructure\
    \ (alpha helix, beta strand, etc.), measures\nof solvent accessibility, and hydrogen\
    \ bonds for each\nresidue in the protein. If for some reason you don't\nwant this,\
    \ provide this flag."
  type: boolean
  inputBinding:
    prefix: --skip-DSSP
- id: in_modeller_executable
  doc: "The MODELLER program to use. For example, `mod9.19`.\nAnvi'o will try and\
    \ find it if not provided"
  type: double
  inputBinding:
    prefix: --modeller-executable
- id: in_offline_mode
  doc: "Anvi'o first tries to obtain template structures from\na database (see --pdb-db\
    \ for details). If the\nrequested template does not exist in the database, its\n\
    structure will be downloaded from the RCSB PDB server.\nHowever, if you don't\
    \ have access to internet, or hate\nthe RCSB PDB, provide this flag so that all\
    \ operations\nof this program remain offline. If the template\nstructure is not\
    \ in the database, then no template\nstructure for you."
  type: boolean
  inputBinding:
    prefix: --offline-mode
- id: in_num_threads
  doc: "Maximum number of threads to use for multithreading\nwhenever possible. Very\
    \ conservatively, the default is\n1. It is a good idea to not exceed the number\
    \ of CPUs\n/ cores on your system. Plus, please be careful with\nthis option if\
    \ you are running your commands on a SGE\n--if you are clusterizing your runs,\
    \ and asking for\nmultiple threads to use, you may deplete your\nresources very\
    \ fast."
  type: long
  inputBinding:
    prefix: --num-threads
- id: in_write_buffer_size_per_thread
  doc: "How many items should be kept in memory before they\nare written do the disk.\
    \ The default is 25 per thread.\nSo a single-threaded job would have a write buffer\n\
    size of 25, whereas a job with 4 threads would have a\nwrite buffer size of 4*25.\
    \ The larger the buffer size,\nthe less frequent the program will access to the\
    \ disk,\nyet the more memory will be consumed since the\nprocessed items will\
    \ be cleared off the memory only\nafter they are written to the disk. The default\
    \ buffer\nsize will likely work for most cases. Please keep an\neye on the memory\
    \ usage output to make sure the memory\nuse never exceeds the size of the physical\
    \ memory. If\n--num-threads is 1, this parameter is ignored because\nthe DB is\
    \ written to after each gene\n"
  type: long
  inputBinding:
    prefix: --write-buffer-size-per-thread
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_output_db_path
  doc: Output file path for the new database.
  type: File
  outputBinding:
    glob: $(inputs.in_output_db_path)
- id: out_dump_dir
  doc: "Modeling and annotating structures requires a lot of\nmoving parts, each which\
    \ have their own outputs. The\noutput of this program is a structure database\n\
    containing the pertinent results of this computation,\nhowever a lot of stuff\
    \ doesn't make the cut. By\nproviding a directory for this parameter you will\
    \ get,\nin addition to the structure database, a directory\ncontaining the raw\
    \ output for everything."
  type: Directory
  outputBinding:
    glob: $(inputs.in_dump_dir)
cwlVersion: v1.1
baseCommand:
- anvi-gen-structure-database
