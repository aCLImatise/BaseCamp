from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Isoseq3_Refine_V0_1_0 = CommandToolBuilder(tool="isoseq3_refine", base_command=["isoseq3", "refine"], inputs=[ToolInput(tag="in_min_polya_length", input_type=Boolean(optional=True), prefix="--min-polya-length", doc=InputDocumentation(doc="INT    Minimum poly(A) tail length. [20]")), ToolInput(tag="in_require_polya", input_type=Boolean(optional=True), prefix="--require-polya", doc=InputDocumentation(doc="Require FL reads to have a poly(A) tail and remove it.")), ToolInput(tag="in_min_rq", input_type=Boolean(optional=True), prefix="--min-rq", doc=InputDocumentation(doc="FLOAT  Minimum CCS RQ. Default is -1, deactivated [-1]")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="INT    Number of threads to use, 0 means autodetection. [0]")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="STR    Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL). [WARN]")), ToolInput(tag="in_log_file", input_type=Boolean(optional=True), prefix="--log-file", doc=InputDocumentation(doc="FILE   Log to a file, instead of stderr.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Use verbose output.")), ToolInput(tag="in_fl_ncdot_bam_vertical_line_xml", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_iso_seq", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_str", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_refine", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_output", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_ccs_dot_demux_dot_bam_vertical_line_xml", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_demux_ed", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_fl_nc", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_primer", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_primer_dot_fast_a_vertical_line_xml", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_ccs", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_barcode_set", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_consensus_read_set", input_type=String(), position=7, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/isoseq3:3.4.0--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Isoseq3_Refine_V0_1_0().translate("wdl")

