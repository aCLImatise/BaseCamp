from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Mirge_Build_V0_1_0 = CommandToolBuilder(tool="miRge_build", base_command=["miRge-build"], inputs=[ToolInput(tag="in_genome", input_type=Boolean(optional=True), prefix="--genome", doc=InputDocumentation(doc="genome file in fasta format (.fna, .fasta or .fa) (Required)")), ToolInput(tag="in_mature_mir", input_type=Boolean(optional=True), prefix="--mature-mir", doc=InputDocumentation(doc="mature miRNA file in fasta format (Required)")), ToolInput(tag="in_hp_in_mir", input_type=Boolean(optional=True), prefix="--hpin-mir", doc=InputDocumentation(doc="hairpin miRNA file in fasta format (Required)")), ToolInput(tag="in_mature_trna", input_type=Boolean(optional=True), prefix="--mature-trna", doc=InputDocumentation(doc="mature tRNA file in fasta format (Required)")), ToolInput(tag="in_pre_trna", input_type=Boolean(optional=True), prefix="--pre-trna", doc=InputDocumentation(doc="precursor tRNA file in fasta format (Required)")), ToolInput(tag="in_snorna", input_type=Boolean(optional=True), prefix="--snorna", doc=InputDocumentation(doc="snoRNA file in fasta format (Required)")), ToolInput(tag="in_rrna", input_type=Boolean(optional=True), prefix="--rrna", doc=InputDocumentation(doc="rRNA file in fasta format (Required)")), ToolInput(tag="in_ncrna_other", input_type=Boolean(optional=True), prefix="--ncrna-other", doc=InputDocumentation(doc="all other non-coding RNA in fasta format (Required)")), ToolInput(tag="in_mrna", input_type=Boolean(optional=True), prefix="--mrna", doc=InputDocumentation(doc="mRNA file in fasta format (Required)")), ToolInput(tag="in_spike_in", input_type=Boolean(optional=True), prefix="--spike-in", doc=InputDocumentation(doc="user defined custom spike-in file in fasta format (Optional)")), ToolInput(tag="in_ann_gff", input_type=Boolean(optional=True), prefix="--ann-gff", doc=InputDocumentation(doc="miRNA annotation gff file (Required)")), ToolInput(tag="in_gen_repeats", input_type=File(optional=True), prefix="--gen-repeats", doc=InputDocumentation(doc="the genome repeats file with .gtf extension (Optional: output however enables novel miRNA prediction in the miRge3.0 pipeline)")), ToolInput(tag="in_mir_db", input_type=Boolean(optional=True), prefix="--mir-DB", doc=InputDocumentation(doc="name of the database to be used (Options: miRBase, miRGeneDB) (Required)")), ToolInput(tag="in_organism_name", input_type=Boolean(optional=True), prefix="--organism-name", doc=InputDocumentation(doc="name of the organism [Note: name should be one word and use '_' as separator if necessary] (Required)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="the number of processors to use for trimming, qc, and alignment (Default: 1)")), ToolInput(tag="in_bowtie_path", input_type=Boolean(optional=True), prefix="--bowtie-path", doc=InputDocumentation(doc="path to system's directory containing bowtie binary (Required if bowtie is not in the environment path)"))], outputs=[ToolOutput(tag="out_gen_repeats", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gen_repeats", type_hint=File()), doc=OutputDocumentation(doc="the genome repeats file with .gtf extension (Optional: output however enables novel miRNA prediction in the miRge3.0 pipeline)"))], container="quay.io/biocontainers/mirge-build:0.0.1--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mirge_Build_V0_1_0().translate("wdl")

