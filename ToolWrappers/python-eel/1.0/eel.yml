!Command
command:
- eel
positional:
- !Positional
  optional: false
  position: 0
  name: num_of_align
  description: specifies how many alignments you want. (Default 3)
- !Positional
  optional: false
  position: 1
  name: lambda
  description: Bonus factor for hit (Default 2)
- !Positional
  optional: false
  position: 2
  name: xi
  description: Penalty factor for rotation (Default 1.0)
- !Positional
  optional: false
  position: 3
  name: mu
  description: Penalty factor for average distance between sites (Default 0.5)
- !Positional
  optional: false
  position: 4
  name: nu
  description: Penalty factor for distance difference between sites (Default 1.0)
- !Positional
  optional: false
  position: 5
  name: nuc_per_rotation
  description: specifies how many nucletides there are per rotation. (Default 10.4)
- !Positional
  optional: false
  position: 0
  name: filename
  description: specifies a file in gff format is you want to be aligned
- !Positional
  optional: false
  position: 0
  name: gaplimit
  description: specifies how many sequences can have gaps at the same point (Default
    0)
- !Positional
  optional: false
  position: 1
  name: numofalign
  description: specifies how many alignments you want. (Default 1)
- !Positional
  optional: false
  position: 2
  name: buffer
  description: Specifies the size of buffer to be added to the found areas before
    multiple aligning in nukleotides (Default 1000)
- !Positional
  optional: false
  position: 3
  name: lambda
  description: Bonus factor for hit (Default 2)
- !Positional
  optional: false
  position: 4
  name: xi
  description: Penalty factor for rotation (Default 1.0)
- !Positional
  optional: false
  position: 5
  name: mu
  description: Penalty factor for average distance between sites (Default 0.5)
- !Positional
  optional: false
  position: 6
  name: nu
  description: Penalty factor for distance difference between sites (Default 1.0)
- !Positional
  optional: false
  position: 7
  name: nuc_per_rotation
  description: Specifies how many nucletides there are per rotation. (Default 10.4)
- !Positional
  optional: false
  position: 0
  name: num_of_align
  description: specifies how many alignments you want. (Default 3)
- !Positional
  optional: false
  position: 1
  name: lambda
  description: Bonus factor for hit (Default 2)
- !Positional
  optional: false
  position: 2
  name: xi
  description: Penalty factor for rotation (Default 1.0)
- !Positional
  optional: false
  position: 3
  name: mu
  description: Penalty factor for average distance between sites (Default 0.5)
- !Positional
  optional: false
  position: 4
  name: nu
  description: Penalty factor for distance difference between sites (Default 1.0)
- !Positional
  optional: false
  position: 5
  name: nuc_per_rotation
  description: specifies how many nucletides there are per rotation. (Default 10.4)
- !Positional
  optional: false
  position: 0
  name: numofalign
  description: specifies how many alignments you want. (Default 3)
- !Positional
  optional: false
  position: 1
  name: lambda
  description: Bonus factor for hit (Default 2)
- !Positional
  optional: false
  position: 2
  name: xi
  description: Penalty factor for rotation (Default 1.0)
- !Positional
  optional: false
  position: 3
  name: mu
  description: Penalty factor for average distance between sites (Default 0.5)
- !Positional
  optional: false
  position: 4
  name: nu
  description: Penalty factor for distance difference between sites (Default 1.0)
- !Positional
  optional: false
  position: 5
  name: nuc_per_rotation
  description: Specifies how many nucletides there are per rotation. (Default 10.4)
- !Positional
  optional: false
  position: 0
  name: numofalign
  description: specifies how many alignments you want. (Default 3)
- !Positional
  optional: false
  position: 1
  name: lambda
  description: Bonus factor for hit (Default 2)
- !Positional
  optional: false
  position: 2
  name: xi
  description: Penalty factor for rotation (Default 1.0)
- !Positional
  optional: false
  position: 3
  name: mu
  description: Penalty factor for average distance between sites (Default 0.5)
- !Positional
  optional: false
  position: 4
  name: nu
  description: Penalty factor for distance difference between sites (Default 1.0)
- !Positional
  optional: false
  position: 5
  name: nuc_per_rotation
  description: Specifies how many nucletides there are per rotation. (Default 10.4)
- !Positional
  optional: false
  position: 6
  name: pwfiles
  description: If the needed pairwise alignments are calculated beforehand, the path
    to the directory they are in.
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Not running on tty device\n'?', 'h', 'help'\n\tArguments: none\n\tprints\
  \ this help\n\n'about'\n\tArguments: none\n\tPrints Information about the program\n\
  \n'addMatrix', 'am'\n\tArguments: filelist\n\treads matrices from files\n\n'addSequence',\
  \ 'as'\n\tArguments: filelist\n\treads sequences from files\n\n'addSingleSequence',\
  \ 'ass'\n\tArguments: filelist\n\tGzipped and Fasta formated sequence files. One\
  \ sequence in file.\n\n'align'\n\tArguments: [filename[,num_of_align,[lambda[,xi[,mu[,nu,[,nuc_per_rotation,\
  \ [Seq1, Seq2]]]]]]]]\n\taligns the computed BS or optional the BS from a gff file\n\
  \tfilename specifies a file in gff format is you want to be aligned\n\tnum_of_align\
  \        specifies how many alignments you want. (Default 3)\n\tlambda   Bonus factor\
  \ for hit (Default 2)\n\txi       Penalty factor for rotation (Default 1.0)\n\t\
  mu       Penalty factor for average distance between sites (Default 0.5)\n\tnu \
  \      Penalty factor for distance difference between sites (Default 1.0)\n\tnuc_per_rotation\
  \    specifies how many nucletides there are per rotation. (Default 10.4)\n\tSeq1,Seq2\
  \ Sequences to be aligned.\n\tIf you want to skip a argument just  write '.' for\
  \ it.\n\tIf you use '.' as filename the local data are aligned.\n\n'cd'\n\tArguments:\
  \ [path]\n\tChange or display the current working directory.\n\n'computeKLdistances'\n\
  \tArguments: File to save the result\n\tComputes the distance matrix between all\
  \ pairs of TFBS matrixes.\n\n'dir'\n\tArguments: [path/pattern]\n\tList files matching\
  \ the given pattern. Defaults to \"*\" in current working directory.\n\t\n\n'getTFBS'\n\
  \tArguments: [bound]\n\tcomputes the scores of all matrices and all sequences which\
  \ are\n\tbetter than log2(bound) + maxscore. maxscore is the highest reachable\n\
  \tscore of the actual matrix with respect to the background\n\tThe default value\
  \ for bound is 0.1 i.e. ~3.3 below the maximum score.\n\n'getTFBSabsolute'\n\tArguments:\
  \ [cutoff]\n\tcomputes the scores of all matrices and all sequences which are\n\t\
  better than cutoff.\n\tThe default value for cutoff is 9.0\n\n'getTFBSpvalue'\n\t\
  Arguments: [pvalue]\n\tcomputes the scores of all matrices and all sequences. Report\
  \ scores\n\tbetter than given p-value.\n\tThe default value for pvalue is 1e-6\n\
  \n'more'\n\tArguments: [number of alignments]\n\t        prints more alignments\
  \ from previously run alignment matrix\n\n'multiFromPairwise'\n\tArguments: filename,pwfilename[,gaplimit[,numofalign[,buffer[,lambda[,xi[,mu[,nu,[,nuc_per_rotation]]]]]]\n\
  \tComputes multiple alignments from places selected from pairwise alignments of\
  \ the BS from a gff file\n\tfilename   specifies a file in gff format is you want\
  \ to be aligned\n\tpwfilename specifies a file in alignment gff format where the\
  \ pairwise alignments are\n\tgaplimit   specifies how many sequences can have gaps\
  \ at the same point (Default 0)\n\tnumofalign        specifies how many alignments\
  \ you want. (Default 1)\n\tbuffer     Specifies the size of buffer to be added to\
  \ the found areas before multiple aligning in nukleotides (Default 1000)\n\tlambda\
  \     Bonus factor for hit (Default 2)\n\txi         Penalty factor for rotation\
  \ (Default 1.0)\n\tmu         Penalty factor for average distance between sites\
  \ (Default 0.5)\n\tnu         Penalty factor for distance difference between sites\
  \ (Default 1.0)\n\tnuc_per_rotation    Specifies how many nucletides there are per\
  \ rotation. (Default 10.4)\n\tIf you want to skip a argument just  write '.' for\
  \ it.\n\n'multipleAlign'\n\tArguments: [filename[,num_of_align,[lambda[,xi[,mu[,nu,[,nuc_per_rotation]]]]]]]\n\
  \tComputes multiple alignment of the BS or optionally the BS from a gff file\n\t\
  filename specifies a file in gff format is you want to be aligned\n\tnum_of_align\
  \        specifies how many alignments you want. (Default 3)\n\tlambda   Bonus factor\
  \ for hit (Default 2)\n\txi       Penalty factor for rotation (Default 1.0)\n\t\
  mu       Penalty factor for average distance between sites (Default 0.5)\n\tnu \
  \      Penalty factor for distance difference between sites (Default 1.0)\n\tnuc_per_rotation\
  \    specifies how many nucletides there are per rotation. (Default 10.4)\n\tIf\
  \ you want to skip a argument just  write '.' for it.\n\tIf you use '.' as filename\
  \ the local data are aligned.\n\n'no-gui'\n\tArguments: none\n\tGives command line\
  \ interface\n\n'nodeAlignments'\n\tFetch and print alignments from nodes of the\
  \ tree after treeMultipleAlign\n\n'pm', 'printMatrices'\n\tArguments: none\n\tprints\
  \ the matrices\n\n'pmw', 'printMatrixWeights'\n\tArguments: none\n\tprints the matrix\
  \ weights (with background)\n\n'printSeqNames', 'ps'\n\tArguments: none\n\tprints\
  \ the names of the sequences\n\n'q', 'quit'\n\tArguments: none\n\tto exit the program\n\
  \n'removeMatrix', 'rm'\n\tArguments: Matrixnumber\n\tremoves a matrix\n\n'removeSequence',\
  \ 'rs'\n\tArguments: Sequencename\n\tremoves a sequence\n\n'reset'\n\tArguments:\
  \ none\n\tremoves all matrices and sequences\n\n'resetMatrices', 'resm'\n\tArguments:\
  \ none\n\tremoves all matrices\n\n'resetSequences', 'ress'\n\tArguments: none\n\t\
  removes all sequences\n\n'sa', 'showalign'\n\tArguments: none\n\tprints the computed\
  \ alignment to stdout\n\n'saveMarkovBackground'\n\tArguments: filename\n\tName of\
  \ the file where to store the background model.\n\t\n\n'savealign'\n\tArguments:\
  \ [filename]\n\tsaves the alignment to disk\n\tThe default filename is 'eel_[Date+Time].align'\n\
  \te.g. eel_2003_9_16_11_48.align\n\n'savealignAnchor'\n\tArguments: [filename]\n\
  \tsaves the alignment to disk in Anchor format for DIALIGN\n\tThe default filename\
  \ is 'eel_[Date+Time]_align.anc'\n\te.g. eel_2003_9_16_11_48_align.anc\n\n'savealignGFF'\n\
  \tArguments: [filename]\n\tsaves the alignment to disk in GFF format\n\tThe default\
  \ filename is 'eel_[Date+Time]_align.gff'\n\te.g. eel_2003_9_16_11_48_align.gff\n\
  \n'savematch'\n\tArguments: [filename]\n\tsaves the results of the matching in gff\
  \ format\n\tSee http://www.sanger.ac.uk/Software/formats/GFF/\n\tThe default filename\
  \ is 'eel_[Date+Time].gff'\n\te.g. eel_2003_8_27_15_48.gff\n\n'savepwbase'\n\tArguments:\
  \ filename\n\tsaves the pairwise alignments the multiple alignment was based on\n\
  \n'setBGfreq'\n\tArguments: A C G T|bgSampleSequence\n\tBackground nucleotide frequencies.\
  \ Removes markov background.\n\n'setMarkovBG'\n\tArguments: bgSampleSequence [order]\n\
  \tBackground sample sequence and order of the model or saved background file.\n\n\
  'setpseudocount'\n\tArguments: [pseudocount]\n\tSet the amount of pseudocounts on\
  \ matricies. Default 1.0\n\n'shortMultipleAlign'\n\tArguments: filename[,gaplimit[,numofalign[,lambda[,xi[,mu[,nu,[,nuc_per_rotation]]]]]]\n\
  \tComputes multiple alignment of the BS from a gff file\n\tfilename specifies a\
  \ file in gff format is you want to be aligned\n\tgaplimit specifies how many sequences\
  \ can have gaps at the same point (Default 0)\n\tnumofalign        specifies how\
  \ many alignments you want. (Default 3)\n\tlambda   Bonus factor for hit (Default\
  \ 2)\n\txi       Penalty factor for rotation (Default 1.0)\n\tmu       Penalty factor\
  \ for average distance between sites (Default 0.5)\n\tnu       Penalty factor for\
  \ distance difference between sites (Default 1.0)\n\tnuc_per_rotation    Specifies\
  \ how many nucletides there are per rotation. (Default 10.4)\n\tIf you want to skip\
  \ a argument just  write '.' for it.\n\n'showmatch', 'sm'\n\tArguments: none\n\t\
  prints the computed scores to stdout\n\n'showpwbase'\n\tArguments: none\n\tprints\
  \ the pairwise alignments the multiple alignment was based on to stdout\n\n'suboptimals'\n\
  \tArguments: [number of alignments]\n\t        prints more suboptimal alignments\
  \ from previously run matrix\n\n'suboptimalsDownTo'\n\tArguments: Lower bound on\
  \ the module score\n\t        Fetch suboptimal alignments down to given bound (and\
  \ one below the bound)\n\n'treeMultipleAlign'\n\tArguments: filename,treefilename[,method[,k[,numofalign[,lambda[,xi[,mu[,nu,[,nuc_per_rotation[,pwfiles]]]]]]]]]\n\
  \tComputes multiple alignment of the BS from a gff file\n\tfilename specifies a\
  \ file in gff format is you want to be aligned\n\ttreefilename specifies a file\
  \ in Newick tree format with the phylogenetic tree\n\tmethod specifies which method\
  \ of scoring is used. 1=Sum of pairs, 2=Score generalized from pairwise, 3=Score\
  \ based on representative sequences. (Default 1)\n\tk specifies how many local alignments\
  \ are kept at each level (Default 100)\n\tnumofalign        specifies how many alignments\
  \ you want. (Default 3)\n\tlambda   Bonus factor for hit (Default 2)\n\txi     \
  \  Penalty factor for rotation (Default 1.0)\n\tmu       Penalty factor for average\
  \ distance between sites (Default 0.5)\n\tnu       Penalty factor for distance difference\
  \ between sites (Default 1.0)\n\tnuc_per_rotation    Specifies how many nucletides\
  \ there are per rotation. (Default 10.4)\n\tpwfiles\t If the needed pairwise alignments\
  \ are calculated beforehand, the path to the directory they are in.\n\tIf you want\
  \ to skip a argument just  write '.' for it.\n\nVirtual memory size 27080 kB\n"
generated_using:
- -h
docker_image:
