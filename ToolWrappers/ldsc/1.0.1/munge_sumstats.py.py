from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Munge_Sumstats_Py_V0_1_0 = CommandToolBuilder(tool="munge_sumstats.py", base_command=["munge_sumstats.py"], inputs=[ToolInput(tag="in_sum_stats", input_type=File(optional=True), prefix="--sumstats", doc=InputDocumentation(doc="Input filename.")), ToolInput(tag="in_sample_size_option", input_type=Int(optional=True), prefix="--N", doc=InputDocumentation(doc="Sample size If this option is not set, will try to\ninfer the sample size from the input file. If the\ninput file contains a sample size column, and this\nflag is set, the argument to this flag has priority.")), ToolInput(tag="in_n_cas", input_type=Int(optional=True), prefix="--N-cas", doc=InputDocumentation(doc="Number of cases. If this option is not set, will try\nto infer the number of cases from the input file. If\nthe input file contains a number of cases column, and\nthis flag is set, the argument to this flag has\npriority.")), ToolInput(tag="in_n_con", input_type=Int(optional=True), prefix="--N-con", doc=InputDocumentation(doc="Number of controls. If this option is not set, will\ntry to infer the number of controls from the input\nfile. If the input file contains a number of controls\ncolumn, and this flag is set, the argument to this\nflag has priority.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output filename prefix.")), ToolInput(tag="in_info_min", input_type=Int(optional=True), prefix="--info-min", doc=InputDocumentation(doc="Minimum INFO score.")), ToolInput(tag="in_maf_min", input_type=Int(optional=True), prefix="--maf-min", doc=InputDocumentation(doc="Minimum MAF.")), ToolInput(tag="in_dane_r", input_type=Boolean(optional=True), prefix="--daner", doc=InputDocumentation(doc="Use this flag to parse Stephan Ripke's daner* file")), ToolInput(tag="in_no_alleles", input_type=Boolean(optional=True), prefix="--no-alleles", doc=InputDocumentation(doc="Don't require alleles. Useful if only unsigned summary\nstatistics are available and the goal is h2 /\npartitioned h2 estimation rather than rg estimation.")), ToolInput(tag="in_merge_alleles", input_type=File(optional=True), prefix="--merge-alleles", doc=InputDocumentation(doc="Same as --merge, except the file should have three\ncolumns: SNP, A1, A2, and all alleles will be matched\nto the --merge-alleles file alleles.")), ToolInput(tag="in_n_min", input_type=Int(optional=True), prefix="--n-min", doc=InputDocumentation(doc="Minimum N (sample size). Default is (90th percentile\nN) / 2.")), ToolInput(tag="in_n_col", input_type=String(optional=True), prefix="--N-col", doc=InputDocumentation(doc="Name of N column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_n_cas_col", input_type=String(optional=True), prefix="--N-cas-col", doc=InputDocumentation(doc="Name of N column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_n_con_col", input_type=String(optional=True), prefix="--N-con-col", doc=InputDocumentation(doc="Name of N column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_a_one", input_type=Int(optional=True), prefix="--a1", doc=InputDocumentation(doc="Name of A1 column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_a_two", input_type=Int(optional=True), prefix="--a2", doc=InputDocumentation(doc="Name of A2 column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_name_pvalue_name_ldscunderstands_nb_case", input_type=String(optional=True), prefix="--p", doc=InputDocumentation(doc="Name of p-value column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_frq", input_type=String(optional=True), prefix="--frq", doc=InputDocumentation(doc="Name of FRQ or MAF column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_signed_sum_stats", input_type=Int(optional=True), prefix="--signed-sumstats", doc=InputDocumentation(doc="Name of signed sumstat column, comma null value (e.g.,\nZ,0 or OR,1). NB: case insensitive.")), ToolInput(tag="in_info", input_type=String(optional=True), prefix="--info", doc=InputDocumentation(doc="Name of INFO column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_info_list", input_type=String(optional=True), prefix="--info-list", doc=InputDocumentation(doc="Comma-separated list of INFO columns. Will filter on\nthe mean. NB: case insensitive.")), ToolInput(tag="in_n_study", input_type=String(optional=True), prefix="--nstudy", doc=InputDocumentation(doc="Name of NSTUDY column (if not a name that ldsc\nunderstands). NB: case insensitive.")), ToolInput(tag="in_n_study_min", input_type=Int(optional=True), prefix="--nstudy-min", doc=InputDocumentation(doc="Minimum # of studies. Default is to remove everything\nbelow the max, unless there is an N column, in which\ncase do nothing.")), ToolInput(tag="in_ignore", input_type=String(optional=True), prefix="--ignore", doc=InputDocumentation(doc="Comma-separated list of column names to ignore.")), ToolInput(tag="in_a_one_inc", input_type=Boolean(optional=True), prefix="--a1-inc", doc=InputDocumentation(doc="A1 is the increasing allele.")), ToolInput(tag="in_keep_maf", input_type=Boolean(optional=True), prefix="--keep-maf", doc=InputDocumentation(doc="Keep the MAF column (if one exists).")), ToolInput(tag="in_format_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--daner-n             Use this flag to parse more recent daner* formatted")), ToolInput(tag="in_chunksize_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--snp SNP             Name of SNP column (if not a name that ldsc"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output filename prefix."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Munge_Sumstats_Py_V0_1_0().translate("wdl", allow_empty_container=True)

