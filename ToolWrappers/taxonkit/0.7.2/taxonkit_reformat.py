from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Directory, File

Taxonkit_Reformat_V0_1_0 = CommandToolBuilder(tool="taxonkit_reformat", base_command=["taxonkit", "reformat"], inputs=[ToolInput(tag="in_add_prefix", input_type=Boolean(optional=True), prefix="--add-prefix", doc=InputDocumentation(doc="add prefixes for all ranks, single prefix for a rank is defined by flag --prefix-X")), ToolInput(tag="in_delimiter", input_type=String(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="field delimiter in input lineage (default ';')")), ToolInput(tag="in_fill_miss_rank", input_type=Boolean(optional=True), prefix="--fill-miss-rank", doc=InputDocumentation(doc="fill missing rank with lineage information of the next higher rank")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="output format, placeholders of rank are needed (default '{k};{p};{c};{o};{f};{g};{s}')")), ToolInput(tag="in_lineage_field", input_type=Int(optional=True), prefix="--lineage-field", doc=InputDocumentation(doc="field index of lineage. data should be tab-separated (default 2)")), ToolInput(tag="in_miss_rank_repl", input_type=String(optional=True), prefix="--miss-rank-repl", doc=InputDocumentation(doc="replacement string for missing rank")), ToolInput(tag="in_miss_rank_repl_prefix", input_type=String(optional=True), prefix="--miss-rank-repl-prefix", doc=InputDocumentation(doc="prefix for estimated taxon level (default 'unclassified ')")), ToolInput(tag="in_miss_taxid_repl", input_type=String(optional=True), prefix="--miss-taxid-repl", doc=InputDocumentation(doc="replacement string for missing taxid")), ToolInput(tag="in_prefix_subspecies_used", input_type=String(optional=True), prefix="--prefix-S", doc=InputDocumentation(doc="prefix for subspecies, used along with flag -P/--add-prefix (default 'S__')")), ToolInput(tag="in_prefix_strain_used", input_type=String(optional=True), prefix="--prefix-T", doc=InputDocumentation(doc="prefix for strain, used along with flag -P/--add-prefix (default 'T__')")), ToolInput(tag="in_prefix_c", input_type=String(optional=True), prefix="--prefix-c", doc=InputDocumentation(doc="prefix for class, used along with flag -P/--add-prefix (default 'c__')")), ToolInput(tag="in_prefix_f", input_type=String(optional=True), prefix="--prefix-f", doc=InputDocumentation(doc="prefix for family, used along with flag -P/--add-prefix (default 'f__')")), ToolInput(tag="in_prefix_g", input_type=String(optional=True), prefix="--prefix-g", doc=InputDocumentation(doc="prefix for genus, used along with flag -P/--add-prefix (default 'g__')")), ToolInput(tag="in_prefix_k", input_type=String(optional=True), prefix="--prefix-k", doc=InputDocumentation(doc="prefix for superkingdom, used along with flag -P/--add-prefix (default 'k__')")), ToolInput(tag="in_prefix_o", input_type=String(optional=True), prefix="--prefix-o", doc=InputDocumentation(doc="prefix for order, used along with flag -P/--add-prefix (default 'o__')")), ToolInput(tag="in_prefix_p", input_type=String(optional=True), prefix="--prefix-p", doc=InputDocumentation(doc="prefix for phylum, used along with flag -P/--add-prefix (default 'p__')")), ToolInput(tag="in_prefix_species_used", input_type=String(optional=True), prefix="--prefix-s", doc=InputDocumentation(doc="prefix for species, used along with flag -P/--add-prefix (default 's__')")), ToolInput(tag="in_prefix_subspeciesstrain_used", input_type=String(optional=True), prefix="--prefix-t", doc=InputDocumentation(doc="prefix for subspecies/strain, used along with flag -P/--add-prefix (default 't__')")), ToolInput(tag="in_pseudo_strain", input_type=Boolean(optional=True), prefix="--pseudo-strain", doc=InputDocumentation(doc="use the node with lowest rank as strain name, only if which rank is lower than 'species' and not 'subpecies' nor 'strain'. This flag affects {t}, {S}, {T}")), ToolInput(tag="in_show_lineage_tax_ids", input_type=Boolean(optional=True), prefix="--show-lineage-taxids", doc=InputDocumentation(doc="show corresponding taxids of reformated lineage")), ToolInput(tag="in_trim", input_type=Boolean(optional=True), prefix="--trim", doc=InputDocumentation(doc="do not fill missing rank lower than current rank")), ToolInput(tag="in_data_dir", input_type=Directory(optional=True), prefix="--data-dir", doc=InputDocumentation(doc="directory containing nodes.dmp and names.dmp (default '/root/.taxonkit')")), ToolInput(tag="in_line_buffered", input_type=File(optional=True), prefix="--line-buffered", doc=InputDocumentation(doc="use line buffering on output, i.e., immediately writing to stdin/file for every line of output")), ToolInput(tag="in_out_file", input_type=File(optional=True), prefix="--out-file", doc=InputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of CPUs. 4 is enough (default 4)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="print verbose information"))], outputs=[ToolOutput(tag="out_line_buffered", output_type=File(optional=True), selector=InputSelector(input_to_select="in_line_buffered", type_hint=File()), doc=OutputDocumentation(doc="use line buffering on output, i.e., immediately writing to stdin/file for every line of output")), ToolOutput(tag="out_out_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_file", type_hint=File()), doc=OutputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')"))], container="quay.io/biocontainers/taxonkit:0.7.2--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Taxonkit_Reformat_V0_1_0().translate("wdl")

