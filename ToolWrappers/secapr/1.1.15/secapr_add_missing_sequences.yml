&id003 !Command
command:
- secapr
- add_missing_sequences
positional: []
named:
- !Flag
  description: The directory containing fasta alignments
  synonyms:
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: The output directory where results will be safed
  synonyms:
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
parent: &id001 !Command
  command:
  - secapr
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - secapr
    - join_exons
    positional: []
    named:
    - !Flag
      description: The directory containing the fasta-alignment-files
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: The output directory where results will be saved
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr join_exons [-h] --input INPUT --output OUTPUT\n\nJoin\
      \ exon-alignment files belonging to the same gene\n\noptional arguments:\n \
      \ -h, --help       show this help message and exit\n  --input INPUT    The directory\
      \ containing the fasta-alignment-files\n  --output OUTPUT  The output directory\
      \ where results will be saved\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - secapr
    - assemble_reads
    positional: []
    named:
    - !Flag
      description: "Call the folder that contains the trimmed reads,\norganized in\
        \ a separate subfolder for each sample. The\nname of the subfolder has to\
        \ start with the sample\nname, delimited with an underscore [_]"
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: The output directory where results will be saved
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: The assembler to use (default = abyss).
      synonyms:
      - --assembler
      args: !ChoiceFlagArg
        choices: !!set
          ? trinity
          ? abyss
      optional: true
    - !Flag
      description: Set the kmer value
      synonyms:
      - --kmer
      args: !SimpleFlagArg
        name: KMER
      optional: true
    - !Flag
      description: "Set the minimum contig length for the assembly.\nContigs that\
        \ are shorter than this threshold will be\ndiscarded."
      synonyms:
      - --contig_length
      args: !SimpleFlagArg
        name: CONTIG_LENGTH
      optional: true
    - !Flag
      description: "[Option only for Trinity assembler] Set the maximum\nmemory for\
        \ Trinity to use in this format: 1G or 1000M\n(default: 8G)."
      synonyms:
      - --max_memory
      args: !SimpleFlagArg
        name: MAX_MEMORY
      optional: true
    - !Flag
      description: "Use this flag if you additionally want to use single\nreads for\
        \ the assembly"
      synonyms:
      - --single_reads
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use this flag if you want to disabel generation of\nstats (can\
        \ be necessary because previous stats files\ncan't be found if reads are used\
        \ that were not\npreviously processed with SECAPR)"
      synonyms:
      - --disable_stats
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "For parallel processing you can set the number of\ncores you want\
        \ to run the assembly on.\n"
      synonyms:
      - --cores
      args: !SimpleFlagArg
        name: CORES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr assemble_reads [-h] --input INPUT --output OUTPUT\n\
      \                             [--assembler {abyss,trinity}] [--kmer KMER]\n\
      \                             [--contig_length CONTIG_LENGTH]\n            \
      \                 [--max_memory MAX_MEMORY] [--single_reads]\n             \
      \                [--disable_stats] [--cores CORES]\n\nAssemble trimmed Illumina\
      \ read files (fastq)\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --input INPUT         Call the folder that contains\
      \ the trimmed reads,\n                        organized in a separate subfolder\
      \ for each sample. The\n                        name of the subfolder has to\
      \ start with the sample\n                        name, delimited with an underscore\
      \ [_]\n  --output OUTPUT       The output directory where results will be saved\n\
      \  --assembler {abyss,trinity}\n                        The assembler to use\
      \ (default = abyss).\n  --kmer KMER           Set the kmer value\n  --contig_length\
      \ CONTIG_LENGTH\n                        Set the minimum contig length for the\
      \ assembly.\n                        Contigs that are shorter than this threshold\
      \ will be\n                        discarded.\n  --max_memory MAX_MEMORY\n \
      \                       [Option only for Trinity assembler] Set the maximum\n\
      \                        memory for Trinity to use in this format: 1G or 1000M\n\
      \                        (default: 8G).\n  --single_reads        Use this flag\
      \ if you additionally want to use single\n                        reads for\
      \ the assembly\n  --disable_stats       Use this flag if you want to disabel\
      \ generation of\n                        stats (can be necessary because previous\
      \ stats files\n                        can't be found if reads are used that\
      \ were not\n                        previously processed with SECAPR)\n  --cores\
      \ CORES         For parallel processing you can set the number of\n        \
      \                cores you want to run the assembly on.\n"
    generated_using: *id002
  - !Command
    command:
    - secapr
    - phase_alleles
    positional:
    - !Positional
      description: Phase remapped reads form reference-based assembly into two separate
        alleles.
      position: 0
      name: REFERENCE
      optional: false
    named:
    - !Flag
      description: "Call the folder that contains the results of the\nreference based\
        \ assembly (output of reference_assembly\nfunction, containing the bam-files)."
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: The output directory where results will be safed.
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "Set the minimum read coverage. Only positions that are\ncovered\
        \ by this number of reads will be called in the\nconsensus sequence, otherwise\
        \ the program will add an\nambiguity at this position."
      synonyms:
      - --min_coverage
      args: !SimpleFlagArg
        name: MIN_COVERAGE
      optional: true
    - !Flag
      description: "Provide the reference that was used for read-mapping.\nIf you\
        \ used the alignment-consensus method, provide\nthe joined_fasta_library.fasta\
        \ which is found in the\nreference_seqs folder within the reference-assembly\n\
        output.\n"
      synonyms:
      - --reference
      args: !SimpleFlagArg
        name: REFERENCE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr phase_alleles [-h] --input INPUT --output OUTPUT\n \
      \                           [--min_coverage MIN_COVERAGE] --reference\n    \
      \                        REFERENCE\n\nPhase remapped reads form reference-based\
      \ assembly into two separate alleles.\nThen produce consensus sequence for each\
      \ allele.\n\noptional arguments:\n  -h, --help            show this help message\
      \ and exit\n  --input INPUT         Call the folder that contains the results\
      \ of the\n                        reference based assembly (output of reference_assembly\n\
      \                        function, containing the bam-files).\n  --output OUTPUT\
      \       The output directory where results will be safed.\n  --min_coverage\
      \ MIN_COVERAGE\n                        Set the minimum read coverage. Only\
      \ positions that are\n                        covered by this number of reads\
      \ will be called in the\n                        consensus sequence, otherwise\
      \ the program will add an\n                        ambiguity at this position.\n\
      \  --reference REFERENCE\n                        Provide the reference that\
      \ was used for read-mapping.\n                        If you used the alignment-consensus\
      \ method, provide\n                        the joined_fasta_library.fasta which\
      \ is found in the\n                        reference_seqs folder within the\
      \ reference-assembly\n                        output.\n"
    generated_using: *id002
  - !Command
    command:
    - secapr
    - quality_check
    positional: []
    named:
    - !Flag
      description: The directory containing fastq files
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: "The output directory where quality-test results will be\nsaved\n"
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr quality_check [-h] --input INPUT --output OUTPUT\n\n\
      This script runs a fastqc test on all fastq samples in a user-provided folder\n\
      and creates an overview plot,\n\noptional arguments:\n  -h, --help       show\
      \ this help message and exit\n  --input INPUT    The directory containing fastq\
      \ files\n  --output OUTPUT  The output directory where quality-test results\
      \ will be\n                   saved\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - secapr
    - align_sequences
    positional:
    - !Positional
      description: --aligner {muscle,mafft}
      position: 0
      name: alignments.
      optional: false
    named:
    - !Flag
      description: "The fasta file containing individual sequences for\nseveral samples\
        \ and loci"
      synonyms:
      - --sequences
      args: !SimpleFlagArg
        name: SEQUENCES
      optional: true
    - !Flag
      description: The directory in which to store the resulting
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: The output alignment format.
      synonyms:
      - --output-format
      args: !ChoiceFlagArg
        choices: !!set
          ? fasta
          ? phylip
          ? stockholm
          ? nexus
          ? emboss
          ? clustal
      optional: true
    - !Flag
      description: Align, but DO NOT trim alignments.
      synonyms:
      - --no-trim
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Sliding window size for trimming.
      synonyms:
      - --window
      args: !SimpleFlagArg
        name: WINDOW
      optional: true
    - !Flag
      description: "The proportion of taxa required to have sequence at\nalignment\
        \ ends."
      synonyms:
      - --proportion
      args: !SimpleFlagArg
        name: PROPORTION
      optional: true
    - !Flag
      description: "The proportion of residues required across the window\nin proportion\
        \ of taxa."
      synonyms:
      - --threshold
      args: !SimpleFlagArg
        name: THRESHOLD
      optional: true
    - !Flag
      description: "The max proportion of sequence divergence allowed\nbetween any\
        \ row of the alignment and the alignment\nconsensus."
      synonyms:
      - --max-divergence
      args: !SimpleFlagArg
        name: MAX_DIVERGENCE
      optional: true
    - !Flag
      description: The minimum length of alignments to keep.
      synonyms:
      - --min-length
      args: !SimpleFlagArg
        name: MIN_LENGTH
      optional: true
    - !Flag
      description: Allow reads in alignments containing N-bases.
      synonyms:
      - --ambiguous
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Process alignments in parallel using --cores for\nalignment. This\
        \ is the number of PHYSICAL CPUs.\n"
      synonyms:
      - --cores
      args: !SimpleFlagArg
        name: CORES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr align_sequences [-h] --sequences SEQUENCES --output\
      \ OUTPUT\n                              [--aligner {muscle,mafft}]\n       \
      \                       [--output-format {fasta,nexus,phylip,clustal,emboss,stockholm}]\n\
      \                              [--no-trim] [--window WINDOW]\n             \
      \                 [--proportion PROPORTION]\n                              [--threshold\
      \ THRESHOLD]\n                              [--max-divergence MAX_DIVERGENCE]\n\
      \                              [--min-length MIN_LENGTH] [--ambiguous]\n   \
      \                           [--cores CORES]\n\nAlign sequences and produce separate\
      \ alignment file for each locus, containing\nthe seqeunces of all taxa. Copyright\
      \ (c) 2010-2012, Brant C. Faircloth All\nrights reserved. Redistribution and\
      \ use in source and binary forms, with or\nwithout modification, are permitted\
      \ provided that the following conditions are\nmet: * Redistributions of source\
      \ code must retain the above copyright notice,\nthis list of conditions and\
      \ the following disclaimer. * Redistributions in\nbinary form must reproduce\
      \ the above copyright notice, this list of conditions\nand the following disclaimer\
      \ in the documentation and/or other materials\nprovided with the distribution.\
      \ * Neither the name of the University of\nCalifornia, Los Angeles nor the names\
      \ of its contributors may be used to\nendorse or promote products derived from\
      \ this software without specific prior\nwritten permission. THIS SOFTWARE IS\
      \ PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS\
      \ OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES\
      \ OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN\
      \ NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT,\
      \ INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\
      \ BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\
      \ USE, DATA, OR PROFITS; OR\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\
      \ THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\
      \ NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\
      \ EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE. ________________________________________\
      \ Modified\nby Tobias Andermann (tobias.andermann@bioenv.gu.se): Additions include:\
      \ -\nStandardizing script for incomplete data - More forgiving default options\
      \ for\nnon-UCE datasets - Format the sequence headers of the output alignment\
      \ files\nto simply the sample name (no locus information in the header, only\
      \ in the\nfilename) ________________________________________\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --sequences SEQUENCES\n\
      \                        The fasta file containing individual sequences for\n\
      \                        several samples and loci\n  --output OUTPUT       The\
      \ directory in which to store the resulting\n                        alignments.\n\
      \  --aligner {muscle,mafft}\n                        The alignment engine to\
      \ use.\n  --output-format {fasta,nexus,phylip,clustal,emboss,stockholm}\n  \
      \                      The output alignment format.\n  --no-trim           \
      \  Align, but DO NOT trim alignments.\n  --window WINDOW       Sliding window\
      \ size for trimming.\n  --proportion PROPORTION\n                        The\
      \ proportion of taxa required to have sequence at\n                        alignment\
      \ ends.\n  --threshold THRESHOLD\n                        The proportion of\
      \ residues required across the window\n                        in proportion\
      \ of taxa.\n  --max-divergence MAX_DIVERGENCE\n                        The max\
      \ proportion of sequence divergence allowed\n                        between\
      \ any row of the alignment and the alignment\n                        consensus.\n\
      \  --min-length MIN_LENGTH\n                        The minimum length of alignments\
      \ to keep.\n  --ambiguous           Allow reads in alignments containing N-bases.\n\
      \  --cores CORES         Process alignments in parallel using --cores for\n\
      \                        alignment. This is the number of PHYSICAL CPUs.\n"
    generated_using: *id002
  - !Command
    command:
    - secapr
    - automate_all
    positional: []
    named:
    - !Flag
      description: The directory containing cleaned fastq files
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: "The output directory where all intermediate and final\ndata files\
        \ will be stored"
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "Provide a reference library (FASTA) containing\nsequences for\
        \ the genes of interest (required to find\ncontigs matching targeted regions)."
      synonyms:
      - --reference
      args: !SimpleFlagArg
        name: REFERENCE
      optional: true
    - !Flag
      description: "The setting you want to run SECAPR on. \"relaxed\" uses\nvery\
        \ non-restrictive default values (use when samples\nare expected to differ\
        \ considerably from provided\nreference or are covering wide evolutionary\
        \ range,\ne.g. different families or orders). \"conservative\" is\nvery restrictive\
        \ and can be used when samples are\nclosely related and match provided reference\
        \ very\nwell."
      synonyms:
      - --setting
      args: !ChoiceFlagArg
        choices: !!set
          ? medium
          ? conservative
          ? relaxed
      optional: true
    - !Flag
      description: "The assembler to use for de-novo assembly\n(default=abyss)."
      synonyms:
      - --assembler
      args: !ChoiceFlagArg
        choices: !!set
          ? trinity
          ? abyss
      optional: true
    - !Flag
      description: "Number of computational cores for parallelization of\ncomputation.\n"
      synonyms:
      - --cores
      args: !SimpleFlagArg
        name: CORES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr automate_all [-h] --input INPUT --output OUTPUT --reference\n\
      \                           REFERENCE [--setting {relaxed,medium,conservative}]\n\
      \                           [--assembler {abyss,trinity}] [--cores CORES]\n\n\
      This script automates the complete secapr pipeline, producing MSAs (allele,\n\
      contig and BAM-consensus) from FASTQ files\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  --input INPUT         The directory\
      \ containing cleaned fastq files\n  --output OUTPUT       The output directory\
      \ where all intermediate and final\n                        data files will\
      \ be stored\n  --reference REFERENCE\n                        Provide a reference\
      \ library (FASTA) containing\n                        sequences for the genes\
      \ of interest (required to find\n                        contigs matching targeted\
      \ regions).\n  --setting {relaxed,medium,conservative}\n                   \
      \     The setting you want to run SECAPR on. \"relaxed\" uses\n            \
      \            very non-restrictive default values (use when samples\n       \
      \                 are expected to differ considerably from provided\n      \
      \                  reference or are covering wide evolutionary range,\n    \
      \                    e.g. different families or orders). \"conservative\" is\n\
      \                        very restrictive and can be used when samples are\n\
      \                        closely related and match provided reference very\n\
      \                        well.\n  --assembler {abyss,trinity}\n            \
      \            The assembler to use for de-novo assembly\n                   \
      \     (default=abyss).\n  --cores CORES         Number of computational cores\
      \ for parallelization of\n                        computation.\n"
    generated_using: *id002
  - !Command
    command:
    - secapr
    - find_target_contigs
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "The directory containing the assembled contigs in\nfasta format."
      synonyms:
      - --contigs
      args: !SimpleFlagArg
        name: CONTIGS
      optional: true
    - !Flag
      description: "The fasta-file containign the reference sequences\n(probe-order-file)."
      synonyms:
      - --reference
      args: !SimpleFlagArg
        name: REFERENCE
      optional: true
    - !Flag
      description: "The minimum percent coverage required for a match\n[default=80]."
      synonyms:
      - --min-coverage
      args: !SimpleFlagArg
        name: MIN_COVERAGE
      optional: true
    - !Flag
      description: "The minimum percent identity required for a match\n[default=80]."
      synonyms:
      - --min-identity
      args: !SimpleFlagArg
        name: MIN_IDENTITY
      optional: true
    - !Flag
      description: "Use this flag in case you want to keep those contigs\nthat span\
        \ across multiple exons."
      synonyms:
      - --keep-duplicates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use this flag in case you want to keep loci with signs\nof paralogy\
        \ (multiple contig matches). One randomely\nselected contig will be selected\
        \ for these loci."
      synonyms:
      - --keep-paralogs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use this flag if you want to disable generation of\nstats (can\
        \ be necessary because previous stats files\ncan't be found if files are used\
        \ that were not\npreviously processed with SECAPR)\n"
      synonyms:
      - --disable_stats
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr find_target_contigs [-h] --contigs CONTIGS --reference\
      \ REFERENCE\n                                  --output OUTPUT\n           \
      \                       [--min-coverage MIN_COVERAGE]\n                    \
      \              [--min-identity MIN_IDENTITY]\n                             \
      \     [--keep-duplicates] [--keep-paralogs]\n                              \
      \    [--disable_stats]\n\nExtract the contigs that match the reference database\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  --contigs CONTIGS     The directory containing the assembled contigs in\n\
      \                        fasta format.\n  --reference REFERENCE\n          \
      \              The fasta-file containign the reference sequences\n         \
      \               (probe-order-file).\n  --output OUTPUT       The directory in\
      \ which to store the extracted target\n                        contigs and lastz\
      \ results.\n  --min-coverage MIN_COVERAGE\n                        The minimum\
      \ percent coverage required for a match\n                        [default=80].\n\
      \  --min-identity MIN_IDENTITY\n                        The minimum percent\
      \ identity required for a match\n                        [default=80].\n  --keep-duplicates\
      \     Use this flag in case you want to keep those contigs\n               \
      \         that span across multiple exons.\n  --keep-paralogs       Use this\
      \ flag in case you want to keep loci with signs\n                        of\
      \ paralogy (multiple contig matches). One randomely\n                      \
      \  selected contig will be selected for these loci.\n  --disable_stats     \
      \  Use this flag if you want to disable generation of\n                    \
      \    stats (can be necessary because previous stats files\n                \
      \        can't be found if files are used that were not\n                  \
      \      previously processed with SECAPR)\n"
    generated_using: *id002
  - !Command
    command:
    - secapr
    - clean_reads
    positional: []
    named:
    - !Flag
      description: "The directory containing the unzipped .fastq or .fq\nfiles (raw\
        \ read files)"
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: "A configuration file containing the adapter\ninformation and the\
        \ sample names"
      synonyms:
      - --config
      args: !SimpleFlagArg
        name: CONFIG
      optional: true
    - !Flag
      description: The output directory where results will be saved
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: "Set the minimum read count threshold. Any read file\ncontaining\
        \ fewer reads than this minimum threshold\nwill not be processed further.\
        \ Default: 200000"
      synonyms:
      - --read_min
      args: !SimpleFlagArg
        name: READ_MIN
      optional: true
    - !Flag
      description: "Specify if single- or double-indexed adapters were\nused for the\
        \ library preparation (essential\ninformation in order to interpret the control-file\n\
        correctly)."
      synonyms:
      - --index
      args: !ChoiceFlagArg
        choices: !!set
          ? double
          ? single
      optional: true
    - !Flag
      description: "Specifies the maximum mismatch count which will still\nallow a\
        \ full match to be performed. For more\ninformation see trimmoatic tutorial.\
        \ Default: 2"
      synonyms:
      - --seedMismatches
      args: !SimpleFlagArg
        name: SEEDMISMATCHES
      optional: true
    - !Flag
      description: "Specifies how accurate the match between the two\n\"adapter ligated\"\
        \ reads must be for PE palindrome read\nalignment. Default: 30"
      synonyms:
      - --palindromeClipThreshold
      args: !SimpleFlagArg
        name: PALINDROMECLIPTHRESHOLD
      optional: true
    - !Flag
      description: "Specifies how accurate the match between any adapter\netc. sequence\
        \ must be against a read. For more\ninformation see trimmoatic tutorial. Default:\
        \ 10"
      synonyms:
      - --simpleClipThreshold
      args: !SimpleFlagArg
        name: SIMPLECLIPTHRESHOLD
      optional: true
    - !Flag
      description: "Specifies the number of bases to average across. For\nmore information\
        \ see trimmoatic tutorial. Default: 4"
      synonyms:
      - --windowSize
      args: !SimpleFlagArg
        name: WINDOWSIZE
      optional: true
    - !Flag
      description: "Specifies the average quality required. For more\ninformation\
        \ see trimmoatic tutorial. Default: 15"
      synonyms:
      - --requiredQuality
      args: !SimpleFlagArg
        name: REQUIREDQUALITY
      optional: true
    - !Flag
      description: "Specifies the minimum quality required to keep a base\nat the\
        \ beginning of the read. For more information see\ntrimmoatic tutorial. Default:\
        \ 20"
      synonyms:
      - --leadingQuality
      args: !SimpleFlagArg
        name: LEADINGQUALITY
      optional: true
    - !Flag
      description: "Specifies the minimum quality required to keep a base\nat the\
        \ end of a read. For more information see\ntrimmoatic tutorial. Default: 20"
      synonyms:
      - --trailingQuality
      args: !SimpleFlagArg
        name: TRAILINGQUALITY
      optional: true
    - !Flag
      description: "The number of bases to keep, from the start of the\nread. Everything\
        \ exceeding this length will be removed\nfrom the end of the read. For more\
        \ information see\ntrimmoatic tutorial. Default: 250"
      synonyms:
      - --cropToLength
      args: !SimpleFlagArg
        name: CROPTOLENGTH
      optional: true
    - !Flag
      description: "The number of bases to remove from the start of the\nread. For\
        \ more information see trimmoatic tutorial.\nDefault: 0"
      synonyms:
      - --headCrop
      args: !SimpleFlagArg
        name: HEADCROP
      optional: true
    - !Flag
      description: "Specifies the minimum length of reads to be kept. For\nmore information\
        \ see trimmoatic tutorial. Default: 40"
      synonyms:
      - --minLength
      args: !SimpleFlagArg
        name: MINLENGTH
      optional: true
    - !Flag
      description: "Number of cores to be used for parallelization of\ntrimming algorithm.\n"
      synonyms:
      - --cores
      args: !SimpleFlagArg
        name: CORES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr clean_reads [-h] --input INPUT --config CONFIG --output\
      \ OUTPUT\n                          [--read_min READ_MIN] [--index {single,double}]\n\
      \                          [--seedMismatches SEEDMISMATCHES]\n             \
      \             [--palindromeClipThreshold PALINDROMECLIPTHRESHOLD]\n        \
      \                  [--simpleClipThreshold SIMPLECLIPTHRESHOLD]\n           \
      \               [--windowSize WINDOWSIZE]\n                          [--requiredQuality\
      \ REQUIREDQUALITY]\n                          [--leadingQuality LEADINGQUALITY]\n\
      \                          [--trailingQuality TRAILINGQUALITY]\n           \
      \               [--cropToLength CROPTOLENGTH] [--headCrop HEADCROP]\n      \
      \                    [--minLength MINLENGTH] [--cores CORES]\n\nClean and trim\
      \ raw Illumina read files\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  --input INPUT         The directory containing\
      \ the unzipped .fastq or .fq\n                        files (raw read files)\n\
      \  --config CONFIG       A configuration file containing the adapter\n     \
      \                   information and the sample names\n  --output OUTPUT    \
      \   The output directory where results will be saved\n  --read_min READ_MIN\
      \   Set the minimum read count threshold. Any read file\n                  \
      \      containing fewer reads than this minimum threshold\n                \
      \        will not be processed further. Default: 200000\n  --index {single,double}\n\
      \                        Specify if single- or double-indexed adapters were\n\
      \                        used for the library preparation (essential\n     \
      \                   information in order to interpret the control-file\n   \
      \                     correctly).\n  --seedMismatches SEEDMISMATCHES\n     \
      \                   Specifies the maximum mismatch count which will still\n\
      \                        allow a full match to be performed. For more\n    \
      \                    information see trimmoatic tutorial. Default: 2\n  --palindromeClipThreshold\
      \ PALINDROMECLIPTHRESHOLD\n                        Specifies how accurate the\
      \ match between the two\n                        \"adapter ligated\" reads must\
      \ be for PE palindrome read\n                        alignment. Default: 30\n\
      \  --simpleClipThreshold SIMPLECLIPTHRESHOLD\n                        Specifies\
      \ how accurate the match between any adapter\n                        etc. sequence\
      \ must be against a read. For more\n                        information see\
      \ trimmoatic tutorial. Default: 10\n  --windowSize WINDOWSIZE\n            \
      \            Specifies the number of bases to average across. For\n        \
      \                more information see trimmoatic tutorial. Default: 4\n  --requiredQuality\
      \ REQUIREDQUALITY\n                        Specifies the average quality required.\
      \ For more\n                        information see trimmoatic tutorial. Default:\
      \ 15\n  --leadingQuality LEADINGQUALITY\n                        Specifies the\
      \ minimum quality required to keep a base\n                        at the beginning\
      \ of the read. For more information see\n                        trimmoatic\
      \ tutorial. Default: 20\n  --trailingQuality TRAILINGQUALITY\n             \
      \           Specifies the minimum quality required to keep a base\n        \
      \                at the end of a read. For more information see\n          \
      \              trimmoatic tutorial. Default: 20\n  --cropToLength CROPTOLENGTH\n\
      \                        The number of bases to keep, from the start of the\n\
      \                        read. Everything exceeding this length will be removed\n\
      \                        from the end of the read. For more information see\n\
      \                        trimmoatic tutorial. Default: 250\n  --headCrop HEADCROP\
      \   The number of bases to remove from the start of the\n                  \
      \      read. For more information see trimmoatic tutorial.\n               \
      \         Default: 0\n  --minLength MINLENGTH\n                        Specifies\
      \ the minimum length of reads to be kept. For\n                        more\
      \ information see trimmoatic tutorial. Default: 40\n  --cores CORES        \
      \ Number of cores to be used for parallelization of\n                      \
      \  trimming algorithm.\n"
    generated_using: *id002
  - !Command
    command:
    - secapr
    - locus_selection
    positional:
    - !Positional
      description: --output OUTPUT       The output directory where results will be
        safed.
      position: 0
      name: assembly.
      optional: false
    named:
    - !Flag
      description: The folder with the results of the reference based
      synonyms:
      - --input
      args: !SimpleFlagArg
        name: INPUT
      optional: true
    - !Flag
      description: "The n loci that are best represented accross all\nsamples will\
        \ be extracted."
      synonyms:
      - --n
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: "The threshold for what average read coverage the\nselected target\
        \ loci should at least have."
      synonyms:
      - --read_cov
      args: !SimpleFlagArg
        name: READ_COV
      optional: true
    - !Flag
      description: "Path to reference library fasta file (secapr will find\nit by\
        \ itself if the reference assembly was executed\nwith secapr).\n"
      synonyms:
      - --reference
      args: !SimpleFlagArg
        name: REFERENCE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: secapr locus_selection [-h] --input INPUT --output OUTPUT [--n\
      \ N]\n                              [--read_cov READ_COV] [--reference REFERENCE]\n\
      \nExtract the n loci with the best read-coverage from you reference-based\n\
      assembly (bam-files)\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --input INPUT         The folder with the results\
      \ of the reference based\n                        assembly.\n  --output OUTPUT\
      \       The output directory where results will be safed.\n  --n N         \
      \        The n loci that are best represented accross all\n                \
      \        samples will be extracted.\n  --read_cov READ_COV   The threshold for\
      \ what average read coverage the\n                        selected target loci\
      \ should at least have.\n  --reference REFERENCE\n                        Path\
      \ to reference library fasta file (secapr will find\n                      \
      \  it by itself if the reference assembly was executed\n                   \
      \     with secapr).\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: secapr [-h] [--version]\n              {quality_check,clean_reads,assemble_reads,find_target_contigs,align_sequences,join_exons,reference_assembly,phase_alleles,add_missing_sequences,locus_selection,automate_all}\n\
    \              ...\n\npositional arguments:\n  {quality_check,clean_reads,assemble_reads,find_target_contigs,align_sequences,join_exons,reference_assembly,phase_alleles,add_missing_sequences,locus_selection,automate_all}\n\
    \    quality_check       This script runs a fastqc test on all fastq samples in\n\
    \                        a user-provided folder and creates an overview plot,\n\
    \    clean_reads         Clean and trim raw Illumina read files\n    assemble_reads\
    \      Assemble trimmed Illumina read files (fastq)\n    find_target_contigs\n\
    \                        Extract the contigs that match the reference database\n\
    \    align_sequences     Align sequences and produce separate alignment file\n\
    \                        for each locus, containing the seqeunces of all taxa.\n\
    \    join_exons\n    reference_assembly  Create new reference library and map\
    \ raw reads against\n                        the library (reference-based assembly)\n\
    \    phase_alleles       Phase remapped reads form reference-based assembly\n\
    \                        into two separate alleles. Then produce consensus\n \
    \                       sequence for each allele.\n    add_missing_sequences\n\
    \                        This script will add dummy sequences '?' for missing\n\
    \                        taxons in each alignments, making sure that all\n   \
    \                     alignments in the input folder contain the same taxa\n \
    \                       (as required for e.g. *BEAST).\",\n    locus_selection\
    \     Extract the n loci with the best read-coverage from\n                  \
    \      you reference-based assembly (bam-files)\n    automate_all        This\
    \ script automates the complete secapr pipeline,\n                        producing\
    \ MSAs (allele, contig and BAM-consensus) from\n                        FASTQ\
    \ files\n\noptional arguments:\n  -h, --help            show this help message\
    \ and exit\n  --version             show program's version number and exit\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: secapr add_missing_sequences [-h] --input INPUT --output OUTPUT\n\
  \nThis script will add dummy sequences '?' for missing taxons in each\nalignments,\
  \ making sure that all alignments in the input folder contain the\nsame taxa (as\
  \ required for e.g. *BEAST).\",\n\noptional arguments:\n  -h, --help       show\
  \ this help message and exit\n  --input INPUT    The directory containing fasta\
  \ alignments\n  --output OUTPUT  The output directory where results will be safed\n"
generated_using: *id002
