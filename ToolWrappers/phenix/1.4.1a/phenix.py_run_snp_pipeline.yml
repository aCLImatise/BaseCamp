!Command
command:
- phenix.py
- run_snp_pipeline
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: ''
  synonyms:
  - --workflow
  args: !SimpleFlagArg
    name: WORKFLOW
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "show this help message and exit\n--workflow WORKFLOW, -w WORKFLOW\n\
    --input INPUT, -i INPUT\n-r1 R1                R1/Forward read in Fastq format.\n\
    -r2 R2                R2/Reverse read in Fastq format.\n--reference REFERENCE,\
    \ -r REFERENCE\nRerefence to use for mapping.\n--sample-name SAMPLE_NAME\nName\
    \ of the sample for mapper to include as read groups.\n--outdir OUTDIR, -o OUTDIR\n\
    --config CONFIG, -c CONFIG\n--mapper MAPPER, -m MAPPER\nAvailable mappers: ['bwa',\
    \ 'bowtie2']\n--mapper-options MAPPER_OPTIONS\nCustom maper options (advanced)\n\
    --bam BAM\n--variant VARIANT, -v VARIANT\nAvailable variant callers: ['mpileup',\
    \ 'gatk']\n--variant-options VARIANT_OPTIONS\nCustom variant options (advanced)\n\
    --vcf VCF\n--filters FILTERS     Filters to be applied to the VCF in key:value\
    \ pairs, separated by comma (,). Available_filters: ['gq_score', 'dp4_ratio',\
    \ 'ad_ratio', 'min_depth', 'mq_score', 'mq0_ratio', 'uncall_gt', 'qual_score',\
    \ 'mq0f_ratio']. Recommendations: GATK: mq_score:30,min_depth:10,ad_ratio:0.9\
    \ Mpileup: mq_score:30,min_depth:10,dp4_ratio:0.9\n--annotators ANNOTATORS [ANNOTATORS\
    \ ...]\nList of annotators to run before filters. Available: ['coverage']\n--keep-temp\
    \           Keep intermediate files like BAMs and VCFs (default: False).\n--json\
    \                Also write variant positions in filtered vcf as json file (default:\
    \ False).\n--json-info           When writing a json file, log some stats to stdout.\
    \ (default: False).\n"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: phenix.py run_snp_pipeline [-h] [--workflow WORKFLOW] [--input\
  \ INPUT]\n                                  [-r1 R1] [-r2 R2] [--reference REFERENCE]\n\
  \                                  [--sample-name SAMPLE_NAME]\n               \
  \                   [--outdir OUTDIR] [--config CONFIG]\n                      \
  \            [--mapper MAPPER]\n                                  [--mapper-options\
  \ MAPPER_OPTIONS]\n                                  [--bam BAM] [--variant VARIANT]\n\
  \                                  [--variant-options VARIANT_OPTIONS]\n       \
  \                           [--vcf VCF] [--filters FILTERS]\n                  \
  \                [--annotators ANNOTATORS [ANNOTATORS ...]]\n                  \
  \                [--keep-temp] [--json] [--json-info]\n\nRun the snp pipeline with\
  \ specified mapper, variant caller and some filters.\n\nAvailable mappers: ['bwa',\
  \ 'bowtie2']\n\nAvailable variant callers: ['mpileup', 'gatk']\n\nAvailable filters:\
  \ ['gq_score', 'dp4_ratio', 'ad_ratio', 'min_depth', 'mq_score', 'mq0_ratio', 'uncall_gt',\
  \ 'qual_score', 'mq0f_ratio']\n\nAvailable annotators: ['coverage']\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  --workflow\
  \ WORKFLOW, -w WORKFLOW\n  --input INPUT, -i INPUT\n  -r1 R1                R1/Forward\
  \ read in Fastq format.\n  -r2 R2                R2/Reverse read in Fastq format.\n\
  \  --reference REFERENCE, -r REFERENCE\n                        Rerefence to use\
  \ for mapping.\n  --sample-name SAMPLE_NAME\n                        Name of the\
  \ sample for mapper to include as read groups.\n  --outdir OUTDIR, -o OUTDIR\n \
  \ --config CONFIG, -c CONFIG\n  --mapper MAPPER, -m MAPPER\n                   \
  \     Available mappers: ['bwa', 'bowtie2']\n  --mapper-options MAPPER_OPTIONS\n\
  \                        Custom maper options (advanced)\n  --bam BAM\n  --variant\
  \ VARIANT, -v VARIANT\n                        Available variant callers: ['mpileup',\
  \ 'gatk']\n  --variant-options VARIANT_OPTIONS\n                        Custom variant\
  \ options (advanced)\n  --vcf VCF\n  --filters FILTERS     Filters to be applied\
  \ to the VCF in key:value pairs, separated by comma (,). Available_filters: ['gq_score',\
  \ 'dp4_ratio', 'ad_ratio', 'min_depth', 'mq_score', 'mq0_ratio', 'uncall_gt', 'qual_score',\
  \ 'mq0f_ratio']. Recommendations: GATK: mq_score:30,min_depth:10,ad_ratio:0.9 Mpileup:\
  \ mq_score:30,min_depth:10,dp4_ratio:0.9\n  --annotators ANNOTATORS [ANNOTATORS\
  \ ...]\n                        List of annotators to run before filters. Available:\
  \ ['coverage']\n  --keep-temp           Keep intermediate files like BAMs and VCFs\
  \ (default: False).\n  --json                Also write variant positions in filtered\
  \ vcf as json file (default: False).\n  --json-info           When writing a json\
  \ file, log some stats to stdout. (default: False).\n"
generated_using:
- --help
