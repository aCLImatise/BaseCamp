from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Directory, Boolean, Int

Panaroo_Img_V0_1_0 = CommandToolBuilder(tool="panaroo_img", base_command=["panaroo-img"], inputs=[ToolInput(tag="in_tree", input_type=String(optional=True), prefix="--tree", doc=InputDocumentation(doc="A dated phylogeny.")), ToolInput(tag="in_pa", input_type=String(optional=True), prefix="--pa", doc=InputDocumentation(doc="A presence/absence produced by Panaroo.")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out_dir", doc=InputDocumentation(doc="location of an output directory")), ToolInput(tag="in_number_seperate_use", input_type=String(optional=True), prefix="-D", doc=InputDocumentation(doc="Number of seperate rate classes to use for the\ndispensable genome. Can be either 1 or 2.")), ToolInput(tag="in_no_essential", input_type=Boolean(optional=True), prefix="--no_essential", doc=InputDocumentation(doc="Removes essential gene class from model")), ToolInput(tag="in_no_constraint", input_type=Boolean(optional=True), prefix="--no_constraint", doc=InputDocumentation(doc="Removes constraint that u/v must equal the genome")), ToolInput(tag="in_fit", input_type=String(optional=True), prefix="--fit", doc=InputDocumentation(doc="Whether to use the gene frequency spectrum or the\ncore/pangeome size for fitting (default=gf)")), ToolInput(tag="in_in_it_u_one", input_type=Int(optional=True), prefix="--init_u1", doc=InputDocumentation(doc="Initial value for u1 (default=0.01).")), ToolInput(tag="in_in_it_u_two", input_type=Int(optional=True), prefix="--init_u2", doc=InputDocumentation(doc="Initial value for u2 (default=0.01).")), ToolInput(tag="in_in_it_v_one", input_type=Int(optional=True), prefix="--init_v1", doc=InputDocumentation(doc="Initial value for v1 (default=0.01).")), ToolInput(tag="in_in_it_v_two", input_type=Int(optional=True), prefix="--init_v2", doc=InputDocumentation(doc="Initial value for v2 (default=0.01).")), ToolInput(tag="in_in_it_ess", input_type=Int(optional=True), prefix="--init_ess", doc=InputDocumentation(doc="Initial value for the number of essential genes\n(default=2000).")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="print additional output")), ToolInput(tag="in_size_dot", input_type=Int(), position=0, doc=InputDocumentation(doc="--model {coalescent,fixed}"))], outputs=[ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="location of an output directory"))], container="quay.io/biocontainers/panaroo:1.2.4--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Panaroo_Img_V0_1_0().translate("wdl")

