from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File, Directory

Analyzehic_V0_1_0 = CommandToolBuilder(tool="analyzeHiC", base_command=["analyzeHiC"], inputs=[ToolInput(tag="in_res", input_type=Boolean(optional=True), prefix="-res", doc=InputDocumentation(doc="<#> (Resolution of matrix in bp or use '-res site' [see below], default: 10000000)")), ToolInput(tag="in_window", input_type=Boolean(optional=True), prefix="-window", doc=InputDocumentation(doc="<#> (size of region to count tags for overlapping windows, default: same as res)")), ToolInput(tag="in_chr", input_type=String(optional=True), prefix="-chr", doc=InputDocumentation(doc="(create matrix on this chromosome, default: whole genome)")), ToolInput(tag="in_start", input_type=Boolean(optional=True), prefix="-start", doc=InputDocumentation(doc="<#> (start matrix at this position, default:0)")), ToolInput(tag="in_end", input_type=Boolean(optional=True), prefix="-end", doc=InputDocumentation(doc="<#> (end matrix at this position, default: no limit)")), ToolInput(tag="in_pos", input_type=String(optional=True), prefix="-pos", doc=InputDocumentation(doc=":xxxxxx-yyyyyy (UCSC formatted position instead of -chr/-start/-end)")), ToolInput(tag="in_start_two", input_type=Int(optional=True), prefix="-start2", doc=InputDocumentation(doc="<#>, -end2 <#>, or -pos2 (Use these positions on the\ny-axis of the matrix.  Otherwise the matrix will be sysmetric)")), ToolInput(tag="in_specify_regions_make", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="(specify regions to make matrix, unbalanced, use -p2 <peak file>)")), ToolInput(tag="in_vs_genome", input_type=Boolean(optional=True), prefix="-vsGenome", doc=InputDocumentation(doc="(normally makes a square matrix, this will force 2nd set of peaks to be the genome)")), ToolInput(tag="in_chop_if_y", input_type=Boolean(optional=True), prefix="-chopify", doc=InputDocumentation(doc="(divide up peaks into regions the size of the resolution, default: use peak midpoints)")), ToolInput(tag="in_relative", input_type=Boolean(optional=True), prefix="-relative", doc=InputDocumentation(doc="(use with -maxDist <#>, outputs diagonal of matrix up to maxDistance)")), ToolInput(tag="in_pout", input_type=File(optional=True), prefix="-pout", doc=InputDocumentation(doc="(output peaks used for analysis as a peak file, -pout2 <file> for 2nd set)")), ToolInput(tag="in_ihs_kb", input_type=Boolean(optional=True), prefix="-ihskb", doc=InputDocumentation(doc="<#> (normalize counts to 'interactions per hundred square kilobases per billion, default)\nUse '-normTotal <#>' and '-normArea <#>' to modify normalization constants, area in bp^2\nUse '-normTotal given' and '-normArea given' to disable normalizations")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="(report raw interaction counts)")), ToolInput(tag="in_coverage_norm", input_type=Boolean(optional=True), prefix="-coverageNorm", doc=InputDocumentation(doc="(Only adjust reads based on total interactions per region, default)")), ToolInput(tag="in_balance", input_type=Boolean(optional=True), prefix="-balance", doc=InputDocumentation(doc="(balance resulting matrix - row/column totals the same)")), ToolInput(tag="in_dist_norm", input_type=Boolean(optional=True), prefix="-distNorm", doc=InputDocumentation(doc="(return log2 obs/expected counts normalized for interaction distance)")), ToolInput(tag="in_no_log", input_type=Boolean(optional=True), prefix="-nolog", doc=InputDocumentation(doc="(force matrix to be linear or log2 transformed)")), ToolInput(tag="in_corr", input_type=Boolean(optional=True), prefix="-corr", doc=InputDocumentation(doc="(report Pearson's correlation coeff, use '-corrIters <#>' to recursively calculate)")), ToolInput(tag="in_corr_depth", input_type=Boolean(optional=True), prefix="-corrDepth", doc=InputDocumentation(doc="<#> (merge regions in correlation so that minimum # expected tags per data point)")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="(Output file name, default: sent to stdout)")), ToolInput(tag="in_compaction_stats", input_type=File(optional=True), prefix="-compactionStats", doc=InputDocumentation(doc="(calculates DLR and ICF compaction scores)")), ToolInput(tag="in_dlr_distance", input_type=Boolean(optional=True), prefix="-dlrDistance", doc=InputDocumentation(doc="<#> (Cutoff distance for distal vs. local interactions for DLR, default: 3Mb")), ToolInput(tag="in_ifc", input_type=File(optional=True), prefix="-ifc", doc=InputDocumentation(doc="(outputs interaction frequence curve for regions, can set to 'auto')")), ToolInput(tag="in_four_c", input_type=File(optional=True), prefix="-4C", doc=InputDocumentation(doc="(outputs tags interacting with specified regions)")), ToolInput(tag="in_cpu", input_type=Boolean(optional=True), prefix="-cpu", doc=InputDocumentation(doc="<#> (number of CPUs to use, default: 1)")), ToolInput(tag="in_no_matrix", input_type=Boolean(optional=True), prefix="-nomatrix", doc=InputDocumentation(doc="(skip matrix creation - use if more than 100,000 loci)")), ToolInput(tag="in_std", input_type=Boolean(optional=True), prefix="-std", doc=InputDocumentation(doc="<#> (# of std deviations from mean interactions per region to exclude, default:8)")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="-min", doc=InputDocumentation(doc="<#> (minimum fraction of average read depth to include in analysis, default: 0.05)")), ToolInput(tag="in_min_expect", input_type=Boolean(optional=True), prefix="-minExpect", doc=InputDocumentation(doc="<#> (minimum fraction of average read depth to use for coverage normalization, default: 0.75)")), ToolInput(tag="in_override", input_type=Boolean(optional=True), prefix="-override", doc=InputDocumentation(doc="(Allow very large matrices to be created... be carful using this)")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="-force", doc=InputDocumentation(doc="(force the creation of a fresh genome-wide background model)")), ToolInput(tag="in_bg_only", input_type=Boolean(optional=True), prefix="-bgonly", doc=InputDocumentation(doc="(quit after creating the background model)")), ToolInput(tag="in_create_model", input_type=File(optional=True), prefix="-createModel", doc=InputDocumentation(doc="(Create custome bg from regions specified, i.e. -p/-pos)")), ToolInput(tag="in_model", input_type=File(optional=True), prefix="-model", doc=InputDocumentation(doc="(Use Custom background model, -modelBg for -ped)")), ToolInput(tag="in_randomize", input_type=File(optional=True), prefix="-randomize", doc=InputDocumentation(doc="<# reads> (and the output is a PE tag file, initail PE tag directory not used\nUse makeTagDirectory ... -t outputfile to create the new directory)")), ToolInput(tag="in_logp", input_type=Boolean(optional=True), prefix="-logp", doc=InputDocumentation(doc="(output log p-values from old-style interaction calculations)")), ToolInput(tag="in_expected", input_type=Boolean(optional=True), prefix="-expected", doc=InputDocumentation(doc="(report expected interaction counts based on average profile)")), ToolInput(tag="in_raw_and_expected", input_type=File(optional=True), prefix="-rawAndExpected", doc=InputDocumentation(doc="(raw counts sent to stdout)")), ToolInput(tag="in_cluster", input_type=Boolean(optional=True), prefix="-cluster", doc=InputDocumentation(doc="(cluster regions, uses '-o' to name cdt/gtr files, default: out.cdt)")), ToolInput(tag="in_cluster_fixed", input_type=Boolean(optional=True), prefix="-clusterFixed", doc=InputDocumentation(doc="(clusters adjacent regions, good for linear domains)")), ToolInput(tag="in_interactions", input_type=File(optional=True), prefix="-interactions", doc=InputDocumentation(doc="(output interactions, add '-center' to adjust pos to avg of reads)")), ToolInput(tag="in_p_value", input_type=Boolean(optional=True), prefix="-pvalue", doc=InputDocumentation(doc="<#> (p-value cutoff for interactions, default 0.001)")), ToolInput(tag="in_zscore", input_type=Boolean(optional=True), prefix="-zscore", doc=InputDocumentation(doc="<#> (z-score cutoff for interactions, default 1.0)")), ToolInput(tag="in_mind_ist", input_type=Boolean(optional=True), prefix="-minDist", doc=InputDocumentation(doc="<#> (Minimum interaction distance, default: resolution/2)")), ToolInput(tag="in_max_dist", input_type=Boolean(optional=True), prefix="-maxDist", doc=InputDocumentation(doc="<#> (Maximum interaction distance, default: -1=none)")), ToolInput(tag="in_boundary", input_type=Boolean(optional=True), prefix="-boundary", doc=InputDocumentation(doc="<#> (score boundaries at the given scale i.e. 100000)")), ToolInput(tag="in_washu", input_type=Boolean(optional=True), prefix="-washu", doc=InputDocumentation(doc="(Both matrix and interaction outputs will be in WashH BED format)")), ToolInput(tag="in_circo_s", input_type=File(optional=True), prefix="-circos", doc=InputDocumentation(doc="(creates circos files with the given prefix)")), ToolInput(tag="in_plot_tag_densities", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="[tag directory 2] ... (will plot tag densities with circos)")), ToolInput(tag="in_similar_visiualization_genesg", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="(similar to visiualization of genes/-g, but no labels)")), ToolInput(tag="in_shows_gene_locations", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="(shows gene locations)")), ToolInput(tag="in_hist", input_type=Boolean(optional=True), prefix="-hist", doc=InputDocumentation(doc="<#> (create a histogram matrix around peak positions, # is the resolution)")), ToolInput(tag="in_size", input_type=Boolean(optional=True), prefix="-size", doc=InputDocumentation(doc="<#> (size of region in histogram, default = 100 * resolution)")), ToolInput(tag="in_analyzing_specific_sets", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="(for analyzing specific sets of interactions)")), ToolInput(tag="in_i_raw", input_type=File(optional=True), prefix="-iraw", doc=InputDocumentation(doc="(output raw reads from interactions, or -irawtags <file>)")), ToolInput(tag="in_pe_tag_directory", input_type=Directory(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_pout", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pout", type_hint=File()), doc=OutputDocumentation(doc="(output peaks used for analysis as a peak file, -pout2 <file> for 2nd set)")), ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="(Output file name, default: sent to stdout)")), ToolOutput(tag="out_compaction_stats", output_type=File(optional=True), selector=InputSelector(input_to_select="in_compaction_stats", type_hint=File()), doc=OutputDocumentation(doc="(calculates DLR and ICF compaction scores)")), ToolOutput(tag="out_ifc", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ifc", type_hint=File()), doc=OutputDocumentation(doc="(outputs interaction frequence curve for regions, can set to 'auto')")), ToolOutput(tag="out_four_c", output_type=File(optional=True), selector=InputSelector(input_to_select="in_four_c", type_hint=File()), doc=OutputDocumentation(doc="(outputs tags interacting with specified regions)")), ToolOutput(tag="out_create_model", output_type=File(optional=True), selector=InputSelector(input_to_select="in_create_model", type_hint=File()), doc=OutputDocumentation(doc="(Create custome bg from regions specified, i.e. -p/-pos)")), ToolOutput(tag="out_randomize", output_type=File(optional=True), selector=InputSelector(input_to_select="in_randomize", type_hint=File()), doc=OutputDocumentation(doc="<# reads> (and the output is a PE tag file, initail PE tag directory not used\nUse makeTagDirectory ... -t outputfile to create the new directory)")), ToolOutput(tag="out_i_raw", output_type=File(optional=True), selector=InputSelector(input_to_select="in_i_raw", type_hint=File()), doc=OutputDocumentation(doc="(output raw reads from interactions, or -irawtags <file>)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Analyzehic_V0_1_0().translate("wdl", allow_empty_container=True)

