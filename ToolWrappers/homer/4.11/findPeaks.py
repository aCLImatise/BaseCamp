from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, Boolean, String

Findpeaks_V0_1_0 = CommandToolBuilder(tool="findPeaks", base_command=["findPeaks"], inputs=[ToolInput(tag="in_file_name_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="(file name for to output peaks, default: stdout)\n'-o auto' will send output to '<tag directory>/peaks.txt', '.../regions.txt',\nor '.../transcripts.txt' depending on the '-style' option")), ToolInput(tag="in_style", input_type=Int(optional=True), prefix="-style", doc=InputDocumentation(doc="(Specialized options for specific analysis strategies)\nfactor (transcription factor ChIP-Seq, uses -center, output: peaks.txt,  default)\nhistone (histone modification ChIP-Seq, region based, uses -region -size 500 -L 0, regions.txt)\ngroseq (de novo transcript identification from GroSeq data, transcripts.txt)\ntss (TSS identification from 5' RNA sequencing, tss.txt)\ndnase (Hypersensitivity [crawford style (nicking)], peaks.txt)\nsuper (Super Enhancers, superEnhancers.txt)\nsuperhistone (Super Enhancers from H3K27ac data, superEnhancers.txt)\nmC (Cytosine methylation (BS-seq/methylC-seq), regions.txt)\ndamid (DamID enrichment from DpnI digestion, regions.txt)\nclip (CLIP-Seq enrichment, strand specific, peaks.txt)")), ToolInput(tag="in_experiment_use_igginputcontrol", input_type=Directory(optional=True), prefix="-i", doc=InputDocumentation(doc="(Experiment to use as IgG/Input/Control)")), ToolInput(tag="in_size", input_type=Boolean(optional=True), prefix="-size", doc=InputDocumentation(doc="<#> (Peak size, default: auto)")), ToolInput(tag="in_mind_ist", input_type=Boolean(optional=True), prefix="-minDist", doc=InputDocumentation(doc="<#> (minimum distance between peaks, default: peak size x2)")), ToolInput(tag="in_g_size", input_type=Boolean(optional=True), prefix="-gsize", doc=InputDocumentation(doc="<#> (Set effective mappable genome size, default: 2e9)")), ToolInput(tag="in_frag_length", input_type=Boolean(optional=True), prefix="-fragLength", doc=InputDocumentation(doc="<#|auto> (Approximate fragment length, default: auto)")), ToolInput(tag="in_input_frag_length", input_type=Boolean(optional=True), prefix="-inputFragLength", doc=InputDocumentation(doc="<#|auto> (Approximate fragment length of input tags, default: auto)")), ToolInput(tag="in_tbp", input_type=Boolean(optional=True), prefix="-tbp", doc=InputDocumentation(doc="<#> (Maximum tags per bp to count, 0 = no limit, default: auto)")), ToolInput(tag="in_input_tbp", input_type=Boolean(optional=True), prefix="-inputtbp", doc=InputDocumentation(doc="<#> (Maximum tags per bp to count in input, 0 = no limit, default: auto)")), ToolInput(tag="in_strand", input_type=String(optional=True), prefix="-strand", doc=InputDocumentation(doc="(find peaks using tags on both strands or separate, default:both)")), ToolInput(tag="in_norm", input_type=Boolean(optional=True), prefix="-norm", doc=InputDocumentation(doc="# (Tag count to normalize to, default 10000000)")), ToolInput(tag="in_region", input_type=Boolean(optional=True), prefix="-region", doc=InputDocumentation(doc="(extends start/stop coordinates to cover full region considered 'enriched')")), ToolInput(tag="in_region_res", input_type=Boolean(optional=True), prefix="-regionRes", doc=InputDocumentation(doc="<#> (number of fractions peaks are divided in when extending 'regions', def: 4)")), ToolInput(tag="in_center", input_type=Boolean(optional=True), prefix="-center", doc=InputDocumentation(doc="(Centers peaks on maximum tag overlap and calculates focus ratios)")), ToolInput(tag="in_nfr", input_type=Boolean(optional=True), prefix="-nfr", doc=InputDocumentation(doc="(Centers peaks on most likely nucleosome free region [works best with mnase data])\n(-center and -nfr can be performed later with 'getPeakTags'")), ToolInput(tag="in_fold_enrichment_input", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="<#> (fold enrichment over input tag count, default: 4.0)")), ToolInput(tag="in_poisson_pvalue_input", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="<#> (poisson p-value threshold relative to input tag count, default: 0.0001)")), ToolInput(tag="in_fold_enrichment_local", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="<#> (fold enrichment over local tag count, default: 4.0)")), ToolInput(tag="in_lp", input_type=Boolean(optional=True), prefix="-LP", doc=InputDocumentation(doc="<#> (poisson p-value threshold relative to local tag count, default: 0.0001)")), ToolInput(tag="in_fold_enrichment_limit", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="<#> (fold enrichment limit of expected unique tag positions, default: 2.0)")), ToolInput(tag="in_local_size", input_type=Boolean(optional=True), prefix="-localSize", doc=InputDocumentation(doc="<#> (region to check for local tag enrichment, default: 10000)")), ToolInput(tag="in_input_size", input_type=Boolean(optional=True), prefix="-inputSize", doc=InputDocumentation(doc="<#> (Size of region to search for control tags, default: 2x peak size)")), ToolInput(tag="in_fdr", input_type=Boolean(optional=True), prefix="-fdr", doc=InputDocumentation(doc="<#> (False discovery rate, default = 0.001)")), ToolInput(tag="in_poisson", input_type=Boolean(optional=True), prefix="-poisson", doc=InputDocumentation(doc="<#> (Set poisson p-value cutoff, default: uses fdr)")), ToolInput(tag="in_tag_threshold", input_type=Boolean(optional=True), prefix="-tagThreshold", doc=InputDocumentation(doc="<#> (Set # of tags to define a peak, default: 25)")), ToolInput(tag="in_n_tag_threshold", input_type=Boolean(optional=True), prefix="-ntagThreshold", doc=InputDocumentation(doc="<#> (Set # of normalized tags to define a peak, by default uses 1e7 for norm)")), ToolInput(tag="in_min_tag_threshold", input_type=Boolean(optional=True), prefix="-minTagThreshold", doc=InputDocumentation(doc="<#> (Absolute minimum tags per peak, default: expected tags per peak)")), ToolInput(tag="in_super_slope", input_type=Boolean(optional=True), prefix="-superSlope", doc=InputDocumentation(doc="<#> (Slope threshold to identify super vs. typical enh., default: 1.00)")), ToolInput(tag="in_super_window", input_type=Boolean(optional=True), prefix="-superWindow", doc=InputDocumentation(doc="<#> (moving window/number of peaks to use to calculate slope, default: 10)")), ToolInput(tag="in_typical", input_type=File(optional=True), prefix="-typical", doc=InputDocumentation(doc="(Output typical enhancers to this file, default: not used)")), ToolInput(tag="in_input_peaks", input_type=File(optional=True), prefix="-inputPeaks", doc=InputDocumentation(doc="(initial peaks to use for super enhancer merging/scoring)")), ToolInput(tag="in_exclude_peaks", input_type=File(optional=True), prefix="-excludePeaks", doc=InputDocumentation(doc="(regions to exclude from analysis, i.e. TSS regions for H3K27ac)")), ToolInput(tag="in_un_methyl_c", input_type=Boolean(optional=True), prefix="-unmethylC", doc=InputDocumentation(doc="(find unmethylated/methylated regions, default: -unmethyC)")), ToolInput(tag="in_mc_thresh", input_type=Boolean(optional=True), prefix="-mCthresh", doc=InputDocumentation(doc="<#> (methylation threshold of regions, default: avg methylation/2)")), ToolInput(tag="in_minn_umc", input_type=Boolean(optional=True), prefix="-minNumC", doc=InputDocumentation(doc="<#> (Minimum number of cytosines per methylation peak, default: 6)")), ToolInput(tag="in_tss_size", input_type=Boolean(optional=True), prefix="-tssSize", doc=InputDocumentation(doc="<#> (size of region for initiation detection/artifact size, default: 250)")), ToolInput(tag="in_min_body_size", input_type=Boolean(optional=True), prefix="-minBodySize", doc=InputDocumentation(doc="<#> (size of regoin for transcript body detection, default: 1000)")), ToolInput(tag="in_tss_fold", input_type=Boolean(optional=True), prefix="-tssFold", doc=InputDocumentation(doc="<#> (fold enrichment for new initiation dectection, default: 4.0)")), ToolInput(tag="in_body_fold", input_type=Boolean(optional=True), prefix="-bodyFold", doc=InputDocumentation(doc="<#> (fold enrichment for new transcript dectection, default: 4.0)")), ToolInput(tag="in_end_fold", input_type=Boolean(optional=True), prefix="-endFold", doc=InputDocumentation(doc="<#> (end transcript when levels are this much less than the start, default: 10.0)")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="-method", doc=InputDocumentation(doc="(method used for identifying new transcripts, default: fold)")), ToolInput(tag="in_uniq_map", input_type=Directory(optional=True), prefix="-uniqmap", doc=InputDocumentation(doc="(directory of binary files specifying uniquely mappable locations)\nDownload from http://biowhat.ucsd.edu/homer/groseq/")), ToolInput(tag="in_conf_p_value", input_type=Boolean(optional=True), prefix="-confPvalue", doc=InputDocumentation(doc="<#> (confidence p-value: 1.00e-05)")), ToolInput(tag="in_min_read_depth", input_type=Boolean(optional=True), prefix="-minReadDepth", doc=InputDocumentation(doc="<#> (Minimum initial read depth for transcripts, default: auto)")), ToolInput(tag="in_pseudo_count", input_type=Boolean(optional=True), prefix="-pseudoCount", doc=InputDocumentation(doc="<#> (Pseudo tag count, default: 2.0)")), ToolInput(tag="in_rev", input_type=Boolean(optional=True), prefix="-rev", doc=InputDocumentation(doc="(reverse strand of reads - for first-strand rna-seq/gro-seq)")), ToolInput(tag="in_gtf", input_type=File(optional=True), prefix="-gtf", doc=InputDocumentation(doc="(Output de novo transcripts in GTF format)\n'-o auto' will produce <dir>/transcripts.txt and <dir>/transcripts.gtf\n")), ToolInput(tag="in_tag_directory", input_type=Directory(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_file_name_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_name_output", type_hint=File()), doc=OutputDocumentation(doc="(file name for to output peaks, default: stdout)\n'-o auto' will send output to '<tag directory>/peaks.txt', '.../regions.txt',\nor '.../transcripts.txt' depending on the '-style' option")), ToolOutput(tag="out_typical", output_type=File(optional=True), selector=InputSelector(input_to_select="in_typical", type_hint=File()), doc=OutputDocumentation(doc="(Output typical enhancers to this file, default: not used)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Findpeaks_V0_1_0().translate("wdl", allow_empty_container=True)

