from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, Int, File, String

Analyzerna_Pl_V0_1_0 = CommandToolBuilder(tool="analyzeRNA.pl", base_command=["analyzeRNA.pl"], inputs=[ToolInput(tag="in_or", input_type=Boolean(optional=True), prefix="-or-", doc=InputDocumentation(doc=": analyzeRNA.pl <custom RNA/GTF file> <organism|none>  [additional options...]")), ToolInput(tag="in_list_experiment_directories", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="[tag directory 2] ... (list of experiment directories to show\ntag counts for) NOTE: -dfile <file> where file is a list of directories in first column")), ToolInput(tag="in_rp_km", input_type=Boolean(optional=True), prefix="-rpkm", doc=InputDocumentation(doc="(Report results as reads per kb per million mapped)")), ToolInput(tag="in_norm", input_type=Boolean(optional=True), prefix="-norm", doc=InputDocumentation(doc="<#> (Normalize to total mapped tags: default 1e7)")), ToolInput(tag="in_norm_matrix", input_type=Boolean(optional=True), prefix="-normMatrix", doc=InputDocumentation(doc="<#> (Normalize to total tags in gene expression matrix: not used)")), ToolInput(tag="in_no_adj", input_type=Boolean(optional=True), prefix="-noadj", doc=InputDocumentation(doc="(Don't normalize, -raw works too)")), ToolInput(tag="in_count", input_type=Int(optional=True), prefix="-count", doc=InputDocumentation(doc="(Count tags in introns, exons, etc., default: genes)")), ToolInput(tag="in_no_condensing", input_type=Boolean(optional=True), prefix="-noCondensing", doc=InputDocumentation(doc="(do not condense counts from entries will same ID, default: do condense)")), ToolInput(tag="in_pc", input_type=Boolean(optional=True), prefix="-pc", doc=InputDocumentation(doc="<#> (maximum tags to count per position, default: 0=no limit)")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="-strand", doc=InputDocumentation(doc="<+|-|both> (count tags on indicated strand, default: +)")), ToolInput(tag="in_gene", input_type=File(optional=True), prefix="-gene", doc=InputDocumentation(doc="... (Adds additional data to result based on the closest gene.\nThis is useful for adding gene expression data.  The file must have a header,\nand the first column must be a GeneID, Accession number, etc.  If the peak\ncannot be mapped to data in the file then the entry will be left empty.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="(output tag counts as randomized log2 values - for scatter plots)")), ToolInput(tag="in_sqrt", input_type=Boolean(optional=True), prefix="-sqrt", doc=InputDocumentation(doc="(output tag counts as randomized sqrt values - for scatter plots)")), ToolInput(tag="in_tss", input_type=Boolean(optional=True), prefix="-tss", doc=InputDocumentation(doc="(estimate actual TSS in 1st exon and report as the centered position in columns 3 & 4)")), ToolInput(tag="in_start", input_type=Boolean(optional=True), prefix="-start", doc=InputDocumentation(doc="<#> (start counting tags relative # offset of beginning of gene)")), ToolInput(tag="in_end", input_type=Boolean(optional=True), prefix="-end", doc=InputDocumentation(doc="<#> (finish counting tags relative # offset to end of the gene)")), ToolInput(tag="in_maxlength", input_type=Boolean(optional=True), prefix="-maxLength", doc=InputDocumentation(doc="<#> (Don't count tags past # bp from the TSS, useful for GroSeq)")), ToolInput(tag="in_pausing", input_type=Boolean(optional=True), prefix="-pausing", doc=InputDocumentation(doc="<#> (calculate ratio of pausing first [# bp of transcript] to gene body)\nProduces 3 columns - promoter rpk, body rpk, and ratio (add -log for log versions)\nAlso sets '-count genes'.  Use '-strand both' when analyzing Pol II ChIP-Seq\nrpk is reads per kb - set -norm 1e6 or -normMatrix 1e6 to get rpkm\n")), ToolInput(tag="in_rna_vertical_line_repeats", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome_version", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_additional", input_type=String(optional=True), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_options_dot_dot_dot", input_type=String(optional=True), position=3, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Analyzerna_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

