from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Boolean

Findknownmotifs_Pl_V0_1_0 = CommandToolBuilder(tool="findKnownMotifs.pl", base_command=["findKnownMotifs.pl"], inputs=[ToolInput(tag="in_tsv_sequence_file", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="(tsv sequence file)")), ToolInput(tag="in_tsv_group_file", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="(tsv group file)")), ToolInput(tag="in_known_motif_file", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="(Known motif file, default: /usr/local/share/homer-4.11-2/.//data/knownTFs/known.motifs)")), ToolInput(tag="in_stat", input_type=String(optional=True), prefix="-stat", doc=InputDocumentation(doc="(default: hypergeo)")), ToolInput(tag="in_p_value", input_type=Boolean(optional=True), prefix="-pvalue", doc=InputDocumentation(doc="<#> (p-value cutoff, default: 0.01)")), ToolInput(tag="in_optimize", input_type=Boolean(optional=True), prefix="-optimize", doc=InputDocumentation(doc="(Optimize motif degeneracy thresholds to maximize enrichment)")), ToolInput(tag="in_homer", input_type=Boolean(optional=True), prefix="-homer", doc=InputDocumentation(doc="(use original homer, default, for now...)")), ToolInput(tag="in_homer_two", input_type=Boolean(optional=True), prefix="-homer2", doc=InputDocumentation(doc="(use homer2)")), ToolInput(tag="in_number_use_homer", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="<#> (number of CPUs to use, homer2 only)")), ToolInput(tag="in_cache", input_type=Boolean(optional=True), prefix="-cache", doc=InputDocumentation(doc="<#> (size in MB of statistics cache, default: 500)")), ToolInput(tag="in_bits", input_type=Boolean(optional=True), prefix="-bits", doc=InputDocumentation(doc="(scale logos by information content)")), ToolInput(tag="in_dbview", input_type=Boolean(optional=True), prefix="-dbview", doc=InputDocumentation(doc="(internal option)")), ToolInput(tag="in_seq_logo", input_type=Boolean(optional=True), prefix="-seqlogo", doc=InputDocumentation(doc="(Use Weblogo/seqlogo/ghostscript, by default now generates SVG logos)")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="-rna", doc=InputDocumentation(doc="(output RNA logos i.e. U instead of T)"))], outputs=[ToolOutput(tag="out_known_motif_file", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_known_motif_file", type_hint=File()), doc=OutputDocumentation(doc="(Known motif file, default: /usr/local/share/homer-4.11-2/.//data/knownTFs/known.motifs)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Findknownmotifs_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

