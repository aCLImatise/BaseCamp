!Command
command:
- anvi-get-sequences-for-gene-calls
positional:
- !Positional
  description: --get-aa-sequences    Store amino acid sequences instead.
  position: 0
  name: format.
  optional: false
named:
- !Flag
  description: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: "Gene caller ids. Multiple of them can be declared\nseparated by a\
    \ delimiter (the default is a comma). In\nanvi-gen-variability-profile, if you\
    \ declare nothing\nyou will get all genes matching your other filtering\ncriteria.\
    \ In other programs, you may get everything,\nnothing, or an error. It really\
    \ depends on the\nsituation. Fortunately, mistakes are cheap, so it's\nworth a\
    \ try."
  synonyms:
  - --gene-caller-ids
  args: !SimpleFlagArg
    name: GENE_CALLER_IDS
  optional: true
- !Flag
  description: "The delimiter to parse multiple input terms. The\ndefault is ','."
  synonyms:
  - --delimiter
  args: !SimpleFlagArg
    name: CHAR
  optional: true
- !Flag
  description: "When declared, the deflines in the resulting FASTA\nfile will contain\
    \ more information."
  synonyms:
  - --report-extended-deflines
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "When to wrap sequences when storing them in a FASTA\nfile. The default\
    \ is '120'. A value of '0' would be\nequivalent to 'do not wrap'."
  synonyms:
  - --wrap
  args: !SimpleFlagArg
    name: WRAP
  optional: true
- !Flag
  description: If this is true, the output file will be in GFF3
  synonyms:
  - --export-gff3
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Anvi'o genomes storage file
  synonyms:
  - -g
  - --genomes-storage
  args: !SimpleFlagArg
    name: GENOMES_STORAGE
  optional: true
- !Flag
  description: "Genome names to 'focus'. You can use this parameter to\nlimit the\
    \ genomes included in your analysis. You can\nprovide these names as a comma-separated\
    \ list of\nnames, or you can put them in a file, where you have a\nsingle genome\
    \ name in each line, and provide the file\npath."
  synonyms:
  - -G
  - --genome-names
  args: !SimpleFlagArg
    name: GENOME_NAMES
  optional: true
- !Flag
  description: "File path to store results.\n"
  synonyms:
  - -o
  - --output-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-get-sequences-for-gene-calls [-h] [-c CONTIGS_DB]\n      \
  \                                   [--gene-caller-ids GENE_CALLER_IDS]\n      \
  \                                   [--delimiter CHAR]\n                       \
  \                  [--report-extended-deflines]\n                              \
  \           [--wrap WRAP] [--export-gff3]\n                                    \
  \     [--get-aa-sequences]\n                                         [-g GENOMES_STORAGE]\n\
  \                                         [-G GENOME_NAMES] -o FILE_PATH\n\nA script\
  \ to get back sequences for gene calls\n\noptional arguments:\n  -h, --help    \
  \        show this help message and exit\n\nOPTION #1: EXPORT FROM CONTIGS DB:\n\
  \  -c CONTIGS_DB, --contigs-db CONTIGS_DB\n                        Anvi'o contigs\
  \ database generated by 'anvi-gen-\n                        contigs'\n  --gene-caller-ids\
  \ GENE_CALLER_IDS\n                        Gene caller ids. Multiple of them can\
  \ be declared\n                        separated by a delimiter (the default is\
  \ a comma). In\n                        anvi-gen-variability-profile, if you declare\
  \ nothing\n                        you will get all genes matching your other filtering\n\
  \                        criteria. In other programs, you may get everything,\n\
  \                        nothing, or an error. It really depends on the\n      \
  \                  situation. Fortunately, mistakes are cheap, so it's\n       \
  \                 worth a try.\n  --delimiter CHAR      The delimiter to parse multiple\
  \ input terms. The\n                        default is ','.\n  --report-extended-deflines\n\
  \                        When declared, the deflines in the resulting FASTA\n  \
  \                      file will contain more information.\n  --wrap WRAP      \
  \     When to wrap sequences when storing them in a FASTA\n                    \
  \    file. The default is '120'. A value of '0' would be\n                     \
  \   equivalent to 'do not wrap'.\n  --export-gff3         If this is true, the output\
  \ file will be in GFF3\n                        format.\n  --get-aa-sequences  \
  \  Store amino acid sequences instead.\n\nOPTION #2: EXPORT FROM A GENOMES STORAGE:\n\
  \  -g GENOMES_STORAGE, --genomes-storage GENOMES_STORAGE\n                     \
  \   Anvi'o genomes storage file\n  -G GENOME_NAMES, --genome-names GENOME_NAMES\n\
  \                        Genome names to 'focus'. You can use this parameter to\n\
  \                        limit the genomes included in your analysis. You can\n\
  \                        provide these names as a comma-separated list of\n    \
  \                    names, or you can put them in a file, where you have a\n  \
  \                      single genome name in each line, and provide the file\n \
  \                       path.\n\nOPTIONS COMMON TO ALL INPUTS:\n  -o FILE_PATH,\
  \ --output-file FILE_PATH\n                        File path to store results.\n"
generated_using:
- --help
