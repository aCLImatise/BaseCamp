from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Seqkit_Amplicon_V0_1_0 = CommandToolBuilder(tool="seqkit_amplicon", base_command=["seqkit", "amplicon"], inputs=[ToolInput(tag="in_y_invalid", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=":y (invalid)")), ToolInput(tag="in_xy_xyf_r", input_type=Boolean(optional=True), prefix="-3-1", doc=InputDocumentation(doc="x/y\n1 3 5    x/y\nF             R")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="--bed", doc=InputDocumentation(doc="output in BED6+1 format with amplicon as 7th columns")), ToolInput(tag="in_flanking_region", input_type=Boolean(optional=True), prefix="--flanking-region", doc=InputDocumentation(doc="region is flanking region")), ToolInput(tag="in_forward", input_type=Int(optional=True), prefix="--forward", doc=InputDocumentation(doc="forward primer (5'-primer-3'), degenerate bases allowed")), ToolInput(tag="in_max_mismatch", input_type=Int(optional=True), prefix="--max-mismatch", doc=InputDocumentation(doc="max mismatch when matching primers")), ToolInput(tag="in_only_positive_strand", input_type=Boolean(optional=True), prefix="--only-positive-strand", doc=InputDocumentation(doc="only search on positive strand")), ToolInput(tag="in_primer_file", input_type=File(optional=True), prefix="--primer-file", doc=InputDocumentation(doc="3- or 2-column tabular primer file, with first column as primer name")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="--region", doc=InputDocumentation(doc="specify region to return. type 'seqkit amplicon -h' for detail")), ToolInput(tag="in_reverse", input_type=Int(optional=True), prefix="--reverse", doc=InputDocumentation(doc="reverse primer (5'-primer-3'), degenerate bases allowed")), ToolInput(tag="in_strict_mode", input_type=Boolean(optional=True), prefix="--strict-mode", doc=InputDocumentation(doc="strict mode, i.e., discarding seqs not fully matching (shorter) given region range")), ToolInput(tag="in_alphabet_guess_seq_length", input_type=Int(optional=True), prefix="--alphabet-guess-seq-length", doc=InputDocumentation(doc="length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)")), ToolInput(tag="in_id_ncbi", input_type=Boolean(optional=True), prefix="--id-ncbi", doc=InputDocumentation(doc="FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud...")), ToolInput(tag="in_id_regexp", input_type=String(optional=True), prefix="--id-regexp", doc=InputDocumentation(doc="regular expression for parsing ID (default '^(\\S+)\\s?')")), ToolInput(tag="in_in_file_list", input_type=File(optional=True), prefix="--infile-list", doc=InputDocumentation(doc="file of input files list (one file per line), if given, they are appended to files from cli arguments")), ToolInput(tag="in_line_width", input_type=Int(optional=True), prefix="--line-width", doc=InputDocumentation(doc="line width when outputing FASTA format (0 for no wrap) (default 60)")), ToolInput(tag="in_out_file", input_type=File(optional=True), prefix="--out-file", doc=InputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="be quiet and do not show extra information")), ToolInput(tag="in_seq_type", input_type=String(optional=True), prefix="--seq-type", doc=InputDocumentation(doc="sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default 'auto')")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of CPUs. (default value: 1 for single-CPU PC, 2 for others. can also set with environment variable SEQKIT_THREADS) (default 2)"))], outputs=[ToolOutput(tag="out_out_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_file", type_hint=File()), doc=OutputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seqkit_Amplicon_V0_1_0().translate("wdl", allow_empty_container=True)

