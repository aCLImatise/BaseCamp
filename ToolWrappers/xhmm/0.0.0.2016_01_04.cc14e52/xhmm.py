from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Float

Xhmm_V0_1_0 = CommandToolBuilder(tool="xhmm", base_command=["xhmm"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_reference_fast_a", input_type=File(optional=True), prefix="--referenceFASTA", doc=InputDocumentation(doc="Reference FASTA file (MUST have .fai index\nfile)")), ToolInput(tag="in_read_depths", input_type=String(optional=True), prefix="--readDepths", doc=InputDocumentation(doc="Matrix of *input* read-depths, where rows\n(samples) and columns (targets) are labeled\n(default=`-')")), ToolInput(tag="in_prepare_targets", input_type=String(optional=True), prefix="--prepareTargets", doc=InputDocumentation(doc="Input targets lists")), ToolInput(tag="in_merged_targets", input_type=String(optional=True), prefix="--mergedTargets", doc=InputDocumentation(doc="Output targets list  (default=`-')")), ToolInput(tag="in_merge_g_atk_depths", input_type=File(optional=True), prefix="--mergeGATKdepths", doc=InputDocumentation(doc="GATK sample_interval_summary output file(s) to\nbe merged [must have *IDENTICAL* target\nlists]")), ToolInput(tag="in_g_atk_depths_list", input_type=File(optional=True), prefix="--GATKdepthsList", doc=InputDocumentation(doc="A file containing a list of GATK\nsample_interval_summary output files to be\nmerged [must have *IDENTICAL* target lists]")), ToolInput(tag="in_sample_id_map", input_type=File(optional=True), prefix="--sampleIDmap", doc=InputDocumentation(doc="File containing mappings of sample names to new\nsample names (in columns designated by\nfromID, toID)")), ToolInput(tag="in_from_id", input_type=Int(optional=True), prefix="--fromID", doc=InputDocumentation(doc="Column number of OLD sample IDs to map\n(default=`1')")), ToolInput(tag="in_to_id", input_type=Int(optional=True), prefix="--toID", doc=InputDocumentation(doc="Column number of NEW sample IDs to map\n(default=`2')")), ToolInput(tag="in_column_suffix", input_type=String(optional=True), prefix="--columnSuffix", doc=InputDocumentation(doc="Suffix of columns to be used for merging [where\ncolumns are in the form: SAMPLE +\ncolumnSuffix]  (default=`_mean_cvg')")), ToolInput(tag="in_rd_precision", input_type=Int(optional=True), prefix="--rdPrecision", doc=InputDocumentation(doc="Decimal precision of read depths output\n(default=`2')")), ToolInput(tag="in_output_targets_by_samples", input_type=Boolean(optional=True), prefix="--outputTargetsBySamples", doc=InputDocumentation(doc="Output targets x samples (instead of samples x\ntargets)  (default=off)")), ToolInput(tag="in_exclude_targets", input_type=File(optional=True), prefix="--excludeTargets", doc=InputDocumentation(doc="File(s) of targets to exclude")), ToolInput(tag="in_exclude_chromosome_targets", input_type=String(optional=True), prefix="--excludeChromosomeTargets", doc=InputDocumentation(doc="Target chromosome(s) to exclude")), ToolInput(tag="in_exclude_samples", input_type=File(optional=True), prefix="--excludeSamples", doc=InputDocumentation(doc="File(s) of samples to exclude")), ToolInput(tag="in_min_target_size", input_type=Int(optional=True), prefix="--minTargetSize", doc=InputDocumentation(doc="Minimum size of target (in bp) to process\n(default=`0')")), ToolInput(tag="in_max_target_size", input_type=Int(optional=True), prefix="--maxTargetSize", doc=InputDocumentation(doc="Maximum size of target (in bp) to process")), ToolInput(tag="in_min_mean_target_rd", input_type=String(optional=True), prefix="--minMeanTargetRD", doc=InputDocumentation(doc="Minimum per-target mean RD to require for\ntarget to be processed")), ToolInput(tag="in_max_mean_target_rd", input_type=String(optional=True), prefix="--maxMeanTargetRD", doc=InputDocumentation(doc="Maximum per-target mean RD to require for\ntarget to be processed")), ToolInput(tag="in_mins_d_target_rd", input_type=Int(optional=True), prefix="--minSdTargetRD", doc=InputDocumentation(doc="Minimum per-target standard deviation of RD to\nrequire for target to be processed\n(default=`0')")), ToolInput(tag="in_max_sd_target_rd", input_type=String(optional=True), prefix="--maxSdTargetRD", doc=InputDocumentation(doc="Maximum per-target standard deviation of RD to\nrequire for target to be processed")), ToolInput(tag="in_min_mean_sample_rd", input_type=String(optional=True), prefix="--minMeanSampleRD", doc=InputDocumentation(doc="Minimum per-sample mean RD to require for\nsample to be processed")), ToolInput(tag="in_max_mean_sample_rd", input_type=String(optional=True), prefix="--maxMeanSampleRD", doc=InputDocumentation(doc="Maximum per-sample mean RD to require for\nsample to be processed")), ToolInput(tag="in_mins_d_sample_rd", input_type=Int(optional=True), prefix="--minSdSampleRD", doc=InputDocumentation(doc="Minimum per-sample standard deviation of RD to\nrequire for sample to be processed\n(default=`0')")), ToolInput(tag="in_max_sd_sample_rd", input_type=String(optional=True), prefix="--maxSdSampleRD", doc=InputDocumentation(doc="Maximum per-sample standard deviation of RD to\nrequire for sample to be processed")), ToolInput(tag="in_scale_data_by_sum", input_type=Boolean(optional=True), prefix="--scaleDataBySum", doc=InputDocumentation(doc="After any filtering, scale read-depth matrix\nvalues by sample- or target- sums (as per\n--scaleDataBySumType) [i.e., divide by row or\ncolumn sums], but multiply by factor\nspecificied by --scaleDataBySumFactor\n(default=off)")), ToolInput(tag="in_scale_data_by_sum_type", input_type=String(optional=True), prefix="--scaleDataBySumType", doc=InputDocumentation(doc="If --scaleDataBySum given, then scale the data\nwithin this dimension  (possible\nvalues='target', 'sample')")), ToolInput(tag="in_scale_data_by_sum_factor", input_type=Float(optional=True), prefix="--scaleDataBySumFactor", doc=InputDocumentation(doc="If --scaleDataBySum given, then divide by\nappropriate sum (but multiply by this factor)\n(default=`1e6')")), ToolInput(tag="in_log_one_zero", input_type=Int(optional=True), prefix="--log10", doc=InputDocumentation(doc="After any filtering and optional scaling steps\n(but before any optional centering steps),\nconvert the matrix to log10 values. To deal\nwith non-positive and small positive values,\na truncation and then pseudocount approach is\ntaken. Specifically, denote the original\nmatrix value as x and this parameter's\npseudocount value as v (say, 0.5). The matrix\nvalue used is then log10(max(x, 0) + v)")), ToolInput(tag="in_center_data", input_type=Boolean(optional=True), prefix="--centerData", doc=InputDocumentation(doc="Output sample- or target- centered read-depth\nmatrix (as per --centerType)  (default=off)")), ToolInput(tag="in_center_type", input_type=String(optional=True), prefix="--centerType", doc=InputDocumentation(doc="If --centerData given, then center the data\naround this dimension  (possible\nvalues='target', 'sample')")), ToolInput(tag="in_zscore_data", input_type=Boolean(optional=True), prefix="--zScoreData", doc=InputDocumentation(doc="If --centerData given, then additionally\nnormalize by standard deviation (outputting\nz-scores)  (default=off)")), ToolInput(tag="in_output_excluded_targets", input_type=File(optional=True), prefix="--outputExcludedTargets", doc=InputDocumentation(doc="File in which to output targets excluded by\nsome criterion")), ToolInput(tag="in_output_excluded_samples", input_type=File(optional=True), prefix="--outputExcludedSamples", doc=InputDocumentation(doc="File in which to output samples excluded by\nsome criterion")), ToolInput(tag="in_output_matrix", input_type=File(optional=True), prefix="--outputMatrix", doc=InputDocumentation(doc="Read-depth matrix output file  (default=`-')")), ToolInput(tag="in_matrix_argumentnormalization_sent", input_type=Boolean(optional=True), prefix="--PCA", doc=InputDocumentation(doc="Matrix is read from --readDepths argument;\nnormalization factors sent to --PCAfiles\nargument")), ToolInput(tag="in_pc_a_save_memory", input_type=Boolean(optional=True), prefix="--PCA_saveMemory", doc=InputDocumentation(doc="[=STRING] Should XHMM save memory by storing some of the\nintermediate PCA matrices as temporary files\non disk?  (default=`')")), ToolInput(tag="in_argumentnormalization_factors_read", input_type=Boolean(optional=True), prefix="--normalize", doc=InputDocumentation(doc="Matrix is read from --readDepths argument;\nnormalization factors read from --PCAfiles\nargument")), ToolInput(tag="in_normalize_output", input_type=File(optional=True), prefix="--normalizeOutput", doc=InputDocumentation(doc="Normalized read-depth matrix output file\n(default=`-')")), ToolInput(tag="in_pc_normalize_method", input_type=String(optional=True), prefix="--PCnormalizeMethod", doc=InputDocumentation(doc="Method to choose which prinicipal components\nare removed for data normalization  (possible\nvalues='numPCtoRemove', 'PVE_mean',\n'PVE_contrib' default=`PVE_mean')")), ToolInput(tag="in_num_pc_to_remove", input_type=Int(optional=True), prefix="--numPCtoRemove", doc=InputDocumentation(doc="Number of highest principal components to\nfilter out  (default=`20')")), ToolInput(tag="in_pve_mean_factor", input_type=Float(optional=True), prefix="--PVE_mean_factor", doc=InputDocumentation(doc="Remove all principal components that\nindividually explain more variance than this\nfactor times the average (in the original\nPCA-ed data)  (default=`0.7')")), ToolInput(tag="in_pve_contrib", input_type=Int(optional=True), prefix="--PVE_contrib", doc=InputDocumentation(doc="Remove the smallest number of principal\ncomponents that explain this percent of the\nvariance (in the original PCA-ed data)\n(default=`50')")), ToolInput(tag="in_pc_a_files", input_type=File(optional=True), prefix="--PCAfiles", doc=InputDocumentation(doc="Base file name for 'PCA' *output*, and\n'normalize' *input*")), ToolInput(tag="in_var_46", input_type=Boolean(optional=True), prefix="--discover", doc=InputDocumentation(doc="Matrix is read from --readDepths argument")), ToolInput(tag="in_x_cnv", input_type=File(optional=True), prefix="--xcnv", doc=InputDocumentation(doc="CNV output file  (default=`-')")), ToolInput(tag="in_discover_some_qual_thresh", input_type=Int(optional=True), prefix="--discoverSomeQualThresh", doc=InputDocumentation(doc="Quality threshold for discovering a CNV in a\nsample  (default=`30')")), ToolInput(tag="in_posterior_files", input_type=File(optional=True), prefix="--posteriorFiles", doc=InputDocumentation(doc="Base file name for posterior probabilities\noutput files; if not given, and --xcnv is not\n'-', this will default to --xcnv argument")), ToolInput(tag="in_var_50", input_type=Boolean(optional=True), prefix="--genotype", doc=InputDocumentation(doc="Matrix is read from --readDepths argument")), ToolInput(tag="in_gx_cnv", input_type=File(optional=True), prefix="--gxcnv", doc=InputDocumentation(doc="xhmm CNV input file to genotype in 'readDepths'")), ToolInput(tag="in_max_targets_in_subsegment", input_type=Int(optional=True), prefix="--maxTargetsInSubsegment", doc=InputDocumentation(doc="When genotyping sub-segments of input\nintervals, only consider sub-segments\nconsisting of this number of targets or fewer\n(default=`30')")), ToolInput(tag="in_genotype_qual_threshold_when_no_exact", input_type=Int(optional=True), prefix="--genotypeQualThresholdWhenNoExact", doc=InputDocumentation(doc="Quality threshold for calling a genotype, used\n*ONLY* when 'gxcnv' does not contain the\n'Q_EXACT' field for the interval being\ngenotyped  (default=`20')")), ToolInput(tag="in_merge_v_cfs", input_type=File(optional=True), prefix="--mergeVCFs", doc=InputDocumentation(doc="VCF file(s) to be merged [must have *IDENTICAL*\ngenotyped intervals]")), ToolInput(tag="in_merge_vcf_list", input_type=File(optional=True), prefix="--mergeVCFlist", doc=InputDocumentation(doc="A file containing a list of VCF files to be\nmerged [must have *IDENTICAL* genotyped\nintervals]")), ToolInput(tag="in_param_file", input_type=File(optional=True), prefix="--paramFile", doc=InputDocumentation(doc="(Initial) model parameters file")), ToolInput(tag="in_max_normalized_read_depth_val", input_type=Int(optional=True), prefix="--maxNormalizedReadDepthVal", doc=InputDocumentation(doc="Value at which to cap the absolute value of\n*normalized* input read depth values\n('readDepths')  (default=`10')")), ToolInput(tag="in_max_qual_score", input_type=String(optional=True), prefix="--maxQualScore", doc=InputDocumentation(doc="Value at which to cap the calculated quality")), ToolInput(tag="in_score_precision", input_type=Int(optional=True), prefix="--scorePrecision", doc=InputDocumentation(doc="Decimal precision of quality scores\n(default=`0')")), ToolInput(tag="in_aux_x_cnv", input_type=File(optional=True), prefix="--aux_xcnv", doc=InputDocumentation(doc="Auxiliary CNV output file (may be VERY LARGE in\n'genotype' mode)")), ToolInput(tag="in_aux_upstream_print_t_args", input_type=Int(optional=True), prefix="--auxUpstreamPrintTargs", doc=InputDocumentation(doc="Number of targets to print upstream of CNV in\n'auxOutput' file  (default=`2')")), ToolInput(tag="in_aux_downstream_print_t_args", input_type=Int(optional=True), prefix="--auxDownstreamPrintTargs", doc=InputDocumentation(doc="Number of targets to print downstream of CNV in\n'auxOutput' file  (default=`2')")), ToolInput(tag="in_orig_read_depths", input_type=String(optional=True), prefix="--origReadDepths", doc=InputDocumentation(doc="Matrix of unnormalized read-depths to use for\nCNV annotation, where rows (samples) and\ncolumns (targets) are labeled")), ToolInput(tag="in_keep_sample_ids", input_type=File(optional=True), prefix="--keepSampleIDs", doc=InputDocumentation(doc="File containing a list of samples to be")), ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="--vcf", doc=InputDocumentation(doc="Genotyped CNV output VCF file  (default=`-')")), ToolInput(tag="in_matrix", input_type=String(), position=0, doc=InputDocumentation(doc="Process (filter, center, etc.) a read depth matrix and output the resulting ")), ToolInput(tag="in_matrix_dot", input_type=String(), position=1, doc=InputDocumentation(doc="Note that first all excluded samples and targets are removed.  And, ")), ToolInput(tag="in_run_pca_create", input_type=String(), position=0, doc=InputDocumentation(doc="Run PCA to create normalization factors for read depth matrix")), ToolInput(tag="in_apply_pca_factors", input_type=String(), position=0, doc=InputDocumentation(doc="Apply PCA factors in order to normalize read depth matrix")), ToolInput(tag="in_discover_cnvs_normalized", input_type=String(), position=0, doc=InputDocumentation(doc="Discover CNVs from normalized read depth matrix")), ToolInput(tag="in_genotype_list_cnvs", input_type=String(), position=0, doc=InputDocumentation(doc="Genotype list of CNVs from normalized read depth matrix")), ToolInput(tag="in_sample", input_type=String(), position=1, doc=InputDocumentation(doc="--subsegments             In addition to genotyping the intervals ")), ToolInput(tag="in_analyzed", input_type=String(), position=0, doc=InputDocumentation(doc="Options for modes: 'genotype', 'mergeVCFs':"))], outputs=[ToolOutput(tag="out_merge_g_atk_depths", output_type=File(optional=True), selector=InputSelector(input_to_select="in_merge_g_atk_depths", type_hint=File()), doc=OutputDocumentation(doc="GATK sample_interval_summary output file(s) to\nbe merged [must have *IDENTICAL* target\nlists]")), ToolOutput(tag="out_g_atk_depths_list", output_type=File(optional=True), selector=InputSelector(input_to_select="in_g_atk_depths_list", type_hint=File()), doc=OutputDocumentation(doc="A file containing a list of GATK\nsample_interval_summary output files to be\nmerged [must have *IDENTICAL* target lists]")), ToolOutput(tag="out_output_excluded_targets", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_excluded_targets", type_hint=File()), doc=OutputDocumentation(doc="File in which to output targets excluded by\nsome criterion")), ToolOutput(tag="out_output_excluded_samples", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_excluded_samples", type_hint=File()), doc=OutputDocumentation(doc="File in which to output samples excluded by\nsome criterion")), ToolOutput(tag="out_output_matrix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_matrix", type_hint=File()), doc=OutputDocumentation(doc="Read-depth matrix output file  (default=`-')")), ToolOutput(tag="out_normalize_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_normalize_output", type_hint=File()), doc=OutputDocumentation(doc="Normalized read-depth matrix output file\n(default=`-')")), ToolOutput(tag="out_x_cnv", output_type=File(optional=True), selector=InputSelector(input_to_select="in_x_cnv", type_hint=File()), doc=OutputDocumentation(doc="CNV output file  (default=`-')")), ToolOutput(tag="out_posterior_files", output_type=File(optional=True), selector=InputSelector(input_to_select="in_posterior_files", type_hint=File()), doc=OutputDocumentation(doc="Base file name for posterior probabilities\noutput files; if not given, and --xcnv is not\n'-', this will default to --xcnv argument")), ToolOutput(tag="out_aux_x_cnv", output_type=File(optional=True), selector=InputSelector(input_to_select="in_aux_x_cnv", type_hint=File()), doc=OutputDocumentation(doc="Auxiliary CNV output file (may be VERY LARGE in\n'genotype' mode)")), ToolOutput(tag="out_vcf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_vcf", type_hint=File()), doc=OutputDocumentation(doc="Genotyped CNV output VCF file  (default=`-')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Xhmm_V0_1_0().translate("wdl", allow_empty_container=True)

