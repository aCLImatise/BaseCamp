from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean

Ale_V0_1_0 = CommandToolBuilder(tool="ALE", base_command=["ALE"], inputs=[ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc=": Kmer depth for kmer stats [4]")), ToolInput(tag="in_q_off", input_type=Int(optional=True), prefix="--qOff", doc=InputDocumentation(doc=": Quality ascii offset (illumina) [33] or 64 (or 0)")), ToolInput(tag="in_pl", input_type=String(optional=True), prefix="--pl", doc=InputDocumentation(doc=": placementOutputBAM")), ToolInput(tag="in_pm", input_type=File(optional=True), prefix="--pm", doc=InputDocumentation(doc=": library parameter file (auto outputs .param)")), ToolInput(tag="in_n_out", input_type=Boolean(optional=True), prefix="--nout", doc=InputDocumentation(doc=": only output meta information (no per base) [off]")), ToolInput(tag="in_min_ll", input_type=Boolean(optional=True), prefix="--minLL", doc=InputDocumentation(doc=": the minimum log Likelihood (-120)")), ToolInput(tag="in_meta_genome", input_type=Boolean(optional=True), prefix="--metagenome", doc=InputDocumentation(doc=": Evaluate each contig independently for depth & kmer metrics")), ToolInput(tag="in_realign", input_type=Boolean(optional=True), prefix="--realign", doc=InputDocumentation(doc="[=matchScore,misMatchPenalty,gapOpenPenalty,gapExtPenalty,minimumSoftClip (default: 1,3,11,4,8) ]\nRealign reads with Striped-Smith-Waterman honoring ambiguous reference bases\nand stacking homo-polymer indels\nfor PacBio, try --realign=1,5,2,1,20 (similar to BWA-SW recommendations)")), ToolInput(tag="in_snp_report", input_type=File(optional=True), prefix="--SNPreport", doc=InputDocumentation(doc=": Creates a new text file reporting all SNP phasing\nobserved by a read against ambiguous bases in the reference")), ToolInput(tag="in_min_qual", input_type=Int(optional=True), prefix="--minQual", doc=InputDocumentation(doc=": Minimum quality score to use in Z-normalization (default 3).\nIllumina quality scores can be unreliable below this threshold\n")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_alignments_dot", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_s_vertical_line_b", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_am", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_assembly_dot_fast_a", input_type=String(), position=3, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ale_V0_1_0().translate("wdl", allow_empty_container=True)

