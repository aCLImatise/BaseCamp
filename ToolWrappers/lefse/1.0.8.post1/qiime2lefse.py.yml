!Command
command:
- qiime2lefse.py
positional:
- !Positional
  optional: true
  position: 0
  name: INPUT_FILE
  description: ''
- !Positional
  optional: true
  position: 1
  name: METADATA_FILE
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --in
  description: '[INPUT_FILE]     the Qiime OTU table file [ stdin if not present ]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --md
  description: "[METADATA_FILE]  the Qiime OTU table file [ only OTU table without\n\
    metadata if not present ]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --out
  description: '[OUTPUT_FILE]   the output file [stdout if not present]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: attribute    the attribute to use as class
  args: !SimpleFlagArg
    name: class
- !Flag
  optional: true
  synonyms:
  - -s
  description: "attribute\nthe attribute to use as subclass"
  args: !SimpleFlagArg
    name: subclass
- !Flag
  optional: true
  synonyms:
  - -u
  description: attribute  the attribute to use as subject
  args: !SimpleFlagArg
    name: subject
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: qiime2lefse.py [-h] [--in [INPUT_FILE]] [--md [METADATA_FILE]]\n\
  \                      [--out [OUTPUT_FILE]] [-c class attribute]\n            \
  \          [-s subclass attribute] [-u subject attribute]\n\nScript will convert\
  \ QIIME TSV BIOM table for use with lefse. It is imperative\nthat this table has\
  \ taxa metadata associated with it named 'Consensus\nLineage', this can be down\
  \ with e.g. the follow biom convert script: ---- biom\nconvert -i otu.biom -o otu.txt\
  \ --to-tsv --header-key Taxonomy --output-\nmetadata-id 'Consensus Lineage'\n\n\
  optional arguments:\n  -h, --help            show this help message and exit\n \
  \ --in [INPUT_FILE]     the Qiime OTU table file [ stdin if not present ]\n  --md\
  \ [METADATA_FILE]  the Qiime OTU table file [ only OTU table without\n         \
  \               metadata if not present ]\n  --out [OUTPUT_FILE]   the output file\
  \ [stdout if not present]\n  -c class attribute    the attribute to use as class\n\
  \  -s subclass attribute\n                        the attribute to use as subclass\n\
  \  -u subject attribute  the attribute to use as subject\n"
generated_using:
- --help
docker_image:
