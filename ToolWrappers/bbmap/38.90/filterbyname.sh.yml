!Command
command:
- filterbyname.sh
positional:
- !Positional
  optional: false
  position: 0
  name: in
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -Xmx
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will specify 20 gigs of RAM, and -Xmx200m will specify 200 megs.\nThe max is\
    \ typically 85% of physical memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -eoom
  description: "This flag will cause the process to exit if an out-of-memory\nexception\
    \ occurs.  Requires Java 8u92+."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -da
  description: Disable assertions.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified September 1, 2016\n\nDescription:\
  \  Filters reads by name.\n\nUsage:  filterbyname.sh in=<file> in2=<file2> out=<outfile>\
  \ out2=<outfile2> names=<string,string,string> include=<t/f>\n\nin2 and out2 are\
  \ for paired reads and are optional.\nIf input is paired and there is only one output\
  \ file, it will be written interleaved.\nImportant!  Leading > and @ symbols are\
  \ NOT part of sequence names;  they are part of\nthe fasta, fastq, and sam specifications.\
  \  Therefore, this is correct:\nnames=e.coli_K12\nAnd these are incorrect:\nnames=>e.coli_K12\n\
  names=@e.coli_K12\n\nParameters:\ninclude=f       Set to 'true' to include the filtered\
  \ names rather than excluding them.\nsubstring=f     Allow one name to be a substring\
  \ of the other, rather than a full match.\n                   f: No substring matching.\n\
  \                   t: Bidirectional substring matching.\n                   header:\
  \ Allow input read headers to be substrings of names in list.\n                \
  \   name: Allow names in list to be substrings of input read headers.\nprefix=f\
  \        Allow names to match read header prefixes.\ncase=t          (casesensitive)\
  \ Match case also.\now=t            (overwrite) Overwrites files that already exist.\n\
  app=f           (append) Append to files that already exist.\nzl=4            (ziplevel)\
  \ Set compression level, 1 (low) to 9 (max).\nint=f           (interleaved) Determines\
  \ whether INPUT file is considered interleaved.\nnames=          A list of strings\
  \ or files.  The files can have one name per line, or\n                be a standard\
  \ read file (fasta, fastq, or sam).\nminlen=0        Do not output reads shorter\
  \ than this.\nths=f           (truncateheadersymbol) Ignore a leading @ or > symbol\
  \ in the names file.\ntws=f           (truncatewhitespace) Ignore leading or trailing\
  \ whitespace in the names file.\ntruncate=f      Set both ths and tws at the same\
  \ time.\n\nPositional parameters:\nThese optionally allow you to output only a portion\
  \ of a sequence.  Zero-based, inclusive.\nIntended for a single sequence and include=t\
  \ mode.\nfrom=-1         Only print bases starting at this position.\nto=-1    \
  \       Only print bases up to this position.\nrange=          Set from and to with\
  \ a single flag.\n\n\nJava Parameters:\n-Xmx            This will set Java's memory\
  \ usage, overriding autodetection.\n                -Xmx20g will specify 20 gigs\
  \ of RAM, and -Xmx200m will specify 200 megs.\n                    The max is typically\
  \ 85% of physical memory.\n-eoom           This flag will cause the process to exit\
  \ if an out-of-memory\n                exception occurs.  Requires Java 8u92+.\n\
  -da             Disable assertions.\n\nTo read from stdin, set 'in=stdin'.  The\
  \ format should be specified with an extension, like 'in=stdin.fq.gz'\nTo write\
  \ to stdout, set 'out=stdout'.  The format should be specified with an extension,\
  \ like 'out=stdout.fasta'\n\nPlease contact Brian Bushnell at bbushnell@lbl.gov\
  \ if you encounter any problems.\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/bbmap:38.90--h1296035_0
