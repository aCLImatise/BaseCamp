from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Vkmz_W4M_Xcms_V0_1_0 = CommandToolBuilder(tool="vkmz_w4m_xcms", base_command=["vkmz", "w4m-xcms"], inputs=[ToolInput(tag="in_path_xcms_data", input_type=Boolean(optional=True), prefix="--data-matrix", doc=InputDocumentation(doc="[DATA_MATRIX], -xd [DATA_MATRIX]\nPath to XCMS data matrix file")), ToolInput(tag="in_sample_metadata", input_type=Boolean(optional=True), prefix="--sample-metadata", doc=InputDocumentation(doc="[SAMPLE_METADATA], -xs [SAMPLE_METADATA]\nPath to XCMS sample metadata file")), ToolInput(tag="in_variable_metadata", input_type=Boolean(optional=True), prefix="--variable-metadata", doc=InputDocumentation(doc="[VARIABLE_METADATA], -xv [VARIABLE_METADATA]\nPath to XCMS variable metadata file")), ToolInput(tag="in_error", input_type=Boolean(optional=True), prefix="--error", doc=InputDocumentation(doc="[ERROR], -e [ERROR]\nMass error of MS data in parts-per-million")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="[OUTPUT], -o [OUTPUT]\nSpecify output file path")), ToolInput(tag="in_json", input_type=Boolean(optional=True), prefix="--json", doc=InputDocumentation(doc="Set JSON flag to save JSON output")), ToolInput(tag="in_sql", input_type=Boolean(optional=True), prefix="--sql", doc=InputDocumentation(doc="Set SQL flag to save SQL output")), ToolInput(tag="in_metadata", input_type=Boolean(optional=True), prefix="--metadata", doc=InputDocumentation(doc="Set metadata flag to save argument metadata")), ToolInput(tag="in_database", input_type=Boolean(optional=True), prefix="--database", doc=InputDocumentation(doc="[DATABASE], -db [DATABASE]\nDefine path to custom database of known formula-mass\npairs")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="[PREFIX]     Define path prefix to support files ('d3.html' and\ndatabase directory)")), ToolInput(tag="in_polarity", input_type=String(optional=True), prefix="--polarity", doc=InputDocumentation(doc="Set flag to force polarity of all features to positive\nor negative")), ToolInput(tag="in_neutral", input_type=Boolean(optional=True), prefix="--neutral", doc=InputDocumentation(doc="Set flag if input data contains neutral feature mass\ninstead of mz")), ToolInput(tag="in_alternate", input_type=Boolean(optional=True), prefix="--alternate", doc=InputDocumentation(doc="Set flag to keep features with multiple predictions")), ToolInput(tag="in_impute_charge", input_type=Boolean(optional=True), prefix="--impute-charge", doc=InputDocumentation(doc="Set flag to impute '1' for missing charge information\n")), ToolInput(tag="in_var_14", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="[OUTPUT], -o [OUTPUT]\nSpecify output file path"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Vkmz_W4M_Xcms_V0_1_0().translate("wdl", allow_empty_container=True)

