&id001 !Command
command:
- wg-blimp
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - wg-blimp
  - run-snakemake
  positional:
  - !Positional
    description: '[required]'
    position: 0
    name: pipeline.
    optional: false
  named:
  - !Flag
    description: Only dry-run the pipeline.
    synonyms:
    - --dry-run
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Load sample names from text files instead of\npassing them as a\
      \ comma-seperated list."
    synonyms:
    - --use-sample-files
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: The number of cores to use for running the
    synonyms:
    - --cores
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  - !Flag
    description: "[hg19|hg38|mmul10]\nBuild of the reference used for annotation."
    synonyms:
    - --genome_build
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: wg-blimp run-snakemake [OPTIONS] FASTQ_DIR REFERENCE_FASTA GROUP1\n\
    \                              GROUP2 OUTPUT_DIR\n\n  Run the Snakemake pipeline\
    \ from command line. Sample names are either\n  passed as comma seperated lists\
    \ or are read from text files if --use-\n  sample-files parameter is set. Annotation\
    \ files are automatically\n  downloaded if necessary.\n\nOptions:\n  --dry-run\
    \                       Only dry-run the pipeline.\n  --use-sample-files     \
    \         Load sample names from text files instead of\n                     \
    \             passing them as a comma-seperated list.\n\n  --cores INTEGER   \
    \              The number of cores to use for running the\n                  \
    \                pipeline.  [required]\n\n  --genome_build [hg19|hg38|mmul10]\n\
    \                                  Build of the reference used for annotation.\n\
    \  --help                          Show this message and exit.\n"
  generated_using: &id002
  - --help
- !Command
  command:
  - wg-blimp
  - create-config
  positional:
  - !Positional
    description: ''
    position: 0
    name: FASTQ_DIR
    optional: false
  - !Positional
    description: ''
    position: 1
    name: REFERENCE_FASTA
    optional: false
  - !Positional
    description: ''
    position: 2
    name: GROUP1
    optional: false
  named:
  - !Flag
    description: "[hg19|hg38|mmul10|None]\nBuild of the reference used for annotation."
    synonyms:
    - --genome_build
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "The number of cores to use per job.\n[required]"
    synonyms:
    - --cores-per-job
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: wg-blimp create-config [OPTIONS] FASTQ_DIR REFERENCE_FASTA GROUP1\n\
    \                              GROUP2 OUTPUT_DIR TARGET_YAML\n\n  Create a config\
    \ YAML file for running the Snakemake pipeline. Sample names\n  are either passed\
    \ as comma seperated lists or are read from text files if\n  --use-sample-files\
    \ parameter is set. Annotation files are automatically\n  downloaded if necessary.\n\
    \nOptions:\n  --use-sample-files              Load sample names from text files\
    \ instead of\n                                  passing them as a comma-seperated\
    \ list.\n\n  --genome_build [hg19|hg38|mmul10|None]\n                        \
    \          Build of the reference used for annotation.\n  --cores-per-job INTEGER\
    \         The number of cores to use per job.\n                              \
    \    [required]\n\n  --help                          Show this message and exit.\n"
  generated_using: *id002
- !Command
  command:
  - wg-blimp
  - run-shiny
  positional:
  - !Positional
    description: ''
    position: 0
    name: CONFIG_FILES...
    optional: false
  named:
  - !Flag
    description: Host ip for shiny to listen on.
    synonyms:
    - --host
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: Shiny port number.
    synonyms:
    - --port
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: wg-blimp run-shiny [OPTIONS] CONFIG_FILES...\n\n  Start shiny\
    \ GUI using configuration files for completed pipeline runs.\n\nOptions:\n  --host\
    \ TEXT     Host ip for shiny to listen on.\n  --port INTEGER  Shiny port number.\n\
    \  --help          Show this message and exit.\n"
  generated_using: *id002
- !Command
  command:
  - wg-blimp
  - delete-all-output
  positional:
  - !Positional
    description: ''
    position: 0
    name: CONFIG_YAML
    optional: false
  named:
  - !Flag
    description: Only dry-run deleting the pipeline output.
    synonyms:
    - --dry-run
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Confirm the action without prompting.
    synonyms:
    - --yes
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: wg-blimp delete-all-output [OPTIONS] CONFIG_YAML\n\n  Remove\
    \ all files generated by the pipeline. This includes reference genome\n  indices,\
    \ as well. Use with care!\n\nOptions:\n  --dry-run  Only dry-run deleting the\
    \ pipeline output.\n  --yes      Confirm the action without prompting.\n  --help\
    \     Show this message and exit.\n"
  generated_using: *id002
- !Command
  command:
  - wg-blimp
  - run-snakemake-from-config
  positional:
  - !Positional
    description: ''
    position: 0
    name: CONFIG_YAML
    optional: false
  named:
  - !Flag
    description: Only dry-run the workflow.
    synonyms:
    - --dry-run
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "The maximum number of cores to use for running the\npipeline. Cores\
      \ per job are set in configuration file.\n[required]"
    synonyms:
    - --cores
    args: !SimpleFlagArg
      name: INTEGER
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: wg-blimp run-snakemake-from-config [OPTIONS] CONFIG_YAML\n\n\
    \  Run the snakemake pipeline using a config file.\n\nOptions:\n  --dry-run  \
    \      Only dry-run the workflow.\n  --cores INTEGER  The maximum number of cores\
    \ to use for running the\n                   pipeline. Cores per job are set in\
    \ configuration file.\n                   [required]\n\n  --help           Show\
    \ this message and exit.\n"
  generated_using: *id002
usage: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: wg-blimp [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show\
  \ this message and exit.\n\nCommands:\n  create-config              Create a config\
  \ YAML file for running the...\n  delete-all-output          Remove all files generated\
  \ by the pipeline.\n  run-shiny                  Start shiny GUI using configuration\
  \ files for...\n  run-snakemake              Run the Snakemake pipeline from command\
  \ line.\n  run-snakemake-from-config  Run the snakemake pipeline using a config\
  \ file.\n"
generated_using: *id002
