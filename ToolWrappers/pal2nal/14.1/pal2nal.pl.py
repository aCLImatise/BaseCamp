from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int

Pal2Nal_Pl_V0_1_0 = CommandToolBuilder(tool="pal2nal.pl", base_command=["pal2nal.pl"], inputs=[ToolInput(tag="in_output", input_type=Boolean(optional=True), prefix="-output", doc=InputDocumentation(doc="(clustal|paml|fasta|codon)\nOutput format; default = clustal")), ToolInput(tag="in_block_only", input_type=Boolean(optional=True), prefix="-blockonly", doc=InputDocumentation(doc="Show only user specified blocks\n'#' under CLUSTAL alignment (see example)")), ToolInput(tag="in_no_gap", input_type=Boolean(optional=True), prefix="-nogap", doc=InputDocumentation(doc="remove columns with gaps and inframe stop codons")), ToolInput(tag="in_no_mismatch", input_type=Boolean(optional=True), prefix="-nomismatch", doc=InputDocumentation(doc="remove mismatched codons (mismatch between\npep and cDNA) from the output")), ToolInput(tag="in_codon_table", input_type=Boolean(optional=True), prefix="-codontable", doc=InputDocumentation(doc="N\n1  Universal code (default)\n2  Vertebrate mitochondrial code\n3  Yeast mitochondrial code\n4  Mold, Protozoan, and Coelenterate Mitochondrial code\nand Mycoplasma/Spiroplasma code\n5  Invertebrate mitochondrial\n6  Ciliate, Dasycladacean and Hexamita nuclear code\n9  Echinoderm and Flatworm mitochondrial code")), ToolInput(tag="in_html", input_type=Boolean(optional=True), prefix="-html", doc=InputDocumentation(doc="HTML output (only for the web server)")), ToolInput(tag="in_no_stderr", input_type=Boolean(optional=True), prefix="-nostderr", doc=InputDocumentation(doc="No STDERR messages (only for the web server)")), ToolInput(tag="in_euplotid_nuclear_code", input_type=Int(), position=0, doc=InputDocumentation(doc="Euplotid nuclear code")), ToolInput(tag="in_bacterial_archaeal_plant", input_type=Int(), position=1, doc=InputDocumentation(doc="Bacterial, archaeal and plant plastid code")), ToolInput(tag="in_alternative_yeast_nuclear", input_type=Int(), position=2, doc=InputDocumentation(doc="Alternative yeast nuclear code")), ToolInput(tag="in_ascidian_mitochondrial_code", input_type=Int(), position=3, doc=InputDocumentation(doc="Ascidian mitochondrial code")), ToolInput(tag="in_alternative_flatworm_mitochondrial", input_type=Int(), position=4, doc=InputDocumentation(doc="Alternative flatworm mitochondrial code")), ToolInput(tag="in_blepharisma_nuclear_code", input_type=Int(), position=5, doc=InputDocumentation(doc="Blepharisma nuclear code")), ToolInput(tag="in_chlorophycean_mitochondrial_code", input_type=Int(), position=6, doc=InputDocumentation(doc="Chlorophycean mitochondrial code")), ToolInput(tag="in_trematode_mitochondrial_code", input_type=Int(), position=7, doc=InputDocumentation(doc="Trematode mitochondrial code")), ToolInput(tag="in_scenedesmus_obliquus_code", input_type=Int(), position=8, doc=InputDocumentation(doc="Scenedesmus obliquus mitochondrial code")), ToolInput(tag="in_thraustochytrium_mitochondrial_code", input_type=Int(), position=9, doc=InputDocumentation(doc="Thraustochytrium mitochondrial code"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pal2Nal_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

