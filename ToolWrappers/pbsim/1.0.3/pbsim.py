from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Pbsim_V0_1_0 = CommandToolBuilder(tool="pbsim", base_command=["pbsim"], inputs=[ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="prefix of output files (sd).")), ToolInput(tag="in_data_type", input_type=Boolean(optional=True), prefix="--data-type", doc=InputDocumentation(doc="data type. CLR or CCS (CLR).")), ToolInput(tag="in_depth", input_type=Boolean(optional=True), prefix="--depth", doc=InputDocumentation(doc="depth of coverage (CLR: 20.0, CCS: 50.0).")), ToolInput(tag="in_length_min", input_type=Boolean(optional=True), prefix="--length-min", doc=InputDocumentation(doc="minimum length (100).")), ToolInput(tag="in_length_max", input_type=Boolean(optional=True), prefix="--length-max", doc=InputDocumentation(doc="maximum length (CLR: 25000, CCS: 2500).")), ToolInput(tag="in_accuracy_min", input_type=Boolean(optional=True), prefix="--accuracy-min", doc=InputDocumentation(doc="minimum accuracy.\n(CLR: 0.75, CCS: fixed as 0.75).\nthis option can be used only in case of CLR.")), ToolInput(tag="in_accuracy_max", input_type=Boolean(optional=True), prefix="--accuracy-max", doc=InputDocumentation(doc="maximum accuracy.\n(CLR: 1.00, CCS: fixed as 1.00).\nthis option can be used only in case of CLR.")), ToolInput(tag="in_difference_ratio", input_type=Boolean(optional=True), prefix="--difference-ratio", doc=InputDocumentation(doc="ratio of differences. substitution:insertion:deletion.\neach value up to 1000 (CLR: 10:60:30, CCS:6:21:73).")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="--seed", doc=InputDocumentation(doc="for a pseudorandom number generator (Unix time).")), ToolInput(tag="in_sample_fast_q", input_type=Boolean(optional=True), prefix="--sample-fastq", doc=InputDocumentation(doc="FASTQ format file to sample.")), ToolInput(tag="in_sample_profile_id", input_type=Boolean(optional=True), prefix="--sample-profile-id", doc=InputDocumentation(doc="sample-fastq (filtered) profile ID.\nwhen using --sample-fastq, profile is stored.\n'sample_profile_<ID>.fastq', and\n'sample_profile_<ID>.stats' are created.\nwhen not using --sample-fastq, profile is re-used.\nNote that when profile is used, --length-min,max,\n--accuracy-min,max would be the same as the profile.")), ToolInput(tag="in_model_qc", input_type=Boolean(optional=True), prefix="--model_qc", doc=InputDocumentation(doc="model of quality code.")), ToolInput(tag="in_length_mean", input_type=Boolean(optional=True), prefix="--length-mean", doc=InputDocumentation(doc="mean of length model (CLR: 3000.0, CCS:450.0).")), ToolInput(tag="in_length_sd", input_type=Boolean(optional=True), prefix="--length-sd", doc=InputDocumentation(doc="standard deviation of length model.\n(CLR: 2300.0, CCS: 170.0).")), ToolInput(tag="in_accuracy_mean", input_type=Boolean(optional=True), prefix="--accuracy-mean", doc=InputDocumentation(doc="mean of accuracy model.\n(CLR: 0.78, CCS: fixed as 0.98).\nthis option can be used only in case of CLR.")), ToolInput(tag="in_accuracy_sd", input_type=Boolean(optional=True), prefix="--accuracy-sd", doc=InputDocumentation(doc="standard deviation of accuracy model.\n(CLR: 0.02, CCS: fixed as 0.02).\nthis option can be used only in case of CLR.\n")), ToolInput(tag="in_reference", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pbsim_V0_1_0().translate("wdl", allow_empty_container=True)

