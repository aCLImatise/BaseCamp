!Command
command:
- counts_in_region
positional:
- !Positional
  optional: false
  position: 0
  name: plastid.genomics.roitools.SegmentChain.from_str
  description: '`counts`                  Number of reads mapping to region'
- !Positional
  optional: false
  position: 0
  name: outfile
  description: Output filename
named:
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: Suppress all warning messages. Cannot use with '-v'.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: "Increase verbosity. With '-v', show every warning.\nWith '-vv', turn\
    \ warnings into exceptions. Cannot use\nwith '-q'. (Default: show each type of\
    \ warning once)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --count_files
  description: "One or more count or alignment file(s) from a single\nsample or set\
    \ of samples to be pooled."
  args: !RepeatFlagArg
    name: COUNT_FILES
- !Flag
  optional: true
  synonyms:
  - --countfile_format
  description: "Format of file containing alignments or counts\n(Default: BAM)"
  args: !ChoiceFlagArg
    choices: !!set
      bowtie:
      BAM:
      bigwig:
      wiggle:
- !Flag
  optional: true
  synonyms:
  - --sum
  description: "Sum used in normalization of counts and RPKM/RPNT\ncalculations (Default:\
    \ total mapped reads/counts in\ndataset)"
  args: !SimpleFlagArg
    name: SUM
- !Flag
  optional: true
  synonyms:
  - --min_length
  description: "Minimum read length required to be included (BAM &\nbowtie files only.\
    \ Default: 25)"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --max_length
  description: "Maximum read length permitted to be included (BAM &\nbowtie files\
    \ only. Default: 100)"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --big_genome
  description: "Use slower but memory-efficient implementation for big\ngenomes or\
    \ for memory-limited computers. For wiggle &\nbowtie files only."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fiveprime_variable
  description: "Map read alignment to a variable offset from 5'\nposition of read,\
    \ with offset determined by read\nlength. Requires `--offset` below"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fiveprime
  description: Map read alignment to 5' position.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --threeprime
  description: Map read alignment to 3' position
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --center
  description: "Subtract N positions from each end of read, and add\n1/(length-N),\
    \ to each remaining position, where N is\nspecified by `--nibble`"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --offset
  description: "For `--fiveprime` or `--threeprime`, provide an\ninteger representing\
    \ the offset into the read,\nstarting from either the 5' or 3' end, at which data\n\
    should be plotted. For `--fiveprime_variable`, provide\nthe filename of a two-column\
    \ tab-delimited text file,\nin which first column represents read length or the\n\
    special keyword `'default'`, and the second column\nrepresents the offset from\
    \ the five prime end of that\nread length at which the read should be mapped.\n\
    (Default: 0)"
  args: !SimpleFlagArg
    name: OFFSET
- !Flag
  optional: true
  synonyms:
  - --nibble
  description: "For use with `--center` only. nt to remove from each\nend of read\
    \ before mapping (Default: 0)"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --annotation_files
  description: "[BED | BigBed | GTF2 | GFF3] [infile.[BED | BigBed | GTF2 | GFF3]\
    \ ...]\nZero or more annotation files (max 1 file if BigBed)"
  args: !SimpleFlagArg
    name: infile.
- !Flag
  optional: true
  synonyms:
  - --annotation_format
  description: "Format of annotation_files (Default: GTF2). Note: GFF3\nassembly assumes\
    \ SO v.2.5.2 feature ontologies, which\nmay or may not match your specific file."
  args: !ChoiceFlagArg
    choices: !!set
      GFF3:
      BigBed:
      GTF2:
      BED:
- !Flag
  optional: true
  synonyms:
  - --add_three
  description: "If supplied, coding regions will be extended by 3\nnucleotides at\
    \ their 3' ends (except for GTF2 files\nthat explicitly include `stop_codon` features).\
    \ Use if\nyour annotation file excludes stop codons from CDS."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tabix
  description: "annotation_files are tabix-compressed and indexed\n(Default: False).\
    \ Ignored for BigBed files."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sorted
  description: "annotation_files are sorted by chromosomal position\n(Default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bed_extra_columns
  description: "Number of extra columns in BED file (e.g. in custom\nENCODE formats)\
    \ or list of names for those columns.\n(Default: 0)."
  args: !RepeatFlagArg
    name: BED_EXTRA_COLUMNS
- !Flag
  optional: true
  synonyms:
  - --mask_bed_extra_columns
  description: "Number of extra columns in BED file (e.g. in custom\nENCODE formats)\
    \ or list of names for those columns.\n(Default: 0)."
  args: !RepeatFlagArg
    name: MASK_BED_EXTRA_COLUMNS
- !Flag
  optional: true
  synonyms:
  - --maxmem
  description: "Maximum desired memory footprint in MB to devote to\nBigBed/BigWig\
    \ files. May be exceeded by large queries.\n(Default: 0, No maximum)"
  args: !SimpleFlagArg
    name: MAXMEM
- !Flag
  optional: true
  synonyms:
  - --mask_maxmem
  description: "Maximum desired memory footprint in MB to devote to\nBigBed/BigWig\
    \ files. May be exceeded by large queries.\n(Default: 0, No maximum)"
  args: !SimpleFlagArg
    name: MASK_MAXMEM
- !Flag
  optional: true
  synonyms:
  - --gff_transcript_types
  description: "GFF3 feature types to include as transcripts, even if\nno exons are\
    \ present (for GFF3 only; default: use SO\nv2.5.3 specification)"
  args: !RepeatFlagArg
    name: GFF_TRANSCRIPT_TYPES
- !Flag
  optional: true
  synonyms:
  - --gff_exon_types
  description: "GFF3 feature types to include as exons (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  args: !RepeatFlagArg
    name: GFF_EXON_TYPES
- !Flag
  optional: true
  synonyms:
  - --gff_cds_types
  description: "GFF3 feature types to include as CDS (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  args: !RepeatFlagArg
    name: GFF_CDS_TYPES
- !Flag
  optional: true
  synonyms:
  - --mask_gff_transcript_types
  description: "GFF3 feature types to include as transcripts, even if\nno exons are\
    \ present (for GFF3 only; default: use SO\nv2.5.3 specification)"
  args: !RepeatFlagArg
    name: MASK_GFF_TRANSCRIPT_TYPES
- !Flag
  optional: true
  synonyms:
  - --mask_gff_exon_types
  description: "GFF3 feature types to include as exons (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  args: !RepeatFlagArg
    name: MASK_GFF_EXON_TYPES
- !Flag
  optional: true
  synonyms:
  - --mask_gff_cds_types
  description: "GFF3 feature types to include as CDS (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  args: !RepeatFlagArg
    name: MASK_GFF_CDS_TYPES
- !Flag
  optional: true
  synonyms:
  - --mask_annotation_files
  description: "[BED | BigBed | GTF2 | GFF3 | PSL] [infile.[BED | BigBed | GTF2 |\
    \ GFF3 | PSL] ...]\nZero or more annotation files (max 1 file if BigBed)"
  args: !SimpleFlagArg
    name: infile.
- !Flag
  optional: true
  synonyms:
  - --mask_annotation_format
  description: "Format of mask_annotation_files (Default: GTF2). Note:\nGFF3 assembly\
    \ assumes SO v.2.5.2 feature ontologies,\nwhich may or may not match your specific\
    \ file."
  args: !ChoiceFlagArg
    choices: !!set
      GFF3:
      GTF2:
      PSL:
      BigBed:
      BED:
- !Flag
  optional: true
  synonyms:
  - --mask_add_three
  description: "If supplied, coding regions will be extended by 3\nnucleotides at\
    \ their 3' ends (except for GTF2 files\nthat explicitly include `stop_codon` features).\
    \ Use if\nyour annotation file excludes stop codons from CDS."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mask_tabix
  description: "mask_annotation_files are tabix-compressed and indexed\n(Default:\
    \ False). Ignored for BigBed files."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mask_sorted
  description: "mask_annotation_files are sorted by chromosomal\nposition (Default:\
    \ False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: counts_in_region [-h] [-q] [-v]\n                        [--count_files\
  \ COUNT_FILES [COUNT_FILES ...]]\n                        [--countfile_format {BAM,bigwig,bowtie,wiggle}]\n\
  \                        [--sum SUM] [--min_length N] [--max_length N]\n       \
  \                 [--big_genome] [--fiveprime_variable] [--fiveprime]\n        \
  \                [--threeprime] [--center] [--offset OFFSET]\n                 \
  \       [--nibble N]\n                        [--annotation_files infile.[BED |\
  \ BigBed | GTF2 | GFF3]\n                        [infile.[BED | BigBed | GTF2 |\
  \ GFF3] ...]]\n                        [--annotation_format {BED,BigBed,GTF2,GFF3}]\n\
  \                        [--add_three] [--tabix] [--sorted]\n                  \
  \      [--bed_extra_columns BED_EXTRA_COLUMNS [BED_EXTRA_COLUMNS ...]]\n       \
  \                 [--maxmem MAXMEM]\n                        [--gff_transcript_types\
  \ GFF_TRANSCRIPT_TYPES [GFF_TRANSCRIPT_TYPES ...]]\n                        [--gff_exon_types\
  \ GFF_EXON_TYPES [GFF_EXON_TYPES ...]]\n                        [--gff_cds_types\
  \ GFF_CDS_TYPES [GFF_CDS_TYPES ...]]\n                        [--mask_annotation_files\
  \ infile.[BED | BigBed | GTF2 | GFF3 | PSL]\n                        [infile.[BED\
  \ | BigBed | GTF2 | GFF3 | PSL] ...]]\n                        [--mask_annotation_format\
  \ {BED,BigBed,GTF2,GFF3,PSL}]\n                        [--mask_add_three] [--mask_tabix]\
  \ [--mask_sorted]\n                        [--mask_bed_extra_columns MASK_BED_EXTRA_COLUMNS\
  \ [MASK_BED_EXTRA_COLUMNS ...]]\n                        [--mask_maxmem MASK_MAXMEM]\n\
  \                        [--mask_gff_transcript_types MASK_GFF_TRANSCRIPT_TYPES\
  \ [MASK_GFF_TRANSCRIPT_TYPES ...]]\n                        [--mask_gff_exon_types\
  \ MASK_GFF_EXON_TYPES [MASK_GFF_EXON_TYPES ...]]\n                        [--mask_gff_cds_types\
  \ MASK_GFF_CDS_TYPES [MASK_GFF_CDS_TYPES ...]]\n                        outfile\n\
  \n------------------------------------------------------------------------------\n\
  \nCount the number of :term:`read alignments<alignment>` covering \nregions of interest\
  \ in the genome, and calculate read densities (in reads\nper nucleotide and in RPKM)\
  \ over these regions.\n\nResults are output as a table with the following columns:\n\
  \n    ========================  ==================================================\n\
  \    **Name**                  **Definition**\n    ------------------------  --------------------------------------------------\n\
  \    `region_name`             Name or ID of region of interest\n    \n    `region`\
  \                  Genomic coordinates of region, formatted as\n               \
  \               described in\n                              plastid.genomics.roitools.SegmentChain.from_str\n\
  \                              \n    `counts`                  Number of reads mapping\
  \ to region\n    \n    `counts_per_nucleotide`   Read density, measured in number\
  \ of reads mapping\n                              to region, divided by length of\
  \ region\n                              \n    `rpkm`                    Read density,\
  \ measured in RPKM\n    \n    `length`                  Region length, in nucleotides\n\
  \    ========================  ==================================================\n\
  \    \nIf a mask annotation file is supplied, masked portions of regions\nwill be\
  \ excluded when tabulating counts, measuring region length, and calculating\n`counts_per_nucleotide`\
  \ and `rpkm`.\n\nSee also\n--------\n~plastid.bin.cs script\n    Count the number\
  \ of :term:`read alignments<alignment>` and calculate\n    read densities (in RPKM)\
  \ specifically for genes and sub-regions\n    (5' UTR, CDS, 3' UTR), excluding positions\
  \ covered by multiple genes\n\n------------------------------------------------------------------------------\n\
  \npositional arguments:\n  outfile               Output filename\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n\nwarning/error options:\n\
  \  -q, --quiet           Suppress all warning messages. Cannot use with '-v'.\n\
  \  -v, --verbose         Increase verbosity. With '-v', show every warning.\n  \
  \                      With '-vv', turn warnings into exceptions. Cannot use\n \
  \                       with '-q'. (Default: show each type of warning once)\n\n\
  count & alignment file options:\n  Open alignment or count files and optionally\
  \ set mapping rules\n\n  --count_files COUNT_FILES [COUNT_FILES ...]\n         \
  \               One or more count or alignment file(s) from a single\n         \
  \               sample or set of samples to be pooled.\n  --countfile_format {BAM,bigwig,bowtie,wiggle}\n\
  \                        Format of file containing alignments or counts\n      \
  \                  (Default: BAM)\n  --sum SUM             Sum used in normalization\
  \ of counts and RPKM/RPNT\n                        calculations (Default: total\
  \ mapped reads/counts in\n                        dataset)\n  --min_length N   \
  \     Minimum read length required to be included (BAM &\n                     \
  \   bowtie files only. Default: 25)\n  --max_length N        Maximum read length\
  \ permitted to be included (BAM &\n                        bowtie files only. Default:\
  \ 100)\n  --big_genome          Use slower but memory-efficient implementation for\
  \ big\n                        genomes or for memory-limited computers. For wiggle\
  \ &\n                        bowtie files only.\n\nalignment mapping functions (BAM\
  \ & bowtie files only):\n  For BAM or bowtie files, one of the mutually exclusive\
  \ read mapping functions\n  is required:\n\n  --fiveprime_variable  Map read alignment\
  \ to a variable offset from 5'\n                        position of read, with offset\
  \ determined by read\n                        length. Requires `--offset` below\n\
  \  --fiveprime           Map read alignment to 5' position.\n  --threeprime    \
  \      Map read alignment to 3' position\n  --center              Subtract N positions\
  \ from each end of read, and add\n                        1/(length-N), to each\
  \ remaining position, where N is\n                        specified by `--nibble`\n\
  \nfiltering and alignment mapping options:\n  \n  The remaining arguments are optional\
  \ and affect the behavior of specific\n  mapping functions:\n\n  --offset OFFSET\
  \       For `--fiveprime` or `--threeprime`, provide an\n                      \
  \  integer representing the offset into the read,\n                        starting\
  \ from either the 5' or 3' end, at which data\n                        should be\
  \ plotted. For `--fiveprime_variable`, provide\n                        the filename\
  \ of a two-column tab-delimited text file,\n                        in which first\
  \ column represents read length or the\n                        special keyword\
  \ `'default'`, and the second column\n                        represents the offset\
  \ from the five prime end of that\n                        read length at which\
  \ the read should be mapped.\n                        (Default: 0)\n  --nibble N\
  \            For use with `--center` only. nt to remove from each\n            \
  \            end of read before mapping (Default: 0)\n\nannotation file options\
  \ (one or more annotation files required):\n  Open one or more genome annotation\
  \ files\n\n  --annotation_files infile.[BED | BigBed | GTF2 | GFF3] [infile.[BED\
  \ | BigBed | GTF2 | GFF3] ...]\n                        Zero or more annotation\
  \ files (max 1 file if BigBed)\n  --annotation_format {BED,BigBed,GTF2,GFF3}\n \
  \                       Format of annotation_files (Default: GTF2). Note: GFF3\n\
  \                        assembly assumes SO v.2.5.2 feature ontologies, which\n\
  \                        may or may not match your specific file.\n  --add_three\
  \           If supplied, coding regions will be extended by 3\n                \
  \        nucleotides at their 3' ends (except for GTF2 files\n                 \
  \       that explicitly include `stop_codon` features). Use if\n               \
  \         your annotation file excludes stop codons from CDS.\n  --tabix       \
  \        annotation_files are tabix-compressed and indexed\n                   \
  \     (Default: False). Ignored for BigBed files.\n  --sorted              annotation_files\
  \ are sorted by chromosomal position\n                        (Default: False)\n\
  \nBED-specific options:\n  --bed_extra_columns BED_EXTRA_COLUMNS [BED_EXTRA_COLUMNS\
  \ ...]\n                        Number of extra columns in BED file (e.g. in custom\n\
  \                        ENCODE formats) or list of names for those columns.\n \
  \                       (Default: 0).\n  --mask_bed_extra_columns MASK_BED_EXTRA_COLUMNS\
  \ [MASK_BED_EXTRA_COLUMNS ...]\n                        Number of extra columns\
  \ in BED file (e.g. in custom\n                        ENCODE formats) or list of\
  \ names for those columns.\n                        (Default: 0).\n\nBigBed-specific\
  \ options:\n  --maxmem MAXMEM       Maximum desired memory footprint in MB to devote\
  \ to\n                        BigBed/BigWig files. May be exceeded by large queries.\n\
  \                        (Default: 0, No maximum)\n  --mask_maxmem MASK_MAXMEM\n\
  \                        Maximum desired memory footprint in MB to devote to\n \
  \                       BigBed/BigWig files. May be exceeded by large queries.\n\
  \                        (Default: 0, No maximum)\n\nGFF3-specific options:\n  --gff_transcript_types\
  \ GFF_TRANSCRIPT_TYPES [GFF_TRANSCRIPT_TYPES ...]\n                        GFF3\
  \ feature types to include as transcripts, even if\n                        no exons\
  \ are present (for GFF3 only; default: use SO\n                        v2.5.3 specification)\n\
  \  --gff_exon_types GFF_EXON_TYPES [GFF_EXON_TYPES ...]\n                      \
  \  GFF3 feature types to include as exons (for GFF3 only;\n                    \
  \    default: use SO v2.5.3 specification)\n  --gff_cds_types GFF_CDS_TYPES [GFF_CDS_TYPES\
  \ ...]\n                        GFF3 feature types to include as CDS (for GFF3 only;\n\
  \                        default: use SO v2.5.3 specification)\n  --mask_gff_transcript_types\
  \ MASK_GFF_TRANSCRIPT_TYPES [MASK_GFF_TRANSCRIPT_TYPES ...]\n                  \
  \      GFF3 feature types to include as transcripts, even if\n                 \
  \       no exons are present (for GFF3 only; default: use SO\n                 \
  \       v2.5.3 specification)\n  --mask_gff_exon_types MASK_GFF_EXON_TYPES [MASK_GFF_EXON_TYPES\
  \ ...]\n                        GFF3 feature types to include as exons (for GFF3\
  \ only;\n                        default: use SO v2.5.3 specification)\n  --mask_gff_cds_types\
  \ MASK_GFF_CDS_TYPES [MASK_GFF_CDS_TYPES ...]\n                        GFF3 feature\
  \ types to include as CDS (for GFF3 only;\n                        default: use\
  \ SO v2.5.3 specification)\n\nmask file options (optional):\n  Add mask file(s)\
  \ that annotate regions that should be excluded from analyses\n  (e.g. repetitive\
  \ genomic regions).\n\n  --mask_annotation_files infile.[BED | BigBed | GTF2 | GFF3\
  \ | PSL] [infile.[BED | BigBed | GTF2 | GFF3 | PSL] ...]\n                     \
  \   Zero or more annotation files (max 1 file if BigBed)\n  --mask_annotation_format\
  \ {BED,BigBed,GTF2,GFF3,PSL}\n                        Format of mask_annotation_files\
  \ (Default: GTF2). Note:\n                        GFF3 assembly assumes SO v.2.5.2\
  \ feature ontologies,\n                        which may or may not match your specific\
  \ file.\n  --mask_add_three      If supplied, coding regions will be extended by\
  \ 3\n                        nucleotides at their 3' ends (except for GTF2 files\n\
  \                        that explicitly include `stop_codon` features). Use if\n\
  \                        your annotation file excludes stop codons from CDS.\n \
  \ --mask_tabix          mask_annotation_files are tabix-compressed and indexed\n\
  \                        (Default: False). Ignored for BigBed files.\n  --mask_sorted\
  \         mask_annotation_files are sorted by chromosomal\n                    \
  \    position (Default: False)\n"
generated_using:
- --help
docker_image:
