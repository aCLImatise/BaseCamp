version 1.0

task MetageneChart {
  input {
    Array[String] labels
    String? landmark
    Boolean? quiet
    Boolean? verbose
    String? fig_format
    String? fig_size
    String? title
    Int? cmap
    Int? dpi
    Boolean? stylesheet
    String out_base
    String in_files
  }
  command <<<
    metagene chart \
      ~{out_base} \
      ~{in_files} \
      ~{if defined(labels) then ("--labels " +  '"' + labels + '"') else ""} \
      ~{if defined(landmark) then ("--landmark " +  '"' + landmark + '"') else ""} \
      ~{if (quiet) then "--quiet" else ""} \
      ~{if (verbose) then "--verbose" else ""} \
      ~{if defined(fig_format) then ("--figformat " +  '"' + fig_format + '"') else ""} \
      ~{if defined(fig_size) then ("--figsize " +  '"' + fig_size + '"') else ""} \
      ~{if defined(title) then ("--title " +  '"' + title + '"') else ""} \
      ~{if defined(cmap) then ("--cmap " +  '"' + cmap + '"') else ""} \
      ~{if defined(dpi) then ("--dpi " +  '"' + dpi + '"') else ""} \
      ~{if (stylesheet) then "--stylesheet" else ""}
  >>>
  parameter_meta {
    labels: "Sample names for each metagene profile (optional)."
    landmark: "Name of landmark at zero point (e.g. 'CDS start' or\\n'CDS stop'; optional)"
    quiet: "Suppress all warning messages. Cannot use with '-v'."
    verbose: "Increase verbosity. With '-v', show every warning.\\nWith '-vv', turn warnings into exceptions. Cannot use\\nwith '-q'. (Default: show each type of warning once)"
    fig_format: "File format for figure(s); Default: png)"
    fig_size: "N         Figure width and height, in inches. (Default: use\\nmatplotlibrc params)"
    title: "Base title for plot(s)."
    cmap: "Matplotlib color map from which palette will be made\\n(e.g. 'Blues','autumn','Set1'; default: use colors\\nfrom ``--stylesheet`` if given, or color cycle in\\nmatplotlibrc)"
    dpi: "Figure resolution (Default: 150)"
    stylesheet: "{Solarize_Light2,_classic_test_patch,bmh,classic,dark_background,fast,fivethirtyeight,ggplot,grayscale,seaborn,seaborn-bright,seaborn-colorblind,seaborn-dark,seaborn-dark-palette,seaborn-darkgrid,seaborn-deep,seaborn-muted,seaborn-notebook,seaborn-paper,seaborn-pastel,seaborn-poster,seaborn-talk,seaborn-ticks,seaborn-white,seaborn-whitegrid,tableau-colorblind10}\\nUse this matplotlib stylesheet instead of matplotlibrc\\nparams\\n"
    out_base: "Basename for output file."
    in_files: "One or more metagene profiles, generated by the\\n``count`` subprogram, which will be plotted together."
  }
  output {
    File out_stdout = stdout()
  }
}