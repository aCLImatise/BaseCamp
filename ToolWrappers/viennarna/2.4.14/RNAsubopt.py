from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Rnasubopt_V0_1_0 = CommandToolBuilder(tool="RNAsubopt", base_command=["RNAsubopt"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Be verbose\n(default=off)")), ToolInput(tag="in_noconv", input_type=Boolean(optional=True), prefix="--noconv", doc=InputDocumentation(doc="Do not automatically substitude nucleotide\n'T' with 'U'\n(default=off)")), ToolInput(tag="in_in_file", input_type=File(optional=True), prefix="--infile", doc=InputDocumentation(doc="Read a file instead of reading from stdin")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="[=<filename>]    Print output to file instead of stdout")), ToolInput(tag="in_auto_id", input_type=Boolean(optional=True), prefix="--auto-id", doc=InputDocumentation(doc="Automatically generate an ID for each sequence.\n(default=off)")), ToolInput(tag="in_id_prefix", input_type=File(optional=True), prefix="--id-prefix", doc=InputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`sequence')")), ToolInput(tag="in_max_bp_span", input_type=Int(optional=True), prefix="--maxBPspan", doc=InputDocumentation(doc="Set the maximum base pair span\n(default=`-1')")), ToolInput(tag="in_constraint", input_type=Boolean(optional=True), prefix="--constraint", doc=InputDocumentation(doc="[=<filename>] Calculate structures subject to constraints.\n(default=`')")), ToolInput(tag="in_batch", input_type=Boolean(optional=True), prefix="--batch", doc=InputDocumentation(doc="Use constraints for multiple sequences.\n(default=off)")), ToolInput(tag="in_canonical_bp_only", input_type=Boolean(optional=True), prefix="--canonicalBPonly", doc=InputDocumentation(doc="Remove non-canonical base pairs from the\nstructure constraint\n(default=off)")), ToolInput(tag="in_enforce_constraint", input_type=Boolean(optional=True), prefix="--enforceConstraint", doc=InputDocumentation(doc="Enforce base pairs given by round brackets ( )\nin structure constraint\n(default=off)")), ToolInput(tag="in_shape", input_type=File(optional=True), prefix="--shape", doc=InputDocumentation(doc="Use SHAPE reactivity data in the folding\nrecursions (does not work for Zuker\nsuboptimals and stochastic backtracking yet)")), ToolInput(tag="in_shape_method", input_type=Boolean(optional=True), prefix="--shapeMethod", doc=InputDocumentation(doc="=[D/Z/W] + [optional parameters]\nSpecify the method how to convert SHAPE\nreactivity data to pseudo energy\ncontributions\n(default=`D')")), ToolInput(tag="in_shape_conversion", input_type=String(optional=True), prefix="--shapeConversion", doc=InputDocumentation(doc="/C/S/L/O  + [optional parameters]\nSpecify the method used to convert SHAPE\nreactivities to pairing probabilities when\nusing the SHAPE approach of Zarringhalam et\nal.\n(default=`O')")), ToolInput(tag="in_delta_energy", input_type=String(optional=True), prefix="--deltaEnergy", doc=InputDocumentation(doc="Compute suboptimal structures with energy in a\ncertain range of the optimum (kcal/mol).\nDefault is calculation of mfe structure only.")), ToolInput(tag="in_delta_energy_post", input_type=String(optional=True), prefix="--deltaEnergyPost", doc=InputDocumentation(doc="Only print structures with energy within range\nof the mfe after post reevaluation of\nenergies.")), ToolInput(tag="in_sorted", input_type=Boolean(optional=True), prefix="--sorted", doc=InputDocumentation(doc="Sort the suboptimal structures by energy.\n(default=off)")), ToolInput(tag="in_stoch_bt", input_type=Int(optional=True), prefix="--stochBT", doc=InputDocumentation(doc="Instead of producing all suboptimals in an\nenergy range, produce a random sample of\nsuboptimal structures, drawn with\nprobabilities equal to their Boltzmann\nweights via stochastic backtracking in the\npartition function. The -e and -p options are\nmutually exclusive.")), ToolInput(tag="in_stoch_bt_en", input_type=Int(optional=True), prefix="--stochBT_en", doc=InputDocumentation(doc="Same as '--stochBT' but also print out the\nenergies and probabilities of the backtraced\nstructures.")), ToolInput(tag="in_nonredundant", input_type=Boolean(optional=True), prefix="--nonRedundant", doc=InputDocumentation(doc="Enable non-redundant sampling strategy.\n(default=off)")), ToolInput(tag="in_circ", input_type=Boolean(optional=True), prefix="--circ", doc=InputDocumentation(doc="Assume a circular (instead of linear) RNA")), ToolInput(tag="in_dos", input_type=Boolean(optional=True), prefix="--dos", doc=InputDocumentation(doc="Compute density of states instead of secondary")), ToolInput(tag="in_zuker", input_type=Boolean(optional=True), prefix="--zuker", doc=InputDocumentation(doc="Compute Zuker suboptimals instead of all\nsuboptimal structures within an engery band\naround the MFE.\n(default=off)")), ToolInput(tag="in_g_quad", input_type=Boolean(optional=True), prefix="--gquad", doc=InputDocumentation(doc="Incoorporate G-Quadruplex formation into the\nstructure prediction algorithm\n(no support of G-quadruplex prediction for\nstochastic backtracking and Zuker-style\nsuboptimals yet)\n(default=off)")), ToolInput(tag="in_temp", input_type=Int(optional=True), prefix="--temp", doc=InputDocumentation(doc="Rescale energy parameters to a temperature of\ntemp C. Default is 37C.")), ToolInput(tag="in_no_tetra", input_type=Boolean(optional=True), prefix="--noTetra", doc=InputDocumentation(doc="Do not include special tabulated stabilizing\nenergies for tri-, tetra- and hexaloop\nhairpins.\n(default=off)")), ToolInput(tag="in_dangles", input_type=Int(optional=True), prefix="--dangles", doc=InputDocumentation(doc="How to treat 'dangling end' energies for\nbases adjacent to helices in free ends and\nmulti-loops\n(default=`2')")), ToolInput(tag="in_no_lp", input_type=Boolean(optional=True), prefix="--noLP", doc=InputDocumentation(doc="Produce structures without lonely pairs\n(helices of length 1).\n(default=off)")), ToolInput(tag="in_no_gu", input_type=Boolean(optional=True), prefix="--noGU", doc=InputDocumentation(doc="Do not allow GU pairs\n(default=off)")), ToolInput(tag="in_no_closing_gu", input_type=Boolean(optional=True), prefix="--noClosingGU", doc=InputDocumentation(doc="Do not allow GU pairs at the end of helices\n(default=off)")), ToolInput(tag="in_log_ml", input_type=Boolean(optional=True), prefix="--logML", doc=InputDocumentation(doc="Recalculate energies of structures using a\nlogarithmic energy function for multi-loops\nbefore output.  (default=off)")), ToolInput(tag="in_param_file", input_type=File(optional=True), prefix="--paramFile", doc=InputDocumentation(doc="Read energy parameters from paramfile, instead\nof using the default parameter set.")), ToolInput(tag="in_molecule_dot", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_structures", input_type=String(), position=1, doc=InputDocumentation(doc="(default=off)"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="[=<filename>]    Print output to file instead of stdout")), ToolOutput(tag="out_id_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_id_prefix", type_hint=File()), doc=OutputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`sequence')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnasubopt_V0_1_0().translate("wdl", allow_empty_container=True)

