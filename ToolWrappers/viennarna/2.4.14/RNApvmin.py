from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Float, Int, File

Rnapvmin_V0_1_0 = CommandToolBuilder(tool="RNApvmin", base_command=["RNApvmin"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_shape_conversion", input_type=String(optional=True), prefix="--shapeConversion", doc=InputDocumentation(doc="/C/S/L/O  + [optional parameters]\nSpecify the method used to convert SHAPE\nreactivities to pairing probabilities.\n(default=`O')")), ToolInput(tag="in_tau_sigma_ratio", input_type=Float(optional=True), prefix="--tauSigmaRatio", doc=InputDocumentation(doc="Ratio of the weighting factors tau and sigma.\n(default=`1.0')")), ToolInput(tag="in_objective_function", input_type=Int(optional=True), prefix="--objectiveFunction", doc=InputDocumentation(doc="The energies of the perturbation vector and the\ndiscripancies between predicted and observed\npairing probabilities contribute to the\nobjective function. This parameter defines,\nwhich function is used to process the\ncontributions before summing them up.\n0 square\n1 absolute\n(default=`0')")), ToolInput(tag="in_sample_size", input_type=Int(optional=True), prefix="--sampleSize", doc=InputDocumentation(doc="The iterative minimization process requires to\nevaluate the gradient of the objective\nfunction. A sample size of 0 leads to an\nanalytical evaluation which scales as O(N^4).\nChoosing a sample size >0 estimates the\ngradient by sampling the given number of\nsequences from the ensemble, which is much\nfaster.\n(default=`1000')")), ToolInput(tag="in_nonredundant", input_type=Boolean(optional=True), prefix="--nonRedundant", doc=InputDocumentation(doc="Enable non-redundant sampling strategy.\n(default=off)")), ToolInput(tag="in_intermediate_path", input_type=Int(optional=True), prefix="--intermediatePath", doc=InputDocumentation(doc="Write an output file for each iteration of the\nminimization process. Each file contains the\nused perturbation vector and the score of the\nobjective function. The number of the\niteration will be appended to the given path.")), ToolInput(tag="in_initial_vector", input_type=Int(optional=True), prefix="--initialVector", doc=InputDocumentation(doc="Defines the initial perturbation vector which\nwill be used as starting vector for the\nminimization process. The value 0 results in\na null vector. Every other value x will be\nused to populate the initial vector with\nrandom numbers from the interval [-x,x].\n(default=`0')")), ToolInput(tag="in_minimizer", input_type=Int(optional=True), prefix="--minimizer", doc=InputDocumentation(doc="Set the minimizing algorithm used for finding\nan appropriate perturbation vector. The\ndefault option uses a custom implementation\nof the gradient descent algorithms while all\nother options represent various algorithms\nimplemented in the GNU Scientific Library.\nWhen the GNU Scientific Library can not be\nfound, only the default minimizer is\navailable.\n(possible values='conjugate_fr',\n'conjugate_pr', 'vector_bfgs',\n'vector_bfgs2', 'steepest_descent',\n'default' default=`default')")), ToolInput(tag="in_temp", input_type=Int(optional=True), prefix="--temp", doc=InputDocumentation(doc="Rescale energy parameters to a temperature of\ntemp C. Default is 37C.")), ToolInput(tag="in_no_tetra", input_type=Boolean(optional=True), prefix="--noTetra", doc=InputDocumentation(doc="Do not include special tabulated stabilizing\nenergies for tri-, tetra- and hexaloop\nhairpins. Mostly for testing.\n(default=off)")), ToolInput(tag="in_dangles", input_type=Int(optional=True), prefix="--dangles", doc=InputDocumentation(doc="How to treat 'dangling end' energies for\nbases adjacent to helices in free ends and\nmulti-loops\n(default=`2')")), ToolInput(tag="in_no_lp", input_type=Boolean(optional=True), prefix="--noLP", doc=InputDocumentation(doc="Produce structures without lonely pairs\n(helices of length 1).\n(default=off)")), ToolInput(tag="in_no_gu", input_type=Boolean(optional=True), prefix="--noGU", doc=InputDocumentation(doc="Do not allow GU pairs\n(default=off)")), ToolInput(tag="in_no_closing_gu", input_type=Boolean(optional=True), prefix="--noClosingGU", doc=InputDocumentation(doc="Do not allow GU pairs at the end of helices\n(default=off)")), ToolInput(tag="in_param_file", input_type=File(optional=True), prefix="--paramFile", doc=InputDocumentation(doc="Read energy parameters from paramfile, instead\nof using the default parameter set.")), ToolInput(tag="in_max_bp_span", input_type=Int(optional=True), prefix="--maxBPspan", doc=InputDocumentation(doc="Set the maximum base pair span\n(default=`-1')")), ToolInput(tag="in_program", input_type=String(), position=0, doc=InputDocumentation(doc="-j, --numThreads=INT          Set the number of threads used for calculations\n(only available when compiled with OpenMP\nsupport)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnapvmin_V0_1_0().translate("wdl", allow_empty_container=True)

