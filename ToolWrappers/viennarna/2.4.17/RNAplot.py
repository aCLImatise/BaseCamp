from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Rnaplot_V0_1_0 = CommandToolBuilder(tool="RNAplot", base_command=["RNAplot"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_jobs", input_type=Boolean(optional=True), prefix="--jobs", doc=InputDocumentation(doc="[=number]           Split batch input into jobs and start\nprocessing in parallel using multiple\nthreads.  (default=`0')")), ToolInput(tag="in_in_file", input_type=File(optional=True), prefix="--infile", doc=InputDocumentation(doc="Read a file instead of reading from stdin.")), ToolInput(tag="in_msa", input_type=Boolean(optional=True), prefix="--msa", doc=InputDocumentation(doc="Input is multiple sequence alignment in\nStockholm 1.0 format.  (default=off)")), ToolInput(tag="in_mis", input_type=Boolean(optional=True), prefix="--mis", doc=InputDocumentation(doc="Output 'most informative sequence' instead of\nsimple consensus  (default=off)")), ToolInput(tag="in_co_var", input_type=Boolean(optional=True), prefix="--covar", doc=InputDocumentation(doc="Annotate covariance of base pairs in consensus")), ToolInput(tag="in_aln", input_type=Boolean(optional=True), prefix="--aln", doc=InputDocumentation(doc="Produce a colored and structure annotated\nalignment in PostScript format in the file\n'aln.ps' in the current directory.\n(default=off)")), ToolInput(tag="in_layout_type", input_type=Int(optional=True), prefix="--layout-type", doc=InputDocumentation(doc="Choose the plotting layout algorithm.\n(default=`1')")), ToolInput(tag="in_pre", input_type=File(optional=True), prefix="--pre", doc=InputDocumentation(doc="Add annotation macros to postscript file, and\nadd the postscript code in 'string' just\nbefore the code to draw the structure. This\nis an easy way to add annotation.")), ToolInput(tag="in_post", input_type=Int(optional=True), prefix="--post", doc=InputDocumentation(doc="Same as --pre but in contrast to adding the\nannotation macros. E.g to mark position 15\nwith circle use --post '15 cmark'.")), ToolInput(tag="in_auto_id", input_type=Boolean(optional=True), prefix="--auto-id", doc=InputDocumentation(doc="Automatically generate an ID for each sequence.\n(default=off)")), ToolInput(tag="in_id_prefix", input_type=File(optional=True), prefix="--id-prefix", doc=InputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names).  (default=`sequence')")), ToolInput(tag="in_structure_dot", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)"))], outputs=[ToolOutput(tag="out_id_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_id_prefix", type_hint=File()), doc=OutputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names).  (default=`sequence')"))], container="quay.io/biocontainers/viennarna:2.4.17--py36hd181a71_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnaplot_V0_1_0().translate("wdl")

