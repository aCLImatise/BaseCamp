from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Float, String

Rnaalifold_V0_1_0 = CommandToolBuilder(tool="RNAalifold", base_command=["RNAalifold"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Be verbose.\n(default=off)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Be quiet.\n(default=off)")), ToolInput(tag="in_jobs", input_type=Boolean(optional=True), prefix="--jobs", doc=InputDocumentation(doc="[=number]           Split batch input into jobs and start\nprocessing in parallel using multiple\nthreads. A value of 0 indicates to use as\nmany parallel threads as computation cores\nare available.\n(default=`0')")), ToolInput(tag="in_noconv", input_type=Boolean(optional=True), prefix="--noconv", doc=InputDocumentation(doc="Do not automatically substitute nucleotide\n'T' with 'U'\n(default=off)")), ToolInput(tag="in_color", input_type=Boolean(optional=True), prefix="--color", doc=InputDocumentation(doc="Produce a colored version of the consensus\nstructure plot 'alirna.ps' (default b&w\nonly)\n(default=off)")), ToolInput(tag="in_aln", input_type=Boolean(optional=True), prefix="--aln", doc=InputDocumentation(doc="Produce a colored and structure annotated\nalignment in PostScript format in the file\n'aln.ps' in the current directory.\n(default=off)")), ToolInput(tag="in_aln_stk", input_type=File(optional=True), prefix="--aln-stk", doc=InputDocumentation(doc="[=prefix]        Create a multi-Stockholm formatted output file.\n(default=`RNAalifold_results')")), ToolInput(tag="in_nops", input_type=Boolean(optional=True), prefix="--noPS", doc=InputDocumentation(doc="Do not produce postscript drawing of the mfe")), ToolInput(tag="in_no_dp", input_type=Boolean(optional=True), prefix="--noDP", doc=InputDocumentation(doc="Do not produce dot-plot postscript file\ncontaining base pair or stack\nprobabilitities.\n(default=off)")), ToolInput(tag="in_input_format", input_type=File(optional=True), prefix="--input-format", doc=InputDocumentation(doc="|S|F|M    File format of the input multiple sequence\nalignment (MSA).")), ToolInput(tag="in_continuous_ids", input_type=Boolean(optional=True), prefix="--continuous-ids", doc=InputDocumentation(doc="Use continuous alignment ID numbering when no\nalignment ID can be retrieved from input\ndata.\n(default=off)")), ToolInput(tag="in_auto_id", input_type=Boolean(optional=True), prefix="--auto-id", doc=InputDocumentation(doc="Automatically generate an ID for each")), ToolInput(tag="in_id_prefix", input_type=File(optional=True), prefix="--id-prefix", doc=InputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`alignment')")), ToolInput(tag="in_max_bp_span", input_type=Int(optional=True), prefix="--maxBPspan", doc=InputDocumentation(doc="Set the maximum base pair span\n(default=`-1')")), ToolInput(tag="in_constraint", input_type=Boolean(optional=True), prefix="--constraint", doc=InputDocumentation(doc="[=<filename>] Calculate structures subject to constraints.\nThe constraining structure will be read from\n'stdin', the alignment has to be given as a\nfile name on the command line.\n(default=`')")), ToolInput(tag="in_batch", input_type=Boolean(optional=True), prefix="--batch", doc=InputDocumentation(doc="Use constraints for all alignment records.\n(default=off)")), ToolInput(tag="in_enforce_constraint", input_type=Boolean(optional=True), prefix="--enforceConstraint", doc=InputDocumentation(doc="Enforce base pairs given by round brackets ( )\nin structure constraint\n(default=off)")), ToolInput(tag="in_ss_cons", input_type=Boolean(optional=True), prefix="--SS_cons", doc=InputDocumentation(doc="Use consensus structures from Stockholm file\n(#=GF SS_cons) as constraint\n(default=off)")), ToolInput(tag="in_shape", input_type=File(optional=True), prefix="--shape", doc=InputDocumentation(doc=",file2       Use SHAPE reactivity data to guide structure")), ToolInput(tag="in_part_func", input_type=Boolean(optional=True), prefix="--partfunc", doc=InputDocumentation(doc="[=INT]          Calculate the partition function and base\npairing probability matrix in addition to the\nmfe structure. Default is calculation of mfe\nstructure only.\n(default=`1')")), ToolInput(tag="in_me_a", input_type=Boolean(optional=True), prefix="--MEA", doc=InputDocumentation(doc="[=gamma]             Calculate an MEA (maximum expected accuracy)\nstructure, where the expected accuracy is\ncomputed from the pair probabilities: each\nbase pair (i,j) gets a score 2*gamma*p_ij and\nthe score of an unpaired base is given by the\nprobability of not forming a pair.\n(default=`1.')")), ToolInput(tag="in_mis", input_type=Boolean(optional=True), prefix="--mis", doc=InputDocumentation(doc="Output 'most informative sequence' instead of\nsimple consensus: For each column of the\nalignment output the set of nucleotides with\nfrequency greater than average in IUPAC\nnotation.\n(default=off)")), ToolInput(tag="in_stoch_bt", input_type=Int(optional=True), prefix="--stochBT", doc=InputDocumentation(doc="Stochastic backtrack. Compute a certain number\nof random structures with a probability\ndependend on the partition function. See -p\noption in RNAsubopt.")), ToolInput(tag="in_stoch_bt_en", input_type=Int(optional=True), prefix="--stochBT_en", doc=InputDocumentation(doc="same as '-s' but also print out the energies\nand probabilities of the backtraced\nstructures.")), ToolInput(tag="in_nonredundant", input_type=Boolean(optional=True), prefix="--nonRedundant", doc=InputDocumentation(doc="Enable non-redundant sampling strategy.\n(default=off)")), ToolInput(tag="in_circ", input_type=Boolean(optional=True), prefix="--circ", doc=InputDocumentation(doc="Assume a circular (instead of linear) RNA")), ToolInput(tag="in_g_quad", input_type=Boolean(optional=True), prefix="--gquad", doc=InputDocumentation(doc="Incoorporate G-Quadruplex formation into the\nstructure prediction algorithm.\n(default=off)")), ToolInput(tag="in_sci", input_type=Boolean(optional=True), prefix="--sci", doc=InputDocumentation(doc="Compute the structure conservation index (SCI)\nfor the MFE consensus structure of the\nalignment\n(default=off)")), ToolInput(tag="in_temp", input_type=Int(optional=True), prefix="--temp", doc=InputDocumentation(doc="Rescale energy parameters to a temperature of\ntemp C. Default is 37C.")), ToolInput(tag="in_no_tetra", input_type=Boolean(optional=True), prefix="--noTetra", doc=InputDocumentation(doc="Do not include special tabulated stabilizing\nenergies for tri-, tetra- and hexaloop\nhairpins.\n(default=off)")), ToolInput(tag="in_dangles", input_type=Int(optional=True), prefix="--dangles", doc=InputDocumentation(doc="How to treat 'dangling end' energies for\nbases adjacent to helices in free ends and\nmulti-loops\n(default=`2')")), ToolInput(tag="in_no_lp", input_type=Boolean(optional=True), prefix="--noLP", doc=InputDocumentation(doc="Produce structures without lonely pairs\n(helices of length 1).\n(default=off)")), ToolInput(tag="in_no_gu", input_type=Boolean(optional=True), prefix="--noGU", doc=InputDocumentation(doc="Do not allow GU pairs\n(default=off)")), ToolInput(tag="in_no_closing_gu", input_type=Boolean(optional=True), prefix="--noClosingGU", doc=InputDocumentation(doc="Do not allow GU pairs at the end of helices\n(default=off)")), ToolInput(tag="in_c_factor", input_type=Float(optional=True), prefix="--cfactor", doc=InputDocumentation(doc="Set the weight of the covariance term in the\nenergy function\n(default=`1.0')")), ToolInput(tag="in_n_factor", input_type=Float(optional=True), prefix="--nfactor", doc=InputDocumentation(doc="Set the penalty for non-compatible sequences in\nthe covariance term of the energy function\n(default=`1.0')")), ToolInput(tag="in_end_gaps", input_type=Boolean(optional=True), prefix="--endgaps", doc=InputDocumentation(doc="Score pairs with endgaps same as gap-gap pairs.\n(default=off)")), ToolInput(tag="in_ribo_sum_file", input_type=File(optional=True), prefix="--ribosum_file", doc=InputDocumentation(doc="use specified Ribosum Matrix instead of normal\nenergy model. Matrixes to use should be 6x6\nmatrices, the order of the terms is AU, CG,\nGC, GU, UA, UG.")), ToolInput(tag="in_ribo_sum_scoring", input_type=Boolean(optional=True), prefix="--ribosum_scoring", doc=InputDocumentation(doc="use ribosum scoring matrix. The matrix is\nchosen according to the minimal and maximal\npairwise identities of the sequences in the\nfile.\n(default=off)")), ToolInput(tag="in_old", input_type=Boolean(optional=True), prefix="--old", doc=InputDocumentation(doc="use old energy evaluation, treating gaps as")), ToolInput(tag="in_param_file", input_type=File(optional=True), prefix="--paramFile", doc=InputDocumentation(doc="Read energy parameters from paramfile, instead\nof using the default parameter set.")), ToolInput(tag="in_structure_dot", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_alignment_dot", input_type=String(), position=1, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_predictions", input_type=String(), position=0, doc=InputDocumentation(doc="--shapeMethod=D[mX][bY]   Specify the method how to convert SHAPE")), ToolInput(tag="in_contributions", input_type=String(), position=0, doc=InputDocumentation(doc="(default=`D')")), ToolInput(tag="in_molecule_dot", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_characters_dot", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)"))], outputs=[ToolOutput(tag="out_aln_stk", output_type=File(optional=True), selector=InputSelector(input_to_select="in_aln_stk", type_hint=File()), doc=OutputDocumentation(doc="[=prefix]        Create a multi-Stockholm formatted output file.\n(default=`RNAalifold_results')")), ToolOutput(tag="out_id_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_id_prefix", type_hint=File()), doc=OutputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`alignment')"))], container="quay.io/biocontainers/viennarna:2.4.17--py36hd181a71_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnaalifold_V0_1_0().translate("wdl")

