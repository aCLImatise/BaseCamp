from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, File, String

Flextaxd_V0_1_0 = CommandToolBuilder(tool="flextaxd", base_command=["flextaxd"], inputs=[ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_dump", input_type=Boolean(optional=True), prefix="--dump", doc=InputDocumentation(doc="Write database to names.dmp and nodes.dmp")), ToolInput(tag="in_dump_mini", input_type=Boolean(optional=True), prefix="--dump_mini", doc=InputDocumentation(doc="Dump minimal file with tab as separator")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="use when script is implemented in pipeline to avoid\nsecurity questions on overwrite!")), ToolInput(tag="in_validate", input_type=Boolean(optional=True), prefix="--validate", doc=InputDocumentation(doc="Validate database format")), ToolInput(tag="in_stats", input_type=Boolean(optional=True), prefix="--stats", doc=InputDocumentation(doc="Print some statistics from the database")), ToolInput(tag="in_taxonomy_file", input_type=Boolean(optional=True), prefix="--taxonomy_file", doc=InputDocumentation(doc="Taxonomy source file")), ToolInput(tag="in_taxonomy_type", input_type=Boolean(optional=True), prefix="--taxonomy_type", doc=InputDocumentation(doc="Source format of taxonomy input file\n(QIIME,NCBI,CanSNPer)")), ToolInput(tag="in_taxid_base", input_type=Boolean(optional=True), prefix="--taxid_base", doc=InputDocumentation(doc="The base for internal taxonomy ID numbers, when using\nNCBI as base select base at minimum 3000000 (default =\n1)")), ToolInput(tag="in_mod_file", input_type=Boolean(optional=True), prefix="--mod_file", doc=InputDocumentation(doc="File contaning modifications parent,child,(taxonomy\nlevel)")), ToolInput(tag="in_mod_database", input_type=Boolean(optional=True), prefix="--mod_database", doc=InputDocumentation(doc="Database file containing modifications")), ToolInput(tag="in_genome_id_two_taxid", input_type=Boolean(optional=True), prefix="--genomeid2taxid", doc=InputDocumentation(doc="File that lists which node a genome should be assigned\nto")), ToolInput(tag="in_genomes_path", input_type=Boolean(optional=True), prefix="--genomes_path", doc=InputDocumentation(doc="Path to genome folder is required when using\nNCBI_taxonomy as source")), ToolInput(tag="in_parent", input_type=Boolean(optional=True), prefix="--parent", doc=InputDocumentation(doc="Parent from which to add (replace see below) branch")), ToolInput(tag="in_replace", input_type=Boolean(optional=True), prefix="--replace", doc=InputDocumentation(doc="Add if existing children of parents should be removed!")), ToolInput(tag="in_clean_database", input_type=Boolean(optional=True), prefix="--clean_database", doc=InputDocumentation(doc="Clean up database from unannotated nodes")), ToolInput(tag="in_skip_annotation", input_type=Boolean(optional=True), prefix="--skip_annotation", doc=InputDocumentation(doc="Do not automatically add annotation when creating GTDB")), ToolInput(tag="in_db_program", input_type=File(optional=True), prefix="--dbprogram", doc=InputDocumentation(doc="Adjust output file to certain output specifications\n[kraken2, krakenuniq, ganon, centrifuge, bracken]")), ToolInput(tag="in_dump_prefix", input_type=Boolean(optional=True), prefix="--dump_prefix", doc=InputDocumentation(doc="change dump prefix reqires two names\ndefault(names,nodes)")), ToolInput(tag="in_dump_sep", input_type=Boolean(optional=True), prefix="--dump_sep", doc=InputDocumentation(doc="Set output separator default(NCBI) also adds extra\ntrailing columns for kraken")), ToolInput(tag="in_dump_descriptions", input_type=Boolean(optional=True), prefix="--dump_descriptions", doc=InputDocumentation(doc="Dump description names instead of database integers")), ToolInput(tag="in_visualise_node", input_type=Boolean(optional=True), prefix="--visualise_node", doc=InputDocumentation(doc="Visualise tree from selected node")), ToolInput(tag="in_vis_type", input_type=Boolean(optional=True), prefix="--vis_type", doc=InputDocumentation(doc="Choices [newick, newick_vis, tree]")), ToolInput(tag="in_vis_depth", input_type=Boolean(optional=True), prefix="--vis_depth", doc=InputDocumentation(doc="Maximum depth from node to visualise default 3, 0 =\nall levels")), ToolInput(tag="in_logs", input_type=Boolean(optional=True), prefix="--logs", doc=InputDocumentation(doc="Specify log directory")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose output")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Debug output")), ToolInput(tag="in_supress", input_type=Boolean(optional=True), prefix="--supress", doc=InputDocumentation(doc="Supress warnings")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Dont show logging messages in terminal!")), ToolInput(tag="in_db", input_type=Boolean(optional=True), prefix="-db", doc=InputDocumentation(doc="")), ToolInput(tag="in_required", input_type=String(), position=0, doc=InputDocumentation(doc="-db , --database      FlexTaxD taxonomy sqlite3 database file (fullpath)")), ToolInput(tag="in_database", input_type=String(), position=0, doc=InputDocumentation(doc="output_opts:"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory")), ToolOutput(tag="out_db_program", output_type=File(optional=True), selector=InputSelector(input_to_select="in_db_program", type_hint=File()), doc=OutputDocumentation(doc="Adjust output file to certain output specifications\n[kraken2, krakenuniq, ganon, centrifuge, bracken]"))], container="quay.io/biocontainers/flextaxd:0.4.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Flextaxd_V0_1_0().translate("wdl")

