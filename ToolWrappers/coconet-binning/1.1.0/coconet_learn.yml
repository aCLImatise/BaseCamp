!Command
command:
- coconet
- learn
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --fasta
  description: "Path to your assembly file (fasta formatted) (default:\nNone)"
  args: !SimpleFlagArg
    name: FASTA
- !Flag
  optional: true
  synonyms:
  - --h5
  description: "Experimental: coverage in hdf5 format (keys are\ncontigs, values are\
    \ (sample, contig_len) ndarrays\n(default: None)"
  args: !SimpleFlagArg
    name: H5
- !Flag
  optional: true
  synonyms:
  - --output
  description: 'Path to output directory (default: output)'
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: 'Number of threads (default: 5)'
  args: !SimpleFlagArg
    name: THREADS
- !Flag
  optional: true
  synonyms:
  - --debug
  description: 'Print debugging statements (default: 20)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --quiet
  description: 'Less verbose (default: None)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --silent
  description: 'Only error messages (default: None)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --continue
  description: "Start from last checkpoint. The output directory needs\nto be the\
    \ same. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fragment-length
  description: "Length of contig fragments in bp. Default is half the\nminimum contig\
    \ length. (default: -1)"
  args: !SimpleFlagArg
    name: FRAGMENT_LENGTH
- !Flag
  optional: true
  synonyms:
  - --features
  description: "[{coverage,composition} ...]\nFeatures for binning (composition, coverage,\
    \ or both)\n(default: ['coverage', 'composition'])"
  args: !ChoiceFlagArg
    choices: !!set
      coverage:
      composition:
- !Flag
  optional: true
  synonyms:
  - --fragment-step
  description: 'Fragments spacing (default: 128)'
  args: !SimpleFlagArg
    name: FRAGMENT_STEP
- !Flag
  optional: true
  synonyms:
  - --test-ratio
  description: 'Ratio for train / test split (default: 0.1)'
  args: !SimpleFlagArg
    name: TEST_RATIO
- !Flag
  optional: true
  synonyms:
  - --n-train
  description: 'Maximum number of training examples (default: 4000000)'
  args: !SimpleFlagArg
    name: N_TRAIN
- !Flag
  optional: true
  synonyms:
  - --n-test
  description: 'Number of test examples (default: 10000)'
  args: !SimpleFlagArg
    name: N_TEST
- !Flag
  optional: true
  synonyms:
  - --learning-rate
  description: 'Learning rate for gradient descent (default: 0.001)'
  args: !SimpleFlagArg
    name: LEARNING_RATE
- !Flag
  optional: true
  synonyms:
  - --batch-size
  description: 'Batch size for training (default: 256)'
  args: !SimpleFlagArg
    name: BATCH_SIZE
- !Flag
  optional: true
  synonyms:
  - --test-batch
  description: Run test every 400 batches
  args: !SimpleFlagArg
    name: TEST_BATCH
- !Flag
  optional: true
  synonyms:
  - --patience
  description: "Early stopping if test accuracy does not improve for 5\nconsecutive\
    \ tests"
  args: !SimpleFlagArg
    name: PATIENCE
- !Flag
  optional: true
  synonyms:
  - --load-batch
  description: "Number of coverage batch to load in memory. Consider\nlowering this\
    \ value if your RAM is limited. (default:\n100)"
  args: !SimpleFlagArg
    name: LOAD_BATCH
- !Flag
  optional: true
  synonyms:
  - --compo-neurons
  description: "COMPO_NEURONS\nNumber of neurons for the composition dense layers\n\
    (x2) (default: [64, 32])"
  args: !SimpleFlagArg
    name: COMPO_NEURONS
- !Flag
  optional: true
  synonyms:
  - --cover-neurons
  description: "COVER_NEURONS\nNumber of neurons for the coverage dense layers (x2)\n\
    (default: [64, 32])"
  args: !SimpleFlagArg
    name: COVER_NEURONS
- !Flag
  optional: true
  synonyms:
  - --cover-filters
  description: "Number of filters for convolution layer of coverage\nnetwork. (default:\
    \ 16)"
  args: !SimpleFlagArg
    name: COVER_FILTERS
- !Flag
  optional: true
  synonyms:
  - --cover-kernel
  description: "Kernel size for convolution layer of coverage network.\n(default:\
    \ 4)"
  args: !SimpleFlagArg
    name: COVER_KERNEL
- !Flag
  optional: true
  synonyms:
  - --cover-stride
  description: "Convolution stride for convolution layer of coverage\nnetwork. (default:\
    \ 2)"
  args: !SimpleFlagArg
    name: COVER_STRIDE
- !Flag
  optional: true
  synonyms:
  - --merge-neurons
  description: "Number of neurons for the merging layer (x1) (default:\n32)"
  args: !SimpleFlagArg
    name: MERGE_NEURONS
- !Flag
  optional: true
  synonyms:
  - -k
  - --kmer
  description: 'k-mer size for composition vector (default: 4)'
  args: !SimpleFlagArg
    name: KMER
- !Flag
  optional: true
  synonyms:
  - --no-rc
  description: "Do not add the reverse complement k-mer occurrences to\nthe composition\
    \ vector. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --wsize
  description: "Smoothing window size for coverage vector (default:\n64)"
  args: !SimpleFlagArg
    name: WSIZE
- !Flag
  optional: true
  synonyms:
  - --wstep
  description: 'Subsampling step for coverage vector (default: 32)'
  args: !SimpleFlagArg
    name: WSTEP
- !Flag
  optional: true
  synonyms:
  - --n-frags
  description: "Number of fragments to split the contigs for the\nclustering phase\
    \ (default: 30)\n"
  args: !SimpleFlagArg
    name: N_FRAGS
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: coconet learn [-h] [--fasta FASTA] [--h5 H5] [--output OUTPUT]\n\
  \                     [-t THREADS] [--debug] [--quiet] [--silent] [--continue]\n\
  \                     [--fragment-length FRAGMENT_LENGTH]\n                    \
  \ [--features {coverage,composition} [{coverage,composition} ...]]\n           \
  \          [--fragment-step FRAGMENT_STEP] [--test-ratio TEST_RATIO]\n         \
  \            [--n-train N_TRAIN] [--n-test N_TEST]\n                     [--learning-rate\
  \ LEARNING_RATE] [--batch-size BATCH_SIZE]\n                     [--test-batch TEST_BATCH]\
  \ [--patience PATIENCE]\n                     [--load-batch LOAD_BATCH]\n      \
  \               [--compo-neurons COMPO_NEURONS COMPO_NEURONS]\n                \
  \     [--cover-neurons COVER_NEURONS COVER_NEURONS]\n                     [--cover-filters\
  \ COVER_FILTERS]\n                     [--cover-kernel COVER_KERNEL]\n         \
  \            [--cover-stride COVER_STRIDE]\n                     [--merge-neurons\
  \ MERGE_NEURONS] [-k KMER] [--no-rc]\n                     [--wsize WSIZE] [--wstep\
  \ WSTEP] [--n-frags N_FRAGS]\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  --fasta FASTA         Path to your assembly file\
  \ (fasta formatted) (default:\n                        None)\n  --h5 H5        \
  \       Experimental: coverage in hdf5 format (keys are\n                      \
  \  contigs, values are (sample, contig_len) ndarrays\n                        (default:\
  \ None)\n  --output OUTPUT       Path to output directory (default: output)\n  -t\
  \ THREADS, --threads THREADS\n                        Number of threads (default:\
  \ 5)\n  --debug               Print debugging statements (default: 20)\n  --quiet\
  \               Less verbose (default: None)\n  --silent              Only error\
  \ messages (default: None)\n  --continue            Start from last checkpoint.\
  \ The output directory needs\n                        to be the same. (default:\
  \ False)\n  --fragment-length FRAGMENT_LENGTH\n                        Length of\
  \ contig fragments in bp. Default is half the\n                        minimum contig\
  \ length. (default: -1)\n  --features {coverage,composition} [{coverage,composition}\
  \ ...]\n                        Features for binning (composition, coverage, or\
  \ both)\n                        (default: ['coverage', 'composition'])\n  --fragment-step\
  \ FRAGMENT_STEP\n                        Fragments spacing (default: 128)\n  --test-ratio\
  \ TEST_RATIO\n                        Ratio for train / test split (default: 0.1)\n\
  \  --n-train N_TRAIN     Maximum number of training examples (default: 4000000)\n\
  \  --n-test N_TEST       Number of test examples (default: 10000)\n  --learning-rate\
  \ LEARNING_RATE\n                        Learning rate for gradient descent (default:\
  \ 0.001)\n  --batch-size BATCH_SIZE\n                        Batch size for training\
  \ (default: 256)\n  --test-batch TEST_BATCH\n                        Run test every\
  \ 400 batches\n  --patience PATIENCE   Early stopping if test accuracy does not\
  \ improve for 5\n                        consecutive tests\n  --load-batch LOAD_BATCH\n\
  \                        Number of coverage batch to load in memory. Consider\n\
  \                        lowering this value if your RAM is limited. (default:\n\
  \                        100)\n  --compo-neurons COMPO_NEURONS COMPO_NEURONS\n \
  \                       Number of neurons for the composition dense layers\n   \
  \                     (x2) (default: [64, 32])\n  --cover-neurons COVER_NEURONS\
  \ COVER_NEURONS\n                        Number of neurons for the coverage dense\
  \ layers (x2)\n                        (default: [64, 32])\n  --cover-filters COVER_FILTERS\n\
  \                        Number of filters for convolution layer of coverage\n \
  \                       network. (default: 16)\n  --cover-kernel COVER_KERNEL\n\
  \                        Kernel size for convolution layer of coverage network.\n\
  \                        (default: 4)\n  --cover-stride COVER_STRIDE\n         \
  \               Convolution stride for convolution layer of coverage\n         \
  \               network. (default: 2)\n  --merge-neurons MERGE_NEURONS\n       \
  \                 Number of neurons for the merging layer (x1) (default:\n     \
  \                   32)\n  -k KMER, --kmer KMER  k-mer size for composition vector\
  \ (default: 4)\n  --no-rc               Do not add the reverse complement k-mer\
  \ occurrences to\n                        the composition vector. (default: False)\n\
  \  --wsize WSIZE         Smoothing window size for coverage vector (default:\n \
  \                       64)\n  --wstep WSTEP         Subsampling step for coverage\
  \ vector (default: 32)\n  --n-frags N_FRAGS     Number of fragments to split the\
  \ contigs for the\n                        clustering phase (default: 30)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/coconet-binning:1.1.0--py_0
