from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Guppy_Pca_V0_1_0 = CommandToolBuilder(tool="guppy_pca", base_command=["guppy", "pca"], inputs=[ToolInput(tag="in_out_dir", input_type=Boolean(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="Specify the directory to write files to.")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Specify a string to be prepended to filenames. Required.")), ToolInput(tag="in_point_mass", input_type=Boolean(optional=True), prefix="--point-mass", doc=InputDocumentation(doc="Treat every pquery as a point mass concentrated on the highest-weight placement.")), ToolInput(tag="in_pp", input_type=Boolean(optional=True), prefix="--pp", doc=InputDocumentation(doc="Use posterior probability for the weight.")), ToolInput(tag="in_reference_package_path", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Reference package path.")), ToolInput(tag="in_min_fat", input_type=Boolean(optional=True), prefix="--min-fat", doc=InputDocumentation(doc="The minimum branch length for fattened edges (to increase their visibility). To turn off set to 0. Default: 0.01")), ToolInput(tag="in_total_width", input_type=Boolean(optional=True), prefix="--total-width", doc=InputDocumentation(doc="Set the total pixel width for all of the branches of the tree. Default: 300")), ToolInput(tag="in_width_factor", input_type=Boolean(optional=True), prefix="--width-factor", doc=InputDocumentation(doc="Override total-width by directly setting the number of pixels per unit of thing displayed.")), ToolInput(tag="in_node_numbers", input_type=Boolean(optional=True), prefix="--node-numbers", doc=InputDocumentation(doc="Put the node numbers in where the bootstraps usually go.")), ToolInput(tag="in_gray_black", input_type=Boolean(optional=True), prefix="--gray-black", doc=InputDocumentation(doc="Use gray/black in place of red/blue to signify the sign of the coefficient for that edge.")), ToolInput(tag="in_min_width", input_type=Boolean(optional=True), prefix="--min-width", doc=InputDocumentation(doc="Specify the minimum width for a branch to be colored and thickened. Default is 1.")), ToolInput(tag="in_write_n", input_type=Boolean(optional=True), prefix="--write-n", doc=InputDocumentation(doc="The number of principal coordinates to write out (default is 5).")), ToolInput(tag="in_scale", input_type=Boolean(optional=True), prefix="--scale", doc=InputDocumentation(doc="Scale variances to one before performing principal components.")), ToolInput(tag="in_s_ymmv", input_type=Boolean(optional=True), prefix="--symmv", doc=InputDocumentation(doc="Use a complete eigendecomposition rather than power iteration.")), ToolInput(tag="in_kappa", input_type=Boolean(optional=True), prefix="--kappa", doc=InputDocumentation(doc="Specify the exponent for scaling between weighted and unweighted splitification. default: 1")), ToolInput(tag="in_rep_edges", input_type=Boolean(optional=True), prefix="--rep-edges", doc=InputDocumentation(doc="Cluster neighboring edges that have splitified euclidean distance less than the argument.")), ToolInput(tag="in_epsilon", input_type=Boolean(optional=True), prefix="--epsilon", doc=InputDocumentation(doc="The epsilon to use to determine if a split matrix's column is constant for filtering. default: 1e-05")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="Display this list of options")), ToolInput(tag="in_pc_a", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_place_files", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Guppy_Pca_V0_1_0().translate("wdl", allow_empty_container=True)

