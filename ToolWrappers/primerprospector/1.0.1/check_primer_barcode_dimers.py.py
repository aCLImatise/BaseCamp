from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, Directory, File

Check_Primer_Barcode_Dimers_Py_V0_1_0 = CommandToolBuilder(tool="check_primer_barcode_dimers.py", base_command=["check_primer_barcode_dimers.py"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print information during execution -- useful for\ndebugging [default: False]")), ToolInput(tag="in_annealing_temp", input_type=Int(optional=True), prefix="--annealing_temp", doc=InputDocumentation(doc="Specify an annealing temperature in degrees Celsius.\n[default: 50]")), ToolInput(tag="in_score_threshold", input_type=Float(optional=True), prefix="--score_threshold", doc=InputDocumentation(doc="Specify a score threshold for the Gibbs energy\ncalculation, below which a barcode/primer combination\nis flagged for potential secondary structure.\n[default: -10.0]")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output_dir", doc=InputDocumentation(doc="Specify output directory for barcode/primer secondary\nstructure summary and graphs. [default: .]")), ToolInput(tag="in_paired_end_barcodes", input_type=Boolean(optional=True), prefix="--paired_end_barcodes", doc=InputDocumentation(doc="If enabled, barcodes will be appended to both primer 1\nand primer 2.  [default: False]")), ToolInput(tag="in_suppress_graphs", input_type=Boolean(optional=True), prefix="--suppress_graphs", doc=InputDocumentation(doc="Suppress retention of output postscript graphs.\n[default: False]")), ToolInput(tag="in_barcodes", input_type=File(optional=True), prefix="--barcodes", doc=InputDocumentation(doc="Filepath of barcodes to score input primer(s) against.\n[REQUIRED]")), ToolInput(tag="in_primer_one", input_type=Int(optional=True), prefix="--primer1", doc=InputDocumentation(doc="Primer, written in 5' to 3', that is linked to\nbarcodes tested.  If linker sequence is present\nbetween primer and barcode, include it with this\nsequences. [REQUIRED]")), ToolInput(tag="in_primer_two", input_type=Int(optional=True), prefix="--primer2", doc=InputDocumentation(doc="Second primer, written in 5' to 3' orientation.  This\nprimer by default is not associated with any barcodes.\n[REQUIRED]")), ToolInput(tag="in_energy_parameters", input_type=File(optional=True), prefix="--energy_parameters", doc=InputDocumentation(doc="Specify energy parameters file for predicting\nsecondary structures.  A DNA parameters file,\ndna_DM.par, is found in the DNA_parameters folder of\nPrimer Prospector, and should be pointed to with this\nparameter.  If an incorrect file is used, the Vienna\nsoftware will use default parameters, which are for\nRNA folding, and could give misleading results.  The\nprovided DNA parameters file is a modified form of the\nDNA parameters from  David Mathews' RNAstructure\nprogram. [REQUIRED]\n"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Specify output directory for barcode/primer secondary\nstructure summary and graphs. [default: .]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Check_Primer_Barcode_Dimers_Py_V0_1_0().translate("wdl", allow_empty_container=True)

