!Command
command:
- sort_denovo_primers.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: "Print information during execution -- useful for\ndebugging [default:\
    \ False]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output_dir
  description: Output directory
  args: !SimpleFlagArg
    name: OUTPUT_DIR
- !Flag
  optional: true
  synonyms:
  - -p
  - --variable_pos_freq
  description: "Percentage at which a variable base is considered for\ndegenerate\
    \ primer design. [default: 0.2]"
  args: !SimpleFlagArg
    name: VARIABLE_POS_FREQ
- !Flag
  optional: true
  synonyms:
  - -k
  - --known_primers_filepath
  description: "Optional primers filepath to compare with the de novo\nprimers.  Comparisons\
    \ will be used to separate the de\nnovo primers into unique, partially overlapping,\
    \ or\noverlapping primers with the known primers supplied.\n[default: none]"
  args: !SimpleFlagArg
    name: KNOWN_PRIMERS_FILEPATH
- !Flag
  optional: true
  synonyms:
  - -S
  - --sort_method
  description: "Sorting method for reverse and forward primers output\nfiles, pass\
    \ either S, O, or P for [S]ensitivity,\n[O]verall shannon entropy, s[P]ecificity.[default:\
    \ S]"
  args: !SimpleFlagArg
    name: SORT_METHOD
- !Flag
  optional: true
  synonyms:
  - -P
  - --primer_name
  description: "Root name for primers in the formatted_primers.txt\noutput file. [default:\
    \ ]"
  args: !SimpleFlagArg
    name: PRIMER_NAME
- !Flag
  optional: true
  synonyms:
  - -m
  - --match_len
  description: "Number of base pairs in overlapping sequences to be\nconsidered as\
    \ a significant overlap. [default: 10]"
  args: !SimpleFlagArg
    name: MATCH_LEN
- !Flag
  optional: true
  synonyms:
  - -T
  - --truncate_len
  description: "Number of bases to truncate for the 3' end of the\nprimer comparison\
    \ to the universal primer set.\n[default: 10]"
  args: !SimpleFlagArg
    name: TRUNCATE_LEN
- !Flag
  optional: true
  synonyms:
  - -a
  - --amplicon_len
  description: "Generate primer pair output file that will yield\namplicons with an\
    \ estimated size within the given\nrange.  Requires that the standard alignment\
    \ option\n(-a) was used with generate_primers_denovo.py.  Pass\nthe min and max\
    \ amplicon size separated by a colon,\nfor example -a 250:500 [default: False]"
  args: !SimpleFlagArg
    name: AMPLICON_LEN
- !Flag
  optional: true
  synonyms:
  - -i
  - --hits_file
  description: "Conserved Xmers file, output file from\ngenerate_primers_denovo.py\
    \ module. [REQUIRED]\n"
  args: !SimpleFlagArg
    name: HITS_FILE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: sort_denovo_primers.py [options] {-i/--hits_file HITS_FILE}\n\n\
  [] indicates optional input (order unimportant)\n{} indicates required input (order\
  \ unimportant)\n\n\nThe purpose of this module is to analyze conserved sequence\
  \ hits file\nfrom generate_primers_denovo.py to determine if the upstream or downstream\n\
  sequences from the conserved 3' primer end are \nreasonably conserved and suitable\
  \ for use in designing primers.\n\nThis module uses the sequences given in the hits\
  \ file to calculate\nthe shannon entropies for each position in the primers.  The\
  \ output\nfrom this module will contain the overall consensus sequence for each\n\
  potential primer (going upstream or downstream), a degenerate \nIUPAC sequence that\
  \ considers all bases found in each position, a \nfiltered degenerate IUPAC sequence\
  \ that does not consider bases whose\npercentage is under a specified value, and\
  \ the shannon entropy scores for\nthe overall sequences.\n\nNote-the non-filtered\
  \ IUPAC sequence output will contain a \".\" for positions\nthat contain a \"-\"\
  \ character (this results from filling in gap characters at\nunknown bases that\
  \ exceed the beginning or end of a sequence in the \ngenerate_primers_denovo.py\
  \ module).\n\nFollowing this initial analysis, the primers are then sorted into\
  \ a summary\nfile containing information about each prospective primer and a primer\
  \ file \nthat is formatted for use with the analyze_primers.py module.  \nThe primers\
  \ can be sorted according to sensitivity (greatest to least),\nspecificity (most\
  \ to least), or shannon entropy of the overall primer.\n\nFinally, a list of known\
  \ primers can be passed via the -k option to \ncompare to the *de novo* primers\
  \ generated by generate_primers_denovo.py.\nThe *de novo* primers are compared to\
  \ the primers passed, and flags any\nprimers that overlap (considering matching\
  \ degenerate characters as well).\nThe 'primers_overlap.txt' file contains information\
  \ about the \noverlapping primers for the entire primer set.  This file contains\
  \ a section\nshowing primers that have a 'match' to the supplied primers, meaning\
  \ that the\nprimers overlap and match at the 3' end.  An 'overlap' section shows\
  \ details \nabout primers that overlap with the given primers but do not match at\
  \ the \n3' end.  Finally, a 'unique' primers section shows details about primers\
  \ that\ndo not overlap with the supplied primer set.\n\nThese formatted primer files\
  \ are in the following format:\nprimer_id <tab> primer sequence (5'->3')\nAny comments\
  \ are preceeded by the pound (#) symbol. \nIf known primers are passed with the\
  \ -k parameter, they need to be in this\nformat as well.\n\nIf a standard alignment\
  \ was used to record indices in the \ngenerate_primers_denovo.py module (-a option),\
  \ this module will detect the \npresence of the standard aligned indices.  If absent,\
  \ the primers' numeric \nnames will be based on the initial unaligned index of the\
  \ sequence they \nwere found in.\n\n\n\nExample usage: \nPrint help message and\
  \ exit\n sort_denovo_primers.py -h\n\nStandard Example usage: \n sort_denovo_primers.py\
  \ [options] {-i input_primer_hits_filepath [required] -o output_directory [required]}\n\
  \nSort prospective primers with default settings: \n sort_denovo_primers.py -i conserved_site_hits.txt\
  \ -o denovo_primers/\n\nSort the same primers, increase degeneracy allowed (include\
  \ nucleotides that occur as little as 10% of the time), test primers against primers\
  \ from the literature (known_primers.txt), and sort according to specificity: \n\
  \ sort_denovo_primers.py -i conserved_sites_hits.txt -o denovo_primers/ -p 0.10\
  \ -k known_primers.txt -S P\n\nOptions:\n  --version             show program's\
  \ version number and exit\n  -h, --help            show this help message and exit\n\
  \  -v, --verbose         Print information during execution -- useful for\n    \
  \                    debugging [default: False]\n  -o OUTPUT_DIR, --output_dir=OUTPUT_DIR\n\
  \                        Output directory\n  -p VARIABLE_POS_FREQ, --variable_pos_freq=VARIABLE_POS_FREQ\n\
  \                        Percentage at which a variable base is considered for\n\
  \                        degenerate primer design. [default: 0.2]\n  -k KNOWN_PRIMERS_FILEPATH,\
  \ --known_primers_filepath=KNOWN_PRIMERS_FILEPATH\n                        Optional\
  \ primers filepath to compare with the de novo\n                        primers.\
  \  Comparisons will be used to separate the de\n                        novo primers\
  \ into unique, partially overlapping, or\n                        overlapping primers\
  \ with the known primers supplied.\n                        [default: none]\n  -S\
  \ SORT_METHOD, --sort_method=SORT_METHOD\n                        Sorting method\
  \ for reverse and forward primers output\n                        files, pass either\
  \ S, O, or P for [S]ensitivity,\n                        [O]verall shannon entropy,\
  \ s[P]ecificity.[default: S]\n  -P PRIMER_NAME, --primer_name=PRIMER_NAME\n    \
  \                    Root name for primers in the formatted_primers.txt\n      \
  \                  output file. [default: ]\n  -m MATCH_LEN, --match_len=MATCH_LEN\n\
  \                        Number of base pairs in overlapping sequences to be\n \
  \                       considered as a significant overlap. [default: 10]\n  -T\
  \ TRUNCATE_LEN, --truncate_len=TRUNCATE_LEN\n                        Number of bases\
  \ to truncate for the 3' end of the\n                        primer comparison to\
  \ the universal primer set.\n                        [default: 10]\n  -a AMPLICON_LEN,\
  \ --amplicon_len=AMPLICON_LEN\n                        Generate primer pair output\
  \ file that will yield\n                        amplicons with an estimated size\
  \ within the given\n                        range.  Requires that the standard alignment\
  \ option\n                        (-a) was used with generate_primers_denovo.py.\
  \  Pass\n                        the min and max amplicon size separated by a colon,\n\
  \                        for example -a 250:500 [default: False]\n\n  REQUIRED options:\n\
  \    The following options must be provided under all circumstances.\n\n    -i HITS_FILE,\
  \ --hits_file=HITS_FILE\n                        Conserved Xmers file, output file\
  \ from\n                        generate_primers_denovo.py module. [REQUIRED]\n"
generated_using:
- --help
docker_image:
