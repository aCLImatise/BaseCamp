from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int

Aragorn_V0_1_0 = CommandToolBuilder(tool="aragorn", base_command=["aragorn"], inputs=[ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="-fasta", doc=InputDocumentation(doc="<filename>")), ToolInput(tag="in_search_tmrna_genes", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Search for tmRNA genes.")), ToolInput(tag="in_search_trna_genesby", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Search for tRNA genes.\nBy default, all are detected. If one of\n-m or -t is specified, then the other\nis not detected unless specified as well.")), ToolInput(tag="in_mt", input_type=Boolean(optional=True), prefix="-mt", doc=InputDocumentation(doc="Search for Metazoan mitochondrial tRNA genes.\ntRNA genes with introns not detected. -i,-sr switchs\nignored. Composite Metazoan mitochondrial\ngenetic code used.")), ToolInput(tag="in_mtm_am", input_type=Boolean(optional=True), prefix="-mtmam", doc=InputDocumentation(doc="Search for Mammalian mitochondrial tRNA\ngenes. -i switch ignored. -tv switch set.\nMammalian mitochondrial genetic code used.")), ToolInput(tag="in_mtx", input_type=Boolean(optional=True), prefix="-mtx", doc=InputDocumentation(doc="Same as -mt but low scoring tRNA genes are\nnot reported.")), ToolInput(tag="in_mtd", input_type=Boolean(optional=True), prefix="-mtd", doc=InputDocumentation(doc="Overlapping metazoan mitochondrial tRNA genes\non opposite strands are reported.")), ToolInput(tag="in_gc_std", input_type=Boolean(optional=True), prefix="-gcstd", doc=InputDocumentation(doc="Use standard genetic code.")), ToolInput(tag="in_gc_met", input_type=Boolean(optional=True), prefix="-gcmet", doc=InputDocumentation(doc="Use composite Metazoan mitochondrial genetic code.")), ToolInput(tag="in_gc_vert", input_type=Boolean(optional=True), prefix="-gcvert", doc=InputDocumentation(doc="Use Vertebrate mitochondrial genetic code.")), ToolInput(tag="in_gc_invert", input_type=Boolean(optional=True), prefix="-gcinvert", doc=InputDocumentation(doc="Use Invertebrate mitochondrial genetic code.")), ToolInput(tag="in_gc_yeast", input_type=Boolean(optional=True), prefix="-gcyeast", doc=InputDocumentation(doc="Use Yeast mitochondrial genetic code.")), ToolInput(tag="in_gc_prot", input_type=Boolean(optional=True), prefix="-gcprot", doc=InputDocumentation(doc="Use Mold/Protozoan/Coelenterate mitochondrial genetic code.")), ToolInput(tag="in_gc_ciliate", input_type=Boolean(optional=True), prefix="-gcciliate", doc=InputDocumentation(doc="Use Ciliate genetic code.")), ToolInput(tag="in_gc_flatworm", input_type=Boolean(optional=True), prefix="-gcflatworm", doc=InputDocumentation(doc="Use Echinoderm/Flatworm mitochondrial genetic code")), ToolInput(tag="in_gce_up_lot", input_type=Boolean(optional=True), prefix="-gceuplot", doc=InputDocumentation(doc="Use Euplotid genetic code.")), ToolInput(tag="in_gcb_act", input_type=Boolean(optional=True), prefix="-gcbact", doc=InputDocumentation(doc="Use Bacterial/Plant chloroplast genetic code.")), ToolInput(tag="in_gc_alt_yeast", input_type=Boolean(optional=True), prefix="-gcaltyeast", doc=InputDocumentation(doc="Use alternative Yeast genetic code.")), ToolInput(tag="in_gca_scid", input_type=Boolean(optional=True), prefix="-gcascid", doc=InputDocumentation(doc="Use Ascidian mitochondrial genetic code.")), ToolInput(tag="in_gc_alt_flat", input_type=Boolean(optional=True), prefix="-gcaltflat", doc=InputDocumentation(doc="Use alternative Flatworm mitochondrial genetic code.")), ToolInput(tag="in_gcb_lep", input_type=Boolean(optional=True), prefix="-gcblep", doc=InputDocumentation(doc="Use Blepharisma genetic code.")), ToolInput(tag="in_gc_chloro_ph", input_type=Boolean(optional=True), prefix="-gcchloroph", doc=InputDocumentation(doc="Use Chlorophycean mitochondrial genetic code.")), ToolInput(tag="in_gc_trem", input_type=Boolean(optional=True), prefix="-gctrem", doc=InputDocumentation(doc="Use Trematode mitochondrial genetic code.")), ToolInput(tag="in_gcs_cen", input_type=Boolean(optional=True), prefix="-gcscen", doc=InputDocumentation(doc="Use Scenedesmus obliquus mitochondrial genetic code.")), ToolInput(tag="in_gc_thr_aust", input_type=Boolean(optional=True), prefix="-gcthraust", doc=InputDocumentation(doc="Use Thraustochytrium mitochondrial genetic code.")), ToolInput(tag="in_gcp_tero", input_type=Boolean(optional=True), prefix="-gcptero", doc=InputDocumentation(doc="Use Pterobranchia mitochondrial genetic code.")), ToolInput(tag="in_gcg_rac", input_type=Boolean(optional=True), prefix="-gcgrac", doc=InputDocumentation(doc="Use Gracilibacteria genetic code.\nIndividual modifications can be appended using")), ToolInput(tag="in_circulartopology_search_wraps", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Assume that each sequence has a circular\ntopology. Search wraps around each end.\nDefault setting.")), ToolInput(tag="in_assume_lineartopology_search", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Assume that each sequence has a linear\ntopology. Search does not wrap.")), ToolInput(tag="in_double_search_strands", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Double. Search both strands of each\nsequence. Default setting.")), ToolInput(tag="in_single_search_strand", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="or -s+    Single. Do not search the complementary\n(antisense) strand of each sequence.")), ToolInput(tag="in_sc", input_type=String(optional=True), prefix="-sc", doc=InputDocumentation(doc="Single complementary. Do not search the sense\nstrand of each sequence.")), ToolInput(tag="in_io", input_type=Boolean(optional=True), prefix="-io", doc=InputDocumentation(doc="Same as -i, but allow tRNA genes with long\nintrons to overlap shorter tRNA genes.")), ToolInput(tag="in_if", input_type=Boolean(optional=True), prefix="-if", doc=InputDocumentation(doc="Same as -i, but fix intron between positions\n37 and 38 on C-loop (one base after anticodon).")), ToolInput(tag="in_if_o", input_type=Boolean(optional=True), prefix="-ifo", doc=InputDocumentation(doc="Same as -if and -io combined.")), ToolInput(tag="in_ir", input_type=Boolean(optional=True), prefix="-ir", doc=InputDocumentation(doc="Same as -i, but report tRNA genes with minimum\nlength <min> bases rather than search for\ntRNA genes with minimum length <min> bases.\nWith this switch, <min> acts as an output filter,\nminimum intron length for searching is still 0 bases.")), ToolInput(tag="in_c_seven", input_type=Boolean(optional=True), prefix="-c7", doc=InputDocumentation(doc="Search for tRNA genes with 7 base C-loops only.")), ToolInput(tag="in_ss", input_type=Boolean(optional=True), prefix="-ss", doc=InputDocumentation(doc="Use the stricter canonical 1-2 bp spacer1 and\n1 bp spacer2. Ignored if -mt set. Default is to\nallow 3 bp spacer1 and 0-2 bp spacer2, which may\ndegrade selectivity.")), ToolInput(tag="in_display_base_sequence", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="Display 4-base sequence on 3' end of astem\nregardless of predicted amino-acyl acceptor length.")), ToolInput(tag="in_jr", input_type=Boolean(optional=True), prefix="-jr", doc=InputDocumentation(doc="Allow some divergence of 3' amino-acyl acceptor\nsequence from NCCA.")), ToolInput(tag="in_jr_four", input_type=Boolean(optional=True), prefix="-jr4", doc=InputDocumentation(doc="Allow some divergence of 3' amino-acyl acceptor\nsequence from NCCA, and display 4 bases.")), ToolInput(tag="in_print_score_reported", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Print out score for each reported gene.")), ToolInput(tag="in_f_on", input_type=Boolean(optional=True), prefix="-fon", doc=InputDocumentation(doc="Same as -fo, with sequence and gene numbering in header.")), ToolInput(tag="in_fos", input_type=Boolean(optional=True), prefix="-fos", doc=InputDocumentation(doc="Same as -fo, with no spaces in header.")), ToolInput(tag="in_fons", input_type=Boolean(optional=True), prefix="-fons", doc=InputDocumentation(doc="Same as -fo, with sequence and gene numbering, but no spaces.\nas (<species>|<species>) instead of ???")), ToolInput(tag="in_verbose_prints_information", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbose. Prints out information during\nsearch to STDERR.")), ToolInput(tag="in_print_trna_domain", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Print out tRNA domain for tmRNA genes.")), ToolInput(tag="in_a_seven", input_type=Boolean(optional=True), prefix="-a7", doc=InputDocumentation(doc="Restrict tRNA astem length to a maximum of 7 bases")), ToolInput(tag="in_aa", input_type=Boolean(optional=True), prefix="-aa", doc=InputDocumentation(doc="Display message if predicted iso-acceptor species\ndoes not match species in sequence name (if present).")), ToolInput(tag="in_amt", input_type=Boolean(optional=True), prefix="-amt", doc=InputDocumentation(doc="<num>     Change annotated tRNA length mismatch reporting threshold to\n<num> bases when searching GENBANK files. Default is 10 bases.")), ToolInput(tag="in_a_mm", input_type=Boolean(optional=True), prefix="-amm", doc=InputDocumentation(doc="<num>     Change annotated tmRNA length mismatch reporting threshold to\n<num> bases when searching GENBANK files. Default is 30 bases.")), ToolInput(tag="in_print_configuration_line", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Dont print configuration line (which switches\nand files were used).")), ToolInput(tag="in_rn", input_type=Boolean(optional=True), prefix="-rn", doc=InputDocumentation(doc="Repeat sequence name before summary information.")), ToolInput(tag="in_print_batch_mode", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Print out in batch mode.")), ToolInput(tag="in_wa", input_type=Boolean(optional=True), prefix="-wa", doc=InputDocumentation(doc="Same as -w, but for 6 or 8 base anticodon\nloops, print possible iso-acceptor species\nFor tRNA genes, batch mode output is in the form:\nSequence name\nN genes found\n1 tRNA-<species> [locus 1] <Apos> (nnn)\ni(<intron position>,<intron length>)\n.\n.\nN tRNA-<species> [Locus N] <Apos> (nnn)\ni(<intron position>,<intron length>)\nN is the number of genes found\n<species> is the tRNA iso-acceptor species\n<Apos> is the tRNA anticodon relative position\n(nnn) is the tRNA anticodon base triplet\ni means the tRNA gene has a C-loop intron\nFor tmRNA genes, output is in the form:\nn tmRNA(p) [Locus n] <tag offset>,<tag end offset>\n<tag peptide>\np means the tmRNA gene is permuted")), ToolInput(tag="in_w_unix", input_type=Boolean(optional=True), prefix="-wunix", doc=InputDocumentation(doc="Get around problem with some windows gcc compilers\n(found so far in Strawberry Perl and Active Perl)\nwhen reading Unix files.\nExecution speed may be slower for large files.\nExecution speed will be a lot slower for files\nwith many small sequences.\n")), ToolInput(tag="in_if_ro", input_type=Boolean(optional=True), prefix="-ifro", doc=InputDocumentation(doc="")), ToolInput(tag="in_min", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Aragorn_V0_1_0().translate("wdl", allow_empty_container=True)

