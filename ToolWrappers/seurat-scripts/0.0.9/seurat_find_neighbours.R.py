from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int, Float

Seurat_Find_Neighbours_R_V0_1_0 = CommandToolBuilder(tool="seurat_find_neighbours.R", base_command=["seurat-find-neighbours.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R matrix object may be found.")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the input format to read.")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the output format.")), ToolInput(tag="in_distance_matrix", input_type=Boolean(optional=True), prefix="--distance-matrix", doc=InputDocumentation(doc="Boolean value of whether the provided matrix is a distance matrix; note, for objects of class dist, this parameter will be set automatically.")), ToolInput(tag="in_k_param", input_type=String(optional=True), prefix="--k-param", doc=InputDocumentation(doc="Defines k for the k-nearest neighbor algorithm")), ToolInput(tag="in_compute_snn", input_type=Boolean(optional=True), prefix="--compute-snn", doc=InputDocumentation(doc="Also compute the shared nearest neighbor graph")), ToolInput(tag="in_prune_snn", input_type=Int(optional=True), prefix="--prune-snn", doc=InputDocumentation(doc="Sets the cutoff for acceptable Jaccard index when computing the neighborhood overlap for the SNN construction. Any edges with values less than or equal to this will be set to 0 and removed from the SNN graph. Essentially sets the strigency of pruning (0 --- no pruning, 1 --- prune everything).")), ToolInput(tag="in_nn_method", input_type=String(optional=True), prefix="--nn-method", doc=InputDocumentation(doc="Method for nearest neighbor finding. Options include: rann (default), annoy")), ToolInput(tag="in_output_object_file", input_type=File(optional=True), prefix="--output-object-file", doc=InputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'")), ToolInput(tag="in_annoy_metric", input_type=String(optional=True), prefix="--annoy-metric", doc=InputDocumentation(doc="Distance metric for annoy. Options include: euclidean (default), cosine, manhattan, and hamming")), ToolInput(tag="in_graph_name", input_type=String(optional=True), prefix="--graph-name", doc=InputDocumentation(doc="Name of graph to use for the clustering algorithm.")), ToolInput(tag="in_nn_eps", input_type=Float(optional=True), prefix="--nn-eps", doc=InputDocumentation(doc="Error bound when performing nearest neighbor seach using RANN; default of 0.0 implies exact nearest neighbor search")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Maximal number of iterations per random start")), ToolInput(tag="in_force_recalc", input_type=Boolean(optional=True), prefix="--force-recalc", doc=InputDocumentation(doc="Force recalculation of SNN")), ToolInput(tag="in_features", input_type=File(optional=True), prefix="--features", doc=InputDocumentation(doc="Comma-separated list of genes to use for building SNN. Alternatively, text file with one gene per line.")), ToolInput(tag="in_reduction", input_type=String(optional=True), prefix="--reduction", doc=InputDocumentation(doc="Reduction to use as input for building the SNN")), ToolInput(tag="in_dims", input_type=Int(optional=True), prefix="--dims", doc=InputDocumentation(doc="Dimensions of reduction to use as input. A comma-separated list of the dimensions to use in construction of the SNN graph (e.g. To use the first 5 PCs, pass 1,2,3,4,5).")), ToolInput(tag="in_assay", input_type=String(optional=True), prefix="--assay", doc=InputDocumentation(doc="Assay to use in construction of SNN")), ToolInput(tag="in_do_plot", input_type=Boolean(optional=True), prefix="--do-plot", doc=InputDocumentation(doc="Plot SNN graph on tSNE coordinates"))], outputs=[ToolOutput(tag="out_output_object_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_object_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'"))], container="quay.io/biocontainers/seurat-scripts:0.0.9--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seurat_Find_Neighbours_R_V0_1_0().translate("wdl")

