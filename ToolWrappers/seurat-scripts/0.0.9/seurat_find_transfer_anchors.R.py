from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Seurat_Find_Transfer_Anchors_R_V0_1_0 = CommandToolBuilder(tool="seurat_find_transfer_anchors.R", base_command=["seurat-find-transfer-anchors.R"], inputs=[ToolInput(tag="in_query_file", input_type=File(optional=True), prefix="--query-file", doc=InputDocumentation(doc="File containing seurat object to use as the query.")), ToolInput(tag="in_query_format", input_type=String(optional=True), prefix="--query-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the output format.")), ToolInput(tag="in_reference_file", input_type=File(optional=True), prefix="--reference-file", doc=InputDocumentation(doc="File containing seurat object to use as the reference.")), ToolInput(tag="in_reference_format", input_type=String(optional=True), prefix="--reference-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the output format.")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="File name in which to store serialized R matrix object.")), ToolInput(tag="in_normalization_method", input_type=String(optional=True), prefix="--normalization-method", doc=InputDocumentation(doc="Name of normalization method used: LogNormalize or SCT.")), ToolInput(tag="in_reference_assay", input_type=String(optional=True), prefix="--reference-assay", doc=InputDocumentation(doc="Assay to use from reference.")), ToolInput(tag="in_query_assay", input_type=String(optional=True), prefix="--query-assay", doc=InputDocumentation(doc="Assay to use from query.")), ToolInput(tag="in_reduction", input_type=String(optional=True), prefix="--reduction", doc=InputDocumentation(doc="Dimensional reduction to perform when finding anchors.")), ToolInput(tag="in_project_query", input_type=Boolean(optional=True), prefix="--project-query", doc=InputDocumentation(doc="Project the PCA from the query dataset onto the reference. Use only in rare cases.")), ToolInput(tag="in_l_two_norm", input_type=Boolean(optional=True), prefix="--l2-norm", doc=InputDocumentation(doc="Execute a l2 normalization on the query.")), ToolInput(tag="in_features", input_type=String(optional=True), prefix="--features", doc=InputDocumentation(doc="Features to use for dimensional reductionFeatures to use for dimensional reduction.")), ToolInput(tag="in_npcs", input_type=Int(optional=True), prefix="--npcs", doc=InputDocumentation(doc="Number of PCs to compute on reference. If null, then use an existing PCA structure in the reference object.")), ToolInput(tag="in_dims", input_type=String(optional=True), prefix="--dims", doc=InputDocumentation(doc="Which dimensions to use from the reduction to specify the neighbor search space.")), ToolInput(tag="in_k_anchor", input_type=String(optional=True), prefix="--k-anchor", doc=InputDocumentation(doc="How many neighbors (k) to use when picking anchors.")), ToolInput(tag="in_k_filter", input_type=String(optional=True), prefix="--k-filter", doc=InputDocumentation(doc="How many neighbors (k) to use when filtering anchors.")), ToolInput(tag="in_k_score", input_type=String(optional=True), prefix="--k-score", doc=InputDocumentation(doc="How many neighbors (k) to use when scoring anchors.")), ToolInput(tag="in_max_features", input_type=Int(optional=True), prefix="--max-features", doc=InputDocumentation(doc="The maximum number of features to use when specifying the neighborhood search space in the anchor filtering.")), ToolInput(tag="in_nn_method", input_type=String(optional=True), prefix="--nn-method", doc=InputDocumentation(doc="Method for nearest neighbor finding. Options include: rann, annoy.")), ToolInput(tag="in_eps", input_type=String(optional=True), prefix="--eps", doc=InputDocumentation(doc="Error bound on the neighbor finding algorithm (from RANN).")), ToolInput(tag="in_approx_pc_a", input_type=Boolean(optional=True), prefix="--approx-pca", doc=InputDocumentation(doc="Use truncated singular value decomposition to approximate PCA.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print progress bars and output."))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized R matrix object."))], container="quay.io/biocontainers/seurat-scripts:0.0.9--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seurat_Find_Transfer_Anchors_R_V0_1_0().translate("wdl")

