from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int

Seurat_Dim_Plot_R_V0_1_0 = CommandToolBuilder(tool="seurat_dim_plot.R", base_command=["seurat-dim-plot.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R matrix object may be found.")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the input format to read.")), ToolInput(tag="in_reduction_use", input_type=String(optional=True), prefix="--reduction-use", doc=InputDocumentation(doc="Which dimensionality reduction to use. Default is 'pca', can also be 'tsne', or 'ica', assuming these are precomputed.")), ToolInput(tag="in_dim_one", input_type=Int(optional=True), prefix="--dim-1", doc=InputDocumentation(doc="Dimension for x-axis (default 1)")), ToolInput(tag="in_dim_two", input_type=Int(optional=True), prefix="--dim-2", doc=InputDocumentation(doc="Dimension for y-axis (default 2)")), ToolInput(tag="in_cells_use", input_type=File(optional=True), prefix="--cells-use", doc=InputDocumentation(doc="File to be used to derive a vector of cells to plot (default is all cells).")), ToolInput(tag="in_pt_size", input_type=Int(optional=True), prefix="--pt-size", doc=InputDocumentation(doc="Adjust point size for plotting")), ToolInput(tag="in_label_size", input_type=Int(optional=True), prefix="--label-size", doc=InputDocumentation(doc="Sets size of labels.")), ToolInput(tag="in_do_label", input_type=String(optional=True), prefix="--do-label", doc=InputDocumentation(doc="Whether to label the clusters.")), ToolInput(tag="in_group_by", input_type=String(optional=True), prefix="--group-by", doc=InputDocumentation(doc="Group (color) cells in different ways (for example, orig.ident).")), ToolInput(tag="in_plot_title", input_type=String(optional=True), prefix="--plot-title", doc=InputDocumentation(doc="Title for plot.")), ToolInput(tag="in_do_bare", input_type=String(optional=True), prefix="--do-bare", doc=InputDocumentation(doc="Do only minimal formatting (default : FALSE)")), ToolInput(tag="in_cols_use", input_type=String(optional=True), prefix="--cols-use", doc=InputDocumentation(doc="Comma-separated list of colors, each color corresponds to an identity class. By default, ggplot assigns colors.")), ToolInput(tag="in_pt_shape", input_type=String(optional=True), prefix="--pt-shape", doc=InputDocumentation(doc="If NULL, all points are circles (default). You can specify any cell attribute (that can be pulled with FetchData) allowing for both different colors and different shapes on cells.")), ToolInput(tag="in_coord_fixed", input_type=String(optional=True), prefix="--coord-fixed", doc=InputDocumentation(doc="Use a fixed scale coordinate system (for spatial coordinates). Default is FALSE")), ToolInput(tag="in_no_axes", input_type=String(optional=True), prefix="--no-axes", doc=InputDocumentation(doc="Setting to TRUE will remove the axes.")), ToolInput(tag="in_dark_theme", input_type=String(optional=True), prefix="--dark-theme", doc=InputDocumentation(doc="Use a dark theme for the plot.")), ToolInput(tag="in_plot_order", input_type=String(optional=True), prefix="--plot-order", doc=InputDocumentation(doc="Comma-separated string specifying the order of plotting for the idents (clusters). This can be useful for crowded plots if points of interest are being buried. Provide either a full list of valid idents or a subset to be plotted last (on top)..")), ToolInput(tag="in_png_width", input_type=String(optional=True), prefix="--png-width", doc=InputDocumentation(doc="Width of png (px).")), ToolInput(tag="in_png_height", input_type=File(optional=True), prefix="--png-height", doc=InputDocumentation(doc="Height of png file (px).")), ToolInput(tag="in_output_image_file", input_type=File(optional=True), prefix="--output-image-file", doc=InputDocumentation(doc="File name in which to save the PCA image"))], outputs=[ToolOutput(tag="out_output_image_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_image_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to save the PCA image"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seurat_Dim_Plot_R_V0_1_0().translate("wdl", allow_empty_container=True)

