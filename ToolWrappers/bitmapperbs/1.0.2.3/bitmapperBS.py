from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Bitmapperbs_V0_1_0 = CommandToolBuilder(tool="bitmapperBS", base_command=["bitmapperBS"], inputs=[ToolInput(tag="in_index", input_type=Boolean(optional=True), prefix="--index", doc=InputDocumentation(doc="[file]         Generate an index from the specified fasta file.")), ToolInput(tag="in_index_folder", input_type=Boolean(optional=True), prefix="--index_folder", doc=InputDocumentation(doc="[folder]Set the folder that stores the genome indexes. If this option is not set,\nthe indexes would be stores in the same folder of genome (input fasta file).")), ToolInput(tag="in_search", input_type=Boolean(optional=True), prefix="--search", doc=InputDocumentation(doc="[file/folder] Search in the specified genome. If the indexes of this genome are built without '--index_folder',\nplease provide the path to the fasta file of genome (index files should be in the same folder).\nOtherwise please provide the path to the index folder (set by '--index_folder' during indexing).")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc="Set bitmapperBS in fast mode (default). This option is only available in paired-end mode.")), ToolInput(tag="in_sensitive", input_type=Boolean(optional=True), prefix="--sensitive", doc=InputDocumentation(doc="Set bitmapperBS in sensitive mode. This option is only available in paired-end mode.")), ToolInput(tag="in_seq", input_type=Boolean(optional=True), prefix="--seq", doc=InputDocumentation(doc="[file]           Input sequences in fastq/fastq.gz format [file]. This option is used\nfor single-end reads.")), ToolInput(tag="in_seq_one", input_type=Boolean(optional=True), prefix="--seq1", doc=InputDocumentation(doc="[file]          Input sequences in fastq/fastq.gz format [file] (First file).\nUse this option to indicate the first file of\npaired-end reads.")), ToolInput(tag="in_seq_two", input_type=Boolean(optional=True), prefix="--seq2", doc=InputDocumentation(doc="[file]          Input sequences in fastq/fastq.gz format [file] (Second file).\nUse this option to indicate the second file of\npaired-end reads.")), ToolInput(tag="in_output_mapped_sequences", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[file]              Output of the mapped sequences in SAM or BAM format. The default is 'stdout' (standard output) in SAM format.")), ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="--sam", doc=InputDocumentation(doc="Output mapping results in SAM format (default).")), ToolInput(tag="in_bam", input_type=Boolean(optional=True), prefix="--bam", doc=InputDocumentation(doc="Output mapping results in BAM format.")), ToolInput(tag="in_me_thy_out", input_type=Boolean(optional=True), prefix="--methy_out", doc=InputDocumentation(doc="Output the intermediate methylation result files, instead of SAM or BAM files.")), ToolInput(tag="in_set_distance_rate", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[float]             Set the edit distance rate of read length. This value is between 0 and 1 (default: 0.08 = 8% of read length).")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="--min", doc=InputDocumentation(doc="[int]            Min observed template length between a pair of end sequences (default: 0).")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc="[int]            Max observed template length between a pair of end sequences (default: 500).")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="[int]    Set the number of CPU threads (default: 1).")), ToolInput(tag="in_pb_at", input_type=Boolean(optional=True), prefix="--pbat", doc=InputDocumentation(doc="Mapping the BS-seq from pbat protocol.")), ToolInput(tag="in_unmapped_out", input_type=Boolean(optional=True), prefix="--unmapped_out", doc=InputDocumentation(doc="Report unmapped reads.")), ToolInput(tag="in_ambiguous_out", input_type=Boolean(optional=True), prefix="--ambiguous_out", doc=InputDocumentation(doc="Random report one of hit of each ambiguous mapped read.")), ToolInput(tag="in_mapstats", input_type=File(optional=True), prefix="--mapstats", doc=InputDocumentation(doc="[file]      Output the statistical information of read alignment into file.")), ToolInput(tag="in_phred_three_three", input_type=Boolean(optional=True), prefix="--phred33", doc=InputDocumentation(doc="Input read qualities are encoded by Phred33 (default).")), ToolInput(tag="in_phred_six_four", input_type=Boolean(optional=True), prefix="--phred64", doc=InputDocumentation(doc="Input read qualities are encoded by Phred64.")), ToolInput(tag="in_mp_max", input_type=Boolean(optional=True), prefix="--mp_max", doc=InputDocumentation(doc="[INT]         Maximum mismatch penalty (default: 6).")), ToolInput(tag="in_mp_min", input_type=Boolean(optional=True), prefix="--mp_min", doc=InputDocumentation(doc="[INT]         Minimum mismatch penalty (default: 2).")), ToolInput(tag="in_np", input_type=Boolean(optional=True), prefix="--np", doc=InputDocumentation(doc="[INT]             Ambiguous character (e.g., N) penalty (default: 1).")), ToolInput(tag="in_gap_open", input_type=Boolean(optional=True), prefix="--gap_open", doc=InputDocumentation(doc="[INT]       Gap open penalty (default: 5).")), ToolInput(tag="in_gap_extension", input_type=Boolean(optional=True), prefix="--gap_extension", doc=InputDocumentation(doc="[INT]  Gap extension penalty (default: 3)."))], outputs=[ToolOutput(tag="out_output_mapped_sequences", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_mapped_sequences", type_hint=File()), doc=OutputDocumentation(doc="[file]              Output of the mapped sequences in SAM or BAM format. The default is 'stdout' (standard output) in SAM format.")), ToolOutput(tag="out_mapstats", output_type=File(optional=True), selector=InputSelector(input_to_select="in_mapstats", type_hint=File()), doc=OutputDocumentation(doc="[file]      Output the statistical information of read alignment into file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bitmapperbs_V0_1_0().translate("wdl", allow_empty_container=True)

