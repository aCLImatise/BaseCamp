version 1.0

task MethylpyDMRfind {
  input {
    Int? output_prefix
    Array[String] all_c_files
    Array[String] samples
    Array[String] chrom_s
    Array[String] mc_type
    Int? num_procs
    Int? min_cov
    Int? dmr_max_dist
    Float? sig_cut_off
    Int? num_sims
    Int? min_tests
    Int? min_num_dms
    Array[String] sample_category
    Int? mc_max_dist
    Float? resid_cut_off
    Boolean? keep_temp_files
    Int? min_cluster
    Int? seed
  }
  command <<<
    methylpy DMRfind \
      ~{if defined(output_prefix) then ("--output-prefix " +  '"' + output_prefix + '"') else ""} \
      ~{if defined(all_c_files) then ("--allc-files " +  '"' + all_c_files + '"') else ""} \
      ~{if defined(samples) then ("--samples " +  '"' + samples + '"') else ""} \
      ~{if defined(chrom_s) then ("--chroms " +  '"' + chrom_s + '"') else ""} \
      ~{if defined(mc_type) then ("--mc-type " +  '"' + mc_type + '"') else ""} \
      ~{if defined(num_procs) then ("--num-procs " +  '"' + num_procs + '"') else ""} \
      ~{if defined(min_cov) then ("--min-cov " +  '"' + min_cov + '"') else ""} \
      ~{if defined(dmr_max_dist) then ("--dmr-max-dist " +  '"' + dmr_max_dist + '"') else ""} \
      ~{if defined(sig_cut_off) then ("--sig-cutoff " +  '"' + sig_cut_off + '"') else ""} \
      ~{if defined(num_sims) then ("--num-sims " +  '"' + num_sims + '"') else ""} \
      ~{if defined(min_tests) then ("--min-tests " +  '"' + min_tests + '"') else ""} \
      ~{if defined(min_num_dms) then ("--min-num-dms " +  '"' + min_num_dms + '"') else ""} \
      ~{if defined(sample_category) then ("--sample-category " +  '"' + sample_category + '"') else ""} \
      ~{if defined(mc_max_dist) then ("--mc-max-dist " +  '"' + mc_max_dist + '"') else ""} \
      ~{if defined(resid_cut_off) then ("--resid-cutoff " +  '"' + resid_cut_off + '"') else ""} \
      ~{if defined(keep_temp_files) then ("--keep-temp-files " +  '"' + keep_temp_files + '"') else ""} \
      ~{if defined(min_cluster) then ("--min-cluster " +  '"' + min_cluster + '"') else ""} \
      ~{if defined(seed) then ("--seed " +  '"' + seed + '"') else ""}
  >>>
  parameter_meta {
    output_prefix: "[--samples SAMPLES [SAMPLES ...]]\\n[--chroms CHROMS [CHROMS ...]]\\n[--mc-type MC_TYPE [MC_TYPE ...]]\\n[--num-procs NUM_PROCS] [--min-cov MIN_COV]\\n[--dmr-max-dist DMR_MAX_DIST]\\n[--sig-cutoff SIG_CUTOFF] [--num-sims NUM_SIMS]\\n[--min-tests MIN_TESTS] [--min-num-dms MIN_NUM_DMS]\\n[--sample-category SAMPLE_CATEGORY [SAMPLE_CATEGORY ...]]\\n[--mc-max-dist MC_MAX_DIST]\\n[--resid-cutoff RESID_CUTOFF]\\n[--keep-temp-files KEEP_TEMP_FILES]\\n[--min-cluster MIN_CLUSTER] [--seed SEED]"
    all_c_files: "List of allc files. (default: None)"
    samples: "List of space separated samples matching allc files.\\nBy default sample names will be inferred from allc\\nfilenames (default: None)"
    chrom_s: "Space separated listing of chromosomes where DMRs will\\nbe called. If not specified, DMRs will be called\\nacross the chromosomes/contigs that contained any data\\nin all allc files. (default: None)"
    mc_type: "List of space separated mc nucleotide contexts for\\nwhich you want to look for DMRs. These classifications\\nmay use the wildcards H (indicating anything but a G)\\nand N (indicating any nucleotide). (default: ['CGN'])"
    num_procs: "Number of processors you wish to use to parallelize\\nthis function (default: 1)"
    min_cov: "Minimum number of reads that must cover a site for it\\nto be considered. (default: 0)"
    dmr_max_dist: "Maximum distance two significant sites can be to be\\nincluded in the same block. (default: 250)"
    sig_cut_off: "Float indicating at what FDR you want to consider a\\nresult significant. (default: 0.01)"
    num_sims: "Number of permutation tests you would like to run to\\nestimate the p-values of the differential methylation\\ntests (default: 3000)"
    min_tests: "Minimum number of permuation tests you\\ would d like\\nto run for each mC (default: 100)"
    min_num_dms: "The minimum number of differentially methylated sites\\nthat a differentially methylated region needs to\\ncontain to be reported (default: 0)"
    sample_category: "A list of categories that each respective sample\\nbelongs to; the categories must begin at 0 and\\nincrease by 1 for each category added. ex: samples\\n[A,B,C] categories [0,1,2] or categories [0, 1, 0]\\n(default: False)"
    mc_max_dist: "Integer indicating the maximum distance two sites can\\nbe from one another for their methylation counts to be\\ncombined. This option helps with low coverage\\nexperiments where you may want to leverage the\\ncorrelation of methylation between sites to get more\\nstatistical power. (default: 0)"
    resid_cut_off: "Results will have to show deviations in the\\ncontingency table in the same direction as the rest of\\nthe window (default: 0.01)"
    keep_temp_files: "Boolean indicating that you would like to keep the\\nintermediate files generated by this function. This\\ncan be useful for debugging, but in general should be\\nleft False. (default: False)"
    min_cluster: "The minimum number of each sample category that must\\nbe present in every block that is output. (default: 2)"
    seed: "A seed to provide to the random number generator for\\npermutation testing. Only change this if you are\\ndebugging and want to make sure the permutation output\\nis consistent (default: -1)\\n"
  }
  output {
    File out_stdout = stdout()
  }
}