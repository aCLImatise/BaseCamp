from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Run_Galaxy_Workflow_Py_V0_1_0 = CommandToolBuilder(tool="run_galaxy_workflow.py", base_command=["run_galaxy_workflow.py"], inputs=[ToolInput(tag="in_conf", input_type=File(optional=True), prefix="--conf", doc=InputDocumentation(doc="A yaml file describing the galaxy credentials")), ToolInput(tag="in_galaxy_instance", input_type=String(optional=True), prefix="--galaxy-instance", doc=InputDocumentation(doc="Galaxy server instance name")), ToolInput(tag="in_yaml_inputs_path", input_type=File(optional=True), prefix="--yaml-inputs-path", doc=InputDocumentation(doc="Path to Yaml detailing inputs")), ToolInput(tag="in_output_dir", input_type=File(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Path to output directory")), ToolInput(tag="in_history", input_type=String(optional=True), prefix="--history", doc=InputDocumentation(doc="Name of the history to create")), ToolInput(tag="in_workflow", input_type=String(optional=True), prefix="--workflow", doc=InputDocumentation(doc="Workflow to run")), ToolInput(tag="in_parameters", input_type=File(optional=True), prefix="--parameters", doc=InputDocumentation(doc="parameters file, by default json")), ToolInput(tag="in_parameters_yaml", input_type=Boolean(optional=True), prefix="--parameters-yaml", doc=InputDocumentation(doc="read parameters file as yaml instead of json")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print debug information")), ToolInput(tag="in_allowed_errors", input_type=File(optional=True), prefix="--allowed-errors", doc=InputDocumentation(doc="Yaml file with allowed steps that can have errors.")), ToolInput(tag="in_state_file", input_type=File(optional=True), prefix="--state-file", doc=InputDocumentation(doc="Path to read and save the execution state file.")), ToolInput(tag="in_keep_histories", input_type=Boolean(optional=True), prefix="--keep-histories", doc=InputDocumentation(doc="Keeps histories created, they will be purged if not.")), ToolInput(tag="in_keep_workflow", input_type=Boolean(optional=True), prefix="--keep-workflow", doc=InputDocumentation(doc="Keeps workflow created, it will be purged if not.")), ToolInput(tag="in_publish", input_type=Boolean(optional=True), prefix="--publish", doc=InputDocumentation(doc="Keep result history and make it public/accesible.")), ToolInput(tag="in_accessible", input_type=Boolean(optional=True), prefix="--accessible", doc=InputDocumentation(doc="Keep result history and make it accessible via link\nonly.\n"))], outputs=[ToolOutput(tag="out_output_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Path to output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Galaxy_Workflow_Py_V0_1_0().translate("wdl", allow_empty_container=True)

