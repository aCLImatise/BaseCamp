version 1.0

task HicstuffView {
  input {
    Int? binning
    String? cmap
    Boolean? circular
    Boolean? despeckle
    Int? dpi
    File? frags
    Float? transform
    Int? max
    Int? min
    Int? n_mad
    Boolean? normalize
    File? name_where_stored
    String? region
    Int? trim
    String contact_map
    Int contact_map_two
  }
  command <<<
    hicstuff view \
      ~{contact_map} \
      ~{contact_map_two} \
      ~{if defined(binning) then ("--binning " +  '"' + binning + '"') else ""} \
      ~{if defined(cmap) then ("--cmap " +  '"' + cmap + '"') else ""} \
      ~{if (circular) then "--circular" else ""} \
      ~{if (despeckle) then "--despeckle" else ""} \
      ~{if defined(dpi) then ("--dpi " +  '"' + dpi + '"') else ""} \
      ~{if defined(frags) then ("--frags " +  '"' + frags + '"') else ""} \
      ~{if defined(transform) then ("--transform " +  '"' + transform + '"') else ""} \
      ~{if defined(max) then ("--max " +  '"' + max + '"') else ""} \
      ~{if defined(min) then ("--min " +  '"' + min + '"') else ""} \
      ~{if defined(n_mad) then ("--n-mad " +  '"' + n_mad + '"') else ""} \
      ~{if (normalize) then "--normalize" else ""} \
      ~{if defined(name_where_stored) then ("--output " +  '"' + name_where_stored + '"') else ""} \
      ~{if defined(region) then ("--region " +  '"' + region + '"') else ""} \
      ~{if defined(trim) then ("--trim " +  '"' + trim + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/hicstuff:2.3.2--py_0"
  }
  parameter_meta {
    binning: "[bp|kb|Mb|Gb]   Rebin the matrix. If no unit is given, bins will\\nbe merged by groups of INT. If a unit is given,\\nbins of that size will be generated. [default: 1]"
    cmap: "The name of a matplotlib colormap to\\nuse for the matrix. [default: Reds]"
    circular: "Use if the genome is circular."
    despeckle: "Remove sharp increases in long range\\ncontact by averaging surrounding\\nvalues."
    dpi: "Map resolution in DPI (dots per inch). [default: 300]"
    frags: "Required for bp binning. Tab-separated\\nfile with headers, containing\\nfragments start position in the 3rd\\ncolumn, as generated by hicstuff\\npipeline."
    transform: "Apply a mathematical transformation to pixel values\\nto improve visibility of long range signals. Possible\\nvalues are: log2, log10, ln, sqrt, exp0.2."
    max: "Saturation threshold. Maximum pixel\\nvalue is set to this number. Can be\\nfollowed by % to use a percentile of\\nnonzero pixels in the contact\\nmap. [default: 99%]"
    min: "Minimum of the colorscale, works\\nidentically to --max. [default: 0]"
    n_mad: "Number of median absolute deviations (MAD) from the median\\nof log bin sums allowed to keep bins in the normalization\\nprocedure [default: 3]."
    normalize: "Should ICE normalization be performed\\nbefore rendering the matrix ?"
    name_where_stored: "Name of the image file where the view is stored."
    region: "[;STR]           Only view a region of the contact map.\\nRegions are specified as UCSC strings.\\n(e.g.:chr1:1000-12000). If only one\\nregion is given, it is viewed on the\\ndiagonal. If two regions are given,\\nThe contacts between both are shown."
    trim: "Trims outlier rows/columns from the\\nmatrix if the sum of their contacts\\ndeviates from the mean by more than\\nINT standard deviations.\\n"
    contact_map: "Sparse contact matrix in bg2, cool or graal format"
    contact_map_two: "Sparse contact matrix in bg2, cool or graal format,\\nif given, the log ratio of contact_map/contact_map2\\nwill be shown."
  }
  output {
    File out_stdout = stdout()
  }
}