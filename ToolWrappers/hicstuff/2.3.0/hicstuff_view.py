from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File, Float

Hicstuff_View_V0_1_0 = CommandToolBuilder(tool="hicstuff_view", base_command=["hicstuff", "view"], inputs=[ToolInput(tag="in_binning", input_type=Int(optional=True), prefix="--binning", doc=InputDocumentation(doc="[bp|kb|Mb|Gb]   Subsampling factor or fix value in\nbasepairs to use for binning\n[default: 1].")), ToolInput(tag="in_cmap", input_type=String(optional=True), prefix="--cmap", doc=InputDocumentation(doc="The name of a matplotlib colormap to\nuse for the matrix. [default: Reds]")), ToolInput(tag="in_circular", input_type=Boolean(optional=True), prefix="--circular", doc=InputDocumentation(doc="Use if the genome is circular.")), ToolInput(tag="in_despeckle", input_type=Boolean(optional=True), prefix="--despeckle", doc=InputDocumentation(doc="Remove sharp increases in long range\ncontact by averaging surrounding\nvalues.")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Map resolution in DPI (dots per inch). [default: 300]")), ToolInput(tag="in_frags", input_type=File(optional=True), prefix="--frags", doc=InputDocumentation(doc="Required for bp binning. Tab-separated\nfile with headers, containing\nfragments start position in the 3rd\ncolumn, as generated by hicstuff\npipeline.")), ToolInput(tag="in_transform", input_type=Float(optional=True), prefix="--transform", doc=InputDocumentation(doc="Apply a mathematical transformation to pixel values\nto improve visibility of long range signals. Possible\nvalues are: log2, log10, ln, sqrt, exp0.2.")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="--max", doc=InputDocumentation(doc="Saturation threshold. Maximum pixel\nvalue is set to this number. Can be\nfollowed by % to use a percentile of\nnonzero pixels in the contact\nmap. [default: 99%]")), ToolInput(tag="in_min", input_type=Int(optional=True), prefix="--min", doc=InputDocumentation(doc="Minimum of the colorscale, works\nidentically to --max. [default: 0]")), ToolInput(tag="in_n_mad", input_type=Int(optional=True), prefix="--n-mad", doc=InputDocumentation(doc="Number of median absolute deviations (MAD) from the median\nof log bin sums allowed to keep bins in the normalization\nprocedure [default: 3].")), ToolInput(tag="in_normalize", input_type=Boolean(optional=True), prefix="--normalize", doc=InputDocumentation(doc="Should ICE normalization be performed\nbefore rendering the matrix ?")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Name of the image file where the view is stored.")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="--region", doc=InputDocumentation(doc="[;STR]           Only view a region of the contact map.\nRegions are specified as UCSC strings.\n(e.g.:chr1:1000-12000). If only one\nregion is given, it is viewed on the\ndiagonal. If two regions are given,\nThe contacts between both are shown.")), ToolInput(tag="in_trim", input_type=Int(optional=True), prefix="--trim", doc=InputDocumentation(doc="Trims outlier rows/columns from the\nmatrix if the sum of their contacts\ndeviates from the mean by more than\nINT standard deviations.\n")), ToolInput(tag="in_contact_map", input_type=String(), position=0, doc=InputDocumentation(doc="Sparse contact matrix in bg2, cool or graal format")), ToolInput(tag="in_contact_map_two", input_type=Int(), position=1, doc=InputDocumentation(doc="Sparse contact matrix in bg2, cool or graal format,\nif given, the log ratio of contact_map/contact_map2\nwill be shown."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hicstuff_View_V0_1_0().translate("wdl", allow_empty_container=True)

