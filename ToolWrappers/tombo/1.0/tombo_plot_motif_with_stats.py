from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, Int, String, File, Boolean

Tombo_Plot_Motif_With_Stats_V0_1_0 = CommandToolBuilder(tool="tombo_plot_motif_with_stats", base_command=["tombo", "plot_motif_with_stats"], inputs=[ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_motif", input_type=String(optional=True), prefix="--motif", doc=InputDocumentation(doc="Motif of interest at which to plot signal and\nstatsitics. Supports IUPAC single letter codes (use T\nfor RNA).")), ToolInput(tag="in_statistics_filename", input_type=File(optional=True), prefix="--statistics-filename", doc=InputDocumentation(doc="File to save/load base by base statistics.")), ToolInput(tag="in_control_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--control-fast5-basedirs", doc=InputDocumentation(doc="Control set of directories containing fast5 files.\nThese reads should contain only standard nucleotides.")), ToolInput(tag="in_tombo_model_filename", input_type=File(optional=True), prefix="--tombo-model-filename", doc=InputDocumentation(doc="Tombo model for event-less resquiggle and significance\ntesting. If no model is provided the default DNA or\nRNA tombo model will be used.")), ToolInput(tag="in_over_plot_threshold", input_type=Int(optional=True), prefix="--overplot-threshold", doc=InputDocumentation(doc="Coverage level to trigger alternative plot type\ninstead of raw signal. Default: 50")), ToolInput(tag="in_num_regions", input_type=Int(optional=True), prefix="--num-regions", doc=InputDocumentation(doc="Number of regions to plot. Default: 3")), ToolInput(tag="in_num_context", input_type=Int(optional=True), prefix="--num-context", doc=InputDocumentation(doc="Number of context bases around motif. Default: 2")), ToolInput(tag="in_num_statistics", input_type=Int(optional=True), prefix="--num-statistics", doc=InputDocumentation(doc="Number of motif centered regions to include in\nstatistic distributions. Default: 200")), ToolInput(tag="in_statistic_order", input_type=Boolean(optional=True), prefix="--statistic-order", doc=InputDocumentation(doc="Order selected locations by p-values or mean\nlikelihood ratio. Default: fraction of significant\nreads.")), ToolInput(tag="in_pdf_filename", input_type=File(optional=True), prefix="--pdf-filename", doc=InputDocumentation(doc="PDF filename to store plot(s). Default:\ntombo_results.motif_statistics.pdf")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under Analyses/[corrected-group])\ncontaining basecalls. Default: ['BaseCalled_template']")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Plot_Motif_With_Stats_V0_1_0().translate("wdl", allow_empty_container=True)

