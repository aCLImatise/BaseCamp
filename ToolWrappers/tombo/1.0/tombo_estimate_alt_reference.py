from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, Int, File, String, Float, Boolean

Tombo_Estimate_Alt_Reference_V0_1_0 = CommandToolBuilder(tool="tombo_estimate_alt_reference", base_command=["tombo", "estimate_alt_reference"], inputs=[ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_tombo_model_alternative", input_type=File(optional=True), prefix="--alternate-model-filename", doc=InputDocumentation(doc="Tombo model for alternative likelihood ratio\nsignificance testing.")), ToolInput(tag="in_short_name_associate", input_type=Int(optional=True), prefix="--alternate-model-name", doc=InputDocumentation(doc="A short name to associate with this alternate model\n(e.g. 5mC, 4mC, 6mA). This text will be included in\noutput filenames when this model is used for testing.")), ToolInput(tag="in_alternate_model_base", input_type=String(optional=True), prefix="--alternate-model-base", doc=InputDocumentation(doc="Non-standard base is an alternative to this base.")), ToolInput(tag="in_tombo_model_filename", input_type=File(optional=True), prefix="--tombo-model-filename", doc=InputDocumentation(doc="Tombo model for event-less resquiggle and significance\ntesting. If no model is provided the default DNA or\nRNA tombo model will be used.")), ToolInput(tag="in_min_alt_base_percentage", input_type=Int(optional=True), prefix="--min-alt-base-percentage", doc=InputDocumentation(doc="Minimum estimated percent of non-standard base\ndistribution for inclusion of k-mer in non-standard\nmodel. Default: 5.000000")), ToolInput(tag="in_sd_threshold", input_type=Float(optional=True), prefix="--sd-threshold", doc=InputDocumentation(doc="Minimum level standard deviation difference between\nestimated non-standard distribution mean and standard\nmodel mean for inclusion of k-mer in non-standard\nmodel. Default: 1.500000")), ToolInput(tag="in_minimum_km_er_observations", input_type=Int(optional=True), prefix="--minimum-kmer-observations", doc=InputDocumentation(doc="Number of each k-mer observations required in order to\nproduce a reference (genomic locations for standard\nreference and per-read for alternative reference).\nDefault: 1000")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under Analyses/[corrected-group])\ncontaining basecalls. Default: ['BaseCalled_template']")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information.")), ToolInput(tag="in__alternatemodelname", input_type=String(), position=0, doc=InputDocumentation(doc="--alternate-model-name")), ToolInput(tag="in__alternatemodelbase", input_type=String(), position=1, doc=InputDocumentation(doc="--alternate-model-base {A,C,G,T}"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Estimate_Alt_Reference_V0_1_0().translate("wdl", allow_empty_container=True)

