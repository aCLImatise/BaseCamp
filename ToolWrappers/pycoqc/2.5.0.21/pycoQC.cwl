class: CommandLineTool
id: pycoQC.cwl
inputs:
- id: in_verbose
  doc: Increase verbosity
  type: boolean?
  inputBinding:
    prefix: --verbose
- id: in_quiet
  doc: Reduce verbosity
  type: boolean?
  inputBinding:
    prefix: --quiet
- id: in_summary_file
  doc: "[SUMMARY_FILE [SUMMARY_FILE ...]], -f [SUMMARY_FILE [SUMMARY_FILE ...]]\n\
    Path to a sequencing_summary generated by Albacore\n1.0.0 + (read_fast5_basecaller.py)\
    \ / Guppy 2.1.3+\n(guppy_basecaller). One can also pass multiple space\nseparated\
    \ file paths or a UNIX style regex matching\nmultiple files (Required)"
  type: boolean?
  inputBinding:
    prefix: --summary_file
- id: in_barcode_file
  doc: "[BARCODE_FILE [BARCODE_FILE ...]], -b [BARCODE_FILE [BARCODE_FILE ...]]\n\
    Path to the barcode_file generated by Guppy 2.1.3+\n(guppy_barcoder) or Deepbinner\
    \ 0.2.0+. This is not a\nrequired file. One can also pass multiple space\nseparated\
    \ file paths or a UNIX style regex matching\nmultiple files (optional)"
  type: boolean?
  inputBinding:
    prefix: --barcode_file
- id: in_bam_file
  doc: "[BAM_FILE [BAM_FILE ...]], -a [BAM_FILE [BAM_FILE ...]]\nPath to a Bam file\
    \ corresponding to reads in the\nsummary_file. Preferably aligned with Minimap2\
    \ One can\nalso pass multiple space separated file paths or a\nUNIX style regex\
    \ matching multiple files (optional)"
  type: boolean?
  inputBinding:
    prefix: --bam_file
- id: in_html_outfile
  doc: "Path to an output html file report (required if\njson_outfile not given)"
  type: File?
  inputBinding:
    prefix: --html_outfile
- id: in_json_outfile
  doc: "Path to an output json file report (required if\nhtml_outfile not given)"
  type: File?
  inputBinding:
    prefix: --json_outfile
- id: in_min_pass_qual
  doc: "Minimum quality to consider a read as 'pass' (default:\n7)"
  type: long?
  inputBinding:
    prefix: --min_pass_qual
- id: in_min_pass_len
  doc: "Minimum read length to consider a read as 'pass'\n(default: 0)"
  type: long?
  inputBinding:
    prefix: --min_pass_len
- id: in_filter_calibration
  doc: "If given, reads flagged as calibration strand by the\nbasecaller are removed\
    \ (default: False)"
  type: boolean?
  inputBinding:
    prefix: --filter_calibration
- id: in_filter_duplicated
  doc: "If given, duplicated read_ids are removed but the\nfirst occurence is kept\
    \ (Guppy sometimes outputs the\nsame read multiple times) (default: False)"
  type: boolean?
  inputBinding:
    prefix: --filter_duplicated
- id: in_min_barcode_percent
  doc: "Minimal percent of total reads to retain barcode\nlabel. If below, the barcode\
    \ value is set as\n`unclassified` (default: 0.1)"
  type: long?
  inputBinding:
    prefix: --min_barcode_percent
- id: in_report_title
  doc: "Title to use in the html report (default: PycoQC\nreport)"
  type: string?
  inputBinding:
    prefix: --report_title
- id: in_template_file
  doc: 'Jinja2 html template for the html report (default: )'
  type: File?
  inputBinding:
    prefix: --template_file
- id: in_config_file
  doc: "Path to a JSON configuration file for the html report.\nIf not provided, looks\
    \ for it in ~/.pycoQC and\n~/.config/pycoQC/config. If it's still not found,\n\
    falls back to default parameters. The first level keys\nare the names of the plots\
    \ to be included. The second\nlevel keys are the parameters to pass to each plotting\n\
    function (default: )\")"
  type: File?
  inputBinding:
    prefix: --config_file
- id: in_sample
  doc: "If not None a n number of reads will be randomly\nselected instead of the\
    \ entire dataset for ploting\nfunction (deterministic sampling) (default: 100000)"
  type: long?
  inputBinding:
    prefix: --sample
- id: in_default_config
  doc: "Print default configuration file. Can be used to\ngenerate a template JSON\
    \ file (default: False)\n"
  type: boolean?
  inputBinding:
    prefix: --default_config
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_html_outfile
  doc: "Path to an output html file report (required if\njson_outfile not given)"
  type: File?
  outputBinding:
    glob: $(inputs.in_html_outfile)
- id: out_json_outfile
  doc: "Path to an output json file report (required if\nhtml_outfile not given)"
  type: File?
  outputBinding:
    glob: $(inputs.in_json_outfile)
hints: []
cwlVersion: v1.1
baseCommand:
- pycoQC
