version 1.0

task BarcodeSplit {
  input {
    Boolean? summary_file
    Boolean? barcode_file
    Directory? output_dir
    Boolean? output_unclassified
    Int? min_barcode_percent
    Boolean? verbose
    Boolean? quiet
  }
  command <<<
    Barcode_split \
      ~{if (summary_file) then "--summary_file" else ""} \
      ~{if (barcode_file) then "--barcode_file" else ""} \
      ~{if defined(output_dir) then ("--output_dir " +  '"' + output_dir + '"') else ""} \
      ~{if (output_unclassified) then "--output_unclassified" else ""} \
      ~{if defined(min_barcode_percent) then ("--min_barcode_percent " +  '"' + min_barcode_percent + '"') else ""} \
      ~{if (verbose) then "--verbose" else ""} \
      ~{if (quiet) then "--quiet" else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    summary_file: "[SUMMARY_FILE [SUMMARY_FILE ...]], -f [SUMMARY_FILE [SUMMARY_FILE ...]]\\nPath to a sequencing_summary generated by Albacore\\n1.0.0 + (read_fast5_basecaller.py) / Guppy 2.1.3+\\n(guppy_basecaller). One can also pass multiple space\\nseparated file paths or a UNIX style regex matching\\nmultiple files"
    barcode_file: "[BARCODE_FILE [BARCODE_FILE ...]], -b [BARCODE_FILE [BARCODE_FILE ...]]\\nPath to the barcode_file generated by Guppy 2.1.3+\\n(guppy_barcoder) or Deepbinner 0.2.0+. One can also\\npass multiple space separated file paths or a UNIX\\nstyle regex matching multiple files"
    output_dir: "Folder where to output split barcode data (default:\\ncurrent dir"
    output_unclassified: "If given, unclassified barcodes are also written in a\\nfile. By default they are skiped"
    min_barcode_percent: "Minimal percent of total reads to retain barcode\\nlabel. If below, the barcode value is set as\\n`unclassified` (default: 0.1)"
    verbose: "Increase verbosity"
    quiet: "Reduce verbosity"
  }
  output {
    File out_stdout = stdout()
    Directory out_output_dir = "${in_output_dir}"
  }
}