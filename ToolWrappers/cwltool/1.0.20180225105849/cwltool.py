from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String, File, Int

Cwltool_V0_1_0 = CommandToolBuilder(tool="cwltool", base_command=["cwltool"], inputs=[ToolInput(tag="in_basedir", input_type=Directory(optional=True), prefix="--basedir", doc=InputDocumentation(doc="Output directory, default current directory")), ToolInput(tag="in_parallel", input_type=Boolean(optional=True), prefix="--parallel", doc=InputDocumentation(doc="[experimental] Run jobs in parallel. Does not\ncurrently keep track of ResourceRequirements like the\nnumber of coresor memory and can overload this system")), ToolInput(tag="in_preserve_environment", input_type=String(optional=True), prefix="--preserve-environment", doc=InputDocumentation(doc="Preserve specific environment variable when running\nCommandLineTools. May be provided multiple times.")), ToolInput(tag="in_preserve_entire_environment", input_type=Boolean(optional=True), prefix="--preserve-entire-environment", doc=InputDocumentation(doc="Preserve all environment variable when running\nCommandLineTools.")), ToolInput(tag="in_rm_container", input_type=Boolean(optional=True), prefix="--rm-container", doc=InputDocumentation(doc="Delete Docker container used by jobs after they exit\n(default)")), ToolInput(tag="in_leave_container", input_type=Boolean(optional=True), prefix="--leave-container", doc=InputDocumentation(doc="Do not delete Docker container used by jobs after they")), ToolInput(tag="in_tmp_outdir_prefix", input_type=File(optional=True), prefix="--tmp-outdir-prefix", doc=InputDocumentation(doc="Path prefix for intermediate output directories")), ToolInput(tag="in_cache_dir", input_type=Directory(optional=True), prefix="--cachedir", doc=InputDocumentation(doc="Directory to cache intermediate workflow outputs to\navoid recomputing steps.")), ToolInput(tag="in_rm_tmpdir", input_type=Boolean(optional=True), prefix="--rm-tmpdir", doc=InputDocumentation(doc="Delete intermediate temporary directories (default)")), ToolInput(tag="in_leave_tmpdir", input_type=Boolean(optional=True), prefix="--leave-tmpdir", doc=InputDocumentation(doc="Do not delete intermediate temporary directories")), ToolInput(tag="in_move_outputs", input_type=Directory(optional=True), prefix="--move-outputs", doc=InputDocumentation(doc="Move output files to the workflow output directory and\ndelete intermediate output directories (default).")), ToolInput(tag="in_leave_outputs", input_type=Boolean(optional=True), prefix="--leave-outputs", doc=InputDocumentation(doc="Leave output files in intermediate output directories.")), ToolInput(tag="in_copy_outputs", input_type=Directory(optional=True), prefix="--copy-outputs", doc=InputDocumentation(doc="Copy output files to the workflow output directory,\ndon't delete intermediate output directories.")), ToolInput(tag="in_enable_pull", input_type=Boolean(optional=True), prefix="--enable-pull", doc=InputDocumentation(doc="Try to pull Docker images")), ToolInput(tag="in_disable_pull", input_type=Boolean(optional=True), prefix="--disable-pull", doc=InputDocumentation(doc="Do not try to pull Docker images")), ToolInput(tag="in_rdf_serializer", input_type=Int(optional=True), prefix="--rdf-serializer", doc=InputDocumentation(doc="Output RDF serialization format used by --print-rdf\n(one of turtle (default), n3, nt, xml)")), ToolInput(tag="in_eval_timeout", input_type=Int(optional=True), prefix="--eval-timeout", doc=InputDocumentation(doc="Time to wait for a Javascript expression to evaluate\nbefore giving an error, default 20s.")), ToolInput(tag="in_print_rdf", input_type=Boolean(optional=True), prefix="--print-rdf", doc=InputDocumentation(doc="Print corresponding RDF graph for workflow and exit")), ToolInput(tag="in_print_dot", input_type=Boolean(optional=True), prefix="--print-dot", doc=InputDocumentation(doc="Print workflow visualization in graphviz format and")), ToolInput(tag="in_print_deps", input_type=Boolean(optional=True), prefix="--print-deps", doc=InputDocumentation(doc="Print CWL document dependencies.")), ToolInput(tag="in_print_input_deps", input_type=Boolean(optional=True), prefix="--print-input-deps", doc=InputDocumentation(doc="Print input object document dependencies.")), ToolInput(tag="in_pack", input_type=Boolean(optional=True), prefix="--pack", doc=InputDocumentation(doc="Combine components into single document and print.")), ToolInput(tag="in_validate", input_type=Boolean(optional=True), prefix="--validate", doc=InputDocumentation(doc="Validate CWL document only.")), ToolInput(tag="in_print_supported_versions", input_type=Boolean(optional=True), prefix="--print-supported-versions", doc=InputDocumentation(doc="Print supported CWL specs.")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="--strict", doc=InputDocumentation(doc="Strict validation (unrecognized or out of place fields\nare error)")), ToolInput(tag="in_non_strict", input_type=Boolean(optional=True), prefix="--non-strict", doc=InputDocumentation(doc="Lenient validation (ignore unrecognized fields)")), ToolInput(tag="in_skip_schemas", input_type=Boolean(optional=True), prefix="--skip-schemas", doc=InputDocumentation(doc="Skip loading of schemas")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Default logging")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Only print warnings and errors.")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print even more logging")), ToolInput(tag="in_timestamps", input_type=Boolean(optional=True), prefix="--timestamps", doc=InputDocumentation(doc="Add timestamps to the errors, warnings, and")), ToolInput(tag="in_user_space_docker_cmd", input_type=String(optional=True), prefix="--user-space-docker-cmd", doc=InputDocumentation(doc="(Linux/OS X only) Specify a user space docker command\n(like udocker or dx-docker) that will be used to call\n'pull' and 'run'")), ToolInput(tag="in_singularity", input_type=Boolean(optional=True), prefix="--singularity", doc=InputDocumentation(doc="[experimental] Use Singularity runtime for running\ncontainers. Requires Singularity v2.3.2+ and Linux\nwith kernel version v3.18+ or with overlayfs support\nbackported.")), ToolInput(tag="in_no_container", input_type=Boolean(optional=True), prefix="--no-container", doc=InputDocumentation(doc="Do not execute jobs in a Docker container, even when\n`DockerRequirement` is specified under `hints`.")), ToolInput(tag="in_tool_help", input_type=Boolean(optional=True), prefix="--tool-help", doc=InputDocumentation(doc="Print command line help for tool")), ToolInput(tag="in_relative_deps", input_type=String(optional=True), prefix="--relative-deps", doc=InputDocumentation(doc="When using --print-deps, print paths relative to\nprimary file or current working directory.")), ToolInput(tag="in_enable_dev", input_type=Boolean(optional=True), prefix="--enable-dev", doc=InputDocumentation(doc="Enable loading and running development versions of CWL")), ToolInput(tag="in_no_match_user", input_type=Boolean(optional=True), prefix="--no-match-user", doc=InputDocumentation(doc="Disable passing the current uid to `docker run --user`")), ToolInput(tag="in_disable_net", input_type=Boolean(optional=True), prefix="--disable-net", doc=InputDocumentation(doc="Use docker's default networking for containers; the\ndefault is to enable networking.")), ToolInput(tag="in_custom_net", input_type=String(optional=True), prefix="--custom-net", doc=InputDocumentation(doc="Will be passed to `docker run` as the '--net'\nparameter. Implies '--enable-net'.")), ToolInput(tag="in_enable_ga_four_gh_tool_registry", input_type=Boolean(optional=True), prefix="--enable-ga4gh-tool-registry", doc=InputDocumentation(doc="Enable resolution using GA4GH tool registry API")), ToolInput(tag="in_disable_ga_four_gh_tool_registry", input_type=Boolean(optional=True), prefix="--disable-ga4gh-tool-registry", doc=InputDocumentation(doc="Disable resolution using GA4GH tool registry API")), ToolInput(tag="in_add_ga_four_gh_tool_registry", input_type=Int(optional=True), prefix="--add-ga4gh-tool-registry", doc=InputDocumentation(doc="Add a GA4GH tool registry endpoint to use for\nresolution, default ['https://dockstore.org:8443']")), ToolInput(tag="in_on_error", input_type=String(optional=True), prefix="--on-error", doc=InputDocumentation(doc="Desired workflow behavior when a step fails. One of\n'stop' or 'continue'. Default is 'stop'.")), ToolInput(tag="in_compute_checksum", input_type=Boolean(optional=True), prefix="--compute-checksum", doc=InputDocumentation(doc="Compute checksum of contents while collecting outputs")), ToolInput(tag="in_no_compute_checksum", input_type=Boolean(optional=True), prefix="--no-compute-checksum", doc=InputDocumentation(doc="Do not compute checksum of contents while collecting\noutputs")), ToolInput(tag="in_relax_path_checks", input_type=Boolean(optional=True), prefix="--relax-path-checks", doc=InputDocumentation(doc="Relax requirements on path names to permit spaces and\nhash characters.")), ToolInput(tag="in_make_template", input_type=Boolean(optional=True), prefix="--make-template", doc=InputDocumentation(doc="Generate a template input object")), ToolInput(tag="in_force_docker_pull", input_type=Boolean(optional=True), prefix="--force-docker-pull", doc=InputDocumentation(doc="Pull latest docker image even if it is locally present")), ToolInput(tag="in_no_read_only", input_type=Boolean(optional=True), prefix="--no-read-only", doc=InputDocumentation(doc="Do not set root directory in the container as read-")), ToolInput(tag="in_record_container_id", input_type=Boolean(optional=True), prefix="--record-container-id", doc=InputDocumentation(doc="If enabled, store the Docker container ID into a file.\nSee --cidfile-dir to specify the directory.")), ToolInput(tag="in_cid_file_dir", input_type=File(optional=True), prefix="--cidfile-dir", doc=InputDocumentation(doc="Directory for storing the Docker container ID file.\nThe default is the current directory")), ToolInput(tag="in_cid_file_prefix", input_type=File(optional=True), prefix="--cidfile-prefix", doc=InputDocumentation(doc="Specify a prefix to the container ID filename. Final\nfile name will be followed by a timestamp. The default\nis no prefix.\n")), ToolInput(tag="in_cwl_document", input_type=String(), position=0, doc=InputDocumentation(doc="path or URL to a CWL Workflow, CommandLineTool, or\nExpressionTool. If the `inputs_object` has a\n`cwl:tool` field indicating the path or URL to the\ncwl_document, then the `workflow` argument is\noptional.")), ToolInput(tag="in_inputs_object", input_type=String(), position=1, doc=InputDocumentation(doc="path or URL to a YAML or JSON formatted description of\nthe required input values for the given\n`cwl_document`.")), ToolInput(tag="in_notifications_dot", input_type=String(), position=1, doc=InputDocumentation(doc="--js-console          Enable javascript console output")), ToolInput(tag="in_only", input_type=String(), position=0, doc=InputDocumentation(doc="--overrides OVERRIDES"))], outputs=[ToolOutput(tag="out_basedir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_basedir", type_hint=File()), doc=OutputDocumentation(doc="Output directory, default current directory")), ToolOutput(tag="out_tmp_outdir_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_tmp_outdir_prefix", type_hint=File()), doc=OutputDocumentation(doc="Path prefix for intermediate output directories")), ToolOutput(tag="out_move_outputs", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_move_outputs", type_hint=File()), doc=OutputDocumentation(doc="Move output files to the workflow output directory and\ndelete intermediate output directories (default).")), ToolOutput(tag="out_copy_outputs", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_copy_outputs", type_hint=File()), doc=OutputDocumentation(doc="Copy output files to the workflow output directory,\ndon't delete intermediate output directories."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cwltool_V0_1_0().translate("wdl", allow_empty_container=True)

