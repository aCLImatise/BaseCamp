from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Positions2Snv_Invariant_Alignment_Pl_V0_1_0 = CommandToolBuilder(tool="positions2snv_invariant_alignment.pl", base_command=["positions2snv_invariant_alignment.pl"], inputs=[ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--input", doc=InputDocumentation(doc=":  Input file (snv_align-positions.tsv generated by snv pipeline)")), ToolInput(tag="in_output_dir", input_type=File(optional=True), prefix="--output-dir", doc=InputDocumentation(doc=":  Output directory name (containing an alignment for each chromosome/sequence in reference file)")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc=":  Alignment format (default phylip)")), ToolInput(tag="in_keep_all", input_type=Boolean(optional=True), prefix="--keep-all", doc=InputDocumentation(doc=": Keep all positions in alignment")), ToolInput(tag="in_merge_alignment", input_type=Boolean(optional=True), prefix="--merge-alignment", doc=InputDocumentation(doc=":  Merge alignment to single file by concatenating individual chromosomes/sequences in the reference file")), ToolInput(tag="in_reference_file", input_type=Boolean(optional=True), prefix="--reference-file", doc=InputDocumentation(doc=":  Reference file")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc=": Print more information"))], outputs=[ToolOutput(tag="out_output_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc=":  Output directory name (containing an alignment for each chromosome/sequence in reference file)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Positions2Snv_Invariant_Alignment_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

