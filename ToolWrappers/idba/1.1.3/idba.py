from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, Float, Boolean, String

Idba_V0_1_0 = CommandToolBuilder(tool="idba", base_command=["idba"], inputs=[ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="(=out)                   output directory")), ToolInput(tag="in_read", input_type=File(optional=True), prefix="--read", doc=InputDocumentation(doc="fasta read file (<=600)")), ToolInput(tag="in_read_level_two", input_type=Int(optional=True), prefix="--read_level_2", doc=InputDocumentation(doc="paired-end reads fasta for second level scaffolds")), ToolInput(tag="in_read_level_three", input_type=Int(optional=True), prefix="--read_level_3", doc=InputDocumentation(doc="paired-end reads fasta for third level scaffolds")), ToolInput(tag="in_read_level_four", input_type=Int(optional=True), prefix="--read_level_4", doc=InputDocumentation(doc="paired-end reads fasta for fourth level scaffolds")), ToolInput(tag="in_read_level_five", input_type=Int(optional=True), prefix="--read_level_5", doc=InputDocumentation(doc="paired-end reads fasta for fifth level scaffolds")), ToolInput(tag="in_long_read", input_type=File(optional=True), prefix="--long_read", doc=InputDocumentation(doc="fasta long read file (>600)")), ToolInput(tag="in_mink", input_type=Int(optional=True), prefix="--mink", doc=InputDocumentation(doc="(=20)                   minimum k value (<=312)")), ToolInput(tag="in_max_k", input_type=Int(optional=True), prefix="--maxk", doc=InputDocumentation(doc="(=50)                   maximum k value (<=312)")), ToolInput(tag="in_step", input_type=Int(optional=True), prefix="--step", doc=InputDocumentation(doc="(=10)                   increment of k-mer of each iteration")), ToolInput(tag="in_prefix", input_type=Int(optional=True), prefix="--prefix", doc=InputDocumentation(doc="(=3)                  prefix length used to build sub k-mer table")), ToolInput(tag="in_min_count", input_type=Int(optional=True), prefix="--min_count", doc=InputDocumentation(doc="(=2)               minimum multiplicity for filtering k-mer when building the graph")), ToolInput(tag="in_min_support", input_type=Int(optional=True), prefix="--min_support", doc=InputDocumentation(doc="(=1)             minimum supoort in each iteration")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num_threads", doc=InputDocumentation(doc="(=0)             number of threads")), ToolInput(tag="in_seed_km_er", input_type=Int(optional=True), prefix="--seed_kmer", doc=InputDocumentation(doc="(=30)              seed kmer size for alignment")), ToolInput(tag="in_min_contig", input_type=Int(optional=True), prefix="--min_contig", doc=InputDocumentation(doc="(=200)            minimum size of contig")), ToolInput(tag="in_similar", input_type=Float(optional=True), prefix="--similar", doc=InputDocumentation(doc="(=0.95)              similarity for alignment")), ToolInput(tag="in_max_mismatch", input_type=Int(optional=True), prefix="--max_mismatch", doc=InputDocumentation(doc="(=3)            max mismatch of error correction")), ToolInput(tag="in_min_pairs", input_type=Int(optional=True), prefix="--min_pairs", doc=InputDocumentation(doc="(=3)               minimum number of pairs")), ToolInput(tag="in_no_coverage", input_type=Boolean(optional=True), prefix="--no_coverage", doc=InputDocumentation(doc="do not iterate on coverage")), ToolInput(tag="in_no_correct", input_type=Boolean(optional=True), prefix="--no_correct", doc=InputDocumentation(doc="do not do correction")), ToolInput(tag="in_pre_correction", input_type=Boolean(optional=True), prefix="--pre_correction", doc=InputDocumentation(doc="perform pre-correction before assembly")), ToolInput(tag="in_i_dba_ud", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="(=out)                   output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Idba_V0_1_0().translate("wdl", allow_empty_container=True)

