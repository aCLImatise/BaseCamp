from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Arb_Readseq_V0_1_0 = CommandToolBuilder(tool="arb_readseq", base_command=["arb_readseq"], inputs=[ToolInput(tag="in_change_lower_case", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[aselower]   change to lower case")), ToolInput(tag="in_change_upper_case", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[ASEUPPER]   change to UPPER CASE")), ToolInput(tag="in_de_gap", input_type=Boolean(optional=True), prefix="-degap", doc=InputDocumentation(doc="[=-]     remove gap symbols")), ToolInput(tag="in_select_item_numbers", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[tem=2,3,4]  select Item number(s) from several")), ToolInput(tag="in_list_sequences_only", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ist]        List sequences only")), ToolInput(tag="in_outseq_redirect_output", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[utput=]out.seq  redirect Output")), ToolInput(tag="in_pipe_command_line", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ipe]        Pipe (command line, <stdin, >stdout)")), ToolInput(tag="in__change_to", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[everse]     change to Reverse-complement")), ToolInput(tag="in__verbose_progress", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[erbose]     Verbose progress")), ToolInput(tag="in_wid", input_type=Boolean(optional=True), prefix="-wid", doc=InputDocumentation(doc="[th]=#            sequence line width")), ToolInput(tag="in_tab", input_type=Boolean(optional=True), prefix="-tab", doc=InputDocumentation(doc="=#                left indent")), ToolInput(tag="in_col", input_type=Boolean(optional=True), prefix="-col", doc=InputDocumentation(doc="[space]=#         column space within sequence line on output")), ToolInput(tag="in_gap", input_type=Boolean(optional=True), prefix="-gap", doc=InputDocumentation(doc="[count]           count gap chars in sequence numbers")), ToolInput(tag="in_name_right", input_type=Boolean(optional=True), prefix="-nameright", doc=InputDocumentation(doc="[=#]   name on left/right side [=max width]")), ToolInput(tag="in_name_top", input_type=Boolean(optional=True), prefix="-nametop", doc=InputDocumentation(doc="name at top/bottom")), ToolInput(tag="in_num_right", input_type=Boolean(optional=True), prefix="-numright", doc=InputDocumentation(doc="seq index on left/right side")), ToolInput(tag="in_num_top", input_type=Boolean(optional=True), prefix="-numtop", doc=InputDocumentation(doc="index on top/bottom")), ToolInput(tag="in_match", input_type=Boolean(optional=True), prefix="-match", doc=InputDocumentation(doc="[=.]            use match base for 2..n species")), ToolInput(tag="in_inter", input_type=Boolean(optional=True), prefix="-inter", doc=InputDocumentation(doc="[line=#]        blank line(s) between sequence blocks")), ToolInput(tag="in_var_19", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_a_select_sequences", input_type=String(), position=0, doc=InputDocumentation(doc="-a[ll]         select All sequences"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Arb_Readseq_V0_1_0().translate("wdl", allow_empty_container=True)

