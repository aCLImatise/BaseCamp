from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Simkamincore_Sketch_V0_1_0 = CommandToolBuilder(tool="simkaMinCore_sketch", base_command=["simkaMinCore", "sketch"], inputs=[ToolInput(tag="in_in", input_type=Boolean(optional=True), prefix="-in", doc=InputDocumentation(doc="(1 arg) :    input filename | TODO SPECIF")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="(1 arg) :    output filename for kmer spectrum  [default './simkaMin_kmers.bin']")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="-seed", doc=InputDocumentation(doc="(1 arg) :    seed used for random k-mer selection  [default '100']")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="(1 arg) :    verbosity level  [default '1']")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="(0 arg) :    version")), ToolInput(tag="in_km_er_size", input_type=Boolean(optional=True), prefix="-kmer-size", doc=InputDocumentation(doc="(1 arg) :    size of a kmer  [default '21']")), ToolInput(tag="in_nb_km_ers", input_type=Boolean(optional=True), prefix="-nb-kmers", doc=InputDocumentation(doc="(1 arg) :    number of kmers used to compute distances  [default '100000']")), ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="-filter", doc=InputDocumentation(doc="(0 arg) :    filter out k-mer seen one time (potentially erroneous)")), ToolInput(tag="in_max_reads", input_type=Boolean(optional=True), prefix="-max-reads", doc=InputDocumentation(doc="(1 arg) :    maximum number of reads to process. Set to 0 to use all reads  [default '0']")), ToolInput(tag="in_min_read_size", input_type=Boolean(optional=True), prefix="-min-read-size", doc=InputDocumentation(doc="(1 arg) :    minimal size a read should have to be kept  [default '0']")), ToolInput(tag="in_min_shannon_index", input_type=Boolean(optional=True), prefix="-min-shannon-index", doc=InputDocumentation(doc="(1 arg) :    minimal Shannon index a read should have to be kept. Float in [0,2]  [default '0']")), ToolInput(tag="in_nb_cores", input_type=Boolean(optional=True), prefix="-nb-cores", doc=InputDocumentation(doc="(1 arg) :    number of cores  [default '0']")), ToolInput(tag="in_max_memory", input_type=Boolean(optional=True), prefix="-max-memory", doc=InputDocumentation(doc="(1 arg) :    max memory (MB). Only used if -filter is enabled  [default '8000']"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output filename for kmer spectrum  [default './simkaMin_kmers.bin']"))], container="quay.io/biocontainers/simka:1.5.3--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Simkamincore_Sketch_V0_1_0().translate("wdl")

