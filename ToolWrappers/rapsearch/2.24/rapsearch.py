from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, String

Rapsearch_V0_1_0 = CommandToolBuilder(tool="rapsearch", base_command=["rapsearch"], inputs=[ToolInput(tag="in_query_file_format", input_type=File(optional=True), prefix="-q", doc=InputDocumentation(doc=": query file or stdin (FASTA or FASTQ format)")), ToolInput(tag="in_database_file_base", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc=": database file (**base name only**, with full path)")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": output file name")), ToolInput(tag="in_stream_one_result", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc=": stream one result through stdout [1: m8 result, 2: aln result, default: don't stream any result through stdout]")), ToolInput(tag="in__number_threads", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc=": number of threads [default: 1]")), ToolInput(tag="in_report_logevalue_evalue", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc=": report log10(E-value) or E-value for each hit [t/T: log10(E-value), the default; f/F: E-value]")), ToolInput(tag="in_evalue_threshold_given", input_type=Float(optional=True), prefix="-e", doc=InputDocumentation(doc=": E-value threshold, given in the format of log10(E-value), or E-value (when -s is set to f) [default: 1.0/10.0].")), ToolInput(tag="in_threshold_bit_score", input_type=Float(optional=True), prefix="-i", doc=InputDocumentation(doc=": threshold of bit score [default: 0.0]. It is the alternative option to limit the hits to report.")), ToolInput(tag="in_threshold_minimal_alignment", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc=": threshold of minimal alignment length [default: 0]")), ToolInput(tag="in_number_show_descriptions", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc=": number of database sequences to show one-line descriptions [default: 500]. If it's -1, all results will be shown.")), ToolInput(tag="in_number_show_alignments", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc=": number of database sequence to show alignments [default: 100]. If it's -1, all results will be shown.")), ToolInput(tag="in_type_query_sequences", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc=": type of query sequences [u/U:unknown, n/N:nucleotide, a/A:amino acid, q/Q:fastq, default: u]")), ToolInput(tag="in_output_allmatched_query", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc=": output ALL/MATCHED query reads into the alignment file [t/T: output all query reads, f/F: output matched reads, default: f]")), ToolInput(tag="in_apply_gap_extension", input_type=String(optional=True), prefix="-g", doc=InputDocumentation(doc=": apply gap extension [t/T: yes, f/F: no, default: t]")), ToolInput(tag="in_use_fast_mode", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc=": use fast mode (10~30 fold) [t/T: yes, f/F: no, default: f]")), ToolInput(tag="in_apply_hssp_criterion", input_type=String(optional=True), prefix="-w", doc=InputDocumentation(doc=": apply HSSP criterion instead of E-value criterion [t/T: HSSP, f/F: E-value criteria, default: f]")), ToolInput(tag="in_print_hits_xml", input_type=String(optional=True), prefix="-x", doc=InputDocumentation(doc=": print hits in xml format [t/T: yes, f/F: no, default: f]"))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc=": output file name")), ToolOutput(tag="out_output_allmatched_query", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_allmatched_query", type_hint=File()), doc=OutputDocumentation(doc=": output ALL/MATCHED query reads into the alignment file [t/T: output all query reads, f/F: output matched reads, default: f]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rapsearch_V0_1_0().translate("wdl", allow_empty_container=True)

