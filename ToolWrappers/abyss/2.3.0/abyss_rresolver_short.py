from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Boolean

Abyss_Rresolver_Short_V0_1_0 = CommandToolBuilder(tool="abyss_rresolver_short", base_command=["abyss-rresolver-short"], inputs=[ToolInput(tag="in_bloom_size", input_type=Int(optional=True), prefix="--bloom-size", doc=InputDocumentation(doc="read Bloom filter size. Unit suffixes 'K' (kilobytes), 'M' (megabytes), or 'G' (gigabytes) may be used. [required]")), ToolInput(tag="in_graph", input_type=File(optional=True), prefix="--graph", doc=InputDocumentation(doc="write the contig adjacency graph to FILE. [required]")), ToolInput(tag="in_contigs", input_type=File(optional=True), prefix="--contigs", doc=InputDocumentation(doc="write the contigs to FILE. [required]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use N parallel threads [1]")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="assembly k-mer size")), ToolInput(tag="in_hist", input_type=String(optional=True), prefix="--hist", doc=InputDocumentation(doc="write the algorithm histograms with the given prefix. Histograms are omitted if no prefix is given.")), ToolInput(tag="in_threshold", input_type=File(optional=True), prefix="--threshold", doc=InputDocumentation(doc="set path support threshold to N. [4]")), ToolInput(tag="in_extract", input_type=Int(optional=True), prefix="--extract", doc=InputDocumentation(doc="extract N r-mers per read. [4]")), ToolInput(tag="in_min_tests", input_type=Int(optional=True), prefix="--min-tests", doc=InputDocumentation(doc="set minimum number of sliding window moves to N. Cannot be higher than 127. [20]")), ToolInput(tag="in_max_tests", input_type=Int(optional=True), prefix="--max-tests", doc=InputDocumentation(doc="set maximum number of sliding window moves to N. Cannot be higher than 127. [36]")), ToolInput(tag="in_branching", input_type=Int(optional=True), prefix="--branching", doc=InputDocumentation(doc="set maximum number of branching paths to N. [75]")), ToolInput(tag="in_r_mer", input_type=Int(optional=True), prefix="--rmer", doc=InputDocumentation(doc="explicitly set r value (k value used by rresolver). The number of set r values should be equal to the number of read sizes.")), ToolInput(tag="in_approx_factor", input_type=Boolean(optional=True), prefix="--approx-factor", doc=InputDocumentation(doc="explicitly set coverage approximation factor.")), ToolInput(tag="in_quality_threshold", input_type=Int(optional=True), prefix="--quality--threshold", doc=InputDocumentation(doc="minimum quality all bases in rmers should have, on average. [35] (UNUSED)")), ToolInput(tag="in_error_correction", input_type=Boolean(optional=True), prefix="--error-correction", doc=InputDocumentation(doc="enable correction of a 1bp error in kmers. [false]")), ToolInput(tag="in_supported", input_type=File(optional=True), prefix="--supported", doc=InputDocumentation(doc="write supported paths to FILE.")), ToolInput(tag="in_unsupported", input_type=File(optional=True), prefix="--unsupported", doc=InputDocumentation(doc="write unsupported paths to FILE.\nUsed for path sequence quality check.")), ToolInput(tag="in_adj", input_type=Boolean(optional=True), prefix="--adj", doc=InputDocumentation(doc="output the graph in ADJ format [default]")), ToolInput(tag="in_as_qg", input_type=Boolean(optional=True), prefix="--asqg", doc=InputDocumentation(doc="output the graph in ASQG format")), ToolInput(tag="in_dot", input_type=Boolean(optional=True), prefix="--dot", doc=InputDocumentation(doc="output the graph in GraphViz format")), ToolInput(tag="in_gfa", input_type=Boolean(optional=True), prefix="--gfa", doc=InputDocumentation(doc="output the graph in GFA1 format")), ToolInput(tag="in_gfa_one", input_type=Boolean(optional=True), prefix="--gfa1", doc=InputDocumentation(doc="output the graph in GFA1 format")), ToolInput(tag="in_gfa_two", input_type=Boolean(optional=True), prefix="--gfa2", doc=InputDocumentation(doc="output the graph in GFA2 format")), ToolInput(tag="in_gv", input_type=Boolean(optional=True), prefix="--gv", doc=InputDocumentation(doc="output the graph in GraphViz format")), ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="--sam", doc=InputDocumentation(doc="output the graph in SAM format")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output"))], outputs=[], container="quay.io/biocontainers/abyss:2.3.0--ha4ec83a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Abyss_Rresolver_Short_V0_1_0().translate("wdl")

