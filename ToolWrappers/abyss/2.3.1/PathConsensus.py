from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, Float, String

Pathconsensus_V0_1_0 = CommandToolBuilder(tool="PathConsensus", base_command=["PathConsensus"], inputs=[ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="k-mer size")), ToolInput(tag="in_dist_error", input_type=Int(optional=True), prefix="--dist-error", doc=InputDocumentation(doc="acceptable error of a distance estimate\ndefault: 6 bp")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="output contig paths to FILE")), ToolInput(tag="in_consensus", input_type=File(optional=True), prefix="--consensus", doc=InputDocumentation(doc="output consensus sequences to FILE")), ToolInput(tag="in_graph", input_type=File(optional=True), prefix="--graph", doc=InputDocumentation(doc="output the contig adjacency graph to FILE")), ToolInput(tag="in_output_graph_adj", input_type=Boolean(optional=True), prefix="--adj", doc=InputDocumentation(doc="output the graph in ADJ format [default]")), ToolInput(tag="in_as_qg", input_type=Boolean(optional=True), prefix="--asqg", doc=InputDocumentation(doc="output the graph in ASQG format")), ToolInput(tag="in_dot", input_type=Boolean(optional=True), prefix="--dot", doc=InputDocumentation(doc="output the graph in GraphViz format")), ToolInput(tag="in_gfa", input_type=Boolean(optional=True), prefix="--gfa", doc=InputDocumentation(doc="output the graph in GFA1 format")), ToolInput(tag="in_gfa_one", input_type=Boolean(optional=True), prefix="--gfa1", doc=InputDocumentation(doc="output the graph in GFA1 format")), ToolInput(tag="in_gfa_two", input_type=Boolean(optional=True), prefix="--gfa2", doc=InputDocumentation(doc="output the graph in GFA2 format")), ToolInput(tag="in_gv", input_type=Boolean(optional=True), prefix="--gv", doc=InputDocumentation(doc="output the graph in GraphViz format")), ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="--sam", doc=InputDocumentation(doc="output the graph in SAM format")), ToolInput(tag="in_branches", input_type=Int(optional=True), prefix="--branches", doc=InputDocumentation(doc="maximum number of sequences to align\ndefault: 4")), ToolInput(tag="in_identity", input_type=Float(optional=True), prefix="--identity", doc=InputDocumentation(doc="minimum identity, default: 0.9")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output")), ToolInput(tag="in_db", input_type=File(optional=True), prefix="--db", doc=InputDocumentation(doc="specify path of database repository in FILE")), ToolInput(tag="in_library", input_type=String(optional=True), prefix="--library", doc=InputDocumentation(doc="specify library NAME for database")), ToolInput(tag="in_strain", input_type=String(optional=True), prefix="--strain", doc=InputDocumentation(doc="specify strain NAME for database")), ToolInput(tag="in_species", input_type=String(optional=True), prefix="--species", doc=InputDocumentation(doc="specify species NAME for database")), ToolInput(tag="in_di_align_d", input_type=Int(optional=True), prefix="--dialign-d", doc=InputDocumentation(doc="dialign debug level, default: 0")), ToolInput(tag="in_di_align_m", input_type=File(optional=True), prefix="--dialign-m", doc=InputDocumentation(doc="score matrix, default: dna_matrix.scr")), ToolInput(tag="in_di_align_p", input_type=File(optional=True), prefix="--dialign-p", doc=InputDocumentation(doc="diagonal length probability distribution\ndefault: dna_diag_prob_100_exp_550000")), ToolInput(tag="in_fast_a", input_type=String(), position=0, doc=InputDocumentation(doc="contigs in FASTA format")), ToolInput(tag="in_contig_adjacency_graph", input_type=String(), position=1, doc=InputDocumentation(doc="contig adjacency graph")), ToolInput(tag="in_path", input_type=File(), position=2, doc=InputDocumentation(doc="paths of these contigs"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="output contig paths to FILE")), ToolOutput(tag="out_consensus", output_type=File(optional=True), selector=InputSelector(input_to_select="in_consensus", type_hint=File()), doc=OutputDocumentation(doc="output consensus sequences to FILE")), ToolOutput(tag="out_graph", output_type=File(optional=True), selector=InputSelector(input_to_select="in_graph", type_hint=File()), doc=OutputDocumentation(doc="output the contig adjacency graph to FILE"))], container="quay.io/biocontainers/abyss:2.3.1--hd403d74_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pathconsensus_V0_1_0().translate("wdl")

