!Command
command:
- env
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --ignore-environment
  description: start with an empty environment
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - '-0'
  - --null
  description: end each output line with NUL, not newline
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  - --unset
  description: remove variable from the environment
  args: !SimpleFlagArg
    name: NAME
- !Flag
  optional: true
  synonyms:
  - -C
  - --chdir
  description: change working directory to DIR
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - -S
  - --split-string
  description: "process and split S into separate arguments;\nused to pass multiple\
    \ arguments on shebang lines"
  args: !SimpleFlagArg
    name: S
- !Flag
  optional: true
  synonyms:
  - --block-signal
  description: '[=SIG]    block delivery of SIG signal(s) to COMMAND'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --default-signal
  description: '[=SIG]  reset handling of SIG signal(s) to the default'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore-signal
  description: '[=SIG]   set handling of SIG signals(s) to do nothing'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --list-signal-handling
  description: list non default signal handling to stderr
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --debug
  description: print verbose information for each processing step
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: env [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]\nSet each\
  \ NAME to VALUE in the environment and run COMMAND.\n\nMandatory arguments to long\
  \ options are mandatory for short options too.\n  -i, --ignore-environment  start\
  \ with an empty environment\n  -0, --null           end each output line with NUL,\
  \ not newline\n  -u, --unset=NAME     remove variable from the environment\n  -C,\
  \ --chdir=DIR      change working directory to DIR\n  -S, --split-string=S  process\
  \ and split S into separate arguments;\n                        used to pass multiple\
  \ arguments on shebang lines\n      --block-signal[=SIG]    block delivery of SIG\
  \ signal(s) to COMMAND\n      --default-signal[=SIG]  reset handling of SIG signal(s)\
  \ to the default\n      --ignore-signal[=SIG]   set handling of SIG signals(s) to\
  \ do nothing\n      --list-signal-handling  list non default signal handling to\
  \ stderr\n  -v, --debug          print verbose information for each processing step\n\
  \      --help     display this help and exit\n      --version  output version information\
  \ and exit\n\nA mere - implies -i.  If no COMMAND, print the resulting environment.\n\
  \nSIG may be a signal name like 'PIPE', or a signal number like '13'.\nWithout SIG,\
  \ all known signals are included.  Multiple signals can be\ncomma-separated.\n\n\
  GNU coreutils online help: <https://www.gnu.org/software/coreutils/>\nReport any\
  \ translation bugs to <https://translationproject.org/team/>\nFull documentation\
  \ <https://www.gnu.org/software/coreutils/env>\nor available locally via: info '(coreutils)\
  \ env invocation'\n"
generated_using:
- --help
docker_image:
