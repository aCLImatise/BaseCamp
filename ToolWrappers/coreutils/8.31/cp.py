from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Directory

Cp_V0_1_0 = CommandToolBuilder(tool="cp", base_command=["cp"], inputs=[ToolInput(tag="in_archive", input_type=Boolean(optional=True), prefix="--archive", doc=InputDocumentation(doc="same as -dR --preserve=all")), ToolInput(tag="in_attributes_only", input_type=Boolean(optional=True), prefix="--attributes-only", doc=InputDocumentation(doc="don't copy the file data, just the attributes")), ToolInput(tag="in_backup", input_type=Boolean(optional=True), prefix="--backup", doc=InputDocumentation(doc="[=CONTROL]       make a backup of each existing destination file")), ToolInput(tag="in__backup_accept", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="like --backup but does not accept an argument")), ToolInput(tag="in_copy_contents", input_type=Boolean(optional=True), prefix="--copy-contents", doc=InputDocumentation(doc="copy contents of special files when recursive")), ToolInput(tag="in_same__nodereference", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="same as --no-dereference --preserve=links")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="if an existing destination file cannot be\nopened, remove it and try again (this option\nis ignored when the -n option is also used)")), ToolInput(tag="in_interactive", input_type=Boolean(optional=True), prefix="--interactive", doc=InputDocumentation(doc="prompt before overwrite (overrides a previous -n\noption)")), ToolInput(tag="in_follow_commandline_links", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="follow command-line symbolic links in SOURCE")), ToolInput(tag="in_link", input_type=Boolean(optional=True), prefix="--link", doc=InputDocumentation(doc="hard link files instead of copying")), ToolInput(tag="in_dereference", input_type=Boolean(optional=True), prefix="--dereference", doc=InputDocumentation(doc="always follow symbolic links in SOURCE")), ToolInput(tag="in_no_clobber", input_type=Boolean(optional=True), prefix="--no-clobber", doc=InputDocumentation(doc="do not overwrite an existing file (overrides\na previous -i option)")), ToolInput(tag="in_no_dereference", input_type=Boolean(optional=True), prefix="--no-dereference", doc=InputDocumentation(doc="never follow symbolic links in SOURCE")), ToolInput(tag="in_same__preservemodeownershiptimestamps", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="same as --preserve=mode,ownership,timestamps")), ToolInput(tag="in_preserve", input_type=Boolean(optional=True), prefix="--preserve", doc=InputDocumentation(doc="[=ATTR_LIST]   preserve the specified attributes (default:\nmode,ownership,timestamps), if possible\nadditional attributes: context, links, xattr,\nall")), ToolInput(tag="in_no_preserve", input_type=String(optional=True), prefix="--no-preserve", doc=InputDocumentation(doc="don't preserve the specified attributes")), ToolInput(tag="in_parents", input_type=Boolean(optional=True), prefix="--parents", doc=InputDocumentation(doc="use full source file name under DIRECTORY")), ToolInput(tag="in_recursive", input_type=Boolean(optional=True), prefix="--recursive", doc=InputDocumentation(doc="copy directories recursively")), ToolInput(tag="in_ref_link", input_type=Boolean(optional=True), prefix="--reflink", doc=InputDocumentation(doc="[=WHEN]         control clone/CoW copies. See below")), ToolInput(tag="in_remove_destination", input_type=Boolean(optional=True), prefix="--remove-destination", doc=InputDocumentation(doc="remove each existing destination file before\nattempting to open it (contrast with --force)")), ToolInput(tag="in_sparse", input_type=String(optional=True), prefix="--sparse", doc=InputDocumentation(doc="control creation of sparse files. See below")), ToolInput(tag="in_strip_trailing_slashes", input_type=Boolean(optional=True), prefix="--strip-trailing-slashes", doc=InputDocumentation(doc="remove any trailing slashes from each SOURCE")), ToolInput(tag="in_suffix", input_type=String(optional=True), prefix="--suffix", doc=InputDocumentation(doc="override the usual backup suffix")), ToolInput(tag="in_target_directory", input_type=Directory(optional=True), prefix="--target-directory", doc=InputDocumentation(doc="copy all SOURCE arguments into DIRECTORY")), ToolInput(tag="in_no_target_directory", input_type=Boolean(optional=True), prefix="--no-target-directory", doc=InputDocumentation(doc="treat DEST as a normal file")), ToolInput(tag="in_update", input_type=Boolean(optional=True), prefix="--update", doc=InputDocumentation(doc="copy only when the SOURCE file is newer\nthan the destination file or when the\ndestination file is missing")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="explain what is being done")), ToolInput(tag="in_one_file_system", input_type=Boolean(optional=True), prefix="--one-file-system", doc=InputDocumentation(doc="stay on this file system")), ToolInput(tag="in_set_security_context", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="set SELinux security context of destination\nfile to default type")), ToolInput(tag="in_context", input_type=Boolean(optional=True), prefix="--context", doc=InputDocumentation(doc="[=CTX]          like -Z, or if CTX is specified then set the\nSELinux or SMACK security context to CTX")), ToolInput(tag="in_argument", input_type=String(), position=0, doc=InputDocumentation(doc="-s, --symbolic-link          make symbolic links instead of copying"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cp_V0_1_0().translate("wdl", allow_empty_container=True)

