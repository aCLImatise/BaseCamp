from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Stty_V0_1_0 = CommandToolBuilder(tool="stty", base_command=["stty"], inputs=[ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="--all", doc=InputDocumentation(doc="print all current settings in human-readable form")), ToolInput(tag="in_save", input_type=Boolean(optional=True), prefix="--save", doc=InputDocumentation(doc="print all current settings in a stty-readable form")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="--file", doc=InputDocumentation(doc="open and use the specified DEVICE instead of stdin")), ToolInput(tag="in_var_3", input_type=Boolean(optional=True), prefix="-cbreak", doc=InputDocumentation(doc="same as icanon")), ToolInput(tag="in_same_as_raw", input_type=Boolean(optional=True), prefix="-cooked", doc=InputDocumentation(doc="same as raw")), ToolInput(tag="in_var_5", input_type=Boolean(optional=True), prefix="-evenp", doc=InputDocumentation(doc="same as -parenb cs8")), ToolInput(tag="in_var_6", input_type=Boolean(optional=True), prefix="-litout", doc=InputDocumentation(doc="same as parenb istrip opost cs7")), ToolInput(tag="in_same_icrnl_inlcr_igncr", input_type=Boolean(optional=True), prefix="-nl", doc=InputDocumentation(doc="same as icrnl -inlcr -igncr onlcr -ocrnl -onlret")), ToolInput(tag="in_var_8", input_type=Boolean(optional=True), prefix="-oddp", doc=InputDocumentation(doc="same as -parenb cs8")), ToolInput(tag="in_var_9", input_type=Boolean(optional=True), prefix="-pass8", doc=InputDocumentation(doc="same as parenb istrip cs7")), ToolInput(tag="in_imax_bel", input_type=Int(optional=True), prefix="-imaxbel", doc=InputDocumentation(doc="1 time 0")), ToolInput(tag="in_same_as_cooked", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="same as cooked")), ToolInput(tag="in_speed", input_type=String(), position=0, doc=InputDocumentation(doc="print the terminal speed")), ToolInput(tag="in_csn", input_type=String(), position=0, doc=InputDocumentation(doc="set character size to N bits, N in [5..8]")), ToolInput(tag="in_var_14", input_type=String(), position=0, doc=InputDocumentation(doc="same as -icanon")), ToolInput(tag="in_same_ignpar_istrip", input_type=String(), position=1, doc=InputDocumentation(doc="same as brkint ignpar istrip icrnl ixon opost isig\nicanon, eof and eol characters to their default values")), ToolInput(tag="in_crt", input_type=String(), position=2, doc=InputDocumentation(doc="same as echoe echoctl echoke")), ToolInput(tag="in_dec", input_type=String(), position=3, doc=InputDocumentation(doc="same as echoe echoctl echoke -ixany intr ^c erase 0177\nkill ^u")), ToolInput(tag="in_ek", input_type=String(), position=0, doc=InputDocumentation(doc="erase and kill characters to their default values")), ToolInput(tag="in_var_19", input_type=String(), position=1, doc=InputDocumentation(doc="same as parenb -parodd cs7")), ToolInput(tag="in_var_20", input_type=String(), position=0, doc=InputDocumentation(doc="same as -parenb -istrip -opost cs8")), ToolInput(tag="in_same_icrnl_onlcr", input_type=String(), position=1, doc=InputDocumentation(doc="same as -icrnl -onlcr")), ToolInput(tag="in_var_22", input_type=String(), position=2, doc=InputDocumentation(doc="same as parenb parodd cs7")), ToolInput(tag="in_var_23", input_type=Int(), position=0, doc=InputDocumentation(doc="same as -parenb -istrip cs8")), ToolInput(tag="in_same_ignbrk_brkint", input_type=String(), position=1, doc=InputDocumentation(doc="same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip")), ToolInput(tag="in_sane", input_type=String(), position=2, doc=InputDocumentation(doc="same as cread -ignbrk brkint -inlcr -igncr icrnl\nicanon iexten echo echoe echok -echonl -noflsh\n-ixoff -iutf8 -iuclc -ixany imaxbel -xcase -olcuc -ocrnl\nopost -ofill onlcr -onocr -onlret nl0 cr0 tab0 bs0 vt0 ff0\nisig -tostop -ofdel -echoprt echoctl echoke -flusho,\nall special characters to their default values"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Stty_V0_1_0().translate("wdl", allow_empty_container=True)

