!Command
command:
- base64
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -d
  - --decode
  description: decode data
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --ignore-garbage
  description: when decoding, ignore non-alphabet characters
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  - --wrap
  description: "wrap encoded lines after COLS character (default 76).\nUse 0 to disable\
    \ line wrapping"
  args: !SimpleFlagArg
    name: COLS
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: base64 [OPTION]... [FILE]\nBase64 encode or decode FILE, or standard\
  \ input, to standard output.\n\nWith no FILE, or when FILE is -, read standard input.\n\
  \nMandatory arguments to long options are mandatory for short options too.\n  -d,\
  \ --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet\
  \ characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default\
  \ 76).\n                          Use 0 to disable line wrapping\n\n      --help\
  \     display this help and exit\n      --version  output version information and\
  \ exit\n\nThe data are encoded as described for the base64 alphabet in RFC 4648.\n\
  When decoding, the input may contain newlines in addition to the bytes of\nthe formal\
  \ base64 alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet\
  \ bytes in the encoded stream.\n\nGNU coreutils online help: <https://www.gnu.org/software/coreutils/>\n\
  Report any translation bugs to <https://translationproject.org/team/>\nFull documentation\
  \ <https://www.gnu.org/software/coreutils/base64>\nor available locally via: info\
  \ '(coreutils) base64 invocation'\n"
generated_using:
- --help
docker_image:
