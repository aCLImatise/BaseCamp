from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Float

Tail_V0_1_0 = CommandToolBuilder(tool="tail", base_command=["tail"], inputs=[ToolInput(tag="in_bytes", input_type=Boolean(optional=True), prefix="--bytes", doc=InputDocumentation(doc="=[+]NUM       output the last NUM bytes; or use -c +NUM to\noutput starting with byte NUM of each file")), ToolInput(tag="in_follow", input_type=File(optional=True), prefix="--follow", doc=InputDocumentation(doc="[={name|descriptor}]\noutput appended data as the file grows;\nan absent option argument means 'descriptor'")), ToolInput(tag="in_same__followname", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="same as --follow=name --retry")), ToolInput(tag="in_lines", input_type=Boolean(optional=True), prefix="--lines", doc=InputDocumentation(doc="=[+]NUM       output the last NUM lines, instead of the last 10;\nor use -n +NUM to output starting with line NUM")), ToolInput(tag="in_max_unchanged_stats", input_type=Int(optional=True), prefix="--max-unchanged-stats", doc=InputDocumentation(doc="with --follow=name, reopen a FILE which has not\nchanged size after N (default 5) iterations\nto see if it has been unlinked or renamed\n(this is the usual case of rotated log files);\nwith inotify, this option is rarely useful")), ToolInput(tag="in_pid", input_type=String(optional=True), prefix="--pid", doc=InputDocumentation(doc="with -f, terminate after process ID, PID dies")), ToolInput(tag="in_silent", input_type=File(optional=True), prefix="--silent", doc=InputDocumentation(doc="never output headers giving file names")), ToolInput(tag="in_retry", input_type=Boolean(optional=True), prefix="--retry", doc=InputDocumentation(doc="keep trying to open a file if it is inaccessible")), ToolInput(tag="in_sleep_interval", input_type=Float(optional=True), prefix="--sleep-interval", doc=InputDocumentation(doc="with -f, sleep for approximately N seconds\n(default 1.0) between iterations;\nwith inotify and --pid=P, check process P at\nleast once every N seconds")), ToolInput(tag="in_verbose", input_type=File(optional=True), prefix="--verbose", doc=InputDocumentation(doc="always output headers giving file names")), ToolInput(tag="in_zero_terminated", input_type=Boolean(optional=True), prefix="--zero-terminated", doc=InputDocumentation(doc="line delimiter is NUL, not newline"))], outputs=[ToolOutput(tag="out_follow", output_type=File(optional=True), selector=InputSelector(input_to_select="in_follow", type_hint=File()), doc=OutputDocumentation(doc="[={name|descriptor}]\noutput appended data as the file grows;\nan absent option argument means 'descriptor'")), ToolOutput(tag="out_silent", output_type=File(optional=True), selector=InputSelector(input_to_select="in_silent", type_hint=File()), doc=OutputDocumentation(doc="never output headers giving file names")), ToolOutput(tag="out_verbose", output_type=File(optional=True), selector=InputSelector(input_to_select="in_verbose", type_hint=File()), doc=OutputDocumentation(doc="always output headers giving file names"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tail_V0_1_0().translate("wdl", allow_empty_container=True)

