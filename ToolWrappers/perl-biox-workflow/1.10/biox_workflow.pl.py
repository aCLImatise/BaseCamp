from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Biox_Workflow_Pl_V0_1_0 = CommandToolBuilder(tool="biox_workflow.pl", base_command=["biox-workflow.pl"], inputs=[ToolInput(tag="in_workflow", input_type=Boolean(optional=True), prefix="--workflow", doc=InputDocumentation(doc="- ExistingFile. Your configuration workflow")), ToolInput(tag="in_by_sample_outdir", input_type=Boolean(optional=True), prefix="--by_sample_outdir", doc=InputDocumentation(doc="- Bool. Default=0. When you want your output by")), ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="--samples", doc=InputDocumentation(doc="- ArrayRef. Supply samples on the command line\nas --samples sample1 --samples sample2, or\nfind through file_rule.")), ToolInput(tag="in_file_rule", input_type=Boolean(optional=True), prefix="--file_rule", doc=InputDocumentation(doc="- Str.")), ToolInput(tag="in_save_object_env", input_type=Boolean(optional=True), prefix="--save_object_env", doc=InputDocumentation(doc="- Bool. Default=0.")), ToolInput(tag="in_auto_name", input_type=Boolean(optional=True), prefix="--auto_name", doc=InputDocumentation(doc="- Bool. Default=1.")), ToolInput(tag="in_auto_input", input_type=Boolean(optional=True), prefix="--auto_input", doc=InputDocumentation(doc="- Bool. Default=1.")), ToolInput(tag="in_in_dir", input_type=Boolean(optional=True), prefix="--indir", doc=InputDocumentation(doc="- AbsPath. Directory to look for samples")), ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--INPUT", doc=InputDocumentation(doc="- Str|Undef. See $OUTPUT")), ToolInput(tag="in_output", input_type=Boolean(optional=True), prefix="--OUTPUT", doc=InputDocumentation(doc="- Str|Undef. At the end of each process the\nOUTPUT becomes\nthe INPUT.")), ToolInput(tag="in_create_outdir", input_type=Boolean(optional=True), prefix="--create_outdir", doc=InputDocumentation(doc="- Bool. Default=1. Create the outdir. You may\nwant to turn this off if doing a rule that\ndoesn't write anything, such as checking if\nfiles exist")), ToolInput(tag="in_outdir", input_type=Boolean(optional=True), prefix="--outdir", doc=InputDocumentation(doc="- AbsPath. Output directories for rules and")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="--min", doc=InputDocumentation(doc="- Bool. Default=0.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="- Bool. Default=1.")), ToolInput(tag="in_wait", input_type=Boolean(optional=True), prefix="--wait", doc=InputDocumentation(doc="- Bool. Default=1. Print 'wait' at the end of\neach rule. If you are running as a plain\nbash script you probably don't need this.")), ToolInput(tag="in_match_rules", input_type=Boolean(optional=True), prefix="--match_rules", doc=InputDocumentation(doc="- ArrayRef[Str]. Select a subselection of rules\nby regular expression")), ToolInput(tag="in_number_rules", input_type=Boolean(optional=True), prefix="--number_rules", doc=InputDocumentation(doc="- Bool. Default=0.")), ToolInput(tag="in_override_process", input_type=Boolean(optional=True), prefix="--override_process", doc=InputDocumentation(doc="- Bool. Default=0. Instead of for my $sample\n(@sample){ DO STUFF } just DOSTUFF")), ToolInput(tag="in_select_rules", input_type=Boolean(optional=True), prefix="--select_rules", doc=InputDocumentation(doc="- ArrayRef[Str]. Select a subselection of rules.")), ToolInput(tag="in_counter_rules", input_type=Boolean(optional=True), prefix="--counter_rules", doc=InputDocumentation(doc="- Num. Default=1.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="- Bool. Display man page")), ToolInput(tag="in_comment_char", input_type=Boolean(optional=True), prefix="--comment_char", doc=InputDocumentation(doc="- Str. Default=#.")), ToolInput(tag="in_rule_based", input_type=Boolean(optional=True), prefix="--rule_based", doc=InputDocumentation(doc="- Bool. Default=1.")), ToolInput(tag="in_sample_based", input_type=Boolean(optional=True), prefix="--sample_based", doc=InputDocumentation(doc="- Bool. Default=0.")), ToolInput(tag="in_stash", input_type=Boolean(optional=True), prefix="--stash", doc=InputDocumentation(doc="- HashRef.")), ToolInput(tag="in_plugins", input_type=Boolean(optional=True), prefix="--plugins", doc=InputDocumentation(doc="- ArrayRef.")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="Optional:")), ToolInput(tag="in_sample", input_type=String(), position=1, doc=InputDocumentation(doc="--find_by_dir      - Bool. Default=0. Use this option when you")), ToolInput(tag="in_processes", input_type=String(), position=0, doc=InputDocumentation(doc="--coerce_paths     - Bool. Default=1. "))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Biox_Workflow_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

