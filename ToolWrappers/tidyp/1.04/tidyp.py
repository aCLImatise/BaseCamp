from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Tidyp_V0_1_0 = CommandToolBuilder(tool="tidyp", base_command=["tidyp"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="-output", doc=InputDocumentation(doc="write output to the specified <file>")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="-config", doc=InputDocumentation(doc="set configuration options from the specified <file>")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="-file", doc=InputDocumentation(doc="write errors and warnings to the specified <file>")), ToolInput(tag="in_modify", input_type=Boolean(optional=True), prefix="-modify", doc=InputDocumentation(doc="modify the original input files")), ToolInput(tag="in_indent", input_type=Boolean(optional=True), prefix="-indent", doc=InputDocumentation(doc="indent element content")), ToolInput(tag="in_wrap", input_type=Int(optional=True), prefix="-wrap", doc=InputDocumentation(doc="wrap text at the specified <column>. 0 is assumed if")), ToolInput(tag="in_upper", input_type=Boolean(optional=True), prefix="-upper", doc=InputDocumentation(doc="force tags to upper case")), ToolInput(tag="in_clean", input_type=Boolean(optional=True), prefix="-clean", doc=InputDocumentation(doc="replace FONT, NOBR and CENTER tags by CSS")), ToolInput(tag="in_bare", input_type=Boolean(optional=True), prefix="-bare", doc=InputDocumentation(doc="strip out smart quotes and em dashes, etc.")), ToolInput(tag="in_numeric", input_type=Boolean(optional=True), prefix="-numeric", doc=InputDocumentation(doc="output numeric rather than named entities")), ToolInput(tag="in_errors", input_type=Boolean(optional=True), prefix="-errors", doc=InputDocumentation(doc="show only errors and warnings")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="suppress nonessential output")), ToolInput(tag="in_omit", input_type=Boolean(optional=True), prefix="-omit", doc=InputDocumentation(doc="omit optional end tags")), ToolInput(tag="in_xml", input_type=Boolean(optional=True), prefix="-xml", doc=InputDocumentation(doc="specify the input is well formed XML")), ToolInput(tag="in_as_xhtml", input_type=Boolean(optional=True), prefix="-asxhtml", doc=InputDocumentation(doc="convert HTML to well formed XHTML")), ToolInput(tag="in_as_html", input_type=Boolean(optional=True), prefix="-ashtml", doc=InputDocumentation(doc="force XHTML to well formed HTML")), ToolInput(tag="in_access", input_type=Int(optional=True), prefix="-access", doc=InputDocumentation(doc="do additional accessibility checks (<level> = 0, 1, 2, 3).\n0 is assumed if <level> is missing.")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="output values above 127 without conversion to entities")), ToolInput(tag="in_ascii", input_type=Boolean(optional=True), prefix="-ascii", doc=InputDocumentation(doc="use ISO-8859-1 for input, US-ASCII for output")), ToolInput(tag="in_latin_zero", input_type=Boolean(optional=True), prefix="-latin0", doc=InputDocumentation(doc="use ISO-8859-15 for input, US-ASCII for output")), ToolInput(tag="in_latin_one", input_type=Boolean(optional=True), prefix="-latin1", doc=InputDocumentation(doc="use ISO-8859-1 for both input and output")), ToolInput(tag="in_iso_two_zero_two_two", input_type=Boolean(optional=True), prefix="-iso2022", doc=InputDocumentation(doc="use ISO-2022 for both input and output")), ToolInput(tag="in_utf_eight", input_type=Boolean(optional=True), prefix="-utf8", doc=InputDocumentation(doc="use UTF-8 for both input and output")), ToolInput(tag="in_mac", input_type=Boolean(optional=True), prefix="-mac", doc=InputDocumentation(doc="use MacRoman for input, US-ASCII for output")), ToolInput(tag="in_win_one_two_five_two", input_type=Boolean(optional=True), prefix="-win1252", doc=InputDocumentation(doc="use Windows-1252 for input, US-ASCII for output")), ToolInput(tag="in_ibm_eight_five_eight", input_type=Boolean(optional=True), prefix="-ibm858", doc=InputDocumentation(doc="use IBM-858 (CP850+Euro) for input, US-ASCII for output")), ToolInput(tag="in_utf_one_six_le", input_type=Boolean(optional=True), prefix="-utf16le", doc=InputDocumentation(doc="use UTF-16LE for both input and output")), ToolInput(tag="in_utf_one_six_be", input_type=Boolean(optional=True), prefix="-utf16be", doc=InputDocumentation(doc="use UTF-16BE for both input and output")), ToolInput(tag="in_utf_one_six", input_type=Boolean(optional=True), prefix="-utf16", doc=InputDocumentation(doc="use UTF-16 for both input and output")), ToolInput(tag="in_big_five", input_type=Boolean(optional=True), prefix="-big5", doc=InputDocumentation(doc="use Big5 for both input and output")), ToolInput(tag="in_shift_jis", input_type=Boolean(optional=True), prefix="-shiftjis", doc=InputDocumentation(doc="use Shift_JIS for both input and output")), ToolInput(tag="in_language", input_type=String(optional=True), prefix="-language", doc=InputDocumentation(doc="set the two-letter language code <lang> (for future use)")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="show the version of Tidy")), ToolInput(tag="in_xml_help", input_type=Boolean(optional=True), prefix="-xml-help", doc=InputDocumentation(doc="list the command line options in XML format")), ToolInput(tag="in_help_config", input_type=Boolean(optional=True), prefix="-help-config", doc=InputDocumentation(doc="list all configuration options")), ToolInput(tag="in_xml_config", input_type=Boolean(optional=True), prefix="-xml-config", doc=InputDocumentation(doc="list all configuration options in XML format")), ToolInput(tag="in_show_config", input_type=Boolean(optional=True), prefix="-show-config", doc=InputDocumentation(doc="list the current configuration settings"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write output to the specified <file>"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tidyp_V0_1_0().translate("wdl", allow_empty_container=True)

