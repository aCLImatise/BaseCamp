from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, Float, String

Kinsimriboswitch_V0_1_0 = CommandToolBuilder(tool="kinSimRiboswitch", base_command=["kinSimRiboswitch"], inputs=[ToolInput(tag="in_energy_band_width", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc=":    Energy band width (in kcal) in which structures are completely\nenumerated. [15]\nTo achieve reasonable runtimes, use RNAsubopt -e <xx> | wc -l to\ncount the structures and keep it below a few millions.")), ToolInput(tag="in_minimal_barrier_height", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc=":    Minimal barrier height (barriers --minh). [1]\nMinima seperated from their respective father by a lower barrier\nare merged with it.")), ToolInput(tag="in_folding_temperature_isperformed", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc=":    Folding temperature in deg Celsius at which the simulation is\nperformed. [37]")), ToolInput(tag="in_allows_lonely_pairs", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=":       Allows lonely pairs. By default, only 'canonical' structures\n(i.e. such without any lonely pairs) are generated.")), ToolInput(tag="in_remove_disconnected_structures", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=":       Remove disconnected structures (i.e. not reachable from mfe)\ninstead of trying to connect them with the findpath heuristic.")), ToolInput(tag="in_file_containing_structures", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc=":    File containing additional structures to be included into the\nsimulation, e.g. waterfall output.")), ToolInput(tag="in_let_barriers_output", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Let barriers output a list of contact / transient states, ie\nthose having a neighbor in a different basin.")), ToolInput(tag="in_skip_generation_use", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc=":       Skip generation of macro states but use existing files as input.\nPass file names of barriers files of monomer and dimer world as\npositional parameters. Assumes existence of BARFILE_FULL.sbmap.\nOnly the options below and -T will have an effect if -M is\ngiven. Use the same temperature as during the generation of the\nmacro states, or the rates will be incorrect.")), ToolInput(tag="in_ii_use_basin", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="/ii: Use the monomer basin containing structure <ss> as start state\nfor the simulation. By default, the basin containing the open\nchain (i.e. without any basepairs) is used.\nWhen passing an integer <ii>, it's used as start state directly.\nWhen removing disconnected states (-r), <ii> does NOT\nnecessarily correspond to the macrostate number from Barriers\n(e.g. for macrostates 1, 2, 3 where 2 has been removed, -s 2\nstarts in macrostate 3). To refer directly to Barriers'\nmacrostates, use prefixes mon and dim (e.g. -s mon15 or -s dim1)\nfor monomer or dimer macrostates, respectively. Phew!")), ToolInput(tag="in_ligand_concentration_mol", input_type=Float(optional=True), prefix="-L", doc=InputDocumentation(doc=":    Ligand concentration in molar =  mol / l = mol / dm^3 in the\ncell [1e-3]")), ToolInput(tag="in_bonus_energy_binding", input_type=Float(optional=True), prefix="-B", doc=InputDocumentation(doc=":    Bonus energy for binding the ligand (>=0, in kcal/mol). With -M,\nspecifying -B will re-compute the monomer<->dimer transition\nmatrix, else the existing one is used. [9.59]")), ToolInput(tag="in_folding_rate_rna", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc=":       Folding rate of RNA in s^-1 (pre-exponential factor). [1e6]")), ToolInput(tag="in_dimerization_rate_factor", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc=":       Dimerization rate in (M s)^-1 (pre-exponential factor). [1.7e5]")), ToolInput(tag="in__simulation_time", input_type=Float(optional=True), prefix="-t", doc=InputDocumentation(doc=":    Simulation time. [1e16]")), ToolInput(tag="in_force_run_exists", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=":       Force run, even if a lock file exists. If a lock file is found\nand -f is not given, the user is promted to confirm the run.")), ToolInput(tag="in_args", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_dot_fast_a", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_file_containing_structures", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_containing_structures", type_hint=File()), doc=OutputDocumentation(doc=":    File containing additional structures to be included into the\nsimulation, e.g. waterfall output."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kinsimriboswitch_V0_1_0().translate("wdl", allow_empty_container=True)

