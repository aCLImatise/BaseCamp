from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, Int, File, String, Boolean

Tombo_Detect_Modifications_Level_Sample_Compare_V0_1_0 = CommandToolBuilder(tool="tombo_detect_modifications_level_sample_compare", base_command=["tombo", "detect_modifications", "level_sample_compare"], inputs=[ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_file_base_name", input_type=File(optional=True), prefix="--statistics-file-basename", doc=InputDocumentation(doc="File base name to save base by base statistics from\ntesting. Filenames will be [--statistics-file-\nbasename].[--alternate-bases]?.tombo.stats")), ToolInput(tag="in_alternate_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--alternate-fast5-basedirs", doc=InputDocumentation(doc="Set of directories containing fast5 files for\nalternate set of reads.")), ToolInput(tag="in_fishers_method_context", input_type=Int(optional=True), prefix="--fishers-method-context", doc=InputDocumentation(doc="Number of context bases up and downstream over which\nto compute Fisher's method combined p-values. Note:\nNot applicable for alternative model likelihood ratio\ntests. Default: 1.")), ToolInput(tag="in_minimum_test_reads", input_type=Int(optional=True), prefix="--minimum-test-reads", doc=InputDocumentation(doc="Number of reads required at a position to perform\nsignificance testing or contribute to model\nestimation. Default: 50")), ToolInput(tag="in_statistic_type", input_type=String(optional=True), prefix="--statistic-type", doc=InputDocumentation(doc="Type of statistical test to apply. Default: 'ks'")), ToolInput(tag="in_store_p_value", input_type=Boolean(optional=True), prefix="--store-p-value", doc=InputDocumentation(doc="Store p-value instead of effect-size statistic.\nStatistics are D-statistic (KS-test), deviation from\neven common language effect size (u-test), and Cohen's\nD (t-test).")), ToolInput(tag="in_num_most_significant_stored", input_type=Int(optional=True), prefix="--num-most-significant-stored", doc=InputDocumentation(doc="Number of the most significant sites to store for\nfaster access. If a longer list of most significant\nsites is required the list must be re-computed from\nall batches. Very large values can increase RAM usage.\nDefault: 100000")), ToolInput(tag="in_multiprocess_region_size", input_type=Int(optional=True), prefix="--multiprocess-region-size", doc=InputDocumentation(doc="Size of regions over which to multiprocesses statistic\ncomputation. For very deep samples a smaller value is\nrecommmended in order to control memory consumption.\nDefault: 10000")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes. Default: 1")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under /Analyses/[--basecall-\ngroup]/) containing basecalls and created within\n[--corrected-group] containing re-squiggle results.\nDefault: ['BaseCalled_template']")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information.")), ToolInput(tag="in__alternatefastbasedirs", input_type=String(), position=0, doc=InputDocumentation(doc="--alternate-fast5-basedirs"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Detect_Modifications_Level_Sample_Compare_V0_1_0().translate("wdl", allow_empty_container=True)

