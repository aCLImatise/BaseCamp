from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, Int, String, File, Boolean

Tombo_Plot_Motif_Centered_V0_1_0 = CommandToolBuilder(tool="tombo_plot_motif_centered", base_command=["tombo", "plot", "motif_centered"], inputs=[ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_motif", input_type=String(optional=True), prefix="--motif", doc=InputDocumentation(doc="Motif of interest at which to plot signal and\nstatsitics. Supports IUPAC single letter codes (use T\nfor RNA).")), ToolInput(tag="in_genome_fast_a", input_type=File(optional=True), prefix="--genome-fasta", doc=InputDocumentation(doc="FASTA file used to re-squiggle. For faster sequence\naccess.")), ToolInput(tag="in_control_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--control-fast5-basedirs", doc=InputDocumentation(doc="Set of directories containing fast5 files for control\nreads, containing only canonical nucleotides.")), ToolInput(tag="in_plot_standard_model", input_type=Boolean(optional=True), prefix="--plot-standard-model", doc=InputDocumentation(doc="Add default standard model distribution to the plot.")), ToolInput(tag="in_plot_alternate_model", input_type=String(optional=True), prefix="--plot-alternate-model", doc=InputDocumentation(doc="Add alternative model distribution to the plot.")), ToolInput(tag="in_over_plot_threshold", input_type=Int(optional=True), prefix="--overplot-threshold", doc=InputDocumentation(doc="Coverage level to trigger alternative plot type\ninstead of raw signal. Default: 50")), ToolInput(tag="in_over_plot_type", input_type=String(optional=True), prefix="--overplot-type", doc=InputDocumentation(doc="Plot type for regions with higher coverage. Default:\nDownsample")), ToolInput(tag="in_num_regions", input_type=Int(optional=True), prefix="--num-regions", doc=InputDocumentation(doc="Number of regions to plot. Default: 10")), ToolInput(tag="in_num_bases", input_type=Int(optional=True), prefix="--num-bases", doc=InputDocumentation(doc="Number of bases to plot/output. Default: 21")), ToolInput(tag="in_deepest_coverage", input_type=Boolean(optional=True), prefix="--deepest-coverage", doc=InputDocumentation(doc="Plot the deepest coverage regions.")), ToolInput(tag="in_pdf_filename", input_type=File(optional=True), prefix="--pdf-filename", doc=InputDocumentation(doc="PDF filename to store plot(s). Default:\ntombo_results.motif_centered.pdf")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under /Analyses/[--basecall-\ngroup]/) containing basecalls and created within\n[--corrected-group] containing re-squiggle results.\nDefault: ['BaseCalled_template']")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Plot_Motif_Centered_V0_1_0().translate("wdl", allow_empty_container=True)

