from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Array, String, Directory, Boolean, File

Run_Breakseq2_Py_V0_1_0 = CommandToolBuilder(tool="run_breakseq2.py", base_command=["run_breakseq2.py"], inputs=[ToolInput(tag="in_n_threads", input_type=Int(optional=True), prefix="--nthreads", doc=InputDocumentation(doc="Number of processes to use for parallelism (default:\n1)")), ToolInput(tag="in_bams", input_type=Array(t=String(), optional=True), prefix="--bams", doc=InputDocumentation(doc="Alignment BAMs (default: [])")), ToolInput(tag="in_work", input_type=Directory(optional=True), prefix="--work", doc=InputDocumentation(doc="Working directory (default: work)")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List of chromosomes to process (default: [])")), ToolInput(tag="in_reference", input_type=String(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference FASTA (default: None)")), ToolInput(tag="in_sample", input_type=String(optional=True), prefix="--sample", doc=InputDocumentation(doc="Sample name. Leave unspecified to infer sample name\nfrom BAMs. (default: None)")), ToolInput(tag="in_keep_temp", input_type=Boolean(optional=True), prefix="--keep_temp", doc=InputDocumentation(doc="Keep temporary files (default: False)")), ToolInput(tag="in_bp_lib", input_type=String(optional=True), prefix="--bplib", doc=InputDocumentation(doc="Breakpoint library FASTA (default: None)")), ToolInput(tag="in_bwa", input_type=File(optional=True), prefix="--bwa", doc=InputDocumentation(doc="Path to BWA executable (default: None)")), ToolInput(tag="in_sam_tools", input_type=File(optional=True), prefix="--samtools", doc=InputDocumentation(doc="Path to SAMtools executable (default: None)")), ToolInput(tag="in_min_span", input_type=Int(optional=True), prefix="--min_span", doc=InputDocumentation(doc="Minimum span for junction (default: 10)")), ToolInput(tag="in_window", input_type=Int(optional=True), prefix="--window", doc=InputDocumentation(doc="Window size (default: 100)")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="--min_overlap", doc=InputDocumentation(doc="Min overlap (default: 10)")), ToolInput(tag="in_bp_lib_gff", input_type=String(optional=True), prefix="--bplib_gff", doc=InputDocumentation(doc="Breakpoint GFF input (default: None)")), ToolInput(tag="in_junction_length", input_type=Int(optional=True), prefix="--junction_length", doc=InputDocumentation(doc="Junction length (default: 200)")), ToolInput(tag="in_format_version", input_type=String(optional=True), prefix="--format_version", doc=InputDocumentation(doc="Version of breakpoint library format to use (default:\n2)\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Breakseq2_Py_V0_1_0().translate("wdl", allow_empty_container=True)

