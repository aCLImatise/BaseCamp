!Command
command:
- csvtk
- unfold
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --fields
  description: field to expand, only one field is allowed. type "csvtk unfold -h"
    for examples
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -s
  - --separater
  description: separater for folded values (default "; ")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -c
  - --chunk-size
  description: chunk size of CSV reader (default 50)
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -C
  - --comment-char
  description: lines starting with commment-character will be ignored. if your header
    row starts with '#', please assign "-C" another rare symbol, e.g. '$' (default
    "#")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -d
  - --delimiter
  description: delimiting character of the input CSV file (default ",")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -E
  - --ignore-empty-row
  description: ignore empty rows
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -I
  - --ignore-illegal-row
  description: ignore illegal rows
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --infile-list
  description: file of input files list (one file per line), if given, they are appended
    to files from cli arguments
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -l
  - --lazy-quotes
  description: if given, a quote may appear in an unquoted field and a non-doubled
    quote may appear in a quoted field
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -H
  - --no-header-row
  description: specifies that the input CSV file does not have header row
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  - --num-cpus
  description: number of CPUs to use (default value depends on your computer) (default
    2)
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -D
  - --out-delimiter
  description: delimiting character of the output CSV file, e.g., -D $'\t' for tab
    (default ",")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -o
  - --out-file
  description: out file ("-" for stdout, suffix .gz for gzipped out) (default "-")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -T
  - --out-tabs
  description: specifies that the output is delimited with tabs. Overrides "-D"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --tabs
  description: specifies that the input CSV file is delimited with tabs. Overrides
    "-d"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: help for unfold
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "unfold multiple values in cells of a field\n\nExample:\n\n    $ echo -ne\
  \ \"id,values,meta\\n1,a;b,12\\n2,c,23\\n3,d;e;f,34\\n\" \\\n        | csvtk pretty\n\
  \    id   values   meta\n    1    a;b      12\n    2    c        23\n    3    d;e;f\
  \    34\n\n\n    $ echo -ne \"id,values,meta\\n1,a;b,12\\n2,c,23\\n3,d;e;f,34\\\
  n\" \\\n        | csvtk unfold -f values -s \";\" \\\n        | csvtk pretty\n \
  \   id   values   meta\n    1    a        12\n    1    b        12\n    2    c \
  \       23\n    3    d        34\n    3    e        34\n    3    f        34\n\n\
  Usage:\n  csvtk unfold [flags]\n\nFlags:\n  -f, --fields string      field to expand,\
  \ only one field is allowed. type \"csvtk unfold -h\" for examples\n  -h, --help\
  \               help for unfold\n  -s, --separater string   separater for folded\
  \ values (default \"; \")\n\nGlobal Flags:\n  -c, --chunk-size int         chunk\
  \ size of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
  \ with commment-character will be ignored. if your header row starts with '#', please\
  \ assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter\
  \ string       delimiting character of the input CSV file (default \",\")\n  -E,\
  \ --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row     ignore\
  \ illegal rows\n      --infile-list string     file of input files list (one file\
  \ per line), if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
  \            if given, a quote may appear in an unquoted field and a non-doubled\
  \ quote may appear in a quoted field\n  -H, --no-header-row          specifies that\
  \ the input CSV file does not have header row\n  -j, --num-cpus int           number\
  \ of CPUs to use (default value depends on your computer) (default 2)\n  -D, --out-delimiter\
  \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for tab\
  \ (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout, suffix\
  \ .gz for gzipped out) (default \"-\")\n  -T, --out-tabs               specifies\
  \ that the output is delimited with tabs. Overrides \"-D\"\n  -t, --tabs       \
  \            specifies that the input CSV file is delimited with tabs. Overrides\
  \ \"-d\"\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/csvtk:0.23.0--h9ee0642_0
