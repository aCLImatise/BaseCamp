!Command
command:
- csvtk
- grep
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --delete-matched
  description: delete a pattern right after being matched, this keeps the firstly
    matched data and speedups when using regular expressions
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --fields
  description: comma separated key fields, column name or index. e.g. -f 1-3 or -f
    id,id2 or -F -f "group*" (default "1")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -F
  - --fuzzy-fields
  description: using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --ignore-case
  description: ignore case
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --invert
  description: invert match
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --line-number
  description: print line number as the first column ("n")
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -N
  - --no-highlight
  description: no highlight
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --pattern
  description: query pattern (multiple values supported)
  args: !SimpleFlagArg
    name: strings
- !Flag
  optional: true
  synonyms:
  - -P
  - --pattern-file
  description: pattern files (one pattern per line)
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -r
  - --use-regexp
  description: patterns are regular expression
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: verbose output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --chunk-size
  description: chunk size of CSV reader (default 50)
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -C
  - --comment-char
  description: lines starting with commment-character will be ignored. if your header
    row starts with '#', please assign "-C" another rare symbol, e.g. '$' (default
    "#")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -d
  - --delimiter
  description: delimiting character of the input CSV file (default ",")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -E
  - --ignore-empty-row
  description: ignore empty rows
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -I
  - --ignore-illegal-row
  description: ignore illegal rows
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --infile-list
  description: file of input files list (one file per line), if given, they are appended
    to files from cli arguments
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -l
  - --lazy-quotes
  description: if given, a quote may appear in an unquoted field and a non-doubled
    quote may appear in a quoted field
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -H
  - --no-header-row
  description: specifies that the input CSV file does not have header row
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  - --num-cpus
  description: number of CPUs to use (default value depends on your computer) (default
    8)
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -D
  - --out-delimiter
  description: delimiting character of the output CSV file, e.g., -D $'\t' for tab
    (default ",")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -o
  - --out-file
  description: out file ("-" for stdout, suffix .gz for gzipped out) (default "-")
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -T
  - --out-tabs
  description: specifies that the output is delimited with tabs. Overrides "-D"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --tabs
  description: specifies that the input CSV file is delimited with tabs. Overrides
    "-d" and "-D"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: help for grep
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "grep data by selected fields with patterns/regular expressions\n\nUsage:\n\
  \  csvtk grep [flags]\n\nFlags:\n      --delete-matched        delete a pattern\
  \ right after being matched, this keeps the firstly matched data and speedups when\
  \ using regular expressions\n  -f, --fields string         comma separated key fields,\
  \ column name or index. e.g. -f 1-3 or -f id,id2 or -F -f \"group*\" (default \"\
  1\")\n  -F, --fuzzy-fields          using fuzzy fields, e.g., -F -f \"*name\" or\
  \ -F -f \"id123*\"\n  -h, --help                  help for grep\n  -i, --ignore-case\
  \           ignore case\n  -v, --invert                invert match\n  -n, --line-number\
  \           print line number as the first column (\"n\")\n  -N, --no-highlight\
  \          no highlight\n  -p, --pattern strings       query pattern (multiple values\
  \ supported)\n  -P, --pattern-file string   pattern files (one pattern per line)\n\
  \  -r, --use-regexp            patterns are regular expression\n      --verbose\
  \               verbose output\n\nGlobal Flags:\n  -c, --chunk-size int        \
  \ chunk size of CSV reader (default 50)\n  -C, --comment-char string    lines starting\
  \ with commment-character will be ignored. if your header row starts with '#', please\
  \ assign \"-C\" another rare symbol, e.g. '$' (default \"#\")\n  -d, --delimiter\
  \ string       delimiting character of the input CSV file (default \",\")\n  -E,\
  \ --ignore-empty-row       ignore empty rows\n  -I, --ignore-illegal-row     ignore\
  \ illegal rows\n      --infile-list string     file of input files list (one file\
  \ per line), if given, they are appended to files from cli arguments\n  -l, --lazy-quotes\
  \            if given, a quote may appear in an unquoted field and a non-doubled\
  \ quote may appear in a quoted field\n  -H, --no-header-row          specifies that\
  \ the input CSV file does not have header row\n  -j, --num-cpus int           number\
  \ of CPUs to use (default value depends on your computer) (default 8)\n  -D, --out-delimiter\
  \ string   delimiting character of the output CSV file, e.g., -D $'\\t' for tab\
  \ (default \",\")\n  -o, --out-file string        out file (\"-\" for stdout, suffix\
  \ .gz for gzipped out) (default \"-\")\n  -T, --out-tabs               specifies\
  \ that the output is delimited with tabs. Overrides \"-D\"\n  -t, --tabs       \
  \            specifies that the input CSV file is delimited with tabs. Overrides\
  \ \"-d\" and \"-D\"\n"
generated_using:
- --help
docker_image:
