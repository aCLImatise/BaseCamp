!Command
command:
- rsat
- retrieve-seq
positional:
- !Positional
  description: CATEGORY
  position: 0
  name: genes.
  optional: false
- !Positional
  description: sequences
  position: 1
  name: genomics
  optional: false
- !Positional
  description: field   description
  position: 0
  name: column
  optional: false
named:
- !Flag
  description: "When an organism is specified, the program automatically\nloads the\
    \ appropriate genome sequence and feature table.\nIf this option is not used,\
    \ the option -seq must be used\ninstead.\n(type supported-organism to obtain the\
    \ list of supported\norganisms)"
  synonyms:
  - -org
  args: !SimpleFlagArg
    name: organism
  optional: true
- !Flag
  description: "input sequence file\n(alternative to organism)\nSpecify the input\
    \ sequence file. See INPUT FORMAT\nbelow."
  synonyms:
  - -seq
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: input sequence format
  synonyms:
  - -informat
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: prefix for sequence identifier
  synonyms:
  - -prefix
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Feature type.\nSupported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon"
  synonyms:
  - -feattype
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "sequence type\nCurrently supported sequence types\nupstream (default)\n\
    downstream\norf (warning: introns are not spliced out)\nrandom (random fragments)\n\
    To implement in the future\nintrons\ncoding\nThe sub-option\n-type random\nrequires\
    \ to use the -n for specifying the number of sequences."
  synonyms:
  - -type
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: of sequecnes (only with -type random)
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: number
  optional: true
- !Flag
  description: "The query should be an orf identifier (eg 'metR').\nThe query is case-insensitive.\n\
    Multiple queries can be entered by reiteratively using the -q\noption."
  synonyms:
  - -q
  args: !SimpleFlagArg
    name: query
  optional: true
- !Flag
  description: "query file. The first word of each line is taken as a query.\nThis\
    \ option is incompatible with -q."
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Use this option if the queries are provided as a list\nof IDs. This\
    \ avoids to load the table of synonyms, in\norder tos ave time."
  synonyms:
  - -ids_only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: return all genomic upstream regions
  synonyms:
  - -all
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: name of the output file
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "output features file\nin addition to the sequences, export a feature\
    \ file with the\nchromosomal location of the retrieved sequences."
  synonyms:
  - -oft
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#1 -to #2\nwhere #1 and #2 are numbers. #2 should be higher than #1.\n\
    limits of the region to extract, relative to orf start\n(=position 0). Use negative\
    \ values for upstream sequence.\nexample: -from -800 -to -1\nwill extract the\
    \ 800 bp upstream the orf start.\n(this is the default)"
  synonyms:
  - -from
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "to select different output formats, with the following\noptions:\n\
    IG      IntelliGenetics (default format)\nWC      wconsensus format\nraw     only\
    \ the sequence is returned, without spaces, newlines\nnor comments.\nFastA"
  synonyms:
  - -format
  args: !SimpleFlagArg
    name: allows
  optional: true
- !Flag
  description: "##  Line width. A newline character will be inserted in the\nsequence\
    \ every ## bases. Default is 60.\n-lw 0 will prevent newline insertion."
  synonyms:
  - -lw
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Field(s) to be used in the sequence label.\nDefault: name.\nSupported:\
    \ id,name,query,organism_name,sequence_type,current_from,current_to,ctg,orf_strand,reg_left,reg_right\n\
    Multiple fields can be specified, separated by commas\nin the command line.\n\
    Example:\n-label org,name,id\nIn this case, the sequence identifier will contain\
    \ all\nof these fields, separated by the separator specified\nwith the option\
    \ -labelsep."
  synonyms:
  - -label
  args: !SimpleFlagArg
    name: label_fields
  optional: true
- !Flag
  description: 'Separator between label fields. Default: |'
  synonyms:
  - -labelsep
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "prevent overlap with neighbout genes.\nWhen this option is active,\
    \ the sequence size is\nadapted to avoid including coding sequences of the\nneighbour\
    \ genes.\nThe reason for preventing overlap with upstream genes\nis that (at least\
    \ for microbial organisms, and in\nlarge part for higher eukaryotes) most cis-acting\n\
    elements are located in the non-coding regions. Thus,\nif the neighbour gene is\
    \ closer than the selected\nlimit for collecting upstream sequences, the part\
    \ of\ncoding sequences included it the result is likely to\nadd up to the noise,\
    \ without bringing any additional\nsignal.\nMore importantly, coding and non-coding\
    \ sequences\ngenerally have very different background models. The\ninclusion of\
    \ coding sequences from neighbour genes may\nthus lead to biases in motif discovery.\n\
    The weaknesses of using this option are that, in some\ncases, predicted orf do\
    \ not correspond to real genes,\nThis was particularly frequent in the early versions\n\
    of the yeast genome, but the annotations have been\nimproved since then.\nFor\
    \ bacterial sequences, it is essential to prevent\noverlap with upstream genes,\
    \ because intergenic\ndistances are often very short, especially between\npairs\
    \ of genes comprised in the same operon."
  synonyms:
  - -noorf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Use the repeat masked version of the genome.  Attention :\nrepeated\
    \ regions are annotated for some genomes only."
  synonyms:
  - -rm
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "no comments. Only the identifier and the sequence are\nreturned. By\
    \ default, the comment indicates the ORF and\nupstream sequence coordinates."
  synonyms:
  - -nocom
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Admit imprecise positions.\nIn the annotation of some genomes, the\
    \ limits of some genes\nare imprecisely specified (e.g. <555245, >898098). By\
    \ default,\nthese genes are not loaded. The option -imp_pos allows to\nretrieve\
    \ sequence for these genes as well, using the imprecise\ncoordinate as reference\
    \ position."
  synonyms:
  - -imp_pos
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Prevents warning when a gene cannot be identified.
  synonyms:
  - -nowarn
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#\nSelect a random set of # genes in the genome annotations.\nThis\
    \ option ois obsolete, it has been replaced by a\nseparate command: random-genes.\
    \ The option is\nmaintained for backward compatibility."
  synonyms:
  - -randsels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "length file\n(only with the option '-type random')\nAllows to generate\
    \ random sequences with the same\nlengths as a set of reference sequences. The\
    \ sequence\nlength file can be obtained with the command\nsequence-lengths\nThe\
    \ length file contains two columns :\n- sequence ID (ignored)\n- sequence length"
  synonyms:
  - -lf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "alternate feature table. This option allows to speify\nan alternate\
    \ file where the ORF locations are found.\nSee below for a description of the\
    \ feature file format."
  synonyms:
  - -features
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE\n\tretrieve-seq -type type -org organism\n\t\t\t[-from] [-to] [-format\
  \ seqformat] [-lw line_width]\n\t\t\t[-o outpufile] -q query_orf | -i query file\
  \ | -all\n\nDESCRIPTION\n\tReturns upstream, downstream or coding DNA sequences\
  \ for list of query\n\tgenes.\n\nCATEGORY\n\tgenomics\n\tsequences\n\nOPTIONS\n\t\
  -org organism\n\t     When an organism is specified, the program automatically\n\
  \t     loads the appropriate genome sequence and feature table.\n\n\t     If this\
  \ option is not used, the option -seq must be used\n\t     instead.\n\n\t     (type\
  \ supported-organism to obtain the list of supported\n\t     organisms)\n\n\t-seq\t\
  input sequence file\n\t\t(alternative to organism)\n\n\t\tSpecify the input sequence\
  \ file. See INPUT FORMAT\n\t\tbelow.\n\t-informat\tinput sequence format\n\t-prefix\n\
  \t\tprefix for sequence identifier\n\t-feattype\n\t\tFeature type.\n\t\tSupported:\
  \ gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon\n\t-type\t\
  sequence type\n\t\tCurrently supported sequence types\n\t\t\tupstream (default)\n\
  \t\t\tdownstream\n\t\t\torf (warning: introns are not spliced out)\n\t\t\trandom\
  \ (random fragments)\n\t\tTo implement in the future\n\t\t\tintrons\n\t\t\tcoding\n\
  \n\t\tThe sub-option\n\t\t    -type random\n\t\trequires to use the -n for specifying\
  \ the number of sequences.\n\t-n number of sequecnes (only with -type random)\n\t\
  -q query\n\t\tThe query should be an orf identifier (eg 'metR').\n\t\tThe query\
  \ is case-insensitive.\n\t\tMultiple queries can be entered by reiteratively using\
  \ the -q\n\t\toption.\n        -i     query file. The first word of each line is\
  \ taken as a query.\n                This option is incompatible with -q.\n\n\t\
  -ids_only\n\t\tUse this option if the queries are provided as a list\n\t\tof IDs.\
  \ This avoids to load the table of synonyms, in\n\t\torder tos ave time.\n\t-all\t\
  return all genomic upstream regions\n\n\t-o\tname of the output file\n\n\t-oft\t\
  output features file\n\t\tin addition to the sequences, export a feature file with\
  \ the\n\t\tchromosomal location of the retrieved sequences.\n\n        -from #1\
  \ -to #2\n                where #1 and #2 are numbers. #2 should be higher than\
  \ #1.\n                limits of the region to extract, relative to orf start\n\
  \                (=position 0). Use negative values for upstream sequence.\n   \
  \                     example: -from -800 -to -1\n                        will extract\
  \ the 800 bp upstream the orf start.\n\t\t\t (this is the default)\n\n\t-format\t\
  allows to select different output formats, with the following\n\t\toptions:\n\t\t\
  IG\tIntelliGenetics (default format)\n\t\tWC\twconsensus format\n\t\traw\tonly the\
  \ sequence is returned, without spaces, newlines\n\t\t\tnor comments.\n        \
  \        FastA\n\n\t-lw ##\tLine width. A newline character will be inserted in\
  \ the\n\t\tsequence every ## bases. Default is 60.\n\t\t-lw 0 will prevent newline\
  \ insertion.\n\n        -label label_fields\n\t       Field(s) to be used in the\
  \ sequence label.\n\t       Default: name.\n\t       Supported: id,name,query,organism_name,sequence_type,current_from,current_to,ctg,orf_strand,reg_left,reg_right\n\
  \n\t       Multiple fields can be specified, separated by commas\n\t       in the\
  \ command line.\n\n\t       Example:\n\t\t\t-label org,name,id\n\n\t       In this\
  \ case, the sequence identifier will contain all\n\t       of these fields, separated\
  \ by the separator specified\n\t       with the option -labelsep.\n\n\t-labelsep\n\
  \t\tSeparator between label fields. Default: |\n\n\t-noorf\tprevent overlap with\
  \ neighbout genes.\n\n\t\tWhen this option is active, the sequence size is\n\t\t\
  adapted to avoid including coding sequences of the\n\t\tneighbour genes.\n\n\t\t\
  The reason for preventing overlap with upstream genes\n\t\tis that (at least for\
  \ microbial organisms, and in\n\t\tlarge part for higher eukaryotes) most cis-acting\n\
  \t\telements are located in the non-coding regions. Thus,\n\t\tif the neighbour\
  \ gene is closer than the selected\n\t\tlimit for collecting upstream sequences,\
  \ the part of\n\t\tcoding sequences included it the result is likely to\n\t\tadd\
  \ up to the noise, without bringing any additional\n\t\tsignal.\n\n\t\tMore importantly,\
  \ coding and non-coding sequences\n\t\tgenerally have very different background\
  \ models. The\n\t\tinclusion of coding sequences from neighbour genes may\n\t\t\
  thus lead to biases in motif discovery.\n\n\t\tThe weaknesses of using this option\
  \ are that, in some\n\t\tcases, predicted orf do not correspond to real genes,\n\
  \t\tThis was particularly frequent in the early versions\n\t\tof the yeast genome,\
  \ but the annotations have been\n\t\timproved since then.\n\n\t\tFor bacterial sequences,\
  \ it is essential to prevent\n\t\toverlap with upstream genes, because intergenic\n\
  \t\tdistances are often very short, especially between\n\t\tpairs of genes comprised\
  \ in the same operon.\n\n\n\t-rm     Use the repeat masked version of the genome.\
  \  Attention :\n\t\trepeated regions are annotated for some genomes only.\n\n\t\
  -nocom\tno comments. Only the identifier and the sequence are\n\t\treturned. By\
  \ default, the comment indicates the ORF and\n\t\tupstream sequence coordinates.\n\
  \n\t-imp_pos\n\t\tAdmit imprecise positions.\n\t\tIn the annotation of some genomes,\
  \ the limits of some genes\n\t        are imprecisely specified (e.g. <555245, >898098).\
  \ By default,\n\t        these genes are not loaded. The option -imp_pos allows\
  \ to\n\t        retrieve sequence for these genes as well, using the imprecise\n\
  \t        coordinate as reference position.\n\n\t-nowarn\n\t\tPrevents warning when\
  \ a gene cannot be identified.\n\n\t-randsels #\n\t\tSelect a random set of # genes\
  \ in the genome annotations.\n\t\tThis option ois obsolete, it has been replaced\
  \ by a\n\t\tseparate command: random-genes. The option is\n\t\tmaintained for backward\
  \ compatibility.\n\n\t-lf\tlength file\n\t\t(only with the option '-type random')\n\
  \t\tAllows to generate random sequences with the same\n\t\tlengths as a set of reference\
  \ sequences. The sequence\n\t\tlength file can be obtained with the command\n\t\t\
  \tsequence-lengths\n\t\tThe length file contains two columns :\n\t\t    - sequence\
  \ ID (ignored)\n\t\t    - sequence length\n\n\t-features\n\t\talternate feature\
  \ table. This option allows to speify\n\t\tan alternate file where the ORF locations\
  \ are found.\n\t\tSee below for a description of the feature file format.\n\nINPUT\
  \ FORMATS\n\tInput sequence file\n\t\tSequence file is of type filelist, i.e. this\
  \ file\n\t\tcontains a list of other file names, each of which\n\t\tcontains a raw\
  \ contig sequence (usually a whole\n\t\tchromosome). The raw sequence files cannot\
  \ contain any\n\t\tspace or carriage return : the character position in\n\t\tthe\
  \ file must correspond to the nucleotide position on\n\t\tthe contig.\n\n\tFeature\
  \ file\n\t\tThe feature file contains one line per feature, with\n\t\ttab-delimited\
  \ columns providing the following information:\n\t\tcolumn\tfield   description\n\
  \t\t1\tid\tfeature identifier\n\t\t2\ttype\tfeature type (Supported: gene,mRNA,tRNA,rRNA,scRNA,misc_RNA,CDS,start_codon,stop_codon,exon)\n\
  \t\t3\tname\tfeature name\n\t\t4\tctg\tchomosome.or contig\n\t\t5\tleft\tleft end\
  \ position\n\t\t6\tright\tright end position\n\t\t7\tstrand\tD (direct) or R (reverse)\n\
  \t\t8\tdescr\tshort description (optional)\n\nEXAMPLES\n\tretrieve-seq -type upstream\
  \ -org Escherichia_coli_GCF_000005845.2_ASM584v2 \\\n\t\t     -q metJ -q meta -q\
  \ metb\t\t      \\\n\t\t     -from +59 -to -200 -noorf\n\n\twill return the sequence\
  \ of 260 nucleotides, 200of which\n\textracted upstream the start codon, and the\
  \ 60 following being\n\tthe beginning of the coding sequence.\n\n"
generated_using:
- -h
