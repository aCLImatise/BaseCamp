from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Rsat_Purge_Sequence_V0_1_0 = CommandToolBuilder(tool="rsat_purge_sequence", base_command=["rsat", "purge-sequence"], inputs=[ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="-help", doc=InputDocumentation(doc="(must be first argument) display options")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose")), ToolInput(tag="in_file_containing_sequence", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="The file containing the sequence to purge.\nIf input_file is not specified, the standard input is\nused.  This allows to place the command within a pipe.")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="-format", doc=InputDocumentation(doc="format")), ToolInput(tag="in_specified_standard_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="if not specified, the standard output is used.\nThis allows to place the command within a pipe.")), ToolInput(tag="in_dry_runprint_commands", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="dry run\nprint commands without executing them")), ToolInput(tag="in_ml", input_type=Boolean(optional=True), prefix="-ml", doc=InputDocumentation(doc="#   match length (default: 40)")), ToolInput(tag="in_mis", input_type=Boolean(optional=True), prefix="-mis", doc=InputDocumentation(doc="#  mismatches (default: 3)")), ToolInput(tag="in_one_str", input_type=Boolean(optional=True), prefix="-1str", doc=InputDocumentation(doc="discard duplications on the direct strand only")), ToolInput(tag="in_two_str", input_type=Boolean(optional=True), prefix="-2str", doc=InputDocumentation(doc="discard duplications on the reverse complement as well")), ToolInput(tag="in_del", input_type=Boolean(optional=True), prefix="-del", doc=InputDocumentation(doc="delete repeats instead of masking them\nBy default, repeats are masked, i.e. each nucleotide\nwithin a repeat is replaced by the letter n.  When the\noption -del is selected, repeats are deleted. This\nmeans that one sequence of input can be converted to\nseveral fragments in the output.")), ToolInput(tag="in_mask_short", input_type=Int(optional=True), prefix="-mask_short", doc=InputDocumentation(doc="Mask (replace by N characters) sequences strictly\nshorter than the specified length. This can be useful\nto discard short intergenic segments from the motif\ndiscovery step, especially when working with bacterial\ngenomes, where short intergenic sequences generally\ncorrespond to intra-operon segments.")), ToolInput(tag="in_skip_short", input_type=Int(optional=True), prefix="-skip_short", doc=InputDocumentation(doc="Skip sequences strictly shorter than the specified\nlength. Same functionality as -mask_short, except that\nshort sequences are not returned at all in the output.\nSkipping short sequences can be useful to prevent\nindexing problems, when the input files contain\nsequences shorter than the indexing prefix.")), ToolInput(tag="in_no_die", input_type=Boolean(optional=True), prefix="-nodie", doc=InputDocumentation(doc="The perl script purge-sequence does not die in case\nthe encapsulated programs (mkvtree, vmatch) return an\nerror message.\n")), ToolInput(tag="in_purge_sequence", input_type=String(), position=0, doc=InputDocumentation(doc="1999 by Jacques van Helden (Jacques.van-Helden@univ-amu.fr)")), ToolInput(tag="in_sequences", input_type=String(), position=0, doc=InputDocumentation(doc="OPTIONS"))], outputs=[ToolOutput(tag="out_specified_standard_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_specified_standard_output", type_hint=File()), doc=OutputDocumentation(doc="if not specified, the standard output is used.\nThis allows to place the command within a pipe."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Purge_Sequence_V0_1_0().translate("wdl", allow_empty_container=True)

