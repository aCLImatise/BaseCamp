!Command
command:
- rsat
- random-seq
positional:
- !Positional
  optional: false
  position: 0
  name: random-seq
  description: USAGE
- !Positional
  optional: false
  position: 0
  name: sequences
  description: OPTIONS
- !Positional
  optional: false
  position: 0
  name: PROBABILITIES
  description: "-a      alphabet\nmust be followed by residue frequencies expressed\
    \ precisely\nthis way:\n-a a:t # c:g #\nex:\n-a a:t 0.3 c:g 0.2\nThe option\n\
    -a yeast\nwill automatically use the residue frequencies from yeast\ngenome."
named:
- !Flag
  optional: true
  synonyms:
  - -l
  description: sequence length
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: "Number of sequences.\nGenerate a set of n sequences, each of length\
    \ l."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: verbose.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "if not specified, the standard output is used.\nThis allows to place\
    \ the comand within a pipe."
  args: !SimpleFlagArg
    name: outputfile
- !Flag
  optional: true
  synonyms:
  - -prefix
  description: 'for sequence identifiers (default: rand).'
  args: !SimpleFlagArg
    name: prefix
- !Flag
  optional: true
  synonyms:
  - -format
  description: "format.\nTwo options are available:\nIG      IG suite from IntelliGenetics\n\
    raw     (default)"
  args: !SimpleFlagArg
    name: output
- !Flag
  optional: true
  synonyms:
  - -lw
  description: "##  Line width. A newline character will be inserted in the\nsequence\
    \ every ## bases. Default is 70.\n-lw 0 will prevent newline insertion."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -type
  description: protein|DNA|other
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -seed
  description: '# seed for the random generator'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: "Generate random sequences with lengths specified in a template\nfile.\n\
    Various template types are supported (option -template_format):\nsequences (in\
    \ fasta), genomic coordinates (in bed), sequence\nlengths.\nThis option is incompatible\
    \ with options -l and -n."
  args: !SimpleFlagArg
    name: template_file
- !Flag
  optional: true
  synonyms:
  - -template_format
  description: "Format for the template set (specified with the option -i).\nSupported\
    \ formats:\nfasta (default)\nTemplates are provided as a fasta-formatted sequence\
    \ file. The\nprogram random-genome-fragments calls sequence-lengths to define\n\
    the template lengths.\nbed\nTemplates are provided as a bed-formatted file of\
    \ genomic\ncoordinates. The program random-genome-fragments calls\nsequence-lengths\
    \ -format bed to define the lengths of the bed\nfeatures.\nBed file must contain\
    \ at least 3 columns, indicating, for each\nfeature:\n1. id (ignored)\n2. start\
    \ coordinate\n3. end coordinate\nlen\nTemplates are provided as a tab-delimited\
    \ file indicating the\nlength of each template sequence (this file can be produced\
    \ by\nsequence-lengths)."
  args: !SimpleFlagArg
    name: template_format
- !Flag
  optional: true
  synonyms:
  - -lf
  description: "file\nDeprecated. Replaced by -i template_file -template_format len.\n\
    Maintained for backward compatibility.\nGenerate random sequences with the same\
    \ lengths as a set of template\nsequences. The sequence length file can be obtained\
    \ with the command\nsequence-lengths.\nThis option is incompatible with options\
    \ -l and -n.\nThe length file contains two columns :\n-sequence ID (ignored)\n\
    -sequence length"
  args: !SimpleFlagArg
    name: length
- !Flag
  optional: true
  synonyms:
  - -expfreq
  description: "Specifyt a file describing the background model. This\nfile must be\
    \ in oligo format, i.e. a table with\nexpected oligomer frequencies. See\nI<convert-background-model>\
    \ for conversion of other\nbackground model formats into oligomer frequency\n\
    tables.\nWhen this option is used, the sequences are generated\naccording to a\
    \ Markov chain. For instance if the\nfrequency file contains tetramers, each base\
    \ will be\nselected randomly with a probability depending on the\n3 preceding\
    \ bases:\np(Wj-3,j)\np(Bj=B) = -----------\np(Wj-3,j-1)\nwhere   Bj      is the\
    \ base at position j\nB       is a residue, ie A, C, G or T\nWj-3,j-1\nis a word\
    \ found in the sequence between\npositions j-3 and j-1\nWj-3,j  is the same word\
    \ with the character B\nconcatenated at its end"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bg
  description: "background model\nAutomatically load a pre-calibrated exected frequency\n\
    file from the RSAT genome distribution. When this\noption is used, the options\
    \ -org and -ol are also\nrequired, to indicate the organism and the\noligonucleotide\
    \ length, respectively.\nWhen the option -bg is used, it is necessary to\ndefine\
    \ the order of the markov chain, either with the\noption -markov, or with the\
    \ option -ol (oligo length).\nThis option is incompatible with the option -expfreq.\n\
    Type of sequences used as background model for\nestimating expected oligonucleotide\
    \ frequencies.\nSupported models:\n-bg equi\nequiprobable residue frequencies\
    \ (default)\n-bg upstream-noorf\nall upstream sequences, preventing overlap with\n\
    upstream open reading frames (ORFs). Requires to\nspeciy a model organism.\n-bg\
    \ upstream\nall upstream sequences, allowing overlap with\nupstream ORFs. Requires\
    \ to speciy a model\norganism.\n-bg intergenic\nintergenic frequencies Whole set\
    \ of intergenic\nregions, including upstream and downstream\nsequences. Requires\
    \ to speciy a model organism.\n-bg protein\ngenerate random peptidic sequences\
    \ using a Markov\nchain calibrated on all peptidic sequences of the\nselected\
    \ organism."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -org
  description: "organism\nThis is necessary with the option -bg, to determine\nwhich\
    \ frequency file has to be sued for expected\nfrequency calibration."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -markov
  description: "order for the background model\nNote: options -markov and -ol are\
    \ mutually exclusive."
  args: !SimpleFlagArg
    name: markov
- !Flag
  optional: true
  synonyms:
  - -ol
  description: "oligo-length\nOligonucleotide length used to train the Markov\nbackground\
    \ model. If the oligo length is k, the markov\norder is m = k-1."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -rep
  description: "Number of repetitions\nThe list if sequence lengths is repeated rep\
    \ times.\nThis option only serves when a length file is used to\nspecify sequence-sise\
    \ lengths.\nThis option is incompatible with the options -l and\n-n."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n\trandom-seq\n\nUSAGE\n\trandom-seq -l seqlength [-v] [-o outputfile]\n\
  \nDESCRIPTION\n\tGenerates random sequences according to different\n\tprobabilistic\
  \ models (Bernoulli, Markov chains).\n\nCATEGORY\n\tsequences\n\nOPTIONS\n    OUTPUT\
  \ OPTIONS\n\t-l\tsequence length\n\n\t-n\tNumber of sequences.\n               \
  \ Generate a set of n sequences, each of length l.\n\n\t-v\tverbose.\n\n\t-o outputfile\n\
  \t\tif not specified, the standard output is used.\n\t\tThis allows to place the\
  \ comand within a pipe.\n\n\t-prefix\tprefix for sequence identifiers (default:\
  \ rand).\n\n\t-format\toutput format. \n\t\tTwo options are available:\n\t\tIG\t\
  IG suite from IntelliGenetics\n\t\traw\t(default) \n        -lw ##  Line width.\
  \ A newline character will be inserted in the \n                sequence every ##\
  \ bases. Default is 70. \n                -lw 0 will prevent newline insertion.\n\
  \n\t-type\tprotein|DNA|other\n\n\t-seed #\tseed for the random generator\n\n   TEMPLATE\
  \ FILES\n\n   The following options allow to taylor the sequence number and the\n\
  \   size of each sequence on the basis of template files (sequence\n   file, bed\
  \ file or sequence-length output file).\n\n    -i template_file\n\n        Generate\
  \ random sequences with lengths specified in a template\n        file.\n\n     \
  \   Various template types are supported (option -template_format):\n        sequences\
  \ (in fasta), genomic coordinates (in bed), sequence\n        lengths.\n\n     \
  \   This option is incompatible with options -l and -n.\n\n    -template_format\
  \ template_format\n        Format for the template set (specified with the option\
  \ -i).\n\n        Supported formats:\n\n        fasta (default)\n            Templates\
  \ are provided as a fasta-formatted sequence file. The\n            program random-genome-fragments\
  \ calls sequence-lengths to define\n            the template lengths.\n\n      \
  \  bed\n            Templates are provided as a bed-formatted file of genomic\n\
  \            coordinates. The program random-genome-fragments calls\n          \
  \  sequence-lengths -format bed to define the lengths of the bed\n            features.\n\
  \n            Bed file must contain at least 3 columns, indicating, for each\n \
  \           feature:\n\n            1. id (ignored)\n            2. start coordinate\n\
  \            3. end coordinate\n\n        len\n            Templates are provided\
  \ as a tab-delimited file indicating the\n            length of each template sequence\
  \ (this file can be produced by\n            sequence-lengths).\n\n    -lf length\
  \ file\n        Deprecated. Replaced by -i template_file -template_format len.\n\
  \        Maintained for backward compatibility.\n\n        Generate random sequences\
  \ with the same lengths as a set of template\n        sequences. The sequence length\
  \ file can be obtained with the command\n        sequence-lengths.\n\n        This\
  \ option is incompatible with options -l and -n.\n\n        The length file contains\
  \ two columns :\n\n        -sequence ID (ignored)\n        -sequence length\n\n\n\
  \n    PROBABILITIES\n\t-a\talphabet\n\t\tmust be followed by residue frequencies\
  \ expressed precisely \n\t\tthis way:\n\t\t-a a:t # c:g #\n\t\tex: \n\t\t-a a:t\
  \ 0.3 c:g 0.2\n\n\t\tThe option\n\t\t-a yeast\n\t\twill automatically use the residue\
  \ frequencies from yeast \n\t\tgenome.\n\n\t-expfreq\n\n\t\tSpecifyt a file describing\
  \ the background model. This\n\t\tfile must be in oligo format, i.e. a table with\n\
  \t\texpected oligomer frequencies. See\n\t\tI<convert-background-model> for conversion\
  \ of other\n\t\tbackground model formats into oligomer frequency\n\t\ttables.\n\n\
  \                When this option is used, the sequences are generated\n\t\taccording\
  \ to a Markov chain. For instance if the\n\t\tfrequency file contains tetramers,\
  \ each base will be\n\t\tselected randomly with a probability depending on the\n\
  \t\t3 preceding bases:\n\n\t\t           p(Wj-3,j)\n\t\tp(Bj=B) = -----------\n\t\
  \t          p(Wj-3,j-1)\n\n\t\twhere\tBj\tis the base at position j\n\t\t\tB\tis\
  \ a residue, ie A, C, G or T\n\t\t\tWj-3,j-1\n\t\t\t\tis a word found in the sequence\
  \ between \n\t\t\t\tpositions j-3 and j-1\n\t\t\tWj-3,j\tis the same word with the\
  \ character B \n\t\t\t\tconcatenated at its end\n\n\t-bg\tbackground model\n\n\t\
  \tAutomatically load a pre-calibrated exected frequency\n\t\tfile from the RSAT\
  \ genome distribution. When this\n\t\toption is used, the options -org and -ol are\
  \ also\n\t\trequired, to indicate the organism and the\n\t\toligonucleotide length,\
  \ respectively.\n\n\t\tWhen the option -bg is used, it is necessary to\n\t\tdefine\
  \ the order of the markov chain, either with the\n\t\toption -markov, or with the\
  \ option -ol (oligo length).\n\n\t\tThis option is incompatible with the option\
  \ -expfreq. \n\n\t\tType of sequences used as background model for\n\t\testimating\
  \ expected oligonucleotide frequencies.\n\n\t\tSupported models:\n\t\t-bg equi\n\
  \t\t    equiprobable residue frequencies (default)\n\n\t\t-bg upstream-noorf\n\t\
  \t    all upstream sequences, preventing overlap with\n\t\t    upstream open reading\
  \ frames (ORFs). Requires to\n\t\t    speciy a model organism.\n\n\t\t-bg upstream\n\
  \t\t    all upstream sequences, allowing overlap with\n\t\t    upstream ORFs. Requires\
  \ to speciy a model\n\t\t    organism.\n\n\t\t-bg intergenic\n\t\t    intergenic\
  \ frequencies Whole set of intergenic\n\t\t    regions, including upstream and downstream\n\
  \t\t    sequences. Requires to speciy a model organism.\n\n\t\t-bg protein\n\t\t\
  \    generate random peptidic sequences using a Markov\n\t\t    chain calibrated\
  \ on all peptidic sequences of the\n\t\t    selected organism.\n\n\t-org\torganism\n\
  \t\tThis is necessary with the option -bg, to determine\n\t\twhich frequency file\
  \ has to be sued for expected\n\t\tfrequency calibration.\n\n\t-markov\tmarkov order\
  \ for the background model\n\n\t\tNote: options -markov and -ol are mutually exclusive.\
  \ \n\n\t-ol\toligo-length\n\n\t\tOligonucleotide length used to train the Markov\n\
  \t\tbackground model. If the oligo length is k, the markov\n\t\torder is m = k-1.\n\
  \n\t-lf\tlength file \n\n\t\tGenerate random sequences with the same lengths as\
  \ a\n\t\tset of reference sequences. \n\n\t\tThis option is incompatible with the\
  \ options -l and -n.\n\n\t\tThe sequence length file can be obtained with the\n\t\
  \tcommand\n\t\t\tsequence-lengths\n\n\t\tThe length file contains two columns :\
  \ \n\t\t    - sequence ID (ignored)\n\t\t    - sequence length\n\n\t-rep\tNumber\
  \ of repetitions\n\n\t\tThe list if sequence lengths is repeated rep times.\n\n\t\
  \tThis option only serves when a length file is used to\n\t\tspecify sequence-sise\
  \ lengths.\n\n\t\tThis option is incompatible with the options -l and\n\t\t-n.\n\
  \nWEB VERSION\n\thttp://bigre.ulb.ac.be/bioinformatics/rsa-tools/\n\n"
generated_using:
- -h
docker_image:
