!Command
command:
- rsat
- dna-pattern
positional:
- !Positional
  description: perl script v1.1 by Jacques van Helden, 30 July 1997.
  position: 0
  name: dna-pattern
  optional: false
- !Positional
  description: CATEGORY
  position: 0
  name: expressions.
  optional: false
- !Positional
  description: pattern matching
  position: 1
  name: sequences
  optional: false
- !Positional
  description: "-i sequencefile -format seq_format -p pattern [-id identifier]\n[-1str|-2str|-R]\
    \ [-c|-ct] [-noov]\n[-N flanking] [-v]"
  position: 0
  name: dna-pattern
  optional: false
- !Positional
  description: FastA format
  position: 0
  name: fasta
  optional: false
- !Positional
  description: IntelliGenetics format
  position: 1
  name: IG
  optional: false
- !Positional
  description: a single sequence in a file
  position: 2
  name: raw
  optional: false
- !Positional
  description: each new line is a new sequence
  position: 3
  name: multi
  optional: false
- !Positional
  description: "a list of files containing each\na single raw sequence"
  position: 4
  name: filelist
  optional: false
- !Positional
  description: Nucleotide(s)   Description
  position: 0
  name: Symbol
  optional: false
- !Positional
  description: DIRECT PATTERN INPUT
  position: 0
  name: nucleotides.
  optional: false
- !Positional
  description: "The input file must contain raw sequences without any\ncomment or\
    \ other text. Tabs (\\t), blank spaces and newline\ncharacters (\\n) are accepted\
    \ (they will be automatically\nremoved before analysis). The sequence must be\
    \ terminated by\na newline character."
  position: 0
  name: raw
  optional: false
- !Positional
  description: "file list. Each line of the input file contains the\nname of a file\
    \ containing a single sequence in raw format."
  position: 1
  name: filelist
  optional: false
- !Positional
  description: "IntelliGenetics format.\nThe first non-comment line must be the sequence\
    \ identifier\n(a single word without spaces).\nThe sequence follows the identifier\
    \ line identifier. It can\ninclude spaces, tabs or newlines, that will be removed\
    \ for\nsequence analysis.\nThe end of one sequence is indicated by termination\
    \ character:\n1 for linear, 2 for circular sequences.\nA single file may contain\
    \ several sequences.\nEXAMPLE of IG suite:\n; sequence of the region upstream\
    \ from NIL1\n; Locus GAT1\n; ORF YFL021W  coord:   6 95964 97496\n; upstream region\
    \ size: 100\n; upstream region coord:        6 95864 95963\nGAT1\nACAGAGCAACAATAATAACAGCACTATGAGTCGCACACTT\n\
    GCGGTGCCCGGCCCAGCCACATATATATAGGTGTGTGCCA\nCTCCCGGCCCCGGTATTAGC\n1\n; sequence\
    \ of the region upstream from PUT4\n; Locus PUT4\n; ORF YOR348C  coord:   15 988773\
    \ 986890\n; upstream region size: 100\n; upstream region coord:        15 988873\
    \ 988774\nPUT4\nGGGTTTGTGTTCCTCTTCCTTTCCTTTTTTTTTCTCTCTT\nCCCTTCCAGTTTCTTTTATTCTTTGCTGTTTCGAAGAATC\n\
    ACACCATCAATGAATAAATC\n1"
  position: 2
  name: IG
  optional: false
named:
- !Flag
  description: short help message
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "input sequence file. This file contains the sequences where the pattern(s)\n\
    will be searched for.\nVarious format are accepted\nIf omitted, standard input\
    \ (eg keyboard) will be used.\nThis allows to use the program within a pipe."
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "|lower\nMask lower or uppercases, respecively, i.e. replace\nselected\
    \ case by N characters."
  synonyms:
  - -mask
  args: !SimpleFlagArg
    name: upper
  optional: true
- !Flag
  description: sequence format. The accepted formats are
  synonyms:
  - -format
  args: !SimpleFlagArg
    name: input
  optional: true
- !Flag
  description: "output file.\nIf omitted, standard output (eg screen) will be used.\n\
    This allows to use the program within a pipe."
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "pattern entered directly after -p.\nAlternatively use -pl."
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "name of the file containing the patterns to search .\n(see format\
    \ below)"
  synonyms:
  - -pl
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#\nallow # substitutions."
  synonyms:
  - -subst
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "The pattern is considered as a standard regular expression.\nIt is\
    \ convenient to specifically search for masked sequences represented\nby \"N\"\
    \ characters in sequences:\nie : dna-pattern -i your_sequence_file -p \"N+\" -noov\
    \ -1str -noIUPAC"
  synonyms:
  - -noIUPAC
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#\nscore column\nthe #th column of the pattern file contains a number\n\
    indicating the score for a match of this pattern. This\noption allows to weight\
    \ the matches according to a\nuser-defined scheme."
  synonyms:
  - -sc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "do not search pattern identifier in the second column\nof pattern\
    \ file. instead the id takes the same content\nas the pattern sequence."
  synonyms:
  - -noid
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Do not count overlapping matches for self-overlapping\npatterns."
  synonyms:
  - -noov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: search matches on both strands (direct and reverse complement)
  synonyms:
  - -2str
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: search matches only on the direct strand.
  synonyms:
  - -1str
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: search matches only on the reverse complement strand.
  synonyms:
  - -R
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "pattern identifier (one word).\nUse this option combined with -p,\
    \ to specify the ID of\na unique pattern entered on the command line. For\nmultple\
    \ patterns, it is more convenient to use a\npattern file (option -pl)."
  synonyms:
  - -id
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[,field2,...]\nList of fields to return. Multiple fields can be\n\
    entered separated by commas, or by using iteratively\nthe option.\n-return field1\
    \ [-return field2 ...]\nSupported fields: colsum,counts,ct,limits,notacgt,profiles,rank,rowsum,scores,sites,stats,table,total.\n\
    -return sites:   return match positions (default)\n-return limits: return start\
    \ and end positions for each\ninput sequence\n-return notacgt: return positions\
    \ for characters that\ndo not correspond not standard nucleotides (ACGT) eg: N,\
    \ X and\ndegenerate nucleotides from IUPAC code (eg: W, K)\n-return counts: return\
    \ the count of matches per\nsequence.\n-return rank: return the rank of the sequence\
    \ (this is\nespecially useful in combination with the option\n-sort).\n-return\
    \ score: return a score per sequence, computed\nby summing the scores of the matching\
    \ patterns.\n-return ct:    same as '-return counts', except that it\nreturns\
    \ the sum of matches in all the files of the\nsequence file list, instead of the\
    \ count within\neach separate file.\n-return table: return the count of pattern\
    \ matches per\nsequence in the form of a table.  (one line per\nsequence, one\
    \ column per pattern)\n-return colsum (together with -return table) prints an\
    \ extra\ncolumn with the total occurrences per sequence\n-return rowsum (together\
    \ with -return table) prints an\nextra row with total occurrences per pattern\n\
    -return total (together with -return table) prints an\nextra column with the total\
    \ occurrences per\nsequence and an extra row with total occurrences\nper pattern.\
    \  (amounts to combine -colsum and\n-rowsum)\n-return stats return matching statistics\n\
    -return profiles return matching profiles with sliding\nwindows."
  synonyms:
  - -return
  args: !SimpleFlagArg
    name: field1
  optional: true
- !Flag
  description: 'format for returning matches (supported: fasta, table)'
  synonyms:
  - -match_format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#   Threshold.\nReturn match count only for sequences with >= # matches.\n\
    Only valid in combination with -c."
  synonyms:
  - -th
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "merge mutually overlapping matches. When succesive\nmatches overlap,\
    \ they are converted into a single\nmatch. The merged match takes the ID \"merged\"\
    . The\nscore is the highest score of the matching patterns."
  synonyms:
  - -merge
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#    return matching sequences with # flanking nucleotides'
  synonyms:
  - -N
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   return matching sequences with # left flanking nucleotides'
  synonyms:
  - -NL
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   return matching sequences with # right flanking nucleotides'
  synonyms:
  - -NR
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: verbose.
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#\ndefine # as the origin for the calculation of positions.\n-origin\
    \ -0 defines the end of each sequence as the\norigin. The matching positions are\
    \ then negative values,\nproviding the distance between the match and the end\
    \ of the\nsequence."
  synonyms:
  - -origin
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "#\nSliding window size. The score at each position is\ncalculated\
    \ by summing the scores of all patterns\nencountered within a sliding window of\
    \ size #. This\noption automatically returns matching positions.\nA threshold\
    \ can be specified to specify the minimal\nmatching score to be returned."
  synonyms:
  - -window
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(with sliding window only)\nonly return the top score obtained with\
    \ the sliding\nwindow for each sequence."
  synonyms:
  - -top
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(with -top only)\nsort sequences according to their top score"
  synonyms:
  - -sort
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: help (displays the current message)
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "NAME\n\tdna-pattern\n\tperl script v1.1 by Jacques van Helden, 30 July\
  \ 1997.\n\nDESCRIPTION\n\tSearches all occurrences of a pattern within DNA sequences.\n\
  \        The pattern can be entered as a simple nucleotide sequence,\n        but\
  \ can also include degenerate nucleotide codes, or regular\n        expressions.\n\
  \nCATEGORY\n\tsequences\n\tpattern matching\n\nUSAGE\n\t(get help)\n\tdna-pattern\
  \ -h\n\n\t(directly enter the sequence to search)\n\tdna-pattern  -i sequencefile\
  \ -format seq_format -p pattern [-id identifier]\n\t\t\t[-1str|-2str|-R] [-c|-ct]\
  \ [-noov]\n\t\t\t[-N flanking] [-v]\n\n\t(read a list of patterns from a file)\n\
  \tdna-pattern -i sequencefile -format seq_format -pl pattern_file\n   \t\t\t[-1str|-2str|-R]\
  \ [-c|-ct]  [-noov]\n   \t\t\t[-N flanking] [-v]\n\nARGUMENTS\n\t-h\thelp (displays\
  \ the current message)\n\n\t-help\tshort help message\n\n\t-i\tinput sequence file.\
  \ This file contains the sequences where the pattern(s)\n\t\twill be searched for.\n\
  \t\tVarious format are accepted\n\t\tIf omitted, standard input (eg keyboard) will\
  \ be used.\n\t\tThis allows to use the program within a pipe.\n\n\t-mask upper|lower\n\
  \t\tMask lower or uppercases, respecively, i.e. replace\n\t\tselected case by N\
  \ characters.\n\n\t-format\tinput sequence format. The accepted formats are\n\t\t\
  fasta\t       FastA format\n\t\tIG\t       IntelliGenetics format\n\t\traw\t   \
  \    a single sequence in a file\n\t\tmulti\t       each new line is a new sequence\n\
  \t\tfilelist       a list of files containing each\n\t\t\t       a single raw sequence\n\
  \t-o\toutput file.\n\t\tIf omitted, standard output (eg screen) will be used.\n\t\
  \tThis allows to use the program within a pipe.\n\n\t-p\tpattern entered directly\
  \ after -p.\n\t\tAlternatively use -pl.\n\n\t-pl\tname of the file containing the\
  \ patterns to search .\n\t\t(see format below)\n\n\t-subst #\n               allow\
  \ # substitutions.\n\t-noIUPAC\n\t\tThe pattern is considered as a standard regular\
  \ expression.\n\t\tIt is convenient to specifically search for masked sequences\
  \ represented\n\t\tby \"N\" characters in sequences:\n\t\tie : dna-pattern -i your_sequence_file\
  \ -p \"N+\" -noov -1str -noIUPAC\n\t-sc #\n\t\tscore column\n\n\t\tthe #th column\
  \ of the pattern file contains a number\n\t\tindicating the score for a match of\
  \ this pattern. This\n\t\toption allows to weight the matches according to a\n\t\
  \tuser-defined scheme.\n\n\t-noid\n\t\tdo not search pattern identifier in the second\
  \ column\n\t\tof pattern file. instead the id takes the same content\n\t\tas the\
  \ pattern sequence.\n\n\t-noov\n\t\tDo not count overlapping matches for self-overlapping\n\
  \t\tpatterns.\n\n\t-2str\tsearch matches on both strands (direct and reverse complement)\n\
  \n\t-1str\tsearch matches only on the direct strand.\n\n\t-R \tsearch matches only\
  \ on the reverse complement strand.\n\n\t-id\tpattern identifier (one word).\n\t\
  \tUse this option combined with -p, to specify the ID of\n\t\ta unique pattern entered\
  \ on the command line. For\n\t\tmultple patterns, it is more convenient to use a\n\
  \t\tpattern file (option -pl).\n\n\t-return field1[,field2,...]\n\n\t\tList of fields\
  \ to return. Multiple fields can be\n\t\tentered separated by commas, or by using\
  \ iteratively\n\t\tthe option.\n\t\t    -return field1 [-return field2 ...]\n\n\t\
  \tSupported fields: colsum,counts,ct,limits,notacgt,profiles,rank,rowsum,scores,sites,stats,table,total.\n\
  \n\t\t-return sites:   return match positions (default)\n\n\t\t-return limits: return\
  \ start and end positions for each\n\t\t    input sequence\n\n\t\t-return notacgt:\
  \ return positions for characters that\n\t\tdo not correspond not standard nucleotides\
  \ (ACGT) eg: N, X and\n\t\tdegenerate nucleotides from IUPAC code (eg: W, K)\n\n\
  \t\t-return counts: return the count of matches per\n\t\t    sequence.\n\n\t\t-return\
  \ rank: return the rank of the sequence (this is\n                     especially\
  \ useful in combination with the option\n                     -sort).\n\n\t\t-return\
  \ score: return a score per sequence, computed\n                     by summing\
  \ the scores of the matching patterns.\n\n\t\t-return ct:    same as '-return counts',\
  \ except that it\n\t\t    returns the sum of matches in all the files of the\n\t\
  \t    sequence file list, instead of the count within\n\t\t    each separate file.\n\
  \n\t\t-return table: return the count of pattern matches per\n\t\t    sequence in\
  \ the form of a table.  (one line per\n\t\t    sequence, one column per pattern)\n\
  \n\t\t-return colsum (together with -return table) prints an extra\n\t\t    column\
  \ with the total occurrences per sequence\n\n\t\t-return rowsum (together with -return\
  \ table) prints an\n\t\t    extra row with total occurrences per pattern\n\n\t\t\
  -return total (together with -return table) prints an\n\t\t    extra column with\
  \ the total occurrences per\n\t\t    sequence and an extra row with total occurrences\n\
  \t\t    per pattern.  (amounts to combine -colsum and\n\t\t    -rowsum)\n\n\t\t\
  -return stats return matching statistics\n\n\t\t-return profiles return matching\
  \ profiles with sliding\n                    windows.\n\n\t-match_format\n\t\tformat\
  \ for returning matches (supported: fasta, table)\n\n        -th #   Threshold.\n\
  \                Return match count only for sequences with >= # matches.\n    \
  \            Only valid in combination with -c.\n\n\t-merge  merge mutually overlapping\
  \ matches. When succesive\n\t\tmatches overlap, they are converted into a single\n\
  \t\tmatch. The merged match takes the ID \"merged\". The\n\t\tscore is the highest\
  \ score of the matching patterns.\n\n\t-N #\treturn matching sequences with # flanking\
  \ nucleotides\n\n\t-NL #\treturn matching sequences with # left flanking nucleotides\n\
  \n\t-NR #\treturn matching sequences with # right flanking nucleotides\n\n\t-v\t\
  verbose.\n\n        -origin #\n                define # as the origin for the calculation\
  \ of positions.\n                -origin -0 defines the end of each sequence as\
  \ the\n                origin. The matching positions are then negative values,\n\
  \                providing the distance between the match and the end of the\n \
  \               sequence.\n\n\t-window #\n\t\tSliding window size. The score at\
  \ each position is\n\t\tcalculated by summing the scores of all patterns\n\t\tencountered\
  \ within a sliding window of size #. This\n\t\toption automatically returns matching\
  \ positions.\n\t\tA threshold can be specified to specify the minimal\n\t\tmatching\
  \ score to be returned.\n\n\t-top\t(with sliding window only)\n\t\tonly return the\
  \ top score obtained with the sliding\n\t\twindow for each sequence.\n\n\t-sort\t\
  (with -top only)\n\t\tsort sequences according to their top score\n\nPATTERN FORMATS\n\
  \n    PATTERN SEQUENCE\n\n\tThe standard degenerate nucleotide code of the IUPAC-IUB\n\
  \tcommission is supported (http://www.iupac.org/, see\n\thttp://www.chem.qmw.ac.uk/iupac/misc/naseq.html\
  \ for complete\n\tinformation).\n\n\tThe pattern sequence should thus only contain\
  \ the following characters:\n\n            ------------------------------------------------------\n\
  \            Symbol  Nucleotide(s)   Description\n            ------------------------------------------------------\n\
  \            A       A               Adenosine\n            C       C          \
  \     Cytidine\n            G       G               Guanosine\n            T   \
  \    T               Thymidine\n            R       A or G          puRines\n  \
  \          Y       C or T          pYrimidines\n            W       A or T     \
  \     Weak hydrogen bonding\n            S       G or C          Strong hydrogen\
  \ bonding\n            M       A or C          aMino group at common position\n\
  \            K       G or T          Keto group at common position\n           \
  \ H       A, C or T       not G\n            B       G, C or T       not A\n   \
  \         V       G, A, C         not T\n            D       G, A or T       not\
  \ C\n            N       G, A, C or T    aNy\n            ------------------------------------------------------\n\
  \n\tUpper and lower case are considered equivalent.\n\n\tPatterns can either be\
  \ entered directly by the user, or listed\n\tin a file.\n\n        The pattern can\
  \ also contain regular expression elements:\n        - GAT[TA]AG means \"GATAAG\
  \ or GATTAG\" (equivalent to GATWAG).\n        - CGGN{11}CCG means CGG followed\
  \ by 10 N followed by CCG.\n        - GATAAGN{0,30}GATAAG means two GATAAG spaced\
  \ by 0 to 30\n          nucleotides.\n\n    DIRECT PATTERN INPUT\n\n\tType the -p\
  \ option directly followed by a pattern sequence.\n\tAn optional identifier can\
  \ be further entered after the -id option.\n\n    PATTERN FILE\n\n\tA pattern file\
  \ is a tab-delimited text file. Each row contains\n\tthe description of one pattern.\
  \ Column content:\n\t  1) Pattern sequence. This is the only mandatory column.\n\
  \t  2) Pattern ID (optional).\n\tAdditional columns can be used to specify other\
  \ pattern\n\tattributes (description, score, ...), but they are by default\n\tignored\
  \ by the program. The option -sc allows to specify a\n\tscore column.\n\nSEQUENCE\
  \ FILE FORMAT\n        Different formats are supported:\n        - raw\n\t- wc (=wconsensus)\n\
  \        - filelist\n        - IG (intelligenetics)\n\n\traw\tThe input file must\
  \ contain raw sequences without any\n                comment or other text. Tabs\
  \ (\\t), blank spaces and newline\n                characters (\\n) are accepted\
  \ (they will be automatically\n                removed before analysis). The sequence\
  \ must be terminated by\n                a newline character.\n\n\tfilelist\n\t\t\
  file list. Each line of the input file contains the\n\t\tname of a file containing\
  \ a single sequence in raw format.\n\n\tIG\tIntelliGenetics format.\n \t\tThe first\
  \ non-comment line must be the sequence identifier\n\t\t(a single word without spaces).\n\
  \t\tThe sequence follows the identifier line identifier. It can\n              \
  \  include spaces, tabs or newlines, that will be removed for\n                sequence\
  \ analysis.\n                The end of one sequence is indicated by termination\
  \ character:\n\t\t1 for linear, 2 for circular sequences.\n\t\tA single file may\
  \ contain several sequences.\n\n\t\tEXAMPLE of IG suite:\n\n\t\t; sequence of the\
  \ region upstream from NIL1\n\t        ; Locus GAT1\n \t        ; ORF YFL021W  coord:\
  \   6 95964 97496\n \t        ; upstream region size: 100\n \t        ; upstream\
  \ region coord:        6 95864 95963\n \t        GAT1\n \t        ACAGAGCAACAATAATAACAGCACTATGAGTCGCACACTT\n\
  \  \t        GCGGTGCCCGGCCCAGCCACATATATATAGGTGTGTGCCA\n  \t        CTCCCGGCCCCGGTATTAGC\n\
  \  \t        1\n \t        ; sequence of the region upstream from PUT4\n       \
  \         ; Locus PUT4\n                ; ORF YOR348C  coord:   15 988773 986890\n\
  \                ; upstream region size: 100\n                ; upstream region\
  \ coord:        15 988873 988774\n                PUT4\n                GGGTTTGTGTTCCTCTTCCTTTCCTTTTTTTTTCTCTCTT\n\
  \                CCCTTCCAGTTTCTTTTATTCTTTGCTGTTTCGAAGAATC\n                ACACCATCAATGAATAAATC\n\
  \                1\n\nOUTPUT\n\tThe output file contains columns separated by tabs\
  \ (\\t).\n\n\tColumn contents:\n\n\t1- pattern identifier\n\t2- matching strand\
  \ : direct (D) or reverse complement (R)\n\t3- pattern sequence\n\t4- name of the\
  \ sequence matching the pattern\n\t5- start position of the match\n\t6- end position\
  \ of the match\n\t7- match sequence\n\t8- matching score\n\n\tIf the -c option is\
  \ entered, output file returns the following\n\tcolumns :\n\n\t1- query pattern\
  \ identifier word\n\t2- query pattern sequence\n\t3- sequence file name\n\t4- number\
  \ of matches for the current pattern in the current file\n\nEXAMPLES\n\tdna-pattern\
  \ -i GATA -p GATWA -i my_file.fasta -c\n\n\twill count all occurences of the strings\
  \ 'GATAA' and 'GATTA' present\n\tin the file my_file.fasta\nWEB VERSION\n\thttp://www.bigre.ulb.ac.be/bioinformatics/rsa-tools/\n"
generated_using:
- -h
