!Command
command:
- rsat
- matrix-from-patterns
positional:
- !Positional
  description: "\e[1mDESCRIPTION\e[0m"
  position: 0
  name: matrix-from-patterns
  optional: false
- !Positional
  description: "\e[1mCATEGORY\e[0m"
  position: 0
  name: jvhelden@ulb.ac.be
  optional: false
- !Positional
  description: motif discovery
  position: 1
  name: sequences
  optional: false
- !Positional
  description: "\e[1m-toppat #\e[0m"
  position: 0
  name: dyad-analysis.
  optional: false
- !Positional
  description: "\e[1m-1str\e[0m use a single strand to build the motifs"
  position: 0
  name: Strands
  optional: false
- !Positional
  description: "\e[1m-sites\e[0m"
  position: 0
  name: ones.
  optional: false
- !Positional
  description: "\e[1m\e[33mmatrix-scan\e[0m\e[0m"
  position: 0
  name: PSSM.
  optional: false
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    matrix-from-patterns\n\n\e[1mDESCRIPTION\e[0m\n  \
  \  Build PSSMs from a sequence set using as seeds a set of patterns\n    (oligos,\
  \ dyads) or an assembly.\n\n    Build position-specific scoring matrices (PSSM)\
  \ by collecting sites from\n    a given sequence set, using as seeds either a set\
  \ of patterns (the\n    output of \e[33moligo-analysis\e[0m or \e[33mdyad-analysis\e\
  [0m) or an assembly made of such\n    patterns (output of \e[33mpattern-assembly\e\
  [0m).\n\n    The program proceeds in two steps:\n\n    1) A \e[1msignificance matrix\e\
  [0m is built by assembling the patterns (with\n    \e[33mpattern assembly\e[0m),\
  \ and converting each assembly to a position-specific\n    scoring matrix (the conversion\
  \ is ensured by \e[33mconvert-matrix\e[0m). This\n    significance matrix contains\
  \ one row per residue, one column per\n    position of the pattern assembly, and\
  \ each cell indicates the maximal\n    significance value observed for a given residue\
  \ at a given position in\n    the assembly.\n\n    2) The significance matrix is\
  \ then used as seed for collecting a PSSSM\n    from the input sequences. The matrix\
  \ is collected either with\n    \e[33minfo-gibbs\e[0m (since Nov 2009) or with \e\
  [33mmatrix-scan\e[0m (slow and obsolete).\n\n    Advantage of this two-step process:\
  \ classically, position-specific\n    scoring matrices are build from an alignemnt\
  \ of sites (e.g. binding\n    sites for a transcription factor). A significance\
  \ matrix already gives a\n    good indication of the motif, but it does not always\
  \ reflect the real\n    sites present in the sequence, because it is built by assembling\n\
  \    overlapping oligonucleotides (or dyads), irrespective of the fact that\n  \
  \  these patterns are found together or not in the input sequence.\n\n    The program\
  \ \e[33mmatrix-from-pattern\e[0m solves this problem by using the\n    assembled\
  \ patterns as seeds to perform a matrix-based scanning of the\n    input sequences,\
  \ and collect the most likely instances of the motif\n    (putative sites). These\
  \ sites are then used to build an count matrix,\n    reflecting the absolute residue\
  \ frequencies at each position of the\n    collected sites.\n\n    Weakness of this\
  \ approach: the scanning step can be time-consuming when\n    the input sequences\
  \ are large (e.g. for whole-genome motif detection).\n\n\e[1mAUTHORS\e[0m\n    jvhelden@ulb.ac.be\n\
  \n\e[1mCATEGORY\e[0m\n    sequences\n    motif discovery\n\n\e[1mUSAGE\e[0m\n  \
  \  matrix-from-patterns -seq sequence_filfe \\ [-pl pattern_file|-asmb\n    assembly_file]\
  \ \\ [-o output_basename] [-v #]\n\n\e[1mINPUT FORMAT\e[0m\n    \e[1mSequence file\e\
  [0m\n    \e[1mPattern file\e[0m\n        The pattern file must be in the output\
  \ format of \e[33mpattern-assembly\e[0m.\n\n\e[1mOUTPUT FORMAT\e[0m\n    The output\
  \ file contains one or several PSSM extracted from the\n    sequences. The supported\
  \ output formats are the same as for\n    \e[33mconvert-matrix\e[0m.\n\n\e[1mOPTIONS\e\
  [0m\n    \e[1m-v #\e[0m\n        Level of verbosity (detail in the warning messages\
  \ during execution)\n\n    \e[1m-n\e[0m  Dry run: do not run the system commands\
  \ called by this script. This\n        option can be combined with a high level\
  \ of verbosity (e.g. -v 3) in\n        order to display the commands without running\
  \ them.\n\n    \e[1m-h\e[0m  Display full help message\n\n    \e[1m-help\e[0m\n\
  \        Same as -h\n\n    \e[1m-seq sequence_file\e[0m\n        If no input file\
  \ is specified, the standard input is used. This\n        allows to use the command\
  \ within a pipe.\n\n    \e[1m-format sequence_format\e[0m\n        Sequence format.\n\
  \n    \e[1m-pl pattern_file\e[0m\n        Pattern file. This file contains a list\
  \ of patterns. typically, this\n        file should be the output of the programes\
  \ oligoanalysi or\n        dyad-analysis.\n\n    \e[1m-toppat #\e[0m\n        Max\
  \ number of patterns to assemble. This argument is passed to\n        \e[33mpattern-assembly\e\
  [0m.\n\n    \e[1m-max_asmb_nb\e[0m\n        This parameter is passed to pattern-assembly,\
  \ to indicate the\n        maximal number of assemblies to return.\n\n        Since\
  \ each assembly is then converted into a PSSM by\n        matrix-from-pattern, this\
  \ option also indicates the maximal number\n        of matrices to return.\n\n \
  \       Note that when matrix-from-patterns is fed with pre-assembled\n        patterns\
  \ (option -asmb instead of -pl), the option -max_asmb_nb is\n        not working.\n\
  \n    \e[1m-top_seq #\e[0m\n        Max number of sequences to scan for building\
  \ final matrices.\n\n    \e[1m-sc #\e[0m\n        Column containing the pattern\
  \ scores in the input pattern file. This\n        argument is passed to \e[33mpattern-assembly\e\
  [0m.\n\n    \e[1m-cc #\e[0m\n        Column indicating the pattern clusters in the\
  \ input pattern file\n        (default 1). This argument is passed to \e[33mpattern-assembly\e\
  [0m.\n\n    \e[1m-max_asmb_per_cluster\e[0m\n        This parameter is passed to\
  \ pattern-assembly, to indicate the\n        maximal number of assemblies to return\
  \ per cluster. It makes only\n        sense when the option -cc is used.\n\n   \
  \ \e[1m-subst\e[0m\n        Maximum number of allowed substitution for pattern assembly.\n\
  \n        This parameter is passed to the program \e[33mpattern-assembly\e[0m.\n\
  \n    \e[1m-maxfl\e[0m\n        Maximum number of flanking residues for pattern\
  \ assembly.\n\n        This parameter is passed to the program \e[33mpattern-assembly\e\
  [0m.\n\n    \e[1m-match\e[0m\n        Minimum number of matching residues for pattern\
  \ assembly.\n\n        This parameter is passed to the program \e[33mpattern-assembly\e\
  [0m.\n\n    \e[1m-weight\e[0m\n        Minimum matching weight for pattern assembly.\n\
  \n        This parameter is passed to the program \e[33mpattern-assembly\e[0m.\n\
  \n    \e[1m-max_asmb_size\e[0m\n        Maximum assembly size (number of patterns\
  \ per assembly).\n\n        This parameter is passed to the program \e[33mpattern-assembly\e\
  [0m.\n\n    \e[1m-max_asmb_width\e[0m\n        Maximum assembly width.\n\n     \
  \   This parameter is passed to the program \e[33mpattern-assembly\e[0m.\n\n   \
  \ \e[1m-asmb assembly_file\e[0m\n        Assembly file. As an alternative to the\
  \ pattern file, the patterns\n        can be provided in the form of the result\
  \ of pattern-assembly.\n\n    \e[1m-1str|-2str\e[0m\n        Strands\n\n       \
  \ \e[1m-1str\e[0m use a single strand to build the motifs\n        \e[1m-2str\e\
  [0m use both strands to build the motifs\n\n    \e[1m-o output_basename\e[0m\n \
  \       The program exports several files, whose name is specified by the\n    \
  \    output basename, followed by an extension.\n\n    \e[1m-prefix matrix_prefix\e\
  [0m\n    \e[1m-cluster matrix_clust_option\e[0m\n        Run \e[33mmatrix-clustering\e\
  [0m to filter out redundant matrices, on the\n        significance matrices (\e\
  [33m-cluster sig\e[0m), on the count matrices\n        (\e[33m-cluster counts\e\
  [0m), on both (\e[33m-cluster both\e[0m) or none (\e[33m-cluster none\e[0m).\n\n\
  \        Applying the filtering at the level of the significance matrices\n    \
  \    reduces the scanning time, since the count matrices are built by\n        scanning\
  \ sequences with each significance matrix. However it might\n        result in a\
  \ loss of sensitivity, some motif being absorbed by other\n        ones.\n\n   \
  \ \e[1m-sites\e[0m\n        Export the sites used to build the count matrix. These\
  \ sites can be\n        used for example to draw a sequence logo.\n\n        The\
  \ sites are exported in various formats:\n\n        a separate fasta file, after\
  \ each count matrix;\n        \"BS\" fields in the transfac-formatted output matrices.\n\
  \n    \e[1m-collect_method\e[0m\n        Method for converting sig matrices into\
  \ count matrices.\n\n        Supported methods:\n\n        \e[33mmatrix-scan-quick\e\
  [0m (Default)\n            Same principle as \e[33mmatrix-scan\e[0m. The program\
  \ \e[33mmatrix-scan-quick\e[0m is\n            100 times faster, but does not compute\
  \ the P-values. For the\n            time being, an arbitrary threshold is imposed\
  \ on the weight\n            score (w >= 7).\n\n        \e[33minfo-gibbs\e[0m (slow)\n\
  \            The significance matrices (obtained from \e[33mpattern-assembly\e[0m\
  \ are\n            used as seeds by \e[33minfo-gibbs\e[0m, which runs a few iterations\
  \ of\n            gibbs sampling (default: 3).\n\n        \e[33mmatrix-scan\e[0m\
  \ (slow, obsolete)\n            The significance matrices are used to collect from\
  \ the input\n            sequences all the sites passing a given P-value threshold.\
  \ Those\n            sites are then aligned to buil count matrices. This was the\n\
  \            original conversion method, but presents some drawbacks.\n        \
  \    Firstly, the original implementation of matrix-scan is quite low\n        \
  \    (2009 version). Secondly, some matrices may fail to return any\n          \
  \  site below the P-value threshold. We therefore recommend to use\n           \
  \ the info-gibbs option. =item \e[33mmatrix-scan\e[0m (slow, obsolete)\n\n    \e\
  [1m-gibbs_msps\e[0m\n        Mean number of sites per sequences passed to info-gibbs\
  \ for\n        converting significance matrices into count matrices. This parameter\n\
  \        is particularly important and has to be adapted to the sequence\n     \
  \   sets. For example, for yeast promoters, one typically expects 2\n        sites\
  \ per sequence on average. For sequence fragments obtained from\n        ChIP-chip\
  \ or ChIP-seq datasets (typically sveral hundreds fo\n        fragments, ~200bp\
  \ per fragment), it might be safer to test values\n        lower than 1, since sequences\
  \ are expected to generally contain 1\n        site, and sometimes contain none.\n\
  \n    \e[1m-gibbs_iter\e[0m\n        Number of iterations for info-gibbs.\n\n  \
  \  \e[1m-flanks\e[0m\n        Number of flanking residues to be added on each side\
  \ of the\n        significance matrix in order to extend the motif size.\n\n   \
  \ \e[1m-min_weight\e[0m\n        Minimal weight\n\n    \e[1m-gibbs_final\e[0m\n\
  \        Run the final cycle with info-gibbs to collect the best sites.\n\n    \e\
  [1m-logo\e[0m\n        Export the sequence logos representing the count matrix.\n\
  \n    \e[1m-links\e[0m\n        Return HTML links in the convert-matrix result,\
  \ to send the matrices\n        to external tools (TOMTOM) for comparigon with motif\
  \ collections.\n\n    \e[1m-scan_param\e[0m\n        The next argument is passed\
  \ to matrix-scan (this will raise an error\n        if these arguments are not supported).\n\
  \n        Example: -scan_param '-uth Pval 1e-3 -uth rank 40' will only return\n\
  \        the 40 top ranking sites, with a maximal Pvalue of 1e-3.\n\n        Any\
  \ other parameter supported by matrix-scan can be passed in the\n        same way.\
  \ The option can be used iteratively on a command line to\n        add up various\
  \ parameters. Example: -scan_param '-uth Pval 1e-3'\n        -scan_param '-uth rank\
  \ 40' [...]\n\n        If no parameters are specified, the Pval is set to 1e-4 by\
  \ default,\n        without limit on the number of sites.\n\n\e[1mSEE ALSO\e[0m\n\
  \  \e[1m\e[33mpattern-assembly\e[0m\e[0m\n    The program \e[33mpattern-assembly\e\
  [0m is used to assemble patterns according to\n    their similarities.\n\n  \e[1m\e\
  [33mconvert-matrix\e[0m\e[0m\n    The program \e[33mconvert-matrix\e[0m is used\
  \ to convert the collected sites into\n    PSSM.\n\n  \e[1m\e[33mmatrix-scan\e[0m\e\
  [0m\n    The program \e[33mmatrix-scan\e[0m is used to build the count matrix from\
  \ the\n    significance matrix.\n\n\e[1mWISH LIST\e[0m\n    \e[1m-iter\e[0m\n  \
  \      Number of iterations for the expectation-maximization cycle (collect\n  \
  \      sites with matrix and update matrix from collected sites). Default:\n   \
  \     1.\n\n"
generated_using:
- -h
