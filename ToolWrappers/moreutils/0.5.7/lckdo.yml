!Command
command:
- lckdo
positional:
- !Positional
  optional: false
  position: 0
  name: lockfile
  description: ''
- !Positional
  optional: false
  position: 1
  name: program
  description: ''
- !Positional
  optional: true
  position: 2
  name: arguments
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -w
  description: "- if the lock is already held by another process,\nwait for it to\
    \ complete instead of failing immediately"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -W
  description: '- the same as -w but wait not more than sec seconds'
  args: !SimpleFlagArg
    name: sec
- !Flag
  optional: true
  synonyms:
  - -e
  description: "- execute the program directly, no fork/wait\n(keeps extra open file\
    \ descriptor)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -E
  description: '- set the fd# to keep open in -e case (implies -e)'
  args: !SimpleFlagArg
    name: nnn
- !Flag
  optional: true
  synonyms:
  - -n
  description: '- do not create the lock file if it does not exist'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: '- produce no output if lock is already held'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: '- lock in shared (read) mode'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  description: '- lock in exclusive (write) mode (default)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: "- test for lock existence (just prints pid if any with -q)\n(implies\
    \ -n)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "lckdo: execute a program with a lock set.\nUsage: lckdo [options] lockfile\
  \ program [arguments]\nwhere options are:\n -w - if the lock is already held by\
  \ another process,\n   wait for it to complete instead of failing immediately\n\
  \ -W sec - the same as -w but wait not more than sec seconds\n -e - execute the\
  \ program directly, no fork/wait\n   (keeps extra open file descriptor)\n -E nnn\
  \ - set the fd# to keep open in -e case (implies -e)\n -n - do not create the lock\
  \ file if it does not exist\n -q - produce no output if lock is already held\n -s\
  \ - lock in shared (read) mode\n -x - lock in exclusive (write) mode (default)\n\
  \ -t - test for lock existence (just prints pid if any with -q)\n   (implies -n)\n"
generated_using: []
docker_image:
